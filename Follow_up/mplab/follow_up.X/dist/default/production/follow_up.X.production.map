Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\follow_up.X.production.sym \
  --cmf=dist/default/production\follow_up.X.production.cmf -z -Q16F1823 \
  -oC:\Users\Admin\AppData\Local\Temp\s4cg.2 \
  -Mdist/default/production/follow_up.X.production.map -E1 -ver=XC8 \
  -ASTACK=0204Dh-0204fh -pstack=STACK -ACODE=00h-07FFh -ASTRCODE=00h-07FFh \
  -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 -AENTRY=00h-0FFhx8 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0BFh \
  -ABIGRAM=02000h-0206Fh -ARAM=020h-06Fh,0A0h-0BFh \
  -AABS1=020h-07Fh,0A0h-0BFh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-016Fh -ASFR3=0180h-01EFh -ASFR4=0200h-026Fh \
  -ASFR5=0280h-02EFh -ASFR6=0300h-036Fh -ASFR7=0380h-03EFh \
  -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh -ASFR10=0500h-056Fh \
  -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh -ASFR13=0680h-06EFh \
  -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh -ASFR16=0800h-086Fh \
  -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh -ASFR19=0980h-09EFh \
  -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh -ASFR22=0B00h-0B6Fh \
  -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh -ASFR25=0C80h-0CEFh \
  -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh -ASFR28=0E00h-0E6Fh \
  -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh -ASFR31=0F80h-0FEFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=08007h-08008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/0F000h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Admin\AppData\Local\Temp\s4cg.obj \
  dist/default/production\follow_up.X.production.obj 

Object code version is 3.11

Machine type is 16F1823



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Admin\AppData\Local\Temp\s4cg.obj
                end_init                             33       33        1        8       0
                reset_vec                             0        0        1        0       0
                config                             8007     8007        2    1000E       0
dist/default/production\follow_up.X.production.obj
                cinit                                34       34       14        8       0
                intentry                              4        4       2F        8       0
                text20                              446      446        A        8       0
                text19                              20F      20F       63        8       0
                text17                              38E      38E       21        8       0
                text16                              45E      45E        6      8B0       0
                text15                              41E      41E        F        8       0
                text14                              40F      40F        F        8       0
                text13                              43B      43B        B        8       0
                text12                              42D      42D        E        8       0
                text11                               48       48       FC        8       0
                text10                              308      308       3E        8       0
                text9                               144      144       66        8       0
                text8                               272      272       53        8       0
                text7                               36D      36D       21        8       0
                text6                               3E7      3E7       19        8       0
                text5                               1AA      1AA       65        8       0
                text4                               3AF      3AF       1F        8       0
                text3                               3CE      3CE       19        8       0
                text2                               346      346       27        8       0
                text1                               400      400        F        8       0
                maintext                            2C5      2C5       43        8       0
                cstackBANK0                          20       20       3E       20       1
                cstackCOMMON                         70       70        9       70       1
                clrtext                             458      458        6      8B0       0
                bssBANK1                             A0       A0       20       A0       1
                dataBANK0                            6C       6C        1       20       1
                bssBANK0                             5E       5E        E       20       1
                dataCOMMON                           7A       7A        1       70       1
                bssCOMMON                            79       79        1       70       1
                stringtext                          450      450        8      8A0       0
                idataBANK0                          465      465        1      8B0       0
                idataCOMMON                         464      464        1      8B0       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             33       33        1         0
                cinit                                34       34       14         0
                intentry                              4        4       2F         0
                reset_vec                             0        0        1         0
                text20                              446      446        A         0
                text19                              20F      20F       63         0
                text17                              38E      38E       21         0
                text16                              45E      45E        6         0
                text15                              41E      41E        F         0
                text14                              40F      40F        F         0
                text13                              43B      43B        B         0
                text12                              42D      42D        E         0
                text11                               48       48       FC         0
                text10                              308      308       3E         0
                text9                               144      144       66         0
                text8                               272      272       53         0
                text7                               36D      36D       21         0
                text6                               3E7      3E7       19         0
                text5                               1AA      1AA       65         0
                text4                               3AF      3AF       1F         0
                text3                               3CE      3CE       19         0
                text2                               346      346       27         0
                text1                               400      400        F         0
                maintext                            2C5      2C5       43         0
                clrtext                             458      458        6         0
                idataBANK0                          465      465        1         0
                idataCOMMON                         464      464        1         0

        CLASS   STRCODE        
                stringtext                          450      450        8         0

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                dataCOMMON                           7A       7A        1         1
                bssCOMMON                            79       79        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       3E         1
                dataBANK0                            6C       6C        1         1
                bssBANK0                             5E       5E        E         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       20         1

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          

        CLASS   BANK6          

        CLASS   BANK5          

        CLASS   BANK4          

        CLASS   BANK3          

        CLASS   BANK2          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  00044C  000450         8       0  CODE        2
                cstackBANK0                    000020  00004D  00006D        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                bssBANK1                       0000A0  000020  0000C0        A0       1  BANK1       1
                stringtext                     000450  000008  000458       8A0       0  STRCODE     2
                clrtext                        000458  00000E  000466       8B0       0  CODE        2
                config                         008007  000002  008009     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0006D-0006F               3           1
        BIGRAM           02000-0206F              70           1
        CODE             00001-00003               3           2
                         00466-007FF             39A
        COMMON           0007B-0007D               3           1
        CONST            00001-00003               3           2
                         00466-007FF             100
        EEDATA           0F000-0F0FF             100           2
        ENTRY            00001-00003               3           2
                         00466-007FF             100
        IDLOC            08000-08003               4           2
        RAM              0006D-0006F               3           1
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0016F              70           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-001EF              70           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0026F              70           1
        SFR5             00280-002EF              70           1
        SFR6             00300-0036F              70           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            0204D-0204F               3           1
        STRCODE          00001-00003               3           2
                         00466-007FF             39A
        STRING           00001-00003               3           2
                         00466-007FF             100

                                  Symbol Table

?_crc_calculate                   cstackBANK0  00020
ISR@byte                          cstackCOMMON 00078
ISR@value                         cstackCOMMON 00077
_ANSELAbits                       (abs)        0018C
_ANSELCbits                       (abs)        0018E
_INTCONbits                       (abs)        0000B
_ISR                              intentry     00004
_InitIO                           text17       0038E
_InitInputDataInt                 text16       0045E
_OPTION_REGbits                   (abs)        00095
_RA0                              (abs)        00060
_RA1                              (abs)        00061
_RA4                              (abs)        00064
_RA5                              (abs)        00065
_RC0                              (abs)        00070
_RC1                              (abs)        00071
_RC2                              (abs)        00072
_RC3                              (abs)        00073
_RC4                              (abs)        00074
_RC5                              (abs)        00075
_TRISAbits                        (abs)        0008C
_TRISCbits                        (abs)        0008E
__CFG_BOREN$ON                    (abs)        00000
__CFG_BORV$LO                     (abs)        00000
__CFG_CLKOUTEN$OFF                (abs)        00000
__CFG_CP$ON                       (abs)        00000
__CFG_CPD$ON                      (abs)        00000
__CFG_FCMEN$ON                    (abs)        00000
__CFG_FOSC$INTOSC                 (abs)        00000
__CFG_IESO$ON                     (abs)        00000
__CFG_LVP$ON                      (abs)        00000
__CFG_MCLRE$OFF                   (abs)        00000
__CFG_PLLEN$ON                    (abs)        00000
__CFG_PWRTE$OFF                   (abs)        00000
__CFG_STVREN$ON                   (abs)        00000
__CFG_WDTE$OFF                    (abs)        00000
__CFG_WRT$OFF                     (abs)        00000
__Habs1                           abs1         00000
__Hbank0                          bank0        00000
__Hbank1                          bank1        00000
__Hbank10                         bank10       00000
__Hbank11                         bank11       00000
__Hbank12                         bank12       00000
__Hbank13                         bank13       00000
__Hbank14                         bank14       00000
__Hbank15                         bank15       00000
__Hbank16                         bank16       00000
__Hbank17                         bank17       00000
__Hbank18                         bank18       00000
__Hbank19                         bank19       00000
__Hbank2                          bank2        00000
__Hbank20                         bank20       00000
__Hbank21                         bank21       00000
__Hbank22                         bank22       00000
__Hbank23                         bank23       00000
__Hbank24                         bank24       00000
__Hbank25                         bank25       00000
__Hbank26                         bank26       00000
__Hbank27                         bank27       00000
__Hbank28                         bank28       00000
__Hbank29                         bank29       00000
__Hbank3                          bank3        00000
__Hbank30                         bank30       00000
__Hbank31                         bank31       00000
__Hbank4                          bank4        00000
__Hbank5                          bank5        00000
__Hbank6                          bank6        00000
__Hbank7                          bank7        00000
__Hbank8                          bank8        00000
__Hbank9                          bank9        00000
__Hbigram                         bigram       00000
__HbssBANK0                       bssBANK0     00000
__HbssBANK1                       bssBANK1     00000
__HbssCOMMON                      bssCOMMON    00000
__Hcinit                          cinit        00048
__Hclrtext                        clrtext      00000
__Hcode                           code         00000
__Hcommon                         common       00000
__Hconfig                         config       08009
__HcstackBANK0                    cstackBANK0  00000
__HcstackCOMMON                   cstackCOMMON 00000
__HdataBANK0                      dataBANK0    00000
__HdataCOMMON                     dataCOMMON   00000
__Heeprom_data                    eeprom_data  00000
__Hend_init                       end_init     00034
__Hfunctab                        functab      00000
__HidataBANK0                     idataBANK0   00000
__HidataCOMMON                    idataCOMMON  00000
__Hidloc                          idloc        00000
__Hinit                           init         00033
__Hintentry                       intentry     00033
__Hmaintext                       maintext     00000
__Hpowerup                        powerup      00000
__Hram                            ram          00000
__Hreset_vec                      reset_vec    00001
__Hsfr0                           sfr0         00000
__Hsfr1                           sfr1         00000
__Hsfr10                          sfr10        00000
__Hsfr11                          sfr11        00000
__Hsfr12                          sfr12        00000
__Hsfr13                          sfr13        00000
__Hsfr14                          sfr14        00000
__Hsfr15                          sfr15        00000
__Hsfr16                          sfr16        00000
__Hsfr17                          sfr17        00000
__Hsfr18                          sfr18        00000
__Hsfr19                          sfr19        00000
__Hsfr2                           sfr2         00000
__Hsfr20                          sfr20        00000
__Hsfr21                          sfr21        00000
__Hsfr22                          sfr22        00000
__Hsfr23                          sfr23        00000
__Hsfr24                          sfr24        00000
__Hsfr25                          sfr25        00000
__Hsfr26                          sfr26        00000
__Hsfr27                          sfr27        00000
__Hsfr28                          sfr28        00000
__Hsfr29                          sfr29        00000
__Hsfr3                           sfr3         00000
__Hsfr30                          sfr30        00000
__Hsfr31                          sfr31        00000
__Hsfr4                           sfr4         00000
__Hsfr5                           sfr5         00000
__Hsfr6                           sfr6         00000
__Hsfr7                           sfr7         00000
__Hsfr8                           sfr8         00000
__Hsfr9                           sfr9         00000
__Hspace_0                        (abs)        08009
__Hspace_1                        (abs)        000C0
__Hspace_2                        (abs)        00000
__Hspace_3                        (abs)        00000
__Hstack                          stack        00000
__Hstrings                        strings      00000
__Hstringtext                     stringtext   00000
__Htext                           text         00000
__Labs1                           abs1         00000
__Lbank0                          bank0        00000
__Lbank1                          bank1        00000
__Lbank10                         bank10       00000
__Lbank11                         bank11       00000
__Lbank12                         bank12       00000
__Lbank13                         bank13       00000
__Lbank14                         bank14       00000
__Lbank15                         bank15       00000
__Lbank16                         bank16       00000
__Lbank17                         bank17       00000
__Lbank18                         bank18       00000
__Lbank19                         bank19       00000
__Lbank2                          bank2        00000
__Lbank20                         bank20       00000
__Lbank21                         bank21       00000
__Lbank22                         bank22       00000
__Lbank23                         bank23       00000
__Lbank24                         bank24       00000
__Lbank25                         bank25       00000
__Lbank26                         bank26       00000
__Lbank27                         bank27       00000
__Lbank28                         bank28       00000
__Lbank29                         bank29       00000
__Lbank3                          bank3        00000
__Lbank30                         bank30       00000
__Lbank31                         bank31       00000
__Lbank4                          bank4        00000
__Lbank5                          bank5        00000
__Lbank6                          bank6        00000
__Lbank7                          bank7        00000
__Lbank8                          bank8        00000
__Lbank9                          bank9        00000
__Lbigram                         bigram       00000
__LbssBANK0                       bssBANK0     00000
__LbssBANK1                       bssBANK1     00000
__LbssCOMMON                      bssCOMMON    00000
__Lcinit                          cinit        00034
__Lclrtext                        clrtext      00000
__Lcode                           code         00000
__Lcommon                         common       00000
__Lconfig                         config       08007
__LcstackBANK0                    cstackBANK0  00000
__LcstackCOMMON                   cstackCOMMON 00000
__LdataBANK0                      dataBANK0    00000
__LdataCOMMON                     dataCOMMON   00000
__Leeprom_data                    eeprom_data  00000
__Lend_init                       end_init     00033
__Lfunctab                        functab      00000
__LidataBANK0                     idataBANK0   00000
__LidataCOMMON                    idataCOMMON  00000
__Lidloc                          idloc        00000
__Linit                           init         00033
__Lintentry                       intentry     00004
__Lmaintext                       maintext     00000
__Lpowerup                        powerup      00000
__Lram                            ram          00000
__Lreset_vec                      reset_vec    00000
__Lsfr0                           sfr0         00000
__Lsfr1                           sfr1         00000
__Lsfr10                          sfr10        00000
__Lsfr11                          sfr11        00000
__Lsfr12                          sfr12        00000
__Lsfr13                          sfr13        00000
__Lsfr14                          sfr14        00000
__Lsfr15                          sfr15        00000
__Lsfr16                          sfr16        00000
__Lsfr17                          sfr17        00000
__Lsfr18                          sfr18        00000
__Lsfr19                          sfr19        00000
__Lsfr2                           sfr2         00000
__Lsfr20                          sfr20        00000
__Lsfr21                          sfr21        00000
__Lsfr22                          sfr22        00000
__Lsfr23                          sfr23        00000
__Lsfr24                          sfr24        00000
__Lsfr25                          sfr25        00000
__Lsfr26                          sfr26        00000
__Lsfr27                          sfr27        00000
__Lsfr28                          sfr28        00000
__Lsfr29                          sfr29        00000
__Lsfr3                           sfr3         00000
__Lsfr30                          sfr30        00000
__Lsfr31                          sfr31        00000
__Lsfr4                           sfr4         00000
__Lsfr5                           sfr5         00000
__Lsfr6                           sfr6         00000
__Lsfr7                           sfr7         00000
__Lsfr8                           sfr8         00000
__Lsfr9                           sfr9         00000
__Lspace_0                        (abs)        00000
__Lspace_1                        (abs)        00000
__Lspace_2                        (abs)        00000
__Lspace_3                        (abs)        00000
__Lstack                          stack        00000
__Lstrings                        strings      00000
__Lstringtext                     stringtext   00000
__Ltext                           text         00000
__S0                              (abs)        08009
__S1                              (abs)        000C0
__S2                              (abs)        00000
__S3                              (abs)        00000
___int_sp                         stack        00000
___latbits                        (abs)        00000
___sp                             stack        00000
__end_of_ISR                      intentry     00033
__end_of_InitIO                   text17       003AF
__end_of_InitInputDataInt         text16       00464
__end_of__initialization          cinit        00045
__end_of_compose                  text8        002C5
__end_of_crc_calculate            text9        001AA
__end_of_create_RGB_DATA_RQT_CMD  text6        00400
__end_of_create_cmd               text7        0038E
__end_of_get_distance             text15       0042D
__end_of_get_minus_index          text14       0041E
__end_of_get_msg                  text10       00346
__end_of_get_msg_index            text11       00144
__end_of_get_next_index           text13       00446
__end_of_get_plus_index           text12       0043B
__end_of_main                     maintext     00308
__end_of_receive_input            text19       00272
__end_of_send_RGB_DATA_RQT_CMD    text1        0040F
__end_of_send_byte                text4        003CE
__end_of_send_half_byte           text5        0020F
__end_of_send_msg                 text2        0036D
__end_of_send_string              text3        003E7
__end_of_start_mark               stringtext   00454
__end_of_stop_mark                stringtext   00458
__end_ofi1_get_next_index         text20       00450
__initialization                  cinit        00034
__pbssBANK0                       bssBANK0     0005E
__pbssBANK1                       bssBANK1     000A0
__pbssCOMMON                      bssCOMMON    00079
__pcstackBANK0                    cstackBANK0  00020
__pcstackCOMMON                   cstackCOMMON 00070
__pdataBANK0                      dataBANK0    0006C
__pdataCOMMON                     dataCOMMON   0007A
__pidataBANK0                     idataBANK0   00465
__pidataCOMMON                    idataCOMMON  00464
__pintentry                       intentry     00004
__pmaintext                       maintext     002C5
__pstringtext                     stringtext   00450
__ptext1                          text1        00400
__ptext10                         text10       00308
__ptext11                         text11       00048
__ptext12                         text12       0042D
__ptext13                         text13       0043B
__ptext14                         text14       0040F
__ptext15                         text15       0041E
__ptext16                         text16       0045E
__ptext17                         text17       0038E
__ptext19                         text19       0020F
__ptext2                          text2        00346
__ptext20                         text20       00446
__ptext3                          text3        003CE
__ptext4                          text4        003AF
__ptext5                          text5        001AA
__ptext6                          text6        003E7
__ptext7                          text7        0036D
__ptext8                          text8        00272
__ptext9                          text9        00144
__size_of_ISR                     (abs)        00000
__size_of_InitIO                  (abs)        00000
__size_of_InitInputDataInt        (abs)        00000
__size_of_compose                 (abs)        00000
__size_of_crc_calculate           (abs)        00000
__size_of_create_RGB_DATA_RQT_CMD (abs)        00000
__size_of_create_cmd              (abs)        00000
__size_of_get_distance            (abs)        00000
__size_of_get_minus_index         (abs)        00000
__size_of_get_msg                 (abs)        00000
__size_of_get_msg_index           (abs)        00000
__size_of_get_next_index          (abs)        00000
__size_of_get_plus_index          (abs)        00000
__size_of_main                    (abs)        00000
__size_of_receive_input           (abs)        00000
__size_of_send_RGB_DATA_RQT_CMD   (abs)        00000
__size_of_send_byte               (abs)        00000
__size_of_send_half_byte          (abs)        00000
__size_of_send_msg                (abs)        00000
__size_of_send_string             (abs)        00000
__size_ofi1_get_next_index        (abs)        00000
_buffer_rcv                       bssBANK1     000A0
_compose                          text8        00272
_crc_calculate                    text9        00144
_create_RGB_DATA_RQT_CMD          text6        003E7
_create_cmd                       text7        0036D
_end_index_rcv                    bssCOMMON    00079
_get_distance                     text15       0041E
_get_minus_index                  text14       0040F
_get_msg                          text10       00308
_get_msg_index                    text11       00048
_get_next_index                   text13       0043B
_get_plus_index                   text12       0042D
_low_half_rcv                     dataCOMMON   0007A
_main                             maintext     002C5
_msg                              bssBANK0     00064
_pmsg                             dataBANK0    0006C
_receive_input                    text19       0020F
_send_RGB_DATA_RQT_CMD            text1        00400
_send_byte                        text4        003AF
_send_half_byte                   text5        001AA
_send_msg                         text2        00346
_send_string                      text3        003CE
_start_index_rcv                  bssBANK0     00063
_start_mark                       stringtext   00450
_stop_mark                        stringtext   00454
btemp                             (abs)        0007E
clear_ram0                        clrtext      00458
compose@cmd                       cstackBANK0  0002C
compose@data                      cstackBANK0  0002D
compose@datalen                   cstackBANK0  0002E
compose@from                      cstackBANK0  00029
compose@len                       cstackBANK0  00031
compose@msgid                     cstackBANK0  0002B
compose@pmsg                      cstackBANK0  00033
compose@to                        cstackBANK0  0002A
crc_calculate@crc                 cstackBANK0  00025
crc_calculate@i                   cstackBANK0  00027
crc_calculate@pmsg                cstackBANK0  00028
create_RGB_DATA_RQT_CMD@pconn     cstackBANK0  00044
create_RGB_DATA_RQT_CMD@pmsg      cstackBANK0  00040
create_RGB_DATA_RQT_CMD@prqt      cstackBANK0  0003F
create_cmd@cmd_data               cstackBANK0  00036
create_cmd@cmd_data_len           cstackBANK0  00037
create_cmd@cmd_id                 cstackBANK0  00034
create_cmd@msg_id                 cstackBANK0  00035
create_cmd@pconn                  cstackBANK0  0003E
create_cmd@pmsg                   cstackBANK0  00038
end_of_initialization             cinit        00045
get_distance@end_index            cstackBANK0  00020
get_distance@start_index          cstackBANK0  00021
get_minus_index@index             cstackBANK0  00021
get_minus_index@sub               cstackBANK0  00020
get_msg@end_index                 cstackBANK0  0002E
get_msg@i                         cstackBANK0  0002C
get_msg@pmsg                      cstackBANK0  0002B
get_msg@pstr                      cstackBANK0  0002A
get_msg@start_index               cstackBANK0  0002D
get_msg@temp                      cstackBANK0  0002F
get_msg_index@end_index           cstackBANK0  00023
get_msg_index@i                   cstackBANK0  00027
get_msg_index@start_index         cstackBANK0  00026
get_next_index@index              cstackBANK0  00020
get_plus_index@add                cstackBANK0  00020
get_plus_index@index              cstackBANK0  00022
i1_get_next_index                 text20       00446
i1get_next_index@index            cstackCOMMON 00070
int$flags                         (abs)        0007E
intlevel0                         functab      00000
intlevel1                         functab      00000
intlevel2                         functab      00000
intlevel3                         functab      00000
intlevel4                         functab      00000
intlevel5                         functab      00000
ltemp                             (abs)        0007E
ltemp0                            (abs)        0007E
ltemp1                            (abs)        00082
ltemp2                            (abs)        00086
ltemp3                            (abs)        00080
main@conn                         cstackBANK0  00057
main@count                        cstackBANK0  0005C
main@recv                         cstackBANK0  00054
main@rqt                          cstackBANK0  00056
receive_input@byte1               cstackCOMMON 00073
receive_input@byte2               cstackCOMMON 00074
receive_input@value               cstackCOMMON 00072
reset_vec                         reset_vec    00000
send_RGB_DATA_RQT_CMD@msg         cstackBANK0  00049
send_RGB_DATA_RQT_CMD@pconn       cstackBANK0  00048
send_RGB_DATA_RQT_CMD@prqt        cstackBANK0  00045
send_byte@c                       cstackBANK0  00026
send_half_byte@byte               cstackBANK0  00023
send_half_byte@low                cstackBANK0  00020
send_half_byte@value              cstackBANK0  00022
send_msg@pmsg                     cstackBANK0  0002F
send_msg@s                        cstackBANK0  0002E
send_string@i                     cstackBANK0  0002C
send_string@len                   cstackBANK0  00029
send_string@str                   cstackBANK0  00027
stackhi                           (abs)        0204F
stacklo                           (abs)        0204D
start                             init         00033
start_initialization              cinit        00034
ttemp                             (abs)        0007E
ttemp0                            (abs)        0007E
ttemp1                            (abs)        00081
ttemp2                            (abs)        00084
ttemp3                            (abs)        00087
ttemp4                            (abs)        0007F
wtemp                             (abs)        0007E
wtemp0                            (abs)        0007E
wtemp1                            (abs)        00080
wtemp2                            (abs)        00082
wtemp3                            (abs)        00084
wtemp4                            (abs)        00086
wtemp5                            (abs)        00088
wtemp6                            (abs)        0007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 88 in file "follow_up.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  conn            5   55[BANK0 ] struct .
  count           2   60[BANK0 ] int 
  recv            2   52[BANK0 ] int 
  rqt             1   54[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0      10       0
      Temps:          0       3       0
      Totals:         0      13       0
Total ram usage:       13 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_InitIO
		_InitInputDataInt
		_get_msg
		_send_RGB_DATA_RQT_CMD
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _send_RGB_DATA_RQT_CMD *****************
 Defined at:
		line 26 in file "rgb_data.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> main@conn(5), 
  prqt            1   37[BANK0 ] PTR const struct .
		 -> main@rqt(1), 
 Auto vars:     Size  Location     Type
  pconn           1   40[BANK0 ] PTR struct .
		 -> main@conn(5), 
  msg             8   41[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0       9       0
      Temps:          0       2       0
      Totals:         0      12       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_create_RGB_DATA_RQT_CMD
		_send_msg
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _send_msg *****************
 Defined at:
		line 51 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(8), 
 Auto vars:     Size  Location     Type
  pmsg            1   15[BANK0 ] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(8), 
  s               1   14[BANK0 ] PTR unsigned char 
		 -> send_RGB_DATA_RQT_CMD@msg(8), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       2       0
      Temps:          0       1       0
      Totals:         0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_send_string
 This function is called by:
		_send_RGB_DATA_RQT_CMD
 This function uses a non-reentrant model


 *************** function _send_string *****************
 Defined at:
		line 29 in file "packet.h"
 Parameters:    Size  Location     Type
  str             2    7[BANK0 ] PTR unsigned char 
		 -> send_RGB_DATA_RQT_CMD@msg(8), stop_mark(4), start_mark(4), 
  len             1    9[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  i               1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       3       0
      Locals:         0       1       0
      Temps:          0       2       0
      Totals:         0       6       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_send_byte
 This function is called by:
		_send_msg
 This function uses a non-reentrant model


 *************** function _send_byte *****************
 Defined at:
		line 20 in file "packet.h"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       1       0
      Temps:          0       2       0
      Totals:         0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_send_half_byte
 This function is called by:
		_send_string
 This function uses a non-reentrant model


 *************** function _send_half_byte *****************
 Defined at:
		line 14 in file "packet.h"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
  low             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  value           1    2[BANK0 ] unsigned char 
  byte            1    3[BANK0 ] PTR struct .
		 -> send_half_byte@value(1), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0       2       0
      Temps:          0       1       0
      Totals:         0       4       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_send_byte
 This function uses a non-reentrant model


 *************** function _create_RGB_DATA_RQT_CMD *****************
 Defined at:
		line 22 in file "rgb_data.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> main@conn(5), 
  prqt            1   31[BANK0 ] PTR const struct .
		 -> main@rqt(1), 
  pmsg            1   32[BANK0 ] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(8), 
 Auto vars:     Size  Location     Type
  pconn           1   36[BANK0 ] PTR struct .
		 -> main@conn(5), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       2       0
      Locals:         0       1       0
      Temps:          0       3       0
      Totals:         0       6       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_create_cmd
 This function is called by:
		_send_RGB_DATA_RQT_CMD
 This function uses a non-reentrant model


 *************** function _create_cmd *****************
 Defined at:
		line 27 in file "cmd.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> main@conn(5), 
  cmd_id          1   20[BANK0 ] unsigned char 
  msg_id          1   21[BANK0 ] unsigned char 
  cmd_data        1   22[BANK0 ] PTR const void 
		 -> main@rqt(1), 
  cmd_data_len    1   23[BANK0 ] unsigned char 
  pmsg            1   24[BANK0 ] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(8), 
 Auto vars:     Size  Location     Type
  pconn           1   30[BANK0 ] PTR struct .
		 -> main@conn(5), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       5       0
      Locals:         0       1       0
      Temps:          0       5       0
      Totals:         0      11       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_compose
 This function is called by:
		_create_RGB_DATA_RQT_CMD
 This function uses a non-reentrant model


 *************** function _compose *****************
 Defined at:
		line 74 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(8), 
  from            1    9[BANK0 ] unsigned char 
  to              1   10[BANK0 ] unsigned char 
  msgid           1   11[BANK0 ] unsigned char 
  cmd             1   12[BANK0 ] unsigned char 
  data            1   13[BANK0 ] PTR unsigned char 
		 -> main@rqt(1), 
  datalen         1   14[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pmsg            1   19[BANK0 ] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(8), 
  len             2   17[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       6       0
      Locals:         0       3       0
      Temps:          0       2       0
      Totals:         0      11       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_crc_calculate
 This function is called by:
		_create_cmd
 This function uses a non-reentrant model


 *************** function _crc_calculate *****************
 Defined at:
		line 58 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(8), 
 Auto vars:     Size  Location     Type
  pmsg            1    8[BANK0 ] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(8), 
  i               1    7[BANK0 ] unsigned char 
  crc             2    5[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       2       0
      Locals:         0       4       0
      Temps:          0       3       0
      Totals:         0       9       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_compose
 This function uses a non-reentrant model


 *************** function _get_msg *****************
 Defined at:
		line 28 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> msg(8), 
 Auto vars:     Size  Location     Type
  pmsg            1   11[BANK0 ] PTR struct .
		 -> msg(8), 
  temp            1   15[BANK0 ] unsigned char 
  end_index       1   14[BANK0 ] unsigned char 
  start_index     1   13[BANK0 ] unsigned char 
  i               1   12[BANK0 ] unsigned char 
  pstr            1   10[BANK0 ] PTR unsigned char 
		 -> msg(8), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       6       0
      Temps:          0       2       0
      Totals:         0       8       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_get_distance
		_get_msg_index
		_get_next_index
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _get_msg_index *****************
 Defined at:
		line 82 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  start_index     1    wreg     PTR unsigned char 
		 -> get_msg@start_index(1), 
  end_index       1    3[BANK0 ] PTR unsigned char 
		 -> get_msg@end_index(1), 
 Auto vars:     Size  Location     Type
  start_index     1    6[BANK0 ] PTR unsigned char 
		 -> get_msg@start_index(1), 
  i               1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0       2       0
      Temps:          0       2       0
      Totals:         0       5       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_get_distance
		_get_minus_index
		_get_next_index
		_get_plus_index
 This function is called by:
		_get_msg
 This function uses a non-reentrant model


 *************** function _get_plus_index *****************
 Defined at:
		line 54 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
  add             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  index           1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0       1       0
      Temps:          0       1       0
      Totals:         0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
 This function uses a non-reentrant model


 *************** function _get_next_index *****************
 Defined at:
		line 29 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  index           1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       1       0
      Temps:          0       0       0
      Totals:         0       1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
		_get_msg
 This function uses a non-reentrant model


 *************** function _get_minus_index *****************
 Defined at:
		line 63 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
  sub             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  index           1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0       1       0
      Temps:          0       0       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
 This function uses a non-reentrant model


 *************** function _get_distance *****************
 Defined at:
		line 71 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  start_index     1    wreg     unsigned char 
  end_index       1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  start_index     1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0       1       0
      Temps:          0       0       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
		_get_msg
 This function uses a non-reentrant model


 *************** function _InitInputDataInt *****************
 Defined at:
		line 73 in file "follow_up.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitIO *****************
 Defined at:
		line 40 in file "follow_up.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 80 in file "follow_up.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  byte            1    8[COMMON] PTR struct .
		 -> ISR@value(1), 
  value           1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         2       0       0
      Temps:          2       0       0
      Totals:         4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_receive_input
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _receive_input *****************
 Defined at:
		line 40 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  value           1    2[COMMON] unsigned char 
  byte2           1    4[COMMON] PTR struct .
		 -> receive_input@value(1), 
  byte1           1    3[COMMON] PTR struct .
		 -> buffer_rcv(32), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         3       0       0
      Temps:          1       0       0
      Totals:         4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_get_next_index
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_get_next_index *****************
 Defined at:
		line 29 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  index           1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          0       0       0
      Totals:         1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_receive_input
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
msg.h
		_get_msg       		CODE           	0308	0000	63
		_send_msg      		CODE           	0346	0000	40
		_crc_calculate 		CODE           	0144	0000	103
		_compose       		CODE           	0272	0000	84

msg.h estimated size: 290

cmd.h
		_create_cmd    		CODE           	036D	0000	34

cmd.h estimated size: 34

packet.h
		_send_byte     		CODE           	03AF	0000	32
		_send_string   		CODE           	03CE	0000	26
		_send_half_byte		CODE           	01AA	0000	102

packet.h estimated size: 160

shared
		i1_get_next_index		CODE           	0446	0000	11
		_start_mark    		STRCODE        	0450	0000	5
		__initialization		CODE           	0034	0000	18
		_stop_mark     		STRCODE        	0454	0000	5

shared estimated size: 39

circle_buffer.h
		_get_distance  		CODE           	041E	0000	16
		_get_next_index		CODE           	043B	0000	12
		_get_minus_index		CODE           	040F	0000	16
		_receive_input 		CODE           	020F	0000	100
		_get_plus_index		CODE           	042D	0000	15
		_get_msg_index 		CODE           	0048	0000	253

circle_buffer.h estimated size: 412

follow_up.c
		_ISR           		CODE           	0004	0000	48
		_main          		CODE           	02C5	0000	68
		_InitInputDataInt		CODE           	045E	0000	7
		_InitIO        		CODE           	038E	0000	34

follow_up.c estimated size: 157

rgb_data.h
		_send_RGB_DATA_RQT_CMD		CODE           	0400	0000	16
		_create_RGB_DATA_RQT_CMD		CODE           	03E7	0000	26

rgb_data.h estimated size: 42

