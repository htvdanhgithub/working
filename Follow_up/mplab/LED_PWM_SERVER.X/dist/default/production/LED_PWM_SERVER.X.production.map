Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\LED_PWM_SERVER.X.production.sym \
  --cmf=dist/default/production\LED_PWM_SERVER.X.production.cmf -z \
  -Q16F1823 -oC:\Users\Admin\AppData\Local\Temp\s2mg.2 \
  -Mdist/default/production/LED_PWM_SERVER.X.production.map -E1 -ver=XC8 \
  -ASTACK=02044h-0206fh -pstack=STACK -ACODE=00h-07FFh -ASTRCODE=00h-07FFh \
  -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 -AENTRY=00h-0FFhx8 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0BFh \
  -ABIGRAM=02000h-0206Fh -ARAM=020h-06Fh,0A0h-0BFh \
  -AABS1=020h-07Fh,0A0h-0BFh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-016Fh -ASFR3=0180h-01EFh -ASFR4=0200h-026Fh \
  -ASFR5=0280h-02EFh -ASFR6=0300h-036Fh -ASFR7=0380h-03EFh \
  -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh -ASFR10=0500h-056Fh \
  -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh -ASFR13=0680h-06EFh \
  -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh -ASFR16=0800h-086Fh \
  -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh -ASFR19=0980h-09EFh \
  -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh -ASFR22=0B00h-0B6Fh \
  -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh -ASFR25=0C80h-0CEFh \
  -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh -ASFR28=0E00h-0E6Fh \
  -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh -ASFR31=0F80h-0FEFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=08007h-08008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/0F000h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Admin\AppData\Local\Temp\s2mg.obj \
  dist/default/production\LED_PWM_SERVER.X.production.obj 

Object code version is 3.11

Machine type is 16F1823



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Admin\AppData\Local\Temp\s2mg.obj
                end_init                             20       20        1        8       0
                reset_vec                             0        0        1        0       0
                config                             8007     8007        2    1000E       0
dist/default/production\LED_PWM_SERVER.X.production.obj
                cinit                                21       21       11        8       0
                intentry                              4        4       1C        8       0
                text12                               96       96       63        8       0
                text11                               F9       F9       52        8       0
                text10                              171      171       21        8       0
                text9                               1AD      1AD       1B        8       0
                text8                                32       32       64        8       0
                text7                               192      192       1B        8       0
                text6                               1C8      1C8       17        8       0
                text5                               14B      14B       26        8       0
                text4                               1F3      1F3        F        8       0
                text2                               1DF      1DF       14        8       0
                text1                               210      210        6      414       0
                maintext                            216      216        5      414       0
                cstackBANK0                          20       20       30       20       1
                cstackCOMMON                         70       70        E       70       1
                clrtext                             20A      20A        6      414       0
                dataBANK0                            60       60        4       20       1
                bssBANK0                             50       50       10       20       1
                stringtext                          202      202        8      404       0
                idataBANK0                          21B      21B        4      414       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             20       20        1         0
                cinit                                21       21       11         0
                intentry                              4        4       1C         0
                reset_vec                             0        0        1         0
                text12                               96       96       63         0
                text11                               F9       F9       52         0
                text10                              171      171       21         0
                text9                               1AD      1AD       1B         0
                text8                                32       32       64         0
                text7                               192      192       1B         0
                text6                               1C8      1C8       17         0
                text5                               14B      14B       26         0
                text4                               1F3      1F3        F         0
                text2                               1DF      1DF       14         0
                text1                               210      210        6         0
                maintext                            216      216        5         0
                clrtext                             20A      20A        6         0
                idataBANK0                          21B      21B        4         0

        CLASS   STRCODE        
                stringtext                          202      202        8         0

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       30         1
                dataBANK0                            60       60        4         1
                bssBANK0                             50       50       10         1

        CLASS   BANK1          

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          

        CLASS   BANK6          

        CLASS   BANK5          

        CLASS   BANK4          

        CLASS   BANK3          

        CLASS   BANK2          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  0001FE  000202         8       0  CODE        2
                cstackBANK0                    000020  000044  000064        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                stringtext                     000202  000008  00020A       404       0  STRCODE     2
                clrtext                        00020A  000015  00021F       414       0  CODE        2
                config                         008007  000002  008009     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00064-0006F               C           1
        BANK1            000A0-000BF              20           1
        BIGRAM           02000-0206F              70           1
        CODE             00001-00003               3           2
                         0021F-007FF             5E1
        CONST            00001-00003               3           2
                         0021F-007FF             100
        EEDATA           0F000-0F0FF             100           2
        ENTRY            00001-00003               3           2
                         0021F-007FF             100
        IDLOC            08000-08003               4           2
        RAM              00064-0006F               C           1
                         000A0-000BF              20
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0016F              70           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-001EF              70           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0026F              70           1
        SFR5             00280-002EF              70           1
        SFR6             00300-0036F              70           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            02044-0206F              2C           1
        STRCODE          00001-00003               3           2
                         0021F-007FF             5E1
        STRING           00001-00003               3           2
                         0021F-007FF             100

                                  Symbol Table

?_crc_calculate                   cstackCOMMON 00070
ISR@conn                          cstackBANK0  00048
ISR@rqt                           cstackBANK0  0004D
_ANSELAbits                       (abs)        0018C
_ANSELCbits                       (abs)        0018E
_INTCONbits                       (abs)        0000B
_ISR                              intentry     00004
_InitIO                           text2        001DF
_InitInputDataInt                 text1        00210
_OPTION_REGbits                   (abs)        00095
_RA0                              (abs)        00060
_RC2                              (abs)        00072
_RC3                              (abs)        00073
_RC4                              (abs)        00074
_RC5                              (abs)        00075
_TRISAbits                        (abs)        0008C
_TRISCbits                        (abs)        0008E
__CFG_BOREN$ON                    (abs)        00000
__CFG_BORV$LO                     (abs)        00000
__CFG_CLKOUTEN$OFF                (abs)        00000
__CFG_CP$ON                       (abs)        00000
__CFG_CPD$ON                      (abs)        00000
__CFG_FCMEN$ON                    (abs)        00000
__CFG_FOSC$INTOSC                 (abs)        00000
__CFG_IESO$ON                     (abs)        00000
__CFG_LVP$ON                      (abs)        00000
__CFG_MCLRE$OFF                   (abs)        00000
__CFG_PLLEN$ON                    (abs)        00000
__CFG_PWRTE$OFF                   (abs)        00000
__CFG_STVREN$ON                   (abs)        00000
__CFG_WDTE$OFF                    (abs)        00000
__CFG_WRT$OFF                     (abs)        00000
__Habs1                           abs1         00000
__Hbank0                          bank0        00000
__Hbank1                          bank1        00000
__Hbank10                         bank10       00000
__Hbank11                         bank11       00000
__Hbank12                         bank12       00000
__Hbank13                         bank13       00000
__Hbank14                         bank14       00000
__Hbank15                         bank15       00000
__Hbank16                         bank16       00000
__Hbank17                         bank17       00000
__Hbank18                         bank18       00000
__Hbank19                         bank19       00000
__Hbank2                          bank2        00000
__Hbank20                         bank20       00000
__Hbank21                         bank21       00000
__Hbank22                         bank22       00000
__Hbank23                         bank23       00000
__Hbank24                         bank24       00000
__Hbank25                         bank25       00000
__Hbank26                         bank26       00000
__Hbank27                         bank27       00000
__Hbank28                         bank28       00000
__Hbank29                         bank29       00000
__Hbank3                          bank3        00000
__Hbank30                         bank30       00000
__Hbank31                         bank31       00000
__Hbank4                          bank4        00000
__Hbank5                          bank5        00000
__Hbank6                          bank6        00000
__Hbank7                          bank7        00000
__Hbank8                          bank8        00000
__Hbank9                          bank9        00000
__Hbigram                         bigram       00000
__HbssBANK0                       bssBANK0     00000
__Hcinit                          cinit        00032
__Hclrtext                        clrtext      00000
__Hcode                           code         00000
__Hcommon                         common       00000
__Hconfig                         config       08009
__HcstackBANK0                    cstackBANK0  00000
__HcstackBANK1                    cstackBANK1  00000
__HcstackCOMMON                   cstackCOMMON 00000
__HdataBANK0                      dataBANK0    00000
__Heeprom_data                    eeprom_data  00000
__Hend_init                       end_init     00021
__Hfunctab                        functab      00000
__HidataBANK0                     idataBANK0   00000
__Hidloc                          idloc        00000
__Hinit                           init         00020
__Hintentry                       intentry     00020
__Hmaintext                       maintext     00000
__Hpowerup                        powerup      00000
__Hram                            ram          00000
__Hreset_vec                      reset_vec    00001
__Hsfr0                           sfr0         00000
__Hsfr1                           sfr1         00000
__Hsfr10                          sfr10        00000
__Hsfr11                          sfr11        00000
__Hsfr12                          sfr12        00000
__Hsfr13                          sfr13        00000
__Hsfr14                          sfr14        00000
__Hsfr15                          sfr15        00000
__Hsfr16                          sfr16        00000
__Hsfr17                          sfr17        00000
__Hsfr18                          sfr18        00000
__Hsfr19                          sfr19        00000
__Hsfr2                           sfr2         00000
__Hsfr20                          sfr20        00000
__Hsfr21                          sfr21        00000
__Hsfr22                          sfr22        00000
__Hsfr23                          sfr23        00000
__Hsfr24                          sfr24        00000
__Hsfr25                          sfr25        00000
__Hsfr26                          sfr26        00000
__Hsfr27                          sfr27        00000
__Hsfr28                          sfr28        00000
__Hsfr29                          sfr29        00000
__Hsfr3                           sfr3         00000
__Hsfr30                          sfr30        00000
__Hsfr31                          sfr31        00000
__Hsfr4                           sfr4         00000
__Hsfr5                           sfr5         00000
__Hsfr6                           sfr6         00000
__Hsfr7                           sfr7         00000
__Hsfr8                           sfr8         00000
__Hsfr9                           sfr9         00000
__Hspace_0                        (abs)        08009
__Hspace_1                        (abs)        0007E
__Hspace_2                        (abs)        00000
__Hspace_3                        (abs)        00000
__Hstack                          stack        00000
__Hstrings                        strings      00000
__Hstringtext                     stringtext   00000
__Htext                           text         00000
__Labs1                           abs1         00000
__Lbank0                          bank0        00000
__Lbank1                          bank1        00000
__Lbank10                         bank10       00000
__Lbank11                         bank11       00000
__Lbank12                         bank12       00000
__Lbank13                         bank13       00000
__Lbank14                         bank14       00000
__Lbank15                         bank15       00000
__Lbank16                         bank16       00000
__Lbank17                         bank17       00000
__Lbank18                         bank18       00000
__Lbank19                         bank19       00000
__Lbank2                          bank2        00000
__Lbank20                         bank20       00000
__Lbank21                         bank21       00000
__Lbank22                         bank22       00000
__Lbank23                         bank23       00000
__Lbank24                         bank24       00000
__Lbank25                         bank25       00000
__Lbank26                         bank26       00000
__Lbank27                         bank27       00000
__Lbank28                         bank28       00000
__Lbank29                         bank29       00000
__Lbank3                          bank3        00000
__Lbank30                         bank30       00000
__Lbank31                         bank31       00000
__Lbank4                          bank4        00000
__Lbank5                          bank5        00000
__Lbank6                          bank6        00000
__Lbank7                          bank7        00000
__Lbank8                          bank8        00000
__Lbank9                          bank9        00000
__Lbigram                         bigram       00000
__LbssBANK0                       bssBANK0     00000
__Lcinit                          cinit        00021
__Lclrtext                        clrtext      00000
__Lcode                           code         00000
__Lcommon                         common       00000
__Lconfig                         config       08007
__LcstackBANK0                    cstackBANK0  00000
__LcstackBANK1                    cstackBANK1  00000
__LcstackCOMMON                   cstackCOMMON 00000
__LdataBANK0                      dataBANK0    00000
__Leeprom_data                    eeprom_data  00000
__Lend_init                       end_init     00020
__Lfunctab                        functab      00000
__LidataBANK0                     idataBANK0   00000
__Lidloc                          idloc        00000
__Linit                           init         00020
__Lintentry                       intentry     00004
__Lmaintext                       maintext     00000
__Lpowerup                        powerup      00000
__Lram                            ram          00000
__Lreset_vec                      reset_vec    00000
__Lsfr0                           sfr0         00000
__Lsfr1                           sfr1         00000
__Lsfr10                          sfr10        00000
__Lsfr11                          sfr11        00000
__Lsfr12                          sfr12        00000
__Lsfr13                          sfr13        00000
__Lsfr14                          sfr14        00000
__Lsfr15                          sfr15        00000
__Lsfr16                          sfr16        00000
__Lsfr17                          sfr17        00000
__Lsfr18                          sfr18        00000
__Lsfr19                          sfr19        00000
__Lsfr2                           sfr2         00000
__Lsfr20                          sfr20        00000
__Lsfr21                          sfr21        00000
__Lsfr22                          sfr22        00000
__Lsfr23                          sfr23        00000
__Lsfr24                          sfr24        00000
__Lsfr25                          sfr25        00000
__Lsfr26                          sfr26        00000
__Lsfr27                          sfr27        00000
__Lsfr28                          sfr28        00000
__Lsfr29                          sfr29        00000
__Lsfr3                           sfr3         00000
__Lsfr30                          sfr30        00000
__Lsfr31                          sfr31        00000
__Lsfr4                           sfr4         00000
__Lsfr5                           sfr5         00000
__Lsfr6                           sfr6         00000
__Lsfr7                           sfr7         00000
__Lsfr8                           sfr8         00000
__Lsfr9                           sfr9         00000
__Lspace_0                        (abs)        00000
__Lspace_1                        (abs)        00000
__Lspace_2                        (abs)        00000
__Lspace_3                        (abs)        00000
__Lstack                          stack        00000
__Lstrings                        strings      00000
__Lstringtext                     stringtext   00000
__Ltext                           text         00000
__S0                              (abs)        08009
__S1                              (abs)        0007E
__S2                              (abs)        00000
__S3                              (abs)        00000
___int_sp                         stack        00000
___latbits                        (abs)        00000
___sp                             stack        00000
__end_of_ISR                      intentry     00020
__end_of_InitIO                   text2        001F3
__end_of_InitInputDataInt         text1        00216
__end_of__initialization          cinit        0002F
__end_of_compose                  text11       0014B
__end_of_crc_calculate            text12       000F9
__end_of_create_RGB_DATA_RQT_CMD  text9        001C8
__end_of_create_cmd               text10       00192
__end_of_main                     maintext     0021B
__end_of_send_RGB_DATA_RQT_CMD    text4        00202
__end_of_send_byte                text7        001AD
__end_of_send_half_byte           text8        00096
__end_of_send_msg                 text5        00171
__end_of_send_string              text6        001DF
__end_of_start_mark               stringtext   00206
__end_of_stop_mark                stringtext   0020A
__initialization                  cinit        00021
__pbssBANK0                       bssBANK0     00050
__pcstackBANK0                    cstackBANK0  00020
__pcstackBANK1                    cstackBANK1  00000
__pcstackCOMMON                   cstackCOMMON 00070
__pdataBANK0                      dataBANK0    00060
__pidataBANK0                     idataBANK0   0021B
__pintentry                       intentry     00004
__pmaintext                       maintext     00216
__pstringtext                     stringtext   00202
__ptext1                          text1        00210
__ptext10                         text10       00171
__ptext11                         text11       000F9
__ptext12                         text12       00096
__ptext2                          text2        001DF
__ptext4                          text4        001F3
__ptext5                          text5        0014B
__ptext6                          text6        001C8
__ptext7                          text7        00192
__ptext8                          text8        00032
__ptext9                          text9        001AD
__size_of_ISR                     (abs)        00000
__size_of_InitIO                  (abs)        00000
__size_of_InitInputDataInt        (abs)        00000
__size_of_compose                 (abs)        00000
__size_of_crc_calculate           (abs)        00000
__size_of_create_RGB_DATA_RQT_CMD (abs)        00000
__size_of_create_cmd              (abs)        00000
__size_of_main                    (abs)        00000
__size_of_send_RGB_DATA_RQT_CMD   (abs)        00000
__size_of_send_byte               (abs)        00000
__size_of_send_half_byte          (abs)        00000
__size_of_send_msg                (abs)        00000
__size_of_send_string             (abs)        00000
_compose                          text11       000F9
_crc_calculate                    text12       00096
_create_RGB_DATA_RQT_CMD          text9        001AD
_create_cmd                       text10       00171
_main                             maintext     00216
_send_RGB_DATA_RQT_CMD            text4        001F3
_send_byte                        text7        00192
_send_half_byte                   text8        00032
_send_msg                         text5        0014B
_send_string                      text6        001C8
_start_mark                       stringtext   00202
_stop_mark                        stringtext   00206
btemp                             (abs)        0007E
clear_ram0                        clrtext      0020A
compose@cmd                       cstackBANK0  00023
compose@data                      cstackBANK0  00024
compose@datalen                   cstackBANK0  00025
compose@from                      cstackBANK0  00020
compose@len                       cstackCOMMON 0007B
compose@msgid                     cstackBANK0  00022
compose@pmsg                      cstackCOMMON 0007D
compose@to                        cstackBANK0  00021
crc_calculate@crc                 cstackCOMMON 00075
crc_calculate@i                   cstackCOMMON 00077
crc_calculate@pmsg                cstackCOMMON 00078
create_RGB_DATA_RQT_CMD@pconn     cstackBANK0  00037
create_RGB_DATA_RQT_CMD@pmsg      cstackBANK0  00032
create_RGB_DATA_RQT_CMD@prqt      cstackBANK0  00031
create_cmd@cmd_data               cstackBANK0  00028
create_cmd@cmd_data_len           cstackBANK0  00029
create_cmd@cmd_id                 cstackBANK0  00026
create_cmd@msg_id                 cstackBANK0  00027
create_cmd@pconn                  cstackBANK0  00030
create_cmd@pmsg                   cstackBANK0  0002A
end_of_initialization             cinit        0002F
int$flags                         (abs)        0007E
intlevel0                         functab      00000
intlevel1                         functab      00000
intlevel2                         functab      00000
intlevel3                         functab      00000
intlevel4                         functab      00000
intlevel5                         functab      00000
ltemp                             (abs)        0007E
ltemp0                            (abs)        0007E
ltemp1                            (abs)        00082
ltemp2                            (abs)        00086
ltemp3                            (abs)        00080
reset_vec                         reset_vec    00000
send_RGB_DATA_RQT_CMD@msg         cstackBANK0  0003C
send_RGB_DATA_RQT_CMD@pconn       cstackBANK0  0003B
send_RGB_DATA_RQT_CMD@prqt        cstackBANK0  00038
send_byte@c                       cstackCOMMON 00076
send_half_byte@byte               cstackCOMMON 00073
send_half_byte@low                cstackCOMMON 00070
send_half_byte@value              cstackCOMMON 00072
send_msg@pmsg                     cstackBANK0  00021
send_msg@s                        cstackBANK0  00020
send_string@i                     cstackCOMMON 0007C
send_string@len                   cstackCOMMON 00079
send_string@str                   cstackCOMMON 00077
stackhi                           (abs)        0206F
stacklo                           (abs)        02044
start                             init         00020
start_initialization              cinit        00021
ttemp                             (abs)        0007E
ttemp0                            (abs)        0007E
ttemp1                            (abs)        00081
ttemp2                            (abs)        00084
ttemp3                            (abs)        00087
ttemp4                            (abs)        0007F
wtemp                             (abs)        0007E
wtemp0                            (abs)        0007E
wtemp1                            (abs)        00080
wtemp2                            (abs)        00082
wtemp3                            (abs)        00084
wtemp4                            (abs)        00086
wtemp5                            (abs)        00088
wtemp6                            (abs)        0007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 97 in file "led_pwm_server.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_InitIO
		_InitInputDataInt
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _InitInputDataInt *****************
 Defined at:
		line 77 in file "led_pwm_server.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitIO *****************
 Defined at:
		line 42 in file "led_pwm_server.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 84 in file "led_pwm_server.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  conn            5   40[BANK0 ] struct .
  rqt             3   45[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       8       0
      Temps:          0       2       0
      Totals:         0      10       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_send_RGB_DATA_RQT_CMD
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _send_RGB_DATA_RQT_CMD *****************
 Defined at:
		line 28 in file "rgb_data.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> ISR@conn(5), 
  prqt            1   24[BANK0 ] PTR const struct .
		 -> ISR@rqt(3), 
 Auto vars:     Size  Location     Type
  pconn           1   27[BANK0 ] PTR struct .
		 -> ISR@conn(5), 
  msg            10   28[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0      11       0
      Temps:          0       2       0
      Totals:         0      14       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_create_RGB_DATA_RQT_CMD
		_send_msg
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _send_msg *****************
 Defined at:
		line 29 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(10), 
 Auto vars:     Size  Location     Type
  pmsg            1    1[BANK0 ] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(10), 
  s               1    0[BANK0 ] PTR unsigned char 
		 -> send_RGB_DATA_RQT_CMD@msg(10), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       2       0
      Temps:          1       0       0
      Totals:         1       2       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_send_string
 This function is called by:
		_send_RGB_DATA_RQT_CMD
 This function uses a non-reentrant model


 *************** function _send_string *****************
 Defined at:
		line 29 in file "packet.h"
 Parameters:    Size  Location     Type
  str             2    7[COMMON] PTR unsigned char 
		 -> send_RGB_DATA_RQT_CMD@msg(10), stop_mark(4), start_mark(4), 
  len             1    9[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  i               1   12[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         3       0       0
      Locals:         1       0       0
      Temps:          2       0       0
      Totals:         6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_send_byte
 This function is called by:
		_send_msg
 This function uses a non-reentrant model


 *************** function _send_byte *****************
 Defined at:
		line 20 in file "packet.h"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          2       0       0
      Totals:         3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_send_half_byte
 This function is called by:
		_send_string
 This function uses a non-reentrant model


 *************** function _send_half_byte *****************
 Defined at:
		line 14 in file "packet.h"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
  low             1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  value           1    2[COMMON] unsigned char 
  byte            1    3[COMMON] PTR struct .
		 -> send_half_byte@value(1), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         1       0       0
      Locals:         2       0       0
      Temps:          1       0       0
      Totals:         4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_send_byte
 This function uses a non-reentrant model


 *************** function _create_RGB_DATA_RQT_CMD *****************
 Defined at:
		line 24 in file "rgb_data.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> ISR@conn(5), 
  prqt            1   17[BANK0 ] PTR const struct .
		 -> ISR@rqt(3), 
  pmsg            1   18[BANK0 ] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(10), 
 Auto vars:     Size  Location     Type
  pconn           1   23[BANK0 ] PTR struct .
		 -> ISR@conn(5), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       2       0
      Locals:         0       1       0
      Temps:          0       4       0
      Totals:         0       7       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_create_cmd
 This function is called by:
		_send_RGB_DATA_RQT_CMD
 This function uses a non-reentrant model


 *************** function _create_cmd *****************
 Defined at:
		line 27 in file "cmd.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> ISR@conn(5), 
  cmd_id          1    6[BANK0 ] unsigned char 
  msg_id          1    7[BANK0 ] unsigned char 
  cmd_data        1    8[BANK0 ] PTR const void 
		 -> ISR@rqt(3), 
  cmd_data_len    1    9[BANK0 ] unsigned char 
  pmsg            1   10[BANK0 ] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(10), 
 Auto vars:     Size  Location     Type
  pconn           1   16[BANK0 ] PTR struct .
		 -> ISR@conn(5), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       5       0
      Locals:         0       1       0
      Temps:          0       5       0
      Totals:         0      11       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_compose
 This function is called by:
		_create_RGB_DATA_RQT_CMD
 This function uses a non-reentrant model


 *************** function _compose *****************
 Defined at:
		line 52 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(10), 
  from            1    0[BANK0 ] unsigned char 
  to              1    1[BANK0 ] unsigned char 
  msgid           1    2[BANK0 ] unsigned char 
  cmd             1    3[BANK0 ] unsigned char 
  data            1    4[BANK0 ] PTR unsigned char 
		 -> ISR@rqt(3), 
  datalen         1    5[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pmsg            1   13[COMMON] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(10), 
  len             2   11[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       6       0
      Locals:         3       0       0
      Temps:          2       0       0
      Totals:         5       6       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_crc_calculate
 This function is called by:
		_create_cmd
 This function uses a non-reentrant model


 *************** function _crc_calculate *****************
 Defined at:
		line 36 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(10), 
 Auto vars:     Size  Location     Type
  pmsg            1    8[COMMON] PTR struct .
		 -> send_RGB_DATA_RQT_CMD@msg(10), 
  i               1    7[COMMON] unsigned char 
  crc             2    5[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         2       0       0
      Locals:         4       0       0
      Temps:          3       0       0
      Totals:         9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_compose
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
msg.h
		_send_msg      		CODE           	014B	0000	39
		_crc_calculate 		CODE           	0096	0000	100
		_compose       		CODE           	00F9	0000	83

msg.h estimated size: 222

cmd.h
		_create_cmd    		CODE           	0171	0000	34

cmd.h estimated size: 34

packet.h
		_send_byte     		CODE           	0192	0000	28
		_send_string   		CODE           	01C8	0000	24
		_send_half_byte		CODE           	0032	0000	101

packet.h estimated size: 153

led_pwm_server.c
		_ISR           		CODE           	0004	0000	29
		_main          		CODE           	0216	0000	6
		_InitInputDataInt		CODE           	0210	0000	7
		_InitIO        		CODE           	01DF	0000	21

led_pwm_server.c estimated size: 63

shared
		_start_mark    		STRCODE        	0202	0000	5
		__initialization		CODE           	0021	0000	15
		_stop_mark     		STRCODE        	0206	0000	5

shared estimated size: 25

rgb_data.h
		_send_RGB_DATA_RQT_CMD		CODE           	01F3	0000	16
		_create_RGB_DATA_RQT_CMD		CODE           	01AD	0000	28

rgb_data.h estimated size: 44

