

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Apr 27 20:42:41 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.41
    43                           ; Generated 25/01/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1823 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  008C                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  010C                     	;# 
   119  010E                     	;# 
   120  0111                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011B                     	;# 
   131  011D                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018E                     	;# 
   135  0191                     	;# 
   136  0191                     	;# 
   137  0192                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0194                     	;# 
   142  0195                     	;# 
   143  0196                     	;# 
   144  0199                     	;# 
   145  019A                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019D                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  020C                     	;# 
   156  020E                     	;# 
   157  0211                     	;# 
   158  0211                     	;# 
   159  0212                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0214                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0217                     	;# 
   172  0291                     	;# 
   173  0291                     	;# 
   174  0292                     	;# 
   175  0293                     	;# 
   176  0294                     	;# 
   177  0295                     	;# 
   178  0295                     	;# 
   179  0296                     	;# 
   180  0391                     	;# 
   181  0392                     	;# 
   182  0393                     	;# 
   183  039A                     	;# 
   184  039C                     	;# 
   185  039D                     	;# 
   186  039E                     	;# 
   187  039F                     	;# 
   188  0FE4                     	;# 
   189  0FE5                     	;# 
   190  0FE6                     	;# 
   191  0FE7                     	;# 
   192  0FE8                     	;# 
   193  0FE9                     	;# 
   194  0FEA                     	;# 
   195  0FEB                     	;# 
   196  0FED                     	;# 
   197  0FEE                     	;# 
   198  0FEF                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0008                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000E                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001C                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  008C                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0095                     	;# 
   231  0096                     	;# 
   232  0097                     	;# 
   233  0098                     	;# 
   234  0099                     	;# 
   235  009A                     	;# 
   236  009B                     	;# 
   237  009B                     	;# 
   238  009C                     	;# 
   239  009D                     	;# 
   240  009E                     	;# 
   241  010C                     	;# 
   242  010E                     	;# 
   243  0111                     	;# 
   244  0112                     	;# 
   245  0113                     	;# 
   246  0114                     	;# 
   247  0115                     	;# 
   248  0116                     	;# 
   249  0117                     	;# 
   250  0118                     	;# 
   251  0119                     	;# 
   252  011A                     	;# 
   253  011B                     	;# 
   254  011D                     	;# 
   255  011D                     	;# 
   256  018C                     	;# 
   257  018E                     	;# 
   258  0191                     	;# 
   259  0191                     	;# 
   260  0192                     	;# 
   261  0193                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0194                     	;# 
   265  0195                     	;# 
   266  0196                     	;# 
   267  0199                     	;# 
   268  019A                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019C                     	;# 
   274  019C                     	;# 
   275  019D                     	;# 
   276  019E                     	;# 
   277  019F                     	;# 
   278  020C                     	;# 
   279  020E                     	;# 
   280  0211                     	;# 
   281  0211                     	;# 
   282  0212                     	;# 
   283  0212                     	;# 
   284  0213                     	;# 
   285  0213                     	;# 
   286  0214                     	;# 
   287  0214                     	;# 
   288  0215                     	;# 
   289  0215                     	;# 
   290  0215                     	;# 
   291  0216                     	;# 
   292  0216                     	;# 
   293  0217                     	;# 
   294  0217                     	;# 
   295  0291                     	;# 
   296  0291                     	;# 
   297  0292                     	;# 
   298  0293                     	;# 
   299  0294                     	;# 
   300  0295                     	;# 
   301  0295                     	;# 
   302  0296                     	;# 
   303  0391                     	;# 
   304  0392                     	;# 
   305  0393                     	;# 
   306  039A                     	;# 
   307  039C                     	;# 
   308  039D                     	;# 
   309  039E                     	;# 
   310  039F                     	;# 
   311  0FE4                     	;# 
   312  0FE5                     	;# 
   313  0FE6                     	;# 
   314  0FE7                     	;# 
   315  0FE8                     	;# 
   316  0FE9                     	;# 
   317  0FEA                     	;# 
   318  0FEB                     	;# 
   319  0FED                     	;# 
   320  0FEE                     	;# 
   321  0FEF                     	;# 
   322  0000                     	;# 
   323  0001                     	;# 
   324  0002                     	;# 
   325  0003                     	;# 
   326  0004                     	;# 
   327  0005                     	;# 
   328  0006                     	;# 
   329  0007                     	;# 
   330  0008                     	;# 
   331  0009                     	;# 
   332  000A                     	;# 
   333  000B                     	;# 
   334  000C                     	;# 
   335  000E                     	;# 
   336  0011                     	;# 
   337  0012                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  008C                     	;# 
   350  008E                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  010C                     	;# 
   365  010E                     	;# 
   366  0111                     	;# 
   367  0112                     	;# 
   368  0113                     	;# 
   369  0114                     	;# 
   370  0115                     	;# 
   371  0116                     	;# 
   372  0117                     	;# 
   373  0118                     	;# 
   374  0119                     	;# 
   375  011A                     	;# 
   376  011B                     	;# 
   377  011D                     	;# 
   378  011D                     	;# 
   379  018C                     	;# 
   380  018E                     	;# 
   381  0191                     	;# 
   382  0191                     	;# 
   383  0192                     	;# 
   384  0193                     	;# 
   385  0193                     	;# 
   386  0193                     	;# 
   387  0194                     	;# 
   388  0195                     	;# 
   389  0196                     	;# 
   390  0199                     	;# 
   391  019A                     	;# 
   392  019B                     	;# 
   393  019B                     	;# 
   394  019B                     	;# 
   395  019B                     	;# 
   396  019C                     	;# 
   397  019C                     	;# 
   398  019D                     	;# 
   399  019E                     	;# 
   400  019F                     	;# 
   401  020C                     	;# 
   402  020E                     	;# 
   403  0211                     	;# 
   404  0211                     	;# 
   405  0212                     	;# 
   406  0212                     	;# 
   407  0213                     	;# 
   408  0213                     	;# 
   409  0214                     	;# 
   410  0214                     	;# 
   411  0215                     	;# 
   412  0215                     	;# 
   413  0215                     	;# 
   414  0216                     	;# 
   415  0216                     	;# 
   416  0217                     	;# 
   417  0217                     	;# 
   418  0291                     	;# 
   419  0291                     	;# 
   420  0292                     	;# 
   421  0293                     	;# 
   422  0294                     	;# 
   423  0295                     	;# 
   424  0295                     	;# 
   425  0296                     	;# 
   426  0391                     	;# 
   427  0392                     	;# 
   428  0393                     	;# 
   429  039A                     	;# 
   430  039C                     	;# 
   431  039D                     	;# 
   432  039E                     	;# 
   433  039F                     	;# 
   434  0FE4                     	;# 
   435  0FE5                     	;# 
   436  0FE6                     	;# 
   437  0FE7                     	;# 
   438  0FE8                     	;# 
   439  0FE9                     	;# 
   440  0FEA                     	;# 
   441  0FEB                     	;# 
   442  0FED                     	;# 
   443  0FEE                     	;# 
   444  0FEF                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000E                     	;# 
   459  0011                     	;# 
   460  0012                     	;# 
   461  0015                     	;# 
   462  0016                     	;# 
   463  0016                     	;# 
   464  0017                     	;# 
   465  0018                     	;# 
   466  0019                     	;# 
   467  001A                     	;# 
   468  001B                     	;# 
   469  001C                     	;# 
   470  001E                     	;# 
   471  001F                     	;# 
   472  008C                     	;# 
   473  008E                     	;# 
   474  0091                     	;# 
   475  0092                     	;# 
   476  0095                     	;# 
   477  0096                     	;# 
   478  0097                     	;# 
   479  0098                     	;# 
   480  0099                     	;# 
   481  009A                     	;# 
   482  009B                     	;# 
   483  009B                     	;# 
   484  009C                     	;# 
   485  009D                     	;# 
   486  009E                     	;# 
   487  010C                     	;# 
   488  010E                     	;# 
   489  0111                     	;# 
   490  0112                     	;# 
   491  0113                     	;# 
   492  0114                     	;# 
   493  0115                     	;# 
   494  0116                     	;# 
   495  0117                     	;# 
   496  0118                     	;# 
   497  0119                     	;# 
   498  011A                     	;# 
   499  011B                     	;# 
   500  011D                     	;# 
   501  011D                     	;# 
   502  018C                     	;# 
   503  018E                     	;# 
   504  0191                     	;# 
   505  0191                     	;# 
   506  0192                     	;# 
   507  0193                     	;# 
   508  0193                     	;# 
   509  0193                     	;# 
   510  0194                     	;# 
   511  0195                     	;# 
   512  0196                     	;# 
   513  0199                     	;# 
   514  019A                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019C                     	;# 
   520  019C                     	;# 
   521  019D                     	;# 
   522  019E                     	;# 
   523  019F                     	;# 
   524  020C                     	;# 
   525  020E                     	;# 
   526  0211                     	;# 
   527  0211                     	;# 
   528  0212                     	;# 
   529  0212                     	;# 
   530  0213                     	;# 
   531  0213                     	;# 
   532  0214                     	;# 
   533  0214                     	;# 
   534  0215                     	;# 
   535  0215                     	;# 
   536  0215                     	;# 
   537  0216                     	;# 
   538  0216                     	;# 
   539  0217                     	;# 
   540  0217                     	;# 
   541  0291                     	;# 
   542  0291                     	;# 
   543  0292                     	;# 
   544  0293                     	;# 
   545  0294                     	;# 
   546  0295                     	;# 
   547  0295                     	;# 
   548  0296                     	;# 
   549  0391                     	;# 
   550  0392                     	;# 
   551  0393                     	;# 
   552  039A                     	;# 
   553  039C                     	;# 
   554  039D                     	;# 
   555  039E                     	;# 
   556  039F                     	;# 
   557  0FE4                     	;# 
   558  0FE5                     	;# 
   559  0FE6                     	;# 
   560  0FE7                     	;# 
   561  0FE8                     	;# 
   562  0FE9                     	;# 
   563  0FEA                     	;# 
   564  0FEB                     	;# 
   565  0FED                     	;# 
   566  0FEE                     	;# 
   567  0FEF                     	;# 
   568                           
   569                           	psect	idataBANK0
   570  07D3                     __pidataBANK0:	
   571                           
   572                           ;initializer for LCDWriteInt@F2520
   573  07D3  34F0               	retlw	240
   574  07D4  34F0               	retlw	240
   575  07D5  34F0               	retlw	240
   576  07D6  34F0               	retlw	240
   577  07D7  34F0               	retlw	240
   578                           
   579                           ;initializer for _tuneUpTempDir
   580  07D8  3401               	retlw	1
   581                           
   582                           	psect	idataBANK1
   583  07CB                     __pidataBANK1:	
   584                           
   585                           ;initializer for ___cgram
   586  07CB  340C               	retlw	12
   587  07CC  3412               	retlw	18
   588  07CD  3412               	retlw	18
   589  07CE  340C               	retlw	12
   590  07CF  3400               	retlw	0
   591  07D0  3400               	retlw	0
   592  07D1  3400               	retlw	0
   593  07D2  3400               	retlw	0
   594  000B                     _INTCONbits	set	11
   595  000E                     _PORTC	set	14
   596  0065                     _RA5	set	101
   597  0064                     _RA4	set	100
   598  0061                     _RA1	set	97
   599  0060                     _RA0	set	96
   600  0071                     _RC1	set	113
   601  0070                     _RC0	set	112
   602  009B                     _ADRESL	set	155
   603  009C                     _ADRESH	set	156
   604  009E                     _ADCON1bits	set	158
   605  009D                     _ADCON0bits	set	157
   606  008C                     _TRISAbits	set	140
   607  008E                     _TRISCbits	set	142
   608  008E                     _TRISC	set	142
   609  018C                     _ANSELAbits	set	396
   610  0393                     _IOCAFbits	set	915
   611                           
   612                           	psect	stringtext
   613  078B                     __pstringtext:	
   614  078B                     STR_1:	
   615  078B  3443               	retlw	67	;'C'
   616  078C  3475               	retlw	117	;'u'
   617  078D  3472               	retlw	114	;'r'
   618  078E  343A               	retlw	58	;':'
   619  078F  3400               	retlw	0
   620  0790                     STR_4:	
   621  0790  344D               	retlw	77	;'M'
   622  0791  3461               	retlw	97	;'a'
   623  0792  3478               	retlw	120	;'x'
   624  0793  343A               	retlw	58	;':'
   625  0794  3400               	retlw	0
   626  0795                     STR_7:	
   627  0795  344F               	retlw	79	;'O'
   628  0796  344E               	retlw	78	;'N'
   629  0797  3420               	retlw	32	;' '
   630  0798  3400               	retlw	0
   631  0799                     STR_3:	
   632  0799  3457               	retlw	87	;'W'
   633  079A  3461               	retlw	97	;'a'
   634  079B  343A               	retlw	58	;':'
   635  079C  3400               	retlw	0
   636  079D                     STR_2:	
   637  079D  3425               	retlw	37	;'%'
   638  079E  3430               	retlw	48	;'0'
   639  079F  3443               	retlw	67	;'C'
   640  07A0  3400               	retlw	0
   641  07A1                     STR_6:	
   642  07A1  344F               	retlw	79	;'O'
   643  07A2  3446               	retlw	70	;'F'
   644  07A3  3446               	retlw	70	;'F'
   645  07A4  3400               	retlw	0
   646  079D                     
   647                           ; #config settings
   648  0000                     
   649                           	psect	cinit
   650  0047                     start_initialization:	
   651  0047                     __initialization:	
   652                           
   653                           ; Initialize objects allocated to BANK0
   654  0047  30D3               	movlw	low __pidataBANK0
   655  0048  0084               	movwf	4
   656  0049  3087               	movlw	(high __pidataBANK0)| (0+128)
   657  004A  0085               	movwf	5
   658  004B  3058               	movlw	low __pdataBANK0
   659  004C  0086               	movwf	6
   660  004D  3000               	movlw	high __pdataBANK0
   661  004E  0087               	movwf	7
   662  004F  3006               	movlw	6
   663  0050  27D9               	fcall	init_ram
   664                           
   665                           ; Initialize objects allocated to BANK1
   666  0051  30CB               	movlw	low __pidataBANK1
   667  0052  0084               	movwf	4
   668  0053  3087               	movlw	(high __pidataBANK1)| (0+128)
   669  0054  0085               	movwf	5
   670  0055  30A0               	movlw	low __pdataBANK1
   671  0056  0086               	movwf	6
   672  0057  3000               	movlw	high __pdataBANK1
   673  0058  0087               	movwf	7
   674  0059  3008               	movlw	8
   675  005A  27D9               	fcall	init_ram
   676                           
   677                           ; Clear objects allocated to BANK0
   678  005B  01DE               	clrf	__pbssBANK0& (0+127)
   679  005C  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   680  005D  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   681  005E  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   682  005F                     end_of_initialization:	
   683                           ;End of C runtime variable initialization code
   684                           
   685  005F                     __end_of__initialization:	
   686  005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   687  0060  0020               	movlb	0
   688  0061  2862               	ljmp	_main	;jump to C main() function
   689                           
   690                           	psect	bssBANK0
   691  005E                     __pbssBANK0:	
   692  005E                     _curTemp:	
   693  005E                     	ds	2
   694  0060                     _tuneUpTemp:	
   695  0060                     	ds	2
   696                           
   697                           	psect	dataBANK0
   698  0058                     __pdataBANK0:	
   699  0058                     LCDWriteInt@F2520:	
   700  0058                     	ds	5
   701  005D                     _tuneUpTempDir:	
   702  005D                     	ds	1
   703                           
   704                           	psect	dataBANK1
   705  00A0                     __pdataBANK1:	
   706  00A0                     ___cgram:	
   707  00A0                     	ds	8
   708                           
   709                           	psect	inittext
   710  07D9                     init_ram:	
   711  07D9  00FE               	movwf	126
   712  07DA                     initloop:	
   713  07DA  0012               	moviw fsr0++
   714  07DB  001E               	movwi fsr1++
   715  07DC  0BFE               	decfsz	126,f
   716  07DD  2FDA               	goto	initloop
   717  07DE  3400               	retlw	0
   718                           
   719                           	psect	cstackBANK1
   720  00A8                     __pcstackBANK1:	
   721  00A8                     ?_LM35ReadTemp:	
   722                           
   723                           ; 2 bytes @ 0x0
   724  00A8                     	ds	2
   725  00AA                     LM35ReadTemp@adc_value:	
   726                           
   727                           ; 2 bytes @ 0x2
   728  00AA                     	ds	2
   729  00AC                     ??_main:	
   730                           
   731                           ; 1 bytes @ 0x4
   732  00AC                     	ds	3
   733                           
   734                           	psect	cstackCOMMON
   735  0070                     __pcstackCOMMON:	
   736  0070                     ?_LCDBusyLoop:	
   737  0070                     ?_ADCInit:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_LCDInit:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_TriggerOutInit:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_TuneButtonInit:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_ISR:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_main:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?i1_LCDBusyLoop:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ??i1_LCDBusyLoop:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?i1___awdiv:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?i1___awmod:	
   765                           ; 2 bytes @ 0x0
   766                           
   767  0070                     i1___awdiv@divisor:	
   768                           ; 2 bytes @ 0x0
   769                           
   770  0070                     i1___awmod@divisor:	
   771                           ; 2 bytes @ 0x0
   772                           
   773                           
   774                           ; 2 bytes @ 0x0
   775  0070                     	ds	2
   776  0072                     i1LCDBusyLoop@busy:	
   777  0072                     i1___awdiv@dividend:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0072                     i1___awmod@dividend:	
   781                           ; 2 bytes @ 0x2
   782                           
   783                           
   784                           ; 2 bytes @ 0x2
   785  0072                     	ds	1
   786  0073                     i1LCDBusyLoop@temp:	
   787                           
   788                           ; 1 bytes @ 0x3
   789  0073                     	ds	1
   790  0074                     ??i1___awdiv:	
   791  0074                     ??i1___awmod:	
   792                           ; 1 bytes @ 0x4
   793                           
   794  0074                     i1LCDBusyLoop@status:	
   795                           ; 1 bytes @ 0x4
   796                           
   797                           
   798                           ; 1 bytes @ 0x4
   799  0074                     	ds	1
   800  0075                     ?i1_LCDByte:	
   801  0075                     i1LCDByte@isdata:	
   802                           ; 1 bytes @ 0x5
   803                           
   804  0075                     i1___awdiv@counter:	
   805                           ; 1 bytes @ 0x5
   806                           
   807  0075                     i1___awmod@counter:	
   808                           ; 1 bytes @ 0x5
   809                           
   810                           
   811                           ; 1 bytes @ 0x5
   812  0075                     	ds	1
   813  0076                     ??i1_LCDByte:	
   814  0076                     i1___awdiv@sign:	
   815                           ; 1 bytes @ 0x6
   816                           
   817  0076                     i1___awmod@sign:	
   818                           ; 1 bytes @ 0x6
   819                           
   820                           
   821                           ; 1 bytes @ 0x6
   822  0076                     	ds	1
   823  0077                     i1___awdiv@quotient:	
   824                           
   825                           ; 2 bytes @ 0x7
   826  0077                     	ds	1
   827  0078                     i1LCDByte@hn:	
   828                           
   829                           ; 1 bytes @ 0x8
   830  0078                     	ds	1
   831  0079                     i1LCDByte@ln:	
   832                           
   833                           ; 1 bytes @ 0x9
   834  0079                     	ds	1
   835  007A                     i1LCDByte@c:	
   836                           
   837                           ; 1 bytes @ 0xA
   838  007A                     	ds	1
   839  007B                     i1LCDByte@temp:	
   840                           
   841                           ; 1 bytes @ 0xB
   842  007B                     	ds	1
   843  007C                     ??i1_LCDWriteInt:	
   844  007C                     ?i1_LCDGotoXY:	
   845                           ; 1 bytes @ 0xC
   846                           
   847  007C                     i1LCDGotoXY@y:	
   848                           ; 1 bytes @ 0xC
   849                           
   850                           
   851                           ; 1 bytes @ 0xC
   852  007C                     	ds	1
   853  007D                     ??i1_LCDGotoXY:	
   854                           
   855                           ; 1 bytes @ 0xD
   856  007D                     	ds	1
   857                           
   858                           	psect	cstackBANK0
   859  0020                     __pcstackBANK0:	
   860  0020                     ?i1_LCDWriteInt:	
   861  0020                     i1LCDGotoXY@x:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0020                     i1LCDWriteInt@val:	
   865                           ; 1 bytes @ 0x0
   866                           
   867                           
   868                           ; 2 bytes @ 0x0
   869  0020                     	ds	2
   870  0022                     i1LCDWriteInt@field_length:	
   871                           
   872                           ; 1 bytes @ 0x2
   873  0022                     	ds	1
   874  0023                     i1LCDWriteInt@str:	
   875                           
   876                           ; 5 bytes @ 0x3
   877  0023                     	ds	5
   878  0028                     i1LCDWriteInt@j:	
   879                           
   880                           ; 2 bytes @ 0x8
   881  0028                     	ds	2
   882  002A                     i1LCDWriteInt@i:	
   883                           
   884                           ; 2 bytes @ 0xA
   885  002A                     	ds	2
   886  002C                     ??_ISR:	
   887                           
   888                           ; 1 bytes @ 0xC
   889  002C                     	ds	2
   890  002E                     ??_LCDBusyLoop:	
   891  002E                     ??_ADCInit:	
   892                           ; 1 bytes @ 0xE
   893                           
   894  002E                     ??_TriggerOutInit:	
   895                           ; 1 bytes @ 0xE
   896                           
   897  002E                     ??_TuneButtonInit:	
   898                           ; 1 bytes @ 0xE
   899                           
   900  002E                     ?_ReadADC:	
   901                           ; 1 bytes @ 0xE
   902                           
   903  002E                     ?___awdiv:	
   904                           ; 2 bytes @ 0xE
   905                           
   906  002E                     ?___awmod:	
   907                           ; 2 bytes @ 0xE
   908                           
   909  002E                     ?___ftpack:	
   910                           ; 2 bytes @ 0xE
   911                           
   912  002E                     ___awdiv@divisor:	
   913                           ; 3 bytes @ 0xE
   914                           
   915  002E                     ___awmod@divisor:	
   916                           ; 2 bytes @ 0xE
   917                           
   918  002E                     ___ftpack@arg:	
   919                           ; 2 bytes @ 0xE
   920                           
   921                           
   922                           ; 3 bytes @ 0xE
   923  002E                     	ds	2
   924  0030                     ??_ReadADC:	
   925  0030                     LCDBusyLoop@busy:	
   926                           ; 1 bytes @ 0x10
   927                           
   928  0030                     ___awdiv@dividend:	
   929                           ; 1 bytes @ 0x10
   930                           
   931  0030                     ___awmod@dividend:	
   932                           ; 2 bytes @ 0x10
   933                           
   934                           
   935                           ; 2 bytes @ 0x10
   936  0030                     	ds	1
   937  0031                     LCDBusyLoop@temp:	
   938  0031                     ReadADC@ch:	
   939                           ; 1 bytes @ 0x11
   940                           
   941  0031                     ___ftpack@exp:	
   942                           ; 1 bytes @ 0x11
   943                           
   944                           
   945                           ; 1 bytes @ 0x11
   946  0031                     	ds	1
   947  0032                     ??___awdiv:	
   948  0032                     ??___awmod:	
   949                           ; 1 bytes @ 0x12
   950                           
   951  0032                     LCDBusyLoop@status:	
   952                           ; 1 bytes @ 0x12
   953                           
   954  0032                     ___ftpack@sign:	
   955                           ; 1 bytes @ 0x12
   956                           
   957                           
   958                           ; 1 bytes @ 0x12
   959  0032                     	ds	1
   960  0033                     ??___ftpack:	
   961  0033                     ?_LCDByte:	
   962                           ; 1 bytes @ 0x13
   963                           
   964  0033                     LCDByte@isdata:	
   965                           ; 1 bytes @ 0x13
   966                           
   967  0033                     ___awdiv@counter:	
   968                           ; 1 bytes @ 0x13
   969                           
   970  0033                     ___awmod@counter:	
   971                           ; 1 bytes @ 0x13
   972                           
   973                           
   974                           ; 1 bytes @ 0x13
   975  0033                     	ds	1
   976  0034                     ??_LCDByte:	
   977  0034                     ___awdiv@sign:	
   978                           ; 1 bytes @ 0x14
   979                           
   980  0034                     ___awmod@sign:	
   981                           ; 1 bytes @ 0x14
   982                           
   983                           
   984                           ; 1 bytes @ 0x14
   985  0034                     	ds	1
   986  0035                     ___awdiv@quotient:	
   987                           
   988                           ; 2 bytes @ 0x15
   989  0035                     	ds	1
   990  0036                     ?___lwtoft:	
   991  0036                     LCDByte@hn:	
   992                           ; 3 bytes @ 0x16
   993                           
   994  0036                     ___lwtoft@c:	
   995                           ; 1 bytes @ 0x16
   996                           
   997                           
   998                           ; 2 bytes @ 0x16
   999  0036                     	ds	1
  1000  0037                     LCDByte@ln:	
  1001                           
  1002                           ; 1 bytes @ 0x17
  1003  0037                     	ds	1
  1004  0038                     LCDByte@c:	
  1005                           
  1006                           ; 1 bytes @ 0x18
  1007  0038                     	ds	1
  1008  0039                     ??___lwtoft:	
  1009  0039                     LCDByte@temp:	
  1010                           ; 1 bytes @ 0x19
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x19
  1014  0039                     	ds	1
  1015  003A                     ??_LCDInit:	
  1016  003A                     ?_LCDWriteString:	
  1017                           ; 1 bytes @ 0x1A
  1018                           
  1019  003A                     ?_LCDWriteInt:	
  1020                           ; 1 bytes @ 0x1A
  1021                           
  1022  003A                     ?_LCDGotoXY:	
  1023                           ; 1 bytes @ 0x1A
  1024                           
  1025  003A                     ?___ftmul:	
  1026                           ; 1 bytes @ 0x1A
  1027                           
  1028  003A                     LCDGotoXY@y:	
  1029                           ; 3 bytes @ 0x1A
  1030                           
  1031  003A                     LCDWriteString@msg:	
  1032                           ; 1 bytes @ 0x1A
  1033                           
  1034  003A                     LCDWriteInt@val:	
  1035                           ; 2 bytes @ 0x1A
  1036                           
  1037  003A                     ___ftmul@f1:	
  1038                           ; 2 bytes @ 0x1A
  1039                           
  1040                           
  1041                           ; 3 bytes @ 0x1A
  1042  003A                     	ds	1
  1043  003B                     ??_LCDGotoXY:	
  1044  003B                     LCDInit@style:	
  1045                           ; 1 bytes @ 0x1B
  1046                           
  1047                           
  1048                           ; 1 bytes @ 0x1B
  1049  003B                     	ds	1
  1050  003C                     ??_LCDWriteString:	
  1051  003C                     LCDInit@__i:	
  1052                           ; 1 bytes @ 0x1C
  1053                           
  1054  003C                     LCDWriteInt@field_length:	
  1055                           ; 1 bytes @ 0x1C
  1056                           
  1057  003C                     LCDGotoXY@x:	
  1058                           ; 1 bytes @ 0x1C
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x1C
  1062  003C                     	ds	1
  1063  003D                     ??_LCDWriteInt:	
  1064  003D                     LCDWriteString@cc:	
  1065                           ; 1 bytes @ 0x1D
  1066                           
  1067  003D                     ___ftmul@f2:	
  1068                           ; 1 bytes @ 0x1D
  1069                           
  1070                           
  1071                           ; 3 bytes @ 0x1D
  1072  003D                     	ds	2
  1073  003F                     LCDWriteInt@str:	
  1074                           
  1075                           ; 5 bytes @ 0x1F
  1076  003F                     	ds	1
  1077  0040                     ??___ftmul:	
  1078                           
  1079                           ; 1 bytes @ 0x20
  1080  0040                     	ds	4
  1081  0044                     ___ftmul@exp:	
  1082  0044                     LCDWriteInt@j:	
  1083                           ; 1 bytes @ 0x24
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x24
  1087  0044                     	ds	1
  1088  0045                     ___ftmul@f3_as_product:	
  1089                           
  1090                           ; 3 bytes @ 0x25
  1091  0045                     	ds	1
  1092  0046                     LCDWriteInt@i:	
  1093                           
  1094                           ; 2 bytes @ 0x26
  1095  0046                     	ds	2
  1096  0048                     ___ftmul@cntr:	
  1097                           
  1098                           ; 1 bytes @ 0x28
  1099  0048                     	ds	1
  1100  0049                     ___ftmul@sign:	
  1101                           
  1102                           ; 1 bytes @ 0x29
  1103  0049                     	ds	1
  1104  004A                     ?___fttol:	
  1105  004A                     ___fttol@f1:	
  1106                           ; 4 bytes @ 0x2A
  1107                           
  1108                           
  1109                           ; 3 bytes @ 0x2A
  1110  004A                     	ds	4
  1111  004E                     ??___fttol:	
  1112                           
  1113                           ; 1 bytes @ 0x2E
  1114  004E                     	ds	4
  1115  0052                     ___fttol@sign1:	
  1116                           
  1117                           ; 1 bytes @ 0x32
  1118  0052                     	ds	1
  1119  0053                     ___fttol@lval:	
  1120                           
  1121                           ; 4 bytes @ 0x33
  1122  0053                     	ds	4
  1123  0057                     ___fttol@exp1:	
  1124                           
  1125                           ; 1 bytes @ 0x37
  1126  0057                     	ds	1
  1127  0058                     ??_LM35ReadTemp:	
  1128                           
  1129                           	psect	maintext
  1130  0062                     __pmaintext:	
  1131                           ; 1 bytes @ 0x38
  1132 ;;
  1133 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1134 ;;
  1135 ;; *************** function _main *****************
  1136 ;; Defined at:
  1137 ;;		line 134 in file "do_am.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : B1F/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1
  1151 ;;      Params:         0       0       0
  1152 ;;      Locals:         0       0       0
  1153 ;;      Temps:          0       0       3
  1154 ;;      Totals:         0       0       3
  1155 ;;Total ram usage:        3 bytes
  1156 ;; Hardware stack levels required when called:    7
  1157 ;; This function calls:
  1158 ;;		_ADCInit
  1159 ;;		_LCDByte
  1160 ;;		_LCDGotoXY
  1161 ;;		_LCDInit
  1162 ;;		_LCDWriteInt
  1163 ;;		_LCDWriteString
  1164 ;;		_LM35ReadTemp
  1165 ;;		_TriggerOutInit
  1166 ;;		_TuneButtonInit
  1167 ;; This function is called by:
  1168 ;;		Startup code after reset
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _main
  1174  0062                     _main:	
  1175                           
  1176                           ;do_am.c: 137: LCDInit(0B00000000);
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1180  0062  3000               	movlw	0
  1181  0063  25DE               	fcall	_LCDInit
  1182                           
  1183                           ;do_am.c: 140: ADCInit();
  1184  0064  27B9               	fcall	_ADCInit
  1185                           
  1186                           ;do_am.c: 143: TuneButtonInit();
  1187  0065  27DF               	fcall	_TuneButtonInit
  1188                           
  1189                           ;do_am.c: 146: TriggerOutInit();
  1190  0066  27E5               	fcall	_TriggerOutInit
  1191                           
  1192                           ;do_am.c: 151: RA4 = 0;
  1193  0067  0020               	movlb	0	; select bank0
  1194  0068  120C               	bcf	12,4	;volatile
  1195                           
  1196                           ;do_am.c: 152: RA5 = 1;
  1197  0069  168C               	bsf	12,5	;volatile
  1198                           
  1199                           ;do_am.c: 155: (LCDByte(0b00000001,0));
  1200  006A  01B3               	clrf	LCDByte@isdata
  1201  006B  3001               	movlw	1
  1202  006C  2594               	fcall	_LCDByte
  1203                           
  1204                           ;do_am.c: 157: { LCDGotoXY(0,0); LCDWriteString("Cur:");};
  1205  006D  0020               	movlb	0	; select bank0
  1206  006E  01BA               	clrf	LCDGotoXY@y
  1207  006F  3000               	movlw	0
  1208  0070  2745               	fcall	_LCDGotoXY
  1209  0071  308B               	movlw	low (STR_1| (0+32768))
  1210  0072  0020               	movlb	0	; select bank0
  1211  0073  00BA               	movwf	LCDWriteString@msg
  1212  0074  3087               	movlw	high (STR_1| (0+32768))
  1213  0075  00BB               	movwf	LCDWriteString@msg+1
  1214  0076  26B2               	fcall	_LCDWriteString
  1215                           
  1216                           ;do_am.c: 159: { LCDGotoXY(7,0); LCDWriteString("%0C");};
  1217  0077  0020               	movlb	0	; select bank0
  1218  0078  01BA               	clrf	LCDGotoXY@y
  1219  0079  3007               	movlw	7
  1220  007A  2745               	fcall	_LCDGotoXY
  1221  007B  309D               	movlw	low (STR_2| (0+32768))
  1222  007C  0020               	movlb	0	; select bank0
  1223  007D  00BA               	movwf	LCDWriteString@msg
  1224  007E  3087               	movlw	high (STR_2| (0+32768))
  1225  007F  00BB               	movwf	LCDWriteString@msg+1
  1226  0080  26B2               	fcall	_LCDWriteString
  1227                           
  1228                           ;do_am.c: 161: { LCDGotoXY(10,0); LCDWriteString("Wa:");};
  1229  0081  0020               	movlb	0	; select bank0
  1230  0082  01BA               	clrf	LCDGotoXY@y
  1231  0083  300A               	movlw	10
  1232  0084  2745               	fcall	_LCDGotoXY
  1233  0085  3099               	movlw	low (STR_3| (0+32768))
  1234  0086  0020               	movlb	0	; select bank0
  1235  0087  00BA               	movwf	LCDWriteString@msg
  1236  0088  3087               	movlw	high (STR_3| (0+32768))
  1237  0089  00BB               	movwf	LCDWriteString@msg+1
  1238  008A  26B2               	fcall	_LCDWriteString
  1239                           
  1240                           ;do_am.c: 163: { LCDGotoXY(0,1); LCDWriteString("Max:");};
  1241  008B  0020               	movlb	0	; select bank0
  1242  008C  01BA               	clrf	LCDGotoXY@y
  1243  008D  0ABA               	incf	LCDGotoXY@y,f
  1244  008E  3000               	movlw	0
  1245  008F  2745               	fcall	_LCDGotoXY
  1246  0090  3090               	movlw	low (STR_4| (0+32768))
  1247  0091  0020               	movlb	0	; select bank0
  1248  0092  00BA               	movwf	LCDWriteString@msg
  1249  0093  3087               	movlw	high (STR_4| (0+32768))
  1250  0094  00BB               	movwf	LCDWriteString@msg+1
  1251  0095  26B2               	fcall	_LCDWriteString
  1252                           
  1253                           ;do_am.c: 165: { LCDGotoXY(7,1); LCDWriteString("%0C");};
  1254  0096  0020               	movlb	0	; select bank0
  1255  0097  01BA               	clrf	LCDGotoXY@y
  1256  0098  0ABA               	incf	LCDGotoXY@y,f
  1257  0099  3007               	movlw	7
  1258  009A  2745               	fcall	_LCDGotoXY
  1259  009B  309D               	movlw	low (STR_2| (0+32768))
  1260  009C  0020               	movlb	0	; select bank0
  1261  009D  00BA               	movwf	LCDWriteString@msg
  1262  009E  3087               	movlw	high (STR_2| (0+32768))
  1263  009F  00BB               	movwf	LCDWriteString@msg+1
  1264  00A0  26B2               	fcall	_LCDWriteString
  1265                           
  1266                           ;do_am.c: 167: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1267  00A1  0020               	movlb	0	; select bank0
  1268  00A2  01BA               	clrf	LCDGotoXY@y
  1269  00A3  300D               	movlw	13
  1270  00A4  2745               	fcall	_LCDGotoXY
  1271  00A5  30A1               	movlw	low (STR_6| (0+32768))
  1272  00A6  0020               	movlb	0	; select bank0
  1273  00A7  00BA               	movwf	LCDWriteString@msg
  1274  00A8  3087               	movlw	high (STR_6| (0+32768))
  1275  00A9  00BB               	movwf	LCDWriteString@msg+1
  1276  00AA  26B2               	fcall	_LCDWriteString
  1277                           
  1278                           ;do_am.c: 169: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1279  00AB  0020               	movlb	0	; select bank0
  1280  00AC  01BA               	clrf	LCDGotoXY@y
  1281  00AD  0ABA               	incf	LCDGotoXY@y,f
  1282  00AE  3004               	movlw	4
  1283  00AF  2745               	fcall	_LCDGotoXY
  1284  00B0  0020               	movlb	0	; select bank0
  1285  00B1  0861               	movf	_tuneUpTemp+1,w
  1286  00B2  00BB               	movwf	LCDWriteInt@val+1
  1287  00B3  0860               	movf	_tuneUpTemp,w
  1288  00B4  00BA               	movwf	LCDWriteInt@val
  1289  00B5  3003               	movlw	3
  1290  00B6  0021               	movlb	1	; select bank1
  1291  00B7  00AC               	movwf	??_main^(0+128)
  1292  00B8  082C               	movf	??_main^(0+128),w
  1293  00B9  0020               	movlb	0	; select bank0
  1294  00BA  00BC               	movwf	LCDWriteInt@field_length
  1295  00BB  2294               	fcall	_LCDWriteInt
  1296                           
  1297                           ;do_am.c: 170: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1298  00BC  0020               	movlb	0	; select bank0
  1299  00BD                     L1:	
  1300  00BD  01BA               	clrf	LCDGotoXY@y
  1301  00BE  3004               	movlw	4
  1302  00BF  2745               	fcall	_LCDGotoXY
  1303  00C0  0020               	movlb	0	; select bank0
  1304  00C1  085F               	movf	_curTemp+1,w
  1305  00C2  00BB               	movwf	LCDWriteInt@val+1
  1306  00C3  085E               	movf	_curTemp,w
  1307  00C4  00BA               	movwf	LCDWriteInt@val
  1308  00C5  3003               	movlw	3
  1309  00C6  0021               	movlb	1	; select bank1
  1310  00C7  00AC               	movwf	??_main^(0+128)
  1311  00C8  082C               	movf	??_main^(0+128),w
  1312  00C9  0020               	movlb	0	; select bank0
  1313  00CA  00BC               	movwf	LCDWriteInt@field_length
  1314  00CB  2294               	fcall	_LCDWriteInt
  1315                           
  1316                           ;do_am.c: 172: {
  1317                           ;do_am.c: 174: curTemp = LM35ReadTemp();
  1318                           
  1319                           ;do_am.c: 171: while(1)
  1320  00CC  26EF               	fcall	_LM35ReadTemp
  1321  00CD  0021               	movlb	1	; select bank1
  1322  00CE  0829               	movf	(?_LM35ReadTemp+1)^(0+128),w
  1323  00CF  0020               	movlb	0	; select bank0
  1324  00D0  00DF               	movwf	_curTemp+1
  1325  00D1  0021               	movlb	1	; select bank1
  1326  00D2  0828               	movf	?_LM35ReadTemp^(0+128),w
  1327  00D3  0020               	movlb	0	; select bank0
  1328  00D4  00DE               	movwf	_curTemp
  1329                           
  1330                           ;do_am.c: 176: if((tuneUpTemp >= 5) && (curTemp >= tuneUpTemp))
  1331  00D5  0861               	movf	_tuneUpTemp+1,w
  1332  00D6  3A80               	xorlw	128
  1333  00D7  0021               	movlb	1	; select bank1
  1334  00D8  00AC               	movwf	??_main^(0+128)
  1335  00D9  3080               	movlw	128
  1336  00DA  022C               	subwf	??_main^(0+128),w
  1337  00DB  1D03               	skipz
  1338  00DC  28E0               	goto	u2795
  1339  00DD  3005               	movlw	5
  1340  00DE  0020               	movlb	0	; select bank0
  1341  00DF  0260               	subwf	_tuneUpTemp,w
  1342  00E0                     u2795:	
  1343  00E0  1C03               	skipc
  1344  00E1  2901               	goto	l2367
  1345  00E2  0020               	movlb	0	; select bank0
  1346  00E3  085F               	movf	_curTemp+1,w
  1347  00E4  3A80               	xorlw	128
  1348  00E5  0021               	movlb	1	; select bank1
  1349  00E6  00AC               	movwf	??_main^(0+128)
  1350  00E7  0020               	movlb	0	; select bank0
  1351  00E8  0861               	movf	_tuneUpTemp+1,w
  1352  00E9  3A80               	xorlw	128
  1353  00EA  0021               	movlb	1	; select bank1
  1354  00EB  022C               	subwf	??_main^(0+128),w
  1355  00EC  1D03               	skipz
  1356  00ED  28F1               	goto	u2805
  1357  00EE  0020               	movlb	0	; select bank0
  1358  00EF  0860               	movf	_tuneUpTemp,w
  1359  00F0  025E               	subwf	_curTemp,w
  1360  00F1                     u2805:	
  1361  00F1  1C03               	skipc
  1362  00F2  2901               	goto	l2367
  1363                           
  1364                           ;do_am.c: 177: {
  1365                           ;do_am.c: 178: { LCDGotoXY(13,0); LCDWriteString("ON ");};
  1366  00F3  0020               	movlb	0	; select bank0
  1367  00F4  01BA               	clrf	LCDGotoXY@y
  1368  00F5  300D               	movlw	13
  1369  00F6  2745               	fcall	_LCDGotoXY
  1370  00F7  3095               	movlw	low (STR_7| (0+32768))
  1371  00F8  0020               	movlb	0	; select bank0
  1372  00F9  00BA               	movwf	LCDWriteString@msg
  1373  00FA  3087               	movlw	high (STR_7| (0+32768))
  1374  00FB  00BB               	movwf	LCDWriteString@msg+1
  1375  00FC  26B2               	fcall	_LCDWriteString
  1376                           
  1377                           ;do_am.c: 179: RA4 = 1;
  1378  00FD  0020               	movlb	0	; select bank0
  1379  00FE  160C               	bsf	12,4	;volatile
  1380                           
  1381                           ;do_am.c: 180: RA5 = 0;
  1382  00FF  128C               	bcf	12,5	;volatile
  1383                           
  1384                           ;do_am.c: 181: }
  1385  0100  2928               	goto	l2385
  1386  0101                     l2367:	
  1387                           
  1388                           ;do_am.c: 182: else
  1389                           ;do_am.c: 183: {
  1390                           ;do_am.c: 184: if(curTemp <= tuneUpTemp - 5)
  1391  0101  0020               	movlb	0	; select bank0
  1392  0102  0860               	movf	_tuneUpTemp,w
  1393  0103  3EFB               	addlw	251
  1394  0104  0021               	movlb	1	; select bank1
  1395  0105  00AC               	movwf	??_main^(0+128)
  1396  0106  30FF               	movlw	255
  1397  0107  0020               	movlb	0	; select bank0
  1398  0108  3D61               	addwfc	_tuneUpTemp+1,w
  1399  0109  0021               	movlb	1	; select bank1
  1400  010A  00AD               	movwf	(??_main+1)^(0+128)
  1401  010B  082D               	movf	(??_main+1)^(0+128),w
  1402  010C  3A80               	xorlw	128
  1403  010D  00AE               	movwf	(??_main+2)^(0+128)
  1404  010E  0020               	movlb	0	; select bank0
  1405  010F  085F               	movf	_curTemp+1,w
  1406  0110  3A80               	xorlw	128
  1407  0111  0021               	movlb	1	; select bank1
  1408  0112  022E               	subwf	(??_main+2)^(0+128),w
  1409  0113  1D03               	skipz
  1410  0114  2919               	goto	u2815
  1411  0115  0020               	movlb	0	; select bank0
  1412  0116  085E               	movf	_curTemp,w
  1413  0117  0021               	movlb	1	; select bank1
  1414  0118  022C               	subwf	??_main^(0+128),w
  1415  0119                     u2815:	
  1416  0119  1C03               	skipc
  1417  011A  2928               	goto	l2385
  1418                           
  1419                           ;do_am.c: 185: {
  1420                           ;do_am.c: 186: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1421  011B  0020               	movlb	0	; select bank0
  1422  011C  01BA               	clrf	LCDGotoXY@y
  1423  011D  300D               	movlw	13
  1424  011E  2745               	fcall	_LCDGotoXY
  1425  011F  30A1               	movlw	low (STR_6| (0+32768))
  1426  0120  0020               	movlb	0	; select bank0
  1427  0121  00BA               	movwf	LCDWriteString@msg
  1428  0122  3087               	movlw	high (STR_6| (0+32768))
  1429  0123  00BB               	movwf	LCDWriteString@msg+1
  1430  0124  26B2               	fcall	_LCDWriteString
  1431                           
  1432                           ;do_am.c: 187: RA4 = 0;
  1433  0125  0020               	movlb	0	; select bank0
  1434  0126  120C               	bcf	12,4	;volatile
  1435                           
  1436                           ;do_am.c: 188: RA5 = 1;
  1437  0127  168C               	bsf	12,5	;volatile
  1438  0128                     l2385:	
  1439                           ;do_am.c: 189: }
  1440                           ;do_am.c: 190: }
  1441                           ;do_am.c: 191: while(RA1 == 1)
  1442                           
  1443  0128  0020               	movlb	0	; select bank0
  1444  0129  1C8C               	btfss	12,1	;volatile
  1445  012A  28BD               	goto	L1
  1446                           
  1447                           ;do_am.c: 192: {
  1448                           ;do_am.c: 193: tuneUpTemp++;
  1449  012B  3001               	movlw	1
  1450  012C  07E0               	addwf	_tuneUpTemp,f
  1451  012D  3000               	movlw	0
  1452  012E  3DE1               	addwfc	_tuneUpTemp+1,f
  1453                           
  1454                           ;do_am.c: 194: if(tuneUpTemp > 150)
  1455  012F  0861               	movf	_tuneUpTemp+1,w
  1456  0130  3A80               	xorlw	128
  1457  0131  0021               	movlb	1	; select bank1
  1458  0132  00AC               	movwf	??_main^(0+128)
  1459  0133  3080               	movlw	128
  1460  0134  022C               	subwf	??_main^(0+128),w
  1461  0135  1D03               	skipz
  1462  0136  293A               	goto	u2825
  1463  0137  3097               	movlw	151
  1464  0138  0020               	movlb	0	; select bank0
  1465  0139  0260               	subwf	_tuneUpTemp,w
  1466  013A                     u2825:	
  1467  013A  1C03               	skipc
  1468  013B  293F               	goto	l2379
  1469                           
  1470                           ;do_am.c: 195: {
  1471                           ;do_am.c: 196: tuneUpTemp = 0;
  1472  013C  0020               	movlb	0	; select bank0
  1473  013D  01E0               	clrf	_tuneUpTemp
  1474  013E  01E1               	clrf	_tuneUpTemp+1
  1475  013F                     l2379:	
  1476                           
  1477                           ;do_am.c: 197: }
  1478                           ;do_am.c: 199: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1479  013F  0020               	movlb	0	; select bank0
  1480  0140  01BA               	clrf	LCDGotoXY@y
  1481  0141  0ABA               	incf	LCDGotoXY@y,f
  1482  0142  3004               	movlw	4
  1483  0143  2745               	fcall	_LCDGotoXY
  1484  0144  0020               	movlb	0	; select bank0
  1485  0145  0861               	movf	_tuneUpTemp+1,w
  1486  0146  00BB               	movwf	LCDWriteInt@val+1
  1487  0147  0860               	movf	_tuneUpTemp,w
  1488  0148  00BA               	movwf	LCDWriteInt@val
  1489  0149  3003               	movlw	3
  1490  014A  0021               	movlb	1	; select bank1
  1491  014B  00AC               	movwf	??_main^(0+128)
  1492  014C  082C               	movf	??_main^(0+128),w
  1493  014D  0020               	movlb	0	; select bank0
  1494  014E  00BC               	movwf	LCDWriteInt@field_length
  1495  014F  2294               	fcall	_LCDWriteInt
  1496                           
  1497                           ;do_am.c: 201: _delay((unsigned long)((5)*(20000000/4000.0)));
  1498  0150  3021               	movlw	33
  1499  0151  0021               	movlb	1	; select bank1
  1500  0152  00AC               	movwf	??_main^(0+128)
  1501  0153  3076               	movlw	118
  1502  0154                     u2847:	
  1503  0154  0B89               	decfsz	9,f
  1504  0155  2954               	goto	u2847
  1505  0156  0BAC               	decfsz	??_main^(0+128),f
  1506  0157  2954               	goto	u2847
  1507  0158  0000               	nop
  1508  0159  2928               	goto	l2385
  1509  015A                     __end_of_main:	
  1510                           ;do_am.c: 209: }
  1511                           ;do_am.c: 217: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1512                           
  1513                           
  1514                           	psect	text1
  1515  07DF                     __ptext1:	
  1516 ;; *************** function _TuneButtonInit *****************
  1517 ;; Defined at:
  1518 ;;		line 79 in file "do_am.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		None
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1
  1532 ;;      Params:         0       0       0
  1533 ;;      Locals:         0       0       0
  1534 ;;      Temps:          0       0       0
  1535 ;;      Totals:         0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    4
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _TuneButtonInit
  1548  07DF                     _TuneButtonInit:	
  1549                           
  1550                           ;do_am.c: 82: INTCONbits.IOCIE = 1;
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _TuneButtonInit: []
  1554  07DF  158B               	bsf	11,3	;volatile
  1555                           
  1556                           ;do_am.c: 84: (TRISAbits.TRISA1 = 1);
  1557  07E0  0021               	movlb	1	; select bank1
  1558  07E1  148C               	bsf	12,1	;volatile
  1559                           
  1560                           ;do_am.c: 85: ANSELAbits.ANSA1 = 0;
  1561  07E2  0023               	movlb	3	; select bank3
  1562  07E3  108C               	bcf	12,1	;volatile
  1563  07E4  0008               	return
  1564  07E5                     __end_of_TuneButtonInit:	
  1565                           
  1566                           	psect	text2
  1567  07E5                     __ptext2:	
  1568 ;; *************** function _TriggerOutInit *****************
  1569 ;; Defined at:
  1570 ;;		line 64 in file "do_am.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		None
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1
  1584 ;;      Params:         0       0       0
  1585 ;;      Locals:         0       0       0
  1586 ;;      Temps:          0       0       0
  1587 ;;      Totals:         0       0       0
  1588 ;;Total ram usage:        0 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    4
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           
  1599                           ;psect for function _TriggerOutInit
  1600  07E5                     _TriggerOutInit:	
  1601                           
  1602                           ;do_am.c: 67: (TRISAbits.TRISA4 = 0);
  1603                           
  1604                           ;incstack = 0
  1605                           ; Regs used in _TriggerOutInit: []
  1606  07E5  0021               	movlb	1	; select bank1
  1607  07E6  120C               	bcf	12,4	;volatile
  1608                           
  1609                           ;do_am.c: 68: (TRISAbits.TRISA5 = 0);
  1610  07E7  128C               	bcf	12,5	;volatile
  1611                           
  1612                           ;do_am.c: 70: ANSELAbits.ANSA4 = 0;
  1613  07E8  0023               	movlb	3	; select bank3
  1614  07E9  120C               	bcf	12,4	;volatile
  1615  07EA  0008               	return
  1616  07EB                     __end_of_TriggerOutInit:	
  1617                           
  1618                           	psect	text3
  1619  06EF                     __ptext3:	
  1620 ;; *************** function _LM35ReadTemp *****************
  1621 ;; Defined at:
  1622 ;;		line 8 in file "lm35_pic16.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  adc_value       2    2[BANK1 ] unsigned int 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2    0[BANK1 ] int 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, pclath, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1
  1636 ;;      Params:         0       0       2
  1637 ;;      Locals:         0       0       2
  1638 ;;      Temps:          0       0       0
  1639 ;;      Totals:         0       0       4
  1640 ;;Total ram usage:        4 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    6
  1643 ;; This function calls:
  1644 ;;		_ReadADC
  1645 ;;		___ftmul
  1646 ;;		___fttol
  1647 ;;		___lwtoft
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _LM35ReadTemp
  1655  06EF                     _LM35ReadTemp:	
  1656                           
  1657                           ;lm35_pic16.c: 14: uint16_t adc_value=ReadADC(2);
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in _LM35ReadTemp: [wreg+status,2+status,0+pclath+cstack]
  1661  06EF  3002               	movlw	2
  1662  06F0  2720               	fcall	_ReadADC
  1663  06F1  0020               	movlb	0	; select bank0
  1664  06F2  082F               	movf	?_ReadADC+1,w
  1665  06F3  0021               	movlb	1	; select bank1
  1666  06F4  00AB               	movwf	(LM35ReadTemp@adc_value+1)^(0+128)
  1667  06F5  0020               	movlb	0	; select bank0
  1668  06F6  082E               	movf	?_ReadADC,w
  1669  06F7  0021               	movlb	1	; select bank1
  1670  06F8  00AA               	movwf	LM35ReadTemp@adc_value^(0+128)
  1671                           
  1672                           ;lm35_pic16.c: 28: return (int)(adc_value*0.4887);
  1673  06F9  082B               	movf	(LM35ReadTemp@adc_value+1)^(0+128),w
  1674  06FA  0020               	movlb	0	; select bank0
  1675  06FB  00B7               	movwf	___lwtoft@c+1
  1676  06FC  0021               	movlb	1	; select bank1
  1677  06FD  082A               	movf	LM35ReadTemp@adc_value^(0+128),w
  1678  06FE  0020               	movlb	0	; select bank0
  1679  06FF  00B6               	movwf	___lwtoft@c
  1680  0700  27A5               	fcall	___lwtoft
  1681  0701  0020               	movlb	0	; select bank0
  1682  0702  0836               	movf	?___lwtoft,w
  1683  0703  00BD               	movwf	___ftmul@f2
  1684  0704  0837               	movf	?___lwtoft+1,w
  1685  0705  00BE               	movwf	___ftmul@f2+1
  1686  0706  0838               	movf	?___lwtoft+2,w
  1687  0707  00BF               	movwf	___ftmul@f2+2
  1688  0708  3037               	movlw	55
  1689  0709  00BA               	movwf	___ftmul@f1
  1690  070A  30FA               	movlw	250
  1691  070B  00BB               	movwf	___ftmul@f1+1
  1692  070C  303E               	movlw	62
  1693  070D  00BC               	movwf	___ftmul@f1+2
  1694  070E  215A               	fcall	___ftmul
  1695  070F  0020               	movlb	0	; select bank0
  1696  0710  083A               	movf	?___ftmul,w
  1697  0711  00CA               	movwf	___fttol@f1
  1698  0712  083B               	movf	?___ftmul+1,w
  1699  0713  00CB               	movwf	___fttol@f1+1
  1700  0714  083C               	movf	?___ftmul+2,w
  1701  0715  00CC               	movwf	___fttol@f1+2
  1702  0716  220D               	fcall	___fttol
  1703  0717  0020               	movlb	0	; select bank0
  1704  0718  084B               	movf	?___fttol+1,w
  1705  0719  0021               	movlb	1	; select bank1
  1706  071A  00A9               	movwf	(?_LM35ReadTemp+1)^(0+128)
  1707  071B  0020               	movlb	0	; select bank0
  1708  071C  084A               	movf	?___fttol,w
  1709  071D  0021               	movlb	1	; select bank1
  1710  071E  00A8               	movwf	?_LM35ReadTemp^(0+128)
  1711  071F  0008               	return
  1712  0720                     __end_of_LM35ReadTemp:	
  1713                           
  1714                           	psect	text4
  1715  07A5                     __ptext4:	
  1716 ;; *************** function ___lwtoft *****************
  1717 ;; Defined at:
  1718 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  c               2   22[BANK0 ] unsigned int 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  3   22[BANK0 ] float 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, pclath, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1
  1732 ;;      Params:         0       3       0
  1733 ;;      Locals:         0       0       0
  1734 ;;      Temps:          0       1       0
  1735 ;;      Totals:         0       4       0
  1736 ;;Total ram usage:        4 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    5
  1739 ;; This function calls:
  1740 ;;		___ftpack
  1741 ;; This function is called by:
  1742 ;;		_LM35ReadTemp
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function ___lwtoft
  1748  07A5                     ___lwtoft:	
  1749                           
  1750                           ;incstack = 0
  1751                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1752  07A5  0020               	movlb	0	; select bank0
  1753  07A6  0836               	movf	___lwtoft@c,w
  1754  07A7  00AE               	movwf	___ftpack@arg
  1755  07A8  0837               	movf	___lwtoft@c+1,w
  1756  07A9  00AF               	movwf	___ftpack@arg+1
  1757  07AA  01B0               	clrf	___ftpack@arg+2
  1758  07AB  308E               	movlw	142
  1759  07AC  00B9               	movwf	??___lwtoft
  1760  07AD  0839               	movf	??___lwtoft,w
  1761  07AE  00B1               	movwf	___ftpack@exp
  1762  07AF  01B2               	clrf	___ftpack@sign
  1763  07B0  2394               	fcall	___ftpack
  1764  07B1  0020               	movlb	0	; select bank0
  1765  07B2  082E               	movf	?___ftpack,w
  1766  07B3  00B6               	movwf	?___lwtoft
  1767  07B4  082F               	movf	?___ftpack+1,w
  1768  07B5  00B7               	movwf	?___lwtoft+1
  1769  07B6  0830               	movf	?___ftpack+2,w
  1770  07B7  00B8               	movwf	?___lwtoft+2
  1771  07B8  0008               	return
  1772  07B9                     __end_of___lwtoft:	
  1773                           
  1774                           	psect	text5
  1775  020D                     __ptext5:	
  1776 ;; *************** function ___fttol *****************
  1777 ;; Defined at:
  1778 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\fttol.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  f1              3   42[BANK0 ] float 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  lval            4   51[BANK0 ] unsigned long 
  1783 ;;  exp1            1   55[BANK0 ] unsigned char 
  1784 ;;  sign1           1   50[BANK0 ] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  4   42[BANK0 ] long 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1
  1794 ;;      Params:         0       4       0
  1795 ;;      Locals:         0       6       0
  1796 ;;      Temps:          0       4       0
  1797 ;;      Totals:         0      14       0
  1798 ;;Total ram usage:       14 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    4
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_LM35ReadTemp
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function ___fttol
  1810  020D                     ___fttol:	
  1811                           
  1812                           ;incstack = 0
  1813                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1814  020D  0020               	movlb	0	; select bank0
  1815  020E  084A               	movf	___fttol@f1,w
  1816  020F  00CE               	movwf	??___fttol
  1817  0210  084B               	movf	___fttol@f1+1,w
  1818  0211  00CF               	movwf	??___fttol+1
  1819  0212  084C               	movf	___fttol@f1+2,w
  1820  0213  00D0               	movwf	??___fttol+2
  1821  0214  1003               	clrc
  1822  0215  0D4F               	rlf	??___fttol+1,w
  1823  0216  0D50               	rlf	??___fttol+2,w
  1824  0217  00D1               	movwf	??___fttol+3
  1825  0218  0851               	movf	??___fttol+3,w
  1826  0219  00D7               	movwf	___fttol@exp1
  1827  021A  0857               	movf	___fttol@exp1,w
  1828  021B  1D03               	btfss	3,2
  1829  021C  2A26               	goto	l2265
  1830  021D  3000               	movlw	0
  1831  021E  00CD               	movwf	?___fttol+3
  1832  021F  3000               	movlw	0
  1833  0220  00CC               	movwf	?___fttol+2
  1834  0221  3000               	movlw	0
  1835  0222  00CB               	movwf	?___fttol+1
  1836  0223  3000               	movlw	0
  1837  0224  00CA               	movwf	?___fttol
  1838  0225  0008               	return
  1839  0226                     l2265:	
  1840  0226  084A               	movf	___fttol@f1,w
  1841  0227  00CE               	movwf	??___fttol
  1842  0228  084B               	movf	___fttol@f1+1,w
  1843  0229  00CF               	movwf	??___fttol+1
  1844  022A  084C               	movf	___fttol@f1+2,w
  1845  022B  00D0               	movwf	??___fttol+2
  1846  022C  3017               	movlw	23
  1847  022D                     u2705:	
  1848  022D  36D0               	lsrf	??___fttol+2,f
  1849  022E  0CCF               	rrf	??___fttol+1,f
  1850  022F  0CCE               	rrf	??___fttol,f
  1851  0230  0B89               	decfsz	9,f
  1852  0231  2A2D               	goto	u2705
  1853  0232  084E               	movf	??___fttol,w
  1854  0233  00D1               	movwf	??___fttol+3
  1855  0234  0851               	movf	??___fttol+3,w
  1856  0235  00D2               	movwf	___fttol@sign1
  1857  0236  17CB               	bsf	___fttol@f1+1,7
  1858  0237  30FF               	movlw	255
  1859  0238  05CA               	andwf	___fttol@f1,f
  1860  0239  30FF               	movlw	255
  1861  023A  05CB               	andwf	___fttol@f1+1,f
  1862  023B  3000               	movlw	0
  1863  023C  05CC               	andwf	___fttol@f1+2,f
  1864  023D  084A               	movf	___fttol@f1,w
  1865  023E  00D3               	movwf	___fttol@lval
  1866  023F  084B               	movf	___fttol@f1+1,w
  1867  0240  00D4               	movwf	___fttol@lval+1
  1868  0241  084C               	movf	___fttol@f1+2,w
  1869  0242  00D5               	movwf	___fttol@lval+2
  1870  0243  01D6               	clrf	___fttol@lval+3
  1871  0244  308E               	movlw	142
  1872  0245  02D7               	subwf	___fttol@exp1,f
  1873  0246  1FD7               	btfss	___fttol@exp1,7
  1874  0247  2A64               	goto	l2285
  1875  0248  0857               	movf	___fttol@exp1,w
  1876  0249  3A80               	xorlw	128
  1877  024A  3E8F               	addlw	143
  1878  024B  1803               	skipnc
  1879  024C  2A56               	goto	l2283
  1880  024D  3000               	movlw	0
  1881  024E  00CD               	movwf	?___fttol+3
  1882  024F  3000               	movlw	0
  1883  0250  00CC               	movwf	?___fttol+2
  1884  0251  3000               	movlw	0
  1885  0252  00CB               	movwf	?___fttol+1
  1886  0253  3000               	movlw	0
  1887  0254  00CA               	movwf	?___fttol
  1888  0255  0008               	return
  1889  0256                     l2283:	
  1890  0256  3001               	movlw	1
  1891  0257                     u2735:	
  1892  0257  36D6               	lsrf	___fttol@lval+3,f
  1893  0258  0CD5               	rrf	___fttol@lval+2,f
  1894  0259  0CD4               	rrf	___fttol@lval+1,f
  1895  025A  0CD3               	rrf	___fttol@lval,f
  1896  025B  0B89               	decfsz	9,f
  1897  025C  2A57               	goto	u2735
  1898  025D  3001               	movlw	1
  1899  025E  00CE               	movwf	??___fttol
  1900  025F  084E               	movf	??___fttol,w
  1901  0260  07D7               	addwf	___fttol@exp1,f
  1902  0261  1903               	btfsc	3,2
  1903  0262  2A7D               	goto	l2293
  1904  0263  2A56               	goto	l2283
  1905  0264                     l2285:	
  1906  0264  3018               	movlw	24
  1907  0265  0257               	subwf	___fttol@exp1,w
  1908  0266  1C03               	skipc
  1909  0267  2A7A               	goto	l501
  1910  0268  3000               	movlw	0
  1911  0269  00CD               	movwf	?___fttol+3
  1912  026A  3000               	movlw	0
  1913  026B  00CC               	movwf	?___fttol+2
  1914  026C  3000               	movlw	0
  1915  026D  00CB               	movwf	?___fttol+1
  1916  026E  3000               	movlw	0
  1917  026F  00CA               	movwf	?___fttol
  1918  0270  0008               	return
  1919  0271                     l2291:	
  1920  0271  3001               	movlw	1
  1921  0272                     u2765:	
  1922  0272  35D3               	lslf	___fttol@lval,f
  1923  0273  0DD4               	rlf	___fttol@lval+1,f
  1924  0274  0DD5               	rlf	___fttol@lval+2,f
  1925  0275  0DD6               	rlf	___fttol@lval+3,f
  1926  0276  0B89               	decfsz	9,f
  1927  0277  2A72               	goto	u2765
  1928  0278  3001               	movlw	1
  1929  0279  02D7               	subwf	___fttol@exp1,f
  1930  027A                     l501:	
  1931  027A  0857               	movf	___fttol@exp1,w
  1932  027B  1D03               	btfss	3,2
  1933  027C  2A71               	goto	l2291
  1934  027D                     l2293:	
  1935  027D  0852               	movf	___fttol@sign1,w
  1936  027E  1903               	btfsc	3,2
  1937  027F  2A8B               	goto	l2297
  1938  0280  09D3               	comf	___fttol@lval,f
  1939  0281  09D4               	comf	___fttol@lval+1,f
  1940  0282  09D5               	comf	___fttol@lval+2,f
  1941  0283  09D6               	comf	___fttol@lval+3,f
  1942  0284  0AD3               	incf	___fttol@lval,f
  1943  0285  1903               	skipnz
  1944  0286  0AD4               	incf	___fttol@lval+1,f
  1945  0287  1903               	skipnz
  1946  0288  0AD5               	incf	___fttol@lval+2,f
  1947  0289  1903               	skipnz
  1948  028A  0AD6               	incf	___fttol@lval+3,f
  1949  028B                     l2297:	
  1950  028B  0856               	movf	___fttol@lval+3,w
  1951  028C  00CD               	movwf	?___fttol+3
  1952  028D  0855               	movf	___fttol@lval+2,w
  1953  028E  00CC               	movwf	?___fttol+2
  1954  028F  0854               	movf	___fttol@lval+1,w
  1955  0290  00CB               	movwf	?___fttol+1
  1956  0291  0853               	movf	___fttol@lval,w
  1957  0292  00CA               	movwf	?___fttol
  1958  0293  0008               	return
  1959  0294                     __end_of___fttol:	
  1960                           
  1961                           	psect	text6
  1962  015A                     __ptext6:	
  1963 ;; *************** function ___ftmul *****************
  1964 ;; Defined at:
  1965 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\ftmul.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  f1              3   26[BANK0 ] float 
  1968 ;;  f2              3   29[BANK0 ] float 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  f3_as_produc    3   37[BANK0 ] unsigned um
  1971 ;;  sign            1   41[BANK0 ] unsigned char 
  1972 ;;  cntr            1   40[BANK0 ] unsigned char 
  1973 ;;  exp             1   36[BANK0 ] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  3   26[BANK0 ] float 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, pclath, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1
  1983 ;;      Params:         0       6       0
  1984 ;;      Locals:         0       6       0
  1985 ;;      Temps:          0       4       0
  1986 ;;      Totals:         0      16       0
  1987 ;;Total ram usage:       16 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    5
  1990 ;; This function calls:
  1991 ;;		___ftpack
  1992 ;; This function is called by:
  1993 ;;		_LM35ReadTemp
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function ___ftmul
  1999  015A                     ___ftmul:	
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2003  015A  0020               	movlb	0	; select bank0
  2004  015B  083A               	movf	___ftmul@f1,w
  2005  015C  00C0               	movwf	??___ftmul
  2006  015D  083B               	movf	___ftmul@f1+1,w
  2007  015E  00C1               	movwf	??___ftmul+1
  2008  015F  083C               	movf	___ftmul@f1+2,w
  2009  0160  00C2               	movwf	??___ftmul+2
  2010  0161  1003               	clrc
  2011  0162  0D41               	rlf	??___ftmul+1,w
  2012  0163  0D42               	rlf	??___ftmul+2,w
  2013  0164  00C3               	movwf	??___ftmul+3
  2014  0165  0843               	movf	??___ftmul+3,w
  2015  0166  00C4               	movwf	___ftmul@exp
  2016  0167  0844               	movf	___ftmul@exp,w
  2017  0168  1D03               	btfss	3,2
  2018  0169  2971               	goto	l2215
  2019  016A  3000               	movlw	0
  2020  016B  00BA               	movwf	?___ftmul
  2021  016C  3000               	movlw	0
  2022  016D  00BB               	movwf	?___ftmul+1
  2023  016E  3000               	movlw	0
  2024  016F  00BC               	movwf	?___ftmul+2
  2025  0170  0008               	return
  2026  0171                     l2215:	
  2027  0171  083D               	movf	___ftmul@f2,w
  2028  0172  00C0               	movwf	??___ftmul
  2029  0173  083E               	movf	___ftmul@f2+1,w
  2030  0174  00C1               	movwf	??___ftmul+1
  2031  0175  083F               	movf	___ftmul@f2+2,w
  2032  0176  00C2               	movwf	??___ftmul+2
  2033  0177  1003               	clrc
  2034  0178  0D41               	rlf	??___ftmul+1,w
  2035  0179  0D42               	rlf	??___ftmul+2,w
  2036  017A  00C3               	movwf	??___ftmul+3
  2037  017B  0843               	movf	??___ftmul+3,w
  2038  017C  00C9               	movwf	___ftmul@sign
  2039  017D  0849               	movf	___ftmul@sign,w
  2040  017E  1D03               	btfss	3,2
  2041  017F  2987               	goto	l2221
  2042  0180  3000               	movlw	0
  2043  0181  00BA               	movwf	?___ftmul
  2044  0182  3000               	movlw	0
  2045  0183  00BB               	movwf	?___ftmul+1
  2046  0184  3000               	movlw	0
  2047  0185  00BC               	movwf	?___ftmul+2
  2048  0186  0008               	return
  2049  0187                     l2221:	
  2050  0187  0849               	movf	___ftmul@sign,w
  2051  0188  3E7B               	addlw	123
  2052  0189  00C0               	movwf	??___ftmul
  2053  018A  0840               	movf	??___ftmul,w
  2054  018B  07C4               	addwf	___ftmul@exp,f
  2055  018C  083A               	movf	___ftmul@f1,w
  2056  018D  00C0               	movwf	??___ftmul
  2057  018E  083B               	movf	___ftmul@f1+1,w
  2058  018F  00C1               	movwf	??___ftmul+1
  2059  0190  083C               	movf	___ftmul@f1+2,w
  2060  0191  00C2               	movwf	??___ftmul+2
  2061  0192  3010               	movlw	16
  2062  0193                     u2595:	
  2063  0193  36C2               	lsrf	??___ftmul+2,f
  2064  0194  0CC1               	rrf	??___ftmul+1,f
  2065  0195  0CC0               	rrf	??___ftmul,f
  2066  0196  0B89               	decfsz	9,f
  2067  0197  2993               	goto	u2595
  2068  0198  0840               	movf	??___ftmul,w
  2069  0199  00C3               	movwf	??___ftmul+3
  2070  019A  0843               	movf	??___ftmul+3,w
  2071  019B  00C9               	movwf	___ftmul@sign
  2072  019C  083D               	movf	___ftmul@f2,w
  2073  019D  00C0               	movwf	??___ftmul
  2074  019E  083E               	movf	___ftmul@f2+1,w
  2075  019F  00C1               	movwf	??___ftmul+1
  2076  01A0  083F               	movf	___ftmul@f2+2,w
  2077  01A1  00C2               	movwf	??___ftmul+2
  2078  01A2  3010               	movlw	16
  2079  01A3                     u2605:	
  2080  01A3  36C2               	lsrf	??___ftmul+2,f
  2081  01A4  0CC1               	rrf	??___ftmul+1,f
  2082  01A5  0CC0               	rrf	??___ftmul,f
  2083  01A6  0B89               	decfsz	9,f
  2084  01A7  29A3               	goto	u2605
  2085  01A8  0840               	movf	??___ftmul,w
  2086  01A9  00C3               	movwf	??___ftmul+3
  2087  01AA  0843               	movf	??___ftmul+3,w
  2088  01AB  06C9               	xorwf	___ftmul@sign,f
  2089  01AC  3080               	movlw	128
  2090  01AD  00C0               	movwf	??___ftmul
  2091  01AE  0840               	movf	??___ftmul,w
  2092  01AF  05C9               	andwf	___ftmul@sign,f
  2093  01B0  17BB               	bsf	___ftmul@f1+1,7
  2094  01B1  17BE               	bsf	___ftmul@f2+1,7
  2095  01B2  30FF               	movlw	255
  2096  01B3  05BD               	andwf	___ftmul@f2,f
  2097  01B4  30FF               	movlw	255
  2098  01B5  05BE               	andwf	___ftmul@f2+1,f
  2099  01B6  3000               	movlw	0
  2100  01B7  05BF               	andwf	___ftmul@f2+2,f
  2101  01B8  3000               	movlw	0
  2102  01B9  00C5               	movwf	___ftmul@f3_as_product
  2103  01BA  3000               	movlw	0
  2104  01BB  00C6               	movwf	___ftmul@f3_as_product+1
  2105  01BC  3000               	movlw	0
  2106  01BD  00C7               	movwf	___ftmul@f3_as_product+2
  2107  01BE  3007               	movlw	7
  2108  01BF  00C0               	movwf	??___ftmul
  2109  01C0  0840               	movf	??___ftmul,w
  2110  01C1  00C8               	movwf	___ftmul@cntr
  2111  01C2                     l2233:	
  2112  01C2  1C3A               	btfss	___ftmul@f1,0
  2113  01C3  29CA               	goto	l2237
  2114  01C4  083D               	movf	___ftmul@f2,w
  2115  01C5  07C5               	addwf	___ftmul@f3_as_product,f
  2116  01C6  083E               	movf	___ftmul@f2+1,w
  2117  01C7  3DC6               	addwfc	___ftmul@f3_as_product+1,f
  2118  01C8  083F               	movf	___ftmul@f2+2,w
  2119  01C9  3DC7               	addwfc	___ftmul@f3_as_product+2,f
  2120  01CA                     l2237:	
  2121  01CA  3001               	movlw	1
  2122  01CB                     u2625:	
  2123  01CB  36BC               	lsrf	___ftmul@f1+2,f
  2124  01CC  0CBB               	rrf	___ftmul@f1+1,f
  2125  01CD  0CBA               	rrf	___ftmul@f1,f
  2126  01CE  0B89               	decfsz	9,f
  2127  01CF  29CB               	goto	u2625
  2128  01D0  3001               	movlw	1
  2129  01D1                     u2635:	
  2130  01D1  35BD               	lslf	___ftmul@f2,f
  2131  01D2  0DBE               	rlf	___ftmul@f2+1,f
  2132  01D3  0DBF               	rlf	___ftmul@f2+2,f
  2133  01D4  0B89               	decfsz	9,f
  2134  01D5  29D1               	goto	u2635
  2135  01D6  3001               	movlw	1
  2136  01D7  02C8               	subwf	___ftmul@cntr,f
  2137  01D8  1D03               	btfss	3,2
  2138  01D9  29C2               	goto	l2233
  2139  01DA  3009               	movlw	9
  2140  01DB  00C0               	movwf	??___ftmul
  2141  01DC  0840               	movf	??___ftmul,w
  2142  01DD  00C8               	movwf	___ftmul@cntr
  2143  01DE                     l2245:	
  2144  01DE  1C3A               	btfss	___ftmul@f1,0
  2145  01DF  29E6               	goto	l2249
  2146  01E0  083D               	movf	___ftmul@f2,w
  2147  01E1  07C5               	addwf	___ftmul@f3_as_product,f
  2148  01E2  083E               	movf	___ftmul@f2+1,w
  2149  01E3  3DC6               	addwfc	___ftmul@f3_as_product+1,f
  2150  01E4  083F               	movf	___ftmul@f2+2,w
  2151  01E5  3DC7               	addwfc	___ftmul@f3_as_product+2,f
  2152  01E6                     l2249:	
  2153  01E6  3001               	movlw	1
  2154  01E7                     u2665:	
  2155  01E7  36BC               	lsrf	___ftmul@f1+2,f
  2156  01E8  0CBB               	rrf	___ftmul@f1+1,f
  2157  01E9  0CBA               	rrf	___ftmul@f1,f
  2158  01EA  0B89               	decfsz	9,f
  2159  01EB  29E7               	goto	u2665
  2160  01EC  3001               	movlw	1
  2161  01ED                     u2675:	
  2162  01ED  36C7               	lsrf	___ftmul@f3_as_product+2,f
  2163  01EE  0CC6               	rrf	___ftmul@f3_as_product+1,f
  2164  01EF  0CC5               	rrf	___ftmul@f3_as_product,f
  2165  01F0  0B89               	decfsz	9,f
  2166  01F1  29ED               	goto	u2675
  2167  01F2  3001               	movlw	1
  2168  01F3  02C8               	subwf	___ftmul@cntr,f
  2169  01F4  1D03               	btfss	3,2
  2170  01F5  29DE               	goto	l2245
  2171  01F6  0845               	movf	___ftmul@f3_as_product,w
  2172  01F7  00AE               	movwf	___ftpack@arg
  2173  01F8  0846               	movf	___ftmul@f3_as_product+1,w
  2174  01F9  00AF               	movwf	___ftpack@arg+1
  2175  01FA  0847               	movf	___ftmul@f3_as_product+2,w
  2176  01FB  00B0               	movwf	___ftpack@arg+2
  2177  01FC  0844               	movf	___ftmul@exp,w
  2178  01FD  00C0               	movwf	??___ftmul
  2179  01FE  0840               	movf	??___ftmul,w
  2180  01FF  00B1               	movwf	___ftpack@exp
  2181  0200  0849               	movf	___ftmul@sign,w
  2182  0201  00C1               	movwf	??___ftmul+1
  2183  0202  0841               	movf	??___ftmul+1,w
  2184  0203  00B2               	movwf	___ftpack@sign
  2185  0204  2394               	fcall	___ftpack
  2186  0205  0020               	movlb	0	; select bank0
  2187  0206  082E               	movf	?___ftpack,w
  2188  0207  00BA               	movwf	?___ftmul
  2189  0208  082F               	movf	?___ftpack+1,w
  2190  0209  00BB               	movwf	?___ftmul+1
  2191  020A  0830               	movf	?___ftpack+2,w
  2192  020B  00BC               	movwf	?___ftmul+2
  2193  020C  0008               	return
  2194  020D                     __end_of___ftmul:	
  2195                           
  2196                           	psect	text7
  2197  0394                     __ptext7:	
  2198 ;; *************** function ___ftpack *****************
  2199 ;; Defined at:
  2200 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\float.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  arg             3   14[BANK0 ] unsigned um
  2203 ;;  exp             1   17[BANK0 ] unsigned char 
  2204 ;;  sign            1   18[BANK0 ] unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  3   14[BANK0 ] float 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1
  2216 ;;      Params:         0       5       0
  2217 ;;      Locals:         0       0       0
  2218 ;;      Temps:          0       3       0
  2219 ;;      Totals:         0       8       0
  2220 ;;Total ram usage:        8 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    4
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		___ftmul
  2227 ;;		___lwtoft
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           
  2232                           ;psect for function ___ftpack
  2233  0394                     ___ftpack:	
  2234                           
  2235                           ;incstack = 0
  2236                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2237  0394  0020               	movlb	0	; select bank0
  2238  0395  0831               	movf	___ftpack@exp,w
  2239  0396  1903               	btfsc	3,2
  2240  0397  2B9D               	goto	l2165
  2241  0398  0830               	movf	___ftpack@arg+2,w
  2242  0399  042F               	iorwf	___ftpack@arg+1,w
  2243  039A  042E               	iorwf	___ftpack@arg,w
  2244  039B  1D03               	skipz
  2245  039C  2BAE               	goto	l2171
  2246  039D                     l2165:	
  2247  039D  3000               	movlw	0
  2248  039E  00AE               	movwf	?___ftpack
  2249  039F  3000               	movlw	0
  2250  03A0  00AF               	movwf	?___ftpack+1
  2251  03A1  3000               	movlw	0
  2252  03A2  00B0               	movwf	?___ftpack+2
  2253  03A3  0008               	return
  2254  03A4                     l2169:	
  2255  03A4  3001               	movlw	1
  2256  03A5  00B3               	movwf	??___ftpack
  2257  03A6  0833               	movf	??___ftpack,w
  2258  03A7  07B1               	addwf	___ftpack@exp,f
  2259  03A8  3001               	movlw	1
  2260  03A9                     u2455:	
  2261  03A9  36B0               	lsrf	___ftpack@arg+2,f
  2262  03AA  0CAF               	rrf	___ftpack@arg+1,f
  2263  03AB  0CAE               	rrf	___ftpack@arg,f
  2264  03AC  0B89               	decfsz	9,f
  2265  03AD  2BA9               	goto	u2455
  2266  03AE                     l2171:	
  2267  03AE  30FE               	movlw	254
  2268  03AF  0530               	andwf	___ftpack@arg+2,w
  2269  03B0  1903               	btfsc	3,2
  2270  03B1  2BC7               	goto	l410
  2271  03B2  2BA4               	goto	l2169
  2272  03B3                     l2173:	
  2273  03B3  3001               	movlw	1
  2274  03B4  00B3               	movwf	??___ftpack
  2275  03B5  0833               	movf	??___ftpack,w
  2276  03B6  07B1               	addwf	___ftpack@exp,f
  2277  03B7  3001               	movlw	1
  2278  03B8  07AE               	addwf	___ftpack@arg,f
  2279  03B9  3000               	movlw	0
  2280  03BA  1803               	skipnc
  2281  03BB  3001               	movlw	1
  2282  03BC  07AF               	addwf	___ftpack@arg+1,f
  2283  03BD  3000               	movlw	0
  2284  03BE  1803               	skipnc
  2285  03BF  3001               	movlw	1
  2286  03C0  07B0               	addwf	___ftpack@arg+2,f
  2287  03C1  3001               	movlw	1
  2288  03C2                     u2475:	
  2289  03C2  36B0               	lsrf	___ftpack@arg+2,f
  2290  03C3  0CAF               	rrf	___ftpack@arg+1,f
  2291  03C4  0CAE               	rrf	___ftpack@arg,f
  2292  03C5  0B89               	decfsz	9,f
  2293  03C6  2BC2               	goto	u2475
  2294  03C7                     l410:	
  2295  03C7  30FF               	movlw	255
  2296  03C8  0530               	andwf	___ftpack@arg+2,w
  2297  03C9  1903               	btfsc	3,2
  2298  03CA  2BD4               	goto	l2181
  2299  03CB  2BB3               	goto	l2173
  2300  03CC                     l2179:	
  2301  03CC  3001               	movlw	1
  2302  03CD  02B1               	subwf	___ftpack@exp,f
  2303  03CE  3001               	movlw	1
  2304  03CF                     u2495:	
  2305  03CF  35AE               	lslf	___ftpack@arg,f
  2306  03D0  0DAF               	rlf	___ftpack@arg+1,f
  2307  03D1  0DB0               	rlf	___ftpack@arg+2,f
  2308  03D2  0B89               	decfsz	9,f
  2309  03D3  2BCF               	goto	u2495
  2310  03D4                     l2181:	
  2311  03D4  1BAF               	btfsc	___ftpack@arg+1,7
  2312  03D5  2BDA               	goto	l417
  2313  03D6  3002               	movlw	2
  2314  03D7  0231               	subwf	___ftpack@exp,w
  2315  03D8  1803               	skipnc
  2316  03D9  2BCC               	goto	l2179
  2317  03DA                     l417:	
  2318  03DA  1831               	btfsc	___ftpack@exp,0
  2319  03DB  2BE2               	goto	l418
  2320  03DC  30FF               	movlw	255
  2321  03DD  05AE               	andwf	___ftpack@arg,f
  2322  03DE  307F               	movlw	127
  2323  03DF  05AF               	andwf	___ftpack@arg+1,f
  2324  03E0  30FF               	movlw	255
  2325  03E1  05B0               	andwf	___ftpack@arg+2,f
  2326  03E2                     l418:	
  2327  03E2  1003               	clrc
  2328  03E3  0CB1               	rrf	___ftpack@exp,f
  2329  03E4  0831               	movf	___ftpack@exp,w
  2330  03E5  00B3               	movwf	??___ftpack
  2331  03E6  01B4               	clrf	??___ftpack+1
  2332  03E7  01B5               	clrf	??___ftpack+2
  2333  03E8  3010               	movlw	16
  2334  03E9                     u2535:	
  2335  03E9  35B3               	lslf	??___ftpack,f
  2336  03EA  0DB4               	rlf	??___ftpack+1,f
  2337  03EB  0DB5               	rlf	??___ftpack+2,f
  2338  03EC  0B89               	decfsz	9,f
  2339  03ED  2BE9               	goto	u2535
  2340  03EE  0833               	movf	??___ftpack,w
  2341  03EF  04AE               	iorwf	___ftpack@arg,f
  2342  03F0  0834               	movf	??___ftpack+1,w
  2343  03F1  04AF               	iorwf	___ftpack@arg+1,f
  2344  03F2  0835               	movf	??___ftpack+2,w
  2345  03F3  04B0               	iorwf	___ftpack@arg+2,f
  2346  03F4  0832               	movf	___ftpack@sign,w
  2347  03F5  1903               	btfsc	3,2
  2348  03F6  0008               	return
  2349  03F7  17B0               	bsf	___ftpack@arg+2,7
  2350  03F8  0008               	return
  2351  03F9                     __end_of___ftpack:	
  2352                           
  2353                           	psect	text8
  2354  0720                     __ptext8:	
  2355 ;; *************** function _ReadADC *****************
  2356 ;; Defined at:
  2357 ;;		line 40 in file "adc_pic16.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  ch              1    wreg     unsigned char 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  ch              1   17[BANK0 ] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  2   14[BANK0 ] unsigned int 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1
  2371 ;;      Params:         0       2       0
  2372 ;;      Locals:         0       1       0
  2373 ;;      Temps:          0       1       0
  2374 ;;      Totals:         0       4       0
  2375 ;;Total ram usage:        4 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    4
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_LM35ReadTemp
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _ReadADC
  2387  0720                     _ReadADC:	
  2388                           
  2389                           ;incstack = 0
  2390                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  2391                           ;ReadADC@ch stored from wreg
  2392  0720  0020               	movlb	0	; select bank0
  2393  0721  00B1               	movwf	ReadADC@ch
  2394                           
  2395                           ;adc_pic16.c: 42: if(ch>7) return 0;
  2396  0722  3008               	movlw	8
  2397  0723  0231               	subwf	ReadADC@ch,w
  2398  0724  1C03               	skipc
  2399  0725  2F29               	goto	l2199
  2400  0726  01AE               	clrf	?_ReadADC
  2401  0727  01AF               	clrf	?_ReadADC+1
  2402  0728  0008               	return
  2403  0729                     l2199:	
  2404                           
  2405                           ;adc_pic16.c: 44: ADCON0bits.CHS=ch;
  2406  0729  0831               	movf	ReadADC@ch,w
  2407  072A  00B0               	movwf	??_ReadADC
  2408  072B  0DB0               	rlf	??_ReadADC,f
  2409  072C  0DB0               	rlf	??_ReadADC,f
  2410  072D  0021               	movlb	1	; select bank1
  2411  072E  081D               	movf	29,w	;volatile
  2412  072F  0020               	movlb	0	; select bank0
  2413  0730  0630               	xorwf	??_ReadADC,w
  2414  0731  3983               	andlw	-125
  2415  0732  0630               	xorwf	??_ReadADC,w
  2416  0733  0021               	movlb	1	; select bank1
  2417  0734  009D               	movwf	29	;volatile
  2418                           
  2419                           ;adc_pic16.c: 47: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2420  0735  30A6               	movlw	166
  2421  0736                     u2857:	
  2422  0736  0B89               	decfsz	9,f
  2423  0737  2F36               	goto	u2857
  2424  0738  3200               	nop2
  2425                           
  2426                           ;adc_pic16.c: 50: ADCON0bits.GO=1;
  2427  0739  0021               	movlb	1	; select bank1
  2428  073A  149D               	bsf	29,1	;volatile
  2429  073B                     l158:	
  2430                           ;adc_pic16.c: 53: while(ADCON0bits.GO);
  2431                           
  2432  073B  189D               	btfsc	29,1	;volatile
  2433  073C  2F3B               	goto	l158
  2434                           
  2435                           ;adc_pic16.c: 55: return ((ADRESH<<8)|ADRESL);
  2436  073D  081C               	movf	28,w	;volatile
  2437  073E  0020               	movlb	0	; select bank0
  2438  073F  00AF               	movwf	?_ReadADC+1
  2439  0740  0021               	movlb	1	; select bank1
  2440  0741  081B               	movf	27,w	;volatile
  2441  0742  0020               	movlb	0	; select bank0
  2442  0743  00AE               	movwf	?_ReadADC
  2443  0744  0008               	return
  2444  0745                     __end_of_ReadADC:	
  2445                           
  2446                           	psect	text9
  2447  06B2                     __ptext9:	
  2448 ;; *************** function _LCDWriteString *****************
  2449 ;; Defined at:
  2450 ;;		line 279 in file "lcd_hd44780_pic16.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  msg             2   26[BANK0 ] PTR const unsigned char 
  2453 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  2454 ;;		 -> STR_4(5), STR_3(4), STR_2(4), STR_1(5), 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  cc              1   29[BANK0 ] char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1
  2466 ;;      Params:         0       2       0
  2467 ;;      Locals:         0       1       0
  2468 ;;      Temps:          0       1       0
  2469 ;;      Totals:         0       4       0
  2470 ;;Total ram usage:        4 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    6
  2473 ;; This function calls:
  2474 ;;		_LCDByte
  2475 ;; This function is called by:
  2476 ;;		_main
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _LCDWriteString
  2482  06B2                     _LCDWriteString:	
  2483  06B2                     l1927:	
  2484                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2488                           
  2489  06B2  0020               	movlb	0	; select bank0
  2490  06B3  083A               	movf	LCDWriteString@msg,w
  2491  06B4  0084               	movwf	4
  2492  06B5  083B               	movf	LCDWriteString@msg+1,w
  2493  06B6  0085               	movwf	5
  2494  06B7  0012               	moviw fsr0++
  2495  06B8  1903               	btfsc	3,2
  2496  06B9  0008               	return
  2497                           
  2498                           ;lcd_hd44780_pic16.c: 282: {
  2499                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  2500  06BA  0020               	movlb	0	; select bank0
  2501  06BB  083A               	movf	LCDWriteString@msg,w
  2502  06BC  0084               	movwf	4
  2503  06BD  083B               	movf	LCDWriteString@msg+1,w
  2504  06BE  0085               	movwf	5
  2505  06BF  0012               	moviw fsr0++
  2506  06C0  3A25               	xorlw	37
  2507  06C1  1D03               	btfss	3,2
  2508  06C2  2EE0               	goto	l1923
  2509                           
  2510                           ;lcd_hd44780_pic16.c: 285: {
  2511                           ;lcd_hd44780_pic16.c: 286: msg++;
  2512  06C3  3001               	movlw	1
  2513  06C4  07BA               	addwf	LCDWriteString@msg,f
  2514  06C5  3000               	movlw	0
  2515  06C6  3DBB               	addwfc	LCDWriteString@msg+1,f
  2516                           
  2517                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  2518  06C7  083A               	movf	LCDWriteString@msg,w
  2519  06C8  0084               	movwf	4
  2520  06C9  083B               	movf	LCDWriteString@msg+1,w
  2521  06CA  0085               	movwf	5
  2522  06CB  0800               	movf	0,w	;code access
  2523  06CC  3ED0               	addlw	-48
  2524  06CD  00BC               	movwf	??_LCDWriteString
  2525  06CE  083C               	movf	??_LCDWriteString,w
  2526  06CF  00BD               	movwf	LCDWriteString@cc
  2527                           
  2528                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  2529  06D0  1BBD               	btfsc	LCDWriteString@cc,7
  2530  06D1  2EDB               	goto	l1919
  2531  06D2  083D               	movf	LCDWriteString@cc,w
  2532  06D3  3A80               	xorlw	128
  2533  06D4  3E78               	addlw	-136
  2534  06D5  1803               	skipnc
  2535  06D6  2EDB               	goto	l1919
  2536                           
  2537                           ;lcd_hd44780_pic16.c: 290: {
  2538                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  2539  06D7  01B3               	clrf	LCDByte@isdata
  2540  06D8  0AB3               	incf	LCDByte@isdata,f
  2541  06D9  083D               	movf	LCDWriteString@cc,w
  2542  06DA  2EE8               	goto	L2
  2543  06DB                     l1919:	
  2544                           ;lcd_hd44780_pic16.c: 292: }
  2545                           
  2546                           
  2547                           ;lcd_hd44780_pic16.c: 293: else
  2548                           ;lcd_hd44780_pic16.c: 294: {
  2549                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  2550  06DB  0020               	movlb	0	; select bank0
  2551  06DC  01B3               	clrf	LCDByte@isdata
  2552  06DD  0AB3               	incf	LCDByte@isdata,f
  2553  06DE  3025               	movlw	37
  2554  06DF  2594               	fcall	_LCDByte
  2555  06E0                     l1923:	
  2556                           ;lcd_hd44780_pic16.c: 297: }
  2557                           ;lcd_hd44780_pic16.c: 298: }
  2558                           
  2559                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  2560                           
  2561                           
  2562                           ;lcd_hd44780_pic16.c: 299: else
  2563                           ;lcd_hd44780_pic16.c: 300: {
  2564                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  2565  06E0  0020               	movlb	0	; select bank0
  2566  06E1  01B3               	clrf	LCDByte@isdata
  2567  06E2  0AB3               	incf	LCDByte@isdata,f
  2568  06E3  083A               	movf	LCDWriteString@msg,w
  2569  06E4  0084               	movwf	4
  2570  06E5  083B               	movf	LCDWriteString@msg+1,w
  2571  06E6  0085               	movwf	5
  2572  06E7  0800               	movf	0,w	;code access
  2573  06E8                     L2:	
  2574  06E8  2594               	fcall	_LCDByte
  2575                           
  2576                           ;lcd_hd44780_pic16.c: 302: }
  2577                           ;lcd_hd44780_pic16.c: 303: msg++;
  2578  06E9  3001               	movlw	1
  2579  06EA  0020               	movlb	0	; select bank0
  2580  06EB  07BA               	addwf	LCDWriteString@msg,f
  2581  06EC  3000               	movlw	0
  2582  06ED  3DBB               	addwfc	LCDWriteString@msg+1,f
  2583  06EE  2EB2               	goto	l1927
  2584  06EF                     __end_of_LCDWriteString:	
  2585                           
  2586                           	psect	text10
  2587  0294                     __ptext10:	
  2588 ;; *************** function _LCDWriteInt *****************
  2589 ;; Defined at:
  2590 ;;		line 317 in file "lcd_hd44780_pic16.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  val             2   26[BANK0 ] int 
  2593 ;;  field_length    1   28[BANK0 ] char 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  str             5   31[BANK0 ] unsigned char [5]
  2596 ;;  i               2   38[BANK0 ] int 
  2597 ;;  j               2   36[BANK0 ] int 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1
  2607 ;;      Params:         0       3       0
  2608 ;;      Locals:         0       9       0
  2609 ;;      Temps:          0       2       0
  2610 ;;      Totals:         0      14       0
  2611 ;;Total ram usage:       14 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    6
  2614 ;; This function calls:
  2615 ;;		_LCDByte
  2616 ;;		___awdiv
  2617 ;;		___awmod
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _LCDWriteInt
  2625  0294                     _LCDWriteInt:	
  2626                           
  2627                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2631  0294  3058               	movlw	low LCDWriteInt@F2520
  2632  0295  0086               	movwf	6
  2633  0296  3000               	movlw	high LCDWriteInt@F2520
  2634  0297  0087               	movwf	7
  2635  0298  303F               	movlw	low LCDWriteInt@str
  2636  0299  0084               	movwf	4
  2637  029A  3000               	movlw	high LCDWriteInt@str
  2638  029B  0085               	movwf	5
  2639  029C  3005               	movlw	5
  2640  029D  0020               	movlb	0	; select bank0
  2641  029E  00BD               	movwf	??_LCDWriteInt
  2642  029F                     u2180:	
  2643  029F  0016               	moviw fsr1++
  2644  02A0  001A               	movwi fsr0++
  2645  02A1  0BBD               	decfsz	??_LCDWriteInt,f
  2646  02A2  2A9F               	goto	u2180
  2647                           
  2648                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  2649  02A3  3004               	movlw	4
  2650  02A4  00C6               	movwf	LCDWriteInt@i
  2651  02A5  3000               	movlw	0
  2652  02A6  00C7               	movwf	LCDWriteInt@i+1
  2653  02A7  01C4               	clrf	LCDWriteInt@j
  2654  02A8  01C5               	clrf	LCDWriteInt@j+1
  2655                           
  2656                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  2657  02A9  083A               	movf	LCDWriteInt@val,w
  2658  02AA  043B               	iorwf	LCDWriteInt@val+1,w
  2659  02AB  1903               	btfsc	3,2
  2660                           
  2661                           ;lcd_hd44780_pic16.c: 323: {
  2662                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  2663  02AC  01C3               	clrf	LCDWriteInt@str+4
  2664                           
  2665                           ;lcd_hd44780_pic16.c: 325: }
  2666                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  2667  02AD  1FBB               	btfss	LCDWriteInt@val+1,7
  2668  02AE  2AB9               	goto	l1951
  2669                           
  2670                           ;lcd_hd44780_pic16.c: 328: {
  2671                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  2672  02AF  01B3               	clrf	LCDByte@isdata
  2673  02B0  0AB3               	incf	LCDByte@isdata,f
  2674  02B1  302D               	movlw	45
  2675  02B2  2594               	fcall	_LCDByte
  2676                           
  2677                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  2678  02B3  0020               	movlb	0	; select bank0
  2679  02B4  09BA               	comf	LCDWriteInt@val,f
  2680  02B5  09BB               	comf	LCDWriteInt@val+1,f
  2681  02B6  0ABA               	incf	LCDWriteInt@val,f
  2682  02B7  1903               	skipnz
  2683  02B8  0ABB               	incf	LCDWriteInt@val+1,f
  2684  02B9                     l1951:	
  2685                           ;lcd_hd44780_pic16.c: 331: }
  2686                           ;lcd_hd44780_pic16.c: 333: while(val)
  2687                           
  2688  02B9  083A               	movf	LCDWriteInt@val,w
  2689  02BA  043B               	iorwf	LCDWriteInt@val+1,w
  2690  02BB  1903               	btfsc	3,2
  2691  02BC  2AE2               	goto	l1953
  2692                           
  2693                           ;lcd_hd44780_pic16.c: 334: {
  2694                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  2695  02BD  300A               	movlw	10
  2696  02BE  00AE               	movwf	___awmod@divisor
  2697  02BF  3000               	movlw	0
  2698  02C0  00AF               	movwf	___awmod@divisor+1
  2699  02C1  083B               	movf	LCDWriteInt@val+1,w
  2700  02C2  00B1               	movwf	___awmod@dividend+1
  2701  02C3  083A               	movf	LCDWriteInt@val,w
  2702  02C4  00B0               	movwf	___awmod@dividend
  2703  02C5  2627               	fcall	___awmod
  2704  02C6  0020               	movlb	0	; select bank0
  2705  02C7  082E               	movf	?___awmod,w
  2706  02C8  00BD               	movwf	??_LCDWriteInt
  2707  02C9  0846               	movf	LCDWriteInt@i,w
  2708  02CA  3E3F               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2709  02CB  0086               	movwf	6
  2710  02CC  0187               	clrf	7
  2711  02CD  083D               	movf	??_LCDWriteInt,w
  2712  02CE  0081               	movwf	1
  2713                           
  2714                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  2715  02CF  300A               	movlw	10
  2716  02D0  00AE               	movwf	___awdiv@divisor
  2717  02D1  3000               	movlw	0
  2718  02D2  00AF               	movwf	___awdiv@divisor+1
  2719  02D3  083B               	movf	LCDWriteInt@val+1,w
  2720  02D4  00B1               	movwf	___awdiv@dividend+1
  2721  02D5  083A               	movf	LCDWriteInt@val,w
  2722  02D6  00B0               	movwf	___awdiv@dividend
  2723  02D7  24A6               	fcall	___awdiv
  2724  02D8  0020               	movlb	0	; select bank0
  2725  02D9  082F               	movf	?___awdiv+1,w
  2726  02DA  00BB               	movwf	LCDWriteInt@val+1
  2727  02DB  082E               	movf	?___awdiv,w
  2728  02DC  00BA               	movwf	LCDWriteInt@val
  2729                           
  2730                           ;lcd_hd44780_pic16.c: 337: i--;
  2731  02DD  30FF               	movlw	255
  2732  02DE  07C6               	addwf	LCDWriteInt@i,f
  2733  02DF  30FF               	movlw	255
  2734  02E0  3DC7               	addwfc	LCDWriteInt@i+1,f
  2735  02E1  2AB9               	goto	l1951
  2736  02E2                     l1953:	
  2737                           
  2738                           ;lcd_hd44780_pic16.c: 338: }
  2739                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  2740  02E2  0A3C               	incf	LCDWriteInt@field_length,w
  2741  02E3  1903               	btfsc	3,2
  2742  02E4  2AF5               	goto	l1961
  2743                           
  2744                           ;lcd_hd44780_pic16.c: 341: else
  2745                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  2746                           
  2747                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  2748  02E5  083C               	movf	LCDWriteInt@field_length,w
  2749  02E6  00BD               	movwf	??_LCDWriteInt
  2750  02E7  01BE               	clrf	??_LCDWriteInt+1
  2751  02E8  1BBD               	btfsc	??_LCDWriteInt,7
  2752  02E9  03BE               	decf	??_LCDWriteInt+1,f
  2753  02EA  09BD               	comf	??_LCDWriteInt,f
  2754  02EB  09BE               	comf	??_LCDWriteInt+1,f
  2755  02EC  0ABD               	incf	??_LCDWriteInt,f
  2756  02ED  1903               	skipnz
  2757  02EE  0ABE               	incf	??_LCDWriteInt+1,f
  2758  02EF  083D               	movf	??_LCDWriteInt,w
  2759  02F0  3E05               	addlw	5
  2760  02F1  00C4               	movwf	LCDWriteInt@j
  2761  02F2  3000               	movlw	0
  2762  02F3  3D3E               	addwfc	??_LCDWriteInt+1,w
  2763  02F4  00C5               	movwf	LCDWriteInt@j+1
  2764  02F5                     l1961:	
  2765                           
  2766                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  2767  02F5  0845               	movf	LCDWriteInt@j+1,w
  2768  02F6  00C7               	movwf	LCDWriteInt@i+1
  2769  02F7  0844               	movf	LCDWriteInt@j,w
  2770  02F8  00C6               	movwf	LCDWriteInt@i
  2771  02F9                     L3:	
  2772  02F9  0847               	movf	LCDWriteInt@i+1,w
  2773  02FA  3A80               	xorlw	128
  2774  02FB  00BD               	movwf	??_LCDWriteInt
  2775  02FC  3080               	movlw	128
  2776  02FD  023D               	subwf	??_LCDWriteInt,w
  2777  02FE  1D03               	skipz
  2778  02FF  2B02               	goto	u2235
  2779  0300  3005               	movlw	5
  2780  0301  0246               	subwf	LCDWriteInt@i,w
  2781  0302                     u2235:	
  2782  0302  1803               	btfsc	3,0
  2783  0303  0008               	return
  2784                           
  2785                           ;lcd_hd44780_pic16.c: 346: {
  2786                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  2787  0304  0020               	movlb	0	; select bank0
  2788  0305  01B3               	clrf	LCDByte@isdata
  2789  0306  0AB3               	incf	LCDByte@isdata,f
  2790  0307  0846               	movf	LCDWriteInt@i,w
  2791  0308  3E3F               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2792  0309  0086               	movwf	6
  2793  030A  0187               	clrf	7
  2794  030B  0801               	movf	1,w
  2795  030C  3E30               	addlw	48
  2796  030D  2594               	fcall	_LCDByte
  2797  030E  3001               	movlw	1
  2798  030F  0020               	movlb	0	; select bank0
  2799  0310  07C6               	addwf	LCDWriteInt@i,f
  2800  0311  3000               	movlw	0
  2801  0312  3DC7               	addwfc	LCDWriteInt@i+1,f
  2802  0313  2AF9               	goto	L3
  2803  0314                     __end_of_LCDWriteInt:	
  2804                           
  2805                           	psect	text11
  2806  0627                     __ptext11:	
  2807 ;; *************** function ___awmod *****************
  2808 ;; Defined at:
  2809 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awmod.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  divisor         2   14[BANK0 ] int 
  2812 ;;  dividend        2   16[BANK0 ] int 
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;  sign            1   20[BANK0 ] unsigned char 
  2815 ;;  counter         1   19[BANK0 ] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  2   14[BANK0 ] int 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1
  2825 ;;      Params:         0       4       0
  2826 ;;      Locals:         0       2       0
  2827 ;;      Temps:          0       1       0
  2828 ;;      Totals:         0       7       0
  2829 ;;Total ram usage:        7 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    4
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_LCDWriteInt
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function ___awmod
  2841  0627                     ___awmod:	
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2845  0627  0020               	movlb	0	; select bank0
  2846  0628  01B4               	clrf	___awmod@sign
  2847  0629  1FB1               	btfss	___awmod@dividend+1,7
  2848  062A  2E32               	goto	l1617
  2849  062B  09B0               	comf	___awmod@dividend,f
  2850  062C  09B1               	comf	___awmod@dividend+1,f
  2851  062D  0AB0               	incf	___awmod@dividend,f
  2852  062E  1903               	skipnz
  2853  062F  0AB1               	incf	___awmod@dividend+1,f
  2854  0630  01B4               	clrf	___awmod@sign
  2855  0631  0AB4               	incf	___awmod@sign,f
  2856  0632                     l1617:	
  2857  0632  1FAF               	btfss	___awmod@divisor+1,7
  2858  0633  2E39               	goto	l1621
  2859  0634  09AE               	comf	___awmod@divisor,f
  2860  0635  09AF               	comf	___awmod@divisor+1,f
  2861  0636  0AAE               	incf	___awmod@divisor,f
  2862  0637  1903               	skipnz
  2863  0638  0AAF               	incf	___awmod@divisor+1,f
  2864  0639                     l1621:	
  2865  0639  082E               	movf	___awmod@divisor,w
  2866  063A  042F               	iorwf	___awmod@divisor+1,w
  2867  063B  1903               	btfsc	3,2
  2868  063C  2E60               	goto	l1639
  2869  063D  01B3               	clrf	___awmod@counter
  2870  063E  0AB3               	incf	___awmod@counter,f
  2871  063F                     l1629:	
  2872  063F  1BAF               	btfsc	___awmod@divisor+1,7
  2873  0640  2E4B               	goto	l1631
  2874  0641  3001               	movlw	1
  2875  0642                     u1615:	
  2876  0642  35AE               	lslf	___awmod@divisor,f
  2877  0643  0DAF               	rlf	___awmod@divisor+1,f
  2878  0644  0B89               	decfsz	9,f
  2879  0645  2E42               	goto	u1615
  2880  0646  3001               	movlw	1
  2881  0647  00B2               	movwf	??___awmod
  2882  0648  0832               	movf	??___awmod,w
  2883  0649  07B3               	addwf	___awmod@counter,f
  2884  064A  2E3F               	goto	l1629
  2885  064B                     l1631:	
  2886  064B  082F               	movf	___awmod@divisor+1,w
  2887  064C  0231               	subwf	___awmod@dividend+1,w
  2888  064D  1D03               	skipz
  2889  064E  2E51               	goto	u1635
  2890  064F  082E               	movf	___awmod@divisor,w
  2891  0650  0230               	subwf	___awmod@dividend,w
  2892  0651                     u1635:	
  2893  0651  1C03               	skipc
  2894  0652  2E57               	goto	l1635
  2895  0653  082E               	movf	___awmod@divisor,w
  2896  0654  02B0               	subwf	___awmod@dividend,f
  2897  0655  082F               	movf	___awmod@divisor+1,w
  2898  0656  3BB1               	subwfb	___awmod@dividend+1,f
  2899  0657                     l1635:	
  2900  0657  3001               	movlw	1
  2901  0658                     u1645:	
  2902  0658  36AF               	lsrf	___awmod@divisor+1,f
  2903  0659  0CAE               	rrf	___awmod@divisor,f
  2904  065A  0B89               	decfsz	9,f
  2905  065B  2E58               	goto	u1645
  2906  065C  3001               	movlw	1
  2907  065D  02B3               	subwf	___awmod@counter,f
  2908  065E  1D03               	btfss	3,2
  2909  065F  2E4B               	goto	l1631
  2910  0660                     l1639:	
  2911  0660  0834               	movf	___awmod@sign,w
  2912  0661  1903               	btfsc	3,2
  2913  0662  2E68               	goto	l1643
  2914  0663  09B0               	comf	___awmod@dividend,f
  2915  0664  09B1               	comf	___awmod@dividend+1,f
  2916  0665  0AB0               	incf	___awmod@dividend,f
  2917  0666  1903               	skipnz
  2918  0667  0AB1               	incf	___awmod@dividend+1,f
  2919  0668                     l1643:	
  2920  0668  0831               	movf	___awmod@dividend+1,w
  2921  0669  00AF               	movwf	?___awmod+1
  2922  066A  0830               	movf	___awmod@dividend,w
  2923  066B  00AE               	movwf	?___awmod
  2924  066C  0008               	return
  2925  066D                     __end_of___awmod:	
  2926                           
  2927                           	psect	text12
  2928  04A6                     __ptext12:	
  2929 ;; *************** function ___awdiv *****************
  2930 ;; Defined at:
  2931 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awdiv.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  divisor         2   14[BANK0 ] int 
  2934 ;;  dividend        2   16[BANK0 ] int 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  quotient        2   21[BANK0 ] int 
  2937 ;;  sign            1   20[BANK0 ] unsigned char 
  2938 ;;  counter         1   19[BANK0 ] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  2   14[BANK0 ] int 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1
  2948 ;;      Params:         0       4       0
  2949 ;;      Locals:         0       4       0
  2950 ;;      Temps:          0       1       0
  2951 ;;      Totals:         0       9       0
  2952 ;;Total ram usage:        9 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    4
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_LCDWriteInt
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           
  2963                           ;psect for function ___awdiv
  2964  04A6                     ___awdiv:	
  2965                           
  2966                           ;incstack = 0
  2967                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2968  04A6  0020               	movlb	0	; select bank0
  2969  04A7  01B4               	clrf	___awdiv@sign
  2970  04A8  1FAF               	btfss	___awdiv@divisor+1,7
  2971  04A9  2CB1               	goto	l1573
  2972  04AA  09AE               	comf	___awdiv@divisor,f
  2973  04AB  09AF               	comf	___awdiv@divisor+1,f
  2974  04AC  0AAE               	incf	___awdiv@divisor,f
  2975  04AD  1903               	skipnz
  2976  04AE  0AAF               	incf	___awdiv@divisor+1,f
  2977  04AF  01B4               	clrf	___awdiv@sign
  2978  04B0  0AB4               	incf	___awdiv@sign,f
  2979  04B1                     l1573:	
  2980  04B1  1FB1               	btfss	___awdiv@dividend+1,7
  2981  04B2  2CBC               	goto	l1579
  2982  04B3  09B0               	comf	___awdiv@dividend,f
  2983  04B4  09B1               	comf	___awdiv@dividend+1,f
  2984  04B5  0AB0               	incf	___awdiv@dividend,f
  2985  04B6  1903               	skipnz
  2986  04B7  0AB1               	incf	___awdiv@dividend+1,f
  2987  04B8  3001               	movlw	1
  2988  04B9  00B2               	movwf	??___awdiv
  2989  04BA  0832               	movf	??___awdiv,w
  2990  04BB  06B4               	xorwf	___awdiv@sign,f
  2991  04BC                     l1579:	
  2992  04BC  01B5               	clrf	___awdiv@quotient
  2993  04BD  01B6               	clrf	___awdiv@quotient+1
  2994  04BE  082E               	movf	___awdiv@divisor,w
  2995  04BF  042F               	iorwf	___awdiv@divisor+1,w
  2996  04C0  1903               	btfsc	3,2
  2997  04C1  2CEB               	goto	l1601
  2998  04C2  01B3               	clrf	___awdiv@counter
  2999  04C3  0AB3               	incf	___awdiv@counter,f
  3000  04C4                     l1589:	
  3001  04C4  1BAF               	btfsc	___awdiv@divisor+1,7
  3002  04C5  2CD0               	goto	l1591
  3003  04C6  3001               	movlw	1
  3004  04C7                     u1515:	
  3005  04C7  35AE               	lslf	___awdiv@divisor,f
  3006  04C8  0DAF               	rlf	___awdiv@divisor+1,f
  3007  04C9  0B89               	decfsz	9,f
  3008  04CA  2CC7               	goto	u1515
  3009  04CB  3001               	movlw	1
  3010  04CC  00B2               	movwf	??___awdiv
  3011  04CD  0832               	movf	??___awdiv,w
  3012  04CE  07B3               	addwf	___awdiv@counter,f
  3013  04CF  2CC4               	goto	l1589
  3014  04D0                     l1591:	
  3015  04D0  3001               	movlw	1
  3016  04D1                     u1535:	
  3017  04D1  35B5               	lslf	___awdiv@quotient,f
  3018  04D2  0DB6               	rlf	___awdiv@quotient+1,f
  3019  04D3  0B89               	decfsz	9,f
  3020  04D4  2CD1               	goto	u1535
  3021  04D5  082F               	movf	___awdiv@divisor+1,w
  3022  04D6  0231               	subwf	___awdiv@dividend+1,w
  3023  04D7  1D03               	skipz
  3024  04D8  2CDB               	goto	u1545
  3025  04D9  082E               	movf	___awdiv@divisor,w
  3026  04DA  0230               	subwf	___awdiv@dividend,w
  3027  04DB                     u1545:	
  3028  04DB  1C03               	skipc
  3029  04DC  2CE2               	goto	l1597
  3030  04DD  082E               	movf	___awdiv@divisor,w
  3031  04DE  02B0               	subwf	___awdiv@dividend,f
  3032  04DF  082F               	movf	___awdiv@divisor+1,w
  3033  04E0  3BB1               	subwfb	___awdiv@dividend+1,f
  3034  04E1  1435               	bsf	___awdiv@quotient,0
  3035  04E2                     l1597:	
  3036  04E2  3001               	movlw	1
  3037  04E3                     u1555:	
  3038  04E3  36AF               	lsrf	___awdiv@divisor+1,f
  3039  04E4  0CAE               	rrf	___awdiv@divisor,f
  3040  04E5  0B89               	decfsz	9,f
  3041  04E6  2CE3               	goto	u1555
  3042  04E7  3001               	movlw	1
  3043  04E8  02B3               	subwf	___awdiv@counter,f
  3044  04E9  1D03               	btfss	3,2
  3045  04EA  2CD0               	goto	l1591
  3046  04EB                     l1601:	
  3047  04EB  0834               	movf	___awdiv@sign,w
  3048  04EC  1903               	btfsc	3,2
  3049  04ED  2CF3               	goto	l1605
  3050  04EE  09B5               	comf	___awdiv@quotient,f
  3051  04EF  09B6               	comf	___awdiv@quotient+1,f
  3052  04F0  0AB5               	incf	___awdiv@quotient,f
  3053  04F1  1903               	skipnz
  3054  04F2  0AB6               	incf	___awdiv@quotient+1,f
  3055  04F3                     l1605:	
  3056  04F3  0836               	movf	___awdiv@quotient+1,w
  3057  04F4  00AF               	movwf	?___awdiv+1
  3058  04F5  0835               	movf	___awdiv@quotient,w
  3059  04F6  00AE               	movwf	?___awdiv
  3060  04F7  0008               	return
  3061  04F8                     __end_of___awdiv:	
  3062                           
  3063                           	psect	text13
  3064  05DE                     __ptext13:	
  3065 ;; *************** function _LCDInit *****************
  3066 ;; Defined at:
  3067 ;;		line 207 in file "lcd_hd44780_pic16.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  style           1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  style           1   27[BANK0 ] unsigned char 
  3072 ;;  __i             1   28[BANK0 ] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1
  3082 ;;      Params:         0       0       0
  3083 ;;      Locals:         0       2       0
  3084 ;;      Temps:          0       1       0
  3085 ;;      Totals:         0       3       0
  3086 ;;Total ram usage:        3 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    6
  3089 ;; This function calls:
  3090 ;;		_LCDBusyLoop
  3091 ;;		_LCDByte
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _LCDInit
  3099  05DE                     _LCDInit:	
  3100                           
  3101                           ;incstack = 0
  3102                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3103                           ;LCDInit@style stored from wreg
  3104  05DE  0020               	movlb	0	; select bank0
  3105  05DF  00BB               	movwf	LCDInit@style
  3106                           
  3107                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  3108  05E0  30C3               	movlw	195
  3109  05E1  0020               	movlb	0	; select bank0
  3110  05E2  00BA               	movwf	??_LCDInit
  3111  05E3  30CD               	movlw	205
  3112  05E4                     u2867:	
  3113  05E4  0B89               	decfsz	9,f
  3114  05E5  2DE4               	goto	u2867
  3115  05E6  0BBA               	decfsz	??_LCDInit,f
  3116  05E7  2DE4               	goto	u2867
  3117                           
  3118                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<2));
  3119  05E8  30C3               	movlw	195
  3120  05E9  0020               	movlb	0	; select bank0
  3121  05EA  00BA               	movwf	??_LCDInit
  3122  05EB  083A               	movf	??_LCDInit,w
  3123  05EC  0021               	movlb	1	; select bank1
  3124  05ED  058E               	andwf	14,f	;volatile
  3125                           
  3126                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC1=0;
  3127  05EE  108E               	bcf	14,1	;volatile
  3128                           
  3129                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC0=0;
  3130  05EF  100E               	bcf	14,0	;volatile
  3131                           
  3132                           ;lcd_hd44780_pic16.c: 216: TRISAbits.TRISA0=0;
  3133  05F0  100C               	bcf	12,0	;volatile
  3134                           
  3135                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<2));
  3136  05F1  30C3               	movlw	195
  3137  05F2  0020               	movlb	0	; select bank0
  3138  05F3  00BA               	movwf	??_LCDInit
  3139  05F4  083A               	movf	??_LCDInit,w
  3140  05F5  058E               	andwf	14,f	;volatile
  3141                           
  3142                           ;lcd_hd44780_pic16.c: 220: (RC1=0);
  3143  05F6  108E               	bcf	14,1	;volatile
  3144                           
  3145                           ;lcd_hd44780_pic16.c: 221: (RA0=0);
  3146  05F7  100C               	bcf	12,0	;volatile
  3147                           
  3148                           ;lcd_hd44780_pic16.c: 222: (RC0=0);
  3149  05F8  100E               	bcf	14,0	;volatile
  3150                           
  3151                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3152  05F9  3200               	nop2	;2 cycle nop
  3153                           
  3154                           ;lcd_hd44780_pic16.c: 227: (RC1=1);
  3155  05FA  0020               	movlb	0	; select bank0
  3156  05FB  148E               	bsf	14,1	;volatile
  3157                           
  3158                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<2);
  3159  05FC  158E               	bsf	14,3	;volatile
  3160                           
  3161                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3162  05FD  3200               	nop2	;2 cycle nop
  3163  05FE  3200               	nop2	;2 cycle nop
  3164  05FF  0000               	nop
  3165                           
  3166                           ;lcd_hd44780_pic16.c: 230: (RC1=0);
  3167  0600  0020               	movlb	0	; select bank0
  3168  0601  108E               	bcf	14,1	;volatile
  3169                           
  3170                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3171  0602  3200               	nop2	;2 cycle nop
  3172  0603  3200               	nop2	;2 cycle nop
  3173  0604  0000               	nop
  3174                           
  3175                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  3176  0605  23F9               	fcall	_LCDBusyLoop
  3177                           
  3178                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  3179  0606  0020               	movlb	0	; select bank0
  3180  0607  01B3               	clrf	LCDByte@isdata
  3181  0608  3028               	movlw	40
  3182  0609  2594               	fcall	_LCDByte
  3183                           
  3184                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  3185  060A  0020               	movlb	0	; select bank0
  3186  060B  01B3               	clrf	LCDByte@isdata
  3187  060C  083B               	movf	LCDInit@style,w
  3188  060D  380C               	iorlw	12
  3189  060E  2594               	fcall	_LCDByte
  3190                           
  3191                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  3192  060F  0020               	movlb	0	; select bank0
  3193  0610  01B3               	clrf	LCDByte@isdata
  3194  0611  3040               	movlw	64
  3195  0612  2594               	fcall	_LCDByte
  3196                           
  3197                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  3198                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  3199  0613  0020               	movlb	0	; select bank0
  3200  0614  01BC               	clrf	LCDInit@__i
  3201  0615                     L4:	
  3202  0615  3008               	movlw	8
  3203  0616  023C               	subwf	LCDInit@__i,w
  3204  0617  1803               	btfsc	3,0
  3205  0618  0008               	return
  3206                           
  3207                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  3208  0619  01B3               	clrf	LCDByte@isdata
  3209  061A  0AB3               	incf	LCDByte@isdata,f
  3210  061B  083C               	movf	LCDInit@__i,w
  3211  061C  3EA0               	addlw	(low (___cgram| 0))& (0+255)
  3212  061D  0086               	movwf	6
  3213  061E  0187               	clrf	7
  3214  061F  0801               	movf	1,w
  3215  0620  2594               	fcall	_LCDByte
  3216  0621  3001               	movlw	1
  3217  0622  0020               	movlb	0	; select bank0
  3218  0623  00BA               	movwf	??_LCDInit
  3219  0624  083A               	movf	??_LCDInit,w
  3220  0625  07BC               	addwf	LCDInit@__i,f
  3221  0626  2E15               	goto	L4
  3222  0627                     __end_of_LCDInit:	
  3223                           
  3224                           	psect	text14
  3225  0745                     __ptext14:	
  3226 ;; *************** function _LCDGotoXY *****************
  3227 ;; Defined at:
  3228 ;;		line 355 in file "lcd_hd44780_pic16.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  x               1    wreg     unsigned char 
  3231 ;;  y               1   26[BANK0 ] unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  x               1   28[BANK0 ] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1
  3243 ;;      Params:         0       1       0
  3244 ;;      Locals:         0       1       0
  3245 ;;      Temps:          0       1       0
  3246 ;;      Totals:         0       3       0
  3247 ;;Total ram usage:        3 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    6
  3250 ;; This function calls:
  3251 ;;		_LCDByte
  3252 ;; This function is called by:
  3253 ;;		_main
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _LCDGotoXY
  3259  0745                     _LCDGotoXY:	
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3263                           ;LCDGotoXY@x stored from wreg
  3264  0745  0020               	movlb	0	; select bank0
  3265  0746  00BC               	movwf	LCDGotoXY@x
  3266                           
  3267                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  3268  0747  3014               	movlw	20
  3269  0748  023C               	subwf	LCDGotoXY@x,w
  3270  0749  1803               	btfsc	3,0
  3271  074A  0008               	return
  3272  074B  2F55               	goto	l1983
  3273  074C                     l70:	
  3274                           ;lcd_hd44780_pic16.c: 365: case 1:
  3275                           
  3276                           ;lcd_hd44780_pic16.c: 364: break;
  3277                           
  3278                           ;lcd_hd44780_pic16.c: 362: {
  3279                           ;lcd_hd44780_pic16.c: 363: case 0:
  3280                           
  3281                           ;lcd_hd44780_pic16.c: 361: switch(y)
  3282                           
  3283                           
  3284                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  3285  074C  173C               	bsf	LCDGotoXY@x,6
  3286                           
  3287                           ;lcd_hd44780_pic16.c: 367: break;
  3288  074D  2F63               	goto	l69
  3289  074E                     l1977:	
  3290                           ;lcd_hd44780_pic16.c: 368: case 2:
  3291                           
  3292                           
  3293                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  3294  074E  3014               	movlw	20
  3295  074F  2F51               	goto	L5
  3296  0750                     l1979:	
  3297                           ;lcd_hd44780_pic16.c: 371: case 3:
  3298                           
  3299                           ;lcd_hd44780_pic16.c: 370: break;
  3300                           
  3301                           
  3302                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  3303  0750  3054               	movlw	84
  3304  0751                     L5:	
  3305  0751  00BB               	movwf	??_LCDGotoXY
  3306  0752  083B               	movf	??_LCDGotoXY,w
  3307  0753  07BC               	addwf	LCDGotoXY@x,f
  3308                           
  3309                           ;lcd_hd44780_pic16.c: 374: }
  3310                           
  3311                           ;lcd_hd44780_pic16.c: 373: break;
  3312  0754  2F63               	goto	l69
  3313  0755                     l1983:	
  3314  0755  083A               	movf	LCDGotoXY@y,w
  3315                           
  3316                           ; Switch size 1, requested type "space"
  3317                           ; Number of cases is 4, Range of values is 0 to 3
  3318                           ; switch strategies available:
  3319                           ; Name         Instructions Cycles
  3320                           ; simple_byte           13     7 (average)
  3321                           ; direct_byte           14     6 (fixed)
  3322                           ; jumptable            260     6 (fixed)
  3323                           ;	Chosen strategy is simple_byte
  3324  0756  3A00               	xorlw	0	; case 0
  3325  0757  1903               	skipnz
  3326  0758  2F63               	goto	l69
  3327  0759  3A01               	xorlw	1	; case 1
  3328  075A  1903               	skipnz
  3329  075B  2F4C               	goto	l70
  3330  075C  3A03               	xorlw	3	; case 2
  3331  075D  1903               	skipnz
  3332  075E  2F4E               	goto	l1977
  3333  075F  3A01               	xorlw	1	; case 3
  3334  0760  1903               	skipnz
  3335  0761  2F50               	goto	l1979
  3336  0762  2F63               	goto	l69
  3337  0763                     l69:	
  3338                           
  3339                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  3340  0763  17BC               	bsf	LCDGotoXY@x,7
  3341                           
  3342                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  3343  0764  01B3               	clrf	LCDByte@isdata
  3344  0765  083C               	movf	LCDGotoXY@x,w
  3345  0766  2594               	fcall	_LCDByte
  3346  0767  0008               	return
  3347  0768                     __end_of_LCDGotoXY:	
  3348                           
  3349                           	psect	text15
  3350  0594                     __ptext15:	
  3351 ;; *************** function _LCDByte *****************
  3352 ;; Defined at:
  3353 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  c               1    wreg     unsigned char 
  3356 ;;  isdata          1   19[BANK0 ] unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  c               1   24[BANK0 ] unsigned char 
  3359 ;;  temp            1   25[BANK0 ] unsigned char 
  3360 ;;  ln              1   23[BANK0 ] unsigned char 
  3361 ;;  hn              1   22[BANK0 ] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, pclath, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1
  3371 ;;      Params:         0       1       0
  3372 ;;      Locals:         0       4       0
  3373 ;;      Temps:          0       2       0
  3374 ;;      Totals:         0       7       0
  3375 ;;Total ram usage:        7 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    5
  3378 ;; This function calls:
  3379 ;;		_LCDBusyLoop
  3380 ;; This function is called by:
  3381 ;;		_LCDInit
  3382 ;;		_LCDWriteString
  3383 ;;		_LCDWriteInt
  3384 ;;		_LCDGotoXY
  3385 ;;		_main
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           
  3390                           ;psect for function _LCDByte
  3391  0594                     _LCDByte:	
  3392                           
  3393                           ;incstack = 0
  3394                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3395                           ;LCDByte@c stored from wreg
  3396  0594  0020               	movlb	0	; select bank0
  3397  0595  00B8               	movwf	LCDByte@c
  3398                           
  3399                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3400                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3401                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3402  0596  0838               	movf	LCDByte@c,w
  3403  0597  00B4               	movwf	??_LCDByte
  3404  0598  3004               	movlw	4
  3405  0599                     u1425:	
  3406  0599  36B4               	lsrf	??_LCDByte,f
  3407  059A  0B89               	decfsz	9,f
  3408  059B  2D99               	goto	u1425
  3409  059C  0834               	movf	??_LCDByte,w
  3410  059D  00B5               	movwf	??_LCDByte+1
  3411  059E  0835               	movf	??_LCDByte+1,w
  3412  059F  00B6               	movwf	LCDByte@hn
  3413                           
  3414                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3415  05A0  0838               	movf	LCDByte@c,w
  3416  05A1  390F               	andlw	15
  3417  05A2  00B4               	movwf	??_LCDByte
  3418  05A3  0834               	movf	??_LCDByte,w
  3419  05A4  00B7               	movwf	LCDByte@ln
  3420                           
  3421                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3422  05A5  0833               	movf	LCDByte@isdata,w
  3423  05A6  1D03               	btfss	3,2
  3424  05A7  2DAA               	goto	l23
  3425                           
  3426                           ;lcd_hd44780_pic16.c: 96: (RC0=0);
  3427  05A8  100E               	bcf	14,0	;volatile
  3428  05A9  2DAB               	goto	l24
  3429  05AA                     l23:	
  3430                           
  3431                           ;lcd_hd44780_pic16.c: 97: else
  3432                           ;lcd_hd44780_pic16.c: 98: (RC0=1);
  3433  05AA  140E               	bsf	14,0	;volatile
  3434  05AB                     l24:	
  3435                           
  3436                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3437  05AB  3200               	nop2	;2 cycle nop
  3438                           
  3439                           ;lcd_hd44780_pic16.c: 102: (RC1=1);
  3440  05AC  0020               	movlb	0	; select bank0
  3441  05AD  148E               	bsf	14,1	;volatile
  3442                           
  3443                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  3444  05AE  0836               	movf	LCDByte@hn,w
  3445  05AF  00B4               	movwf	??_LCDByte
  3446  05B0  3002               	movlw	2
  3447  05B1                     u1445:	
  3448  05B1  35B4               	lslf	??_LCDByte,f
  3449  05B2  0B89               	decfsz	9,f
  3450  05B3  2DB1               	goto	u1445
  3451  05B4  080E               	movf	14,w	;volatile
  3452  05B5  39C3               	andlw	195
  3453  05B6  0434               	iorwf	??_LCDByte,w
  3454  05B7  00B5               	movwf	??_LCDByte+1
  3455  05B8  0835               	movf	??_LCDByte+1,w
  3456  05B9  00B9               	movwf	LCDByte@temp
  3457                           
  3458                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3459  05BA  0839               	movf	LCDByte@temp,w
  3460  05BB  008E               	movwf	14	;volatile
  3461                           
  3462                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3463  05BC  3200               	nop2	;2 cycle nop
  3464  05BD  3200               	nop2	;2 cycle nop
  3465  05BE  0000               	nop
  3466                           
  3467                           ;lcd_hd44780_pic16.c: 113: (RC1=0);
  3468  05BF  0020               	movlb	0	; select bank0
  3469  05C0  108E               	bcf	14,1	;volatile
  3470                           
  3471                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3472  05C1  3200               	nop2	;2 cycle nop
  3473  05C2  3200               	nop2	;2 cycle nop
  3474  05C3  0000               	nop
  3475                           
  3476                           ;lcd_hd44780_pic16.c: 118: (RC1=1);
  3477  05C4  0020               	movlb	0	; select bank0
  3478  05C5  148E               	bsf	14,1	;volatile
  3479                           
  3480                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  3481  05C6  0837               	movf	LCDByte@ln,w
  3482  05C7  00B4               	movwf	??_LCDByte
  3483  05C8  3002               	movlw	2
  3484  05C9                     u1455:	
  3485  05C9  35B4               	lslf	??_LCDByte,f
  3486  05CA  0B89               	decfsz	9,f
  3487  05CB  2DC9               	goto	u1455
  3488  05CC  080E               	movf	14,w	;volatile
  3489  05CD  39C3               	andlw	195
  3490  05CE  0434               	iorwf	??_LCDByte,w
  3491  05CF  00B5               	movwf	??_LCDByte+1
  3492  05D0  0835               	movf	??_LCDByte+1,w
  3493  05D1  00B9               	movwf	LCDByte@temp
  3494                           
  3495                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3496  05D2  0839               	movf	LCDByte@temp,w
  3497  05D3  008E               	movwf	14	;volatile
  3498                           
  3499                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3500  05D4  3200               	nop2	;2 cycle nop
  3501  05D5  3200               	nop2	;2 cycle nop
  3502  05D6  0000               	nop
  3503                           
  3504                           ;lcd_hd44780_pic16.c: 128: (RC1=0);
  3505  05D7  0020               	movlb	0	; select bank0
  3506  05D8  108E               	bcf	14,1	;volatile
  3507                           
  3508                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3509  05D9  3200               	nop2	;2 cycle nop
  3510  05DA  3200               	nop2	;2 cycle nop
  3511  05DB  0000               	nop
  3512                           
  3513                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3514  05DC  23F9               	fcall	_LCDBusyLoop
  3515  05DD  0008               	return
  3516  05DE                     __end_of_LCDByte:	
  3517                           
  3518                           	psect	text16
  3519  03F9                     __ptext16:	
  3520 ;; *************** function _LCDBusyLoop *****************
  3521 ;; Defined at:
  3522 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  status          1   18[BANK0 ] unsigned char 
  3527 ;;  temp            1   17[BANK0 ] unsigned char 
  3528 ;;  busy            1   16[BANK0 ] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMMON   BANK0   BANK1
  3538 ;;      Params:         0       0       0
  3539 ;;      Locals:         0       3       0
  3540 ;;      Temps:          0       2       0
  3541 ;;      Totals:         0       5       0
  3542 ;;Total ram usage:        5 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    4
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_LCDByte
  3549 ;;		_LCDInit
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function _LCDBusyLoop
  3555  03F9                     _LCDBusyLoop:	
  3556                           
  3557                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  3558                           
  3559                           ;incstack = 0
  3560                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  3561  03F9  0020               	movlb	0	; select bank0
  3562  03FA  01B2               	clrf	LCDBusyLoop@status
  3563                           
  3564                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<2);
  3565  03FB  303C               	movlw	60
  3566  03FC  00AE               	movwf	??_LCDBusyLoop
  3567  03FD  082E               	movf	??_LCDBusyLoop,w
  3568  03FE  0021               	movlb	1	; select bank1
  3569  03FF  048E               	iorwf	14,f	;volatile
  3570                           
  3571                           ;lcd_hd44780_pic16.c: 145: (RA0=1);
  3572  0400  0020               	movlb	0	; select bank0
  3573  0401  140C               	bsf	12,0	;volatile
  3574                           
  3575                           ;lcd_hd44780_pic16.c: 146: (RC0=0);
  3576  0402  100E               	bcf	14,0	;volatile
  3577                           
  3578                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3579  0403  3200               	nop2	;2 cycle nop
  3580  0404                     l1405:	
  3581                           ;lcd_hd44780_pic16.c: 153: do
  3582                           
  3583                           
  3584                           ;lcd_hd44780_pic16.c: 154: {
  3585                           ;lcd_hd44780_pic16.c: 156: (RC1=1);
  3586  0404  0020               	movlb	0	; select bank0
  3587  0405  148E               	bsf	14,1	;volatile
  3588                           
  3589                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3590  0406  3200               	nop2	;2 cycle nop
  3591                           
  3592                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>2);
  3593  0407  0020               	movlb	0	; select bank0
  3594  0408  080E               	movf	14,w	;volatile
  3595  0409  00AE               	movwf	??_LCDBusyLoop
  3596  040A  3002               	movlw	2
  3597  040B                     u1225:	
  3598  040B  36AE               	lsrf	??_LCDBusyLoop,f
  3599  040C  0B89               	decfsz	9,f
  3600  040D  2C0B               	goto	u1225
  3601  040E  082E               	movf	??_LCDBusyLoop,w
  3602  040F  00AF               	movwf	??_LCDBusyLoop+1
  3603  0410  082F               	movf	??_LCDBusyLoop+1,w
  3604  0411  00B2               	movwf	LCDBusyLoop@status
  3605                           
  3606                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  3607  0412  0832               	movf	LCDBusyLoop@status,w
  3608  0413  00AE               	movwf	??_LCDBusyLoop
  3609  0414  3003               	movlw	3
  3610  0415                     u1235:	
  3611  0415  35AE               	lslf	??_LCDBusyLoop,f
  3612  0416  3EFF               	addlw	-1
  3613  0417  1D03               	skipz
  3614  0418  2C15               	goto	u1235
  3615  0419  352E               	lslf	??_LCDBusyLoop,w
  3616  041A  00AF               	movwf	??_LCDBusyLoop+1
  3617  041B  082F               	movf	??_LCDBusyLoop+1,w
  3618  041C  00B2               	movwf	LCDBusyLoop@status
  3619                           
  3620                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3621  041D  3200               	nop2	;2 cycle nop
  3622                           
  3623                           ;lcd_hd44780_pic16.c: 167: (RC1=0);
  3624  041E  0020               	movlb	0	; select bank0
  3625  041F  108E               	bcf	14,1	;volatile
  3626                           
  3627                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3628  0420  3200               	nop2	;2 cycle nop
  3629  0421  3200               	nop2	;2 cycle nop
  3630  0422  0000               	nop
  3631                           
  3632                           ;lcd_hd44780_pic16.c: 170: (RC1=1);
  3633  0423  0020               	movlb	0	; select bank0
  3634  0424  148E               	bsf	14,1	;volatile
  3635                           
  3636                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3637  0425  3200               	nop2	;2 cycle nop
  3638                           
  3639                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>2);
  3640  0426  0020               	movlb	0	; select bank0
  3641  0427  080E               	movf	14,w	;volatile
  3642  0428  00AE               	movwf	??_LCDBusyLoop
  3643  0429  3002               	movlw	2
  3644  042A                     u1245:	
  3645  042A  36AE               	lsrf	??_LCDBusyLoop,f
  3646  042B  0B89               	decfsz	9,f
  3647  042C  2C2A               	goto	u1245
  3648  042D  082E               	movf	??_LCDBusyLoop,w
  3649  042E  00AF               	movwf	??_LCDBusyLoop+1
  3650  042F  082F               	movf	??_LCDBusyLoop+1,w
  3651  0430  00B1               	movwf	LCDBusyLoop@temp
  3652                           
  3653                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  3654  0431  300F               	movlw	15
  3655  0432  00AE               	movwf	??_LCDBusyLoop
  3656  0433  082E               	movf	??_LCDBusyLoop,w
  3657  0434  05B1               	andwf	LCDBusyLoop@temp,f
  3658                           
  3659                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  3660  0435  0832               	movf	LCDBusyLoop@status,w
  3661  0436  0431               	iorwf	LCDBusyLoop@temp,w
  3662  0437  00AE               	movwf	??_LCDBusyLoop
  3663  0438  082E               	movf	??_LCDBusyLoop,w
  3664  0439  00B2               	movwf	LCDBusyLoop@status
  3665                           
  3666                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  3667  043A  0832               	movf	LCDBusyLoop@status,w
  3668  043B  3980               	andlw	128
  3669  043C  00AE               	movwf	??_LCDBusyLoop
  3670  043D  082E               	movf	??_LCDBusyLoop,w
  3671  043E  00B0               	movwf	LCDBusyLoop@busy
  3672                           
  3673                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3674  043F  3200               	nop2	;2 cycle nop
  3675                           
  3676                           ;lcd_hd44780_pic16.c: 182: (RC1=0);
  3677  0440  0020               	movlb	0	; select bank0
  3678  0441  108E               	bcf	14,1	;volatile
  3679                           
  3680                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3681  0442  3200               	nop2	;2 cycle nop
  3682  0443  3200               	nop2	;2 cycle nop
  3683  0444  0000               	nop
  3684                           
  3685                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  3686  0445  0020               	movlb	0	; select bank0
  3687  0446  0830               	movf	LCDBusyLoop@busy,w
  3688  0447  1D03               	btfss	3,2
  3689  0448  2C04               	goto	l1405
  3690                           
  3691                           ;lcd_hd44780_pic16.c: 186: (RA0=0);
  3692  0449  100C               	bcf	12,0	;volatile
  3693                           
  3694                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<2));
  3695  044A  30C3               	movlw	195
  3696  044B  00AE               	movwf	??_LCDBusyLoop
  3697  044C  082E               	movf	??_LCDBusyLoop,w
  3698  044D  0021               	movlb	1	; select bank1
  3699  044E  058E               	andwf	14,f	;volatile
  3700  044F  0008               	return
  3701  0450                     __end_of_LCDBusyLoop:	
  3702                           
  3703                           	psect	text17
  3704  07B9                     __ptext17:	
  3705 ;; *************** function _ADCInit *****************
  3706 ;; Defined at:
  3707 ;;		line 7 in file "adc_pic16.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1
  3721 ;;      Params:         0       0       0
  3722 ;;      Locals:         0       0       0
  3723 ;;      Temps:          0       0       0
  3724 ;;      Totals:         0       0       0
  3725 ;;Total ram usage:        0 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    4
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_main
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function _ADCInit
  3737  07B9                     _ADCInit:	
  3738                           
  3739                           ;adc_pic16.c: 10: TRISAbits.TRISA2 = 1;
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  3743  07B9  0021               	movlb	1	; select bank1
  3744  07BA  150C               	bsf	12,2	;volatile
  3745                           
  3746                           ;adc_pic16.c: 11: ANSELAbits.ANSA2 = 1;
  3747  07BB  0023               	movlb	3	; select bank3
  3748  07BC  150C               	bsf	12,2	;volatile
  3749                           
  3750                           ;adc_pic16.c: 13: ADCON0bits.CHS = 0b00010;
  3751  07BD  0021               	movlb	1	; select bank1
  3752  07BE  081D               	movf	29,w	;volatile
  3753  07BF  3983               	andlw	-125
  3754  07C0  3808               	iorlw	8
  3755  07C1  009D               	movwf	29	;volatile
  3756                           
  3757                           ;adc_pic16.c: 15: ADCON1bits.ADPREF = 0b00;
  3758  07C2  30FC               	movlw	-4
  3759  07C3  059E               	andwf	30,f	;volatile
  3760                           
  3761                           ;adc_pic16.c: 17: ADCON1bits.ADCS = 0b011;
  3762  07C4  081E               	movf	30,w	;volatile
  3763  07C5  398F               	andlw	-113
  3764  07C6  3830               	iorlw	48
  3765  07C7  009E               	movwf	30	;volatile
  3766                           
  3767                           ;adc_pic16.c: 20: ADCON1bits.ADFM=1;
  3768  07C8  179E               	bsf	30,7	;volatile
  3769                           
  3770                           ;adc_pic16.c: 22: ADCON0bits.ADON = 1;
  3771  07C9  141D               	bsf	29,0	;volatile
  3772  07CA  0008               	return
  3773  07CB                     __end_of_ADCInit:	
  3774                           
  3775                           	psect	intentry
  3776  0004                     __pintentry:	
  3777 ;; *************** function _ISR *****************
  3778 ;; Defined at:
  3779 ;;		line 98 in file "do_am.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1
  3793 ;;      Params:         0       0       0
  3794 ;;      Locals:         0       0       0
  3795 ;;      Temps:          0       2       0
  3796 ;;      Totals:         0       2       0
  3797 ;;Total ram usage:        2 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    3
  3800 ;; This function calls:
  3801 ;;		i1_LCDGotoXY
  3802 ;;		i1_LCDWriteInt
  3803 ;; This function is called by:
  3804 ;;		Interrupt level 1
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808  0004                     _ISR:	
  3809                           
  3810                           ;incstack = 0
  3811  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3812                           
  3813                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3814  0005  3180               	pagesel	$
  3815  0006  0020               	movlb	0	; select bank0
  3816  0007  087F               	movf	127,w
  3817  0008  00AD               	movwf	??_ISR+1
  3818                           
  3819                           ;do_am.c: 100: if(INTCONbits.IOCIF == 1)
  3820  0009  1C0B               	btfss	11,0	;volatile
  3821  000A  2841               	goto	i1l123
  3822                           
  3823                           ;do_am.c: 101: {
  3824                           ;do_am.c: 102: if(IOCAFbits.IOCAF1 == 1)
  3825  000B  0027               	movlb	7	; select bank7
  3826  000C  1893               	btfsc	19,1	;volatile
  3827  000D  2839               	goto	i1l2077
  3828  000E  2840               	goto	i1l118
  3829  000F                     i1l2067:	
  3830                           ;do_am.c: 103: {
  3831                           ;do_am.c: 109: while(RA1 == 1)
  3832                           
  3833                           
  3834                           ;do_am.c: 110: {
  3835                           ;do_am.c: 111: tuneUpTemp++;
  3836  000F  3001               	movlw	1
  3837  0010  0020               	movlb	0	; select bank0
  3838  0011  07E0               	addwf	_tuneUpTemp,f
  3839  0012  3000               	movlw	0
  3840  0013  3DE1               	addwfc	_tuneUpTemp+1,f
  3841                           
  3842                           ;do_am.c: 112: if(tuneUpTemp > 150)
  3843  0014  0861               	movf	_tuneUpTemp+1,w
  3844  0015  3A80               	xorlw	128
  3845  0016  00AC               	movwf	??_ISR
  3846  0017  3080               	movlw	128
  3847  0018  022C               	subwf	??_ISR,w
  3848  0019  1D03               	skipz
  3849  001A  281D               	goto	u236_25
  3850  001B  3097               	movlw	151
  3851  001C  0260               	subwf	_tuneUpTemp,w
  3852  001D                     u236_25:	
  3853  001D  1C03               	skipc
  3854  001E  2822               	goto	i1l2071
  3855                           
  3856                           ;do_am.c: 113: {
  3857                           ;do_am.c: 114: tuneUpTemp = 0;
  3858  001F  0020               	movlb	0	; select bank0
  3859  0020  01E0               	clrf	_tuneUpTemp
  3860  0021  01E1               	clrf	_tuneUpTemp+1
  3861  0022                     i1l2071:	
  3862                           
  3863                           ;do_am.c: 115: }
  3864                           ;do_am.c: 117: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  3865  0022  01FC               	clrf	i1LCDGotoXY@y
  3866  0023  0AFC               	incf	i1LCDGotoXY@y,f
  3867  0024  3004               	movlw	4
  3868  0025  2768               	fcall	i1_LCDGotoXY
  3869  0026  0020               	movlb	0	; select bank0
  3870  0027  0861               	movf	_tuneUpTemp+1,w
  3871  0028  00A1               	movwf	i1LCDWriteInt@val+1
  3872  0029  0860               	movf	_tuneUpTemp,w
  3873  002A  00A0               	movwf	i1LCDWriteInt@val
  3874  002B  3003               	movlw	3
  3875  002C  00AC               	movwf	??_ISR
  3876  002D  082C               	movf	??_ISR,w
  3877  002E  00A2               	movwf	i1LCDWriteInt@field_length
  3878  002F  2314               	fcall	i1_LCDWriteInt
  3879                           
  3880                           ;do_am.c: 119: _delay((unsigned long)((10)*(20000000/4000.0)));
  3881  0030  3041               	movlw	65
  3882  0031  0020               	movlb	0	; select bank0
  3883  0032  00AC               	movwf	??_ISR
  3884  0033  30EE               	movlw	238
  3885  0034                     u287_27:	
  3886  0034  0B89               	decfsz	9,f
  3887  0035  2834               	goto	u287_27
  3888  0036  0BAC               	decfsz	??_ISR,f
  3889  0037  2834               	goto	u287_27
  3890  0038  0000               	nop
  3891  0039                     i1l2077:	
  3892  0039  0020               	movlb	0	; select bank0
  3893  003A  188C               	btfsc	12,1	;volatile
  3894  003B  280F               	goto	i1l2067
  3895                           
  3896                           ;do_am.c: 127: }
  3897                           ;do_am.c: 128: tuneUpTempDir = 1;
  3898  003C  01DD               	clrf	_tuneUpTempDir
  3899  003D  0ADD               	incf	_tuneUpTempDir,f
  3900                           
  3901                           ;do_am.c: 129: IOCAFbits.IOCAF1 = 0;
  3902  003E  0027               	movlb	7	; select bank7
  3903  003F  1093               	bcf	19,1	;volatile
  3904  0040                     i1l118:	
  3905                           
  3906                           ;do_am.c: 130: }
  3907                           ;do_am.c: 131: INTCONbits.IOCIF = 0;
  3908  0040  100B               	bcf	11,0	;volatile
  3909  0041                     i1l123:	
  3910  0041  0020               	movlb	0	; select bank0
  3911  0042  082D               	movf	??_ISR+1,w
  3912  0043  00FF               	movwf	127
  3913  0044  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3914  0045  0009               	retfie
  3915  0046                     __end_of_ISR:	
  3916                           
  3917                           	psect	text19
  3918  0314                     __ptext19:	
  3919 ;; *************** function i1_LCDWriteInt *****************
  3920 ;; Defined at:
  3921 ;;		line 317 in file "lcd_hd44780_pic16.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  val             2    0[BANK0 ] int 
  3924 ;;  field_length    1    2[BANK0 ] char 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  3927 ;;  LCDWriteInt     2   10[BANK0 ] int 
  3928 ;;  LCDWriteInt     2    8[BANK0 ] int 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1
  3938 ;;      Params:         0       3       0
  3939 ;;      Locals:         0       9       0
  3940 ;;      Temps:          2       0       0
  3941 ;;      Totals:         2      12       0
  3942 ;;Total ram usage:       14 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    2
  3945 ;; This function calls:
  3946 ;;		i1_LCDByte
  3947 ;;		i1___awdiv
  3948 ;;		i1___awmod
  3949 ;; This function is called by:
  3950 ;;		_ISR
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function i1_LCDWriteInt
  3956  0314                     i1_LCDWriteInt:	
  3957                           
  3958                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  3959                           
  3960                           ;incstack = 0
  3961                           ; Regs used in i1_LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3962  0314  3058               	movlw	low LCDWriteInt@F2520
  3963  0315  0086               	movwf	6
  3964  0316  3000               	movlw	high LCDWriteInt@F2520
  3965  0317  0087               	movwf	7
  3966  0318  3023               	movlw	low i1LCDWriteInt@str
  3967  0319  0084               	movwf	4
  3968  031A  3000               	movlw	high i1LCDWriteInt@str
  3969  031B  0085               	movwf	5
  3970  031C  3005               	movlw	5
  3971  031D  00FC               	movwf	??i1_LCDWriteInt
  3972  031E                     u226_20:	
  3973  031E  0016               	moviw fsr1++
  3974  031F  001A               	movwi fsr0++
  3975  0320  0BFC               	decfsz	??i1_LCDWriteInt,f
  3976  0321  2B1E               	goto	u226_20
  3977                           
  3978                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  3979  0322  3004               	movlw	4
  3980  0323  0020               	movlb	0	; select bank0
  3981  0324  00AA               	movwf	i1LCDWriteInt@i
  3982  0325  3000               	movlw	0
  3983  0326  00AB               	movwf	i1LCDWriteInt@i+1
  3984  0327  01A8               	clrf	i1LCDWriteInt@j
  3985  0328  01A9               	clrf	i1LCDWriteInt@j+1
  3986                           
  3987                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  3988  0329  0820               	movf	i1LCDWriteInt@val,w
  3989  032A  0421               	iorwf	i1LCDWriteInt@val+1,w
  3990  032B  1903               	btfsc	3,2
  3991                           
  3992                           ;lcd_hd44780_pic16.c: 323: {
  3993                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  3994  032C  01A7               	clrf	i1LCDWriteInt@str+4
  3995                           
  3996                           ;lcd_hd44780_pic16.c: 325: }
  3997                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  3998  032D  1FA1               	btfss	i1LCDWriteInt@val+1,7
  3999  032E  2B39               	goto	i1l2025
  4000                           
  4001                           ;lcd_hd44780_pic16.c: 328: {
  4002                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  4003  032F  01F5               	clrf	i1LCDByte@isdata
  4004  0330  0AF5               	incf	i1LCDByte@isdata,f
  4005  0331  302D               	movlw	45
  4006  0332  2549               	fcall	i1_LCDByte
  4007                           
  4008                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  4009  0333  0020               	movlb	0	; select bank0
  4010  0334  09A0               	comf	i1LCDWriteInt@val,f
  4011  0335  09A1               	comf	i1LCDWriteInt@val+1,f
  4012  0336  0AA0               	incf	i1LCDWriteInt@val,f
  4013  0337  1903               	skipnz
  4014  0338  0AA1               	incf	i1LCDWriteInt@val+1,f
  4015  0339                     i1l2025:	
  4016                           ;lcd_hd44780_pic16.c: 331: }
  4017                           ;lcd_hd44780_pic16.c: 333: while(val)
  4018                           
  4019  0339  0820               	movf	i1LCDWriteInt@val,w
  4020  033A  0421               	iorwf	i1LCDWriteInt@val+1,w
  4021  033B  1903               	btfsc	3,2
  4022  033C  2B62               	goto	i1l2027
  4023                           
  4024                           ;lcd_hd44780_pic16.c: 334: {
  4025                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  4026  033D  300A               	movlw	10
  4027  033E  00F0               	movwf	i1___awmod@divisor
  4028  033F  3000               	movlw	0
  4029  0340  00F1               	movwf	i1___awmod@divisor+1
  4030  0341  0821               	movf	i1LCDWriteInt@val+1,w
  4031  0342  00F3               	movwf	i1___awmod@dividend+1
  4032  0343  0820               	movf	i1LCDWriteInt@val,w
  4033  0344  00F2               	movwf	i1___awmod@dividend
  4034  0345  266D               	fcall	i1___awmod
  4035  0346  0870               	movf	?i1___awmod,w
  4036  0347  00FC               	movwf	??i1_LCDWriteInt
  4037  0348  0020               	movlb	0	; select bank0
  4038  0349  082A               	movf	i1LCDWriteInt@i,w
  4039  034A  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4040  034B  0086               	movwf	6
  4041  034C  0187               	clrf	7
  4042  034D  087C               	movf	??i1_LCDWriteInt,w
  4043  034E  0081               	movwf	1
  4044                           
  4045                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  4046  034F  300A               	movlw	10
  4047  0350  00F0               	movwf	i1___awdiv@divisor
  4048  0351  3000               	movlw	0
  4049  0352  00F1               	movwf	i1___awdiv@divisor+1
  4050  0353  0821               	movf	i1LCDWriteInt@val+1,w
  4051  0354  00F3               	movwf	i1___awdiv@dividend+1
  4052  0355  0820               	movf	i1LCDWriteInt@val,w
  4053  0356  00F2               	movwf	i1___awdiv@dividend
  4054  0357  24F8               	fcall	i1___awdiv
  4055  0358  0871               	movf	?i1___awdiv+1,w
  4056  0359  0020               	movlb	0	; select bank0
  4057  035A  00A1               	movwf	i1LCDWriteInt@val+1
  4058  035B  0870               	movf	?i1___awdiv,w
  4059  035C  00A0               	movwf	i1LCDWriteInt@val
  4060                           
  4061                           ;lcd_hd44780_pic16.c: 337: i--;
  4062  035D  30FF               	movlw	255
  4063  035E  07AA               	addwf	i1LCDWriteInt@i,f
  4064  035F  30FF               	movlw	255
  4065  0360  3DAB               	addwfc	i1LCDWriteInt@i+1,f
  4066  0361  2B39               	goto	i1l2025
  4067  0362                     i1l2027:	
  4068                           
  4069                           ;lcd_hd44780_pic16.c: 338: }
  4070                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  4071  0362  0A22               	incf	i1LCDWriteInt@field_length,w
  4072  0363  1903               	btfsc	3,2
  4073  0364  2B75               	goto	i1l2035
  4074                           
  4075                           ;lcd_hd44780_pic16.c: 341: else
  4076                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  4077                           
  4078                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  4079  0365  0822               	movf	i1LCDWriteInt@field_length,w
  4080  0366  00FC               	movwf	??i1_LCDWriteInt
  4081  0367  01FD               	clrf	??i1_LCDWriteInt+1
  4082  0368  1BFC               	btfsc	??i1_LCDWriteInt,7
  4083  0369  03FD               	decf	??i1_LCDWriteInt+1,f
  4084  036A  09FC               	comf	??i1_LCDWriteInt,f
  4085  036B  09FD               	comf	??i1_LCDWriteInt+1,f
  4086  036C  0AFC               	incf	??i1_LCDWriteInt,f
  4087  036D  1903               	skipnz
  4088  036E  0AFD               	incf	??i1_LCDWriteInt+1,f
  4089  036F  087C               	movf	??i1_LCDWriteInt,w
  4090  0370  3E05               	addlw	5
  4091  0371  00A8               	movwf	i1LCDWriteInt@j
  4092  0372  3000               	movlw	0
  4093  0373  3D7D               	addwfc	??i1_LCDWriteInt+1,w
  4094  0374  00A9               	movwf	i1LCDWriteInt@j+1
  4095  0375                     i1l2035:	
  4096                           
  4097                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  4098  0375  0829               	movf	i1LCDWriteInt@j+1,w
  4099  0376  00AB               	movwf	i1LCDWriteInt@i+1
  4100  0377  0828               	movf	i1LCDWriteInt@j,w
  4101  0378  00AA               	movwf	i1LCDWriteInt@i
  4102  0379                     L6:	
  4103  0379  082B               	movf	i1LCDWriteInt@i+1,w
  4104  037A  3A80               	xorlw	128
  4105  037B  00FC               	movwf	??i1_LCDWriteInt
  4106  037C  3080               	movlw	128
  4107  037D  027C               	subwf	??i1_LCDWriteInt,w
  4108  037E  1D03               	skipz
  4109  037F  2B82               	goto	u231_25
  4110  0380  3005               	movlw	5
  4111  0381  022A               	subwf	i1LCDWriteInt@i,w
  4112  0382                     u231_25:	
  4113  0382  1803               	btfsc	3,0
  4114  0383  0008               	return
  4115                           
  4116                           ;lcd_hd44780_pic16.c: 346: {
  4117                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  4118  0384  01F5               	clrf	i1LCDByte@isdata
  4119  0385  0AF5               	incf	i1LCDByte@isdata,f
  4120  0386  0020               	movlb	0	; select bank0
  4121  0387  082A               	movf	i1LCDWriteInt@i,w
  4122  0388  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4123  0389  0086               	movwf	6
  4124  038A  0187               	clrf	7
  4125  038B  0801               	movf	1,w
  4126  038C  3E30               	addlw	48
  4127  038D  2549               	fcall	i1_LCDByte
  4128  038E  3001               	movlw	1
  4129  038F  0020               	movlb	0	; select bank0
  4130  0390  07AA               	addwf	i1LCDWriteInt@i,f
  4131  0391  3000               	movlw	0
  4132  0392  3DAB               	addwfc	i1LCDWriteInt@i+1,f
  4133  0393  2B79               	goto	L6
  4134  0394                     __end_ofi1_LCDWriteInt:	
  4135                           
  4136                           	psect	text20
  4137  066D                     __ptext20:	
  4138 ;; *************** function i1___awmod *****************
  4139 ;; Defined at:
  4140 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awmod.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  divisor         2    0[COMMON] int 
  4143 ;;  dividend        2    2[COMMON] int 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  __awmod         1    6[COMMON] unsigned char 
  4146 ;;  __awmod         1    5[COMMON] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2    0[COMMON] int 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMMON   BANK0   BANK1
  4156 ;;      Params:         4       0       0
  4157 ;;      Locals:         2       0       0
  4158 ;;      Temps:          1       0       0
  4159 ;;      Totals:         7       0       0
  4160 ;;Total ram usage:        7 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		i1_LCDWriteInt
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function i1___awmod
  4171  066D                     i1___awmod:	
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4175  066D  01F6               	clrf	i1___awmod@sign
  4176  066E  1FF3               	btfss	i1___awmod@dividend+1,7
  4177  066F  2E77               	goto	i1l1825
  4178  0670  09F2               	comf	i1___awmod@dividend,f
  4179  0671  09F3               	comf	i1___awmod@dividend+1,f
  4180  0672  0AF2               	incf	i1___awmod@dividend,f
  4181  0673  1903               	skipnz
  4182  0674  0AF3               	incf	i1___awmod@dividend+1,f
  4183  0675  01F6               	clrf	i1___awmod@sign
  4184  0676  0AF6               	incf	i1___awmod@sign,f
  4185  0677                     i1l1825:	
  4186  0677  1FF1               	btfss	i1___awmod@divisor+1,7
  4187  0678  2E7E               	goto	i1l1829
  4188  0679  09F0               	comf	i1___awmod@divisor,f
  4189  067A  09F1               	comf	i1___awmod@divisor+1,f
  4190  067B  0AF0               	incf	i1___awmod@divisor,f
  4191  067C  1903               	skipnz
  4192  067D  0AF1               	incf	i1___awmod@divisor+1,f
  4193  067E                     i1l1829:	
  4194  067E  0870               	movf	i1___awmod@divisor,w
  4195  067F  0471               	iorwf	i1___awmod@divisor+1,w
  4196  0680  1903               	btfsc	3,2
  4197  0681  2EA5               	goto	i1l1847
  4198  0682  01F5               	clrf	i1___awmod@counter
  4199  0683  0AF5               	incf	i1___awmod@counter,f
  4200  0684                     i1l1837:	
  4201  0684  1BF1               	btfsc	i1___awmod@divisor+1,7
  4202  0685  2E90               	goto	i1l1839
  4203  0686  3001               	movlw	1
  4204  0687                     u206_25:	
  4205  0687  35F0               	lslf	i1___awmod@divisor,f
  4206  0688  0DF1               	rlf	i1___awmod@divisor+1,f
  4207  0689  0B89               	decfsz	9,f
  4208  068A  2E87               	goto	u206_25
  4209  068B  3001               	movlw	1
  4210  068C  00F4               	movwf	??i1___awmod
  4211  068D  0874               	movf	??i1___awmod,w
  4212  068E  07F5               	addwf	i1___awmod@counter,f
  4213  068F  2E84               	goto	i1l1837
  4214  0690                     i1l1839:	
  4215  0690  0871               	movf	i1___awmod@divisor+1,w
  4216  0691  0273               	subwf	i1___awmod@dividend+1,w
  4217  0692  1D03               	skipz
  4218  0693  2E96               	goto	u208_25
  4219  0694  0870               	movf	i1___awmod@divisor,w
  4220  0695  0272               	subwf	i1___awmod@dividend,w
  4221  0696                     u208_25:	
  4222  0696  1C03               	skipc
  4223  0697  2E9C               	goto	i1l1843
  4224  0698  0870               	movf	i1___awmod@divisor,w
  4225  0699  02F2               	subwf	i1___awmod@dividend,f
  4226  069A  0871               	movf	i1___awmod@divisor+1,w
  4227  069B  3BF3               	subwfb	i1___awmod@dividend+1,f
  4228  069C                     i1l1843:	
  4229  069C  3001               	movlw	1
  4230  069D                     u209_25:	
  4231  069D  36F1               	lsrf	i1___awmod@divisor+1,f
  4232  069E  0CF0               	rrf	i1___awmod@divisor,f
  4233  069F  0B89               	decfsz	9,f
  4234  06A0  2E9D               	goto	u209_25
  4235  06A1  3001               	movlw	1
  4236  06A2  02F5               	subwf	i1___awmod@counter,f
  4237  06A3  1D03               	btfss	3,2
  4238  06A4  2E90               	goto	i1l1839
  4239  06A5                     i1l1847:	
  4240  06A5  0876               	movf	i1___awmod@sign,w
  4241  06A6  1903               	btfsc	3,2
  4242  06A7  2EAD               	goto	i1l1851
  4243  06A8  09F2               	comf	i1___awmod@dividend,f
  4244  06A9  09F3               	comf	i1___awmod@dividend+1,f
  4245  06AA  0AF2               	incf	i1___awmod@dividend,f
  4246  06AB  1903               	skipnz
  4247  06AC  0AF3               	incf	i1___awmod@dividend+1,f
  4248  06AD                     i1l1851:	
  4249  06AD  0873               	movf	i1___awmod@dividend+1,w
  4250  06AE  00F1               	movwf	?i1___awmod+1
  4251  06AF  0872               	movf	i1___awmod@dividend,w
  4252  06B0  00F0               	movwf	?i1___awmod
  4253  06B1  0008               	return
  4254  06B2                     __end_ofi1___awmod:	
  4255                           
  4256                           	psect	text21
  4257  04F8                     __ptext21:	
  4258 ;; *************** function i1___awdiv *****************
  4259 ;; Defined at:
  4260 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awdiv.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  divisor         2    0[COMMON] int 
  4263 ;;  dividend        2    2[COMMON] int 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  __awdiv         2    7[COMMON] int 
  4266 ;;  __awdiv         1    6[COMMON] unsigned char 
  4267 ;;  __awdiv         1    5[COMMON] unsigned char 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  2    0[COMMON] int 
  4270 ;; Registers used:
  4271 ;;		wreg, status,2, status,0
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1
  4277 ;;      Params:         4       0       0
  4278 ;;      Locals:         4       0       0
  4279 ;;      Temps:          1       0       0
  4280 ;;      Totals:         9       0       0
  4281 ;;Total ram usage:        9 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		i1_LCDWriteInt
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           
  4291                           ;psect for function i1___awdiv
  4292  04F8                     i1___awdiv:	
  4293                           
  4294                           ;incstack = 0
  4295                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4296  04F8  01F6               	clrf	i1___awdiv@sign
  4297  04F9  1FF1               	btfss	i1___awdiv@divisor+1,7
  4298  04FA  2D02               	goto	i1l1781
  4299  04FB  09F0               	comf	i1___awdiv@divisor,f
  4300  04FC  09F1               	comf	i1___awdiv@divisor+1,f
  4301  04FD  0AF0               	incf	i1___awdiv@divisor,f
  4302  04FE  1903               	skipnz
  4303  04FF  0AF1               	incf	i1___awdiv@divisor+1,f
  4304  0500  01F6               	clrf	i1___awdiv@sign
  4305  0501  0AF6               	incf	i1___awdiv@sign,f
  4306  0502                     i1l1781:	
  4307  0502  1FF3               	btfss	i1___awdiv@dividend+1,7
  4308  0503  2D0D               	goto	i1l1787
  4309  0504  09F2               	comf	i1___awdiv@dividend,f
  4310  0505  09F3               	comf	i1___awdiv@dividend+1,f
  4311  0506  0AF2               	incf	i1___awdiv@dividend,f
  4312  0507  1903               	skipnz
  4313  0508  0AF3               	incf	i1___awdiv@dividend+1,f
  4314  0509  3001               	movlw	1
  4315  050A  00F4               	movwf	??i1___awdiv
  4316  050B  0874               	movf	??i1___awdiv,w
  4317  050C  06F6               	xorwf	i1___awdiv@sign,f
  4318  050D                     i1l1787:	
  4319  050D  01F7               	clrf	i1___awdiv@quotient
  4320  050E  01F8               	clrf	i1___awdiv@quotient+1
  4321  050F  0870               	movf	i1___awdiv@divisor,w
  4322  0510  0471               	iorwf	i1___awdiv@divisor+1,w
  4323  0511  1903               	btfsc	3,2
  4324  0512  2D3C               	goto	i1l1809
  4325  0513  01F5               	clrf	i1___awdiv@counter
  4326  0514  0AF5               	incf	i1___awdiv@counter,f
  4327  0515                     i1l1797:	
  4328  0515  1BF1               	btfsc	i1___awdiv@divisor+1,7
  4329  0516  2D21               	goto	i1l1799
  4330  0517  3001               	movlw	1
  4331  0518                     u196_25:	
  4332  0518  35F0               	lslf	i1___awdiv@divisor,f
  4333  0519  0DF1               	rlf	i1___awdiv@divisor+1,f
  4334  051A  0B89               	decfsz	9,f
  4335  051B  2D18               	goto	u196_25
  4336  051C  3001               	movlw	1
  4337  051D  00F4               	movwf	??i1___awdiv
  4338  051E  0874               	movf	??i1___awdiv,w
  4339  051F  07F5               	addwf	i1___awdiv@counter,f
  4340  0520  2D15               	goto	i1l1797
  4341  0521                     i1l1799:	
  4342  0521  3001               	movlw	1
  4343  0522                     u198_25:	
  4344  0522  35F7               	lslf	i1___awdiv@quotient,f
  4345  0523  0DF8               	rlf	i1___awdiv@quotient+1,f
  4346  0524  0B89               	decfsz	9,f
  4347  0525  2D22               	goto	u198_25
  4348  0526  0871               	movf	i1___awdiv@divisor+1,w
  4349  0527  0273               	subwf	i1___awdiv@dividend+1,w
  4350  0528  1D03               	skipz
  4351  0529  2D2C               	goto	u199_25
  4352  052A  0870               	movf	i1___awdiv@divisor,w
  4353  052B  0272               	subwf	i1___awdiv@dividend,w
  4354  052C                     u199_25:	
  4355  052C  1C03               	skipc
  4356  052D  2D33               	goto	i1l1805
  4357  052E  0870               	movf	i1___awdiv@divisor,w
  4358  052F  02F2               	subwf	i1___awdiv@dividend,f
  4359  0530  0871               	movf	i1___awdiv@divisor+1,w
  4360  0531  3BF3               	subwfb	i1___awdiv@dividend+1,f
  4361  0532  1477               	bsf	i1___awdiv@quotient,0
  4362  0533                     i1l1805:	
  4363  0533  3001               	movlw	1
  4364  0534                     u200_25:	
  4365  0534  36F1               	lsrf	i1___awdiv@divisor+1,f
  4366  0535  0CF0               	rrf	i1___awdiv@divisor,f
  4367  0536  0B89               	decfsz	9,f
  4368  0537  2D34               	goto	u200_25
  4369  0538  3001               	movlw	1
  4370  0539  02F5               	subwf	i1___awdiv@counter,f
  4371  053A  1D03               	btfss	3,2
  4372  053B  2D21               	goto	i1l1799
  4373  053C                     i1l1809:	
  4374  053C  0876               	movf	i1___awdiv@sign,w
  4375  053D  1903               	btfsc	3,2
  4376  053E  2D44               	goto	i1l1813
  4377  053F  09F7               	comf	i1___awdiv@quotient,f
  4378  0540  09F8               	comf	i1___awdiv@quotient+1,f
  4379  0541  0AF7               	incf	i1___awdiv@quotient,f
  4380  0542  1903               	skipnz
  4381  0543  0AF8               	incf	i1___awdiv@quotient+1,f
  4382  0544                     i1l1813:	
  4383  0544  0878               	movf	i1___awdiv@quotient+1,w
  4384  0545  00F1               	movwf	?i1___awdiv+1
  4385  0546  0877               	movf	i1___awdiv@quotient,w
  4386  0547  00F0               	movwf	?i1___awdiv
  4387  0548  0008               	return
  4388  0549                     __end_ofi1___awdiv:	
  4389                           
  4390                           	psect	text22
  4391  0768                     __ptext22:	
  4392 ;; *************** function i1_LCDGotoXY *****************
  4393 ;; Defined at:
  4394 ;;		line 355 in file "lcd_hd44780_pic16.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  x               1    wreg     unsigned char 
  4397 ;;  y               1   12[COMMON] unsigned char 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  x               1    0[BANK0 ] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      void 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1
  4409 ;;      Params:         1       0       0
  4410 ;;      Locals:         0       1       0
  4411 ;;      Temps:          1       0       0
  4412 ;;      Totals:         2       1       0
  4413 ;;Total ram usage:        3 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    2
  4416 ;; This function calls:
  4417 ;;		i1_LCDByte
  4418 ;; This function is called by:
  4419 ;;		_ISR
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           
  4424                           ;psect for function i1_LCDGotoXY
  4425  0768                     i1_LCDGotoXY:	
  4426                           
  4427                           ;incstack = 0
  4428                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4429                           ;i1LCDGotoXY@x stored from wreg
  4430  0768  0020               	movlb	0	; select bank0
  4431  0769  00A0               	movwf	i1LCDGotoXY@x
  4432                           
  4433                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  4434  076A  3014               	movlw	20
  4435  076B  0220               	subwf	i1LCDGotoXY@x,w
  4436  076C  1803               	btfsc	3,0
  4437  076D  0008               	return
  4438  076E  2F78               	goto	i1l2057
  4439  076F                     i1l70:	
  4440                           ;lcd_hd44780_pic16.c: 365: case 1:
  4441                           
  4442                           ;lcd_hd44780_pic16.c: 364: break;
  4443                           
  4444                           ;lcd_hd44780_pic16.c: 362: {
  4445                           ;lcd_hd44780_pic16.c: 363: case 0:
  4446                           
  4447                           ;lcd_hd44780_pic16.c: 361: switch(y)
  4448                           
  4449                           
  4450                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  4451  076F  1720               	bsf	i1LCDGotoXY@x,6
  4452                           
  4453                           ;lcd_hd44780_pic16.c: 367: break;
  4454  0770  2F86               	goto	i1l69
  4455  0771                     i1l2051:	
  4456                           ;lcd_hd44780_pic16.c: 368: case 2:
  4457                           
  4458                           
  4459                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  4460  0771  3014               	movlw	20
  4461  0772  2F74               	goto	L7
  4462  0773                     i1l2053:	
  4463                           ;lcd_hd44780_pic16.c: 371: case 3:
  4464                           
  4465                           ;lcd_hd44780_pic16.c: 370: break;
  4466                           
  4467                           
  4468                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  4469  0773  3054               	movlw	84
  4470  0774                     L7:	
  4471  0774  00FD               	movwf	??i1_LCDGotoXY
  4472  0775  087D               	movf	??i1_LCDGotoXY,w
  4473  0776  07A0               	addwf	i1LCDGotoXY@x,f
  4474                           
  4475                           ;lcd_hd44780_pic16.c: 374: }
  4476                           
  4477                           ;lcd_hd44780_pic16.c: 373: break;
  4478  0777  2F86               	goto	i1l69
  4479  0778                     i1l2057:	
  4480  0778  087C               	movf	i1LCDGotoXY@y,w
  4481                           
  4482                           ; Switch size 1, requested type "space"
  4483                           ; Number of cases is 4, Range of values is 0 to 3
  4484                           ; switch strategies available:
  4485                           ; Name         Instructions Cycles
  4486                           ; simple_byte           13     7 (average)
  4487                           ; direct_byte           14     6 (fixed)
  4488                           ; jumptable            260     6 (fixed)
  4489                           ;	Chosen strategy is simple_byte
  4490  0779  3A00               	xorlw	0	; case 0
  4491  077A  1903               	skipnz
  4492  077B  2F86               	goto	i1l69
  4493  077C  3A01               	xorlw	1	; case 1
  4494  077D  1903               	skipnz
  4495  077E  2F6F               	goto	i1l70
  4496  077F  3A03               	xorlw	3	; case 2
  4497  0780  1903               	skipnz
  4498  0781  2F71               	goto	i1l2051
  4499  0782  3A01               	xorlw	1	; case 3
  4500  0783  1903               	skipnz
  4501  0784  2F73               	goto	i1l2053
  4502  0785  2F86               	goto	i1l69
  4503  0786                     i1l69:	
  4504                           
  4505                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  4506  0786  17A0               	bsf	i1LCDGotoXY@x,7
  4507                           
  4508                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  4509  0787  01F5               	clrf	i1LCDByte@isdata
  4510  0788  0820               	movf	i1LCDGotoXY@x,w
  4511  0789  2549               	fcall	i1_LCDByte
  4512  078A  0008               	return
  4513  078B                     __end_ofi1_LCDGotoXY:	
  4514                           
  4515                           	psect	text23
  4516  0549                     __ptext23:	
  4517 ;; *************** function i1_LCDByte *****************
  4518 ;; Defined at:
  4519 ;;		line 80 in file "lcd_hd44780_pic16.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  c               1    wreg     unsigned char 
  4522 ;;  isdata          1    5[COMMON] unsigned char 
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  c               1   10[COMMON] unsigned char 
  4525 ;;  LCDByte         1   11[COMMON] unsigned char 
  4526 ;;  LCDByte         1    9[COMMON] unsigned char 
  4527 ;;  LCDByte         1    8[COMMON] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1
  4537 ;;      Params:         1       0       0
  4538 ;;      Locals:         4       0       0
  4539 ;;      Temps:          2       0       0
  4540 ;;      Totals:         7       0       0
  4541 ;;Total ram usage:        7 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    1
  4544 ;; This function calls:
  4545 ;;		i1_LCDBusyLoop
  4546 ;; This function is called by:
  4547 ;;		i1_LCDWriteInt
  4548 ;;		i1_LCDGotoXY
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           
  4553                           ;psect for function i1_LCDByte
  4554  0549                     i1_LCDByte:	
  4555                           
  4556                           ;incstack = 0
  4557                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  4558                           ;i1LCDByte@c stored from wreg
  4559  0549  00FA               	movwf	i1LCDByte@c
  4560                           
  4561                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  4562                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  4563                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  4564  054A  087A               	movf	i1LCDByte@c,w
  4565  054B  00F6               	movwf	??i1_LCDByte
  4566  054C  3004               	movlw	4
  4567  054D                     u189_25:	
  4568  054D  36F6               	lsrf	??i1_LCDByte,f
  4569  054E  0B89               	decfsz	9,f
  4570  054F  2D4D               	goto	u189_25
  4571  0550  0876               	movf	??i1_LCDByte,w
  4572  0551  00F7               	movwf	??i1_LCDByte+1
  4573  0552  0877               	movf	??i1_LCDByte+1,w
  4574  0553  00F8               	movwf	i1LCDByte@hn
  4575                           
  4576                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  4577  0554  087A               	movf	i1LCDByte@c,w
  4578  0555  390F               	andlw	15
  4579  0556  00F6               	movwf	??i1_LCDByte
  4580  0557  0876               	movf	??i1_LCDByte,w
  4581  0558  00F9               	movwf	i1LCDByte@ln
  4582                           
  4583                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  4584  0559  0875               	movf	i1LCDByte@isdata,w
  4585  055A  1D03               	btfss	3,2
  4586  055B  2D5F               	goto	i1l23
  4587                           
  4588                           ;lcd_hd44780_pic16.c: 96: (RC0=0);
  4589  055C  0020               	movlb	0	; select bank0
  4590  055D  100E               	bcf	14,0	;volatile
  4591  055E  2D61               	goto	i1l24
  4592  055F                     i1l23:	
  4593                           
  4594                           ;lcd_hd44780_pic16.c: 97: else
  4595                           ;lcd_hd44780_pic16.c: 98: (RC0=1);
  4596  055F  0020               	movlb	0	; select bank0
  4597  0560  140E               	bsf	14,0	;volatile
  4598  0561                     i1l24:	
  4599                           
  4600                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4601  0561  3200               	nop2	;2 cycle nop
  4602                           
  4603                           ;lcd_hd44780_pic16.c: 102: (RC1=1);
  4604  0562  0020               	movlb	0	; select bank0
  4605  0563  148E               	bsf	14,1	;volatile
  4606                           
  4607                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  4608  0564  0878               	movf	i1LCDByte@hn,w
  4609  0565  00F6               	movwf	??i1_LCDByte
  4610  0566  3002               	movlw	2
  4611  0567                     u191_25:	
  4612  0567  35F6               	lslf	??i1_LCDByte,f
  4613  0568  0B89               	decfsz	9,f
  4614  0569  2D67               	goto	u191_25
  4615  056A  080E               	movf	14,w	;volatile
  4616  056B  39C3               	andlw	195
  4617  056C  0476               	iorwf	??i1_LCDByte,w
  4618  056D  00F7               	movwf	??i1_LCDByte+1
  4619  056E  0877               	movf	??i1_LCDByte+1,w
  4620  056F  00FB               	movwf	i1LCDByte@temp
  4621                           
  4622                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  4623  0570  087B               	movf	i1LCDByte@temp,w
  4624  0571  008E               	movwf	14	;volatile
  4625                           
  4626                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4627  0572  3200               	nop2	;2 cycle nop
  4628  0573  3200               	nop2	;2 cycle nop
  4629  0574  0000               	nop
  4630                           
  4631                           ;lcd_hd44780_pic16.c: 113: (RC1=0);
  4632  0575  0020               	movlb	0	; select bank0
  4633  0576  108E               	bcf	14,1	;volatile
  4634                           
  4635                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4636  0577  3200               	nop2	;2 cycle nop
  4637  0578  3200               	nop2	;2 cycle nop
  4638  0579  0000               	nop
  4639                           
  4640                           ;lcd_hd44780_pic16.c: 118: (RC1=1);
  4641  057A  0020               	movlb	0	; select bank0
  4642  057B  148E               	bsf	14,1	;volatile
  4643                           
  4644                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  4645  057C  0879               	movf	i1LCDByte@ln,w
  4646  057D  00F6               	movwf	??i1_LCDByte
  4647  057E  3002               	movlw	2
  4648  057F                     u192_25:	
  4649  057F  35F6               	lslf	??i1_LCDByte,f
  4650  0580  0B89               	decfsz	9,f
  4651  0581  2D7F               	goto	u192_25
  4652  0582  080E               	movf	14,w	;volatile
  4653  0583  39C3               	andlw	195
  4654  0584  0476               	iorwf	??i1_LCDByte,w
  4655  0585  00F7               	movwf	??i1_LCDByte+1
  4656  0586  0877               	movf	??i1_LCDByte+1,w
  4657  0587  00FB               	movwf	i1LCDByte@temp
  4658                           
  4659                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  4660  0588  087B               	movf	i1LCDByte@temp,w
  4661  0589  008E               	movwf	14	;volatile
  4662                           
  4663                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4664  058A  3200               	nop2	;2 cycle nop
  4665  058B  3200               	nop2	;2 cycle nop
  4666  058C  0000               	nop
  4667                           
  4668                           ;lcd_hd44780_pic16.c: 128: (RC1=0);
  4669  058D  0020               	movlb	0	; select bank0
  4670  058E  108E               	bcf	14,1	;volatile
  4671                           
  4672                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4673  058F  3200               	nop2	;2 cycle nop
  4674  0590  3200               	nop2	;2 cycle nop
  4675  0591  0000               	nop
  4676                           
  4677                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  4678  0592  2450               	fcall	i1_LCDBusyLoop
  4679  0593  0008               	return
  4680  0594                     __end_ofi1_LCDByte:	
  4681                           
  4682                           	psect	text24
  4683  0450                     __ptext24:	
  4684 ;; *************** function i1_LCDBusyLoop *****************
  4685 ;; Defined at:
  4686 ;;		line 135 in file "lcd_hd44780_pic16.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  4691 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  4692 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMMON   BANK0   BANK1
  4702 ;;      Params:         0       0       0
  4703 ;;      Locals:         3       0       0
  4704 ;;      Temps:          2       0       0
  4705 ;;      Totals:         5       0       0
  4706 ;;Total ram usage:        5 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		i1_LCDByte
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           
  4716                           ;psect for function i1_LCDBusyLoop
  4717  0450                     i1_LCDBusyLoop:	
  4718                           
  4719                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4720                           
  4721                           ;incstack = 0
  4722                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  4723  0450  01F4               	clrf	i1LCDBusyLoop@status
  4724                           
  4725                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<2);
  4726  0451  303C               	movlw	60
  4727  0452  00F0               	movwf	??i1_LCDBusyLoop
  4728  0453  0870               	movf	??i1_LCDBusyLoop,w
  4729  0454  0021               	movlb	1	; select bank1
  4730  0455  048E               	iorwf	14,f	;volatile
  4731                           
  4732                           ;lcd_hd44780_pic16.c: 145: (RA0=1);
  4733  0456  0020               	movlb	0	; select bank0
  4734  0457  140C               	bsf	12,0	;volatile
  4735                           
  4736                           ;lcd_hd44780_pic16.c: 146: (RC0=0);
  4737  0458  100E               	bcf	14,0	;volatile
  4738                           
  4739                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4740  0459  3200               	nop2	;2 cycle nop
  4741  045A                     i1l1483:	
  4742                           ;lcd_hd44780_pic16.c: 153: do
  4743                           
  4744                           
  4745                           ;lcd_hd44780_pic16.c: 154: {
  4746                           ;lcd_hd44780_pic16.c: 156: (RC1=1);
  4747  045A  0020               	movlb	0	; select bank0
  4748  045B  148E               	bsf	14,1	;volatile
  4749                           
  4750                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4751  045C  3200               	nop2	;2 cycle nop
  4752                           
  4753                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>2);
  4754  045D  0020               	movlb	0	; select bank0
  4755  045E  080E               	movf	14,w	;volatile
  4756  045F  00F0               	movwf	??i1_LCDBusyLoop
  4757  0460  3002               	movlw	2
  4758  0461                     u138_25:	
  4759  0461  36F0               	lsrf	??i1_LCDBusyLoop,f
  4760  0462  0B89               	decfsz	9,f
  4761  0463  2C61               	goto	u138_25
  4762  0464  0870               	movf	??i1_LCDBusyLoop,w
  4763  0465  00F1               	movwf	??i1_LCDBusyLoop+1
  4764  0466  0871               	movf	??i1_LCDBusyLoop+1,w
  4765  0467  00F4               	movwf	i1LCDBusyLoop@status
  4766                           
  4767                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4768  0468  0874               	movf	i1LCDBusyLoop@status,w
  4769  0469  00F0               	movwf	??i1_LCDBusyLoop
  4770  046A  3003               	movlw	3
  4771  046B                     u139_25:	
  4772  046B  35F0               	lslf	??i1_LCDBusyLoop,f
  4773  046C  3EFF               	addlw	-1
  4774  046D  1D03               	skipz
  4775  046E  2C6B               	goto	u139_25
  4776  046F  3570               	lslf	??i1_LCDBusyLoop,w
  4777  0470  00F1               	movwf	??i1_LCDBusyLoop+1
  4778  0471  0871               	movf	??i1_LCDBusyLoop+1,w
  4779  0472  00F4               	movwf	i1LCDBusyLoop@status
  4780                           
  4781                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4782  0473  3200               	nop2	;2 cycle nop
  4783                           
  4784                           ;lcd_hd44780_pic16.c: 167: (RC1=0);
  4785  0474  0020               	movlb	0	; select bank0
  4786  0475  108E               	bcf	14,1	;volatile
  4787                           
  4788                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4789  0476  3200               	nop2	;2 cycle nop
  4790  0477  3200               	nop2	;2 cycle nop
  4791  0478  0000               	nop
  4792                           
  4793                           ;lcd_hd44780_pic16.c: 170: (RC1=1);
  4794  0479  0020               	movlb	0	; select bank0
  4795  047A  148E               	bsf	14,1	;volatile
  4796                           
  4797                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4798  047B  3200               	nop2	;2 cycle nop
  4799                           
  4800                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>2);
  4801  047C  0020               	movlb	0	; select bank0
  4802  047D  080E               	movf	14,w	;volatile
  4803  047E  00F0               	movwf	??i1_LCDBusyLoop
  4804  047F  3002               	movlw	2
  4805  0480                     u140_25:	
  4806  0480  36F0               	lsrf	??i1_LCDBusyLoop,f
  4807  0481  0B89               	decfsz	9,f
  4808  0482  2C80               	goto	u140_25
  4809  0483  0870               	movf	??i1_LCDBusyLoop,w
  4810  0484  00F1               	movwf	??i1_LCDBusyLoop+1
  4811  0485  0871               	movf	??i1_LCDBusyLoop+1,w
  4812  0486  00F3               	movwf	i1LCDBusyLoop@temp
  4813                           
  4814                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  4815  0487  300F               	movlw	15
  4816  0488  00F0               	movwf	??i1_LCDBusyLoop
  4817  0489  0870               	movf	??i1_LCDBusyLoop,w
  4818  048A  05F3               	andwf	i1LCDBusyLoop@temp,f
  4819                           
  4820                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  4821  048B  0874               	movf	i1LCDBusyLoop@status,w
  4822  048C  0473               	iorwf	i1LCDBusyLoop@temp,w
  4823  048D  00F0               	movwf	??i1_LCDBusyLoop
  4824  048E  0870               	movf	??i1_LCDBusyLoop,w
  4825  048F  00F4               	movwf	i1LCDBusyLoop@status
  4826                           
  4827                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  4828  0490  0874               	movf	i1LCDBusyLoop@status,w
  4829  0491  3980               	andlw	128
  4830  0492  00F0               	movwf	??i1_LCDBusyLoop
  4831  0493  0870               	movf	??i1_LCDBusyLoop,w
  4832  0494  00F2               	movwf	i1LCDBusyLoop@busy
  4833                           
  4834                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4835  0495  3200               	nop2	;2 cycle nop
  4836                           
  4837                           ;lcd_hd44780_pic16.c: 182: (RC1=0);
  4838  0496  0020               	movlb	0	; select bank0
  4839  0497  108E               	bcf	14,1	;volatile
  4840                           
  4841                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4842  0498  3200               	nop2	;2 cycle nop
  4843  0499  3200               	nop2	;2 cycle nop
  4844  049A  0000               	nop
  4845                           
  4846                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  4847  049B  0872               	movf	i1LCDBusyLoop@busy,w
  4848  049C  1D03               	btfss	3,2
  4849  049D  2C5A               	goto	i1l1483
  4850                           
  4851                           ;lcd_hd44780_pic16.c: 186: (RA0=0);
  4852  049E  0020               	movlb	0	; select bank0
  4853  049F  100C               	bcf	12,0	;volatile
  4854                           
  4855                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<2));
  4856  04A0  30C3               	movlw	195
  4857  04A1  00F0               	movwf	??i1_LCDBusyLoop
  4858  04A2  0870               	movf	??i1_LCDBusyLoop,w
  4859  04A3  0021               	movlb	1	; select bank1
  4860  04A4  058E               	andwf	14,f	;volatile
  4861  04A5  0008               	return
  4862  04A6                     __end_ofi1_LCDBusyLoop:	
  4863  007E                     btemp	set	126	;btemp
  4864  007E                     int$flags	set	126
  4865  007E                     wtemp0	set	126


Data Sizes:
    Strings     26
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      66
    BANK1            32      7      15

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _LM35ReadTemp->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _main->_LM35ReadTemp

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14783
                                              4 BANK1      3     3      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                       _LM35ReadTemp
                     _TriggerOutInit
                     _TuneButtonInit
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TriggerOutInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35ReadTemp                                         4     2      2    5982
                                              0 BANK1      4     2      2
                            _ReadADC
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2452
                                             22 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             42 BANK0     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2986
                                             26 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             14 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2      62
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1734
                                             26 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2855
                                             26 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                             14 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                             14 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              3     3      0    1250
                                             26 BANK0      3     3      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1919
                                             26 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1043
                                             19 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                             14 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0    1916
                                             12 BANK0      2     2      0
                        i1_LCDGotoXY
                      i1_LCDWriteInt
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    1467
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     449
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     353
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LM35ReadTemp
     _ReadADC
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _TriggerOutInit
   _TuneButtonInit

 _ISR (ROOT)
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     38      42       6       82.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      7       F       8       46.9%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      5F       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Apr 27 20:42:41 2017

             ?_LCDBusyLoop 0070                 __CFG_CP$ON 0000                         l23 05AA  
                       l24 05AB                         l70 074C                         l69 0763  
              __CFG_CPD$ON 0000               ___awdiv@sign 0034                __CFG_LVP$ON 0000  
                      l410 03C7                        l501 027A                        l158 073B  
                      l417 03DA                        l418 03E2                        _RA0 0060  
                      _RA1 0061                        _RC0 0070                        _RA4 0064  
                      _RC1 0071                        _RA5 0065                        _ISR 0004  
          __end_of_ADCInit 07CB               ___awmod@sign 0034               __CFG_BORV$LO 0000  
                      wreg 0009               __CFG_IESO$ON 0000      LM35ReadTemp@adc_value 00AA  
  LCDWriteInt@field_length 003C            __end_of_LCDByte 05DE            __end_of_LCDInit 0627  
             ?_LCDWriteInt 003A                       ?_ISR 0070                LCDByte@temp 0039  
                     l1405 0404                       l2221 0187                       l2215 0171  
                     l1601 04EB                       l2233 01C2                       l2171 03AE  
                     l1605 04F3                       l1621 0639                       l2181 03D4  
                     l2173 03B3                       l2165 039D                       l2245 01DE  
                     l2237 01CA                       l1631 064B                       l1617 0632  
                     l2169 03A4                       l2249 01E6                       l2265 0226  
                     l1643 0668                       l1635 0657                       l2179 03CC  
                     l2291 0271                       l2283 0256                       l1573 04B1  
                     l1629 063F                       l2293 027D                       l2285 0264  
                     l1591 04D0                       l1639 0660                       l2199 0729  
                     l2367 0101                       l2297 028B                       l2385 0128  
                     l1579 04BC                       l1923 06E0                       l2379 013F  
                     l1597 04E2                       l1589 04C4                       l1951 02B9  
                     l1919 06DB                       l1927 06B2                       l1961 02F5  
                     l1953 02E2                       l1983 0755                       l1977 074E  
                     l1979 0750                       STR_1 078B                       STR_2 079D  
                     STR_3 0799                       STR_4 0790                       STR_5 079D  
                     STR_6 07A1                       STR_7 0795                       STR_8 07A1  
                     u1225 040B                       u1235 0415                       u1245 042A  
                     u1425 0599                       u1515 04C7                       u2235 0302  
                     u2180 029F                       u1445 05B1                       u1455 05C9  
                     u1535 04D1                       u1615 0642                       u1545 04DB  
                     u1555 04E3                       u1635 0651                       u1645 0658  
                     u2605 01A3                       u2535 03E9                       u2455 03A9  
                     u2625 01CB                       u2705 022D                       u2475 03C2  
                     u2635 01D1                       u2805 00F1                       u2495 03CF  
                     u2735 0257                       u2815 0119                       u2665 01E7  
                     u2825 013A                       u2675 01ED                       u2595 0193  
                     u2765 0272                       i1l23 055F                       u2847 0154  
                     i1l24 0561                       u2857 0736                       u2867 05E4  
                     u2795 00E0                       i1l70 076F                       i1l69 0786  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 0062  
             ___ftpack@arg 002E     __end_of_TuneButtonInit 07E5         __size_of_LCDGotoXY 0023  
             ___ftpack@exp 0031                       fsr0h 0005                       fsr1h 0007  
                     indf0 0000                       fsr0l 0004                       indf1 0001  
                     fsr1l 0006                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 0046  i1LCDWriteInt@field_length 0022               ___ftmul@cntr 0048  
             ___ftmul@sign 0049            __end_of_ReadADC 0745                      ??_ISR 002C  
       __size_ofi1_LCDByte 004B               ___fttol@exp1 0057               ___fttol@lval 0053  
            __CFG_PLLEN$ON 0000               ?i1_LCDGotoXY 007C                      ?_main 0070  
           i1___awdiv@sign 0076            __end_of___awdiv 04F8              __CFG_WDTE$OFF 0000  
          __end_of___awmod 066D               LCDInit@style 003B            __end_of___ftmul 020D  
          ___awdiv@divisor 002E            __end_of___fttol 0294                      i1l123 0041  
                    i1l118 0040            ___awdiv@counter 0033                      _PORTC 000E  
                    _TRISC 008E             i1___awmod@sign 0076              ___ftpack@sign 0032  
     __end_of_LM35ReadTemp 0720                      status 0003                      wtemp0 007E  
          ?_TuneButtonInit 0070         __size_ofi1___awdiv 0051         __size_ofi1___awmod 0045  
           __CFG_MCLRE$OFF 0000            __initialization 0047               __end_of_main 015A  
                ??_ADCInit 002E                     ??_main 00AC              ___fttol@sign1 0052  
        __end_of_LCDGotoXY 0768              LCDByte@isdata 0033                  ??_LCDByte 0034  
                ??_LCDInit 003A                     _ADRESH 009C                     _ADRESL 009B  
         ___awdiv@dividend 0030          __end_ofi1_LCDByte 0594           __end_of___ftpack 03F9  
   __size_ofi1_LCDBusyLoop 0056                     i1l2025 0339                     i1l2051 0771  
                   i1l2035 0375                     i1l2027 0362                     i1l2053 0773  
                   i1l2071 0022                     i1l2057 0778                     i1l2067 000F  
                   u200_25 0534                     i1l2077 0039                     i1l1483 045A  
                   i1l1813 0544                     i1l1805 0533                     i1l1809 053C  
                   i1l1825 0677                     i1l1851 06AD                     i1l1843 069C  
                   i1l1781 0502                     i1l1837 0684                     i1l1829 067E  
                   i1l1839 0690                     i1l1847 06A5                     i1l1787 050D  
                   i1l1797 0515                     i1l1799 0521        i1LCDBusyLoop@status 0074  
                   u140_25 0480                     u206_25 0687                     u231_25 0382  
                   u208_25 0696                     u209_25 069D                     u226_20 031E  
                   u138_25 0461                     u139_25 046B                     u236_25 001D  
                   u191_25 0567                     u192_25 057F           __end_of___lwtoft 07B9  
                   u196_25 0518                     u189_25 054D                     u198_25 0522  
                   u199_25 052C                     u287_27 0034                  ??_ReadADC 0030  
            _tuneUpTempDir 005D             __CFG_PWRTE$OFF 0000             _LCDWriteString 06B2  
                ??___awdiv 0032             __CFG_STVREN$ON 0000                  ??___awmod 0032  
                ??___ftmul 0040                  ??___fttol 004E     __size_ofi1_LCDWriteInt 0080  
     __size_of_LCDBusyLoop 0057           i1LCDWriteInt@val 0020           i1LCDWriteInt@str 0023  
         ___awdiv@quotient 0035            ___awmod@divisor 002E            ___awmod@counter 0033  
    ___ftmul@f3_as_product 0045          __end_ofi1___awdiv 0549          __end_ofi1___awmod 06B2  
             LCDWriteInt@i 0046               LCDWriteInt@j 0044           ??_TriggerOutInit 002E  
     __size_of_LCDWriteInt 0080    __end_of__initialization 005F     __end_of_LCDWriteString 06EF  
                LCDByte@hn 0036                  LCDByte@ln 0037                 ___ftmul@f1 003A  
               ___ftmul@f2 003D                 ___fttol@f1 004A             __pcstackCOMMON 0070  
             __pidataBANK0 07D3               __pidataBANK1 07CB              i1_LCDBusyLoop 0450  
               ___lwtoft@c 0036               i1LCDGotoXY@x 0020               i1LCDGotoXY@y 007C  
        i1LCDBusyLoop@busy 0072          i1LCDBusyLoop@temp 0073       __size_ofi1_LCDGotoXY 0023  
    __size_of_LM35ReadTemp 0031             i1LCDWriteInt@i 002A             i1LCDWriteInt@j 0028  
          i1LCDByte@isdata 0075              i1_LCDWriteInt 0314                 __pbssBANK0 005E  
          ?_LCDWriteString 003A                 __pmaintext 0062             ?i1_LCDBusyLoop 0070  
               __pintentry 0004                    _ADCInit 07B9               _LM35ReadTemp 06EF  
                ?___ftpack 002E                  ?___lwtoft 0036         i1___awdiv@dividend 0072  
                  _LCDByte 0594                    _LCDInit 05DE           ??_TuneButtonInit 002E  
           ?i1_LCDWriteInt 0020                    _ReadADC 0720         i1___awdiv@quotient 0077  
                  ___cgram 00A0                    ___awdiv 04A6                    ___awmod 0627  
                  ___ftmul 015A                    ___fttol 020D                 ??___ftpack 0033  
                  __ptext1 07DF                    __ptext2 07E5                    __ptext3 06EF  
                  __ptext4 07A5                    __ptext5 020D                    __ptext6 015A  
                  __ptext7 0394                    __ptext8 0720                    __ptext9 06B2  
               ??___lwtoft 0039                    _curTemp 005E               __size_of_ISR 0042  
         ___awmod@dividend 0030                  _IOCAFbits 0393                  _LCDGotoXY 0745  
     end_of_initialization 005F                    init_ram 07D9                    initloop 07DA  
                i1_LCDByte 0549            ??i1_LCDBusyLoop 0070               __pstringtext 078B  
        LCDWriteString@msg 003A           __CFG_FOSC$INTOSC 0000                  _TRISAbits 008C  
                _TRISCbits 008E            ??i1_LCDWriteInt 007C                 ?_LCDGotoXY 003A  
                i1___awdiv 04F8                  i1___awmod 066D                  ReadADC@ch 0031  
               LCDInit@__i 003C                 ?i1_LCDByte 0075                 LCDGotoXY@x 003C  
               LCDGotoXY@y 003A                 _tuneUpTemp 0060                ___ftmul@exp 0044  
            ??_LCDBusyLoop 002E        start_initialization 0047                __end_of_ISR 0046  
               ?i1___awdiv 0070                 ?i1___awmod 0070              ??_LCDWriteInt 003D  
         ??_LCDWriteString 003C              i1LCDByte@temp 007B                __pdataBANK0 0058  
              __pdataBANK1 00A0         i1___awmod@dividend 0072                   ?_ADCInit 0070  
            ??i1_LCDGotoXY 007D        __end_of_LCDBusyLoop 0450                   ?_LCDByte 0033  
                 ?_LCDInit 0070          __size_of___ftpack 0065                   LCDByte@c 0038  
                ___latbits 0000          __size_of___lwtoft 0014              __pcstackBANK0 0020  
            __pcstackBANK1 00A8                ??_LCDGotoXY 003B                i1LCDByte@hn 0078  
              i1LCDByte@ln 0079           LCDWriteInt@F2520 0058                ??i1_LCDByte 0076  
                 ?_ReadADC 002E        __end_of_LCDWriteInt 0314    __size_of_TriggerOutInit 0006  
                 ?___awdiv 002E                   ?___awmod 002E                   ?___ftmul 003A  
                 ?___fttol 004A          i1___awdiv@divisor 0070          i1___awdiv@counter 0075  
      __end_ofi1_LCDGotoXY 078B            LCDBusyLoop@busy 0030                ??i1___awdiv 0074  
              ??i1___awmod 0074            LCDBusyLoop@temp 0031                _LCDBusyLoop 03F9  
         LCDWriteString@cc 003D           __size_of_ADCInit 0012                 _ADCON0bits 009D  
               _ADCON1bits 009E           __size_of_LCDByte 004A           __size_of_LCDInit 0049  
              _LCDWriteInt 0294           __size_of_ReadADC 0025    __size_of_TuneButtonInit 0006  
    __end_ofi1_LCDBusyLoop 04A6          i1___awmod@divisor 0070          i1___awmod@counter 0075  
         __size_of___awdiv 0052           __size_of___awmod 0046           __size_of___ftmul 00B3  
         __size_of___fttol 0087          LCDBusyLoop@status 0032                   ___ftpack 0394  
              i1_LCDGotoXY 0768                 _ANSELAbits 018C                   ___lwtoft 07A5  
               i1LCDByte@c 007A                   __ptext10 0294                   __ptext11 0627  
                 __ptext20 066D                   __ptext12 04A6                   __ptext21 04F8  
                 __ptext13 05DE                   __ptext22 0768                   __ptext14 0745  
                 __ptext23 0549                   __ptext15 0594                   __ptext24 0450  
                 __ptext16 03F9                   __ptext17 07B9                   __ptext19 0314  
    __end_ofi1_LCDWriteInt 0394              __size_of_main 00F8             _TriggerOutInit 07E5  
                 int$flags 007E              ?_LM35ReadTemp 00A8                 _INTCONbits 000B  
                 intlevel1 0000             LCDWriteInt@val 003A             LCDWriteInt@str 003F  
   __end_of_TriggerOutInit 07EB          __CFG_CLKOUTEN$OFF 0000             ??_LM35ReadTemp 0058  
          ?_TriggerOutInit 0070             _TuneButtonInit 07DF    __size_of_LCDWriteString 003D  
