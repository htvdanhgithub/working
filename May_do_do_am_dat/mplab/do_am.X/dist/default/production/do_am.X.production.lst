

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jun 15 01:58:08 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000E                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  008C                     	;# 
    69  008E                     	;# 
    70  0091                     	;# 
    71  0092                     	;# 
    72  0095                     	;# 
    73  0096                     	;# 
    74  0097                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  010C                     	;# 
    84  010E                     	;# 
    85  0111                     	;# 
    86  0112                     	;# 
    87  0113                     	;# 
    88  0114                     	;# 
    89  0115                     	;# 
    90  0116                     	;# 
    91  0117                     	;# 
    92  0118                     	;# 
    93  0119                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011D                     	;# 
    97  011D                     	;# 
    98  018C                     	;# 
    99  018E                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  020E                     	;# 
   122  0211                     	;# 
   123  0211                     	;# 
   124  0212                     	;# 
   125  0212                     	;# 
   126  0213                     	;# 
   127  0213                     	;# 
   128  0214                     	;# 
   129  0214                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0216                     	;# 
   134  0216                     	;# 
   135  0217                     	;# 
   136  0217                     	;# 
   137  0291                     	;# 
   138  0291                     	;# 
   139  0292                     	;# 
   140  0293                     	;# 
   141  0294                     	;# 
   142  0295                     	;# 
   143  0295                     	;# 
   144  0296                     	;# 
   145  0391                     	;# 
   146  0392                     	;# 
   147  0393                     	;# 
   148  039A                     	;# 
   149  039C                     	;# 
   150  039D                     	;# 
   151  039E                     	;# 
   152  039F                     	;# 
   153  0FE4                     	;# 
   154  0FE5                     	;# 
   155  0FE6                     	;# 
   156  0FE7                     	;# 
   157  0FE8                     	;# 
   158  0FE9                     	;# 
   159  0FEA                     	;# 
   160  0FEB                     	;# 
   161  0FED                     	;# 
   162  0FEE                     	;# 
   163  0FEF                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000E                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  008C                     	;# 
   192  008E                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  010C                     	;# 
   207  010E                     	;# 
   208  0111                     	;# 
   209  0112                     	;# 
   210  0113                     	;# 
   211  0114                     	;# 
   212  0115                     	;# 
   213  0116                     	;# 
   214  0117                     	;# 
   215  0118                     	;# 
   216  0119                     	;# 
   217  011A                     	;# 
   218  011B                     	;# 
   219  011D                     	;# 
   220  011D                     	;# 
   221  018C                     	;# 
   222  018E                     	;# 
   223  0191                     	;# 
   224  0191                     	;# 
   225  0192                     	;# 
   226  0193                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0194                     	;# 
   230  0195                     	;# 
   231  0196                     	;# 
   232  0199                     	;# 
   233  019A                     	;# 
   234  019B                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019C                     	;# 
   239  019C                     	;# 
   240  019D                     	;# 
   241  019E                     	;# 
   242  019F                     	;# 
   243  020C                     	;# 
   244  020E                     	;# 
   245  0211                     	;# 
   246  0211                     	;# 
   247  0212                     	;# 
   248  0212                     	;# 
   249  0213                     	;# 
   250  0213                     	;# 
   251  0214                     	;# 
   252  0214                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0291                     	;# 
   261  0291                     	;# 
   262  0292                     	;# 
   263  0293                     	;# 
   264  0294                     	;# 
   265  0295                     	;# 
   266  0295                     	;# 
   267  0296                     	;# 
   268  0391                     	;# 
   269  0392                     	;# 
   270  0393                     	;# 
   271  039A                     	;# 
   272  039C                     	;# 
   273  039D                     	;# 
   274  039E                     	;# 
   275  039F                     	;# 
   276  0FE4                     	;# 
   277  0FE5                     	;# 
   278  0FE6                     	;# 
   279  0FE7                     	;# 
   280  0FE8                     	;# 
   281  0FE9                     	;# 
   282  0FEA                     	;# 
   283  0FEB                     	;# 
   284  0FED                     	;# 
   285  0FEE                     	;# 
   286  0FEF                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000E                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001C                     	;# 
   312  001E                     	;# 
   313  001F                     	;# 
   314  008C                     	;# 
   315  008E                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  010C                     	;# 
   330  010E                     	;# 
   331  0111                     	;# 
   332  0112                     	;# 
   333  0113                     	;# 
   334  0114                     	;# 
   335  0115                     	;# 
   336  0116                     	;# 
   337  0117                     	;# 
   338  0118                     	;# 
   339  0119                     	;# 
   340  011A                     	;# 
   341  011B                     	;# 
   342  011D                     	;# 
   343  011D                     	;# 
   344  018C                     	;# 
   345  018E                     	;# 
   346  0191                     	;# 
   347  0191                     	;# 
   348  0192                     	;# 
   349  0193                     	;# 
   350  0193                     	;# 
   351  0193                     	;# 
   352  0194                     	;# 
   353  0195                     	;# 
   354  0196                     	;# 
   355  0199                     	;# 
   356  019A                     	;# 
   357  019B                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019B                     	;# 
   361  019C                     	;# 
   362  019C                     	;# 
   363  019D                     	;# 
   364  019E                     	;# 
   365  019F                     	;# 
   366  020C                     	;# 
   367  020E                     	;# 
   368  0211                     	;# 
   369  0211                     	;# 
   370  0212                     	;# 
   371  0212                     	;# 
   372  0213                     	;# 
   373  0213                     	;# 
   374  0214                     	;# 
   375  0214                     	;# 
   376  0215                     	;# 
   377  0215                     	;# 
   378  0215                     	;# 
   379  0216                     	;# 
   380  0216                     	;# 
   381  0217                     	;# 
   382  0217                     	;# 
   383  0291                     	;# 
   384  0291                     	;# 
   385  0292                     	;# 
   386  0293                     	;# 
   387  0294                     	;# 
   388  0295                     	;# 
   389  0295                     	;# 
   390  0296                     	;# 
   391  0391                     	;# 
   392  0392                     	;# 
   393  0393                     	;# 
   394  039A                     	;# 
   395  039C                     	;# 
   396  039D                     	;# 
   397  039E                     	;# 
   398  039F                     	;# 
   399  0FE4                     	;# 
   400  0FE5                     	;# 
   401  0FE6                     	;# 
   402  0FE7                     	;# 
   403  0FE8                     	;# 
   404  0FE9                     	;# 
   405  0FEA                     	;# 
   406  0FEB                     	;# 
   407  0FED                     	;# 
   408  0FEE                     	;# 
   409  0FEF                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0008                     	;# 
   419  0009                     	;# 
   420  000A                     	;# 
   421  000B                     	;# 
   422  000C                     	;# 
   423  000E                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  008C                     	;# 
   438  008E                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  010C                     	;# 
   453  010E                     	;# 
   454  0111                     	;# 
   455  0112                     	;# 
   456  0113                     	;# 
   457  0114                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011A                     	;# 
   464  011B                     	;# 
   465  011D                     	;# 
   466  011D                     	;# 
   467  018C                     	;# 
   468  018E                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0193                     	;# 
   475  0194                     	;# 
   476  0195                     	;# 
   477  0196                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020C                     	;# 
   490  020E                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0294                     	;# 
   511  0295                     	;# 
   512  0295                     	;# 
   513  0296                     	;# 
   514  0391                     	;# 
   515  0392                     	;# 
   516  0393                     	;# 
   517  039A                     	;# 
   518  039C                     	;# 
   519  039D                     	;# 
   520  039E                     	;# 
   521  039F                     	;# 
   522  0FE4                     	;# 
   523  0FE5                     	;# 
   524  0FE6                     	;# 
   525  0FE7                     	;# 
   526  0FE8                     	;# 
   527  0FE9                     	;# 
   528  0FEA                     	;# 
   529  0FEB                     	;# 
   530  0FED                     	;# 
   531  0FEE                     	;# 
   532  0FEF                     	;# 
   533                           
   534                           	psect	idataBANK0
   535  079A                     __pidataBANK0:	
   536                           
   537                           ;initializer for LCDWriteInt@F2516
   538  079A  34F0               	retlw	240
   539  079B  34F0               	retlw	240
   540  079C  34F0               	retlw	240
   541  079D  34F0               	retlw	240
   542  079E  34F0               	retlw	240
   543                           
   544                           ;initializer for _tuneUpTemp
   545  079F  341A               	retlw	26
   546  07A0  3400               	retlw	0
   547                           
   548                           ;initializer for _tuneUpTempDir
   549  07A1  3401               	retlw	1
   550                           
   551                           	psect	idataBANK1
   552  07A2                     __pidataBANK1:	
   553                           
   554                           ;initializer for ___cgram
   555  07A2  340C               	retlw	12
   556  07A3  3412               	retlw	18
   557  07A4  3412               	retlw	18
   558  07A5  340C               	retlw	12
   559  07A6  3400               	retlw	0
   560  07A7  3400               	retlw	0
   561  07A8  3400               	retlw	0
   562  07A9  3400               	retlw	0
   563  000B                     _INTCONbits	set	11
   564  000E                     _PORTC	set	14
   565  0060                     _RA0	set	96
   566  0061                     _RA1	set	97
   567  0064                     _RA4	set	100
   568  0065                     _RA5	set	101
   569  0070                     _RC0	set	112
   570  0071                     _RC1	set	113
   571  009D                     _ADCON0bits	set	157
   572  009E                     _ADCON1bits	set	158
   573  009C                     _ADRESH	set	156
   574  009B                     _ADRESL	set	155
   575  008C                     _TRISAbits	set	140
   576  008E                     _TRISC	set	142
   577  008E                     _TRISCbits	set	142
   578  018C                     _ANSELAbits	set	396
   579  0393                     _IOCAFbits	set	915
   580  0391                     _IOCAPbits	set	913
   581                           
   582                           	psect	stringtext
   583  074E                     __pstringtext:	
   584  074E                     STR_1:	
   585  074E  3443               	retlw	67	;'C'
   586  074F  3475               	retlw	117	;'u'
   587  0750  3472               	retlw	114	;'r'
   588  0751  343A               	retlw	58	;':'
   589  0752  3400               	retlw	0
   590  0753                     STR_4:	
   591  0753  344D               	retlw	77	;'M'
   592  0754  3461               	retlw	97	;'a'
   593  0755  3478               	retlw	120	;'x'
   594  0756  343A               	retlw	58	;':'
   595  0757  3400               	retlw	0
   596  0758                     STR_7:	
   597  0758  344F               	retlw	79	;'O'
   598  0759  344E               	retlw	78	;'N'
   599  075A  3420               	retlw	32	;' '
   600  075B  3400               	retlw	0
   601  075C                     STR_3:	
   602  075C  3457               	retlw	87	;'W'
   603  075D  3461               	retlw	97	;'a'
   604  075E  343A               	retlw	58	;':'
   605  075F  3400               	retlw	0
   606  0760                     STR_2:	
   607  0760  3425               	retlw	37	;'%'
   608  0761  3430               	retlw	48	;'0'
   609  0762  3443               	retlw	67	;'C'
   610  0763  3400               	retlw	0
   611  0764                     STR_6:	
   612  0764  344F               	retlw	79	;'O'
   613  0765  3446               	retlw	70	;'F'
   614  0766  3446               	retlw	70	;'F'
   615  0767  3400               	retlw	0
   616  0760                     
   617                           ; #config settings
   618  0000                     
   619                           	psect	cinit
   620  0048                     start_initialization:	
   621  0048                     __initialization:	
   622                           
   623                           ; Clear objects allocated to BANK0
   624  0048  01DF               	clrf	__pbssBANK0& (0+127)
   625  0049  01E0               	clrf	(__pbssBANK0+1)& (0+127)
   626                           
   627                           ; Initialize objects allocated to BANK0
   628  004A  309A               	movlw	low __pidataBANK0
   629  004B  0084               	movwf	4
   630  004C  3087               	movlw	(high __pidataBANK0)| (0+128)
   631  004D  0085               	movwf	5
   632  004E  3057               	movlw	low __pdataBANK0
   633  004F  0086               	movwf	6
   634  0050  3000               	movlw	high __pdataBANK0
   635  0051  0087               	movwf	7
   636  0052  3008               	movlw	8
   637  0053  27AA               	fcall	init_ram
   638                           
   639                           ; Initialize objects allocated to BANK1
   640  0054  30A2               	movlw	low __pidataBANK1
   641  0055  0084               	movwf	4
   642  0056  3087               	movlw	(high __pidataBANK1)| (0+128)
   643  0057  0085               	movwf	5
   644  0058  30A9               	movlw	low __pdataBANK1
   645  0059  0086               	movwf	6
   646  005A  3000               	movlw	high __pdataBANK1
   647  005B  0087               	movwf	7
   648  005C  3008               	movlw	8
   649  005D  27AA               	fcall	init_ram
   650  005E                     end_of_initialization:	
   651                           ;End of C runtime variable initialization code
   652                           
   653  005E                     __end_of__initialization:	
   654  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   655  005F  0020               	movlb	0
   656  0060  2861               	ljmp	_main	;jump to C main() function
   657                           
   658                           	psect	bssBANK0
   659  005F                     __pbssBANK0:	
   660  005F                     _curTemp:	
   661  005F                     	ds	2
   662                           
   663                           	psect	dataBANK0
   664  0057                     __pdataBANK0:	
   665  0057                     LCDWriteInt@F2516:	
   666  0057                     	ds	5
   667  005C                     _tuneUpTemp:	
   668  005C                     	ds	2
   669  005E                     _tuneUpTempDir:	
   670  005E                     	ds	1
   671                           
   672                           	psect	dataBANK1
   673  00A9                     __pdataBANK1:	
   674  00A9                     ___cgram:	
   675  00A9                     	ds	8
   676                           
   677                           	psect	inittext
   678  07AA                     init_ram:	
   679  07AA  00FE               	movwf	126
   680  07AB                     initloop:	
   681  07AB  0012               	moviw fsr0++
   682  07AC  001E               	movwi fsr1++
   683  07AD  0BFE               	decfsz	126,f
   684  07AE  2FAB               	goto	initloop
   685  07AF  3400               	retlw	0
   686                           
   687                           	psect	cstackBANK1
   688  00A0                     __pcstackBANK1:	
   689  00A0                     ___fttol@sign1:	
   690                           
   691                           ; 1 bytes @ 0x0
   692  00A0                     	ds	1
   693  00A1                     ___fttol@lval:	
   694                           
   695                           ; 4 bytes @ 0x1
   696  00A1                     	ds	4
   697  00A5                     ___fttol@exp1:	
   698                           
   699                           ; 1 bytes @ 0x5
   700  00A5                     	ds	1
   701  00A6                     ??_main:	
   702                           
   703                           ; 1 bytes @ 0x6
   704  00A6                     	ds	3
   705                           
   706                           	psect	cstackCOMMON
   707  0070                     __pcstackCOMMON:	
   708  0070                     ?_LCDBusyLoop:	
   709  0070                     ?_ADCInit:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_LCDInit:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_TriggerOutInit:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_TuneButtonInit:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_ISR:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_main:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?i1_LCDBusyLoop:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??i1_LCDBusyLoop:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?i1___awdiv:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?i1___awmod:	
   737                           ; 2 bytes @ 0x0
   738                           
   739  0070                     i1___awdiv@divisor:	
   740                           ; 2 bytes @ 0x0
   741                           
   742  0070                     i1___awmod@divisor:	
   743                           ; 2 bytes @ 0x0
   744                           
   745                           
   746                           ; 2 bytes @ 0x0
   747  0070                     	ds	2
   748  0072                     i1LCDBusyLoop@busy:	
   749  0072                     i1___awdiv@dividend:	
   750                           ; 1 bytes @ 0x2
   751                           
   752  0072                     i1___awmod@dividend:	
   753                           ; 2 bytes @ 0x2
   754                           
   755                           
   756                           ; 2 bytes @ 0x2
   757  0072                     	ds	1
   758  0073                     i1LCDBusyLoop@temp:	
   759                           
   760                           ; 1 bytes @ 0x3
   761  0073                     	ds	1
   762  0074                     ??i1___awdiv:	
   763  0074                     ??i1___awmod:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     i1LCDBusyLoop@status:	
   767                           ; 1 bytes @ 0x4
   768                           
   769                           
   770                           ; 1 bytes @ 0x4
   771  0074                     	ds	1
   772  0075                     ?i1_LCDByte:	
   773  0075                     i1LCDByte@isdata:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0075                     i1___awdiv@counter:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     i1___awmod@counter:	
   780                           ; 1 bytes @ 0x5
   781                           
   782                           
   783                           ; 1 bytes @ 0x5
   784  0075                     	ds	1
   785  0076                     ??i1_LCDByte:	
   786  0076                     i1___awdiv@sign:	
   787                           ; 1 bytes @ 0x6
   788                           
   789  0076                     i1___awmod@sign:	
   790                           ; 1 bytes @ 0x6
   791                           
   792                           
   793                           ; 1 bytes @ 0x6
   794  0076                     	ds	1
   795  0077                     i1___awdiv@quotient:	
   796                           
   797                           ; 2 bytes @ 0x7
   798  0077                     	ds	1
   799  0078                     i1LCDByte@hn:	
   800                           
   801                           ; 1 bytes @ 0x8
   802  0078                     	ds	1
   803  0079                     i1LCDByte@ln:	
   804                           
   805                           ; 1 bytes @ 0x9
   806  0079                     	ds	1
   807  007A                     i1LCDByte@c:	
   808                           
   809                           ; 1 bytes @ 0xA
   810  007A                     	ds	1
   811  007B                     i1LCDByte@temp:	
   812                           
   813                           ; 1 bytes @ 0xB
   814  007B                     	ds	1
   815  007C                     ??i1_LCDWriteInt:	
   816  007C                     ?i1_LCDGotoXY:	
   817                           ; 1 bytes @ 0xC
   818                           
   819  007C                     i1LCDGotoXY@y:	
   820                           ; 1 bytes @ 0xC
   821                           
   822                           
   823                           ; 1 bytes @ 0xC
   824  007C                     	ds	1
   825  007D                     ??i1_LCDGotoXY:	
   826                           
   827                           ; 1 bytes @ 0xD
   828  007D                     	ds	1
   829                           
   830                           	psect	cstackBANK0
   831  0020                     __pcstackBANK0:	
   832  0020                     ?i1_LCDWriteInt:	
   833  0020                     i1LCDGotoXY@x:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0020                     i1LCDWriteInt@val:	
   837                           ; 1 bytes @ 0x0
   838                           
   839                           
   840                           ; 2 bytes @ 0x0
   841  0020                     	ds	2
   842  0022                     i1LCDWriteInt@field_length:	
   843                           
   844                           ; 1 bytes @ 0x2
   845  0022                     	ds	1
   846  0023                     i1LCDWriteInt@str:	
   847                           
   848                           ; 5 bytes @ 0x3
   849  0023                     	ds	5
   850  0028                     i1LCDWriteInt@j:	
   851                           
   852                           ; 2 bytes @ 0x8
   853  0028                     	ds	2
   854  002A                     i1LCDWriteInt@i:	
   855                           
   856                           ; 2 bytes @ 0xA
   857  002A                     	ds	2
   858  002C                     ??_ISR:	
   859                           
   860                           ; 1 bytes @ 0xC
   861  002C                     	ds	3
   862  002F                     ??_LCDBusyLoop:	
   863  002F                     ??_ADCInit:	
   864                           ; 1 bytes @ 0xF
   865                           
   866  002F                     ??_TriggerOutInit:	
   867                           ; 1 bytes @ 0xF
   868                           
   869  002F                     ??_TuneButtonInit:	
   870                           ; 1 bytes @ 0xF
   871                           
   872  002F                     ?_ReadADC:	
   873                           ; 1 bytes @ 0xF
   874                           
   875  002F                     ?___awdiv:	
   876                           ; 2 bytes @ 0xF
   877                           
   878  002F                     ?___awmod:	
   879                           ; 2 bytes @ 0xF
   880                           
   881  002F                     ?___ftpack:	
   882                           ; 2 bytes @ 0xF
   883                           
   884  002F                     ___awdiv@divisor:	
   885                           ; 3 bytes @ 0xF
   886                           
   887  002F                     ___awmod@divisor:	
   888                           ; 2 bytes @ 0xF
   889                           
   890  002F                     ___ftpack@arg:	
   891                           ; 2 bytes @ 0xF
   892                           
   893                           
   894                           ; 3 bytes @ 0xF
   895  002F                     	ds	2
   896  0031                     ??_ReadADC:	
   897  0031                     LCDBusyLoop@busy:	
   898                           ; 1 bytes @ 0x11
   899                           
   900  0031                     ___awdiv@dividend:	
   901                           ; 1 bytes @ 0x11
   902                           
   903  0031                     ___awmod@dividend:	
   904                           ; 2 bytes @ 0x11
   905                           
   906                           
   907                           ; 2 bytes @ 0x11
   908  0031                     	ds	1
   909  0032                     LCDBusyLoop@temp:	
   910  0032                     ReadADC@ch:	
   911                           ; 1 bytes @ 0x12
   912                           
   913  0032                     ___ftpack@exp:	
   914                           ; 1 bytes @ 0x12
   915                           
   916                           
   917                           ; 1 bytes @ 0x12
   918  0032                     	ds	1
   919  0033                     ??___awdiv:	
   920  0033                     ??___awmod:	
   921                           ; 1 bytes @ 0x13
   922                           
   923  0033                     LCDBusyLoop@status:	
   924                           ; 1 bytes @ 0x13
   925                           
   926  0033                     ___ftpack@sign:	
   927                           ; 1 bytes @ 0x13
   928                           
   929                           
   930                           ; 1 bytes @ 0x13
   931  0033                     	ds	1
   932  0034                     ??___ftpack:	
   933  0034                     ?_LCDByte:	
   934                           ; 1 bytes @ 0x14
   935                           
   936  0034                     LCDByte@isdata:	
   937                           ; 1 bytes @ 0x14
   938                           
   939  0034                     ___awdiv@counter:	
   940                           ; 1 bytes @ 0x14
   941                           
   942  0034                     ___awmod@counter:	
   943                           ; 1 bytes @ 0x14
   944                           
   945                           
   946                           ; 1 bytes @ 0x14
   947  0034                     	ds	1
   948  0035                     ??_LCDByte:	
   949  0035                     ___awdiv@sign:	
   950                           ; 1 bytes @ 0x15
   951                           
   952  0035                     ___awmod@sign:	
   953                           ; 1 bytes @ 0x15
   954                           
   955                           
   956                           ; 1 bytes @ 0x15
   957  0035                     	ds	1
   958  0036                     ___awdiv@quotient:	
   959                           
   960                           ; 2 bytes @ 0x16
   961  0036                     	ds	1
   962  0037                     ?___lwtoft:	
   963  0037                     LCDByte@hn:	
   964                           ; 3 bytes @ 0x17
   965                           
   966  0037                     ___lwtoft@c:	
   967                           ; 1 bytes @ 0x17
   968                           
   969                           
   970                           ; 2 bytes @ 0x17
   971  0037                     	ds	1
   972  0038                     LCDByte@ln:	
   973                           
   974                           ; 1 bytes @ 0x18
   975  0038                     	ds	1
   976  0039                     LCDByte@c:	
   977                           
   978                           ; 1 bytes @ 0x19
   979  0039                     	ds	1
   980  003A                     ??___lwtoft:	
   981  003A                     LCDByte@temp:	
   982                           ; 1 bytes @ 0x1A
   983                           
   984                           
   985                           ; 1 bytes @ 0x1A
   986  003A                     	ds	1
   987  003B                     ??_LCDInit:	
   988  003B                     ?_LCDWriteString:	
   989                           ; 1 bytes @ 0x1B
   990                           
   991  003B                     ?_LCDWriteInt:	
   992                           ; 1 bytes @ 0x1B
   993                           
   994  003B                     ?_LCDGotoXY:	
   995                           ; 1 bytes @ 0x1B
   996                           
   997  003B                     ?___ftmul:	
   998                           ; 1 bytes @ 0x1B
   999                           
  1000  003B                     LCDGotoXY@y:	
  1001                           ; 3 bytes @ 0x1B
  1002                           
  1003  003B                     LCDWriteString@msg:	
  1004                           ; 1 bytes @ 0x1B
  1005                           
  1006  003B                     LCDWriteInt@val:	
  1007                           ; 2 bytes @ 0x1B
  1008                           
  1009  003B                     ___ftmul@f1:	
  1010                           ; 2 bytes @ 0x1B
  1011                           
  1012                           
  1013                           ; 3 bytes @ 0x1B
  1014  003B                     	ds	1
  1015  003C                     ??_LCDGotoXY:	
  1016                           
  1017                           ; 1 bytes @ 0x1C
  1018  003C                     	ds	1
  1019  003D                     ??_LCDWriteString:	
  1020  003D                     LCDInit@style:	
  1021                           ; 1 bytes @ 0x1D
  1022                           
  1023  003D                     LCDWriteInt@field_length:	
  1024                           ; 1 bytes @ 0x1D
  1025                           
  1026  003D                     LCDGotoXY@x:	
  1027                           ; 1 bytes @ 0x1D
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x1D
  1031  003D                     	ds	1
  1032  003E                     ??_LCDWriteInt:	
  1033  003E                     LCDInit@__i:	
  1034                           ; 1 bytes @ 0x1E
  1035                           
  1036  003E                     LCDWriteString@cc:	
  1037                           ; 1 bytes @ 0x1E
  1038                           
  1039  003E                     ___ftmul@f2:	
  1040                           ; 1 bytes @ 0x1E
  1041                           
  1042                           
  1043                           ; 3 bytes @ 0x1E
  1044  003E                     	ds	2
  1045  0040                     LCDWriteInt@str:	
  1046                           
  1047                           ; 5 bytes @ 0x20
  1048  0040                     	ds	1
  1049  0041                     ??___ftmul:	
  1050                           
  1051                           ; 1 bytes @ 0x21
  1052  0041                     	ds	4
  1053  0045                     ___ftmul@exp:	
  1054  0045                     LCDWriteInt@j:	
  1055                           ; 1 bytes @ 0x25
  1056                           
  1057                           
  1058                           ; 2 bytes @ 0x25
  1059  0045                     	ds	1
  1060  0046                     ___ftmul@f3_as_product:	
  1061                           
  1062                           ; 3 bytes @ 0x26
  1063  0046                     	ds	1
  1064  0047                     LCDWriteInt@i:	
  1065                           
  1066                           ; 2 bytes @ 0x27
  1067  0047                     	ds	2
  1068  0049                     ___ftmul@cntr:	
  1069                           
  1070                           ; 1 bytes @ 0x29
  1071  0049                     	ds	1
  1072  004A                     ___ftmul@sign:	
  1073                           
  1074                           ; 1 bytes @ 0x2A
  1075  004A                     	ds	1
  1076  004B                     ?___fttol:	
  1077  004B                     ___fttol@f1:	
  1078                           ; 4 bytes @ 0x2B
  1079                           
  1080                           
  1081                           ; 3 bytes @ 0x2B
  1082  004B                     	ds	4
  1083  004F                     ??___fttol:	
  1084                           
  1085                           ; 1 bytes @ 0x2F
  1086  004F                     	ds	4
  1087  0053                     ?_LM35ReadTemp:	
  1088                           
  1089                           ; 2 bytes @ 0x33
  1090  0053                     	ds	2
  1091  0055                     ??_LM35ReadTemp:	
  1092  0055                     LM35ReadTemp@adc_value:	
  1093                           ; 1 bytes @ 0x35
  1094                           
  1095                           
  1096                           ; 2 bytes @ 0x35
  1097  0055                     	ds	2
  1098                           
  1099                           	psect	maintext
  1100  0061                     __pmaintext:	
  1101 ;;
  1102 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1103 ;;
  1104 ;; *************** function _main *****************
  1105 ;; Defined at:
  1106 ;;		line 134 in file "do_am.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : B1F/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1
  1120 ;;      Params:         0       0       0
  1121 ;;      Locals:         0       0       0
  1122 ;;      Temps:          0       0       3
  1123 ;;      Totals:         0       0       3
  1124 ;;Total ram usage:        3 bytes
  1125 ;; Hardware stack levels required when called:    7
  1126 ;; This function calls:
  1127 ;;		_ADCInit
  1128 ;;		_LCDByte
  1129 ;;		_LCDGotoXY
  1130 ;;		_LCDInit
  1131 ;;		_LCDWriteInt
  1132 ;;		_LCDWriteString
  1133 ;;		_LM35ReadTemp
  1134 ;;		_TriggerOutInit
  1135 ;;		_TuneButtonInit
  1136 ;; This function is called by:
  1137 ;;		Startup code after reset
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _main
  1143  0061                     _main:	
  1144                           
  1145                           ;do_am.c: 137: LCDInit(0B00000000);
  1146                           
  1147                           ;incstack = 0
  1148                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1149  0061  3000               	movlw	0
  1150  0062  25A8               	fcall	_LCDInit
  1151                           
  1152                           ;do_am.c: 140: ADCInit();
  1153  0063  277C               	fcall	_ADCInit
  1154                           
  1155                           ;do_am.c: 143: TuneButtonInit();
  1156  0064  278E               	fcall	_TuneButtonInit
  1157                           
  1158                           ;do_am.c: 146: TriggerOutInit();
  1159  0065  27B0               	fcall	_TriggerOutInit
  1160                           
  1161                           ;do_am.c: 151: RA4 = 0;
  1162  0066  0020               	movlb	0	; select bank0
  1163  0067  120C               	bcf	12,4	;volatile
  1164                           
  1165                           ;do_am.c: 152: RA5 = 1;
  1166  0068  168C               	bsf	12,5	;volatile
  1167                           
  1168                           ;do_am.c: 155: (LCDByte(0b00000001,0));
  1169  0069  01B4               	clrf	LCDByte@isdata
  1170  006A  3001               	movlw	1
  1171  006B  255E               	fcall	_LCDByte
  1172                           
  1173                           ;do_am.c: 157: { LCDGotoXY(0,0); LCDWriteString("Cur:");};
  1174  006C  0020               	movlb	0	; select bank0
  1175  006D  01BB               	clrf	LCDGotoXY@y
  1176  006E  3000               	movlw	0
  1177  006F  2708               	fcall	_LCDGotoXY
  1178  0070  304E               	movlw	low (STR_1| (0+32768))
  1179  0071  0020               	movlb	0	; select bank0
  1180  0072  00BB               	movwf	LCDWriteString@msg
  1181  0073  3087               	movlw	high (STR_1| (0+32768))
  1182  0074  00BC               	movwf	LCDWriteString@msg+1
  1183  0075  267C               	fcall	_LCDWriteString
  1184                           
  1185                           ;do_am.c: 159: { LCDGotoXY(7,0); LCDWriteString("%0C");};
  1186  0076  0020               	movlb	0	; select bank0
  1187  0077  01BB               	clrf	LCDGotoXY@y
  1188  0078  3007               	movlw	7
  1189  0079  2708               	fcall	_LCDGotoXY
  1190  007A  3060               	movlw	low (STR_2| (0+32768))
  1191  007B  0020               	movlb	0	; select bank0
  1192  007C  00BB               	movwf	LCDWriteString@msg
  1193  007D  3087               	movlw	high (STR_2| (0+32768))
  1194  007E  00BC               	movwf	LCDWriteString@msg+1
  1195  007F  267C               	fcall	_LCDWriteString
  1196                           
  1197                           ;do_am.c: 161: { LCDGotoXY(10,0); LCDWriteString("Wa:");};
  1198  0080  0020               	movlb	0	; select bank0
  1199  0081  01BB               	clrf	LCDGotoXY@y
  1200  0082  300A               	movlw	10
  1201  0083  2708               	fcall	_LCDGotoXY
  1202  0084  305C               	movlw	low (STR_3| (0+32768))
  1203  0085  0020               	movlb	0	; select bank0
  1204  0086  00BB               	movwf	LCDWriteString@msg
  1205  0087  3087               	movlw	high (STR_3| (0+32768))
  1206  0088  00BC               	movwf	LCDWriteString@msg+1
  1207  0089  267C               	fcall	_LCDWriteString
  1208                           
  1209                           ;do_am.c: 163: { LCDGotoXY(0,1); LCDWriteString("Max:");};
  1210  008A  0020               	movlb	0	; select bank0
  1211  008B  01BB               	clrf	LCDGotoXY@y
  1212  008C  0ABB               	incf	LCDGotoXY@y,f
  1213  008D  3000               	movlw	0
  1214  008E  2708               	fcall	_LCDGotoXY
  1215  008F  3053               	movlw	low (STR_4| (0+32768))
  1216  0090  0020               	movlb	0	; select bank0
  1217  0091  00BB               	movwf	LCDWriteString@msg
  1218  0092  3087               	movlw	high (STR_4| (0+32768))
  1219  0093  00BC               	movwf	LCDWriteString@msg+1
  1220  0094  267C               	fcall	_LCDWriteString
  1221                           
  1222                           ;do_am.c: 165: { LCDGotoXY(7,1); LCDWriteString("%0C");};
  1223  0095  0020               	movlb	0	; select bank0
  1224  0096  01BB               	clrf	LCDGotoXY@y
  1225  0097  0ABB               	incf	LCDGotoXY@y,f
  1226  0098  3007               	movlw	7
  1227  0099  2708               	fcall	_LCDGotoXY
  1228  009A  3060               	movlw	low (STR_2| (0+32768))
  1229  009B  0020               	movlb	0	; select bank0
  1230  009C  00BB               	movwf	LCDWriteString@msg
  1231  009D  3087               	movlw	high (STR_2| (0+32768))
  1232  009E  00BC               	movwf	LCDWriteString@msg+1
  1233  009F  267C               	fcall	_LCDWriteString
  1234                           
  1235                           ;do_am.c: 167: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1236  00A0  0020               	movlb	0	; select bank0
  1237  00A1  01BB               	clrf	LCDGotoXY@y
  1238  00A2  300D               	movlw	13
  1239  00A3  2708               	fcall	_LCDGotoXY
  1240  00A4  3064               	movlw	low (STR_6| (0+32768))
  1241  00A5  0020               	movlb	0	; select bank0
  1242  00A6  00BB               	movwf	LCDWriteString@msg
  1243  00A7  3087               	movlw	high (STR_6| (0+32768))
  1244  00A8  00BC               	movwf	LCDWriteString@msg+1
  1245  00A9  267C               	fcall	_LCDWriteString
  1246  00AA                     l2182:	
  1247                           ;do_am.c: 169: while(1)
  1248                           
  1249                           
  1250                           ;do_am.c: 170: {
  1251                           ;do_am.c: 172: curTemp = LM35ReadTemp();
  1252  00AA  26B9               	fcall	_LM35ReadTemp
  1253  00AB  0020               	movlb	0	; select bank0
  1254  00AC  0854               	movf	?_LM35ReadTemp+1,w
  1255  00AD  00E0               	movwf	_curTemp+1
  1256  00AE  0853               	movf	?_LM35ReadTemp,w
  1257  00AF  00DF               	movwf	_curTemp
  1258                           
  1259                           ;do_am.c: 174: if((tuneUpTemp >= 5) && (curTemp >= tuneUpTemp))
  1260  00B0  085D               	movf	_tuneUpTemp+1,w
  1261  00B1  3A80               	xorlw	128
  1262  00B2  0021               	movlb	1	; select bank1
  1263  00B3  00A6               	movwf	??_main^(0+128)
  1264  00B4  3080               	movlw	128
  1265  00B5  0226               	subwf	??_main^(0+128),w
  1266  00B6  1D03               	skipz
  1267  00B7  28BB               	goto	u2455
  1268  00B8  3005               	movlw	5
  1269  00B9  0020               	movlb	0	; select bank0
  1270  00BA  025C               	subwf	_tuneUpTemp,w
  1271  00BB                     u2455:	
  1272  00BB  1C03               	skipc
  1273  00BC  28DC               	goto	l2194
  1274  00BD  0020               	movlb	0	; select bank0
  1275  00BE  0860               	movf	_curTemp+1,w
  1276  00BF  3A80               	xorlw	128
  1277  00C0  0021               	movlb	1	; select bank1
  1278  00C1  00A6               	movwf	??_main^(0+128)
  1279  00C2  0020               	movlb	0	; select bank0
  1280  00C3  085D               	movf	_tuneUpTemp+1,w
  1281  00C4  3A80               	xorlw	128
  1282  00C5  0021               	movlb	1	; select bank1
  1283  00C6  0226               	subwf	??_main^(0+128),w
  1284  00C7  1D03               	skipz
  1285  00C8  28CC               	goto	u2465
  1286  00C9  0020               	movlb	0	; select bank0
  1287  00CA  085C               	movf	_tuneUpTemp,w
  1288  00CB  025F               	subwf	_curTemp,w
  1289  00CC                     u2465:	
  1290  00CC  1C03               	skipc
  1291  00CD  28DC               	goto	l2194
  1292                           
  1293                           ;do_am.c: 175: {
  1294                           ;do_am.c: 176: { LCDGotoXY(13,0); LCDWriteString("ON ");};
  1295  00CE  0020               	movlb	0	; select bank0
  1296  00CF  01BB               	clrf	LCDGotoXY@y
  1297  00D0  300D               	movlw	13
  1298  00D1  2708               	fcall	_LCDGotoXY
  1299  00D2  3058               	movlw	low (STR_7| (0+32768))
  1300  00D3  0020               	movlb	0	; select bank0
  1301  00D4  00BB               	movwf	LCDWriteString@msg
  1302  00D5  3087               	movlw	high (STR_7| (0+32768))
  1303  00D6  00BC               	movwf	LCDWriteString@msg+1
  1304  00D7  267C               	fcall	_LCDWriteString
  1305                           
  1306                           ;do_am.c: 177: RA4 = 1;
  1307  00D8  0020               	movlb	0	; select bank0
  1308  00D9  160C               	bsf	12,4	;volatile
  1309                           
  1310                           ;do_am.c: 178: RA5 = 0;
  1311  00DA  128C               	bcf	12,5	;volatile
  1312                           
  1313                           ;do_am.c: 179: }
  1314  00DB  2903               	goto	l129
  1315  00DC                     l2194:	
  1316                           
  1317                           ;do_am.c: 180: else
  1318                           ;do_am.c: 181: {
  1319                           ;do_am.c: 182: if(curTemp <= tuneUpTemp - 5)
  1320  00DC  0020               	movlb	0	; select bank0
  1321  00DD  085C               	movf	_tuneUpTemp,w
  1322  00DE  3EFB               	addlw	251
  1323  00DF  0021               	movlb	1	; select bank1
  1324  00E0  00A6               	movwf	??_main^(0+128)
  1325  00E1  30FF               	movlw	255
  1326  00E2  0020               	movlb	0	; select bank0
  1327  00E3  3D5D               	addwfc	_tuneUpTemp+1,w
  1328  00E4  0021               	movlb	1	; select bank1
  1329  00E5  00A7               	movwf	(??_main+1)^(0+128)
  1330  00E6  0827               	movf	(??_main+1)^(0+128),w
  1331  00E7  3A80               	xorlw	128
  1332  00E8  00A8               	movwf	(??_main+2)^(0+128)
  1333  00E9  0020               	movlb	0	; select bank0
  1334  00EA  0860               	movf	_curTemp+1,w
  1335  00EB  3A80               	xorlw	128
  1336  00EC  0021               	movlb	1	; select bank1
  1337  00ED  0228               	subwf	(??_main+2)^(0+128),w
  1338  00EE  1D03               	skipz
  1339  00EF  28F4               	goto	u2475
  1340  00F0  0020               	movlb	0	; select bank0
  1341  00F1  085F               	movf	_curTemp,w
  1342  00F2  0021               	movlb	1	; select bank1
  1343  00F3  0226               	subwf	??_main^(0+128),w
  1344  00F4                     u2475:	
  1345  00F4  1C03               	skipc
  1346  00F5  2903               	goto	l129
  1347                           
  1348                           ;do_am.c: 183: {
  1349                           ;do_am.c: 184: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1350  00F6  0020               	movlb	0	; select bank0
  1351  00F7  01BB               	clrf	LCDGotoXY@y
  1352  00F8  300D               	movlw	13
  1353  00F9  2708               	fcall	_LCDGotoXY
  1354  00FA  3064               	movlw	low (STR_6| (0+32768))
  1355  00FB  0020               	movlb	0	; select bank0
  1356  00FC  00BB               	movwf	LCDWriteString@msg
  1357  00FD  3087               	movlw	high (STR_6| (0+32768))
  1358  00FE  00BC               	movwf	LCDWriteString@msg+1
  1359  00FF  267C               	fcall	_LCDWriteString
  1360                           
  1361                           ;do_am.c: 185: RA4 = 0;
  1362  0100  0020               	movlb	0	; select bank0
  1363  0101  120C               	bcf	12,4	;volatile
  1364                           
  1365                           ;do_am.c: 186: RA5 = 1;
  1366  0102  168C               	bsf	12,5	;volatile
  1367  0103                     l129:	
  1368                           
  1369                           ;do_am.c: 187: }
  1370                           ;do_am.c: 188: }
  1371                           ;do_am.c: 196: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1372  0103  0020               	movlb	0	; select bank0
  1373  0104  01BB               	clrf	LCDGotoXY@y
  1374  0105  3004               	movlw	4
  1375  0106  2708               	fcall	_LCDGotoXY
  1376  0107  0020               	movlb	0	; select bank0
  1377  0108  0860               	movf	_curTemp+1,w
  1378  0109  00BC               	movwf	LCDWriteInt@val+1
  1379  010A  085F               	movf	_curTemp,w
  1380  010B  00BB               	movwf	LCDWriteInt@val
  1381  010C  3003               	movlw	3
  1382  010D  0021               	movlb	1	; select bank1
  1383  010E  00A6               	movwf	??_main^(0+128)
  1384  010F  0826               	movf	??_main^(0+128),w
  1385  0110  0020               	movlb	0	; select bank0
  1386  0111  00BD               	movwf	LCDWriteInt@field_length
  1387  0112  2266               	fcall	_LCDWriteInt
  1388  0113  28AA               	goto	l2182
  1389  0114                     __end_of_main:	
  1390                           
  1391                           	psect	text1
  1392  078E                     __ptext1:	
  1393 ;; *************** function _TuneButtonInit *****************
  1394 ;; Defined at:
  1395 ;;		line 79 in file "do_am.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		None
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1
  1409 ;;      Params:         0       0       0
  1410 ;;      Locals:         0       0       0
  1411 ;;      Temps:          0       0       0
  1412 ;;      Totals:         0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    4
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _TuneButtonInit
  1425  078E                     _TuneButtonInit:	
  1426                           
  1427                           ;do_am.c: 82: INTCONbits.IOCIE = 1;
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _TuneButtonInit: []
  1431  078E  158B               	bsf	11,3	;volatile
  1432                           
  1433                           ;do_am.c: 84: (TRISAbits.TRISA1 = 1);
  1434  078F  0021               	movlb	1	; select bank1
  1435  0790  148C               	bsf	12,1	;volatile
  1436                           
  1437                           ;do_am.c: 85: ANSELAbits.ANSA1 = 0;
  1438  0791  0023               	movlb	3	; select bank3
  1439  0792  108C               	bcf	12,1	;volatile
  1440                           
  1441                           ;do_am.c: 88: IOCAPbits.IOCAP1 = 1;
  1442  0793  0027               	movlb	7	; select bank7
  1443  0794  1491               	bsf	17,1	;volatile
  1444                           
  1445                           ;do_am.c: 90: INTCONbits.IOCIF = 0;
  1446  0795  100B               	bcf	11,0	;volatile
  1447                           
  1448                           ;do_am.c: 91: IOCAFbits.IOCAF1 = 0;
  1449  0796  1093               	bcf	19,1	;volatile
  1450                           
  1451                           ;do_am.c: 94: INTCONbits.PEIE = 1;
  1452  0797  170B               	bsf	11,6	;volatile
  1453                           
  1454                           ;do_am.c: 96: INTCONbits.GIE = 1;
  1455  0798  178B               	bsf	11,7	;volatile
  1456  0799  0008               	return
  1457  079A                     __end_of_TuneButtonInit:	
  1458                           
  1459                           	psect	text2
  1460  07B0                     __ptext2:	
  1461 ;; *************** function _TriggerOutInit *****************
  1462 ;; Defined at:
  1463 ;;		line 64 in file "do_am.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		None
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1
  1477 ;;      Params:         0       0       0
  1478 ;;      Locals:         0       0       0
  1479 ;;      Temps:          0       0       0
  1480 ;;      Totals:         0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    4
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _TriggerOutInit
  1493  07B0                     _TriggerOutInit:	
  1494                           
  1495                           ;do_am.c: 67: (TRISAbits.TRISA4 = 0);
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in _TriggerOutInit: []
  1499  07B0  0021               	movlb	1	; select bank1
  1500  07B1  120C               	bcf	12,4	;volatile
  1501                           
  1502                           ;do_am.c: 68: (TRISAbits.TRISA5 = 0);
  1503  07B2  128C               	bcf	12,5	;volatile
  1504                           
  1505                           ;do_am.c: 70: ANSELAbits.ANSA4 = 0;
  1506  07B3  0023               	movlb	3	; select bank3
  1507  07B4  120C               	bcf	12,4	;volatile
  1508  07B5  0008               	return
  1509  07B6                     __end_of_TriggerOutInit:	
  1510                           
  1511                           	psect	text3
  1512  06B9                     __ptext3:	
  1513 ;; *************** function _LM35ReadTemp *****************
  1514 ;; Defined at:
  1515 ;;		line 8 in file "lm35_pic16.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;		None
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  adc_value       2   53[BANK0 ] unsigned int 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2   51[BANK0 ] int 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, pclath, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1
  1529 ;;      Params:         0       2       0
  1530 ;;      Locals:         0       2       0
  1531 ;;      Temps:          0       0       0
  1532 ;;      Totals:         0       4       0
  1533 ;;Total ram usage:        4 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    6
  1536 ;; This function calls:
  1537 ;;		_ReadADC
  1538 ;;		___ftmul
  1539 ;;		___fttol
  1540 ;;		___lwtoft
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _LM35ReadTemp
  1548  06B9                     _LM35ReadTemp:	
  1549                           
  1550                           ;lm35_pic16.c: 14: uint16_t adc_value=ReadADC(2);
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _LM35ReadTemp: [wreg+status,2+status,0+pclath+cstack]
  1554  06B9  3002               	movlw	2
  1555  06BA  26E1               	fcall	_ReadADC
  1556  06BB  0020               	movlb	0	; select bank0
  1557  06BC  0830               	movf	?_ReadADC+1,w
  1558  06BD  00D6               	movwf	LM35ReadTemp@adc_value+1
  1559  06BE  082F               	movf	?_ReadADC,w
  1560  06BF  00D5               	movwf	LM35ReadTemp@adc_value
  1561                           
  1562                           ;lm35_pic16.c: 28: return (int)(adc_value*0.4887);
  1563  06C0  0856               	movf	LM35ReadTemp@adc_value+1,w
  1564  06C1  00B8               	movwf	___lwtoft@c+1
  1565  06C2  0855               	movf	LM35ReadTemp@adc_value,w
  1566  06C3  00B7               	movwf	___lwtoft@c
  1567  06C4  2768               	fcall	___lwtoft
  1568  06C5  0020               	movlb	0	; select bank0
  1569  06C6  0837               	movf	?___lwtoft,w
  1570  06C7  00BE               	movwf	___ftmul@f2
  1571  06C8  0838               	movf	?___lwtoft+1,w
  1572  06C9  00BF               	movwf	___ftmul@f2+1
  1573  06CA  0839               	movf	?___lwtoft+2,w
  1574  06CB  00C0               	movwf	___ftmul@f2+2
  1575  06CC  3037               	movlw	55
  1576  06CD  00BB               	movwf	___ftmul@f1
  1577  06CE  30FA               	movlw	250
  1578  06CF  00BC               	movwf	___ftmul@f1+1
  1579  06D0  303E               	movlw	62
  1580  06D1  00BD               	movwf	___ftmul@f1+2
  1581  06D2  2114               	fcall	___ftmul
  1582  06D3  0020               	movlb	0	; select bank0
  1583  06D4  083B               	movf	?___ftmul,w
  1584  06D5  00CB               	movwf	___fttol@f1
  1585  06D6  083C               	movf	?___ftmul+1,w
  1586  06D7  00CC               	movwf	___fttol@f1+1
  1587  06D8  083D               	movf	?___ftmul+2,w
  1588  06D9  00CD               	movwf	___fttol@f1+2
  1589  06DA  21C7               	fcall	___fttol
  1590  06DB  0020               	movlb	0	; select bank0
  1591  06DC  084C               	movf	?___fttol+1,w
  1592  06DD  00D4               	movwf	?_LM35ReadTemp+1
  1593  06DE  084B               	movf	?___fttol,w
  1594  06DF  00D3               	movwf	?_LM35ReadTemp
  1595  06E0  0008               	return
  1596  06E1                     __end_of_LM35ReadTemp:	
  1597                           
  1598                           	psect	text4
  1599  0768                     __ptext4:	
  1600 ;; *************** function ___lwtoft *****************
  1601 ;; Defined at:
  1602 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  c               2   23[BANK0 ] unsigned int 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  3   23[BANK0 ] float 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1
  1616 ;;      Params:         0       3       0
  1617 ;;      Locals:         0       0       0
  1618 ;;      Temps:          0       1       0
  1619 ;;      Totals:         0       4       0
  1620 ;;Total ram usage:        4 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    5
  1623 ;; This function calls:
  1624 ;;		___ftpack
  1625 ;; This function is called by:
  1626 ;;		_LM35ReadTemp
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function ___lwtoft
  1632  0768                     ___lwtoft:	
  1633                           
  1634                           ;incstack = 0
  1635                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1636  0768  0020               	movlb	0	; select bank0
  1637  0769  0837               	movf	___lwtoft@c,w
  1638  076A  00AF               	movwf	___ftpack@arg
  1639  076B  0838               	movf	___lwtoft@c+1,w
  1640  076C  00B0               	movwf	___ftpack@arg+1
  1641  076D  01B1               	clrf	___ftpack@arg+2
  1642  076E  308E               	movlw	142
  1643  076F  00BA               	movwf	??___lwtoft
  1644  0770  083A               	movf	??___lwtoft,w
  1645  0771  00B2               	movwf	___ftpack@exp
  1646  0772  01B3               	clrf	___ftpack@sign
  1647  0773  235E               	fcall	___ftpack
  1648  0774  0020               	movlb	0	; select bank0
  1649  0775  082F               	movf	?___ftpack,w
  1650  0776  00B7               	movwf	?___lwtoft
  1651  0777  0830               	movf	?___ftpack+1,w
  1652  0778  00B8               	movwf	?___lwtoft+1
  1653  0779  0831               	movf	?___ftpack+2,w
  1654  077A  00B9               	movwf	?___lwtoft+2
  1655  077B  0008               	return
  1656  077C                     __end_of___lwtoft:	
  1657                           
  1658                           	psect	text5
  1659  01C7                     __ptext5:	
  1660 ;; *************** function ___fttol *****************
  1661 ;; Defined at:
  1662 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  f1              3   43[BANK0 ] float 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  lval            4    1[BANK1 ] unsigned long 
  1667 ;;  exp1            1    5[BANK1 ] unsigned char 
  1668 ;;  sign1           1    0[BANK1 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  4   43[BANK0 ] long 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1
  1678 ;;      Params:         0       4       0
  1679 ;;      Locals:         0       0       6
  1680 ;;      Temps:          0       4       0
  1681 ;;      Totals:         0       8       6
  1682 ;;Total ram usage:       14 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    4
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_LM35ReadTemp
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function ___fttol
  1694  01C7                     ___fttol:	
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1698  01C7  0020               	movlb	0	; select bank0
  1699  01C8  084B               	movf	___fttol@f1,w
  1700  01C9  00CF               	movwf	??___fttol
  1701  01CA  084C               	movf	___fttol@f1+1,w
  1702  01CB  00D0               	movwf	??___fttol+1
  1703  01CC  084D               	movf	___fttol@f1+2,w
  1704  01CD  00D1               	movwf	??___fttol+2
  1705  01CE  1003               	clrc
  1706  01CF  0D50               	rlf	??___fttol+1,w
  1707  01D0  0D51               	rlf	??___fttol+2,w
  1708  01D1  00D2               	movwf	??___fttol+3
  1709  01D2  0852               	movf	??___fttol+3,w
  1710  01D3  0021               	movlb	1	; select bank1
  1711  01D4  00A5               	movwf	___fttol@exp1^(0+128)
  1712  01D5  0825               	movf	___fttol@exp1^(0+128),w
  1713  01D6  1D03               	btfss	3,2
  1714  01D7  29E2               	goto	l2104
  1715  01D8  3000               	movlw	0
  1716  01D9  0020               	movlb	0	; select bank0
  1717  01DA  00CE               	movwf	?___fttol+3
  1718  01DB  3000               	movlw	0
  1719  01DC  00CD               	movwf	?___fttol+2
  1720  01DD  3000               	movlw	0
  1721  01DE  00CC               	movwf	?___fttol+1
  1722  01DF  3000               	movlw	0
  1723  01E0  00CB               	movwf	?___fttol
  1724  01E1  0008               	return
  1725  01E2                     l2104:	
  1726  01E2  0020               	movlb	0	; select bank0
  1727  01E3  084B               	movf	___fttol@f1,w
  1728  01E4  00CF               	movwf	??___fttol
  1729  01E5  084C               	movf	___fttol@f1+1,w
  1730  01E6  00D0               	movwf	??___fttol+1
  1731  01E7  084D               	movf	___fttol@f1+2,w
  1732  01E8  00D1               	movwf	??___fttol+2
  1733  01E9  3017               	movlw	23
  1734  01EA                     u2365:	
  1735  01EA  36D1               	lsrf	??___fttol+2,f
  1736  01EB  0CD0               	rrf	??___fttol+1,f
  1737  01EC  0CCF               	rrf	??___fttol,f
  1738  01ED  0B89               	decfsz	9,f
  1739  01EE  29EA               	goto	u2365
  1740  01EF  084F               	movf	??___fttol,w
  1741  01F0  00D2               	movwf	??___fttol+3
  1742  01F1  0852               	movf	??___fttol+3,w
  1743  01F2  0021               	movlb	1	; select bank1
  1744  01F3  00A0               	movwf	___fttol@sign1^(0+128)
  1745  01F4  0020               	movlb	0	; select bank0
  1746  01F5  17CC               	bsf	___fttol@f1+1,7
  1747  01F6  30FF               	movlw	255
  1748  01F7  05CB               	andwf	___fttol@f1,f
  1749  01F8  30FF               	movlw	255
  1750  01F9  05CC               	andwf	___fttol@f1+1,f
  1751  01FA  3000               	movlw	0
  1752  01FB  05CD               	andwf	___fttol@f1+2,f
  1753  01FC  084B               	movf	___fttol@f1,w
  1754  01FD  0021               	movlb	1	; select bank1
  1755  01FE  00A1               	movwf	___fttol@lval^(0+128)
  1756  01FF  0020               	movlb	0	; select bank0
  1757  0200  084C               	movf	___fttol@f1+1,w
  1758  0201  0021               	movlb	1	; select bank1
  1759  0202  00A2               	movwf	(___fttol@lval^(0+128)+1)
  1760  0203  0020               	movlb	0	; select bank0
  1761  0204  084D               	movf	___fttol@f1+2,w
  1762  0205  0021               	movlb	1	; select bank1
  1763  0206  00A3               	movwf	(___fttol@lval^(0+128)+2)
  1764  0207  01A4               	clrf	(___fttol@lval^(0+128)+3)
  1765  0208  308E               	movlw	142
  1766  0209  02A5               	subwf	___fttol@exp1^(0+128),f
  1767  020A  1FA5               	btfss	___fttol@exp1^(0+128),7
  1768  020B  2A2C               	goto	l2124
  1769  020C  0825               	movf	___fttol@exp1^(0+128),w
  1770  020D  3A80               	xorlw	128
  1771  020E  3E8F               	addlw	143
  1772  020F  1803               	skipnc
  1773  0210  2A1B               	goto	l2122
  1774  0211  3000               	movlw	0
  1775  0212  0020               	movlb	0	; select bank0
  1776  0213  00CE               	movwf	?___fttol+3
  1777  0214  3000               	movlw	0
  1778  0215  00CD               	movwf	?___fttol+2
  1779  0216  3000               	movlw	0
  1780  0217  00CC               	movwf	?___fttol+1
  1781  0218  3000               	movlw	0
  1782  0219  00CB               	movwf	?___fttol
  1783  021A  0008               	return
  1784  021B                     l2122:	
  1785  021B  3001               	movlw	1
  1786  021C                     u2395:	
  1787  021C  0021               	movlb	1	; select bank1
  1788  021D  36A4               	lsrf	(___fttol@lval+3)^(0+128),f
  1789  021E  0CA3               	rrf	(___fttol@lval+2)^(0+128),f
  1790  021F  0CA2               	rrf	(___fttol@lval+1)^(0+128),f
  1791  0220  0CA1               	rrf	___fttol@lval^(0+128),f
  1792  0221  0B89               	decfsz	9,f
  1793  0222  2A1C               	goto	u2395
  1794  0223  3001               	movlw	1
  1795  0224  0020               	movlb	0	; select bank0
  1796  0225  00CF               	movwf	??___fttol
  1797  0226  084F               	movf	??___fttol,w
  1798  0227  0021               	movlb	1	; select bank1
  1799  0228  07A5               	addwf	___fttol@exp1^(0+128),f
  1800  0229  1903               	btfsc	3,2
  1801  022A  2A48               	goto	l2132
  1802  022B  2A1B               	goto	l2122
  1803  022C                     l2124:	
  1804  022C  3018               	movlw	24
  1805  022D  0225               	subwf	___fttol@exp1^(0+128),w
  1806  022E  1C03               	skipc
  1807  022F  2A44               	goto	l498
  1808  0230  3000               	movlw	0
  1809  0231  0020               	movlb	0	; select bank0
  1810  0232  00CE               	movwf	?___fttol+3
  1811  0233  3000               	movlw	0
  1812  0234  00CD               	movwf	?___fttol+2
  1813  0235  3000               	movlw	0
  1814  0236  00CC               	movwf	?___fttol+1
  1815  0237  3000               	movlw	0
  1816  0238  00CB               	movwf	?___fttol
  1817  0239  0008               	return
  1818  023A                     l2130:	
  1819  023A  3001               	movlw	1
  1820  023B                     u2425:	
  1821  023B  0021               	movlb	1	; select bank1
  1822  023C  35A1               	lslf	___fttol@lval^(0+128),f
  1823  023D  0DA2               	rlf	(___fttol@lval+1)^(0+128),f
  1824  023E  0DA3               	rlf	(___fttol@lval+2)^(0+128),f
  1825  023F  0DA4               	rlf	(___fttol@lval+3)^(0+128),f
  1826  0240  0B89               	decfsz	9,f
  1827  0241  2A3B               	goto	u2425
  1828  0242  3001               	movlw	1
  1829  0243  02A5               	subwf	___fttol@exp1^(0+128),f
  1830  0244                     l498:	
  1831  0244  0021               	movlb	1	; select bank1
  1832  0245  0825               	movf	___fttol@exp1^(0+128),w
  1833  0246  1D03               	btfss	3,2
  1834  0247  2A3A               	goto	l2130
  1835  0248                     l2132:	
  1836  0248  0820               	movf	___fttol@sign1^(0+128),w
  1837  0249  1903               	btfsc	3,2
  1838  024A  2A56               	goto	l2136
  1839  024B  09A1               	comf	___fttol@lval^(0+128),f
  1840  024C  09A2               	comf	(___fttol@lval+1)^(0+128),f
  1841  024D  09A3               	comf	(___fttol@lval+2)^(0+128),f
  1842  024E  09A4               	comf	(___fttol@lval+3)^(0+128),f
  1843  024F  0AA1               	incf	___fttol@lval^(0+128),f
  1844  0250  1903               	skipnz
  1845  0251  0AA2               	incf	(___fttol@lval+1)^(0+128),f
  1846  0252  1903               	skipnz
  1847  0253  0AA3               	incf	(___fttol@lval+2)^(0+128),f
  1848  0254  1903               	skipnz
  1849  0255  0AA4               	incf	(___fttol@lval+3)^(0+128),f
  1850  0256                     l2136:	
  1851  0256  0824               	movf	(___fttol@lval+3)^(0+128),w
  1852  0257  0020               	movlb	0	; select bank0
  1853  0258  00CE               	movwf	?___fttol+3
  1854  0259  0021               	movlb	1	; select bank1
  1855  025A  0823               	movf	(___fttol@lval+2)^(0+128),w
  1856  025B  0020               	movlb	0	; select bank0
  1857  025C  00CD               	movwf	?___fttol+2
  1858  025D  0021               	movlb	1	; select bank1
  1859  025E  0822               	movf	(___fttol@lval+1)^(0+128),w
  1860  025F  0020               	movlb	0	; select bank0
  1861  0260  00CC               	movwf	?___fttol+1
  1862  0261  0021               	movlb	1	; select bank1
  1863  0262  0821               	movf	___fttol@lval^(0+128),w
  1864  0263  0020               	movlb	0	; select bank0
  1865  0264  00CB               	movwf	?___fttol
  1866  0265  0008               	return
  1867  0266                     __end_of___fttol:	
  1868                           
  1869                           	psect	text6
  1870  0114                     __ptext6:	
  1871 ;; *************** function ___ftmul *****************
  1872 ;; Defined at:
  1873 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  f1              3   27[BANK0 ] float 
  1876 ;;  f2              3   30[BANK0 ] float 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  f3_as_produc    3   38[BANK0 ] unsigned um
  1879 ;;  sign            1   42[BANK0 ] unsigned char 
  1880 ;;  cntr            1   41[BANK0 ] unsigned char 
  1881 ;;  exp             1   37[BANK0 ] unsigned char 
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  3   27[BANK0 ] float 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0, pclath, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1
  1891 ;;      Params:         0       6       0
  1892 ;;      Locals:         0       6       0
  1893 ;;      Temps:          0       4       0
  1894 ;;      Totals:         0      16       0
  1895 ;;Total ram usage:       16 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    5
  1898 ;; This function calls:
  1899 ;;		___ftpack
  1900 ;; This function is called by:
  1901 ;;		_LM35ReadTemp
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function ___ftmul
  1907  0114                     ___ftmul:	
  1908                           
  1909                           ;incstack = 0
  1910                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1911  0114  0020               	movlb	0	; select bank0
  1912  0115  083B               	movf	___ftmul@f1,w
  1913  0116  00C1               	movwf	??___ftmul
  1914  0117  083C               	movf	___ftmul@f1+1,w
  1915  0118  00C2               	movwf	??___ftmul+1
  1916  0119  083D               	movf	___ftmul@f1+2,w
  1917  011A  00C3               	movwf	??___ftmul+2
  1918  011B  1003               	clrc
  1919  011C  0D42               	rlf	??___ftmul+1,w
  1920  011D  0D43               	rlf	??___ftmul+2,w
  1921  011E  00C4               	movwf	??___ftmul+3
  1922  011F  0844               	movf	??___ftmul+3,w
  1923  0120  00C5               	movwf	___ftmul@exp
  1924  0121  0845               	movf	___ftmul@exp,w
  1925  0122  1D03               	btfss	3,2
  1926  0123  292B               	goto	l1620
  1927  0124  3000               	movlw	0
  1928  0125  00BB               	movwf	?___ftmul
  1929  0126  3000               	movlw	0
  1930  0127  00BC               	movwf	?___ftmul+1
  1931  0128  3000               	movlw	0
  1932  0129  00BD               	movwf	?___ftmul+2
  1933  012A  0008               	return
  1934  012B                     l1620:	
  1935  012B  083E               	movf	___ftmul@f2,w
  1936  012C  00C1               	movwf	??___ftmul
  1937  012D  083F               	movf	___ftmul@f2+1,w
  1938  012E  00C2               	movwf	??___ftmul+1
  1939  012F  0840               	movf	___ftmul@f2+2,w
  1940  0130  00C3               	movwf	??___ftmul+2
  1941  0131  1003               	clrc
  1942  0132  0D42               	rlf	??___ftmul+1,w
  1943  0133  0D43               	rlf	??___ftmul+2,w
  1944  0134  00C4               	movwf	??___ftmul+3
  1945  0135  0844               	movf	??___ftmul+3,w
  1946  0136  00CA               	movwf	___ftmul@sign
  1947  0137  084A               	movf	___ftmul@sign,w
  1948  0138  1D03               	btfss	3,2
  1949  0139  2941               	goto	l1626
  1950  013A  3000               	movlw	0
  1951  013B  00BB               	movwf	?___ftmul
  1952  013C  3000               	movlw	0
  1953  013D  00BC               	movwf	?___ftmul+1
  1954  013E  3000               	movlw	0
  1955  013F  00BD               	movwf	?___ftmul+2
  1956  0140  0008               	return
  1957  0141                     l1626:	
  1958  0141  084A               	movf	___ftmul@sign,w
  1959  0142  3E7B               	addlw	123
  1960  0143  00C1               	movwf	??___ftmul
  1961  0144  0841               	movf	??___ftmul,w
  1962  0145  07C5               	addwf	___ftmul@exp,f
  1963  0146  083B               	movf	___ftmul@f1,w
  1964  0147  00C1               	movwf	??___ftmul
  1965  0148  083C               	movf	___ftmul@f1+1,w
  1966  0149  00C2               	movwf	??___ftmul+1
  1967  014A  083D               	movf	___ftmul@f1+2,w
  1968  014B  00C3               	movwf	??___ftmul+2
  1969  014C  3010               	movlw	16
  1970  014D                     u1655:	
  1971  014D  36C3               	lsrf	??___ftmul+2,f
  1972  014E  0CC2               	rrf	??___ftmul+1,f
  1973  014F  0CC1               	rrf	??___ftmul,f
  1974  0150  0B89               	decfsz	9,f
  1975  0151  294D               	goto	u1655
  1976  0152  0841               	movf	??___ftmul,w
  1977  0153  00C4               	movwf	??___ftmul+3
  1978  0154  0844               	movf	??___ftmul+3,w
  1979  0155  00CA               	movwf	___ftmul@sign
  1980  0156  083E               	movf	___ftmul@f2,w
  1981  0157  00C1               	movwf	??___ftmul
  1982  0158  083F               	movf	___ftmul@f2+1,w
  1983  0159  00C2               	movwf	??___ftmul+1
  1984  015A  0840               	movf	___ftmul@f2+2,w
  1985  015B  00C3               	movwf	??___ftmul+2
  1986  015C  3010               	movlw	16
  1987  015D                     u1665:	
  1988  015D  36C3               	lsrf	??___ftmul+2,f
  1989  015E  0CC2               	rrf	??___ftmul+1,f
  1990  015F  0CC1               	rrf	??___ftmul,f
  1991  0160  0B89               	decfsz	9,f
  1992  0161  295D               	goto	u1665
  1993  0162  0841               	movf	??___ftmul,w
  1994  0163  00C4               	movwf	??___ftmul+3
  1995  0164  0844               	movf	??___ftmul+3,w
  1996  0165  06CA               	xorwf	___ftmul@sign,f
  1997  0166  3080               	movlw	128
  1998  0167  00C1               	movwf	??___ftmul
  1999  0168  0841               	movf	??___ftmul,w
  2000  0169  05CA               	andwf	___ftmul@sign,f
  2001  016A  17BC               	bsf	___ftmul@f1+1,7
  2002  016B  17BF               	bsf	___ftmul@f2+1,7
  2003  016C  30FF               	movlw	255
  2004  016D  05BE               	andwf	___ftmul@f2,f
  2005  016E  30FF               	movlw	255
  2006  016F  05BF               	andwf	___ftmul@f2+1,f
  2007  0170  3000               	movlw	0
  2008  0171  05C0               	andwf	___ftmul@f2+2,f
  2009  0172  3000               	movlw	0
  2010  0173  00C6               	movwf	___ftmul@f3_as_product
  2011  0174  3000               	movlw	0
  2012  0175  00C7               	movwf	___ftmul@f3_as_product+1
  2013  0176  3000               	movlw	0
  2014  0177  00C8               	movwf	___ftmul@f3_as_product+2
  2015  0178  3007               	movlw	7
  2016  0179  00C1               	movwf	??___ftmul
  2017  017A  0841               	movf	??___ftmul,w
  2018  017B  00C9               	movwf	___ftmul@cntr
  2019  017C                     l1638:	
  2020  017C  1C3B               	btfss	___ftmul@f1,0
  2021  017D  2984               	goto	l1642
  2022  017E  083E               	movf	___ftmul@f2,w
  2023  017F  07C6               	addwf	___ftmul@f3_as_product,f
  2024  0180  083F               	movf	___ftmul@f2+1,w
  2025  0181  3DC7               	addwfc	___ftmul@f3_as_product+1,f
  2026  0182  0840               	movf	___ftmul@f2+2,w
  2027  0183  3DC8               	addwfc	___ftmul@f3_as_product+2,f
  2028  0184                     l1642:	
  2029  0184  3001               	movlw	1
  2030  0185                     u1685:	
  2031  0185  36BD               	lsrf	___ftmul@f1+2,f
  2032  0186  0CBC               	rrf	___ftmul@f1+1,f
  2033  0187  0CBB               	rrf	___ftmul@f1,f
  2034  0188  0B89               	decfsz	9,f
  2035  0189  2985               	goto	u1685
  2036  018A  3001               	movlw	1
  2037  018B                     u1695:	
  2038  018B  35BE               	lslf	___ftmul@f2,f
  2039  018C  0DBF               	rlf	___ftmul@f2+1,f
  2040  018D  0DC0               	rlf	___ftmul@f2+2,f
  2041  018E  0B89               	decfsz	9,f
  2042  018F  298B               	goto	u1695
  2043  0190  3001               	movlw	1
  2044  0191  02C9               	subwf	___ftmul@cntr,f
  2045  0192  1D03               	btfss	3,2
  2046  0193  297C               	goto	l1638
  2047  0194  3009               	movlw	9
  2048  0195  00C1               	movwf	??___ftmul
  2049  0196  0841               	movf	??___ftmul,w
  2050  0197  00C9               	movwf	___ftmul@cntr
  2051  0198                     l1650:	
  2052  0198  1C3B               	btfss	___ftmul@f1,0
  2053  0199  29A0               	goto	l1654
  2054  019A  083E               	movf	___ftmul@f2,w
  2055  019B  07C6               	addwf	___ftmul@f3_as_product,f
  2056  019C  083F               	movf	___ftmul@f2+1,w
  2057  019D  3DC7               	addwfc	___ftmul@f3_as_product+1,f
  2058  019E  0840               	movf	___ftmul@f2+2,w
  2059  019F  3DC8               	addwfc	___ftmul@f3_as_product+2,f
  2060  01A0                     l1654:	
  2061  01A0  3001               	movlw	1
  2062  01A1                     u1725:	
  2063  01A1  36BD               	lsrf	___ftmul@f1+2,f
  2064  01A2  0CBC               	rrf	___ftmul@f1+1,f
  2065  01A3  0CBB               	rrf	___ftmul@f1,f
  2066  01A4  0B89               	decfsz	9,f
  2067  01A5  29A1               	goto	u1725
  2068  01A6  3001               	movlw	1
  2069  01A7                     u1735:	
  2070  01A7  36C8               	lsrf	___ftmul@f3_as_product+2,f
  2071  01A8  0CC7               	rrf	___ftmul@f3_as_product+1,f
  2072  01A9  0CC6               	rrf	___ftmul@f3_as_product,f
  2073  01AA  0B89               	decfsz	9,f
  2074  01AB  29A7               	goto	u1735
  2075  01AC  3001               	movlw	1
  2076  01AD  02C9               	subwf	___ftmul@cntr,f
  2077  01AE  1D03               	btfss	3,2
  2078  01AF  2998               	goto	l1650
  2079  01B0  0846               	movf	___ftmul@f3_as_product,w
  2080  01B1  00AF               	movwf	___ftpack@arg
  2081  01B2  0847               	movf	___ftmul@f3_as_product+1,w
  2082  01B3  00B0               	movwf	___ftpack@arg+1
  2083  01B4  0848               	movf	___ftmul@f3_as_product+2,w
  2084  01B5  00B1               	movwf	___ftpack@arg+2
  2085  01B6  0845               	movf	___ftmul@exp,w
  2086  01B7  00C1               	movwf	??___ftmul
  2087  01B8  0841               	movf	??___ftmul,w
  2088  01B9  00B2               	movwf	___ftpack@exp
  2089  01BA  084A               	movf	___ftmul@sign,w
  2090  01BB  00C2               	movwf	??___ftmul+1
  2091  01BC  0842               	movf	??___ftmul+1,w
  2092  01BD  00B3               	movwf	___ftpack@sign
  2093  01BE  235E               	fcall	___ftpack
  2094  01BF  0020               	movlb	0	; select bank0
  2095  01C0  082F               	movf	?___ftpack,w
  2096  01C1  00BB               	movwf	?___ftmul
  2097  01C2  0830               	movf	?___ftpack+1,w
  2098  01C3  00BC               	movwf	?___ftmul+1
  2099  01C4  0831               	movf	?___ftpack+2,w
  2100  01C5  00BD               	movwf	?___ftmul+2
  2101  01C6  0008               	return
  2102  01C7                     __end_of___ftmul:	
  2103                           
  2104                           	psect	text7
  2105  035E                     __ptext7:	
  2106 ;; *************** function ___ftpack *****************
  2107 ;; Defined at:
  2108 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  arg             3   15[BANK0 ] unsigned um
  2111 ;;  exp             1   18[BANK0 ] unsigned char 
  2112 ;;  sign            1   19[BANK0 ] unsigned char 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  3   15[BANK0 ] float 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1
  2124 ;;      Params:         0       5       0
  2125 ;;      Locals:         0       0       0
  2126 ;;      Temps:          0       3       0
  2127 ;;      Totals:         0       8       0
  2128 ;;Total ram usage:        8 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    4
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		___ftmul
  2135 ;;		___lwtoft
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           
  2140                           ;psect for function ___ftpack
  2141  035E                     ___ftpack:	
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2145  035E  0020               	movlb	0	; select bank0
  2146  035F  0832               	movf	___ftpack@exp,w
  2147  0360  1903               	btfsc	3,2
  2148  0361  2B67               	goto	l1412
  2149  0362  0831               	movf	___ftpack@arg+2,w
  2150  0363  0430               	iorwf	___ftpack@arg+1,w
  2151  0364  042F               	iorwf	___ftpack@arg,w
  2152  0365  1D03               	skipz
  2153  0366  2B78               	goto	l1418
  2154  0367                     l1412:	
  2155  0367  3000               	movlw	0
  2156  0368  00AF               	movwf	?___ftpack
  2157  0369  3000               	movlw	0
  2158  036A  00B0               	movwf	?___ftpack+1
  2159  036B  3000               	movlw	0
  2160  036C  00B1               	movwf	?___ftpack+2
  2161  036D  0008               	return
  2162  036E                     l1416:	
  2163  036E  3001               	movlw	1
  2164  036F  00B4               	movwf	??___ftpack
  2165  0370  0834               	movf	??___ftpack,w
  2166  0371  07B2               	addwf	___ftpack@exp,f
  2167  0372  3001               	movlw	1
  2168  0373                     u1245:	
  2169  0373  36B1               	lsrf	___ftpack@arg+2,f
  2170  0374  0CB0               	rrf	___ftpack@arg+1,f
  2171  0375  0CAF               	rrf	___ftpack@arg,f
  2172  0376  0B89               	decfsz	9,f
  2173  0377  2B73               	goto	u1245
  2174  0378                     l1418:	
  2175  0378  30FE               	movlw	254
  2176  0379  0531               	andwf	___ftpack@arg+2,w
  2177  037A  1903               	btfsc	3,2
  2178  037B  2B91               	goto	l407
  2179  037C  2B6E               	goto	l1416
  2180  037D                     l1420:	
  2181  037D  3001               	movlw	1
  2182  037E  00B4               	movwf	??___ftpack
  2183  037F  0834               	movf	??___ftpack,w
  2184  0380  07B2               	addwf	___ftpack@exp,f
  2185  0381  3001               	movlw	1
  2186  0382  07AF               	addwf	___ftpack@arg,f
  2187  0383  3000               	movlw	0
  2188  0384  1803               	skipnc
  2189  0385  3001               	movlw	1
  2190  0386  07B0               	addwf	___ftpack@arg+1,f
  2191  0387  3000               	movlw	0
  2192  0388  1803               	skipnc
  2193  0389  3001               	movlw	1
  2194  038A  07B1               	addwf	___ftpack@arg+2,f
  2195  038B  3001               	movlw	1
  2196  038C                     u1265:	
  2197  038C  36B1               	lsrf	___ftpack@arg+2,f
  2198  038D  0CB0               	rrf	___ftpack@arg+1,f
  2199  038E  0CAF               	rrf	___ftpack@arg,f
  2200  038F  0B89               	decfsz	9,f
  2201  0390  2B8C               	goto	u1265
  2202  0391                     l407:	
  2203  0391  30FF               	movlw	255
  2204  0392  0531               	andwf	___ftpack@arg+2,w
  2205  0393  1903               	btfsc	3,2
  2206  0394  2B9E               	goto	l1428
  2207  0395  2B7D               	goto	l1420
  2208  0396                     l1426:	
  2209  0396  3001               	movlw	1
  2210  0397  02B2               	subwf	___ftpack@exp,f
  2211  0398  3001               	movlw	1
  2212  0399                     u1285:	
  2213  0399  35AF               	lslf	___ftpack@arg,f
  2214  039A  0DB0               	rlf	___ftpack@arg+1,f
  2215  039B  0DB1               	rlf	___ftpack@arg+2,f
  2216  039C  0B89               	decfsz	9,f
  2217  039D  2B99               	goto	u1285
  2218  039E                     l1428:	
  2219  039E  1BB0               	btfsc	___ftpack@arg+1,7
  2220  039F  2BA4               	goto	l414
  2221  03A0  3002               	movlw	2
  2222  03A1  0232               	subwf	___ftpack@exp,w
  2223  03A2  1803               	skipnc
  2224  03A3  2B96               	goto	l1426
  2225  03A4                     l414:	
  2226  03A4  1832               	btfsc	___ftpack@exp,0
  2227  03A5  2BAC               	goto	l415
  2228  03A6  30FF               	movlw	255
  2229  03A7  05AF               	andwf	___ftpack@arg,f
  2230  03A8  307F               	movlw	127
  2231  03A9  05B0               	andwf	___ftpack@arg+1,f
  2232  03AA  30FF               	movlw	255
  2233  03AB  05B1               	andwf	___ftpack@arg+2,f
  2234  03AC                     l415:	
  2235  03AC  1003               	clrc
  2236  03AD  0CB2               	rrf	___ftpack@exp,f
  2237  03AE  0832               	movf	___ftpack@exp,w
  2238  03AF  00B4               	movwf	??___ftpack
  2239  03B0  01B5               	clrf	??___ftpack+1
  2240  03B1  01B6               	clrf	??___ftpack+2
  2241  03B2  3010               	movlw	16
  2242  03B3                     u1325:	
  2243  03B3  35B4               	lslf	??___ftpack,f
  2244  03B4  0DB5               	rlf	??___ftpack+1,f
  2245  03B5  0DB6               	rlf	??___ftpack+2,f
  2246  03B6  0B89               	decfsz	9,f
  2247  03B7  2BB3               	goto	u1325
  2248  03B8  0834               	movf	??___ftpack,w
  2249  03B9  04AF               	iorwf	___ftpack@arg,f
  2250  03BA  0835               	movf	??___ftpack+1,w
  2251  03BB  04B0               	iorwf	___ftpack@arg+1,f
  2252  03BC  0836               	movf	??___ftpack+2,w
  2253  03BD  04B1               	iorwf	___ftpack@arg+2,f
  2254  03BE  0833               	movf	___ftpack@sign,w
  2255  03BF  1903               	btfsc	3,2
  2256  03C0  0008               	return
  2257  03C1  17B1               	bsf	___ftpack@arg+2,7
  2258  03C2  0008               	return
  2259  03C3                     __end_of___ftpack:	
  2260                           
  2261                           	psect	text8
  2262  06E1                     __ptext8:	
  2263 ;; *************** function _ReadADC *****************
  2264 ;; Defined at:
  2265 ;;		line 40 in file "adc_pic16.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  ch              1    wreg     unsigned char 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  ch              1   18[BANK0 ] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  2   15[BANK0 ] unsigned int 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1
  2279 ;;      Params:         0       2       0
  2280 ;;      Locals:         0       1       0
  2281 ;;      Temps:          0       1       0
  2282 ;;      Totals:         0       4       0
  2283 ;;Total ram usage:        4 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    4
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_LM35ReadTemp
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _ReadADC
  2295  06E1                     _ReadADC:	
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  2299                           ;ReadADC@ch stored from wreg
  2300  06E1  0020               	movlb	0	; select bank0
  2301  06E2  00B2               	movwf	ReadADC@ch
  2302                           
  2303                           ;adc_pic16.c: 42: if(ch>7) return 0;
  2304  06E3  3008               	movlw	8
  2305  06E4  0232               	subwf	ReadADC@ch,w
  2306  06E5  1C03               	skipc
  2307  06E6  2EEA               	goto	l1522
  2308  06E7  01AF               	clrf	?_ReadADC
  2309  06E8  01B0               	clrf	?_ReadADC+1
  2310  06E9  0008               	return
  2311  06EA                     l1522:	
  2312                           
  2313                           ;adc_pic16.c: 44: ADCON0bits.CHS=ch;
  2314  06EA  0832               	movf	ReadADC@ch,w
  2315  06EB  00B1               	movwf	??_ReadADC
  2316  06EC  0DB1               	rlf	??_ReadADC,f
  2317  06ED  0DB1               	rlf	??_ReadADC,f
  2318  06EE  0021               	movlb	1	; select bank1
  2319  06EF  081D               	movf	29,w	;volatile
  2320  06F0  0020               	movlb	0	; select bank0
  2321  06F1  0631               	xorwf	??_ReadADC,w
  2322  06F2  3983               	andlw	-125
  2323  06F3  0631               	xorwf	??_ReadADC,w
  2324  06F4  0021               	movlb	1	; select bank1
  2325  06F5  009D               	movwf	29	;volatile
  2326                           
  2327                           ;adc_pic16.c: 47: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2328  06F6  30A6               	movlw	166
  2329  06F7  0020               	movlb	0	; select bank0
  2330  06F8  00B1               	movwf	??_ReadADC
  2331  06F9                     u2487:	
  2332  06F9  0BB1               	decfsz	??_ReadADC,f
  2333  06FA  2EF9               	goto	u2487
  2334  06FB  0000               	nop
  2335                           
  2336                           ;adc_pic16.c: 50: ADCON0bits.GO=1;
  2337  06FC  0021               	movlb	1	; select bank1
  2338  06FD  149D               	bsf	29,1	;volatile
  2339  06FE                     l155:	
  2340                           ;adc_pic16.c: 53: while(ADCON0bits.GO);
  2341                           
  2342  06FE  189D               	btfsc	29,1	;volatile
  2343  06FF  2EFE               	goto	l155
  2344                           
  2345                           ;adc_pic16.c: 55: return ((ADRESH<<8)|ADRESL);
  2346  0700  081C               	movf	28,w	;volatile
  2347  0701  0020               	movlb	0	; select bank0
  2348  0702  00B0               	movwf	?_ReadADC+1
  2349  0703  0021               	movlb	1	; select bank1
  2350  0704  081B               	movf	27,w	;volatile
  2351  0705  0020               	movlb	0	; select bank0
  2352  0706  00AF               	movwf	?_ReadADC
  2353  0707  0008               	return
  2354  0708                     __end_of_ReadADC:	
  2355                           
  2356                           	psect	text9
  2357  067C                     __ptext9:	
  2358 ;; *************** function _LCDWriteString *****************
  2359 ;; Defined at:
  2360 ;;		line 279 in file "lcd_hd44780_pic16.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  msg             2   27[BANK0 ] PTR const unsigned char 
  2363 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  2364 ;;		 -> STR_4(5), STR_3(4), STR_2(4), STR_1(5), 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  cc              1   30[BANK0 ] char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1
  2376 ;;      Params:         0       2       0
  2377 ;;      Locals:         0       1       0
  2378 ;;      Temps:          0       1       0
  2379 ;;      Totals:         0       4       0
  2380 ;;Total ram usage:        4 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    6
  2383 ;; This function calls:
  2384 ;;		_LCDByte
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _LCDWriteString
  2392  067C                     _LCDWriteString:	
  2393  067C                     l1894:	
  2394                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  2395                           
  2396                           ;incstack = 0
  2397                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2398                           
  2399  067C  0020               	movlb	0	; select bank0
  2400  067D  083B               	movf	LCDWriteString@msg,w
  2401  067E  0084               	movwf	4
  2402  067F  083C               	movf	LCDWriteString@msg+1,w
  2403  0680  0085               	movwf	5
  2404  0681  0012               	moviw fsr0++
  2405  0682  1903               	btfsc	3,2
  2406  0683  0008               	return
  2407                           
  2408                           ;lcd_hd44780_pic16.c: 282: {
  2409                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  2410  0684  0020               	movlb	0	; select bank0
  2411  0685  083B               	movf	LCDWriteString@msg,w
  2412  0686  0084               	movwf	4
  2413  0687  083C               	movf	LCDWriteString@msg+1,w
  2414  0688  0085               	movwf	5
  2415  0689  0012               	moviw fsr0++
  2416  068A  3A25               	xorlw	37
  2417  068B  1D03               	btfss	3,2
  2418  068C  2EAA               	goto	l1890
  2419                           
  2420                           ;lcd_hd44780_pic16.c: 285: {
  2421                           ;lcd_hd44780_pic16.c: 286: msg++;
  2422  068D  3001               	movlw	1
  2423  068E  07BB               	addwf	LCDWriteString@msg,f
  2424  068F  3000               	movlw	0
  2425  0690  3DBC               	addwfc	LCDWriteString@msg+1,f
  2426                           
  2427                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  2428  0691  083B               	movf	LCDWriteString@msg,w
  2429  0692  0084               	movwf	4
  2430  0693  083C               	movf	LCDWriteString@msg+1,w
  2431  0694  0085               	movwf	5
  2432  0695  0800               	movf	0,w	;code access
  2433  0696  3ED0               	addlw	-48
  2434  0697  00BD               	movwf	??_LCDWriteString
  2435  0698  083D               	movf	??_LCDWriteString,w
  2436  0699  00BE               	movwf	LCDWriteString@cc
  2437                           
  2438                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  2439  069A  1BBE               	btfsc	LCDWriteString@cc,7
  2440  069B  2EA5               	goto	l1886
  2441  069C  083E               	movf	LCDWriteString@cc,w
  2442  069D  3A80               	xorlw	128
  2443  069E  3E78               	addlw	-136
  2444  069F  1803               	skipnc
  2445  06A0  2EA5               	goto	l1886
  2446                           
  2447                           ;lcd_hd44780_pic16.c: 290: {
  2448                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  2449  06A1  01B4               	clrf	LCDByte@isdata
  2450  06A2  0AB4               	incf	LCDByte@isdata,f
  2451  06A3  083E               	movf	LCDWriteString@cc,w
  2452  06A4  2EB2               	goto	L1
  2453  06A5                     l1886:	
  2454                           ;lcd_hd44780_pic16.c: 292: }
  2455                           
  2456                           
  2457                           ;lcd_hd44780_pic16.c: 293: else
  2458                           ;lcd_hd44780_pic16.c: 294: {
  2459                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  2460  06A5  0020               	movlb	0	; select bank0
  2461  06A6  01B4               	clrf	LCDByte@isdata
  2462  06A7  0AB4               	incf	LCDByte@isdata,f
  2463  06A8  3025               	movlw	37
  2464  06A9  255E               	fcall	_LCDByte
  2465  06AA                     l1890:	
  2466                           ;lcd_hd44780_pic16.c: 297: }
  2467                           ;lcd_hd44780_pic16.c: 298: }
  2468                           
  2469                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  2470                           
  2471                           
  2472                           ;lcd_hd44780_pic16.c: 299: else
  2473                           ;lcd_hd44780_pic16.c: 300: {
  2474                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  2475  06AA  0020               	movlb	0	; select bank0
  2476  06AB  01B4               	clrf	LCDByte@isdata
  2477  06AC  0AB4               	incf	LCDByte@isdata,f
  2478  06AD  083B               	movf	LCDWriteString@msg,w
  2479  06AE  0084               	movwf	4
  2480  06AF  083C               	movf	LCDWriteString@msg+1,w
  2481  06B0  0085               	movwf	5
  2482  06B1  0800               	movf	0,w	;code access
  2483  06B2                     L1:	
  2484  06B2  255E               	fcall	_LCDByte
  2485                           
  2486                           ;lcd_hd44780_pic16.c: 302: }
  2487                           ;lcd_hd44780_pic16.c: 303: msg++;
  2488  06B3  3001               	movlw	1
  2489  06B4  0020               	movlb	0	; select bank0
  2490  06B5  07BB               	addwf	LCDWriteString@msg,f
  2491  06B6  3000               	movlw	0
  2492  06B7  3DBC               	addwfc	LCDWriteString@msg+1,f
  2493  06B8  2E7C               	goto	l1894
  2494  06B9                     __end_of_LCDWriteString:	
  2495                           
  2496                           	psect	text10
  2497  0266                     __ptext10:	
  2498 ;; *************** function _LCDWriteInt *****************
  2499 ;; Defined at:
  2500 ;;		line 317 in file "lcd_hd44780_pic16.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  val             2   27[BANK0 ] int 
  2503 ;;  field_length    1   29[BANK0 ] char 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  str             5   32[BANK0 ] unsigned char [5]
  2506 ;;  i               2   39[BANK0 ] int 
  2507 ;;  j               2   37[BANK0 ] int 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1
  2517 ;;      Params:         0       3       0
  2518 ;;      Locals:         0       9       0
  2519 ;;      Temps:          0       2       0
  2520 ;;      Totals:         0      14       0
  2521 ;;Total ram usage:       14 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    6
  2524 ;; This function calls:
  2525 ;;		_LCDByte
  2526 ;;		___awdiv
  2527 ;;		___awmod
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function _LCDWriteInt
  2535  0266                     _LCDWriteInt:	
  2536                           
  2537                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  2538                           
  2539                           ;incstack = 0
  2540                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2541  0266  3057               	movlw	low LCDWriteInt@F2516
  2542  0267  0086               	movwf	6
  2543  0268  3000               	movlw	high LCDWriteInt@F2516
  2544  0269  0087               	movwf	7
  2545  026A  3040               	movlw	low LCDWriteInt@str
  2546  026B  0084               	movwf	4
  2547  026C  3000               	movlw	high LCDWriteInt@str
  2548  026D  0085               	movwf	5
  2549  026E  3005               	movlw	5
  2550  026F  0020               	movlb	0	; select bank0
  2551  0270  00BE               	movwf	??_LCDWriteInt
  2552  0271                     u2140:	
  2553  0271  0016               	moviw fsr1++
  2554  0272  001A               	movwi fsr0++
  2555  0273  0BBE               	decfsz	??_LCDWriteInt,f
  2556  0274  2A71               	goto	u2140
  2557                           
  2558                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  2559  0275  3004               	movlw	4
  2560  0276  00C7               	movwf	LCDWriteInt@i
  2561  0277  3000               	movlw	0
  2562  0278  00C8               	movwf	LCDWriteInt@i+1
  2563  0279  01C5               	clrf	LCDWriteInt@j
  2564  027A  01C6               	clrf	LCDWriteInt@j+1
  2565                           
  2566                           ;lcd_hd44780_pic16.c: 323: if(val<0)
  2567  027B  1FBC               	btfss	LCDWriteInt@val+1,7
  2568  027C  2A87               	goto	l1914
  2569                           
  2570                           ;lcd_hd44780_pic16.c: 324: {
  2571                           ;lcd_hd44780_pic16.c: 325: (LCDByte('-',1));
  2572  027D  01B4               	clrf	LCDByte@isdata
  2573  027E  0AB4               	incf	LCDByte@isdata,f
  2574  027F  302D               	movlw	45
  2575  0280  255E               	fcall	_LCDByte
  2576                           
  2577                           ;lcd_hd44780_pic16.c: 326: val=val*-1;
  2578  0281  0020               	movlb	0	; select bank0
  2579  0282  09BB               	comf	LCDWriteInt@val,f
  2580  0283  09BC               	comf	LCDWriteInt@val+1,f
  2581  0284  0ABB               	incf	LCDWriteInt@val,f
  2582  0285  1903               	skipnz
  2583  0286  0ABC               	incf	LCDWriteInt@val+1,f
  2584  0287                     l1914:	
  2585                           ;lcd_hd44780_pic16.c: 327: }
  2586                           ;lcd_hd44780_pic16.c: 329: while(val)
  2587                           
  2588  0287  083B               	movf	LCDWriteInt@val,w
  2589  0288  043C               	iorwf	LCDWriteInt@val+1,w
  2590  0289  1903               	btfsc	3,2
  2591  028A  2AB0               	goto	l1916
  2592                           
  2593                           ;lcd_hd44780_pic16.c: 330: {
  2594                           ;lcd_hd44780_pic16.c: 331: str[i]=val%10;
  2595  028B  300A               	movlw	10
  2596  028C  00AF               	movwf	___awmod@divisor
  2597  028D  3000               	movlw	0
  2598  028E  00B0               	movwf	___awmod@divisor+1
  2599  028F  083C               	movf	LCDWriteInt@val+1,w
  2600  0290  00B2               	movwf	___awmod@dividend+1
  2601  0291  083B               	movf	LCDWriteInt@val,w
  2602  0292  00B1               	movwf	___awmod@dividend
  2603  0293  25F1               	fcall	___awmod
  2604  0294  0020               	movlb	0	; select bank0
  2605  0295  082F               	movf	?___awmod,w
  2606  0296  00BE               	movwf	??_LCDWriteInt
  2607  0297  0847               	movf	LCDWriteInt@i,w
  2608  0298  3E40               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2609  0299  0086               	movwf	6
  2610  029A  0187               	clrf	7
  2611  029B  083E               	movf	??_LCDWriteInt,w
  2612  029C  0081               	movwf	1
  2613                           
  2614                           ;lcd_hd44780_pic16.c: 332: val=val/10;
  2615  029D  300A               	movlw	10
  2616  029E  00AF               	movwf	___awdiv@divisor
  2617  029F  3000               	movlw	0
  2618  02A0  00B0               	movwf	___awdiv@divisor+1
  2619  02A1  083C               	movf	LCDWriteInt@val+1,w
  2620  02A2  00B2               	movwf	___awdiv@dividend+1
  2621  02A3  083B               	movf	LCDWriteInt@val,w
  2622  02A4  00B1               	movwf	___awdiv@dividend
  2623  02A5  2470               	fcall	___awdiv
  2624  02A6  0020               	movlb	0	; select bank0
  2625  02A7  0830               	movf	?___awdiv+1,w
  2626  02A8  00BC               	movwf	LCDWriteInt@val+1
  2627  02A9  082F               	movf	?___awdiv,w
  2628  02AA  00BB               	movwf	LCDWriteInt@val
  2629                           
  2630                           ;lcd_hd44780_pic16.c: 333: i--;
  2631  02AB  30FF               	movlw	255
  2632  02AC  07C7               	addwf	LCDWriteInt@i,f
  2633  02AD  30FF               	movlw	255
  2634  02AE  3DC8               	addwfc	LCDWriteInt@i+1,f
  2635  02AF  2A87               	goto	l1914
  2636  02B0                     l1916:	
  2637                           
  2638                           ;lcd_hd44780_pic16.c: 334: }
  2639                           ;lcd_hd44780_pic16.c: 335: if(field_length==-1)
  2640  02B0  0A3D               	incf	LCDWriteInt@field_length,w
  2641  02B1  1903               	btfsc	3,2
  2642  02B2  2AC3               	goto	l1924
  2643                           
  2644                           ;lcd_hd44780_pic16.c: 337: else
  2645                           ;lcd_hd44780_pic16.c: 338: j=5-field_length;
  2646                           
  2647                           ;lcd_hd44780_pic16.c: 336: while(str[j]==-16) j++;
  2648  02B3  083D               	movf	LCDWriteInt@field_length,w
  2649  02B4  00BE               	movwf	??_LCDWriteInt
  2650  02B5  01BF               	clrf	??_LCDWriteInt+1
  2651  02B6  1BBE               	btfsc	??_LCDWriteInt,7
  2652  02B7  03BF               	decf	??_LCDWriteInt+1,f
  2653  02B8  09BE               	comf	??_LCDWriteInt,f
  2654  02B9  09BF               	comf	??_LCDWriteInt+1,f
  2655  02BA  0ABE               	incf	??_LCDWriteInt,f
  2656  02BB  1903               	skipnz
  2657  02BC  0ABF               	incf	??_LCDWriteInt+1,f
  2658  02BD  083E               	movf	??_LCDWriteInt,w
  2659  02BE  3E05               	addlw	5
  2660  02BF  00C5               	movwf	LCDWriteInt@j
  2661  02C0  3000               	movlw	0
  2662  02C1  3D3F               	addwfc	??_LCDWriteInt+1,w
  2663  02C2  00C6               	movwf	LCDWriteInt@j+1
  2664  02C3                     l1924:	
  2665                           
  2666                           ;lcd_hd44780_pic16.c: 341: for(i=j;i<5;i++)
  2667  02C3  0846               	movf	LCDWriteInt@j+1,w
  2668  02C4  00C8               	movwf	LCDWriteInt@i+1
  2669  02C5  0845               	movf	LCDWriteInt@j,w
  2670  02C6  00C7               	movwf	LCDWriteInt@i
  2671  02C7                     L2:	
  2672  02C7  0848               	movf	LCDWriteInt@i+1,w
  2673  02C8  3A80               	xorlw	128
  2674  02C9  00BE               	movwf	??_LCDWriteInt
  2675  02CA  3080               	movlw	128
  2676  02CB  023E               	subwf	??_LCDWriteInt,w
  2677  02CC  1D03               	skipz
  2678  02CD  2AD0               	goto	u2185
  2679  02CE  3005               	movlw	5
  2680  02CF  0247               	subwf	LCDWriteInt@i,w
  2681  02D0                     u2185:	
  2682  02D0  1803               	btfsc	3,0
  2683  02D1  0008               	return
  2684                           
  2685                           ;lcd_hd44780_pic16.c: 342: {
  2686                           ;lcd_hd44780_pic16.c: 343: (LCDByte(48+str[i],1));
  2687  02D2  0020               	movlb	0	; select bank0
  2688  02D3  01B4               	clrf	LCDByte@isdata
  2689  02D4  0AB4               	incf	LCDByte@isdata,f
  2690  02D5  0847               	movf	LCDWriteInt@i,w
  2691  02D6  3E40               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2692  02D7  0086               	movwf	6
  2693  02D8  0187               	clrf	7
  2694  02D9  0801               	movf	1,w
  2695  02DA  3E30               	addlw	48
  2696  02DB  255E               	fcall	_LCDByte
  2697  02DC  3001               	movlw	1
  2698  02DD  0020               	movlb	0	; select bank0
  2699  02DE  07C7               	addwf	LCDWriteInt@i,f
  2700  02DF  3000               	movlw	0
  2701  02E0  3DC8               	addwfc	LCDWriteInt@i+1,f
  2702  02E1  2AC7               	goto	L2
  2703  02E2                     __end_of_LCDWriteInt:	
  2704                           
  2705                           	psect	text11
  2706  05F1                     __ptext11:	
  2707 ;; *************** function ___awmod *****************
  2708 ;; Defined at:
  2709 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  divisor         2   15[BANK0 ] int 
  2712 ;;  dividend        2   17[BANK0 ] int 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  sign            1   21[BANK0 ] unsigned char 
  2715 ;;  counter         1   20[BANK0 ] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  2   15[BANK0 ] int 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1
  2725 ;;      Params:         0       4       0
  2726 ;;      Locals:         0       2       0
  2727 ;;      Temps:          0       1       0
  2728 ;;      Totals:         0       7       0
  2729 ;;Total ram usage:        7 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    4
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_LCDWriteInt
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function ___awmod
  2741  05F1                     ___awmod:	
  2742                           
  2743                           ;incstack = 0
  2744                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2745  05F1  0020               	movlb	0	; select bank0
  2746  05F2  01B5               	clrf	___awmod@sign
  2747  05F3  1FB2               	btfss	___awmod@dividend+1,7
  2748  05F4  2DFC               	goto	l1584
  2749  05F5  09B1               	comf	___awmod@dividend,f
  2750  05F6  09B2               	comf	___awmod@dividend+1,f
  2751  05F7  0AB1               	incf	___awmod@dividend,f
  2752  05F8  1903               	skipnz
  2753  05F9  0AB2               	incf	___awmod@dividend+1,f
  2754  05FA  01B5               	clrf	___awmod@sign
  2755  05FB  0AB5               	incf	___awmod@sign,f
  2756  05FC                     l1584:	
  2757  05FC  1FB0               	btfss	___awmod@divisor+1,7
  2758  05FD  2E03               	goto	l1588
  2759  05FE  09AF               	comf	___awmod@divisor,f
  2760  05FF  09B0               	comf	___awmod@divisor+1,f
  2761  0600  0AAF               	incf	___awmod@divisor,f
  2762  0601  1903               	skipnz
  2763  0602  0AB0               	incf	___awmod@divisor+1,f
  2764  0603                     l1588:	
  2765  0603  082F               	movf	___awmod@divisor,w
  2766  0604  0430               	iorwf	___awmod@divisor+1,w
  2767  0605  1903               	btfsc	3,2
  2768  0606  2E2A               	goto	l1606
  2769  0607  01B4               	clrf	___awmod@counter
  2770  0608  0AB4               	incf	___awmod@counter,f
  2771  0609                     l1596:	
  2772  0609  1BB0               	btfsc	___awmod@divisor+1,7
  2773  060A  2E15               	goto	l1598
  2774  060B  3001               	movlw	1
  2775  060C                     u1575:	
  2776  060C  35AF               	lslf	___awmod@divisor,f
  2777  060D  0DB0               	rlf	___awmod@divisor+1,f
  2778  060E  0B89               	decfsz	9,f
  2779  060F  2E0C               	goto	u1575
  2780  0610  3001               	movlw	1
  2781  0611  00B3               	movwf	??___awmod
  2782  0612  0833               	movf	??___awmod,w
  2783  0613  07B4               	addwf	___awmod@counter,f
  2784  0614  2E09               	goto	l1596
  2785  0615                     l1598:	
  2786  0615  0830               	movf	___awmod@divisor+1,w
  2787  0616  0232               	subwf	___awmod@dividend+1,w
  2788  0617  1D03               	skipz
  2789  0618  2E1B               	goto	u1595
  2790  0619  082F               	movf	___awmod@divisor,w
  2791  061A  0231               	subwf	___awmod@dividend,w
  2792  061B                     u1595:	
  2793  061B  1C03               	skipc
  2794  061C  2E21               	goto	l1602
  2795  061D  082F               	movf	___awmod@divisor,w
  2796  061E  02B1               	subwf	___awmod@dividend,f
  2797  061F  0830               	movf	___awmod@divisor+1,w
  2798  0620  3BB2               	subwfb	___awmod@dividend+1,f
  2799  0621                     l1602:	
  2800  0621  3001               	movlw	1
  2801  0622                     u1605:	
  2802  0622  36B0               	lsrf	___awmod@divisor+1,f
  2803  0623  0CAF               	rrf	___awmod@divisor,f
  2804  0624  0B89               	decfsz	9,f
  2805  0625  2E22               	goto	u1605
  2806  0626  3001               	movlw	1
  2807  0627  02B4               	subwf	___awmod@counter,f
  2808  0628  1D03               	btfss	3,2
  2809  0629  2E15               	goto	l1598
  2810  062A                     l1606:	
  2811  062A  0835               	movf	___awmod@sign,w
  2812  062B  1903               	btfsc	3,2
  2813  062C  2E32               	goto	l1610
  2814  062D  09B1               	comf	___awmod@dividend,f
  2815  062E  09B2               	comf	___awmod@dividend+1,f
  2816  062F  0AB1               	incf	___awmod@dividend,f
  2817  0630  1903               	skipnz
  2818  0631  0AB2               	incf	___awmod@dividend+1,f
  2819  0632                     l1610:	
  2820  0632  0832               	movf	___awmod@dividend+1,w
  2821  0633  00B0               	movwf	?___awmod+1
  2822  0634  0831               	movf	___awmod@dividend,w
  2823  0635  00AF               	movwf	?___awmod
  2824  0636  0008               	return
  2825  0637                     __end_of___awmod:	
  2826                           
  2827                           	psect	text12
  2828  0470                     __ptext12:	
  2829 ;; *************** function ___awdiv *****************
  2830 ;; Defined at:
  2831 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  divisor         2   15[BANK0 ] int 
  2834 ;;  dividend        2   17[BANK0 ] int 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  quotient        2   22[BANK0 ] int 
  2837 ;;  sign            1   21[BANK0 ] unsigned char 
  2838 ;;  counter         1   20[BANK0 ] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  2   15[BANK0 ] int 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1
  2848 ;;      Params:         0       4       0
  2849 ;;      Locals:         0       4       0
  2850 ;;      Temps:          0       1       0
  2851 ;;      Totals:         0       9       0
  2852 ;;Total ram usage:        9 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    4
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_LCDWriteInt
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function ___awdiv
  2864  0470                     ___awdiv:	
  2865                           
  2866                           ;incstack = 0
  2867                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2868  0470  0020               	movlb	0	; select bank0
  2869  0471  01B5               	clrf	___awdiv@sign
  2870  0472  1FB0               	btfss	___awdiv@divisor+1,7
  2871  0473  2C7B               	goto	l1540
  2872  0474  09AF               	comf	___awdiv@divisor,f
  2873  0475  09B0               	comf	___awdiv@divisor+1,f
  2874  0476  0AAF               	incf	___awdiv@divisor,f
  2875  0477  1903               	skipnz
  2876  0478  0AB0               	incf	___awdiv@divisor+1,f
  2877  0479  01B5               	clrf	___awdiv@sign
  2878  047A  0AB5               	incf	___awdiv@sign,f
  2879  047B                     l1540:	
  2880  047B  1FB2               	btfss	___awdiv@dividend+1,7
  2881  047C  2C86               	goto	l1546
  2882  047D  09B1               	comf	___awdiv@dividend,f
  2883  047E  09B2               	comf	___awdiv@dividend+1,f
  2884  047F  0AB1               	incf	___awdiv@dividend,f
  2885  0480  1903               	skipnz
  2886  0481  0AB2               	incf	___awdiv@dividend+1,f
  2887  0482  3001               	movlw	1
  2888  0483  00B3               	movwf	??___awdiv
  2889  0484  0833               	movf	??___awdiv,w
  2890  0485  06B5               	xorwf	___awdiv@sign,f
  2891  0486                     l1546:	
  2892  0486  01B6               	clrf	___awdiv@quotient
  2893  0487  01B7               	clrf	___awdiv@quotient+1
  2894  0488  082F               	movf	___awdiv@divisor,w
  2895  0489  0430               	iorwf	___awdiv@divisor+1,w
  2896  048A  1903               	btfsc	3,2
  2897  048B  2CB5               	goto	l1568
  2898  048C  01B4               	clrf	___awdiv@counter
  2899  048D  0AB4               	incf	___awdiv@counter,f
  2900  048E                     l1556:	
  2901  048E  1BB0               	btfsc	___awdiv@divisor+1,7
  2902  048F  2C9A               	goto	l1558
  2903  0490  3001               	movlw	1
  2904  0491                     u1475:	
  2905  0491  35AF               	lslf	___awdiv@divisor,f
  2906  0492  0DB0               	rlf	___awdiv@divisor+1,f
  2907  0493  0B89               	decfsz	9,f
  2908  0494  2C91               	goto	u1475
  2909  0495  3001               	movlw	1
  2910  0496  00B3               	movwf	??___awdiv
  2911  0497  0833               	movf	??___awdiv,w
  2912  0498  07B4               	addwf	___awdiv@counter,f
  2913  0499  2C8E               	goto	l1556
  2914  049A                     l1558:	
  2915  049A  3001               	movlw	1
  2916  049B                     u1495:	
  2917  049B  35B6               	lslf	___awdiv@quotient,f
  2918  049C  0DB7               	rlf	___awdiv@quotient+1,f
  2919  049D  0B89               	decfsz	9,f
  2920  049E  2C9B               	goto	u1495
  2921  049F  0830               	movf	___awdiv@divisor+1,w
  2922  04A0  0232               	subwf	___awdiv@dividend+1,w
  2923  04A1  1D03               	skipz
  2924  04A2  2CA5               	goto	u1505
  2925  04A3  082F               	movf	___awdiv@divisor,w
  2926  04A4  0231               	subwf	___awdiv@dividend,w
  2927  04A5                     u1505:	
  2928  04A5  1C03               	skipc
  2929  04A6  2CAC               	goto	l1564
  2930  04A7  082F               	movf	___awdiv@divisor,w
  2931  04A8  02B1               	subwf	___awdiv@dividend,f
  2932  04A9  0830               	movf	___awdiv@divisor+1,w
  2933  04AA  3BB2               	subwfb	___awdiv@dividend+1,f
  2934  04AB  1436               	bsf	___awdiv@quotient,0
  2935  04AC                     l1564:	
  2936  04AC  3001               	movlw	1
  2937  04AD                     u1515:	
  2938  04AD  36B0               	lsrf	___awdiv@divisor+1,f
  2939  04AE  0CAF               	rrf	___awdiv@divisor,f
  2940  04AF  0B89               	decfsz	9,f
  2941  04B0  2CAD               	goto	u1515
  2942  04B1  3001               	movlw	1
  2943  04B2  02B4               	subwf	___awdiv@counter,f
  2944  04B3  1D03               	btfss	3,2
  2945  04B4  2C9A               	goto	l1558
  2946  04B5                     l1568:	
  2947  04B5  0835               	movf	___awdiv@sign,w
  2948  04B6  1903               	btfsc	3,2
  2949  04B7  2CBD               	goto	l1572
  2950  04B8  09B6               	comf	___awdiv@quotient,f
  2951  04B9  09B7               	comf	___awdiv@quotient+1,f
  2952  04BA  0AB6               	incf	___awdiv@quotient,f
  2953  04BB  1903               	skipnz
  2954  04BC  0AB7               	incf	___awdiv@quotient+1,f
  2955  04BD                     l1572:	
  2956  04BD  0837               	movf	___awdiv@quotient+1,w
  2957  04BE  00B0               	movwf	?___awdiv+1
  2958  04BF  0836               	movf	___awdiv@quotient,w
  2959  04C0  00AF               	movwf	?___awdiv
  2960  04C1  0008               	return
  2961  04C2                     __end_of___awdiv:	
  2962                           
  2963                           	psect	text13
  2964  05A8                     __ptext13:	
  2965 ;; *************** function _LCDInit *****************
  2966 ;; Defined at:
  2967 ;;		line 207 in file "lcd_hd44780_pic16.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  style           1    wreg     unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  style           1   29[BANK0 ] unsigned char 
  2972 ;;  __i             1   30[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1
  2982 ;;      Params:         0       0       0
  2983 ;;      Locals:         0       2       0
  2984 ;;      Temps:          0       2       0
  2985 ;;      Totals:         0       4       0
  2986 ;;Total ram usage:        4 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    6
  2989 ;; This function calls:
  2990 ;;		_LCDBusyLoop
  2991 ;;		_LCDByte
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _LCDInit
  2999  05A8                     _LCDInit:	
  3000                           
  3001                           ;incstack = 0
  3002                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3003                           ;LCDInit@style stored from wreg
  3004  05A8  0020               	movlb	0	; select bank0
  3005  05A9  00BD               	movwf	LCDInit@style
  3006                           
  3007                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  3008  05AA  30C3               	movlw	195
  3009  05AB  00BC               	movwf	??_LCDInit+1
  3010  05AC  30CD               	movlw	205
  3011  05AD  00BB               	movwf	??_LCDInit
  3012  05AE                     u2497:	
  3013  05AE  0BBB               	decfsz	??_LCDInit,f
  3014  05AF  2DAE               	goto	u2497
  3015  05B0  0BBC               	decfsz	??_LCDInit+1,f
  3016  05B1  2DAE               	goto	u2497
  3017                           
  3018                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<2));
  3019  05B2  30C3               	movlw	195
  3020  05B3  0020               	movlb	0	; select bank0
  3021  05B4  00BB               	movwf	??_LCDInit
  3022  05B5  083B               	movf	??_LCDInit,w
  3023  05B6  0021               	movlb	1	; select bank1
  3024  05B7  058E               	andwf	14,f	;volatile
  3025                           
  3026                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC1=0;
  3027  05B8  108E               	bcf	14,1	;volatile
  3028                           
  3029                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC0=0;
  3030  05B9  100E               	bcf	14,0	;volatile
  3031                           
  3032                           ;lcd_hd44780_pic16.c: 216: TRISAbits.TRISA0=0;
  3033  05BA  100C               	bcf	12,0	;volatile
  3034                           
  3035                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<2));
  3036  05BB  30C3               	movlw	195
  3037  05BC  0020               	movlb	0	; select bank0
  3038  05BD  00BB               	movwf	??_LCDInit
  3039  05BE  083B               	movf	??_LCDInit,w
  3040  05BF  058E               	andwf	14,f	;volatile
  3041                           
  3042                           ;lcd_hd44780_pic16.c: 220: (RC1=0);
  3043  05C0  108E               	bcf	14,1	;volatile
  3044                           
  3045                           ;lcd_hd44780_pic16.c: 221: (RA0=0);
  3046  05C1  100C               	bcf	12,0	;volatile
  3047                           
  3048                           ;lcd_hd44780_pic16.c: 222: (RC0=0);
  3049  05C2  100E               	bcf	14,0	;volatile
  3050                           
  3051                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3052  05C3  3200               	nop2	;2 cycle nop
  3053                           
  3054                           ;lcd_hd44780_pic16.c: 227: (RC1=1);
  3055  05C4  0020               	movlb	0	; select bank0
  3056  05C5  148E               	bsf	14,1	;volatile
  3057                           
  3058                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<2);
  3059  05C6  158E               	bsf	14,3	;volatile
  3060                           
  3061                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3062  05C7  3200               	nop2	;2 cycle nop
  3063  05C8  3200               	nop2	;2 cycle nop
  3064  05C9  0000               	nop
  3065                           
  3066                           ;lcd_hd44780_pic16.c: 230: (RC1=0);
  3067  05CA  0020               	movlb	0	; select bank0
  3068  05CB  108E               	bcf	14,1	;volatile
  3069                           
  3070                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3071  05CC  3200               	nop2	;2 cycle nop
  3072  05CD  3200               	nop2	;2 cycle nop
  3073  05CE  0000               	nop
  3074                           
  3075                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  3076  05CF  23C3               	fcall	_LCDBusyLoop
  3077                           
  3078                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  3079  05D0  0020               	movlb	0	; select bank0
  3080  05D1  01B4               	clrf	LCDByte@isdata
  3081  05D2  3028               	movlw	40
  3082  05D3  255E               	fcall	_LCDByte
  3083                           
  3084                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  3085  05D4  0020               	movlb	0	; select bank0
  3086  05D5  01B4               	clrf	LCDByte@isdata
  3087  05D6  083D               	movf	LCDInit@style,w
  3088  05D7  380C               	iorlw	12
  3089  05D8  255E               	fcall	_LCDByte
  3090                           
  3091                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  3092  05D9  0020               	movlb	0	; select bank0
  3093  05DA  01B4               	clrf	LCDByte@isdata
  3094  05DB  3040               	movlw	64
  3095  05DC  255E               	fcall	_LCDByte
  3096                           
  3097                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  3098                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  3099  05DD  0020               	movlb	0	; select bank0
  3100  05DE  01BE               	clrf	LCDInit@__i
  3101  05DF                     L3:	
  3102  05DF  3008               	movlw	8
  3103  05E0  023E               	subwf	LCDInit@__i,w
  3104  05E1  1803               	btfsc	3,0
  3105  05E2  0008               	return
  3106                           
  3107                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  3108  05E3  01B4               	clrf	LCDByte@isdata
  3109  05E4  0AB4               	incf	LCDByte@isdata,f
  3110  05E5  083E               	movf	LCDInit@__i,w
  3111  05E6  3EA9               	addlw	(low (___cgram| 0))& (0+255)
  3112  05E7  0086               	movwf	6
  3113  05E8  0187               	clrf	7
  3114  05E9  0801               	movf	1,w
  3115  05EA  255E               	fcall	_LCDByte
  3116  05EB  3001               	movlw	1
  3117  05EC  0020               	movlb	0	; select bank0
  3118  05ED  00BB               	movwf	??_LCDInit
  3119  05EE  083B               	movf	??_LCDInit,w
  3120  05EF  07BE               	addwf	LCDInit@__i,f
  3121  05F0  2DDF               	goto	L3
  3122  05F1                     __end_of_LCDInit:	
  3123                           
  3124                           	psect	text14
  3125  0708                     __ptext14:	
  3126 ;; *************** function _LCDGotoXY *****************
  3127 ;; Defined at:
  3128 ;;		line 351 in file "lcd_hd44780_pic16.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  x               1    wreg     unsigned char 
  3131 ;;  y               1   27[BANK0 ] unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  x               1   29[BANK0 ] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1
  3143 ;;      Params:         0       1       0
  3144 ;;      Locals:         0       1       0
  3145 ;;      Temps:          0       1       0
  3146 ;;      Totals:         0       3       0
  3147 ;;Total ram usage:        3 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    6
  3150 ;; This function calls:
  3151 ;;		_LCDByte
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _LCDGotoXY
  3159  0708                     _LCDGotoXY:	
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3163                           ;LCDGotoXY@x stored from wreg
  3164  0708  0020               	movlb	0	; select bank0
  3165  0709  00BD               	movwf	LCDGotoXY@x
  3166                           
  3167                           ;lcd_hd44780_pic16.c: 353: if(x>=20) return;
  3168  070A  3014               	movlw	20
  3169  070B  023D               	subwf	LCDGotoXY@x,w
  3170  070C  1803               	btfsc	3,0
  3171  070D  0008               	return
  3172  070E  2F18               	goto	l1946
  3173  070F                     l69:	
  3174                           ;lcd_hd44780_pic16.c: 361: case 1:
  3175                           
  3176                           ;lcd_hd44780_pic16.c: 360: break;
  3177                           
  3178                           ;lcd_hd44780_pic16.c: 358: {
  3179                           ;lcd_hd44780_pic16.c: 359: case 0:
  3180                           
  3181                           ;lcd_hd44780_pic16.c: 357: switch(y)
  3182                           
  3183                           
  3184                           ;lcd_hd44780_pic16.c: 362: x|=0b01000000;
  3185  070F  173D               	bsf	LCDGotoXY@x,6
  3186                           
  3187                           ;lcd_hd44780_pic16.c: 363: break;
  3188  0710  2F26               	goto	l68
  3189  0711                     l1940:	
  3190                           ;lcd_hd44780_pic16.c: 364: case 2:
  3191                           
  3192                           
  3193                           ;lcd_hd44780_pic16.c: 365: x+=0x14;
  3194  0711  3014               	movlw	20
  3195  0712  2F14               	goto	L4
  3196  0713                     l1942:	
  3197                           ;lcd_hd44780_pic16.c: 367: case 3:
  3198                           
  3199                           ;lcd_hd44780_pic16.c: 366: break;
  3200                           
  3201                           
  3202                           ;lcd_hd44780_pic16.c: 368: x+=0x54;
  3203  0713  3054               	movlw	84
  3204  0714                     L4:	
  3205  0714  00BC               	movwf	??_LCDGotoXY
  3206  0715  083C               	movf	??_LCDGotoXY,w
  3207  0716  07BD               	addwf	LCDGotoXY@x,f
  3208                           
  3209                           ;lcd_hd44780_pic16.c: 370: }
  3210                           
  3211                           ;lcd_hd44780_pic16.c: 369: break;
  3212  0717  2F26               	goto	l68
  3213  0718                     l1946:	
  3214  0718  083B               	movf	LCDGotoXY@y,w
  3215                           
  3216                           ; Switch size 1, requested type "space"
  3217                           ; Number of cases is 4, Range of values is 0 to 3
  3218                           ; switch strategies available:
  3219                           ; Name         Instructions Cycles
  3220                           ; simple_byte           13     7 (average)
  3221                           ; direct_byte           14     6 (fixed)
  3222                           ; jumptable            260     6 (fixed)
  3223                           ;	Chosen strategy is simple_byte
  3224  0719  3A00               	xorlw	0	; case 0
  3225  071A  1903               	skipnz
  3226  071B  2F26               	goto	l68
  3227  071C  3A01               	xorlw	1	; case 1
  3228  071D  1903               	skipnz
  3229  071E  2F0F               	goto	l69
  3230  071F  3A03               	xorlw	3	; case 2
  3231  0720  1903               	skipnz
  3232  0721  2F11               	goto	l1940
  3233  0722  3A01               	xorlw	1	; case 3
  3234  0723  1903               	skipnz
  3235  0724  2F13               	goto	l1942
  3236  0725  2F26               	goto	l68
  3237  0726                     l68:	
  3238                           
  3239                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  3240  0726  17BD               	bsf	LCDGotoXY@x,7
  3241                           
  3242                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  3243  0727  01B4               	clrf	LCDByte@isdata
  3244  0728  083D               	movf	LCDGotoXY@x,w
  3245  0729  255E               	fcall	_LCDByte
  3246  072A  0008               	return
  3247  072B                     __end_of_LCDGotoXY:	
  3248                           
  3249                           	psect	text15
  3250  055E                     __ptext15:	
  3251 ;; *************** function _LCDByte *****************
  3252 ;; Defined at:
  3253 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  c               1    wreg     unsigned char 
  3256 ;;  isdata          1   20[BANK0 ] unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  c               1   25[BANK0 ] unsigned char 
  3259 ;;  temp            1   26[BANK0 ] unsigned char 
  3260 ;;  ln              1   24[BANK0 ] unsigned char 
  3261 ;;  hn              1   23[BANK0 ] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0, pclath, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1
  3271 ;;      Params:         0       1       0
  3272 ;;      Locals:         0       4       0
  3273 ;;      Temps:          0       2       0
  3274 ;;      Totals:         0       7       0
  3275 ;;Total ram usage:        7 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    5
  3278 ;; This function calls:
  3279 ;;		_LCDBusyLoop
  3280 ;; This function is called by:
  3281 ;;		_LCDInit
  3282 ;;		_LCDWriteString
  3283 ;;		_LCDWriteInt
  3284 ;;		_LCDGotoXY
  3285 ;;		_main
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           
  3290                           ;psect for function _LCDByte
  3291  055E                     _LCDByte:	
  3292                           
  3293                           ;incstack = 0
  3294                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3295                           ;LCDByte@c stored from wreg
  3296  055E  0020               	movlb	0	; select bank0
  3297  055F  00B9               	movwf	LCDByte@c
  3298                           
  3299                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3300                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3301                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3302  0560  0839               	movf	LCDByte@c,w
  3303  0561  00B5               	movwf	??_LCDByte
  3304  0562  3004               	movlw	4
  3305  0563                     u1385:	
  3306  0563  36B5               	lsrf	??_LCDByte,f
  3307  0564  0B89               	decfsz	9,f
  3308  0565  2D63               	goto	u1385
  3309  0566  0835               	movf	??_LCDByte,w
  3310  0567  00B6               	movwf	??_LCDByte+1
  3311  0568  0836               	movf	??_LCDByte+1,w
  3312  0569  00B7               	movwf	LCDByte@hn
  3313                           
  3314                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3315  056A  0839               	movf	LCDByte@c,w
  3316  056B  390F               	andlw	15
  3317  056C  00B5               	movwf	??_LCDByte
  3318  056D  0835               	movf	??_LCDByte,w
  3319  056E  00B8               	movwf	LCDByte@ln
  3320                           
  3321                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3322  056F  0834               	movf	LCDByte@isdata,w
  3323  0570  1D03               	btfss	3,2
  3324  0571  2D74               	goto	l23
  3325                           
  3326                           ;lcd_hd44780_pic16.c: 96: (RC0=0);
  3327  0572  100E               	bcf	14,0	;volatile
  3328  0573  2D75               	goto	l24
  3329  0574                     l23:	
  3330                           
  3331                           ;lcd_hd44780_pic16.c: 97: else
  3332                           ;lcd_hd44780_pic16.c: 98: (RC0=1);
  3333  0574  140E               	bsf	14,0	;volatile
  3334  0575                     l24:	
  3335                           
  3336                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3337  0575  3200               	nop2	;2 cycle nop
  3338                           
  3339                           ;lcd_hd44780_pic16.c: 102: (RC1=1);
  3340  0576  0020               	movlb	0	; select bank0
  3341  0577  148E               	bsf	14,1	;volatile
  3342                           
  3343                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  3344  0578  0837               	movf	LCDByte@hn,w
  3345  0579  00B5               	movwf	??_LCDByte
  3346  057A  3002               	movlw	2
  3347  057B                     u1405:	
  3348  057B  35B5               	lslf	??_LCDByte,f
  3349  057C  0B89               	decfsz	9,f
  3350  057D  2D7B               	goto	u1405
  3351  057E  080E               	movf	14,w	;volatile
  3352  057F  39C3               	andlw	195
  3353  0580  0435               	iorwf	??_LCDByte,w
  3354  0581  00B6               	movwf	??_LCDByte+1
  3355  0582  0836               	movf	??_LCDByte+1,w
  3356  0583  00BA               	movwf	LCDByte@temp
  3357                           
  3358                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3359  0584  083A               	movf	LCDByte@temp,w
  3360  0585  008E               	movwf	14	;volatile
  3361                           
  3362                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3363  0586  3200               	nop2	;2 cycle nop
  3364  0587  3200               	nop2	;2 cycle nop
  3365  0588  0000               	nop
  3366                           
  3367                           ;lcd_hd44780_pic16.c: 113: (RC1=0);
  3368  0589  0020               	movlb	0	; select bank0
  3369  058A  108E               	bcf	14,1	;volatile
  3370                           
  3371                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3372  058B  3200               	nop2	;2 cycle nop
  3373  058C  3200               	nop2	;2 cycle nop
  3374  058D  0000               	nop
  3375                           
  3376                           ;lcd_hd44780_pic16.c: 118: (RC1=1);
  3377  058E  0020               	movlb	0	; select bank0
  3378  058F  148E               	bsf	14,1	;volatile
  3379                           
  3380                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  3381  0590  0838               	movf	LCDByte@ln,w
  3382  0591  00B5               	movwf	??_LCDByte
  3383  0592  3002               	movlw	2
  3384  0593                     u1415:	
  3385  0593  35B5               	lslf	??_LCDByte,f
  3386  0594  0B89               	decfsz	9,f
  3387  0595  2D93               	goto	u1415
  3388  0596  080E               	movf	14,w	;volatile
  3389  0597  39C3               	andlw	195
  3390  0598  0435               	iorwf	??_LCDByte,w
  3391  0599  00B6               	movwf	??_LCDByte+1
  3392  059A  0836               	movf	??_LCDByte+1,w
  3393  059B  00BA               	movwf	LCDByte@temp
  3394                           
  3395                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3396  059C  083A               	movf	LCDByte@temp,w
  3397  059D  008E               	movwf	14	;volatile
  3398                           
  3399                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3400  059E  3200               	nop2	;2 cycle nop
  3401  059F  3200               	nop2	;2 cycle nop
  3402  05A0  0000               	nop
  3403                           
  3404                           ;lcd_hd44780_pic16.c: 128: (RC1=0);
  3405  05A1  0020               	movlb	0	; select bank0
  3406  05A2  108E               	bcf	14,1	;volatile
  3407                           
  3408                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3409  05A3  3200               	nop2	;2 cycle nop
  3410  05A4  3200               	nop2	;2 cycle nop
  3411  05A5  0000               	nop
  3412                           
  3413                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3414  05A6  23C3               	fcall	_LCDBusyLoop
  3415  05A7  0008               	return
  3416  05A8                     __end_of_LCDByte:	
  3417                           
  3418                           	psect	text16
  3419  03C3                     __ptext16:	
  3420 ;; *************** function _LCDBusyLoop *****************
  3421 ;; Defined at:
  3422 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  status          1   19[BANK0 ] unsigned char 
  3427 ;;  temp            1   18[BANK0 ] unsigned char 
  3428 ;;  busy            1   17[BANK0 ] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1
  3438 ;;      Params:         0       0       0
  3439 ;;      Locals:         0       3       0
  3440 ;;      Temps:          0       2       0
  3441 ;;      Totals:         0       5       0
  3442 ;;Total ram usage:        5 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    4
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_LCDByte
  3449 ;;		_LCDInit
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function _LCDBusyLoop
  3455  03C3                     _LCDBusyLoop:	
  3456                           
  3457                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  3461  03C3  0020               	movlb	0	; select bank0
  3462  03C4  01B3               	clrf	LCDBusyLoop@status
  3463                           
  3464                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<2);
  3465  03C5  303C               	movlw	60
  3466  03C6  00AF               	movwf	??_LCDBusyLoop
  3467  03C7  082F               	movf	??_LCDBusyLoop,w
  3468  03C8  0021               	movlb	1	; select bank1
  3469  03C9  048E               	iorwf	14,f	;volatile
  3470                           
  3471                           ;lcd_hd44780_pic16.c: 145: (RA0=1);
  3472  03CA  0020               	movlb	0	; select bank0
  3473  03CB  140C               	bsf	12,0	;volatile
  3474                           
  3475                           ;lcd_hd44780_pic16.c: 146: (RC0=0);
  3476  03CC  100E               	bcf	14,0	;volatile
  3477                           
  3478                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3479  03CD  3200               	nop2	;2 cycle nop
  3480  03CE                     l1372:	
  3481                           ;lcd_hd44780_pic16.c: 153: do
  3482                           
  3483                           
  3484                           ;lcd_hd44780_pic16.c: 154: {
  3485                           ;lcd_hd44780_pic16.c: 156: (RC1=1);
  3486  03CE  0020               	movlb	0	; select bank0
  3487  03CF  148E               	bsf	14,1	;volatile
  3488                           
  3489                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3490  03D0  3200               	nop2	;2 cycle nop
  3491                           
  3492                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>2);
  3493  03D1  0020               	movlb	0	; select bank0
  3494  03D2  080E               	movf	14,w	;volatile
  3495  03D3  00AF               	movwf	??_LCDBusyLoop
  3496  03D4  3002               	movlw	2
  3497  03D5                     u1185:	
  3498  03D5  36AF               	lsrf	??_LCDBusyLoop,f
  3499  03D6  0B89               	decfsz	9,f
  3500  03D7  2BD5               	goto	u1185
  3501  03D8  082F               	movf	??_LCDBusyLoop,w
  3502  03D9  00B0               	movwf	??_LCDBusyLoop+1
  3503  03DA  0830               	movf	??_LCDBusyLoop+1,w
  3504  03DB  00B3               	movwf	LCDBusyLoop@status
  3505                           
  3506                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  3507  03DC  0833               	movf	LCDBusyLoop@status,w
  3508  03DD  00AF               	movwf	??_LCDBusyLoop
  3509  03DE  3003               	movlw	3
  3510  03DF                     u1195:	
  3511  03DF  35AF               	lslf	??_LCDBusyLoop,f
  3512  03E0  3EFF               	addlw	-1
  3513  03E1  1D03               	skipz
  3514  03E2  2BDF               	goto	u1195
  3515  03E3  352F               	lslf	??_LCDBusyLoop,w
  3516  03E4  00B0               	movwf	??_LCDBusyLoop+1
  3517  03E5  0830               	movf	??_LCDBusyLoop+1,w
  3518  03E6  00B3               	movwf	LCDBusyLoop@status
  3519                           
  3520                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3521  03E7  3200               	nop2	;2 cycle nop
  3522                           
  3523                           ;lcd_hd44780_pic16.c: 167: (RC1=0);
  3524  03E8  0020               	movlb	0	; select bank0
  3525  03E9  108E               	bcf	14,1	;volatile
  3526                           
  3527                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3528  03EA  3200               	nop2	;2 cycle nop
  3529  03EB  3200               	nop2	;2 cycle nop
  3530  03EC  0000               	nop
  3531                           
  3532                           ;lcd_hd44780_pic16.c: 170: (RC1=1);
  3533  03ED  0020               	movlb	0	; select bank0
  3534  03EE  148E               	bsf	14,1	;volatile
  3535                           
  3536                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3537  03EF  3200               	nop2	;2 cycle nop
  3538                           
  3539                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>2);
  3540  03F0  0020               	movlb	0	; select bank0
  3541  03F1  080E               	movf	14,w	;volatile
  3542  03F2  00AF               	movwf	??_LCDBusyLoop
  3543  03F3  3002               	movlw	2
  3544  03F4                     u1205:	
  3545  03F4  36AF               	lsrf	??_LCDBusyLoop,f
  3546  03F5  0B89               	decfsz	9,f
  3547  03F6  2BF4               	goto	u1205
  3548  03F7  082F               	movf	??_LCDBusyLoop,w
  3549  03F8  00B0               	movwf	??_LCDBusyLoop+1
  3550  03F9  0830               	movf	??_LCDBusyLoop+1,w
  3551  03FA  00B2               	movwf	LCDBusyLoop@temp
  3552                           
  3553                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  3554  03FB  300F               	movlw	15
  3555  03FC  00AF               	movwf	??_LCDBusyLoop
  3556  03FD  082F               	movf	??_LCDBusyLoop,w
  3557  03FE  05B2               	andwf	LCDBusyLoop@temp,f
  3558                           
  3559                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  3560  03FF  0833               	movf	LCDBusyLoop@status,w
  3561  0400  0432               	iorwf	LCDBusyLoop@temp,w
  3562  0401  00AF               	movwf	??_LCDBusyLoop
  3563  0402  082F               	movf	??_LCDBusyLoop,w
  3564  0403  00B3               	movwf	LCDBusyLoop@status
  3565                           
  3566                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  3567  0404  0833               	movf	LCDBusyLoop@status,w
  3568  0405  3980               	andlw	128
  3569  0406  00AF               	movwf	??_LCDBusyLoop
  3570  0407  082F               	movf	??_LCDBusyLoop,w
  3571  0408  00B1               	movwf	LCDBusyLoop@busy
  3572                           
  3573                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3574  0409  3200               	nop2	;2 cycle nop
  3575                           
  3576                           ;lcd_hd44780_pic16.c: 182: (RC1=0);
  3577  040A  0020               	movlb	0	; select bank0
  3578  040B  108E               	bcf	14,1	;volatile
  3579                           
  3580                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3581  040C  3200               	nop2	;2 cycle nop
  3582  040D  3200               	nop2	;2 cycle nop
  3583  040E  0000               	nop
  3584                           
  3585                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  3586  040F  0020               	movlb	0	; select bank0
  3587  0410  0831               	movf	LCDBusyLoop@busy,w
  3588  0411  1D03               	btfss	3,2
  3589  0412  2BCE               	goto	l1372
  3590                           
  3591                           ;lcd_hd44780_pic16.c: 186: (RA0=0);
  3592  0413  100C               	bcf	12,0	;volatile
  3593                           
  3594                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<2));
  3595  0414  30C3               	movlw	195
  3596  0415  00AF               	movwf	??_LCDBusyLoop
  3597  0416  082F               	movf	??_LCDBusyLoop,w
  3598  0417  0021               	movlb	1	; select bank1
  3599  0418  058E               	andwf	14,f	;volatile
  3600  0419  0008               	return
  3601  041A                     __end_of_LCDBusyLoop:	
  3602                           
  3603                           	psect	text17
  3604  077C                     __ptext17:	
  3605 ;; *************** function _ADCInit *****************
  3606 ;; Defined at:
  3607 ;;		line 7 in file "adc_pic16.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMMON   BANK0   BANK1
  3621 ;;      Params:         0       0       0
  3622 ;;      Locals:         0       0       0
  3623 ;;      Temps:          0       0       0
  3624 ;;      Totals:         0       0       0
  3625 ;;Total ram usage:        0 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    4
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function _ADCInit
  3637  077C                     _ADCInit:	
  3638                           
  3639                           ;adc_pic16.c: 10: TRISAbits.TRISA2 = 1;
  3640                           
  3641                           ;incstack = 0
  3642                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  3643  077C  0021               	movlb	1	; select bank1
  3644  077D  150C               	bsf	12,2	;volatile
  3645                           
  3646                           ;adc_pic16.c: 11: ANSELAbits.ANSA2 = 1;
  3647  077E  0023               	movlb	3	; select bank3
  3648  077F  150C               	bsf	12,2	;volatile
  3649                           
  3650                           ;adc_pic16.c: 13: ADCON0bits.CHS = 0b00010;
  3651  0780  0021               	movlb	1	; select bank1
  3652  0781  081D               	movf	29,w	;volatile
  3653  0782  3983               	andlw	-125
  3654  0783  3808               	iorlw	8
  3655  0784  009D               	movwf	29	;volatile
  3656                           
  3657                           ;adc_pic16.c: 15: ADCON1bits.ADPREF = 0b00;
  3658  0785  30FC               	movlw	-4
  3659  0786  059E               	andwf	30,f	;volatile
  3660                           
  3661                           ;adc_pic16.c: 17: ADCON1bits.ADCS = 0b011;
  3662  0787  081E               	movf	30,w	;volatile
  3663  0788  398F               	andlw	-113
  3664  0789  3830               	iorlw	48
  3665  078A  009E               	movwf	30	;volatile
  3666                           
  3667                           ;adc_pic16.c: 20: ADCON1bits.ADFM=1;
  3668  078B  179E               	bsf	30,7	;volatile
  3669                           
  3670                           ;adc_pic16.c: 22: ADCON0bits.ADON = 1;
  3671  078C  141D               	bsf	29,0	;volatile
  3672  078D  0008               	return
  3673  078E                     __end_of_ADCInit:	
  3674                           
  3675                           	psect	intentry
  3676  0004                     __pintentry:	
  3677 ;; *************** function _ISR *****************
  3678 ;; Defined at:
  3679 ;;		line 98 in file "do_am.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1
  3693 ;;      Params:         0       0       0
  3694 ;;      Locals:         0       0       0
  3695 ;;      Temps:          0       3       0
  3696 ;;      Totals:         0       3       0
  3697 ;;Total ram usage:        3 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    3
  3700 ;; This function calls:
  3701 ;;		i1_LCDGotoXY
  3702 ;;		i1_LCDWriteInt
  3703 ;; This function is called by:
  3704 ;;		Interrupt level 1
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708  0004                     _ISR:	
  3709                           
  3710                           ;incstack = 0
  3711                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3712  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3713  0005  3180               	pagesel	$
  3714  0006  0020               	movlb	0	; select bank0
  3715  0007  087F               	movf	127,w
  3716  0008  00AE               	movwf	??_ISR+2
  3717                           
  3718                           ;do_am.c: 100: if(INTCONbits.IOCIF == 1)
  3719  0009  1C0B               	btfss	11,0	;volatile
  3720  000A  2842               	goto	i1l124
  3721                           
  3722                           ;do_am.c: 101: {
  3723                           ;do_am.c: 102: if(IOCAFbits.IOCAF1 == 1)
  3724  000B  0027               	movlb	7	; select bank7
  3725  000C  1893               	btfsc	19,1	;volatile
  3726  000D  283A               	goto	i1l2036
  3727  000E  2841               	goto	i1l119
  3728  000F                     i1l2026:	
  3729                           ;do_am.c: 103: {
  3730                           ;do_am.c: 109: while(RA1 == 1)
  3731                           
  3732                           
  3733                           ;do_am.c: 110: {
  3734                           ;do_am.c: 111: tuneUpTemp++;
  3735  000F  3001               	movlw	1
  3736  0010  0020               	movlb	0	; select bank0
  3737  0011  07DC               	addwf	_tuneUpTemp,f
  3738  0012  3000               	movlw	0
  3739  0013  3DDD               	addwfc	_tuneUpTemp+1,f
  3740                           
  3741                           ;do_am.c: 112: if(tuneUpTemp > 150)
  3742  0014  085D               	movf	_tuneUpTemp+1,w
  3743  0015  3A80               	xorlw	128
  3744  0016  00AC               	movwf	??_ISR
  3745  0017  3080               	movlw	128
  3746  0018  022C               	subwf	??_ISR,w
  3747  0019  1D03               	skipz
  3748  001A  281D               	goto	u230_25
  3749  001B  3097               	movlw	151
  3750  001C  025C               	subwf	_tuneUpTemp,w
  3751  001D                     u230_25:	
  3752  001D  1C03               	skipc
  3753  001E  2822               	goto	i1l2030
  3754                           
  3755                           ;do_am.c: 113: {
  3756                           ;do_am.c: 114: tuneUpTemp = 0;
  3757  001F  0020               	movlb	0	; select bank0
  3758  0020  01DC               	clrf	_tuneUpTemp
  3759  0021  01DD               	clrf	_tuneUpTemp+1
  3760  0022                     i1l2030:	
  3761                           
  3762                           ;do_am.c: 115: }
  3763                           ;do_am.c: 117: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  3764  0022  01FC               	clrf	i1LCDGotoXY@y
  3765  0023  0AFC               	incf	i1LCDGotoXY@y,f
  3766  0024  3004               	movlw	4
  3767  0025  272B               	fcall	i1_LCDGotoXY
  3768  0026  0020               	movlb	0	; select bank0
  3769  0027  085D               	movf	_tuneUpTemp+1,w
  3770  0028  00A1               	movwf	i1LCDWriteInt@val+1
  3771  0029  085C               	movf	_tuneUpTemp,w
  3772  002A  00A0               	movwf	i1LCDWriteInt@val
  3773  002B  3003               	movlw	3
  3774  002C  00AC               	movwf	??_ISR
  3775  002D  082C               	movf	??_ISR,w
  3776  002E  00A2               	movwf	i1LCDWriteInt@field_length
  3777  002F  22E2               	fcall	i1_LCDWriteInt
  3778                           
  3779                           ;do_am.c: 119: _delay((unsigned long)((10)*(20000000/4000.0)));
  3780  0030  3041               	movlw	65
  3781  0031  0020               	movlb	0	; select bank0
  3782  0032  00AD               	movwf	??_ISR+1
  3783  0033  30EE               	movlw	238
  3784  0034  00AC               	movwf	??_ISR
  3785  0035                     u250_27:	
  3786  0035  0BAC               	decfsz	??_ISR,f
  3787  0036  2835               	goto	u250_27
  3788  0037  0BAD               	decfsz	??_ISR+1,f
  3789  0038  2835               	goto	u250_27
  3790  0039  0000               	nop
  3791  003A                     i1l2036:	
  3792  003A  0020               	movlb	0	; select bank0
  3793  003B  188C               	btfsc	12,1	;volatile
  3794  003C  280F               	goto	i1l2026
  3795                           
  3796                           ;do_am.c: 127: }
  3797                           ;do_am.c: 128: tuneUpTempDir = 1;
  3798  003D  01DE               	clrf	_tuneUpTempDir
  3799  003E  0ADE               	incf	_tuneUpTempDir,f
  3800                           
  3801                           ;do_am.c: 129: IOCAFbits.IOCAF1 = 0;
  3802  003F  0027               	movlb	7	; select bank7
  3803  0040  1093               	bcf	19,1	;volatile
  3804  0041                     i1l119:	
  3805                           
  3806                           ;do_am.c: 130: }
  3807                           ;do_am.c: 131: INTCONbits.IOCIF = 0;
  3808  0041  100B               	bcf	11,0	;volatile
  3809  0042                     i1l124:	
  3810  0042  0020               	movlb	0	; select bank0
  3811  0043  082E               	movf	??_ISR+2,w
  3812  0044  00FF               	movwf	127
  3813  0045  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3814  0046  0009               	retfie
  3815  0047                     __end_of_ISR:	
  3816                           
  3817                           	psect	text19
  3818  02E2                     __ptext19:	
  3819 ;; *************** function i1_LCDWriteInt *****************
  3820 ;; Defined at:
  3821 ;;		line 317 in file "lcd_hd44780_pic16.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  val             2    0[BANK0 ] int 
  3824 ;;  field_length    1    2[BANK0 ] char 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  3827 ;;  LCDWriteInt     2   10[BANK0 ] int 
  3828 ;;  LCDWriteInt     2    8[BANK0 ] int 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1
  3838 ;;      Params:         0       3       0
  3839 ;;      Locals:         0       9       0
  3840 ;;      Temps:          2       0       0
  3841 ;;      Totals:         2      12       0
  3842 ;;Total ram usage:       14 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; Hardware stack levels required when called:    2
  3845 ;; This function calls:
  3846 ;;		i1_LCDByte
  3847 ;;		i1___awdiv
  3848 ;;		i1___awmod
  3849 ;; This function is called by:
  3850 ;;		_ISR
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function i1_LCDWriteInt
  3856  02E2                     i1_LCDWriteInt:	
  3857                           
  3858                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  3859                           
  3860                           ;incstack = 0
  3861                           ; Regs used in i1_LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3862  02E2  3057               	movlw	low LCDWriteInt@F2516
  3863  02E3  0086               	movwf	6
  3864  02E4  3000               	movlw	high LCDWriteInt@F2516
  3865  02E5  0087               	movwf	7
  3866  02E6  3023               	movlw	low i1LCDWriteInt@str
  3867  02E7  0084               	movwf	4
  3868  02E8  3000               	movlw	high i1LCDWriteInt@str
  3869  02E9  0085               	movwf	5
  3870  02EA  3005               	movlw	5
  3871  02EB  00FC               	movwf	??i1_LCDWriteInt
  3872  02EC                     u221_20:	
  3873  02EC  0016               	moviw fsr1++
  3874  02ED  001A               	movwi fsr0++
  3875  02EE  0BFC               	decfsz	??i1_LCDWriteInt,f
  3876  02EF  2AEC               	goto	u221_20
  3877                           
  3878                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  3879  02F0  3004               	movlw	4
  3880  02F1  0020               	movlb	0	; select bank0
  3881  02F2  00AA               	movwf	i1LCDWriteInt@i
  3882  02F3  3000               	movlw	0
  3883  02F4  00AB               	movwf	i1LCDWriteInt@i+1
  3884  02F5  01A8               	clrf	i1LCDWriteInt@j
  3885  02F6  01A9               	clrf	i1LCDWriteInt@j+1
  3886                           
  3887                           ;lcd_hd44780_pic16.c: 323: if(val<0)
  3888  02F7  1FA1               	btfss	i1LCDWriteInt@val+1,7
  3889  02F8  2B03               	goto	i1l1984
  3890                           
  3891                           ;lcd_hd44780_pic16.c: 324: {
  3892                           ;lcd_hd44780_pic16.c: 325: (LCDByte('-',1));
  3893  02F9  01F5               	clrf	i1LCDByte@isdata
  3894  02FA  0AF5               	incf	i1LCDByte@isdata,f
  3895  02FB  302D               	movlw	45
  3896  02FC  2513               	fcall	i1_LCDByte
  3897                           
  3898                           ;lcd_hd44780_pic16.c: 326: val=val*-1;
  3899  02FD  0020               	movlb	0	; select bank0
  3900  02FE  09A0               	comf	i1LCDWriteInt@val,f
  3901  02FF  09A1               	comf	i1LCDWriteInt@val+1,f
  3902  0300  0AA0               	incf	i1LCDWriteInt@val,f
  3903  0301  1903               	skipnz
  3904  0302  0AA1               	incf	i1LCDWriteInt@val+1,f
  3905  0303                     i1l1984:	
  3906                           ;lcd_hd44780_pic16.c: 327: }
  3907                           ;lcd_hd44780_pic16.c: 329: while(val)
  3908                           
  3909  0303  0820               	movf	i1LCDWriteInt@val,w
  3910  0304  0421               	iorwf	i1LCDWriteInt@val+1,w
  3911  0305  1903               	btfsc	3,2
  3912  0306  2B2C               	goto	i1l1986
  3913                           
  3914                           ;lcd_hd44780_pic16.c: 330: {
  3915                           ;lcd_hd44780_pic16.c: 331: str[i]=val%10;
  3916  0307  300A               	movlw	10
  3917  0308  00F0               	movwf	i1___awmod@divisor
  3918  0309  3000               	movlw	0
  3919  030A  00F1               	movwf	i1___awmod@divisor+1
  3920  030B  0821               	movf	i1LCDWriteInt@val+1,w
  3921  030C  00F3               	movwf	i1___awmod@dividend+1
  3922  030D  0820               	movf	i1LCDWriteInt@val,w
  3923  030E  00F2               	movwf	i1___awmod@dividend
  3924  030F  2637               	fcall	i1___awmod
  3925  0310  0870               	movf	?i1___awmod,w
  3926  0311  00FC               	movwf	??i1_LCDWriteInt
  3927  0312  0020               	movlb	0	; select bank0
  3928  0313  082A               	movf	i1LCDWriteInt@i,w
  3929  0314  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  3930  0315  0086               	movwf	6
  3931  0316  0187               	clrf	7
  3932  0317  087C               	movf	??i1_LCDWriteInt,w
  3933  0318  0081               	movwf	1
  3934                           
  3935                           ;lcd_hd44780_pic16.c: 332: val=val/10;
  3936  0319  300A               	movlw	10
  3937  031A  00F0               	movwf	i1___awdiv@divisor
  3938  031B  3000               	movlw	0
  3939  031C  00F1               	movwf	i1___awdiv@divisor+1
  3940  031D  0821               	movf	i1LCDWriteInt@val+1,w
  3941  031E  00F3               	movwf	i1___awdiv@dividend+1
  3942  031F  0820               	movf	i1LCDWriteInt@val,w
  3943  0320  00F2               	movwf	i1___awdiv@dividend
  3944  0321  24C2               	fcall	i1___awdiv
  3945  0322  0871               	movf	?i1___awdiv+1,w
  3946  0323  0020               	movlb	0	; select bank0
  3947  0324  00A1               	movwf	i1LCDWriteInt@val+1
  3948  0325  0870               	movf	?i1___awdiv,w
  3949  0326  00A0               	movwf	i1LCDWriteInt@val
  3950                           
  3951                           ;lcd_hd44780_pic16.c: 333: i--;
  3952  0327  30FF               	movlw	255
  3953  0328  07AA               	addwf	i1LCDWriteInt@i,f
  3954  0329  30FF               	movlw	255
  3955  032A  3DAB               	addwfc	i1LCDWriteInt@i+1,f
  3956  032B  2B03               	goto	i1l1984
  3957  032C                     i1l1986:	
  3958                           
  3959                           ;lcd_hd44780_pic16.c: 334: }
  3960                           ;lcd_hd44780_pic16.c: 335: if(field_length==-1)
  3961  032C  0A22               	incf	i1LCDWriteInt@field_length,w
  3962  032D  1903               	btfsc	3,2
  3963  032E  2B3F               	goto	i1l1994
  3964                           
  3965                           ;lcd_hd44780_pic16.c: 337: else
  3966                           ;lcd_hd44780_pic16.c: 338: j=5-field_length;
  3967                           
  3968                           ;lcd_hd44780_pic16.c: 336: while(str[j]==-16) j++;
  3969  032F  0822               	movf	i1LCDWriteInt@field_length,w
  3970  0330  00FC               	movwf	??i1_LCDWriteInt
  3971  0331  01FD               	clrf	??i1_LCDWriteInt+1
  3972  0332  1BFC               	btfsc	??i1_LCDWriteInt,7
  3973  0333  03FD               	decf	??i1_LCDWriteInt+1,f
  3974  0334  09FC               	comf	??i1_LCDWriteInt,f
  3975  0335  09FD               	comf	??i1_LCDWriteInt+1,f
  3976  0336  0AFC               	incf	??i1_LCDWriteInt,f
  3977  0337  1903               	skipnz
  3978  0338  0AFD               	incf	??i1_LCDWriteInt+1,f
  3979  0339  087C               	movf	??i1_LCDWriteInt,w
  3980  033A  3E05               	addlw	5
  3981  033B  00A8               	movwf	i1LCDWriteInt@j
  3982  033C  3000               	movlw	0
  3983  033D  3D7D               	addwfc	??i1_LCDWriteInt+1,w
  3984  033E  00A9               	movwf	i1LCDWriteInt@j+1
  3985  033F                     i1l1994:	
  3986                           
  3987                           ;lcd_hd44780_pic16.c: 341: for(i=j;i<5;i++)
  3988  033F  0829               	movf	i1LCDWriteInt@j+1,w
  3989  0340  00AB               	movwf	i1LCDWriteInt@i+1
  3990  0341  0828               	movf	i1LCDWriteInt@j,w
  3991  0342  00AA               	movwf	i1LCDWriteInt@i
  3992  0343                     L5:	
  3993  0343  082B               	movf	i1LCDWriteInt@i+1,w
  3994  0344  3A80               	xorlw	128
  3995  0345  00FC               	movwf	??i1_LCDWriteInt
  3996  0346  3080               	movlw	128
  3997  0347  027C               	subwf	??i1_LCDWriteInt,w
  3998  0348  1D03               	skipz
  3999  0349  2B4C               	goto	u225_25
  4000  034A  3005               	movlw	5
  4001  034B  022A               	subwf	i1LCDWriteInt@i,w
  4002  034C                     u225_25:	
  4003  034C  1803               	btfsc	3,0
  4004  034D  0008               	return
  4005                           
  4006                           ;lcd_hd44780_pic16.c: 342: {
  4007                           ;lcd_hd44780_pic16.c: 343: (LCDByte(48+str[i],1));
  4008  034E  01F5               	clrf	i1LCDByte@isdata
  4009  034F  0AF5               	incf	i1LCDByte@isdata,f
  4010  0350  0020               	movlb	0	; select bank0
  4011  0351  082A               	movf	i1LCDWriteInt@i,w
  4012  0352  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4013  0353  0086               	movwf	6
  4014  0354  0187               	clrf	7
  4015  0355  0801               	movf	1,w
  4016  0356  3E30               	addlw	48
  4017  0357  2513               	fcall	i1_LCDByte
  4018  0358  3001               	movlw	1
  4019  0359  0020               	movlb	0	; select bank0
  4020  035A  07AA               	addwf	i1LCDWriteInt@i,f
  4021  035B  3000               	movlw	0
  4022  035C  3DAB               	addwfc	i1LCDWriteInt@i+1,f
  4023  035D  2B43               	goto	L5
  4024  035E                     __end_ofi1_LCDWriteInt:	
  4025                           
  4026                           	psect	text20
  4027  0637                     __ptext20:	
  4028 ;; *************** function i1___awmod *****************
  4029 ;; Defined at:
  4030 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  divisor         2    0[COMMON] int 
  4033 ;;  dividend        2    2[COMMON] int 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  __awmod         1    6[COMMON] unsigned char 
  4036 ;;  __awmod         1    5[COMMON] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2    0[COMMON] int 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1
  4046 ;;      Params:         4       0       0
  4047 ;;      Locals:         2       0       0
  4048 ;;      Temps:          1       0       0
  4049 ;;      Totals:         7       0       0
  4050 ;;Total ram usage:        7 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		i1_LCDWriteInt
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           
  4060                           ;psect for function i1___awmod
  4061  0637                     i1___awmod:	
  4062                           
  4063                           ;incstack = 0
  4064                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4065  0637  01F6               	clrf	i1___awmod@sign
  4066  0638  1FF3               	btfss	i1___awmod@dividend+1,7
  4067  0639  2E41               	goto	i1l1792
  4068  063A  09F2               	comf	i1___awmod@dividend,f
  4069  063B  09F3               	comf	i1___awmod@dividend+1,f
  4070  063C  0AF2               	incf	i1___awmod@dividend,f
  4071  063D  1903               	skipnz
  4072  063E  0AF3               	incf	i1___awmod@dividend+1,f
  4073  063F  01F6               	clrf	i1___awmod@sign
  4074  0640  0AF6               	incf	i1___awmod@sign,f
  4075  0641                     i1l1792:	
  4076  0641  1FF1               	btfss	i1___awmod@divisor+1,7
  4077  0642  2E48               	goto	i1l1796
  4078  0643  09F0               	comf	i1___awmod@divisor,f
  4079  0644  09F1               	comf	i1___awmod@divisor+1,f
  4080  0645  0AF0               	incf	i1___awmod@divisor,f
  4081  0646  1903               	skipnz
  4082  0647  0AF1               	incf	i1___awmod@divisor+1,f
  4083  0648                     i1l1796:	
  4084  0648  0870               	movf	i1___awmod@divisor,w
  4085  0649  0471               	iorwf	i1___awmod@divisor+1,w
  4086  064A  1903               	btfsc	3,2
  4087  064B  2E6F               	goto	i1l1814
  4088  064C  01F5               	clrf	i1___awmod@counter
  4089  064D  0AF5               	incf	i1___awmod@counter,f
  4090  064E                     i1l1804:	
  4091  064E  1BF1               	btfsc	i1___awmod@divisor+1,7
  4092  064F  2E5A               	goto	i1l1806
  4093  0650  3001               	movlw	1
  4094  0651                     u202_25:	
  4095  0651  35F0               	lslf	i1___awmod@divisor,f
  4096  0652  0DF1               	rlf	i1___awmod@divisor+1,f
  4097  0653  0B89               	decfsz	9,f
  4098  0654  2E51               	goto	u202_25
  4099  0655  3001               	movlw	1
  4100  0656  00F4               	movwf	??i1___awmod
  4101  0657  0874               	movf	??i1___awmod,w
  4102  0658  07F5               	addwf	i1___awmod@counter,f
  4103  0659  2E4E               	goto	i1l1804
  4104  065A                     i1l1806:	
  4105  065A  0871               	movf	i1___awmod@divisor+1,w
  4106  065B  0273               	subwf	i1___awmod@dividend+1,w
  4107  065C  1D03               	skipz
  4108  065D  2E60               	goto	u204_25
  4109  065E  0870               	movf	i1___awmod@divisor,w
  4110  065F  0272               	subwf	i1___awmod@dividend,w
  4111  0660                     u204_25:	
  4112  0660  1C03               	skipc
  4113  0661  2E66               	goto	i1l1810
  4114  0662  0870               	movf	i1___awmod@divisor,w
  4115  0663  02F2               	subwf	i1___awmod@dividend,f
  4116  0664  0871               	movf	i1___awmod@divisor+1,w
  4117  0665  3BF3               	subwfb	i1___awmod@dividend+1,f
  4118  0666                     i1l1810:	
  4119  0666  3001               	movlw	1
  4120  0667                     u205_25:	
  4121  0667  36F1               	lsrf	i1___awmod@divisor+1,f
  4122  0668  0CF0               	rrf	i1___awmod@divisor,f
  4123  0669  0B89               	decfsz	9,f
  4124  066A  2E67               	goto	u205_25
  4125  066B  3001               	movlw	1
  4126  066C  02F5               	subwf	i1___awmod@counter,f
  4127  066D  1D03               	btfss	3,2
  4128  066E  2E5A               	goto	i1l1806
  4129  066F                     i1l1814:	
  4130  066F  0876               	movf	i1___awmod@sign,w
  4131  0670  1903               	btfsc	3,2
  4132  0671  2E77               	goto	i1l1818
  4133  0672  09F2               	comf	i1___awmod@dividend,f
  4134  0673  09F3               	comf	i1___awmod@dividend+1,f
  4135  0674  0AF2               	incf	i1___awmod@dividend,f
  4136  0675  1903               	skipnz
  4137  0676  0AF3               	incf	i1___awmod@dividend+1,f
  4138  0677                     i1l1818:	
  4139  0677  0873               	movf	i1___awmod@dividend+1,w
  4140  0678  00F1               	movwf	?i1___awmod+1
  4141  0679  0872               	movf	i1___awmod@dividend,w
  4142  067A  00F0               	movwf	?i1___awmod
  4143  067B  0008               	return
  4144  067C                     __end_ofi1___awmod:	
  4145                           
  4146                           	psect	text21
  4147  04C2                     __ptext21:	
  4148 ;; *************** function i1___awdiv *****************
  4149 ;; Defined at:
  4150 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  divisor         2    0[COMMON] int 
  4153 ;;  dividend        2    2[COMMON] int 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  __awdiv         2    7[COMMON] int 
  4156 ;;  __awdiv         1    6[COMMON] unsigned char 
  4157 ;;  __awdiv         1    5[COMMON] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  2    0[COMMON] int 
  4160 ;; Registers used:
  4161 ;;		wreg, status,2, status,0
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1
  4167 ;;      Params:         4       0       0
  4168 ;;      Locals:         4       0       0
  4169 ;;      Temps:          1       0       0
  4170 ;;      Totals:         9       0       0
  4171 ;;Total ram usage:        9 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		i1_LCDWriteInt
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function i1___awdiv
  4182  04C2                     i1___awdiv:	
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4186  04C2  01F6               	clrf	i1___awdiv@sign
  4187  04C3  1FF1               	btfss	i1___awdiv@divisor+1,7
  4188  04C4  2CCC               	goto	i1l1748
  4189  04C5  09F0               	comf	i1___awdiv@divisor,f
  4190  04C6  09F1               	comf	i1___awdiv@divisor+1,f
  4191  04C7  0AF0               	incf	i1___awdiv@divisor,f
  4192  04C8  1903               	skipnz
  4193  04C9  0AF1               	incf	i1___awdiv@divisor+1,f
  4194  04CA  01F6               	clrf	i1___awdiv@sign
  4195  04CB  0AF6               	incf	i1___awdiv@sign,f
  4196  04CC                     i1l1748:	
  4197  04CC  1FF3               	btfss	i1___awdiv@dividend+1,7
  4198  04CD  2CD7               	goto	i1l1754
  4199  04CE  09F2               	comf	i1___awdiv@dividend,f
  4200  04CF  09F3               	comf	i1___awdiv@dividend+1,f
  4201  04D0  0AF2               	incf	i1___awdiv@dividend,f
  4202  04D1  1903               	skipnz
  4203  04D2  0AF3               	incf	i1___awdiv@dividend+1,f
  4204  04D3  3001               	movlw	1
  4205  04D4  00F4               	movwf	??i1___awdiv
  4206  04D5  0874               	movf	??i1___awdiv,w
  4207  04D6  06F6               	xorwf	i1___awdiv@sign,f
  4208  04D7                     i1l1754:	
  4209  04D7  01F7               	clrf	i1___awdiv@quotient
  4210  04D8  01F8               	clrf	i1___awdiv@quotient+1
  4211  04D9  0870               	movf	i1___awdiv@divisor,w
  4212  04DA  0471               	iorwf	i1___awdiv@divisor+1,w
  4213  04DB  1903               	btfsc	3,2
  4214  04DC  2D06               	goto	i1l1776
  4215  04DD  01F5               	clrf	i1___awdiv@counter
  4216  04DE  0AF5               	incf	i1___awdiv@counter,f
  4217  04DF                     i1l1764:	
  4218  04DF  1BF1               	btfsc	i1___awdiv@divisor+1,7
  4219  04E0  2CEB               	goto	i1l1766
  4220  04E1  3001               	movlw	1
  4221  04E2                     u192_25:	
  4222  04E2  35F0               	lslf	i1___awdiv@divisor,f
  4223  04E3  0DF1               	rlf	i1___awdiv@divisor+1,f
  4224  04E4  0B89               	decfsz	9,f
  4225  04E5  2CE2               	goto	u192_25
  4226  04E6  3001               	movlw	1
  4227  04E7  00F4               	movwf	??i1___awdiv
  4228  04E8  0874               	movf	??i1___awdiv,w
  4229  04E9  07F5               	addwf	i1___awdiv@counter,f
  4230  04EA  2CDF               	goto	i1l1764
  4231  04EB                     i1l1766:	
  4232  04EB  3001               	movlw	1
  4233  04EC                     u194_25:	
  4234  04EC  35F7               	lslf	i1___awdiv@quotient,f
  4235  04ED  0DF8               	rlf	i1___awdiv@quotient+1,f
  4236  04EE  0B89               	decfsz	9,f
  4237  04EF  2CEC               	goto	u194_25
  4238  04F0  0871               	movf	i1___awdiv@divisor+1,w
  4239  04F1  0273               	subwf	i1___awdiv@dividend+1,w
  4240  04F2  1D03               	skipz
  4241  04F3  2CF6               	goto	u195_25
  4242  04F4  0870               	movf	i1___awdiv@divisor,w
  4243  04F5  0272               	subwf	i1___awdiv@dividend,w
  4244  04F6                     u195_25:	
  4245  04F6  1C03               	skipc
  4246  04F7  2CFD               	goto	i1l1772
  4247  04F8  0870               	movf	i1___awdiv@divisor,w
  4248  04F9  02F2               	subwf	i1___awdiv@dividend,f
  4249  04FA  0871               	movf	i1___awdiv@divisor+1,w
  4250  04FB  3BF3               	subwfb	i1___awdiv@dividend+1,f
  4251  04FC  1477               	bsf	i1___awdiv@quotient,0
  4252  04FD                     i1l1772:	
  4253  04FD  3001               	movlw	1
  4254  04FE                     u196_25:	
  4255  04FE  36F1               	lsrf	i1___awdiv@divisor+1,f
  4256  04FF  0CF0               	rrf	i1___awdiv@divisor,f
  4257  0500  0B89               	decfsz	9,f
  4258  0501  2CFE               	goto	u196_25
  4259  0502  3001               	movlw	1
  4260  0503  02F5               	subwf	i1___awdiv@counter,f
  4261  0504  1D03               	btfss	3,2
  4262  0505  2CEB               	goto	i1l1766
  4263  0506                     i1l1776:	
  4264  0506  0876               	movf	i1___awdiv@sign,w
  4265  0507  1903               	btfsc	3,2
  4266  0508  2D0E               	goto	i1l1780
  4267  0509  09F7               	comf	i1___awdiv@quotient,f
  4268  050A  09F8               	comf	i1___awdiv@quotient+1,f
  4269  050B  0AF7               	incf	i1___awdiv@quotient,f
  4270  050C  1903               	skipnz
  4271  050D  0AF8               	incf	i1___awdiv@quotient+1,f
  4272  050E                     i1l1780:	
  4273  050E  0878               	movf	i1___awdiv@quotient+1,w
  4274  050F  00F1               	movwf	?i1___awdiv+1
  4275  0510  0877               	movf	i1___awdiv@quotient,w
  4276  0511  00F0               	movwf	?i1___awdiv
  4277  0512  0008               	return
  4278  0513                     __end_ofi1___awdiv:	
  4279                           
  4280                           	psect	text22
  4281  072B                     __ptext22:	
  4282 ;; *************** function i1_LCDGotoXY *****************
  4283 ;; Defined at:
  4284 ;;		line 351 in file "lcd_hd44780_pic16.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  x               1    wreg     unsigned char 
  4287 ;;  y               1   12[COMMON] unsigned char 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  x               1    0[BANK0 ] unsigned char 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1
  4299 ;;      Params:         1       0       0
  4300 ;;      Locals:         0       1       0
  4301 ;;      Temps:          1       0       0
  4302 ;;      Totals:         2       1       0
  4303 ;;Total ram usage:        3 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    2
  4306 ;; This function calls:
  4307 ;;		i1_LCDByte
  4308 ;; This function is called by:
  4309 ;;		_ISR
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           
  4314                           ;psect for function i1_LCDGotoXY
  4315  072B                     i1_LCDGotoXY:	
  4316                           
  4317                           ;incstack = 0
  4318                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4319                           ;i1LCDGotoXY@x stored from wreg
  4320  072B  0020               	movlb	0	; select bank0
  4321  072C  00A0               	movwf	i1LCDGotoXY@x
  4322                           
  4323                           ;lcd_hd44780_pic16.c: 353: if(x>=20) return;
  4324  072D  3014               	movlw	20
  4325  072E  0220               	subwf	i1LCDGotoXY@x,w
  4326  072F  1803               	btfsc	3,0
  4327  0730  0008               	return
  4328  0731  2F3B               	goto	i1l2016
  4329  0732                     i1l69:	
  4330                           ;lcd_hd44780_pic16.c: 361: case 1:
  4331                           
  4332                           ;lcd_hd44780_pic16.c: 360: break;
  4333                           
  4334                           ;lcd_hd44780_pic16.c: 358: {
  4335                           ;lcd_hd44780_pic16.c: 359: case 0:
  4336                           
  4337                           ;lcd_hd44780_pic16.c: 357: switch(y)
  4338                           
  4339                           
  4340                           ;lcd_hd44780_pic16.c: 362: x|=0b01000000;
  4341  0732  1720               	bsf	i1LCDGotoXY@x,6
  4342                           
  4343                           ;lcd_hd44780_pic16.c: 363: break;
  4344  0733  2F49               	goto	i1l68
  4345  0734                     i1l2010:	
  4346                           ;lcd_hd44780_pic16.c: 364: case 2:
  4347                           
  4348                           
  4349                           ;lcd_hd44780_pic16.c: 365: x+=0x14;
  4350  0734  3014               	movlw	20
  4351  0735  2F37               	goto	L6
  4352  0736                     i1l2012:	
  4353                           ;lcd_hd44780_pic16.c: 367: case 3:
  4354                           
  4355                           ;lcd_hd44780_pic16.c: 366: break;
  4356                           
  4357                           
  4358                           ;lcd_hd44780_pic16.c: 368: x+=0x54;
  4359  0736  3054               	movlw	84
  4360  0737                     L6:	
  4361  0737  00FD               	movwf	??i1_LCDGotoXY
  4362  0738  087D               	movf	??i1_LCDGotoXY,w
  4363  0739  07A0               	addwf	i1LCDGotoXY@x,f
  4364                           
  4365                           ;lcd_hd44780_pic16.c: 370: }
  4366                           
  4367                           ;lcd_hd44780_pic16.c: 369: break;
  4368  073A  2F49               	goto	i1l68
  4369  073B                     i1l2016:	
  4370  073B  087C               	movf	i1LCDGotoXY@y,w
  4371                           
  4372                           ; Switch size 1, requested type "space"
  4373                           ; Number of cases is 4, Range of values is 0 to 3
  4374                           ; switch strategies available:
  4375                           ; Name         Instructions Cycles
  4376                           ; simple_byte           13     7 (average)
  4377                           ; direct_byte           14     6 (fixed)
  4378                           ; jumptable            260     6 (fixed)
  4379                           ;	Chosen strategy is simple_byte
  4380  073C  3A00               	xorlw	0	; case 0
  4381  073D  1903               	skipnz
  4382  073E  2F49               	goto	i1l68
  4383  073F  3A01               	xorlw	1	; case 1
  4384  0740  1903               	skipnz
  4385  0741  2F32               	goto	i1l69
  4386  0742  3A03               	xorlw	3	; case 2
  4387  0743  1903               	skipnz
  4388  0744  2F34               	goto	i1l2010
  4389  0745  3A01               	xorlw	1	; case 3
  4390  0746  1903               	skipnz
  4391  0747  2F36               	goto	i1l2012
  4392  0748  2F49               	goto	i1l68
  4393  0749                     i1l68:	
  4394                           
  4395                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  4396  0749  17A0               	bsf	i1LCDGotoXY@x,7
  4397                           
  4398                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  4399  074A  01F5               	clrf	i1LCDByte@isdata
  4400  074B  0820               	movf	i1LCDGotoXY@x,w
  4401  074C  2513               	fcall	i1_LCDByte
  4402  074D  0008               	return
  4403  074E                     __end_ofi1_LCDGotoXY:	
  4404                           
  4405                           	psect	text23
  4406  0513                     __ptext23:	
  4407 ;; *************** function i1_LCDByte *****************
  4408 ;; Defined at:
  4409 ;;		line 80 in file "lcd_hd44780_pic16.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  c               1    wreg     unsigned char 
  4412 ;;  isdata          1    5[COMMON] unsigned char 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  c               1   10[COMMON] unsigned char 
  4415 ;;  LCDByte         1   11[COMMON] unsigned char 
  4416 ;;  LCDByte         1    9[COMMON] unsigned char 
  4417 ;;  LCDByte         1    8[COMMON] unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0, pclath, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1
  4427 ;;      Params:         1       0       0
  4428 ;;      Locals:         4       0       0
  4429 ;;      Temps:          2       0       0
  4430 ;;      Totals:         7       0       0
  4431 ;;Total ram usage:        7 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    1
  4434 ;; This function calls:
  4435 ;;		i1_LCDBusyLoop
  4436 ;; This function is called by:
  4437 ;;		i1_LCDWriteInt
  4438 ;;		i1_LCDGotoXY
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           
  4443                           ;psect for function i1_LCDByte
  4444  0513                     i1_LCDByte:	
  4445                           
  4446                           ;incstack = 0
  4447                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  4448                           ;i1LCDByte@c stored from wreg
  4449  0513  00FA               	movwf	i1LCDByte@c
  4450                           
  4451                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  4452                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  4453                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  4454  0514  087A               	movf	i1LCDByte@c,w
  4455  0515  00F6               	movwf	??i1_LCDByte
  4456  0516  3004               	movlw	4
  4457  0517                     u185_25:	
  4458  0517  36F6               	lsrf	??i1_LCDByte,f
  4459  0518  0B89               	decfsz	9,f
  4460  0519  2D17               	goto	u185_25
  4461  051A  0876               	movf	??i1_LCDByte,w
  4462  051B  00F7               	movwf	??i1_LCDByte+1
  4463  051C  0877               	movf	??i1_LCDByte+1,w
  4464  051D  00F8               	movwf	i1LCDByte@hn
  4465                           
  4466                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  4467  051E  087A               	movf	i1LCDByte@c,w
  4468  051F  390F               	andlw	15
  4469  0520  00F6               	movwf	??i1_LCDByte
  4470  0521  0876               	movf	??i1_LCDByte,w
  4471  0522  00F9               	movwf	i1LCDByte@ln
  4472                           
  4473                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  4474  0523  0875               	movf	i1LCDByte@isdata,w
  4475  0524  1D03               	btfss	3,2
  4476  0525  2D29               	goto	i1l23
  4477                           
  4478                           ;lcd_hd44780_pic16.c: 96: (RC0=0);
  4479  0526  0020               	movlb	0	; select bank0
  4480  0527  100E               	bcf	14,0	;volatile
  4481  0528  2D2B               	goto	i1l24
  4482  0529                     i1l23:	
  4483                           
  4484                           ;lcd_hd44780_pic16.c: 97: else
  4485                           ;lcd_hd44780_pic16.c: 98: (RC0=1);
  4486  0529  0020               	movlb	0	; select bank0
  4487  052A  140E               	bsf	14,0	;volatile
  4488  052B                     i1l24:	
  4489                           
  4490                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4491  052B  3200               	nop2	;2 cycle nop
  4492                           
  4493                           ;lcd_hd44780_pic16.c: 102: (RC1=1);
  4494  052C  0020               	movlb	0	; select bank0
  4495  052D  148E               	bsf	14,1	;volatile
  4496                           
  4497                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  4498  052E  0878               	movf	i1LCDByte@hn,w
  4499  052F  00F6               	movwf	??i1_LCDByte
  4500  0530  3002               	movlw	2
  4501  0531                     u187_25:	
  4502  0531  35F6               	lslf	??i1_LCDByte,f
  4503  0532  0B89               	decfsz	9,f
  4504  0533  2D31               	goto	u187_25
  4505  0534  080E               	movf	14,w	;volatile
  4506  0535  39C3               	andlw	195
  4507  0536  0476               	iorwf	??i1_LCDByte,w
  4508  0537  00F7               	movwf	??i1_LCDByte+1
  4509  0538  0877               	movf	??i1_LCDByte+1,w
  4510  0539  00FB               	movwf	i1LCDByte@temp
  4511                           
  4512                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  4513  053A  087B               	movf	i1LCDByte@temp,w
  4514  053B  008E               	movwf	14	;volatile
  4515                           
  4516                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4517  053C  3200               	nop2	;2 cycle nop
  4518  053D  3200               	nop2	;2 cycle nop
  4519  053E  0000               	nop
  4520                           
  4521                           ;lcd_hd44780_pic16.c: 113: (RC1=0);
  4522  053F  0020               	movlb	0	; select bank0
  4523  0540  108E               	bcf	14,1	;volatile
  4524                           
  4525                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4526  0541  3200               	nop2	;2 cycle nop
  4527  0542  3200               	nop2	;2 cycle nop
  4528  0543  0000               	nop
  4529                           
  4530                           ;lcd_hd44780_pic16.c: 118: (RC1=1);
  4531  0544  0020               	movlb	0	; select bank0
  4532  0545  148E               	bsf	14,1	;volatile
  4533                           
  4534                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  4535  0546  0879               	movf	i1LCDByte@ln,w
  4536  0547  00F6               	movwf	??i1_LCDByte
  4537  0548  3002               	movlw	2
  4538  0549                     u188_25:	
  4539  0549  35F6               	lslf	??i1_LCDByte,f
  4540  054A  0B89               	decfsz	9,f
  4541  054B  2D49               	goto	u188_25
  4542  054C  080E               	movf	14,w	;volatile
  4543  054D  39C3               	andlw	195
  4544  054E  0476               	iorwf	??i1_LCDByte,w
  4545  054F  00F7               	movwf	??i1_LCDByte+1
  4546  0550  0877               	movf	??i1_LCDByte+1,w
  4547  0551  00FB               	movwf	i1LCDByte@temp
  4548                           
  4549                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  4550  0552  087B               	movf	i1LCDByte@temp,w
  4551  0553  008E               	movwf	14	;volatile
  4552                           
  4553                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4554  0554  3200               	nop2	;2 cycle nop
  4555  0555  3200               	nop2	;2 cycle nop
  4556  0556  0000               	nop
  4557                           
  4558                           ;lcd_hd44780_pic16.c: 128: (RC1=0);
  4559  0557  0020               	movlb	0	; select bank0
  4560  0558  108E               	bcf	14,1	;volatile
  4561                           
  4562                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4563  0559  3200               	nop2	;2 cycle nop
  4564  055A  3200               	nop2	;2 cycle nop
  4565  055B  0000               	nop
  4566                           
  4567                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  4568  055C  241A               	fcall	i1_LCDBusyLoop
  4569  055D  0008               	return
  4570  055E                     __end_ofi1_LCDByte:	
  4571                           
  4572                           	psect	text24
  4573  041A                     __ptext24:	
  4574 ;; *************** function i1_LCDBusyLoop *****************
  4575 ;; Defined at:
  4576 ;;		line 135 in file "lcd_hd44780_pic16.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  4581 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  4582 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1
  4592 ;;      Params:         0       0       0
  4593 ;;      Locals:         3       0       0
  4594 ;;      Temps:          2       0       0
  4595 ;;      Totals:         5       0       0
  4596 ;;Total ram usage:        5 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		i1_LCDByte
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           
  4606                           ;psect for function i1_LCDBusyLoop
  4607  041A                     i1_LCDBusyLoop:	
  4608                           
  4609                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4610                           
  4611                           ;incstack = 0
  4612                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  4613  041A  01F4               	clrf	i1LCDBusyLoop@status
  4614                           
  4615                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<2);
  4616  041B  303C               	movlw	60
  4617  041C  00F0               	movwf	??i1_LCDBusyLoop
  4618  041D  0870               	movf	??i1_LCDBusyLoop,w
  4619  041E  0021               	movlb	1	; select bank1
  4620  041F  048E               	iorwf	14,f	;volatile
  4621                           
  4622                           ;lcd_hd44780_pic16.c: 145: (RA0=1);
  4623  0420  0020               	movlb	0	; select bank0
  4624  0421  140C               	bsf	12,0	;volatile
  4625                           
  4626                           ;lcd_hd44780_pic16.c: 146: (RC0=0);
  4627  0422  100E               	bcf	14,0	;volatile
  4628                           
  4629                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4630  0423  3200               	nop2	;2 cycle nop
  4631  0424                     i1l1450:	
  4632                           ;lcd_hd44780_pic16.c: 153: do
  4633                           
  4634                           
  4635                           ;lcd_hd44780_pic16.c: 154: {
  4636                           ;lcd_hd44780_pic16.c: 156: (RC1=1);
  4637  0424  0020               	movlb	0	; select bank0
  4638  0425  148E               	bsf	14,1	;volatile
  4639                           
  4640                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4641  0426  3200               	nop2	;2 cycle nop
  4642                           
  4643                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>2);
  4644  0427  0020               	movlb	0	; select bank0
  4645  0428  080E               	movf	14,w	;volatile
  4646  0429  00F0               	movwf	??i1_LCDBusyLoop
  4647  042A  3002               	movlw	2
  4648  042B                     u134_25:	
  4649  042B  36F0               	lsrf	??i1_LCDBusyLoop,f
  4650  042C  0B89               	decfsz	9,f
  4651  042D  2C2B               	goto	u134_25
  4652  042E  0870               	movf	??i1_LCDBusyLoop,w
  4653  042F  00F1               	movwf	??i1_LCDBusyLoop+1
  4654  0430  0871               	movf	??i1_LCDBusyLoop+1,w
  4655  0431  00F4               	movwf	i1LCDBusyLoop@status
  4656                           
  4657                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4658  0432  0874               	movf	i1LCDBusyLoop@status,w
  4659  0433  00F0               	movwf	??i1_LCDBusyLoop
  4660  0434  3003               	movlw	3
  4661  0435                     u135_25:	
  4662  0435  35F0               	lslf	??i1_LCDBusyLoop,f
  4663  0436  3EFF               	addlw	-1
  4664  0437  1D03               	skipz
  4665  0438  2C35               	goto	u135_25
  4666  0439  3570               	lslf	??i1_LCDBusyLoop,w
  4667  043A  00F1               	movwf	??i1_LCDBusyLoop+1
  4668  043B  0871               	movf	??i1_LCDBusyLoop+1,w
  4669  043C  00F4               	movwf	i1LCDBusyLoop@status
  4670                           
  4671                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4672  043D  3200               	nop2	;2 cycle nop
  4673                           
  4674                           ;lcd_hd44780_pic16.c: 167: (RC1=0);
  4675  043E  0020               	movlb	0	; select bank0
  4676  043F  108E               	bcf	14,1	;volatile
  4677                           
  4678                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4679  0440  3200               	nop2	;2 cycle nop
  4680  0441  3200               	nop2	;2 cycle nop
  4681  0442  0000               	nop
  4682                           
  4683                           ;lcd_hd44780_pic16.c: 170: (RC1=1);
  4684  0443  0020               	movlb	0	; select bank0
  4685  0444  148E               	bsf	14,1	;volatile
  4686                           
  4687                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4688  0445  3200               	nop2	;2 cycle nop
  4689                           
  4690                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>2);
  4691  0446  0020               	movlb	0	; select bank0
  4692  0447  080E               	movf	14,w	;volatile
  4693  0448  00F0               	movwf	??i1_LCDBusyLoop
  4694  0449  3002               	movlw	2
  4695  044A                     u136_25:	
  4696  044A  36F0               	lsrf	??i1_LCDBusyLoop,f
  4697  044B  0B89               	decfsz	9,f
  4698  044C  2C4A               	goto	u136_25
  4699  044D  0870               	movf	??i1_LCDBusyLoop,w
  4700  044E  00F1               	movwf	??i1_LCDBusyLoop+1
  4701  044F  0871               	movf	??i1_LCDBusyLoop+1,w
  4702  0450  00F3               	movwf	i1LCDBusyLoop@temp
  4703                           
  4704                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  4705  0451  300F               	movlw	15
  4706  0452  00F0               	movwf	??i1_LCDBusyLoop
  4707  0453  0870               	movf	??i1_LCDBusyLoop,w
  4708  0454  05F3               	andwf	i1LCDBusyLoop@temp,f
  4709                           
  4710                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  4711  0455  0874               	movf	i1LCDBusyLoop@status,w
  4712  0456  0473               	iorwf	i1LCDBusyLoop@temp,w
  4713  0457  00F0               	movwf	??i1_LCDBusyLoop
  4714  0458  0870               	movf	??i1_LCDBusyLoop,w
  4715  0459  00F4               	movwf	i1LCDBusyLoop@status
  4716                           
  4717                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  4718  045A  0874               	movf	i1LCDBusyLoop@status,w
  4719  045B  3980               	andlw	128
  4720  045C  00F0               	movwf	??i1_LCDBusyLoop
  4721  045D  0870               	movf	??i1_LCDBusyLoop,w
  4722  045E  00F2               	movwf	i1LCDBusyLoop@busy
  4723                           
  4724                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4725  045F  3200               	nop2	;2 cycle nop
  4726                           
  4727                           ;lcd_hd44780_pic16.c: 182: (RC1=0);
  4728  0460  0020               	movlb	0	; select bank0
  4729  0461  108E               	bcf	14,1	;volatile
  4730                           
  4731                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4732  0462  3200               	nop2	;2 cycle nop
  4733  0463  3200               	nop2	;2 cycle nop
  4734  0464  0000               	nop
  4735                           
  4736                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  4737  0465  0872               	movf	i1LCDBusyLoop@busy,w
  4738  0466  1D03               	btfss	3,2
  4739  0467  2C24               	goto	i1l1450
  4740                           
  4741                           ;lcd_hd44780_pic16.c: 186: (RA0=0);
  4742  0468  0020               	movlb	0	; select bank0
  4743  0469  100C               	bcf	12,0	;volatile
  4744                           
  4745                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<2));
  4746  046A  30C3               	movlw	195
  4747  046B  00F0               	movwf	??i1_LCDBusyLoop
  4748  046C  0870               	movf	??i1_LCDBusyLoop,w
  4749  046D  0021               	movlb	1	; select bank1
  4750  046E  058E               	andwf	14,f	;volatile
  4751  046F  0008               	return
  4752  0470                     __end_ofi1_LCDBusyLoop:	
  4753  007E                     btemp	set	126	;btemp
  4754  007E                     int$flags	set	126
  4755  007E                     wtemp	set	126
  4756  007E                     wtemp0	set	126
  4757  0080                     wtemp1	set	128
  4758  0082                     wtemp2	set	130
  4759  0084                     wtemp3	set	132
  4760  0086                     wtemp4	set	134
  4761  0088                     wtemp5	set	136
  4762  007F                     wtemp6	set	127
  4763  007E                     ttemp	set	126
  4764  007E                     ttemp0	set	126
  4765  0081                     ttemp1	set	129
  4766  0084                     ttemp2	set	132
  4767  0087                     ttemp3	set	135
  4768  007F                     ttemp4	set	127
  4769  007E                     ltemp	set	126
  4770  007E                     ltemp0	set	126
  4771  0082                     ltemp1	set	130
  4772  0086                     ltemp2	set	134
  4773  0080                     ltemp3	set	128


Data Sizes:
    Strings     26
    Constant    0
    Data        16
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      65
    BANK1            32      9      17

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LM35ReadTemp
    _LM35ReadTemp->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _LM35ReadTemp->___fttol

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13227
                                              6 BANK1      3     3      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                       _LM35ReadTemp
                     _TriggerOutInit
                     _TuneButtonInit
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TriggerOutInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35ReadTemp                                         4     2      2    5050
                                             51 BANK0      4     2      2
                            _ReadADC
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2078
                                             23 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             43 BANK0      8     4      4
                                              0 BANK1      6     6      0
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2446
                                             27 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1992
                                             15 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2      44
                                             15 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1734
                                             27 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2423
                                             27 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                             15 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                             15 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1250
                                             27 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1727
                                             27 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1043
                                             20 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                             15 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0    1872
                                             12 BANK0      3     3      0
                        i1_LCDGotoXY
                      i1_LCDWriteInt
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    1423
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     449
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     353
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LM35ReadTemp
     _ReadADC
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _TriggerOutInit
   _TuneButtonInit

 _ISR (ROOT)
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      60       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     37      41       6       81.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      9      11       8       53.1%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      60       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jun 15 01:58:08 2016

             ?_LCDBusyLoop 0070                 __CFG_CP$ON 0000                         l23 0574  
                       l24 0575                         l68 0726                         l69 070F  
              __CFG_CPD$ON 0000               ___awdiv@sign 0035                __CFG_LVP$ON 0000  
                      l129 0103                        l155 06FE                        l414 03A4  
                      l415 03AC                        l407 0391                        l498 0244  
                      _RA0 0060                        _RA1 0061                        _RC0 0070  
                      _RA4 0064                        _RC1 0071                        _RA5 0065  
                      _ISR 0004            __end_of_ADCInit 078E               ___awmod@sign 0035  
             __CFG_BORV$LO 0000                        wreg 0009               __CFG_IESO$ON 0000  
    LM35ReadTemp@adc_value 0055    LCDWriteInt@field_length 003D            __end_of_LCDByte 05A8  
          __end_of_LCDInit 05F1               ?_LCDWriteInt 003B                       ?_ISR 0070  
              LCDByte@temp 003A                       l2104 01E2                       l2130 023A  
                     l2122 021B                       l1420 037D                       l1412 0367  
                     l2132 0248                       l2124 022C                       l1416 036E  
                     l2136 0256                       l1610 0632                       l1602 0621  
                     l1522 06EA                       l1426 0396                       l1418 0378  
                     l1372 03CE                       l1540 047B                       l1428 039E  
                     l1620 012B                       l1606 062A                       l2182 00AA  
                     l1546 0486                       l1650 0198                       l1642 0184  
                     l1626 0141                       l2194 00DC                       l1572 04BD  
                     l1564 04AC                       l1556 048E                       l1558 049A  
                     l1654 01A0                       l1638 017C                       l1568 04B5  
                     l1584 05FC                       l1914 0287                       l1940 0711  
                     l1596 0609                       l1588 0603                       l1924 02C3  
                     l1916 02B0                       l1942 0713                       l1598 0615  
                     l1946 0718                       l1890 06AA                       l1886 06A5  
                     l1894 067C                       STR_1 074E                       STR_2 0760  
                     STR_3 075C                       STR_4 0753                       STR_5 0760  
                     STR_6 0764                       STR_7 0758                       STR_8 0764  
                     u1205 03F4                       u2140 0271                       u1405 057B  
                     u1325 03B3                       u1245 0373                       u1415 0593  
                     u1185 03D5                       u1505 04A5                       u1265 038C  
                     u1195 03DF                       u1515 04AD                       u1605 0622  
                     u1285 0399                       u1385 0563                       u2185 02D0  
                     u2425 023B                       u1475 0491                       u1725 01A1  
                     u2365 01EA                       u1495 049B                       u1575 060C  
                     u1735 01A7                       u1655 014D                       u2455 00BB  
                     u1665 015D                       u2465 00CC                       u1595 061B  
                     u2395 021C                       u2475 00F4                       u1685 0185  
                     u2487 06F9                       u1695 018B                       u2497 05AE  
                     i1l23 0529                       i1l24 052B                       i1l68 0749  
                     i1l69 0732               __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000  
                     _main 0061               ___ftpack@arg 002F     __end_of_TuneButtonInit 079A  
       __size_of_LCDGotoXY 0023               ___ftpack@exp 0032                       fsr0h 0005  
                     fsr1h 0007                       fsr0l 0004                       indf0 0000  
                     indf1 0001                       fsr1l 0006                       btemp 007E  
            __CFG_BOREN$ON 0000                       ltemp 007E                       start 0047  
                     ttemp 007E                       wtemp 007E  i1LCDWriteInt@field_length 0022  
             ___ftmul@cntr 0049               ___ftmul@sign 004A            __end_of_ReadADC 0708  
                    ??_ISR 002C         __size_ofi1_LCDByte 004B               ___fttol@exp1 00A5  
             ___fttol@lval 00A1              __CFG_PLLEN$ON 0000               ?i1_LCDGotoXY 007C  
                    ?_main 0070             i1___awdiv@sign 0076            __end_of___awdiv 04C2  
            __CFG_WDTE$OFF 0000            __end_of___awmod 0637               LCDInit@style 003D  
          __end_of___ftmul 01C7            ___awdiv@divisor 002F            __end_of___fttol 0266  
                    i1l124 0042                      i1l119 0041            ___awdiv@counter 0034  
                    _PORTC 000E                      _TRISC 008E             i1___awmod@sign 0076  
            ___ftpack@sign 0033       __end_of_LM35ReadTemp 06E1                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            ?_TuneButtonInit 0070         __size_ofi1___awdiv 0051  
       __size_ofi1___awmod 0045             __CFG_MCLRE$OFF 0000            __initialization 0048  
             __end_of_main 0114                  ??_ADCInit 002F                     ??_main 00A6  
            ___fttol@sign1 00A0          __end_of_LCDGotoXY 072B              LCDByte@isdata 0034  
                ??_LCDByte 0035                  ??_LCDInit 003B                     _ADRESH 009C  
                   _ADRESL 009B           ___awdiv@dividend 0031          __end_ofi1_LCDByte 055E  
         __end_of___ftpack 03C3     __size_ofi1_LCDBusyLoop 0056                     i1l2010 0734  
                   i1l2012 0736                     i1l2030 0022                     i1l2016 073B  
                   i1l2026 000F                     i1l2036 003A                     i1l1450 0424  
                   i1l1810 0666                     i1l1804 064E                     i1l1806 065A  
                   i1l1814 066F                     i1l1754 04D7                     i1l1818 0677  
                   i1l1780 050E                     i1l1772 04FD                     i1l1764 04DF  
                   i1l1748 04CC                     u202_25 0651                     i1l1766 04EB  
                   i1l1776 0506                     i1l1792 0641                     i1l1796 0648  
                   i1l1984 0303                     i1l1994 033F                     i1l1986 032C  
      i1LCDBusyLoop@status 0074                     u204_25 0660                     u221_20 02EC  
                   u205_25 0667                     u134_25 042B                     u230_25 001D  
                   u135_25 0435                     u136_25 044A                     u225_25 034C  
                   u250_27 0035                     u192_25 04E2                     u185_25 0517  
         __end_of___lwtoft 077C                     u194_25 04EC                     u187_25 0531  
                   u195_25 04F6                     u188_25 0549                     u196_25 04FE  
                ??_ReadADC 0031              _tuneUpTempDir 005E             __CFG_PWRTE$OFF 0000  
           _LCDWriteString 067C                  ??___awdiv 0033             __CFG_STVREN$ON 0000  
                ??___awmod 0033                  ??___ftmul 0041                  ??___fttol 004F  
   __size_ofi1_LCDWriteInt 007C       __size_of_LCDBusyLoop 0057           i1LCDWriteInt@val 0020  
         i1LCDWriteInt@str 0023           ___awdiv@quotient 0036            ___awmod@divisor 002F  
          ___awmod@counter 0034      ___ftmul@f3_as_product 0046          __end_ofi1___awdiv 0513  
        __end_ofi1___awmod 067C               LCDWriteInt@i 0047               LCDWriteInt@j 0045  
         ??_TriggerOutInit 002F       __size_of_LCDWriteInt 007C    __end_of__initialization 005E  
   __end_of_LCDWriteString 06B9                  LCDByte@hn 0037                  LCDByte@ln 0038  
               ___ftmul@f1 003B                 ___ftmul@f2 003E                 ___fttol@f1 004B  
           __pcstackCOMMON 0070               __pidataBANK0 079A               __pidataBANK1 07A2  
            i1_LCDBusyLoop 041A                 ___lwtoft@c 0037               i1LCDGotoXY@x 0020  
             i1LCDGotoXY@y 007C          i1LCDBusyLoop@busy 0072          i1LCDBusyLoop@temp 0073  
     __size_ofi1_LCDGotoXY 0023      __size_of_LM35ReadTemp 0028             i1LCDWriteInt@i 002A  
           i1LCDWriteInt@j 0028            i1LCDByte@isdata 0075              i1_LCDWriteInt 02E2  
               __pbssBANK0 005F            ?_LCDWriteString 003B                 __pmaintext 0061  
           ?i1_LCDBusyLoop 0070                 __pintentry 0004                    _ADCInit 077C  
             _LM35ReadTemp 06B9                  ?___ftpack 002F                  ?___lwtoft 0037  
       i1___awdiv@dividend 0072                    _LCDByte 055E                    _LCDInit 05A8  
         ??_TuneButtonInit 002F             ?i1_LCDWriteInt 0020                    _ReadADC 06E1  
       i1___awdiv@quotient 0077                    ___cgram 00A9                    ___awdiv 0470  
                  ___awmod 05F1                    ___ftmul 0114                    ___fttol 01C7  
               ??___ftpack 0034                    __ptext1 078E                    __ptext2 07B0  
                  __ptext3 06B9                    __ptext4 0768                    __ptext5 01C7  
                  __ptext6 0114                    __ptext7 035E                    __ptext8 06E1  
                  __ptext9 067C                 ??___lwtoft 003A                    _curTemp 005F  
             __size_of_ISR 0043           ___awmod@dividend 0031                  _IOCAFbits 0393  
                _IOCAPbits 0391                  _LCDGotoXY 0708       end_of_initialization 005E  
                  init_ram 07AA                    initloop 07AB                  i1_LCDByte 0513  
          ??i1_LCDBusyLoop 0070               __pstringtext 074E          LCDWriteString@msg 003B  
         __CFG_FOSC$INTOSC 0000                  _TRISAbits 008C                  _TRISCbits 008E  
          ??i1_LCDWriteInt 007C                 ?_LCDGotoXY 003B                  i1___awdiv 04C2  
                i1___awmod 0637                  ReadADC@ch 0032                 LCDInit@__i 003E  
               ?i1_LCDByte 0075                 LCDGotoXY@x 003D                 LCDGotoXY@y 003B  
               _tuneUpTemp 005C                ___ftmul@exp 0045              ??_LCDBusyLoop 002F  
      start_initialization 0048                __end_of_ISR 0047                 ?i1___awdiv 0070  
               ?i1___awmod 0070              ??_LCDWriteInt 003E           ??_LCDWriteString 003D  
            i1LCDByte@temp 007B                __pdataBANK0 0057                __pdataBANK1 00A9  
       i1___awmod@dividend 0072                   ?_ADCInit 0070              ??i1_LCDGotoXY 007D  
      __end_of_LCDBusyLoop 041A                   ?_LCDByte 0034                   ?_LCDInit 0070  
        __size_of___ftpack 0065                   LCDByte@c 0039                  ___latbits 0000  
        __size_of___lwtoft 0014              __pcstackBANK0 0020              __pcstackBANK1 00A0  
              ??_LCDGotoXY 003C                i1LCDByte@hn 0078                i1LCDByte@ln 0079  
         LCDWriteInt@F2516 0057                ??i1_LCDByte 0076                   ?_ReadADC 002F  
      __end_of_LCDWriteInt 02E2    __size_of_TriggerOutInit 0006                   ?___awdiv 002F  
                 ?___awmod 002F                   ?___ftmul 003B                   ?___fttol 004B  
        i1___awdiv@divisor 0070          i1___awdiv@counter 0075        __end_ofi1_LCDGotoXY 074E  
          LCDBusyLoop@busy 0031                ??i1___awdiv 0074                ??i1___awmod 0074  
          LCDBusyLoop@temp 0032                _LCDBusyLoop 03C3           LCDWriteString@cc 003E  
         __size_of_ADCInit 0012                 _ADCON0bits 009D                 _ADCON1bits 009E  
         __size_of_LCDByte 004A           __size_of_LCDInit 0049                _LCDWriteInt 0266  
         __size_of_ReadADC 0027    __size_of_TuneButtonInit 000C      __end_ofi1_LCDBusyLoop 0470  
        i1___awmod@divisor 0070          i1___awmod@counter 0075           __size_of___awdiv 0052  
         __size_of___awmod 0046           __size_of___ftmul 00B3           __size_of___fttol 009F  
        LCDBusyLoop@status 0033                   ___ftpack 035E                i1_LCDGotoXY 072B  
               _ANSELAbits 018C                   ___lwtoft 0768                 i1LCDByte@c 007A  
                 __ptext10 0266                   __ptext11 05F1                   __ptext20 0637  
                 __ptext12 0470                   __ptext21 04C2                   __ptext13 05A8  
                 __ptext22 072B                   __ptext14 0708                   __ptext23 0513  
                 __ptext15 055E                   __ptext24 041A                   __ptext16 03C3  
                 __ptext17 077C                   __ptext19 02E2      __end_ofi1_LCDWriteInt 035E  
            __size_of_main 00B3             _TriggerOutInit 07B0                   int$flags 007E  
            ?_LM35ReadTemp 0053                 _INTCONbits 000B                   intlevel1 0000  
           LCDWriteInt@val 003B             LCDWriteInt@str 0040     __end_of_TriggerOutInit 07B6  
        __CFG_CLKOUTEN$OFF 0000             ??_LM35ReadTemp 0055            ?_TriggerOutInit 0070  
           _TuneButtonInit 078E    __size_of_LCDWriteString 003D  
