

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jun 08 00:38:27 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000E                     	;# 
    54  0011                     	;# 
    55  0012                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  008C                     	;# 
    68  008E                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0097                     	;# 
    74  0098                     	;# 
    75  0099                     	;# 
    76  009A                     	;# 
    77  009B                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009E                     	;# 
    82  010C                     	;# 
    83  010E                     	;# 
    84  0111                     	;# 
    85  0112                     	;# 
    86  0113                     	;# 
    87  0114                     	;# 
    88  0115                     	;# 
    89  0116                     	;# 
    90  0117                     	;# 
    91  0118                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011B                     	;# 
    95  011D                     	;# 
    96  011D                     	;# 
    97  018C                     	;# 
    98  018E                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019D                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  020C                     	;# 
   120  020E                     	;# 
   121  0211                     	;# 
   122  0211                     	;# 
   123  0212                     	;# 
   124  0212                     	;# 
   125  0213                     	;# 
   126  0213                     	;# 
   127  0214                     	;# 
   128  0214                     	;# 
   129  0215                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0216                     	;# 
   133  0216                     	;# 
   134  0217                     	;# 
   135  0217                     	;# 
   136  0291                     	;# 
   137  0291                     	;# 
   138  0292                     	;# 
   139  0293                     	;# 
   140  0294                     	;# 
   141  0295                     	;# 
   142  0295                     	;# 
   143  0296                     	;# 
   144  0391                     	;# 
   145  0392                     	;# 
   146  0393                     	;# 
   147  039A                     	;# 
   148  039C                     	;# 
   149  039D                     	;# 
   150  039E                     	;# 
   151  039F                     	;# 
   152  0FE4                     	;# 
   153  0FE5                     	;# 
   154  0FE6                     	;# 
   155  0FE7                     	;# 
   156  0FE8                     	;# 
   157  0FE9                     	;# 
   158  0FEA                     	;# 
   159  0FEB                     	;# 
   160  0FED                     	;# 
   161  0FEE                     	;# 
   162  0FEF                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000E                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001E                     	;# 
   189  001F                     	;# 
   190  008C                     	;# 
   191  008E                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  010C                     	;# 
   206  010E                     	;# 
   207  0111                     	;# 
   208  0112                     	;# 
   209  0113                     	;# 
   210  0114                     	;# 
   211  0115                     	;# 
   212  0116                     	;# 
   213  0117                     	;# 
   214  0118                     	;# 
   215  0119                     	;# 
   216  011A                     	;# 
   217  011B                     	;# 
   218  011D                     	;# 
   219  011D                     	;# 
   220  018C                     	;# 
   221  018E                     	;# 
   222  0191                     	;# 
   223  0191                     	;# 
   224  0192                     	;# 
   225  0193                     	;# 
   226  0193                     	;# 
   227  0193                     	;# 
   228  0194                     	;# 
   229  0195                     	;# 
   230  0196                     	;# 
   231  0199                     	;# 
   232  019A                     	;# 
   233  019B                     	;# 
   234  019B                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019C                     	;# 
   238  019C                     	;# 
   239  019D                     	;# 
   240  019E                     	;# 
   241  019F                     	;# 
   242  020C                     	;# 
   243  020E                     	;# 
   244  0211                     	;# 
   245  0211                     	;# 
   246  0212                     	;# 
   247  0212                     	;# 
   248  0213                     	;# 
   249  0213                     	;# 
   250  0214                     	;# 
   251  0214                     	;# 
   252  0215                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0216                     	;# 
   256  0216                     	;# 
   257  0217                     	;# 
   258  0217                     	;# 
   259  0291                     	;# 
   260  0291                     	;# 
   261  0292                     	;# 
   262  0293                     	;# 
   263  0294                     	;# 
   264  0295                     	;# 
   265  0295                     	;# 
   266  0296                     	;# 
   267  0391                     	;# 
   268  0392                     	;# 
   269  0393                     	;# 
   270  039A                     	;# 
   271  039C                     	;# 
   272  039D                     	;# 
   273  039E                     	;# 
   274  039F                     	;# 
   275  0FE4                     	;# 
   276  0FE5                     	;# 
   277  0FE6                     	;# 
   278  0FE7                     	;# 
   279  0FE8                     	;# 
   280  0FE9                     	;# 
   281  0FEA                     	;# 
   282  0FEB                     	;# 
   283  0FED                     	;# 
   284  0FEE                     	;# 
   285  0FEF                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000E                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0015                     	;# 
   303  0016                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001C                     	;# 
   311  001E                     	;# 
   312  001F                     	;# 
   313  008C                     	;# 
   314  008E                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0095                     	;# 
   318  0096                     	;# 
   319  0097                     	;# 
   320  0098                     	;# 
   321  0099                     	;# 
   322  009A                     	;# 
   323  009B                     	;# 
   324  009B                     	;# 
   325  009C                     	;# 
   326  009D                     	;# 
   327  009E                     	;# 
   328  010C                     	;# 
   329  010E                     	;# 
   330  0111                     	;# 
   331  0112                     	;# 
   332  0113                     	;# 
   333  0114                     	;# 
   334  0115                     	;# 
   335  0116                     	;# 
   336  0117                     	;# 
   337  0118                     	;# 
   338  0119                     	;# 
   339  011A                     	;# 
   340  011B                     	;# 
   341  011D                     	;# 
   342  011D                     	;# 
   343  018C                     	;# 
   344  018E                     	;# 
   345  0191                     	;# 
   346  0191                     	;# 
   347  0192                     	;# 
   348  0193                     	;# 
   349  0193                     	;# 
   350  0193                     	;# 
   351  0194                     	;# 
   352  0195                     	;# 
   353  0196                     	;# 
   354  0199                     	;# 
   355  019A                     	;# 
   356  019B                     	;# 
   357  019B                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019C                     	;# 
   361  019C                     	;# 
   362  019D                     	;# 
   363  019E                     	;# 
   364  019F                     	;# 
   365  020C                     	;# 
   366  020E                     	;# 
   367  0211                     	;# 
   368  0211                     	;# 
   369  0212                     	;# 
   370  0212                     	;# 
   371  0213                     	;# 
   372  0213                     	;# 
   373  0214                     	;# 
   374  0214                     	;# 
   375  0215                     	;# 
   376  0215                     	;# 
   377  0215                     	;# 
   378  0216                     	;# 
   379  0216                     	;# 
   380  0217                     	;# 
   381  0217                     	;# 
   382  0291                     	;# 
   383  0291                     	;# 
   384  0292                     	;# 
   385  0293                     	;# 
   386  0294                     	;# 
   387  0295                     	;# 
   388  0295                     	;# 
   389  0296                     	;# 
   390  0391                     	;# 
   391  0392                     	;# 
   392  0393                     	;# 
   393  039A                     	;# 
   394  039C                     	;# 
   395  039D                     	;# 
   396  039E                     	;# 
   397  039F                     	;# 
   398  0FE4                     	;# 
   399  0FE5                     	;# 
   400  0FE6                     	;# 
   401  0FE7                     	;# 
   402  0FE8                     	;# 
   403  0FE9                     	;# 
   404  0FEA                     	;# 
   405  0FEB                     	;# 
   406  0FED                     	;# 
   407  0FEE                     	;# 
   408  0FEF                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0008                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000E                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  008C                     	;# 
   437  008E                     	;# 
   438  0091                     	;# 
   439  0092                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009B                     	;# 
   448  009C                     	;# 
   449  009D                     	;# 
   450  009E                     	;# 
   451  010C                     	;# 
   452  010E                     	;# 
   453  0111                     	;# 
   454  0112                     	;# 
   455  0113                     	;# 
   456  0114                     	;# 
   457  0115                     	;# 
   458  0116                     	;# 
   459  0117                     	;# 
   460  0118                     	;# 
   461  0119                     	;# 
   462  011A                     	;# 
   463  011B                     	;# 
   464  011D                     	;# 
   465  011D                     	;# 
   466  018C                     	;# 
   467  018E                     	;# 
   468  0191                     	;# 
   469  0191                     	;# 
   470  0192                     	;# 
   471  0193                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0194                     	;# 
   475  0195                     	;# 
   476  0196                     	;# 
   477  0199                     	;# 
   478  019A                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019F                     	;# 
   488  020C                     	;# 
   489  020E                     	;# 
   490  0211                     	;# 
   491  0211                     	;# 
   492  0212                     	;# 
   493  0212                     	;# 
   494  0213                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0214                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0216                     	;# 
   502  0216                     	;# 
   503  0217                     	;# 
   504  0217                     	;# 
   505  0291                     	;# 
   506  0291                     	;# 
   507  0292                     	;# 
   508  0293                     	;# 
   509  0294                     	;# 
   510  0295                     	;# 
   511  0295                     	;# 
   512  0296                     	;# 
   513  0391                     	;# 
   514  0392                     	;# 
   515  0393                     	;# 
   516  039A                     	;# 
   517  039C                     	;# 
   518  039D                     	;# 
   519  039E                     	;# 
   520  039F                     	;# 
   521  0FE4                     	;# 
   522  0FE5                     	;# 
   523  0FE6                     	;# 
   524  0FE7                     	;# 
   525  0FE8                     	;# 
   526  0FE9                     	;# 
   527  0FEA                     	;# 
   528  0FEB                     	;# 
   529  0FED                     	;# 
   530  0FEE                     	;# 
   531  0FEF                     	;# 
   532                           
   533                           	psect	idataBANK0
   534  0777                     __pidataBANK0:	
   535                           
   536                           ;initializer for ___cgram
   537  0777  340C               	retlw	12
   538  0778  3412               	retlw	18
   539  0779  3412               	retlw	18
   540  077A  340C               	retlw	12
   541  077B  3400               	retlw	0
   542  077C  3400               	retlw	0
   543  077D  3400               	retlw	0
   544  077E  3400               	retlw	0
   545                           
   546                           ;initializer for LCDWriteInt@F2516
   547  077F  34F0               	retlw	240
   548  0780  34F0               	retlw	240
   549  0781  34F0               	retlw	240
   550  0782  34F0               	retlw	240
   551  0783  34F0               	retlw	240
   552                           
   553                           ;initializer for _tuneTempDir
   554  0784  3401               	retlw	1
   555  000B                     _INTCONbits	set	11
   556  000E                     _PORTC	set	14
   557  0060                     _RA0	set	96
   558  0061                     _RA1	set	97
   559  0065                     _RA5	set	101
   560  0070                     _RC0	set	112
   561  0071                     _RC1	set	113
   562  009D                     _ADCON0bits	set	157
   563  009E                     _ADCON1bits	set	158
   564  009C                     _ADRESH	set	156
   565  009B                     _ADRESL	set	155
   566  008C                     _TRISAbits	set	140
   567  008E                     _TRISC	set	142
   568  008E                     _TRISCbits	set	142
   569  018C                     _ANSELAbits	set	396
   570  0393                     _IOCAFbits	set	915
   571  0391                     _IOCAPbits	set	913
   572                           
   573                           	psect	stringtext
   574  072F                     __pstringtext:	
   575  072F                     STR_1:	
   576  072F  3454               	retlw	84	;'T'
   577  0730  3468               	retlw	104	;'h'
   578  0731  3465               	retlw	101	;'e'
   579  0732  3472               	retlw	114	;'r'
   580  0733  346D               	retlw	109	;'m'
   581  0734  346F               	retlw	111	;'o'
   582  0735  346D               	retlw	109	;'m'
   583  0736  3465               	retlw	101	;'e'
   584  0737  3474               	retlw	116	;'t'
   585  0738  3465               	retlw	101	;'e'
   586  0739  3472               	retlw	114	;'r'
   587  073A  3420               	retlw	32	;' '
   588  073B  3473               	retlw	115	;'s'
   589  073C  3465               	retlw	101	;'e'
   590  073D  3474               	retlw	116	;'t'
   591  073E  343A               	retlw	58	;':'
   592  073F  3400               	retlw	0
   593  0740                     STR_3:	
   594  0740  3454               	retlw	84	;'T'
   595  0741  3468               	retlw	104	;'h'
   596  0742  3465               	retlw	101	;'e'
   597  0743  3472               	retlw	114	;'r'
   598  0744  346D               	retlw	109	;'m'
   599  0745  346F               	retlw	111	;'o'
   600  0746  346D               	retlw	109	;'m'
   601  0747  3465               	retlw	101	;'e'
   602  0748  3474               	retlw	116	;'t'
   603  0749  3465               	retlw	101	;'e'
   604  074A  3472               	retlw	114	;'r'
   605  074B  343A               	retlw	58	;':'
   606  074C  3400               	retlw	0
   607  074D                     STR_2:	
   608  074D  3425               	retlw	37	;'%'
   609  074E  3430               	retlw	48	;'0'
   610  074F  3443               	retlw	67	;'C'
   611  0750  3400               	retlw	0
   612  074D                     
   613                           ; #config settings
   614  0000                     
   615                           	psect	cinit
   616  005A                     start_initialization:	
   617  005A                     __initialization:	
   618                           
   619                           ; Clear objects allocated to BANK0
   620  005A  01DC               	clrf	__pbssBANK0& (0+127)
   621  005B  01DD               	clrf	(__pbssBANK0+1)& (0+127)
   622  005C  01DE               	clrf	(__pbssBANK0+2)& (0+127)
   623  005D  01DF               	clrf	(__pbssBANK0+3)& (0+127)
   624                           
   625                           ; Initialize objects allocated to BANK0
   626  005E  3077               	movlw	low __pidataBANK0
   627  005F  0084               	movwf	4
   628  0060  3087               	movlw	(high __pidataBANK0)| (0+128)
   629  0061  0085               	movwf	5
   630  0062  304E               	movlw	low __pdataBANK0
   631  0063  0086               	movwf	6
   632  0064  3000               	movlw	high __pdataBANK0
   633  0065  0087               	movwf	7
   634  0066  300E               	movlw	14
   635  0067  278F               	fcall	init_ram
   636  0068                     end_of_initialization:	
   637                           ;End of C runtime variable initialization code
   638                           
   639  0068                     __end_of__initialization:	
   640  0068  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   641  0069  0020               	movlb	0
   642  006A  2B02               	ljmp	_main	;jump to C main() function
   643                           
   644                           	psect	bssBANK0
   645  005C                     __pbssBANK0:	
   646  005C                     _curTemp:	
   647  005C                     	ds	2
   648  005E                     _tuneTemp:	
   649  005E                     	ds	2
   650                           
   651                           	psect	dataBANK0
   652  004E                     __pdataBANK0:	
   653  004E                     ___cgram:	
   654  004E                     	ds	8
   655  0056                     LCDWriteInt@F2516:	
   656  0056                     	ds	5
   657  005B                     _tuneTempDir:	
   658  005B                     	ds	1
   659                           
   660                           	psect	inittext
   661  078F                     init_ram:	
   662  078F  00FE               	movwf	126
   663  0790                     initloop:	
   664  0790  0012               	moviw fsr0++
   665  0791  001E               	movwi fsr1++
   666  0792  0BFE               	decfsz	126,f
   667  0793  2F90               	goto	initloop
   668  0794  3400               	retlw	0
   669                           
   670                           	psect	cstackBANK1
   671  00A0                     __pcstackBANK1:	
   672  00A0                     ?___fttol:	
   673  00A0                     ___fttol@f1:	
   674                           ; 4 bytes @ 0x0
   675                           
   676                           
   677                           ; 3 bytes @ 0x0
   678  00A0                     	ds	4
   679  00A4                     ??___fttol:	
   680                           
   681                           ; 1 bytes @ 0x4
   682  00A4                     	ds	4
   683  00A8                     ___fttol@sign1:	
   684                           
   685                           ; 1 bytes @ 0x8
   686  00A8                     	ds	1
   687  00A9                     ___fttol@lval:	
   688                           
   689                           ; 4 bytes @ 0x9
   690  00A9                     	ds	4
   691  00AD                     ___fttol@exp1:	
   692                           
   693                           ; 1 bytes @ 0xD
   694  00AD                     	ds	1
   695  00AE                     LM35ReadTemp@adc_value:	
   696                           
   697                           ; 2 bytes @ 0xE
   698  00AE                     	ds	2
   699  00B0                     ??_main:	
   700                           
   701                           ; 1 bytes @ 0x10
   702  00B0                     	ds	3
   703                           
   704                           	psect	cstackCOMMON
   705  0070                     __pcstackCOMMON:	
   706  0070                     ?_LCDBusyLoop:	
   707  0070                     ?_ADCInit:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_LCDInit:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_TriggerOutInit:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_TuneButtonInit:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_ISR:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_main:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?i1_LCDBusyLoop:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ??i1_LCDBusyLoop:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?i1___awdiv:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?i1___awmod:	
   735                           ; 2 bytes @ 0x0
   736                           
   737  0070                     i1___awdiv@divisor:	
   738                           ; 2 bytes @ 0x0
   739                           
   740  0070                     i1___awmod@divisor:	
   741                           ; 2 bytes @ 0x0
   742                           
   743                           
   744                           ; 2 bytes @ 0x0
   745  0070                     	ds	2
   746  0072                     i1LCDBusyLoop@busy:	
   747  0072                     i1___awdiv@dividend:	
   748                           ; 1 bytes @ 0x2
   749                           
   750  0072                     i1___awmod@dividend:	
   751                           ; 2 bytes @ 0x2
   752                           
   753                           
   754                           ; 2 bytes @ 0x2
   755  0072                     	ds	1
   756  0073                     i1LCDBusyLoop@temp:	
   757                           
   758                           ; 1 bytes @ 0x3
   759  0073                     	ds	1
   760  0074                     ??i1___awdiv:	
   761  0074                     ??i1___awmod:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  0074                     i1LCDBusyLoop@status:	
   765                           ; 1 bytes @ 0x4
   766                           
   767                           
   768                           ; 1 bytes @ 0x4
   769  0074                     	ds	1
   770  0075                     ?i1_LCDByte:	
   771  0075                     i1LCDByte@isdata:	
   772                           ; 1 bytes @ 0x5
   773                           
   774  0075                     i1___awdiv@counter:	
   775                           ; 1 bytes @ 0x5
   776                           
   777  0075                     i1___awmod@counter:	
   778                           ; 1 bytes @ 0x5
   779                           
   780                           
   781                           ; 1 bytes @ 0x5
   782  0075                     	ds	1
   783  0076                     ??i1_LCDByte:	
   784  0076                     i1___awdiv@sign:	
   785                           ; 1 bytes @ 0x6
   786                           
   787  0076                     i1___awmod@sign:	
   788                           ; 1 bytes @ 0x6
   789                           
   790                           
   791                           ; 1 bytes @ 0x6
   792  0076                     	ds	1
   793  0077                     i1___awdiv@quotient:	
   794                           
   795                           ; 2 bytes @ 0x7
   796  0077                     	ds	1
   797  0078                     i1LCDByte@c:	
   798                           
   799                           ; 1 bytes @ 0x8
   800  0078                     	ds	1
   801  0079                     i1LCDByte@hn:	
   802                           
   803                           ; 1 bytes @ 0x9
   804  0079                     	ds	1
   805  007A                     i1LCDByte@ln:	
   806                           
   807                           ; 1 bytes @ 0xA
   808  007A                     	ds	1
   809  007B                     i1LCDByte@temp:	
   810                           
   811                           ; 1 bytes @ 0xB
   812  007B                     	ds	1
   813  007C                     ?i1_LCDWriteString:	
   814  007C                     ??i1_LCDWriteInt:	
   815                           ; 1 bytes @ 0xC
   816                           
   817  007C                     ?i1_LCDGotoXY:	
   818                           ; 1 bytes @ 0xC
   819                           
   820  007C                     i1LCDGotoXY@y:	
   821                           ; 1 bytes @ 0xC
   822                           
   823  007C                     i1LCDWriteString@msg:	
   824                           ; 1 bytes @ 0xC
   825                           
   826                           
   827                           ; 2 bytes @ 0xC
   828  007C                     	ds	1
   829  007D                     ??i1_LCDGotoXY:	
   830                           
   831                           ; 1 bytes @ 0xD
   832  007D                     	ds	1
   833                           
   834                           	psect	cstackBANK0
   835  0020                     __pcstackBANK0:	
   836  0020                     ??i1_LCDWriteString:	
   837  0020                     ?i1_LCDWriteInt:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0020                     i1LCDGotoXY@x:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0020                     i1LCDWriteInt@val:	
   844                           ; 1 bytes @ 0x0
   845                           
   846                           
   847                           ; 2 bytes @ 0x0
   848  0020                     	ds	1
   849  0021                     i1LCDWriteString@cc:	
   850                           
   851                           ; 1 bytes @ 0x1
   852  0021                     	ds	1
   853  0022                     i1LCDWriteInt@field_length:	
   854                           
   855                           ; 1 bytes @ 0x2
   856  0022                     	ds	1
   857  0023                     i1LCDWriteInt@str:	
   858                           
   859                           ; 5 bytes @ 0x3
   860  0023                     	ds	5
   861  0028                     i1LCDWriteInt@j:	
   862                           
   863                           ; 2 bytes @ 0x8
   864  0028                     	ds	2
   865  002A                     i1LCDWriteInt@i:	
   866                           
   867                           ; 2 bytes @ 0xA
   868  002A                     	ds	2
   869  002C                     ??_ISR:	
   870                           
   871                           ; 1 bytes @ 0xC
   872  002C                     	ds	4
   873  0030                     ??_LCDBusyLoop:	
   874  0030                     ??_ADCInit:	
   875                           ; 1 bytes @ 0x10
   876                           
   877  0030                     ??_TriggerOutInit:	
   878                           ; 1 bytes @ 0x10
   879                           
   880  0030                     ??_TuneButtonInit:	
   881                           ; 1 bytes @ 0x10
   882                           
   883  0030                     ?_ReadADC:	
   884                           ; 1 bytes @ 0x10
   885                           
   886  0030                     ?___awdiv:	
   887                           ; 2 bytes @ 0x10
   888                           
   889  0030                     ?___awmod:	
   890                           ; 2 bytes @ 0x10
   891                           
   892  0030                     ?___ftpack:	
   893                           ; 2 bytes @ 0x10
   894                           
   895  0030                     ___awdiv@divisor:	
   896                           ; 3 bytes @ 0x10
   897                           
   898  0030                     ___awmod@divisor:	
   899                           ; 2 bytes @ 0x10
   900                           
   901  0030                     ___ftpack@arg:	
   902                           ; 2 bytes @ 0x10
   903                           
   904                           
   905                           ; 3 bytes @ 0x10
   906  0030                     	ds	2
   907  0032                     ??_ReadADC:	
   908  0032                     LCDBusyLoop@busy:	
   909                           ; 1 bytes @ 0x12
   910                           
   911  0032                     ___awdiv@dividend:	
   912                           ; 1 bytes @ 0x12
   913                           
   914  0032                     ___awmod@dividend:	
   915                           ; 2 bytes @ 0x12
   916                           
   917                           
   918                           ; 2 bytes @ 0x12
   919  0032                     	ds	1
   920  0033                     LCDBusyLoop@temp:	
   921  0033                     ReadADC@ch:	
   922                           ; 1 bytes @ 0x13
   923                           
   924  0033                     ___ftpack@exp:	
   925                           ; 1 bytes @ 0x13
   926                           
   927                           
   928                           ; 1 bytes @ 0x13
   929  0033                     	ds	1
   930  0034                     ??___awdiv:	
   931  0034                     ??___awmod:	
   932                           ; 1 bytes @ 0x14
   933                           
   934  0034                     LCDBusyLoop@status:	
   935                           ; 1 bytes @ 0x14
   936                           
   937  0034                     ___ftpack@sign:	
   938                           ; 1 bytes @ 0x14
   939                           
   940                           
   941                           ; 1 bytes @ 0x14
   942  0034                     	ds	1
   943  0035                     ??___ftpack:	
   944  0035                     ?_LCDByte:	
   945                           ; 1 bytes @ 0x15
   946                           
   947  0035                     LCDByte@isdata:	
   948                           ; 1 bytes @ 0x15
   949                           
   950  0035                     ___awdiv@counter:	
   951                           ; 1 bytes @ 0x15
   952                           
   953  0035                     ___awmod@counter:	
   954                           ; 1 bytes @ 0x15
   955                           
   956                           
   957                           ; 1 bytes @ 0x15
   958  0035                     	ds	1
   959  0036                     ??_LCDByte:	
   960  0036                     ___awdiv@sign:	
   961                           ; 1 bytes @ 0x16
   962                           
   963  0036                     ___awmod@sign:	
   964                           ; 1 bytes @ 0x16
   965                           
   966                           
   967                           ; 1 bytes @ 0x16
   968  0036                     	ds	1
   969  0037                     ___awdiv@quotient:	
   970                           
   971                           ; 2 bytes @ 0x17
   972  0037                     	ds	1
   973  0038                     ?___lwtoft:	
   974  0038                     LCDByte@hn:	
   975                           ; 3 bytes @ 0x18
   976                           
   977  0038                     ___lwtoft@c:	
   978                           ; 1 bytes @ 0x18
   979                           
   980                           
   981                           ; 2 bytes @ 0x18
   982  0038                     	ds	1
   983  0039                     LCDByte@ln:	
   984                           
   985                           ; 1 bytes @ 0x19
   986  0039                     	ds	1
   987  003A                     LCDByte@c:	
   988                           
   989                           ; 1 bytes @ 0x1A
   990  003A                     	ds	1
   991  003B                     ??___lwtoft:	
   992  003B                     LCDByte@temp:	
   993                           ; 1 bytes @ 0x1B
   994                           
   995                           
   996                           ; 1 bytes @ 0x1B
   997  003B                     	ds	1
   998  003C                     ??_LCDInit:	
   999  003C                     ?_LCDWriteString:	
  1000                           ; 1 bytes @ 0x1C
  1001                           
  1002  003C                     ?_LCDWriteInt:	
  1003                           ; 1 bytes @ 0x1C
  1004                           
  1005  003C                     ?_LCDGotoXY:	
  1006                           ; 1 bytes @ 0x1C
  1007                           
  1008  003C                     ?___ftmul:	
  1009                           ; 1 bytes @ 0x1C
  1010                           
  1011  003C                     LCDGotoXY@y:	
  1012                           ; 3 bytes @ 0x1C
  1013                           
  1014  003C                     LCDWriteString@msg:	
  1015                           ; 1 bytes @ 0x1C
  1016                           
  1017  003C                     LCDWriteInt@val:	
  1018                           ; 2 bytes @ 0x1C
  1019                           
  1020  003C                     ___ftmul@f1:	
  1021                           ; 2 bytes @ 0x1C
  1022                           
  1023                           
  1024                           ; 3 bytes @ 0x1C
  1025  003C                     	ds	1
  1026  003D                     ??_LCDGotoXY:	
  1027                           
  1028                           ; 1 bytes @ 0x1D
  1029  003D                     	ds	1
  1030  003E                     ??_LCDWriteString:	
  1031  003E                     LCDInit@style:	
  1032                           ; 1 bytes @ 0x1E
  1033                           
  1034  003E                     LCDWriteInt@field_length:	
  1035                           ; 1 bytes @ 0x1E
  1036                           
  1037  003E                     LCDGotoXY@x:	
  1038                           ; 1 bytes @ 0x1E
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0x1E
  1042  003E                     	ds	1
  1043  003F                     ??_LCDWriteInt:	
  1044  003F                     LCDInit@__i:	
  1045                           ; 1 bytes @ 0x1F
  1046                           
  1047  003F                     LCDWriteString@cc:	
  1048                           ; 1 bytes @ 0x1F
  1049                           
  1050  003F                     ___ftmul@f2:	
  1051                           ; 1 bytes @ 0x1F
  1052                           
  1053                           
  1054                           ; 3 bytes @ 0x1F
  1055  003F                     	ds	2
  1056  0041                     LCDWriteInt@str:	
  1057                           
  1058                           ; 5 bytes @ 0x21
  1059  0041                     	ds	1
  1060  0042                     ??___ftmul:	
  1061                           
  1062                           ; 1 bytes @ 0x22
  1063  0042                     	ds	4
  1064  0046                     ___ftmul@exp:	
  1065  0046                     LCDWriteInt@j:	
  1066                           ; 1 bytes @ 0x26
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x26
  1070  0046                     	ds	1
  1071  0047                     ___ftmul@f3_as_product:	
  1072                           
  1073                           ; 3 bytes @ 0x27
  1074  0047                     	ds	1
  1075  0048                     LCDWriteInt@i:	
  1076                           
  1077                           ; 2 bytes @ 0x28
  1078  0048                     	ds	2
  1079  004A                     ___ftmul@cntr:	
  1080                           
  1081                           ; 1 bytes @ 0x2A
  1082  004A                     	ds	1
  1083  004B                     ___ftmul@sign:	
  1084                           
  1085                           ; 1 bytes @ 0x2B
  1086  004B                     	ds	1
  1087  004C                     ?_LM35ReadTemp:	
  1088                           
  1089                           ; 2 bytes @ 0x2C
  1090  004C                     	ds	2
  1091  004E                     ??_LM35ReadTemp:	
  1092                           
  1093                           	psect	maintext
  1094  0302                     __pmaintext:	
  1095                           ; 1 bytes @ 0x2E
  1096 ;;
  1097 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1098 ;;
  1099 ;; *************** function _main *****************
  1100 ;; Defined at:
  1101 ;;		line 136 in file "do_am.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;		None
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;		None
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : B1F/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMMON   BANK0   BANK1
  1115 ;;      Params:         0       0       0
  1116 ;;      Locals:         0       0       0
  1117 ;;      Temps:          0       0       3
  1118 ;;      Totals:         0       0       3
  1119 ;;Total ram usage:        3 bytes
  1120 ;; Hardware stack levels required when called:    7
  1121 ;; This function calls:
  1122 ;;		_ADCInit
  1123 ;;		_LCDByte
  1124 ;;		_LCDGotoXY
  1125 ;;		_LCDInit
  1126 ;;		_LCDWriteInt
  1127 ;;		_LCDWriteString
  1128 ;;		_LM35ReadTemp
  1129 ;;		_TriggerOutInit
  1130 ;;		_TuneButtonInit
  1131 ;; This function is called by:
  1132 ;;		Startup code after reset
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           
  1137                           ;psect for function _main
  1138  0302                     _main:	
  1139                           
  1140                           ;do_am.c: 139: LCDInit(0B00000000);
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1144  0302  3000               	movlw	0
  1145  0303  2542               	fcall	_LCDInit
  1146                           
  1147                           ;do_am.c: 142: ADCInit();
  1148  0304  2765               	fcall	_ADCInit
  1149                           
  1150                           ;do_am.c: 145: TuneButtonInit();
  1151  0305  2785               	fcall	_TuneButtonInit
  1152                           
  1153                           ;do_am.c: 148: TriggerOutInit();
  1154  0306  2795               	fcall	_TriggerOutInit
  1155                           
  1156                           ;do_am.c: 151: (LCDByte(0b00000001,0));
  1157  0307  0020               	movlb	0	; select bank0
  1158  0308  01B5               	clrf	LCDByte@isdata
  1159  0309  3001               	movlw	1
  1160  030A  24F8               	fcall	_LCDByte
  1161  030B                     l2262:	
  1162                           ;do_am.c: 153: while(1)
  1163                           
  1164                           
  1165                           ;do_am.c: 154: {
  1166                           ;do_am.c: 157: curTemp = LM35ReadTemp();
  1167  030B  268C               	fcall	_LM35ReadTemp
  1168  030C  0020               	movlb	0	; select bank0
  1169  030D  084D               	movf	?_LM35ReadTemp+1,w
  1170  030E  00DD               	movwf	_curTemp+1
  1171  030F  084C               	movf	?_LM35ReadTemp,w
  1172  0310  00DC               	movwf	_curTemp
  1173                           
  1174                           ;do_am.c: 159: if(curTemp >= tuneTemp)
  1175  0311  085D               	movf	_curTemp+1,w
  1176  0312  3A80               	xorlw	128
  1177  0313  0021               	movlb	1	; select bank1
  1178  0314  00B0               	movwf	??_main^(0+128)
  1179  0315  0020               	movlb	0	; select bank0
  1180  0316  085F               	movf	_tuneTemp+1,w
  1181  0317  3A80               	xorlw	128
  1182  0318  0021               	movlb	1	; select bank1
  1183  0319  0230               	subwf	??_main^(0+128),w
  1184  031A  1D03               	skipz
  1185  031B  2B1F               	goto	u2775
  1186  031C  0020               	movlb	0	; select bank0
  1187  031D  085E               	movf	_tuneTemp,w
  1188  031E  025C               	subwf	_curTemp,w
  1189  031F                     u2775:	
  1190  031F  1C03               	skipc
  1191  0320  2B24               	goto	l126
  1192                           
  1193                           ;do_am.c: 160: {
  1194                           ;do_am.c: 161: RA1 = 1;
  1195  0321  0020               	movlb	0	; select bank0
  1196  0322  148C               	bsf	12,1	;volatile
  1197                           
  1198                           ;do_am.c: 162: }
  1199  0323  2B26               	goto	l2268
  1200  0324                     l126:	
  1201                           
  1202                           ;do_am.c: 163: else
  1203                           ;do_am.c: 164: {
  1204                           ;do_am.c: 165: RA1 = 0;
  1205  0324  0020               	movlb	0	; select bank0
  1206  0325  108C               	bcf	12,1	;volatile
  1207  0326                     l2268:	
  1208                           
  1209                           ;do_am.c: 166: }
  1210                           ;do_am.c: 168: if(tuneTempDir == 1)
  1211  0326  035B               	decf	_tuneTempDir,w
  1212  0327  1D03               	btfss	3,2
  1213  0328  2B38               	goto	l2278
  1214                           
  1215                           ;do_am.c: 169: {
  1216                           ;do_am.c: 171: (LCDByte(0b00000001,0));
  1217  0329  01B5               	clrf	LCDByte@isdata
  1218  032A  3001               	movlw	1
  1219  032B  24F8               	fcall	_LCDByte
  1220                           
  1221                           ;do_am.c: 173: { LCDGotoXY(0,0); LCDWriteString("Thermometer:");};
  1222  032C  0020               	movlb	0	; select bank0
  1223  032D  01BC               	clrf	LCDGotoXY@y
  1224  032E  3000               	movlw	0
  1225  032F  26E9               	fcall	_LCDGotoXY
  1226  0330  3040               	movlw	low (STR_3| (0+32768))
  1227  0331  0020               	movlb	0	; select bank0
  1228  0332  00BC               	movwf	LCDWriteString@msg
  1229  0333  3087               	movlw	high (STR_3| (0+32768))
  1230  0334  00BD               	movwf	LCDWriteString@msg+1
  1231  0335  2616               	fcall	_LCDWriteString
  1232                           
  1233                           ;do_am.c: 174: tuneTempDir = 0;
  1234  0336  0020               	movlb	0	; select bank0
  1235  0337  01DB               	clrf	_tuneTempDir
  1236  0338                     l2278:	
  1237                           
  1238                           ;do_am.c: 175: }
  1239                           ;do_am.c: 178: { LCDGotoXY(0,1); LCDWriteInt(curTemp,3);};
  1240  0338  01BC               	clrf	LCDGotoXY@y
  1241  0339  0ABC               	incf	LCDGotoXY@y,f
  1242  033A  3000               	movlw	0
  1243  033B  26E9               	fcall	_LCDGotoXY
  1244  033C  0020               	movlb	0	; select bank0
  1245  033D  085D               	movf	_curTemp+1,w
  1246  033E  00BD               	movwf	LCDWriteInt@val+1
  1247  033F  085C               	movf	_curTemp,w
  1248  0340  00BC               	movwf	LCDWriteInt@val
  1249  0341  3003               	movlw	3
  1250  0342  0021               	movlb	1	; select bank1
  1251  0343  00B0               	movwf	??_main^(0+128)
  1252  0344  0830               	movf	??_main^(0+128),w
  1253  0345  0020               	movlb	0	; select bank0
  1254  0346  00BE               	movwf	LCDWriteInt@field_length
  1255  0347  21A5               	fcall	_LCDWriteInt
  1256                           
  1257                           ;do_am.c: 181: LCDWriteString("%0C");
  1258  0348  304D               	movlw	low (STR_2| (0+32768))
  1259  0349  0020               	movlb	0	; select bank0
  1260  034A  00BC               	movwf	LCDWriteString@msg
  1261  034B  3087               	movlw	high (STR_2| (0+32768))
  1262  034C  00BD               	movwf	LCDWriteString@msg+1
  1263  034D  2616               	fcall	_LCDWriteString
  1264                           
  1265                           ;do_am.c: 184: _delay((unsigned long)((200)*(20000000/4000.0)));
  1266  034E  3006               	movlw	6
  1267  034F  0021               	movlb	1	; select bank1
  1268  0350  00B2               	movwf	(??_main^(0+128)+2)
  1269  0351  3013               	movlw	19
  1270  0352  00B1               	movwf	(??_main^(0+128)+1)
  1271  0353  30B1               	movlw	177
  1272  0354  00B0               	movwf	??_main^(0+128)
  1273  0355                     u2797:	
  1274  0355  0BB0               	decfsz	??_main^(0+128),f
  1275  0356  2B55               	goto	u2797
  1276  0357  0BB1               	decfsz	(??_main^(0+128)+1),f
  1277  0358  2B55               	goto	u2797
  1278  0359  0BB2               	decfsz	(??_main^(0+128)+2),f
  1279  035A  2B55               	goto	u2797
  1280  035B  3200               	nop2
  1281  035C  2B0B               	goto	l2262
  1282  035D                     __end_of_main:	
  1283                           
  1284                           	psect	text1
  1285  0785                     __ptext1:	
  1286 ;; *************** function _TuneButtonInit *****************
  1287 ;; Defined at:
  1288 ;;		line 85 in file "do_am.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		None
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1
  1302 ;;      Params:         0       0       0
  1303 ;;      Locals:         0       0       0
  1304 ;;      Temps:          0       0       0
  1305 ;;      Totals:         0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    4
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           
  1317                           ;psect for function _TuneButtonInit
  1318  0785                     _TuneButtonInit:	
  1319                           
  1320                           ;do_am.c: 88: INTCONbits.IOCIE = 1;
  1321                           
  1322                           ;incstack = 0
  1323                           ; Regs used in _TuneButtonInit: []
  1324  0785  158B               	bsf	11,3	;volatile
  1325                           
  1326                           ;do_am.c: 90: (TRISAbits.TRISA5 = 1);
  1327  0786  0021               	movlb	1	; select bank1
  1328  0787  168C               	bsf	12,5	;volatile
  1329                           
  1330                           ;do_am.c: 93: IOCAPbits.IOCAP5 = 1;
  1331  0788  0027               	movlb	7	; select bank7
  1332  0789  1691               	bsf	17,5	;volatile
  1333                           
  1334                           ;do_am.c: 95: INTCONbits.IOCIF = 0;
  1335  078A  100B               	bcf	11,0	;volatile
  1336                           
  1337                           ;do_am.c: 96: IOCAFbits.IOCAF5 = 0;
  1338  078B  1293               	bcf	19,5	;volatile
  1339                           
  1340                           ;do_am.c: 99: INTCONbits.PEIE = 1;
  1341  078C  170B               	bsf	11,6	;volatile
  1342                           
  1343                           ;do_am.c: 101: INTCONbits.GIE = 1;
  1344  078D  178B               	bsf	11,7	;volatile
  1345  078E  0008               	return
  1346  078F                     __end_of_TuneButtonInit:	
  1347                           
  1348                           	psect	text2
  1349  0795                     __ptext2:	
  1350 ;; *************** function _TriggerOutInit *****************
  1351 ;; Defined at:
  1352 ;;		line 70 in file "do_am.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		None
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1
  1366 ;;      Params:         0       0       0
  1367 ;;      Locals:         0       0       0
  1368 ;;      Temps:          0       0       0
  1369 ;;      Totals:         0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    4
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _TriggerOutInit
  1382  0795                     _TriggerOutInit:	
  1383                           
  1384                           ;do_am.c: 73: (TRISAbits.TRISA1 = 0);
  1385                           
  1386                           ;incstack = 0
  1387                           ; Regs used in _TriggerOutInit: []
  1388  0795  0021               	movlb	1	; select bank1
  1389  0796  108C               	bcf	12,1	;volatile
  1390                           
  1391                           ;do_am.c: 76: ANSELAbits.ANSA1 = 0;
  1392  0797  0023               	movlb	3	; select bank3
  1393  0798  108C               	bcf	12,1	;volatile
  1394  0799  0008               	return
  1395  079A                     __end_of_TriggerOutInit:	
  1396                           
  1397                           	psect	text3
  1398  068C                     __ptext3:	
  1399 ;; *************** function _LM35ReadTemp *****************
  1400 ;; Defined at:
  1401 ;;		line 8 in file "lm35_pic16.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  adc_value       2   14[BANK1 ] unsigned int 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  2   44[BANK0 ] int 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1
  1415 ;;      Params:         0       2       0
  1416 ;;      Locals:         0       0       2
  1417 ;;      Temps:          0       0       0
  1418 ;;      Totals:         0       2       2
  1419 ;;Total ram usage:        4 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    6
  1422 ;; This function calls:
  1423 ;;		_ReadADC
  1424 ;;		___ftmul
  1425 ;;		___fttol
  1426 ;;		___lwtoft
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _LM35ReadTemp
  1434  068C                     _LM35ReadTemp:	
  1435                           
  1436                           ;lm35_pic16.c: 14: uint16_t adc_value=ReadADC(2);
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _LM35ReadTemp: [wreg+status,2+status,0+pclath+cstack]
  1440  068C  3002               	movlw	2
  1441  068D  26C2               	fcall	_ReadADC
  1442  068E  0020               	movlb	0	; select bank0
  1443  068F  0831               	movf	?_ReadADC+1,w
  1444  0690  0021               	movlb	1	; select bank1
  1445  0691  00AF               	movwf	(LM35ReadTemp@adc_value+1)^(0+128)
  1446  0692  0020               	movlb	0	; select bank0
  1447  0693  0830               	movf	?_ReadADC,w
  1448  0694  0021               	movlb	1	; select bank1
  1449  0695  00AE               	movwf	LM35ReadTemp@adc_value^(0+128)
  1450                           
  1451                           ;lm35_pic16.c: 28: return (int)(adc_value*0.4887);
  1452  0696  082F               	movf	(LM35ReadTemp@adc_value+1)^(0+128),w
  1453  0697  0020               	movlb	0	; select bank0
  1454  0698  00B9               	movwf	___lwtoft@c+1
  1455  0699  0021               	movlb	1	; select bank1
  1456  069A  082E               	movf	LM35ReadTemp@adc_value^(0+128),w
  1457  069B  0020               	movlb	0	; select bank0
  1458  069C  00B8               	movwf	___lwtoft@c
  1459  069D  2751               	fcall	___lwtoft
  1460  069E  0020               	movlb	0	; select bank0
  1461  069F  0838               	movf	?___lwtoft,w
  1462  06A0  00BF               	movwf	___ftmul@f2
  1463  06A1  0839               	movf	?___lwtoft+1,w
  1464  06A2  00C0               	movwf	___ftmul@f2+1
  1465  06A3  083A               	movf	?___lwtoft+2,w
  1466  06A4  00C1               	movwf	___ftmul@f2+2
  1467  06A5  3037               	movlw	55
  1468  06A6  00BC               	movwf	___ftmul@f1
  1469  06A7  30FA               	movlw	250
  1470  06A8  00BD               	movwf	___ftmul@f1+1
  1471  06A9  303E               	movlw	62
  1472  06AA  00BE               	movwf	___ftmul@f1+2
  1473  06AB  206B               	fcall	___ftmul
  1474  06AC  0020               	movlb	0	; select bank0
  1475  06AD  083C               	movf	?___ftmul,w
  1476  06AE  0021               	movlb	1	; select bank1
  1477  06AF  00A0               	movwf	___fttol@f1^(0+128)
  1478  06B0  0020               	movlb	0	; select bank0
  1479  06B1  083D               	movf	?___ftmul+1,w
  1480  06B2  0021               	movlb	1	; select bank1
  1481  06B3  00A1               	movwf	(___fttol@f1+1)^(0+128)
  1482  06B4  0020               	movlb	0	; select bank0
  1483  06B5  083E               	movf	?___ftmul+2,w
  1484  06B6  0021               	movlb	1	; select bank1
  1485  06B7  00A2               	movwf	(___fttol@f1+2)^(0+128)
  1486  06B8  211E               	fcall	___fttol
  1487  06B9  0021               	movlb	1	; select bank1
  1488  06BA  0821               	movf	(?___fttol^(0+128)+1),w
  1489  06BB  0020               	movlb	0	; select bank0
  1490  06BC  00CD               	movwf	?_LM35ReadTemp+1
  1491  06BD  0021               	movlb	1	; select bank1
  1492  06BE  0820               	movf	?___fttol^(0+128),w
  1493  06BF  0020               	movlb	0	; select bank0
  1494  06C0  00CC               	movwf	?_LM35ReadTemp
  1495  06C1  0008               	return
  1496  06C2                     __end_of_LM35ReadTemp:	
  1497                           
  1498                           	psect	text4
  1499  0751                     __ptext4:	
  1500 ;; *************** function ___lwtoft *****************
  1501 ;; Defined at:
  1502 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  c               2   24[BANK0 ] unsigned int 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  3   24[BANK0 ] float 
  1509 ;; Registers used:
  1510 ;;		wreg, status,2, status,0, pclath, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1
  1516 ;;      Params:         0       3       0
  1517 ;;      Locals:         0       0       0
  1518 ;;      Temps:          0       1       0
  1519 ;;      Totals:         0       4       0
  1520 ;;Total ram usage:        4 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    5
  1523 ;; This function calls:
  1524 ;;		___ftpack
  1525 ;; This function is called by:
  1526 ;;		_LM35ReadTemp
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           
  1531                           ;psect for function ___lwtoft
  1532  0751                     ___lwtoft:	
  1533                           
  1534                           ;incstack = 0
  1535                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1536  0751  0020               	movlb	0	; select bank0
  1537  0752  0838               	movf	___lwtoft@c,w
  1538  0753  00B0               	movwf	___ftpack@arg
  1539  0754  0839               	movf	___lwtoft@c+1,w
  1540  0755  00B1               	movwf	___ftpack@arg+1
  1541  0756  01B2               	clrf	___ftpack@arg+2
  1542  0757  308E               	movlw	142
  1543  0758  00BB               	movwf	??___lwtoft
  1544  0759  083B               	movf	??___lwtoft,w
  1545  075A  00B3               	movwf	___ftpack@exp
  1546  075B  01B4               	clrf	___ftpack@sign
  1547  075C  229D               	fcall	___ftpack
  1548  075D  0020               	movlb	0	; select bank0
  1549  075E  0830               	movf	?___ftpack,w
  1550  075F  00B8               	movwf	?___lwtoft
  1551  0760  0831               	movf	?___ftpack+1,w
  1552  0761  00B9               	movwf	?___lwtoft+1
  1553  0762  0832               	movf	?___ftpack+2,w
  1554  0763  00BA               	movwf	?___lwtoft+2
  1555  0764  0008               	return
  1556  0765                     __end_of___lwtoft:	
  1557                           
  1558                           	psect	text5
  1559  011E                     __ptext5:	
  1560 ;; *************** function ___fttol *****************
  1561 ;; Defined at:
  1562 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  f1              3    0[BANK1 ] float 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  lval            4    9[BANK1 ] unsigned long 
  1567 ;;  exp1            1   13[BANK1 ] unsigned char 
  1568 ;;  sign1           1    8[BANK1 ] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  4    0[BANK1 ] long 
  1571 ;; Registers used:
  1572 ;;		wreg, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1
  1578 ;;      Params:         0       0       4
  1579 ;;      Locals:         0       0       6
  1580 ;;      Temps:          0       0       4
  1581 ;;      Totals:         0       0      14
  1582 ;;Total ram usage:       14 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    4
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_LM35ReadTemp
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function ___fttol
  1594  011E                     ___fttol:	
  1595                           
  1596                           ;incstack = 0
  1597                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1598  011E  0021               	movlb	1	; select bank1
  1599  011F  0820               	movf	___fttol@f1^(0+128),w
  1600  0120  00A4               	movwf	??___fttol^(0+128)
  1601  0121  0821               	movf	(___fttol@f1+1)^(0+128),w
  1602  0122  00A5               	movwf	(??___fttol^(0+128)+1)
  1603  0123  0822               	movf	(___fttol@f1+2)^(0+128),w
  1604  0124  00A6               	movwf	(??___fttol^(0+128)+2)
  1605  0125  1003               	clrc
  1606  0126  0D25               	rlf	(??___fttol^(0+128)+1),w
  1607  0127  0D26               	rlf	(??___fttol^(0+128)+2),w
  1608  0128  00A7               	movwf	(??___fttol+3)^(0+128)
  1609  0129  0827               	movf	(??___fttol+3)^(0+128),w
  1610  012A  00AD               	movwf	___fttol@exp1^(0+128)
  1611  012B  082D               	movf	___fttol@exp1^(0+128),w
  1612  012C  1D03               	btfss	3,2
  1613  012D  2937               	goto	l2208
  1614  012E  3000               	movlw	0
  1615  012F  00A3               	movwf	(?___fttol+3)^(0+128)
  1616  0130  3000               	movlw	0
  1617  0131  00A2               	movwf	(?___fttol+2)^(0+128)
  1618  0132  3000               	movlw	0
  1619  0133  00A1               	movwf	(?___fttol+1)^(0+128)
  1620  0134  3000               	movlw	0
  1621  0135  00A0               	movwf	?___fttol^(0+128)
  1622  0136  0008               	return
  1623  0137                     l2208:	
  1624  0137  0820               	movf	___fttol@f1^(0+128),w
  1625  0138  00A4               	movwf	??___fttol^(0+128)
  1626  0139  0821               	movf	(___fttol@f1+1)^(0+128),w
  1627  013A  00A5               	movwf	(??___fttol^(0+128)+1)
  1628  013B  0822               	movf	(___fttol@f1+2)^(0+128),w
  1629  013C  00A6               	movwf	(??___fttol^(0+128)+2)
  1630  013D  3017               	movlw	23
  1631  013E                     u2685:	
  1632  013E  36A6               	lsrf	(??___fttol^(0+128)+2),f
  1633  013F  0CA5               	rrf	(??___fttol^(0+128)+1),f
  1634  0140  0CA4               	rrf	??___fttol^(0+128),f
  1635  0141  0B89               	decfsz	9,f
  1636  0142  293E               	goto	u2685
  1637  0143  0824               	movf	??___fttol^(0+128),w
  1638  0144  00A7               	movwf	(??___fttol+3)^(0+128)
  1639  0145  0827               	movf	(??___fttol+3)^(0+128),w
  1640  0146  00A8               	movwf	___fttol@sign1^(0+128)
  1641  0147  17A1               	bsf	(___fttol@f1^(0+128)+1),7
  1642  0148  30FF               	movlw	255
  1643  0149  05A0               	andwf	___fttol@f1^(0+128),f
  1644  014A  30FF               	movlw	255
  1645  014B  05A1               	andwf	(___fttol@f1+1)^(0+128),f
  1646  014C  3000               	movlw	0
  1647  014D  05A2               	andwf	(___fttol@f1+2)^(0+128),f
  1648  014E  0820               	movf	___fttol@f1^(0+128),w
  1649  014F  00A9               	movwf	___fttol@lval^(0+128)
  1650  0150  0821               	movf	(___fttol@f1+1)^(0+128),w
  1651  0151  00AA               	movwf	(___fttol@lval^(0+128)+1)
  1652  0152  0822               	movf	(___fttol@f1+2)^(0+128),w
  1653  0153  00AB               	movwf	(___fttol@lval^(0+128)+2)
  1654  0154  01AC               	clrf	(___fttol@lval^(0+128)+3)
  1655  0155  308E               	movlw	142
  1656  0156  02AD               	subwf	___fttol@exp1^(0+128),f
  1657  0157  1FAD               	btfss	___fttol@exp1^(0+128),7
  1658  0158  2975               	goto	l2228
  1659  0159  082D               	movf	___fttol@exp1^(0+128),w
  1660  015A  3A80               	xorlw	128
  1661  015B  3E8F               	addlw	143
  1662  015C  1803               	skipnc
  1663  015D  2967               	goto	l2226
  1664  015E  3000               	movlw	0
  1665  015F  00A3               	movwf	(?___fttol+3)^(0+128)
  1666  0160  3000               	movlw	0
  1667  0161  00A2               	movwf	(?___fttol+2)^(0+128)
  1668  0162  3000               	movlw	0
  1669  0163  00A1               	movwf	(?___fttol+1)^(0+128)
  1670  0164  3000               	movlw	0
  1671  0165  00A0               	movwf	?___fttol^(0+128)
  1672  0166  0008               	return
  1673  0167                     l2226:	
  1674  0167  3001               	movlw	1
  1675  0168                     u2715:	
  1676  0168  36AC               	lsrf	(___fttol@lval+3)^(0+128),f
  1677  0169  0CAB               	rrf	(___fttol@lval+2)^(0+128),f
  1678  016A  0CAA               	rrf	(___fttol@lval+1)^(0+128),f
  1679  016B  0CA9               	rrf	___fttol@lval^(0+128),f
  1680  016C  0B89               	decfsz	9,f
  1681  016D  2968               	goto	u2715
  1682  016E  3001               	movlw	1
  1683  016F  00A4               	movwf	??___fttol^(0+128)
  1684  0170  0824               	movf	??___fttol^(0+128),w
  1685  0171  07AD               	addwf	___fttol@exp1^(0+128),f
  1686  0172  1903               	btfsc	3,2
  1687  0173  298E               	goto	l2236
  1688  0174  2967               	goto	l2226
  1689  0175                     l2228:	
  1690  0175  3018               	movlw	24
  1691  0176  022D               	subwf	___fttol@exp1^(0+128),w
  1692  0177  1C03               	skipc
  1693  0178  298B               	goto	l496
  1694  0179  3000               	movlw	0
  1695  017A  00A3               	movwf	(?___fttol+3)^(0+128)
  1696  017B  3000               	movlw	0
  1697  017C  00A2               	movwf	(?___fttol+2)^(0+128)
  1698  017D  3000               	movlw	0
  1699  017E  00A1               	movwf	(?___fttol+1)^(0+128)
  1700  017F  3000               	movlw	0
  1701  0180  00A0               	movwf	?___fttol^(0+128)
  1702  0181  0008               	return
  1703  0182                     l2234:	
  1704  0182  3001               	movlw	1
  1705  0183                     u2745:	
  1706  0183  35A9               	lslf	___fttol@lval^(0+128),f
  1707  0184  0DAA               	rlf	(___fttol@lval+1)^(0+128),f
  1708  0185  0DAB               	rlf	(___fttol@lval+2)^(0+128),f
  1709  0186  0DAC               	rlf	(___fttol@lval+3)^(0+128),f
  1710  0187  0B89               	decfsz	9,f
  1711  0188  2983               	goto	u2745
  1712  0189  3001               	movlw	1
  1713  018A  02AD               	subwf	___fttol@exp1^(0+128),f
  1714  018B                     l496:	
  1715  018B  082D               	movf	___fttol@exp1^(0+128),w
  1716  018C  1D03               	btfss	3,2
  1717  018D  2982               	goto	l2234
  1718  018E                     l2236:	
  1719  018E  0828               	movf	___fttol@sign1^(0+128),w
  1720  018F  1903               	btfsc	3,2
  1721  0190  299C               	goto	l2240
  1722  0191  09A9               	comf	___fttol@lval^(0+128),f
  1723  0192  09AA               	comf	(___fttol@lval+1)^(0+128),f
  1724  0193  09AB               	comf	(___fttol@lval+2)^(0+128),f
  1725  0194  09AC               	comf	(___fttol@lval+3)^(0+128),f
  1726  0195  0AA9               	incf	___fttol@lval^(0+128),f
  1727  0196  1903               	skipnz
  1728  0197  0AAA               	incf	(___fttol@lval+1)^(0+128),f
  1729  0198  1903               	skipnz
  1730  0199  0AAB               	incf	(___fttol@lval+2)^(0+128),f
  1731  019A  1903               	skipnz
  1732  019B  0AAC               	incf	(___fttol@lval+3)^(0+128),f
  1733  019C                     l2240:	
  1734  019C  082C               	movf	(___fttol@lval+3)^(0+128),w
  1735  019D  00A3               	movwf	(?___fttol+3)^(0+128)
  1736  019E  082B               	movf	(___fttol@lval+2)^(0+128),w
  1737  019F  00A2               	movwf	(?___fttol+2)^(0+128)
  1738  01A0  082A               	movf	(___fttol@lval+1)^(0+128),w
  1739  01A1  00A1               	movwf	(?___fttol+1)^(0+128)
  1740  01A2  0829               	movf	___fttol@lval^(0+128),w
  1741  01A3  00A0               	movwf	?___fttol^(0+128)
  1742  01A4  0008               	return
  1743  01A5                     __end_of___fttol:	
  1744                           
  1745                           	psect	text6
  1746  006B                     __ptext6:	
  1747 ;; *************** function ___ftmul *****************
  1748 ;; Defined at:
  1749 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  f1              3   28[BANK0 ] float 
  1752 ;;  f2              3   31[BANK0 ] float 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  1755 ;;  sign            1   43[BANK0 ] unsigned char 
  1756 ;;  cntr            1   42[BANK0 ] unsigned char 
  1757 ;;  exp             1   38[BANK0 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  3   28[BANK0 ] float 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1
  1767 ;;      Params:         0       6       0
  1768 ;;      Locals:         0       6       0
  1769 ;;      Temps:          0       4       0
  1770 ;;      Totals:         0      16       0
  1771 ;;Total ram usage:       16 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    5
  1774 ;; This function calls:
  1775 ;;		___ftpack
  1776 ;; This function is called by:
  1777 ;;		_LM35ReadTemp
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function ___ftmul
  1783  006B                     ___ftmul:	
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1787  006B  0020               	movlb	0	; select bank0
  1788  006C  083C               	movf	___ftmul@f1,w
  1789  006D  00C2               	movwf	??___ftmul
  1790  006E  083D               	movf	___ftmul@f1+1,w
  1791  006F  00C3               	movwf	??___ftmul+1
  1792  0070  083E               	movf	___ftmul@f1+2,w
  1793  0071  00C4               	movwf	??___ftmul+2
  1794  0072  1003               	clrc
  1795  0073  0D43               	rlf	??___ftmul+1,w
  1796  0074  0D44               	rlf	??___ftmul+2,w
  1797  0075  00C5               	movwf	??___ftmul+3
  1798  0076  0845               	movf	??___ftmul+3,w
  1799  0077  00C6               	movwf	___ftmul@exp
  1800  0078  0846               	movf	___ftmul@exp,w
  1801  0079  1D03               	btfss	3,2
  1802  007A  2882               	goto	l2158
  1803  007B  3000               	movlw	0
  1804  007C  00BC               	movwf	?___ftmul
  1805  007D  3000               	movlw	0
  1806  007E  00BD               	movwf	?___ftmul+1
  1807  007F  3000               	movlw	0
  1808  0080  00BE               	movwf	?___ftmul+2
  1809  0081  0008               	return
  1810  0082                     l2158:	
  1811  0082  083F               	movf	___ftmul@f2,w
  1812  0083  00C2               	movwf	??___ftmul
  1813  0084  0840               	movf	___ftmul@f2+1,w
  1814  0085  00C3               	movwf	??___ftmul+1
  1815  0086  0841               	movf	___ftmul@f2+2,w
  1816  0087  00C4               	movwf	??___ftmul+2
  1817  0088  1003               	clrc
  1818  0089  0D43               	rlf	??___ftmul+1,w
  1819  008A  0D44               	rlf	??___ftmul+2,w
  1820  008B  00C5               	movwf	??___ftmul+3
  1821  008C  0845               	movf	??___ftmul+3,w
  1822  008D  00CB               	movwf	___ftmul@sign
  1823  008E  084B               	movf	___ftmul@sign,w
  1824  008F  1D03               	btfss	3,2
  1825  0090  2898               	goto	l2164
  1826  0091  3000               	movlw	0
  1827  0092  00BC               	movwf	?___ftmul
  1828  0093  3000               	movlw	0
  1829  0094  00BD               	movwf	?___ftmul+1
  1830  0095  3000               	movlw	0
  1831  0096  00BE               	movwf	?___ftmul+2
  1832  0097  0008               	return
  1833  0098                     l2164:	
  1834  0098  084B               	movf	___ftmul@sign,w
  1835  0099  3E7B               	addlw	123
  1836  009A  00C2               	movwf	??___ftmul
  1837  009B  0842               	movf	??___ftmul,w
  1838  009C  07C6               	addwf	___ftmul@exp,f
  1839  009D  083C               	movf	___ftmul@f1,w
  1840  009E  00C2               	movwf	??___ftmul
  1841  009F  083D               	movf	___ftmul@f1+1,w
  1842  00A0  00C3               	movwf	??___ftmul+1
  1843  00A1  083E               	movf	___ftmul@f1+2,w
  1844  00A2  00C4               	movwf	??___ftmul+2
  1845  00A3  3010               	movlw	16
  1846  00A4                     u2575:	
  1847  00A4  36C4               	lsrf	??___ftmul+2,f
  1848  00A5  0CC3               	rrf	??___ftmul+1,f
  1849  00A6  0CC2               	rrf	??___ftmul,f
  1850  00A7  0B89               	decfsz	9,f
  1851  00A8  28A4               	goto	u2575
  1852  00A9  0842               	movf	??___ftmul,w
  1853  00AA  00C5               	movwf	??___ftmul+3
  1854  00AB  0845               	movf	??___ftmul+3,w
  1855  00AC  00CB               	movwf	___ftmul@sign
  1856  00AD  083F               	movf	___ftmul@f2,w
  1857  00AE  00C2               	movwf	??___ftmul
  1858  00AF  0840               	movf	___ftmul@f2+1,w
  1859  00B0  00C3               	movwf	??___ftmul+1
  1860  00B1  0841               	movf	___ftmul@f2+2,w
  1861  00B2  00C4               	movwf	??___ftmul+2
  1862  00B3  3010               	movlw	16
  1863  00B4                     u2585:	
  1864  00B4  36C4               	lsrf	??___ftmul+2,f
  1865  00B5  0CC3               	rrf	??___ftmul+1,f
  1866  00B6  0CC2               	rrf	??___ftmul,f
  1867  00B7  0B89               	decfsz	9,f
  1868  00B8  28B4               	goto	u2585
  1869  00B9  0842               	movf	??___ftmul,w
  1870  00BA  00C5               	movwf	??___ftmul+3
  1871  00BB  0845               	movf	??___ftmul+3,w
  1872  00BC  06CB               	xorwf	___ftmul@sign,f
  1873  00BD  3080               	movlw	128
  1874  00BE  00C2               	movwf	??___ftmul
  1875  00BF  0842               	movf	??___ftmul,w
  1876  00C0  05CB               	andwf	___ftmul@sign,f
  1877  00C1  17BD               	bsf	___ftmul@f1+1,7
  1878  00C2  17C0               	bsf	___ftmul@f2+1,7
  1879  00C3  30FF               	movlw	255
  1880  00C4  05BF               	andwf	___ftmul@f2,f
  1881  00C5  30FF               	movlw	255
  1882  00C6  05C0               	andwf	___ftmul@f2+1,f
  1883  00C7  3000               	movlw	0
  1884  00C8  05C1               	andwf	___ftmul@f2+2,f
  1885  00C9  3000               	movlw	0
  1886  00CA  00C7               	movwf	___ftmul@f3_as_product
  1887  00CB  3000               	movlw	0
  1888  00CC  00C8               	movwf	___ftmul@f3_as_product+1
  1889  00CD  3000               	movlw	0
  1890  00CE  00C9               	movwf	___ftmul@f3_as_product+2
  1891  00CF  3007               	movlw	7
  1892  00D0  00C2               	movwf	??___ftmul
  1893  00D1  0842               	movf	??___ftmul,w
  1894  00D2  00CA               	movwf	___ftmul@cntr
  1895  00D3                     l2176:	
  1896  00D3  1C3C               	btfss	___ftmul@f1,0
  1897  00D4  28DB               	goto	l2180
  1898  00D5  083F               	movf	___ftmul@f2,w
  1899  00D6  07C7               	addwf	___ftmul@f3_as_product,f
  1900  00D7  0840               	movf	___ftmul@f2+1,w
  1901  00D8  3DC8               	addwfc	___ftmul@f3_as_product+1,f
  1902  00D9  0841               	movf	___ftmul@f2+2,w
  1903  00DA  3DC9               	addwfc	___ftmul@f3_as_product+2,f
  1904  00DB                     l2180:	
  1905  00DB  3001               	movlw	1
  1906  00DC                     u2605:	
  1907  00DC  36BE               	lsrf	___ftmul@f1+2,f
  1908  00DD  0CBD               	rrf	___ftmul@f1+1,f
  1909  00DE  0CBC               	rrf	___ftmul@f1,f
  1910  00DF  0B89               	decfsz	9,f
  1911  00E0  28DC               	goto	u2605
  1912  00E1  3001               	movlw	1
  1913  00E2                     u2615:	
  1914  00E2  35BF               	lslf	___ftmul@f2,f
  1915  00E3  0DC0               	rlf	___ftmul@f2+1,f
  1916  00E4  0DC1               	rlf	___ftmul@f2+2,f
  1917  00E5  0B89               	decfsz	9,f
  1918  00E6  28E2               	goto	u2615
  1919  00E7  3001               	movlw	1
  1920  00E8  02CA               	subwf	___ftmul@cntr,f
  1921  00E9  1D03               	btfss	3,2
  1922  00EA  28D3               	goto	l2176
  1923  00EB  3009               	movlw	9
  1924  00EC  00C2               	movwf	??___ftmul
  1925  00ED  0842               	movf	??___ftmul,w
  1926  00EE  00CA               	movwf	___ftmul@cntr
  1927  00EF                     l2188:	
  1928  00EF  1C3C               	btfss	___ftmul@f1,0
  1929  00F0  28F7               	goto	l2192
  1930  00F1  083F               	movf	___ftmul@f2,w
  1931  00F2  07C7               	addwf	___ftmul@f3_as_product,f
  1932  00F3  0840               	movf	___ftmul@f2+1,w
  1933  00F4  3DC8               	addwfc	___ftmul@f3_as_product+1,f
  1934  00F5  0841               	movf	___ftmul@f2+2,w
  1935  00F6  3DC9               	addwfc	___ftmul@f3_as_product+2,f
  1936  00F7                     l2192:	
  1937  00F7  3001               	movlw	1
  1938  00F8                     u2645:	
  1939  00F8  36BE               	lsrf	___ftmul@f1+2,f
  1940  00F9  0CBD               	rrf	___ftmul@f1+1,f
  1941  00FA  0CBC               	rrf	___ftmul@f1,f
  1942  00FB  0B89               	decfsz	9,f
  1943  00FC  28F8               	goto	u2645
  1944  00FD  3001               	movlw	1
  1945  00FE                     u2655:	
  1946  00FE  36C9               	lsrf	___ftmul@f3_as_product+2,f
  1947  00FF  0CC8               	rrf	___ftmul@f3_as_product+1,f
  1948  0100  0CC7               	rrf	___ftmul@f3_as_product,f
  1949  0101  0B89               	decfsz	9,f
  1950  0102  28FE               	goto	u2655
  1951  0103  3001               	movlw	1
  1952  0104  02CA               	subwf	___ftmul@cntr,f
  1953  0105  1D03               	btfss	3,2
  1954  0106  28EF               	goto	l2188
  1955  0107  0847               	movf	___ftmul@f3_as_product,w
  1956  0108  00B0               	movwf	___ftpack@arg
  1957  0109  0848               	movf	___ftmul@f3_as_product+1,w
  1958  010A  00B1               	movwf	___ftpack@arg+1
  1959  010B  0849               	movf	___ftmul@f3_as_product+2,w
  1960  010C  00B2               	movwf	___ftpack@arg+2
  1961  010D  0846               	movf	___ftmul@exp,w
  1962  010E  00C2               	movwf	??___ftmul
  1963  010F  0842               	movf	??___ftmul,w
  1964  0110  00B3               	movwf	___ftpack@exp
  1965  0111  084B               	movf	___ftmul@sign,w
  1966  0112  00C3               	movwf	??___ftmul+1
  1967  0113  0843               	movf	??___ftmul+1,w
  1968  0114  00B4               	movwf	___ftpack@sign
  1969  0115  229D               	fcall	___ftpack
  1970  0116  0020               	movlb	0	; select bank0
  1971  0117  0830               	movf	?___ftpack,w
  1972  0118  00BC               	movwf	?___ftmul
  1973  0119  0831               	movf	?___ftpack+1,w
  1974  011A  00BD               	movwf	?___ftmul+1
  1975  011B  0832               	movf	?___ftpack+2,w
  1976  011C  00BE               	movwf	?___ftmul+2
  1977  011D  0008               	return
  1978  011E                     __end_of___ftmul:	
  1979                           
  1980                           	psect	text7
  1981  029D                     __ptext7:	
  1982 ;; *************** function ___ftpack *****************
  1983 ;; Defined at:
  1984 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  arg             3   16[BANK0 ] unsigned um
  1987 ;;  exp             1   19[BANK0 ] unsigned char 
  1988 ;;  sign            1   20[BANK0 ] unsigned char 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  3   16[BANK0 ] float 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1
  2000 ;;      Params:         0       5       0
  2001 ;;      Locals:         0       0       0
  2002 ;;      Temps:          0       3       0
  2003 ;;      Totals:         0       8       0
  2004 ;;Total ram usage:        8 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    4
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		___ftmul
  2011 ;;		___lwtoft
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function ___ftpack
  2017  029D                     ___ftpack:	
  2018                           
  2019                           ;incstack = 0
  2020                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2021  029D  0020               	movlb	0	; select bank0
  2022  029E  0833               	movf	___ftpack@exp,w
  2023  029F  1903               	btfsc	3,2
  2024  02A0  2AA6               	goto	l2108
  2025  02A1  0832               	movf	___ftpack@arg+2,w
  2026  02A2  0431               	iorwf	___ftpack@arg+1,w
  2027  02A3  0430               	iorwf	___ftpack@arg,w
  2028  02A4  1D03               	skipz
  2029  02A5  2AB7               	goto	l2114
  2030  02A6                     l2108:	
  2031  02A6  3000               	movlw	0
  2032  02A7  00B0               	movwf	?___ftpack
  2033  02A8  3000               	movlw	0
  2034  02A9  00B1               	movwf	?___ftpack+1
  2035  02AA  3000               	movlw	0
  2036  02AB  00B2               	movwf	?___ftpack+2
  2037  02AC  0008               	return
  2038  02AD                     l2112:	
  2039  02AD  3001               	movlw	1
  2040  02AE  00B5               	movwf	??___ftpack
  2041  02AF  0835               	movf	??___ftpack,w
  2042  02B0  07B3               	addwf	___ftpack@exp,f
  2043  02B1  3001               	movlw	1
  2044  02B2                     u2435:	
  2045  02B2  36B2               	lsrf	___ftpack@arg+2,f
  2046  02B3  0CB1               	rrf	___ftpack@arg+1,f
  2047  02B4  0CB0               	rrf	___ftpack@arg,f
  2048  02B5  0B89               	decfsz	9,f
  2049  02B6  2AB2               	goto	u2435
  2050  02B7                     l2114:	
  2051  02B7  30FE               	movlw	254
  2052  02B8  0532               	andwf	___ftpack@arg+2,w
  2053  02B9  1903               	btfsc	3,2
  2054  02BA  2AD0               	goto	l405
  2055  02BB  2AAD               	goto	l2112
  2056  02BC                     l2116:	
  2057  02BC  3001               	movlw	1
  2058  02BD  00B5               	movwf	??___ftpack
  2059  02BE  0835               	movf	??___ftpack,w
  2060  02BF  07B3               	addwf	___ftpack@exp,f
  2061  02C0  3001               	movlw	1
  2062  02C1  07B0               	addwf	___ftpack@arg,f
  2063  02C2  3000               	movlw	0
  2064  02C3  1803               	skipnc
  2065  02C4  3001               	movlw	1
  2066  02C5  07B1               	addwf	___ftpack@arg+1,f
  2067  02C6  3000               	movlw	0
  2068  02C7  1803               	skipnc
  2069  02C8  3001               	movlw	1
  2070  02C9  07B2               	addwf	___ftpack@arg+2,f
  2071  02CA  3001               	movlw	1
  2072  02CB                     u2455:	
  2073  02CB  36B2               	lsrf	___ftpack@arg+2,f
  2074  02CC  0CB1               	rrf	___ftpack@arg+1,f
  2075  02CD  0CB0               	rrf	___ftpack@arg,f
  2076  02CE  0B89               	decfsz	9,f
  2077  02CF  2ACB               	goto	u2455
  2078  02D0                     l405:	
  2079  02D0  30FF               	movlw	255
  2080  02D1  0532               	andwf	___ftpack@arg+2,w
  2081  02D2  1903               	btfsc	3,2
  2082  02D3  2ADD               	goto	l2124
  2083  02D4  2ABC               	goto	l2116
  2084  02D5                     l2122:	
  2085  02D5  3001               	movlw	1
  2086  02D6  02B3               	subwf	___ftpack@exp,f
  2087  02D7  3001               	movlw	1
  2088  02D8                     u2475:	
  2089  02D8  35B0               	lslf	___ftpack@arg,f
  2090  02D9  0DB1               	rlf	___ftpack@arg+1,f
  2091  02DA  0DB2               	rlf	___ftpack@arg+2,f
  2092  02DB  0B89               	decfsz	9,f
  2093  02DC  2AD8               	goto	u2475
  2094  02DD                     l2124:	
  2095  02DD  1BB1               	btfsc	___ftpack@arg+1,7
  2096  02DE  2AE3               	goto	l412
  2097  02DF  3002               	movlw	2
  2098  02E0  0233               	subwf	___ftpack@exp,w
  2099  02E1  1803               	skipnc
  2100  02E2  2AD5               	goto	l2122
  2101  02E3                     l412:	
  2102  02E3  1833               	btfsc	___ftpack@exp,0
  2103  02E4  2AEB               	goto	l413
  2104  02E5  30FF               	movlw	255
  2105  02E6  05B0               	andwf	___ftpack@arg,f
  2106  02E7  307F               	movlw	127
  2107  02E8  05B1               	andwf	___ftpack@arg+1,f
  2108  02E9  30FF               	movlw	255
  2109  02EA  05B2               	andwf	___ftpack@arg+2,f
  2110  02EB                     l413:	
  2111  02EB  1003               	clrc
  2112  02EC  0CB3               	rrf	___ftpack@exp,f
  2113  02ED  0833               	movf	___ftpack@exp,w
  2114  02EE  00B5               	movwf	??___ftpack
  2115  02EF  01B6               	clrf	??___ftpack+1
  2116  02F0  01B7               	clrf	??___ftpack+2
  2117  02F1  3010               	movlw	16
  2118  02F2                     u2515:	
  2119  02F2  35B5               	lslf	??___ftpack,f
  2120  02F3  0DB6               	rlf	??___ftpack+1,f
  2121  02F4  0DB7               	rlf	??___ftpack+2,f
  2122  02F5  0B89               	decfsz	9,f
  2123  02F6  2AF2               	goto	u2515
  2124  02F7  0835               	movf	??___ftpack,w
  2125  02F8  04B0               	iorwf	___ftpack@arg,f
  2126  02F9  0836               	movf	??___ftpack+1,w
  2127  02FA  04B1               	iorwf	___ftpack@arg+1,f
  2128  02FB  0837               	movf	??___ftpack+2,w
  2129  02FC  04B2               	iorwf	___ftpack@arg+2,f
  2130  02FD  0834               	movf	___ftpack@sign,w
  2131  02FE  1903               	btfsc	3,2
  2132  02FF  0008               	return
  2133  0300  17B2               	bsf	___ftpack@arg+2,7
  2134  0301  0008               	return
  2135  0302                     __end_of___ftpack:	
  2136                           
  2137                           	psect	text8
  2138  06C2                     __ptext8:	
  2139 ;; *************** function _ReadADC *****************
  2140 ;; Defined at:
  2141 ;;		line 40 in file "adc_pic16.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  ch              1    wreg     unsigned char 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  ch              1   19[BANK0 ] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  2   16[BANK0 ] unsigned int 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1
  2155 ;;      Params:         0       2       0
  2156 ;;      Locals:         0       1       0
  2157 ;;      Temps:          0       1       0
  2158 ;;      Totals:         0       4       0
  2159 ;;Total ram usage:        4 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    4
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_LM35ReadTemp
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _ReadADC
  2171  06C2                     _ReadADC:	
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  2175                           ;ReadADC@ch stored from wreg
  2176  06C2  0020               	movlb	0	; select bank0
  2177  06C3  00B3               	movwf	ReadADC@ch
  2178                           
  2179                           ;adc_pic16.c: 42: if(ch>7) return 0;
  2180  06C4  3008               	movlw	8
  2181  06C5  0233               	subwf	ReadADC@ch,w
  2182  06C6  1C03               	skipc
  2183  06C7  2ECB               	goto	l2142
  2184  06C8  01B0               	clrf	?_ReadADC
  2185  06C9  01B1               	clrf	?_ReadADC+1
  2186  06CA  0008               	return
  2187  06CB                     l2142:	
  2188                           
  2189                           ;adc_pic16.c: 44: ADCON0bits.CHS=ch;
  2190  06CB  0833               	movf	ReadADC@ch,w
  2191  06CC  00B2               	movwf	??_ReadADC
  2192  06CD  0DB2               	rlf	??_ReadADC,f
  2193  06CE  0DB2               	rlf	??_ReadADC,f
  2194  06CF  0021               	movlb	1	; select bank1
  2195  06D0  081D               	movf	29,w	;volatile
  2196  06D1  0020               	movlb	0	; select bank0
  2197  06D2  0632               	xorwf	??_ReadADC,w
  2198  06D3  3983               	andlw	-125
  2199  06D4  0632               	xorwf	??_ReadADC,w
  2200  06D5  0021               	movlb	1	; select bank1
  2201  06D6  009D               	movwf	29	;volatile
  2202                           
  2203                           ;adc_pic16.c: 47: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2204  06D7  30A6               	movlw	166
  2205  06D8  0020               	movlb	0	; select bank0
  2206  06D9  00B2               	movwf	??_ReadADC
  2207  06DA                     u2807:	
  2208  06DA  0BB2               	decfsz	??_ReadADC,f
  2209  06DB  2EDA               	goto	u2807
  2210  06DC  0000               	nop
  2211                           
  2212                           ;adc_pic16.c: 50: ADCON0bits.GO=1;
  2213  06DD  0021               	movlb	1	; select bank1
  2214  06DE  149D               	bsf	29,1	;volatile
  2215  06DF                     l153:	
  2216                           ;adc_pic16.c: 53: while(ADCON0bits.GO);
  2217                           
  2218  06DF  189D               	btfsc	29,1	;volatile
  2219  06E0  2EDF               	goto	l153
  2220                           
  2221                           ;adc_pic16.c: 55: return ((ADRESH<<8)|ADRESL);
  2222  06E1  081C               	movf	28,w	;volatile
  2223  06E2  0020               	movlb	0	; select bank0
  2224  06E3  00B1               	movwf	?_ReadADC+1
  2225  06E4  0021               	movlb	1	; select bank1
  2226  06E5  081B               	movf	27,w	;volatile
  2227  06E6  0020               	movlb	0	; select bank0
  2228  06E7  00B0               	movwf	?_ReadADC
  2229  06E8  0008               	return
  2230  06E9                     __end_of_ReadADC:	
  2231                           
  2232                           	psect	text9
  2233  0616                     __ptext9:	
  2234 ;; *************** function _LCDWriteString *****************
  2235 ;; Defined at:
  2236 ;;		line 279 in file "lcd_hd44780_pic16.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  msg             2   28[BANK0 ] PTR const unsigned char 
  2239 ;;		 -> STR_4(4), STR_3(13), STR_2(4), STR_1(17), 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  cc              1   31[BANK0 ] char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1
  2251 ;;      Params:         0       2       0
  2252 ;;      Locals:         0       1       0
  2253 ;;      Temps:          0       1       0
  2254 ;;      Totals:         0       4       0
  2255 ;;Total ram usage:        4 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    6
  2258 ;; This function calls:
  2259 ;;		_LCDByte
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _LCDWriteString
  2267  0616                     _LCDWriteString:	
  2268  0616                     l1896:	
  2269                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2273                           
  2274  0616  0020               	movlb	0	; select bank0
  2275  0617  083C               	movf	LCDWriteString@msg,w
  2276  0618  0084               	movwf	4
  2277  0619  083D               	movf	LCDWriteString@msg+1,w
  2278  061A  0085               	movwf	5
  2279  061B  0012               	moviw fsr0++
  2280  061C  1903               	btfsc	3,2
  2281  061D  0008               	return
  2282                           
  2283                           ;lcd_hd44780_pic16.c: 282: {
  2284                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  2285  061E  0020               	movlb	0	; select bank0
  2286  061F  083C               	movf	LCDWriteString@msg,w
  2287  0620  0084               	movwf	4
  2288  0621  083D               	movf	LCDWriteString@msg+1,w
  2289  0622  0085               	movwf	5
  2290  0623  0012               	moviw fsr0++
  2291  0624  3A25               	xorlw	37
  2292  0625  1D03               	btfss	3,2
  2293  0626  2E44               	goto	l1892
  2294                           
  2295                           ;lcd_hd44780_pic16.c: 285: {
  2296                           ;lcd_hd44780_pic16.c: 286: msg++;
  2297  0627  3001               	movlw	1
  2298  0628  07BC               	addwf	LCDWriteString@msg,f
  2299  0629  3000               	movlw	0
  2300  062A  3DBD               	addwfc	LCDWriteString@msg+1,f
  2301                           
  2302                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  2303  062B  083C               	movf	LCDWriteString@msg,w
  2304  062C  0084               	movwf	4
  2305  062D  083D               	movf	LCDWriteString@msg+1,w
  2306  062E  0085               	movwf	5
  2307  062F  0800               	movf	0,w	;code access
  2308  0630  3ED0               	addlw	-48
  2309  0631  00BE               	movwf	??_LCDWriteString
  2310  0632  083E               	movf	??_LCDWriteString,w
  2311  0633  00BF               	movwf	LCDWriteString@cc
  2312                           
  2313                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  2314  0634  1BBF               	btfsc	LCDWriteString@cc,7
  2315  0635  2E3F               	goto	l1888
  2316  0636  083F               	movf	LCDWriteString@cc,w
  2317  0637  3A80               	xorlw	128
  2318  0638  3E78               	addlw	-136
  2319  0639  1803               	skipnc
  2320  063A  2E3F               	goto	l1888
  2321                           
  2322                           ;lcd_hd44780_pic16.c: 290: {
  2323                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  2324  063B  01B5               	clrf	LCDByte@isdata
  2325  063C  0AB5               	incf	LCDByte@isdata,f
  2326  063D  083F               	movf	LCDWriteString@cc,w
  2327  063E  2E4C               	goto	L1
  2328  063F                     l1888:	
  2329                           ;lcd_hd44780_pic16.c: 292: }
  2330                           
  2331                           
  2332                           ;lcd_hd44780_pic16.c: 293: else
  2333                           ;lcd_hd44780_pic16.c: 294: {
  2334                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  2335  063F  0020               	movlb	0	; select bank0
  2336  0640  01B5               	clrf	LCDByte@isdata
  2337  0641  0AB5               	incf	LCDByte@isdata,f
  2338  0642  3025               	movlw	37
  2339  0643  24F8               	fcall	_LCDByte
  2340  0644                     l1892:	
  2341                           ;lcd_hd44780_pic16.c: 297: }
  2342                           ;lcd_hd44780_pic16.c: 298: }
  2343                           
  2344                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  2345                           
  2346                           
  2347                           ;lcd_hd44780_pic16.c: 299: else
  2348                           ;lcd_hd44780_pic16.c: 300: {
  2349                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  2350  0644  0020               	movlb	0	; select bank0
  2351  0645  01B5               	clrf	LCDByte@isdata
  2352  0646  0AB5               	incf	LCDByte@isdata,f
  2353  0647  083C               	movf	LCDWriteString@msg,w
  2354  0648  0084               	movwf	4
  2355  0649  083D               	movf	LCDWriteString@msg+1,w
  2356  064A  0085               	movwf	5
  2357  064B  0800               	movf	0,w	;code access
  2358  064C                     L1:	
  2359  064C  24F8               	fcall	_LCDByte
  2360                           
  2361                           ;lcd_hd44780_pic16.c: 302: }
  2362                           ;lcd_hd44780_pic16.c: 303: msg++;
  2363  064D  3001               	movlw	1
  2364  064E  0020               	movlb	0	; select bank0
  2365  064F  07BC               	addwf	LCDWriteString@msg,f
  2366  0650  3000               	movlw	0
  2367  0651  3DBD               	addwfc	LCDWriteString@msg+1,f
  2368  0652  2E16               	goto	l1896
  2369  0653                     __end_of_LCDWriteString:	
  2370                           
  2371                           	psect	text10
  2372  01A5                     __ptext10:	
  2373 ;; *************** function _LCDWriteInt *****************
  2374 ;; Defined at:
  2375 ;;		line 317 in file "lcd_hd44780_pic16.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  val             2   28[BANK0 ] int 
  2378 ;;  field_length    1   30[BANK0 ] char 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  str             5   33[BANK0 ] unsigned char [5]
  2381 ;;  i               2   40[BANK0 ] int 
  2382 ;;  j               2   38[BANK0 ] int 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1
  2392 ;;      Params:         0       3       0
  2393 ;;      Locals:         0       9       0
  2394 ;;      Temps:          0       2       0
  2395 ;;      Totals:         0      14       0
  2396 ;;Total ram usage:       14 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    6
  2399 ;; This function calls:
  2400 ;;		_LCDByte
  2401 ;;		___awdiv
  2402 ;;		___awmod
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _LCDWriteInt
  2410  01A5                     _LCDWriteInt:	
  2411                           
  2412                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  2413                           
  2414                           ;incstack = 0
  2415                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2416  01A5  3056               	movlw	low LCDWriteInt@F2516
  2417  01A6  0086               	movwf	6
  2418  01A7  3000               	movlw	high LCDWriteInt@F2516
  2419  01A8  0087               	movwf	7
  2420  01A9  3041               	movlw	low LCDWriteInt@str
  2421  01AA  0084               	movwf	4
  2422  01AB  3000               	movlw	high LCDWriteInt@str
  2423  01AC  0085               	movwf	5
  2424  01AD  3005               	movlw	5
  2425  01AE  0020               	movlb	0	; select bank0
  2426  01AF  00BF               	movwf	??_LCDWriteInt
  2427  01B0                     u2170:	
  2428  01B0  0016               	moviw fsr1++
  2429  01B1  001A               	movwi fsr0++
  2430  01B2  0BBF               	decfsz	??_LCDWriteInt,f
  2431  01B3  29B0               	goto	u2170
  2432                           
  2433                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  2434  01B4  3004               	movlw	4
  2435  01B5  00C8               	movwf	LCDWriteInt@i
  2436  01B6  3000               	movlw	0
  2437  01B7  00C9               	movwf	LCDWriteInt@i+1
  2438  01B8  01C6               	clrf	LCDWriteInt@j
  2439  01B9  01C7               	clrf	LCDWriteInt@j+1
  2440                           
  2441                           ;lcd_hd44780_pic16.c: 323: if(val<0)
  2442  01BA  1FBD               	btfss	LCDWriteInt@val+1,7
  2443  01BB  29C6               	goto	l1916
  2444                           
  2445                           ;lcd_hd44780_pic16.c: 324: {
  2446                           ;lcd_hd44780_pic16.c: 325: (LCDByte('-',1));
  2447  01BC  01B5               	clrf	LCDByte@isdata
  2448  01BD  0AB5               	incf	LCDByte@isdata,f
  2449  01BE  302D               	movlw	45
  2450  01BF  24F8               	fcall	_LCDByte
  2451                           
  2452                           ;lcd_hd44780_pic16.c: 326: val=val*-1;
  2453  01C0  0020               	movlb	0	; select bank0
  2454  01C1  09BC               	comf	LCDWriteInt@val,f
  2455  01C2  09BD               	comf	LCDWriteInt@val+1,f
  2456  01C3  0ABC               	incf	LCDWriteInt@val,f
  2457  01C4  1903               	skipnz
  2458  01C5  0ABD               	incf	LCDWriteInt@val+1,f
  2459  01C6                     l1916:	
  2460                           ;lcd_hd44780_pic16.c: 327: }
  2461                           ;lcd_hd44780_pic16.c: 329: while(val)
  2462                           
  2463  01C6  083C               	movf	LCDWriteInt@val,w
  2464  01C7  043D               	iorwf	LCDWriteInt@val+1,w
  2465  01C8  1903               	btfsc	3,2
  2466  01C9  29EF               	goto	l1918
  2467                           
  2468                           ;lcd_hd44780_pic16.c: 330: {
  2469                           ;lcd_hd44780_pic16.c: 331: str[i]=val%10;
  2470  01CA  300A               	movlw	10
  2471  01CB  00B0               	movwf	___awmod@divisor
  2472  01CC  3000               	movlw	0
  2473  01CD  00B1               	movwf	___awmod@divisor+1
  2474  01CE  083D               	movf	LCDWriteInt@val+1,w
  2475  01CF  00B3               	movwf	___awmod@dividend+1
  2476  01D0  083C               	movf	LCDWriteInt@val,w
  2477  01D1  00B2               	movwf	___awmod@dividend
  2478  01D2  258B               	fcall	___awmod
  2479  01D3  0020               	movlb	0	; select bank0
  2480  01D4  0830               	movf	?___awmod,w
  2481  01D5  00BF               	movwf	??_LCDWriteInt
  2482  01D6  0848               	movf	LCDWriteInt@i,w
  2483  01D7  3E41               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2484  01D8  0086               	movwf	6
  2485  01D9  0187               	clrf	7
  2486  01DA  083F               	movf	??_LCDWriteInt,w
  2487  01DB  0081               	movwf	1
  2488                           
  2489                           ;lcd_hd44780_pic16.c: 332: val=val/10;
  2490  01DC  300A               	movlw	10
  2491  01DD  00B0               	movwf	___awdiv@divisor
  2492  01DE  3000               	movlw	0
  2493  01DF  00B1               	movwf	___awdiv@divisor+1
  2494  01E0  083D               	movf	LCDWriteInt@val+1,w
  2495  01E1  00B3               	movwf	___awdiv@dividend+1
  2496  01E2  083C               	movf	LCDWriteInt@val,w
  2497  01E3  00B2               	movwf	___awdiv@dividend
  2498  01E4  240A               	fcall	___awdiv
  2499  01E5  0020               	movlb	0	; select bank0
  2500  01E6  0831               	movf	?___awdiv+1,w
  2501  01E7  00BD               	movwf	LCDWriteInt@val+1
  2502  01E8  0830               	movf	?___awdiv,w
  2503  01E9  00BC               	movwf	LCDWriteInt@val
  2504                           
  2505                           ;lcd_hd44780_pic16.c: 333: i--;
  2506  01EA  30FF               	movlw	255
  2507  01EB  07C8               	addwf	LCDWriteInt@i,f
  2508  01EC  30FF               	movlw	255
  2509  01ED  3DC9               	addwfc	LCDWriteInt@i+1,f
  2510  01EE  29C6               	goto	l1916
  2511  01EF                     l1918:	
  2512                           
  2513                           ;lcd_hd44780_pic16.c: 334: }
  2514                           ;lcd_hd44780_pic16.c: 335: if(field_length==-1)
  2515  01EF  0A3E               	incf	LCDWriteInt@field_length,w
  2516  01F0  1903               	btfsc	3,2
  2517  01F1  2A02               	goto	l1926
  2518                           
  2519                           ;lcd_hd44780_pic16.c: 337: else
  2520                           ;lcd_hd44780_pic16.c: 338: j=5-field_length;
  2521                           
  2522                           ;lcd_hd44780_pic16.c: 336: while(str[j]==-16) j++;
  2523  01F2  083E               	movf	LCDWriteInt@field_length,w
  2524  01F3  00BF               	movwf	??_LCDWriteInt
  2525  01F4  01C0               	clrf	??_LCDWriteInt+1
  2526  01F5  1BBF               	btfsc	??_LCDWriteInt,7
  2527  01F6  03C0               	decf	??_LCDWriteInt+1,f
  2528  01F7  09BF               	comf	??_LCDWriteInt,f
  2529  01F8  09C0               	comf	??_LCDWriteInt+1,f
  2530  01F9  0ABF               	incf	??_LCDWriteInt,f
  2531  01FA  1903               	skipnz
  2532  01FB  0AC0               	incf	??_LCDWriteInt+1,f
  2533  01FC  083F               	movf	??_LCDWriteInt,w
  2534  01FD  3E05               	addlw	5
  2535  01FE  00C6               	movwf	LCDWriteInt@j
  2536  01FF  3000               	movlw	0
  2537  0200  3D40               	addwfc	??_LCDWriteInt+1,w
  2538  0201  00C7               	movwf	LCDWriteInt@j+1
  2539  0202                     l1926:	
  2540                           
  2541                           ;lcd_hd44780_pic16.c: 341: for(i=j;i<5;i++)
  2542  0202  0847               	movf	LCDWriteInt@j+1,w
  2543  0203  00C9               	movwf	LCDWriteInt@i+1
  2544  0204  0846               	movf	LCDWriteInt@j,w
  2545  0205  00C8               	movwf	LCDWriteInt@i
  2546  0206                     L2:	
  2547  0206  0849               	movf	LCDWriteInt@i+1,w
  2548  0207  3A80               	xorlw	128
  2549  0208  00BF               	movwf	??_LCDWriteInt
  2550  0209  3080               	movlw	128
  2551  020A  023F               	subwf	??_LCDWriteInt,w
  2552  020B  1D03               	skipz
  2553  020C  2A0F               	goto	u2215
  2554  020D  3005               	movlw	5
  2555  020E  0248               	subwf	LCDWriteInt@i,w
  2556  020F                     u2215:	
  2557  020F  1803               	btfsc	3,0
  2558  0210  0008               	return
  2559                           
  2560                           ;lcd_hd44780_pic16.c: 342: {
  2561                           ;lcd_hd44780_pic16.c: 343: (LCDByte(48+str[i],1));
  2562  0211  0020               	movlb	0	; select bank0
  2563  0212  01B5               	clrf	LCDByte@isdata
  2564  0213  0AB5               	incf	LCDByte@isdata,f
  2565  0214  0848               	movf	LCDWriteInt@i,w
  2566  0215  3E41               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2567  0216  0086               	movwf	6
  2568  0217  0187               	clrf	7
  2569  0218  0801               	movf	1,w
  2570  0219  3E30               	addlw	48
  2571  021A  24F8               	fcall	_LCDByte
  2572  021B  3001               	movlw	1
  2573  021C  0020               	movlb	0	; select bank0
  2574  021D  07C8               	addwf	LCDWriteInt@i,f
  2575  021E  3000               	movlw	0
  2576  021F  3DC9               	addwfc	LCDWriteInt@i+1,f
  2577  0220  2A06               	goto	L2
  2578  0221                     __end_of_LCDWriteInt:	
  2579                           
  2580                           	psect	text11
  2581  058B                     __ptext11:	
  2582 ;; *************** function ___awmod *****************
  2583 ;; Defined at:
  2584 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  divisor         2   16[BANK0 ] int 
  2587 ;;  dividend        2   18[BANK0 ] int 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  sign            1   22[BANK0 ] unsigned char 
  2590 ;;  counter         1   21[BANK0 ] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  2   16[BANK0 ] int 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1
  2600 ;;      Params:         0       4       0
  2601 ;;      Locals:         0       2       0
  2602 ;;      Temps:          0       1       0
  2603 ;;      Totals:         0       7       0
  2604 ;;Total ram usage:        7 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    4
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_LCDWriteInt
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function ___awmod
  2616  058B                     ___awmod:	
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2620  058B  0020               	movlb	0	; select bank0
  2621  058C  01B6               	clrf	___awmod@sign
  2622  058D  1FB3               	btfss	___awmod@dividend+1,7
  2623  058E  2D96               	goto	l1586
  2624  058F  09B2               	comf	___awmod@dividend,f
  2625  0590  09B3               	comf	___awmod@dividend+1,f
  2626  0591  0AB2               	incf	___awmod@dividend,f
  2627  0592  1903               	skipnz
  2628  0593  0AB3               	incf	___awmod@dividend+1,f
  2629  0594  01B6               	clrf	___awmod@sign
  2630  0595  0AB6               	incf	___awmod@sign,f
  2631  0596                     l1586:	
  2632  0596  1FB1               	btfss	___awmod@divisor+1,7
  2633  0597  2D9D               	goto	l1590
  2634  0598  09B0               	comf	___awmod@divisor,f
  2635  0599  09B1               	comf	___awmod@divisor+1,f
  2636  059A  0AB0               	incf	___awmod@divisor,f
  2637  059B  1903               	skipnz
  2638  059C  0AB1               	incf	___awmod@divisor+1,f
  2639  059D                     l1590:	
  2640  059D  0830               	movf	___awmod@divisor,w
  2641  059E  0431               	iorwf	___awmod@divisor+1,w
  2642  059F  1903               	btfsc	3,2
  2643  05A0  2DC4               	goto	l1608
  2644  05A1  01B5               	clrf	___awmod@counter
  2645  05A2  0AB5               	incf	___awmod@counter,f
  2646  05A3                     l1598:	
  2647  05A3  1BB1               	btfsc	___awmod@divisor+1,7
  2648  05A4  2DAF               	goto	l1600
  2649  05A5  3001               	movlw	1
  2650  05A6                     u1605:	
  2651  05A6  35B0               	lslf	___awmod@divisor,f
  2652  05A7  0DB1               	rlf	___awmod@divisor+1,f
  2653  05A8  0B89               	decfsz	9,f
  2654  05A9  2DA6               	goto	u1605
  2655  05AA  3001               	movlw	1
  2656  05AB  00B4               	movwf	??___awmod
  2657  05AC  0834               	movf	??___awmod,w
  2658  05AD  07B5               	addwf	___awmod@counter,f
  2659  05AE  2DA3               	goto	l1598
  2660  05AF                     l1600:	
  2661  05AF  0831               	movf	___awmod@divisor+1,w
  2662  05B0  0233               	subwf	___awmod@dividend+1,w
  2663  05B1  1D03               	skipz
  2664  05B2  2DB5               	goto	u1625
  2665  05B3  0830               	movf	___awmod@divisor,w
  2666  05B4  0232               	subwf	___awmod@dividend,w
  2667  05B5                     u1625:	
  2668  05B5  1C03               	skipc
  2669  05B6  2DBB               	goto	l1604
  2670  05B7  0830               	movf	___awmod@divisor,w
  2671  05B8  02B2               	subwf	___awmod@dividend,f
  2672  05B9  0831               	movf	___awmod@divisor+1,w
  2673  05BA  3BB3               	subwfb	___awmod@dividend+1,f
  2674  05BB                     l1604:	
  2675  05BB  3001               	movlw	1
  2676  05BC                     u1635:	
  2677  05BC  36B1               	lsrf	___awmod@divisor+1,f
  2678  05BD  0CB0               	rrf	___awmod@divisor,f
  2679  05BE  0B89               	decfsz	9,f
  2680  05BF  2DBC               	goto	u1635
  2681  05C0  3001               	movlw	1
  2682  05C1  02B5               	subwf	___awmod@counter,f
  2683  05C2  1D03               	btfss	3,2
  2684  05C3  2DAF               	goto	l1600
  2685  05C4                     l1608:	
  2686  05C4  0836               	movf	___awmod@sign,w
  2687  05C5  1903               	btfsc	3,2
  2688  05C6  2DCC               	goto	l1612
  2689  05C7  09B2               	comf	___awmod@dividend,f
  2690  05C8  09B3               	comf	___awmod@dividend+1,f
  2691  05C9  0AB2               	incf	___awmod@dividend,f
  2692  05CA  1903               	skipnz
  2693  05CB  0AB3               	incf	___awmod@dividend+1,f
  2694  05CC                     l1612:	
  2695  05CC  0833               	movf	___awmod@dividend+1,w
  2696  05CD  00B1               	movwf	?___awmod+1
  2697  05CE  0832               	movf	___awmod@dividend,w
  2698  05CF  00B0               	movwf	?___awmod
  2699  05D0  0008               	return
  2700  05D1                     __end_of___awmod:	
  2701                           
  2702                           	psect	text12
  2703  040A                     __ptext12:	
  2704 ;; *************** function ___awdiv *****************
  2705 ;; Defined at:
  2706 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  divisor         2   16[BANK0 ] int 
  2709 ;;  dividend        2   18[BANK0 ] int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  quotient        2   23[BANK0 ] int 
  2712 ;;  sign            1   22[BANK0 ] unsigned char 
  2713 ;;  counter         1   21[BANK0 ] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  2   16[BANK0 ] int 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1
  2723 ;;      Params:         0       4       0
  2724 ;;      Locals:         0       4       0
  2725 ;;      Temps:          0       1       0
  2726 ;;      Totals:         0       9       0
  2727 ;;Total ram usage:        9 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    4
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_LCDWriteInt
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           
  2738                           ;psect for function ___awdiv
  2739  040A                     ___awdiv:	
  2740                           
  2741                           ;incstack = 0
  2742                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2743  040A  0020               	movlb	0	; select bank0
  2744  040B  01B6               	clrf	___awdiv@sign
  2745  040C  1FB1               	btfss	___awdiv@divisor+1,7
  2746  040D  2C15               	goto	l1542
  2747  040E  09B0               	comf	___awdiv@divisor,f
  2748  040F  09B1               	comf	___awdiv@divisor+1,f
  2749  0410  0AB0               	incf	___awdiv@divisor,f
  2750  0411  1903               	skipnz
  2751  0412  0AB1               	incf	___awdiv@divisor+1,f
  2752  0413  01B6               	clrf	___awdiv@sign
  2753  0414  0AB6               	incf	___awdiv@sign,f
  2754  0415                     l1542:	
  2755  0415  1FB3               	btfss	___awdiv@dividend+1,7
  2756  0416  2C20               	goto	l1548
  2757  0417  09B2               	comf	___awdiv@dividend,f
  2758  0418  09B3               	comf	___awdiv@dividend+1,f
  2759  0419  0AB2               	incf	___awdiv@dividend,f
  2760  041A  1903               	skipnz
  2761  041B  0AB3               	incf	___awdiv@dividend+1,f
  2762  041C  3001               	movlw	1
  2763  041D  00B4               	movwf	??___awdiv
  2764  041E  0834               	movf	??___awdiv,w
  2765  041F  06B6               	xorwf	___awdiv@sign,f
  2766  0420                     l1548:	
  2767  0420  01B7               	clrf	___awdiv@quotient
  2768  0421  01B8               	clrf	___awdiv@quotient+1
  2769  0422  0830               	movf	___awdiv@divisor,w
  2770  0423  0431               	iorwf	___awdiv@divisor+1,w
  2771  0424  1903               	btfsc	3,2
  2772  0425  2C4F               	goto	l1570
  2773  0426  01B5               	clrf	___awdiv@counter
  2774  0427  0AB5               	incf	___awdiv@counter,f
  2775  0428                     l1558:	
  2776  0428  1BB1               	btfsc	___awdiv@divisor+1,7
  2777  0429  2C34               	goto	l1560
  2778  042A  3001               	movlw	1
  2779  042B                     u1505:	
  2780  042B  35B0               	lslf	___awdiv@divisor,f
  2781  042C  0DB1               	rlf	___awdiv@divisor+1,f
  2782  042D  0B89               	decfsz	9,f
  2783  042E  2C2B               	goto	u1505
  2784  042F  3001               	movlw	1
  2785  0430  00B4               	movwf	??___awdiv
  2786  0431  0834               	movf	??___awdiv,w
  2787  0432  07B5               	addwf	___awdiv@counter,f
  2788  0433  2C28               	goto	l1558
  2789  0434                     l1560:	
  2790  0434  3001               	movlw	1
  2791  0435                     u1525:	
  2792  0435  35B7               	lslf	___awdiv@quotient,f
  2793  0436  0DB8               	rlf	___awdiv@quotient+1,f
  2794  0437  0B89               	decfsz	9,f
  2795  0438  2C35               	goto	u1525
  2796  0439  0831               	movf	___awdiv@divisor+1,w
  2797  043A  0233               	subwf	___awdiv@dividend+1,w
  2798  043B  1D03               	skipz
  2799  043C  2C3F               	goto	u1535
  2800  043D  0830               	movf	___awdiv@divisor,w
  2801  043E  0232               	subwf	___awdiv@dividend,w
  2802  043F                     u1535:	
  2803  043F  1C03               	skipc
  2804  0440  2C46               	goto	l1566
  2805  0441  0830               	movf	___awdiv@divisor,w
  2806  0442  02B2               	subwf	___awdiv@dividend,f
  2807  0443  0831               	movf	___awdiv@divisor+1,w
  2808  0444  3BB3               	subwfb	___awdiv@dividend+1,f
  2809  0445  1437               	bsf	___awdiv@quotient,0
  2810  0446                     l1566:	
  2811  0446  3001               	movlw	1
  2812  0447                     u1545:	
  2813  0447  36B1               	lsrf	___awdiv@divisor+1,f
  2814  0448  0CB0               	rrf	___awdiv@divisor,f
  2815  0449  0B89               	decfsz	9,f
  2816  044A  2C47               	goto	u1545
  2817  044B  3001               	movlw	1
  2818  044C  02B5               	subwf	___awdiv@counter,f
  2819  044D  1D03               	btfss	3,2
  2820  044E  2C34               	goto	l1560
  2821  044F                     l1570:	
  2822  044F  0836               	movf	___awdiv@sign,w
  2823  0450  1903               	btfsc	3,2
  2824  0451  2C57               	goto	l1574
  2825  0452  09B7               	comf	___awdiv@quotient,f
  2826  0453  09B8               	comf	___awdiv@quotient+1,f
  2827  0454  0AB7               	incf	___awdiv@quotient,f
  2828  0455  1903               	skipnz
  2829  0456  0AB8               	incf	___awdiv@quotient+1,f
  2830  0457                     l1574:	
  2831  0457  0838               	movf	___awdiv@quotient+1,w
  2832  0458  00B1               	movwf	?___awdiv+1
  2833  0459  0837               	movf	___awdiv@quotient,w
  2834  045A  00B0               	movwf	?___awdiv
  2835  045B  0008               	return
  2836  045C                     __end_of___awdiv:	
  2837                           
  2838                           	psect	text13
  2839  0542                     __ptext13:	
  2840 ;; *************** function _LCDInit *****************
  2841 ;; Defined at:
  2842 ;;		line 207 in file "lcd_hd44780_pic16.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  style           1    wreg     unsigned char 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  style           1   30[BANK0 ] unsigned char 
  2847 ;;  __i             1   31[BANK0 ] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1
  2857 ;;      Params:         0       0       0
  2858 ;;      Locals:         0       2       0
  2859 ;;      Temps:          0       2       0
  2860 ;;      Totals:         0       4       0
  2861 ;;Total ram usage:        4 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    6
  2864 ;; This function calls:
  2865 ;;		_LCDBusyLoop
  2866 ;;		_LCDByte
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _LCDInit
  2874  0542                     _LCDInit:	
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2878                           ;LCDInit@style stored from wreg
  2879  0542  0020               	movlb	0	; select bank0
  2880  0543  00BE               	movwf	LCDInit@style
  2881                           
  2882                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  2883  0544  30C3               	movlw	195
  2884  0545  00BD               	movwf	??_LCDInit+1
  2885  0546  30CD               	movlw	205
  2886  0547  00BC               	movwf	??_LCDInit
  2887  0548                     u2817:	
  2888  0548  0BBC               	decfsz	??_LCDInit,f
  2889  0549  2D48               	goto	u2817
  2890  054A  0BBD               	decfsz	??_LCDInit+1,f
  2891  054B  2D48               	goto	u2817
  2892                           
  2893                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<2));
  2894  054C  30C3               	movlw	195
  2895  054D  0020               	movlb	0	; select bank0
  2896  054E  00BC               	movwf	??_LCDInit
  2897  054F  083C               	movf	??_LCDInit,w
  2898  0550  0021               	movlb	1	; select bank1
  2899  0551  058E               	andwf	14,f	;volatile
  2900                           
  2901                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC1=0;
  2902  0552  108E               	bcf	14,1	;volatile
  2903                           
  2904                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC0=0;
  2905  0553  100E               	bcf	14,0	;volatile
  2906                           
  2907                           ;lcd_hd44780_pic16.c: 216: TRISAbits.TRISA0=0;
  2908  0554  100C               	bcf	12,0	;volatile
  2909                           
  2910                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<2));
  2911  0555  30C3               	movlw	195
  2912  0556  0020               	movlb	0	; select bank0
  2913  0557  00BC               	movwf	??_LCDInit
  2914  0558  083C               	movf	??_LCDInit,w
  2915  0559  058E               	andwf	14,f	;volatile
  2916                           
  2917                           ;lcd_hd44780_pic16.c: 220: (RC1=0);
  2918  055A  108E               	bcf	14,1	;volatile
  2919                           
  2920                           ;lcd_hd44780_pic16.c: 221: (RA0=0);
  2921  055B  100C               	bcf	12,0	;volatile
  2922                           
  2923                           ;lcd_hd44780_pic16.c: 222: (RC0=0);
  2924  055C  100E               	bcf	14,0	;volatile
  2925                           
  2926                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2927  055D  3200               	nop2	;2 cycle nop
  2928                           
  2929                           ;lcd_hd44780_pic16.c: 227: (RC1=1);
  2930  055E  0020               	movlb	0	; select bank0
  2931  055F  148E               	bsf	14,1	;volatile
  2932                           
  2933                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<2);
  2934  0560  158E               	bsf	14,3	;volatile
  2935                           
  2936                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2937  0561  3200               	nop2	;2 cycle nop
  2938  0562  3200               	nop2	;2 cycle nop
  2939  0563  0000               	nop
  2940                           
  2941                           ;lcd_hd44780_pic16.c: 230: (RC1=0);
  2942  0564  0020               	movlb	0	; select bank0
  2943  0565  108E               	bcf	14,1	;volatile
  2944                           
  2945                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2946  0566  3200               	nop2	;2 cycle nop
  2947  0567  3200               	nop2	;2 cycle nop
  2948  0568  0000               	nop
  2949                           
  2950                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  2951  0569  235D               	fcall	_LCDBusyLoop
  2952                           
  2953                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  2954  056A  0020               	movlb	0	; select bank0
  2955  056B  01B5               	clrf	LCDByte@isdata
  2956  056C  3028               	movlw	40
  2957  056D  24F8               	fcall	_LCDByte
  2958                           
  2959                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  2960  056E  0020               	movlb	0	; select bank0
  2961  056F  01B5               	clrf	LCDByte@isdata
  2962  0570  083E               	movf	LCDInit@style,w
  2963  0571  380C               	iorlw	12
  2964  0572  24F8               	fcall	_LCDByte
  2965                           
  2966                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  2967  0573  0020               	movlb	0	; select bank0
  2968  0574  01B5               	clrf	LCDByte@isdata
  2969  0575  3040               	movlw	64
  2970  0576  24F8               	fcall	_LCDByte
  2971                           
  2972                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  2973                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  2974  0577  0020               	movlb	0	; select bank0
  2975  0578  01BF               	clrf	LCDInit@__i
  2976  0579                     L3:	
  2977  0579  3008               	movlw	8
  2978  057A  023F               	subwf	LCDInit@__i,w
  2979  057B  1803               	btfsc	3,0
  2980  057C  0008               	return
  2981                           
  2982                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  2983  057D  01B5               	clrf	LCDByte@isdata
  2984  057E  0AB5               	incf	LCDByte@isdata,f
  2985  057F  083F               	movf	LCDInit@__i,w
  2986  0580  3E4E               	addlw	(low (___cgram| 0))& (0+255)
  2987  0581  0086               	movwf	6
  2988  0582  0187               	clrf	7
  2989  0583  0801               	movf	1,w
  2990  0584  24F8               	fcall	_LCDByte
  2991  0585  3001               	movlw	1
  2992  0586  0020               	movlb	0	; select bank0
  2993  0587  00BC               	movwf	??_LCDInit
  2994  0588  083C               	movf	??_LCDInit,w
  2995  0589  07BF               	addwf	LCDInit@__i,f
  2996  058A  2D79               	goto	L3
  2997  058B                     __end_of_LCDInit:	
  2998                           
  2999                           	psect	text14
  3000  06E9                     __ptext14:	
  3001 ;; *************** function _LCDGotoXY *****************
  3002 ;; Defined at:
  3003 ;;		line 351 in file "lcd_hd44780_pic16.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  x               1    wreg     unsigned char 
  3006 ;;  y               1   28[BANK0 ] unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  x               1   30[BANK0 ] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1
  3018 ;;      Params:         0       1       0
  3019 ;;      Locals:         0       1       0
  3020 ;;      Temps:          0       1       0
  3021 ;;      Totals:         0       3       0
  3022 ;;Total ram usage:        3 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    6
  3025 ;; This function calls:
  3026 ;;		_LCDByte
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _LCDGotoXY
  3034  06E9                     _LCDGotoXY:	
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3038                           ;LCDGotoXY@x stored from wreg
  3039  06E9  0020               	movlb	0	; select bank0
  3040  06EA  00BE               	movwf	LCDGotoXY@x
  3041                           
  3042                           ;lcd_hd44780_pic16.c: 353: if(x>=20) return;
  3043  06EB  3014               	movlw	20
  3044  06EC  023E               	subwf	LCDGotoXY@x,w
  3045  06ED  1803               	btfsc	3,0
  3046  06EE  0008               	return
  3047  06EF  2EF9               	goto	l1948
  3048  06F0                     l69:	
  3049                           ;lcd_hd44780_pic16.c: 361: case 1:
  3050                           
  3051                           ;lcd_hd44780_pic16.c: 360: break;
  3052                           
  3053                           ;lcd_hd44780_pic16.c: 358: {
  3054                           ;lcd_hd44780_pic16.c: 359: case 0:
  3055                           
  3056                           ;lcd_hd44780_pic16.c: 357: switch(y)
  3057                           
  3058                           
  3059                           ;lcd_hd44780_pic16.c: 362: x|=0b01000000;
  3060  06F0  173E               	bsf	LCDGotoXY@x,6
  3061                           
  3062                           ;lcd_hd44780_pic16.c: 363: break;
  3063  06F1  2F07               	goto	l68
  3064  06F2                     l1942:	
  3065                           ;lcd_hd44780_pic16.c: 364: case 2:
  3066                           
  3067                           
  3068                           ;lcd_hd44780_pic16.c: 365: x+=0x14;
  3069  06F2  3014               	movlw	20
  3070  06F3  2EF5               	goto	L4
  3071  06F4                     l1944:	
  3072                           ;lcd_hd44780_pic16.c: 367: case 3:
  3073                           
  3074                           ;lcd_hd44780_pic16.c: 366: break;
  3075                           
  3076                           
  3077                           ;lcd_hd44780_pic16.c: 368: x+=0x54;
  3078  06F4  3054               	movlw	84
  3079  06F5                     L4:	
  3080  06F5  00BD               	movwf	??_LCDGotoXY
  3081  06F6  083D               	movf	??_LCDGotoXY,w
  3082  06F7  07BE               	addwf	LCDGotoXY@x,f
  3083                           
  3084                           ;lcd_hd44780_pic16.c: 370: }
  3085                           
  3086                           ;lcd_hd44780_pic16.c: 369: break;
  3087  06F8  2F07               	goto	l68
  3088  06F9                     l1948:	
  3089  06F9  083C               	movf	LCDGotoXY@y,w
  3090                           
  3091                           ; Switch size 1, requested type "space"
  3092                           ; Number of cases is 4, Range of values is 0 to 3
  3093                           ; switch strategies available:
  3094                           ; Name         Instructions Cycles
  3095                           ; simple_byte           13     7 (average)
  3096                           ; direct_byte           14     6 (fixed)
  3097                           ; jumptable            260     6 (fixed)
  3098                           ;	Chosen strategy is simple_byte
  3099  06FA  3A00               	xorlw	0	; case 0
  3100  06FB  1903               	skipnz
  3101  06FC  2F07               	goto	l68
  3102  06FD  3A01               	xorlw	1	; case 1
  3103  06FE  1903               	skipnz
  3104  06FF  2EF0               	goto	l69
  3105  0700  3A03               	xorlw	3	; case 2
  3106  0701  1903               	skipnz
  3107  0702  2EF2               	goto	l1942
  3108  0703  3A01               	xorlw	1	; case 3
  3109  0704  1903               	skipnz
  3110  0705  2EF4               	goto	l1944
  3111  0706  2F07               	goto	l68
  3112  0707                     l68:	
  3113                           
  3114                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  3115  0707  17BE               	bsf	LCDGotoXY@x,7
  3116                           
  3117                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  3118  0708  01B5               	clrf	LCDByte@isdata
  3119  0709  083E               	movf	LCDGotoXY@x,w
  3120  070A  24F8               	fcall	_LCDByte
  3121  070B  0008               	return
  3122  070C                     __end_of_LCDGotoXY:	
  3123                           
  3124                           	psect	text15
  3125  04F8                     __ptext15:	
  3126 ;; *************** function _LCDByte *****************
  3127 ;; Defined at:
  3128 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  c               1    wreg     unsigned char 
  3131 ;;  isdata          1   21[BANK0 ] unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  c               1   26[BANK0 ] unsigned char 
  3134 ;;  temp            1   27[BANK0 ] unsigned char 
  3135 ;;  ln              1   25[BANK0 ] unsigned char 
  3136 ;;  hn              1   24[BANK0 ] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, pclath, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1
  3146 ;;      Params:         0       1       0
  3147 ;;      Locals:         0       4       0
  3148 ;;      Temps:          0       2       0
  3149 ;;      Totals:         0       7       0
  3150 ;;Total ram usage:        7 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    5
  3153 ;; This function calls:
  3154 ;;		_LCDBusyLoop
  3155 ;; This function is called by:
  3156 ;;		_LCDInit
  3157 ;;		_LCDWriteString
  3158 ;;		_LCDWriteInt
  3159 ;;		_LCDGotoXY
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function _LCDByte
  3166  04F8                     _LCDByte:	
  3167                           
  3168                           ;incstack = 0
  3169                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3170                           ;LCDByte@c stored from wreg
  3171  04F8  0020               	movlb	0	; select bank0
  3172  04F9  00BA               	movwf	LCDByte@c
  3173                           
  3174                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3175                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3176                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3177  04FA  083A               	movf	LCDByte@c,w
  3178  04FB  00B6               	movwf	??_LCDByte
  3179  04FC  3004               	movlw	4
  3180  04FD                     u1415:	
  3181  04FD  36B6               	lsrf	??_LCDByte,f
  3182  04FE  0B89               	decfsz	9,f
  3183  04FF  2CFD               	goto	u1415
  3184  0500  0836               	movf	??_LCDByte,w
  3185  0501  00B7               	movwf	??_LCDByte+1
  3186  0502  0837               	movf	??_LCDByte+1,w
  3187  0503  00B8               	movwf	LCDByte@hn
  3188                           
  3189                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3190  0504  083A               	movf	LCDByte@c,w
  3191  0505  390F               	andlw	15
  3192  0506  00B6               	movwf	??_LCDByte
  3193  0507  0836               	movf	??_LCDByte,w
  3194  0508  00B9               	movwf	LCDByte@ln
  3195                           
  3196                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3197  0509  0835               	movf	LCDByte@isdata,w
  3198  050A  1D03               	btfss	3,2
  3199  050B  2D0E               	goto	l23
  3200                           
  3201                           ;lcd_hd44780_pic16.c: 96: (RC0=0);
  3202  050C  100E               	bcf	14,0	;volatile
  3203  050D  2D0F               	goto	l24
  3204  050E                     l23:	
  3205                           
  3206                           ;lcd_hd44780_pic16.c: 97: else
  3207                           ;lcd_hd44780_pic16.c: 98: (RC0=1);
  3208  050E  140E               	bsf	14,0	;volatile
  3209  050F                     l24:	
  3210                           
  3211                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3212  050F  3200               	nop2	;2 cycle nop
  3213                           
  3214                           ;lcd_hd44780_pic16.c: 102: (RC1=1);
  3215  0510  0020               	movlb	0	; select bank0
  3216  0511  148E               	bsf	14,1	;volatile
  3217                           
  3218                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  3219  0512  0838               	movf	LCDByte@hn,w
  3220  0513  00B6               	movwf	??_LCDByte
  3221  0514  3002               	movlw	2
  3222  0515                     u1435:	
  3223  0515  35B6               	lslf	??_LCDByte,f
  3224  0516  0B89               	decfsz	9,f
  3225  0517  2D15               	goto	u1435
  3226  0518  080E               	movf	14,w	;volatile
  3227  0519  39C3               	andlw	195
  3228  051A  0436               	iorwf	??_LCDByte,w
  3229  051B  00B7               	movwf	??_LCDByte+1
  3230  051C  0837               	movf	??_LCDByte+1,w
  3231  051D  00BB               	movwf	LCDByte@temp
  3232                           
  3233                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3234  051E  083B               	movf	LCDByte@temp,w
  3235  051F  008E               	movwf	14	;volatile
  3236                           
  3237                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3238  0520  3200               	nop2	;2 cycle nop
  3239  0521  3200               	nop2	;2 cycle nop
  3240  0522  0000               	nop
  3241                           
  3242                           ;lcd_hd44780_pic16.c: 113: (RC1=0);
  3243  0523  0020               	movlb	0	; select bank0
  3244  0524  108E               	bcf	14,1	;volatile
  3245                           
  3246                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3247  0525  3200               	nop2	;2 cycle nop
  3248  0526  3200               	nop2	;2 cycle nop
  3249  0527  0000               	nop
  3250                           
  3251                           ;lcd_hd44780_pic16.c: 118: (RC1=1);
  3252  0528  0020               	movlb	0	; select bank0
  3253  0529  148E               	bsf	14,1	;volatile
  3254                           
  3255                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  3256  052A  0839               	movf	LCDByte@ln,w
  3257  052B  00B6               	movwf	??_LCDByte
  3258  052C  3002               	movlw	2
  3259  052D                     u1445:	
  3260  052D  35B6               	lslf	??_LCDByte,f
  3261  052E  0B89               	decfsz	9,f
  3262  052F  2D2D               	goto	u1445
  3263  0530  080E               	movf	14,w	;volatile
  3264  0531  39C3               	andlw	195
  3265  0532  0436               	iorwf	??_LCDByte,w
  3266  0533  00B7               	movwf	??_LCDByte+1
  3267  0534  0837               	movf	??_LCDByte+1,w
  3268  0535  00BB               	movwf	LCDByte@temp
  3269                           
  3270                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3271  0536  083B               	movf	LCDByte@temp,w
  3272  0537  008E               	movwf	14	;volatile
  3273                           
  3274                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3275  0538  3200               	nop2	;2 cycle nop
  3276  0539  3200               	nop2	;2 cycle nop
  3277  053A  0000               	nop
  3278                           
  3279                           ;lcd_hd44780_pic16.c: 128: (RC1=0);
  3280  053B  0020               	movlb	0	; select bank0
  3281  053C  108E               	bcf	14,1	;volatile
  3282                           
  3283                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3284  053D  3200               	nop2	;2 cycle nop
  3285  053E  3200               	nop2	;2 cycle nop
  3286  053F  0000               	nop
  3287                           
  3288                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3289  0540  235D               	fcall	_LCDBusyLoop
  3290  0541  0008               	return
  3291  0542                     __end_of_LCDByte:	
  3292                           
  3293                           	psect	text16
  3294  035D                     __ptext16:	
  3295 ;; *************** function _LCDBusyLoop *****************
  3296 ;; Defined at:
  3297 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  status          1   20[BANK0 ] unsigned char 
  3302 ;;  temp            1   19[BANK0 ] unsigned char 
  3303 ;;  busy            1   18[BANK0 ] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1
  3313 ;;      Params:         0       0       0
  3314 ;;      Locals:         0       3       0
  3315 ;;      Temps:          0       2       0
  3316 ;;      Totals:         0       5       0
  3317 ;;Total ram usage:        5 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    4
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_LCDByte
  3324 ;;		_LCDInit
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function _LCDBusyLoop
  3330  035D                     _LCDBusyLoop:	
  3331                           
  3332                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  3336  035D  0020               	movlb	0	; select bank0
  3337  035E  01B4               	clrf	LCDBusyLoop@status
  3338                           
  3339                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<2);
  3340  035F  303C               	movlw	60
  3341  0360  00B0               	movwf	??_LCDBusyLoop
  3342  0361  0830               	movf	??_LCDBusyLoop,w
  3343  0362  0021               	movlb	1	; select bank1
  3344  0363  048E               	iorwf	14,f	;volatile
  3345                           
  3346                           ;lcd_hd44780_pic16.c: 145: (RA0=1);
  3347  0364  0020               	movlb	0	; select bank0
  3348  0365  140C               	bsf	12,0	;volatile
  3349                           
  3350                           ;lcd_hd44780_pic16.c: 146: (RC0=0);
  3351  0366  100E               	bcf	14,0	;volatile
  3352                           
  3353                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3354  0367  3200               	nop2	;2 cycle nop
  3355  0368                     l1374:	
  3356                           ;lcd_hd44780_pic16.c: 153: do
  3357                           
  3358                           
  3359                           ;lcd_hd44780_pic16.c: 154: {
  3360                           ;lcd_hd44780_pic16.c: 156: (RC1=1);
  3361  0368  0020               	movlb	0	; select bank0
  3362  0369  148E               	bsf	14,1	;volatile
  3363                           
  3364                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3365  036A  3200               	nop2	;2 cycle nop
  3366                           
  3367                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>2);
  3368  036B  0020               	movlb	0	; select bank0
  3369  036C  080E               	movf	14,w	;volatile
  3370  036D  00B0               	movwf	??_LCDBusyLoop
  3371  036E  3002               	movlw	2
  3372  036F                     u1215:	
  3373  036F  36B0               	lsrf	??_LCDBusyLoop,f
  3374  0370  0B89               	decfsz	9,f
  3375  0371  2B6F               	goto	u1215
  3376  0372  0830               	movf	??_LCDBusyLoop,w
  3377  0373  00B1               	movwf	??_LCDBusyLoop+1
  3378  0374  0831               	movf	??_LCDBusyLoop+1,w
  3379  0375  00B4               	movwf	LCDBusyLoop@status
  3380                           
  3381                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  3382  0376  0834               	movf	LCDBusyLoop@status,w
  3383  0377  00B0               	movwf	??_LCDBusyLoop
  3384  0378  3003               	movlw	3
  3385  0379                     u1225:	
  3386  0379  35B0               	lslf	??_LCDBusyLoop,f
  3387  037A  3EFF               	addlw	-1
  3388  037B  1D03               	skipz
  3389  037C  2B79               	goto	u1225
  3390  037D  3530               	lslf	??_LCDBusyLoop,w
  3391  037E  00B1               	movwf	??_LCDBusyLoop+1
  3392  037F  0831               	movf	??_LCDBusyLoop+1,w
  3393  0380  00B4               	movwf	LCDBusyLoop@status
  3394                           
  3395                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3396  0381  3200               	nop2	;2 cycle nop
  3397                           
  3398                           ;lcd_hd44780_pic16.c: 167: (RC1=0);
  3399  0382  0020               	movlb	0	; select bank0
  3400  0383  108E               	bcf	14,1	;volatile
  3401                           
  3402                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3403  0384  3200               	nop2	;2 cycle nop
  3404  0385  3200               	nop2	;2 cycle nop
  3405  0386  0000               	nop
  3406                           
  3407                           ;lcd_hd44780_pic16.c: 170: (RC1=1);
  3408  0387  0020               	movlb	0	; select bank0
  3409  0388  148E               	bsf	14,1	;volatile
  3410                           
  3411                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3412  0389  3200               	nop2	;2 cycle nop
  3413                           
  3414                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>2);
  3415  038A  0020               	movlb	0	; select bank0
  3416  038B  080E               	movf	14,w	;volatile
  3417  038C  00B0               	movwf	??_LCDBusyLoop
  3418  038D  3002               	movlw	2
  3419  038E                     u1235:	
  3420  038E  36B0               	lsrf	??_LCDBusyLoop,f
  3421  038F  0B89               	decfsz	9,f
  3422  0390  2B8E               	goto	u1235
  3423  0391  0830               	movf	??_LCDBusyLoop,w
  3424  0392  00B1               	movwf	??_LCDBusyLoop+1
  3425  0393  0831               	movf	??_LCDBusyLoop+1,w
  3426  0394  00B3               	movwf	LCDBusyLoop@temp
  3427                           
  3428                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  3429  0395  300F               	movlw	15
  3430  0396  00B0               	movwf	??_LCDBusyLoop
  3431  0397  0830               	movf	??_LCDBusyLoop,w
  3432  0398  05B3               	andwf	LCDBusyLoop@temp,f
  3433                           
  3434                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  3435  0399  0834               	movf	LCDBusyLoop@status,w
  3436  039A  0433               	iorwf	LCDBusyLoop@temp,w
  3437  039B  00B0               	movwf	??_LCDBusyLoop
  3438  039C  0830               	movf	??_LCDBusyLoop,w
  3439  039D  00B4               	movwf	LCDBusyLoop@status
  3440                           
  3441                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  3442  039E  0834               	movf	LCDBusyLoop@status,w
  3443  039F  3980               	andlw	128
  3444  03A0  00B0               	movwf	??_LCDBusyLoop
  3445  03A1  0830               	movf	??_LCDBusyLoop,w
  3446  03A2  00B2               	movwf	LCDBusyLoop@busy
  3447                           
  3448                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3449  03A3  3200               	nop2	;2 cycle nop
  3450                           
  3451                           ;lcd_hd44780_pic16.c: 182: (RC1=0);
  3452  03A4  0020               	movlb	0	; select bank0
  3453  03A5  108E               	bcf	14,1	;volatile
  3454                           
  3455                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3456  03A6  3200               	nop2	;2 cycle nop
  3457  03A7  3200               	nop2	;2 cycle nop
  3458  03A8  0000               	nop
  3459                           
  3460                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  3461  03A9  0020               	movlb	0	; select bank0
  3462  03AA  0832               	movf	LCDBusyLoop@busy,w
  3463  03AB  1D03               	btfss	3,2
  3464  03AC  2B68               	goto	l1374
  3465                           
  3466                           ;lcd_hd44780_pic16.c: 186: (RA0=0);
  3467  03AD  100C               	bcf	12,0	;volatile
  3468                           
  3469                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<2));
  3470  03AE  30C3               	movlw	195
  3471  03AF  00B0               	movwf	??_LCDBusyLoop
  3472  03B0  0830               	movf	??_LCDBusyLoop,w
  3473  03B1  0021               	movlb	1	; select bank1
  3474  03B2  058E               	andwf	14,f	;volatile
  3475  03B3  0008               	return
  3476  03B4                     __end_of_LCDBusyLoop:	
  3477                           
  3478                           	psect	text17
  3479  0765                     __ptext17:	
  3480 ;; *************** function _ADCInit *****************
  3481 ;; Defined at:
  3482 ;;		line 7 in file "adc_pic16.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1
  3496 ;;      Params:         0       0       0
  3497 ;;      Locals:         0       0       0
  3498 ;;      Temps:          0       0       0
  3499 ;;      Totals:         0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    4
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _ADCInit
  3512  0765                     _ADCInit:	
  3513                           
  3514                           ;adc_pic16.c: 10: TRISAbits.TRISA2 = 1;
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  3518  0765  0021               	movlb	1	; select bank1
  3519  0766  150C               	bsf	12,2	;volatile
  3520                           
  3521                           ;adc_pic16.c: 11: ANSELAbits.ANSA2 = 1;
  3522  0767  0023               	movlb	3	; select bank3
  3523  0768  150C               	bsf	12,2	;volatile
  3524                           
  3525                           ;adc_pic16.c: 13: ADCON0bits.CHS = 0b00010;
  3526  0769  0021               	movlb	1	; select bank1
  3527  076A  081D               	movf	29,w	;volatile
  3528  076B  3983               	andlw	-125
  3529  076C  3808               	iorlw	8
  3530  076D  009D               	movwf	29	;volatile
  3531                           
  3532                           ;adc_pic16.c: 15: ADCON1bits.ADPREF = 0b00;
  3533  076E  30FC               	movlw	-4
  3534  076F  059E               	andwf	30,f	;volatile
  3535                           
  3536                           ;adc_pic16.c: 17: ADCON1bits.ADCS = 0b011;
  3537  0770  081E               	movf	30,w	;volatile
  3538  0771  398F               	andlw	-113
  3539  0772  3830               	iorlw	48
  3540  0773  009E               	movwf	30	;volatile
  3541                           
  3542                           ;adc_pic16.c: 20: ADCON1bits.ADFM=1;
  3543  0774  179E               	bsf	30,7	;volatile
  3544                           
  3545                           ;adc_pic16.c: 22: ADCON0bits.ADON = 1;
  3546  0775  141D               	bsf	29,0	;volatile
  3547  0776  0008               	return
  3548  0777                     __end_of_ADCInit:	
  3549                           
  3550                           	psect	intentry
  3551  0004                     __pintentry:	
  3552 ;; *************** function _ISR *****************
  3553 ;; Defined at:
  3554 ;;		line 103 in file "do_am.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMMON   BANK0   BANK1
  3568 ;;      Params:         0       0       0
  3569 ;;      Locals:         0       0       0
  3570 ;;      Temps:          0       4       0
  3571 ;;      Totals:         0       4       0
  3572 ;;Total ram usage:        4 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    3
  3575 ;; This function calls:
  3576 ;;		i1_LCDByte
  3577 ;;		i1_LCDGotoXY
  3578 ;;		i1_LCDWriteInt
  3579 ;;		i1_LCDWriteString
  3580 ;; This function is called by:
  3581 ;;		Interrupt level 1
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585  0004                     _ISR:	
  3586                           
  3587                           ;incstack = 0
  3588                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3589  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3590  0005  3180               	pagesel	$
  3591  0006  0020               	movlb	0	; select bank0
  3592  0007  087F               	movf	127,w
  3593  0008  00AF               	movwf	??_ISR+3
  3594                           
  3595                           ;do_am.c: 105: if(INTCONbits.IOCIF == 1)
  3596  0009  1C0B               	btfss	11,0	;volatile
  3597  000A  2854               	goto	i1l122
  3598                           
  3599                           ;do_am.c: 106: {
  3600                           ;do_am.c: 107: if(IOCAFbits.IOCAF5 == 1)
  3601  000B  0027               	movlb	7	; select bank7
  3602  000C  1E93               	btfss	19,5	;volatile
  3603  000D  2853               	goto	i1l117
  3604                           
  3605                           ;do_am.c: 108: {
  3606                           ;do_am.c: 110: (LCDByte(0b00000001,0));
  3607  000E  01F5               	clrf	i1LCDByte@isdata
  3608  000F  3001               	movlw	1
  3609  0010  24AD               	fcall	i1_LCDByte
  3610                           
  3611                           ;do_am.c: 112: { LCDGotoXY(0,0); LCDWriteString("Thermometer set:");};
  3612  0011  01FC               	clrf	i1LCDGotoXY@y
  3613  0012  3000               	movlw	0
  3614  0013  270C               	fcall	i1_LCDGotoXY
  3615  0014  302F               	movlw	low (STR_1| (0+32768))
  3616  0015  00FC               	movwf	i1LCDWriteString@msg
  3617  0016  3087               	movlw	high (STR_1| (0+32768))
  3618  0017                     L5:	
  3619  0017  00FD               	movwf	i1LCDWriteString@msg+1
  3620  0018  2653               	fcall	i1_LCDWriteString
  3621                           
  3622                           ;do_am.c: 114: while(RA5 == 1)
  3623  0019  0020               	movlb	0	; select bank0
  3624  001A  1E8C               	btfss	12,5	;volatile
  3625  001B  284F               	goto	i1l121
  3626                           
  3627                           ;do_am.c: 115: {
  3628                           ;do_am.c: 116: tuneTemp++;
  3629  001C  3001               	movlw	1
  3630  001D  0020               	movlb	0	; select bank0
  3631  001E  07DE               	addwf	_tuneTemp,f
  3632  001F  3000               	movlw	0
  3633  0020  3DDF               	addwfc	_tuneTemp+1,f
  3634                           
  3635                           ;do_am.c: 117: if(tuneTemp > 150)
  3636  0021  085F               	movf	_tuneTemp+1,w
  3637  0022  3A80               	xorlw	128
  3638  0023  00AC               	movwf	??_ISR
  3639  0024  3080               	movlw	128
  3640  0025  022C               	subwf	??_ISR,w
  3641  0026  1D03               	skipz
  3642  0027  282A               	goto	u237_25
  3643  0028  3097               	movlw	151
  3644  0029  025E               	subwf	_tuneTemp,w
  3645  002A                     u237_25:	
  3646  002A  1C03               	skipc
  3647  002B  282F               	goto	i1l2060
  3648                           
  3649                           ;do_am.c: 118: {
  3650                           ;do_am.c: 119: tuneTemp = 0;
  3651  002C  0020               	movlb	0	; select bank0
  3652  002D  01DE               	clrf	_tuneTemp
  3653  002E  01DF               	clrf	_tuneTemp+1
  3654  002F                     i1l2060:	
  3655                           
  3656                           ;do_am.c: 120: }
  3657                           ;do_am.c: 121: _delay((unsigned long)((50)*(20000000/4000.0)));
  3658  002F  3002               	movlw	2
  3659  0030  0020               	movlb	0	; select bank0
  3660  0031  00AE               	movwf	??_ISR+2
  3661  0032  3045               	movlw	69
  3662  0033  00AD               	movwf	??_ISR+1
  3663  0034  30A9               	movlw	169
  3664  0035  00AC               	movwf	??_ISR
  3665  0036                     u282_27:	
  3666  0036  0BAC               	decfsz	??_ISR,f
  3667  0037  2836               	goto	u282_27
  3668  0038  0BAD               	decfsz	??_ISR+1,f
  3669  0039  2836               	goto	u282_27
  3670  003A  0BAE               	decfsz	??_ISR+2,f
  3671  003B  2836               	goto	u282_27
  3672  003C  3200               	nop2
  3673                           
  3674                           ;do_am.c: 124: { LCDGotoXY(0,1); LCDWriteInt(tuneTemp,3);};
  3675  003D  01FC               	clrf	i1LCDGotoXY@y
  3676  003E  0AFC               	incf	i1LCDGotoXY@y,f
  3677  003F  3000               	movlw	0
  3678  0040  270C               	fcall	i1_LCDGotoXY
  3679  0041  0020               	movlb	0	; select bank0
  3680  0042  085F               	movf	_tuneTemp+1,w
  3681  0043  00A1               	movwf	i1LCDWriteInt@val+1
  3682  0044  085E               	movf	_tuneTemp,w
  3683  0045  00A0               	movwf	i1LCDWriteInt@val
  3684  0046  3003               	movlw	3
  3685  0047  00AC               	movwf	??_ISR
  3686  0048  082C               	movf	??_ISR,w
  3687  0049  00A2               	movwf	i1LCDWriteInt@field_length
  3688  004A  2221               	fcall	i1_LCDWriteInt
  3689                           
  3690                           ;do_am.c: 127: LCDWriteString("%0C");
  3691  004B  304D               	movlw	low (STR_2| (0+32768))
  3692  004C  00FC               	movwf	i1LCDWriteString@msg
  3693  004D  3087               	movlw	high (STR_2| (0+32768))
  3694  004E  2817               	goto	L5
  3695  004F                     i1l121:	
  3696                           
  3697                           ;do_am.c: 129: }
  3698                           ;do_am.c: 130: tuneTempDir = 1;
  3699  004F  01DB               	clrf	_tuneTempDir
  3700  0050  0ADB               	incf	_tuneTempDir,f
  3701                           
  3702                           ;do_am.c: 131: IOCAFbits.IOCAF5 = 0;
  3703  0051  0027               	movlb	7	; select bank7
  3704  0052  1293               	bcf	19,5	;volatile
  3705  0053                     i1l117:	
  3706                           
  3707                           ;do_am.c: 132: }
  3708                           ;do_am.c: 133: INTCONbits.IOCIF = 0;
  3709  0053  100B               	bcf	11,0	;volatile
  3710  0054                     i1l122:	
  3711  0054  0020               	movlb	0	; select bank0
  3712  0055  082F               	movf	??_ISR+3,w
  3713  0056  00FF               	movwf	127
  3714  0057  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3715  0058  0009               	retfie
  3716  0059                     __end_of_ISR:	
  3717                           
  3718                           	psect	text19
  3719  0653                     __ptext19:	
  3720 ;; *************** function i1_LCDWriteString *****************
  3721 ;; Defined at:
  3722 ;;		line 279 in file "lcd_hd44780_pic16.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  msg             2   12[COMMON] PTR const unsigned char 
  3725 ;;		 -> STR_4(4), STR_3(13), STR_2(4), STR_1(17), 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  LCDWriteStri    1    1[BANK0 ] char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1
  3737 ;;      Params:         2       0       0
  3738 ;;      Locals:         0       1       0
  3739 ;;      Temps:          0       1       0
  3740 ;;      Totals:         2       2       0
  3741 ;;Total ram usage:        4 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    2
  3744 ;; This function calls:
  3745 ;;		i1_LCDByte
  3746 ;; This function is called by:
  3747 ;;		_ISR
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function i1_LCDWriteString
  3753  0653                     i1_LCDWriteString:	
  3754  0653                     i1l1990:	
  3755                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in i1_LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3759                           
  3760  0653  087C               	movf	i1LCDWriteString@msg,w
  3761  0654  0084               	movwf	4
  3762  0655  087D               	movf	i1LCDWriteString@msg+1,w
  3763  0656  0085               	movwf	5
  3764  0657  0012               	moviw fsr0++
  3765  0658  1903               	btfsc	3,2
  3766  0659  0008               	return
  3767                           
  3768                           ;lcd_hd44780_pic16.c: 282: {
  3769                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  3770  065A  087C               	movf	i1LCDWriteString@msg,w
  3771  065B  0084               	movwf	4
  3772  065C  087D               	movf	i1LCDWriteString@msg+1,w
  3773  065D  0085               	movwf	5
  3774  065E  0012               	moviw fsr0++
  3775  065F  3A25               	xorlw	37
  3776  0660  1D03               	btfss	3,2
  3777  0661  2E7F               	goto	i1l1986
  3778                           
  3779                           ;lcd_hd44780_pic16.c: 285: {
  3780                           ;lcd_hd44780_pic16.c: 286: msg++;
  3781  0662  3001               	movlw	1
  3782  0663  07FC               	addwf	i1LCDWriteString@msg,f
  3783  0664  3000               	movlw	0
  3784  0665  3DFD               	addwfc	i1LCDWriteString@msg+1,f
  3785                           
  3786                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  3787  0666  087C               	movf	i1LCDWriteString@msg,w
  3788  0667  0084               	movwf	4
  3789  0668  087D               	movf	i1LCDWriteString@msg+1,w
  3790  0669  0085               	movwf	5
  3791  066A  0800               	movf	0,w	;code access
  3792  066B  3ED0               	addlw	-48
  3793  066C  0020               	movlb	0	; select bank0
  3794  066D  00A0               	movwf	??i1_LCDWriteString
  3795  066E  0820               	movf	??i1_LCDWriteString,w
  3796  066F  00A1               	movwf	i1LCDWriteString@cc
  3797                           
  3798                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  3799  0670  1BA1               	btfsc	i1LCDWriteString@cc,7
  3800  0671  2E7B               	goto	i1l1982
  3801  0672  0821               	movf	i1LCDWriteString@cc,w
  3802  0673  3A80               	xorlw	128
  3803  0674  3E78               	addlw	-136
  3804  0675  1803               	skipnc
  3805  0676  2E7B               	goto	i1l1982
  3806                           
  3807                           ;lcd_hd44780_pic16.c: 290: {
  3808                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  3809  0677  01F5               	clrf	i1LCDByte@isdata
  3810  0678  0AF5               	incf	i1LCDByte@isdata,f
  3811  0679  0821               	movf	i1LCDWriteString@cc,w
  3812  067A  2E86               	goto	L6
  3813  067B                     i1l1982:	
  3814                           ;lcd_hd44780_pic16.c: 292: }
  3815                           
  3816                           
  3817                           ;lcd_hd44780_pic16.c: 293: else
  3818                           ;lcd_hd44780_pic16.c: 294: {
  3819                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  3820  067B  01F5               	clrf	i1LCDByte@isdata
  3821  067C  0AF5               	incf	i1LCDByte@isdata,f
  3822  067D  3025               	movlw	37
  3823  067E  24AD               	fcall	i1_LCDByte
  3824  067F                     i1l1986:	
  3825                           ;lcd_hd44780_pic16.c: 297: }
  3826                           ;lcd_hd44780_pic16.c: 298: }
  3827                           
  3828                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  3829                           
  3830                           
  3831                           ;lcd_hd44780_pic16.c: 299: else
  3832                           ;lcd_hd44780_pic16.c: 300: {
  3833                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  3834  067F  01F5               	clrf	i1LCDByte@isdata
  3835  0680  0AF5               	incf	i1LCDByte@isdata,f
  3836  0681  087C               	movf	i1LCDWriteString@msg,w
  3837  0682  0084               	movwf	4
  3838  0683  087D               	movf	i1LCDWriteString@msg+1,w
  3839  0684  0085               	movwf	5
  3840  0685  0800               	movf	0,w	;code access
  3841  0686                     L6:	
  3842  0686  24AD               	fcall	i1_LCDByte
  3843                           
  3844                           ;lcd_hd44780_pic16.c: 302: }
  3845                           ;lcd_hd44780_pic16.c: 303: msg++;
  3846  0687  3001               	movlw	1
  3847  0688  07FC               	addwf	i1LCDWriteString@msg,f
  3848  0689  3000               	movlw	0
  3849  068A  3DFD               	addwfc	i1LCDWriteString@msg+1,f
  3850  068B  2E53               	goto	i1l1990
  3851  068C                     __end_ofi1_LCDWriteString:	
  3852                           
  3853                           	psect	text20
  3854  0221                     __ptext20:	
  3855 ;; *************** function i1_LCDWriteInt *****************
  3856 ;; Defined at:
  3857 ;;		line 317 in file "lcd_hd44780_pic16.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  val             2    0[BANK0 ] int 
  3860 ;;  field_length    1    2[BANK0 ] char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  3863 ;;  LCDWriteInt     2   10[BANK0 ] int 
  3864 ;;  LCDWriteInt     2    8[BANK0 ] int 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      void 
  3867 ;; Registers used:
  3868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMMON   BANK0   BANK1
  3874 ;;      Params:         0       3       0
  3875 ;;      Locals:         0       9       0
  3876 ;;      Temps:          2       0       0
  3877 ;;      Totals:         2      12       0
  3878 ;;Total ram usage:       14 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    2
  3881 ;; This function calls:
  3882 ;;		i1_LCDByte
  3883 ;;		i1___awdiv
  3884 ;;		i1___awmod
  3885 ;; This function is called by:
  3886 ;;		_ISR
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function i1_LCDWriteInt
  3892  0221                     i1_LCDWriteInt:	
  3893                           
  3894                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  3895                           
  3896                           ;incstack = 0
  3897                           ; Regs used in i1_LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3898  0221  3056               	movlw	low LCDWriteInt@F2516
  3899  0222  0086               	movwf	6
  3900  0223  3000               	movlw	high LCDWriteInt@F2516
  3901  0224  0087               	movwf	7
  3902  0225  3023               	movlw	low i1LCDWriteInt@str
  3903  0226  0084               	movwf	4
  3904  0227  3000               	movlw	high i1LCDWriteInt@str
  3905  0228  0085               	movwf	5
  3906  0229  3005               	movlw	5
  3907  022A  00FC               	movwf	??i1_LCDWriteInt
  3908  022B                     u228_20:	
  3909  022B  0016               	moviw fsr1++
  3910  022C  001A               	movwi fsr0++
  3911  022D  0BFC               	decfsz	??i1_LCDWriteInt,f
  3912  022E  2A2B               	goto	u228_20
  3913                           
  3914                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  3915  022F  3004               	movlw	4
  3916  0230  0020               	movlb	0	; select bank0
  3917  0231  00AA               	movwf	i1LCDWriteInt@i
  3918  0232  3000               	movlw	0
  3919  0233  00AB               	movwf	i1LCDWriteInt@i+1
  3920  0234  01A8               	clrf	i1LCDWriteInt@j
  3921  0235  01A9               	clrf	i1LCDWriteInt@j+1
  3922                           
  3923                           ;lcd_hd44780_pic16.c: 323: if(val<0)
  3924  0236  1FA1               	btfss	i1LCDWriteInt@val+1,7
  3925  0237  2A42               	goto	i1l2010
  3926                           
  3927                           ;lcd_hd44780_pic16.c: 324: {
  3928                           ;lcd_hd44780_pic16.c: 325: (LCDByte('-',1));
  3929  0238  01F5               	clrf	i1LCDByte@isdata
  3930  0239  0AF5               	incf	i1LCDByte@isdata,f
  3931  023A  302D               	movlw	45
  3932  023B  24AD               	fcall	i1_LCDByte
  3933                           
  3934                           ;lcd_hd44780_pic16.c: 326: val=val*-1;
  3935  023C  0020               	movlb	0	; select bank0
  3936  023D  09A0               	comf	i1LCDWriteInt@val,f
  3937  023E  09A1               	comf	i1LCDWriteInt@val+1,f
  3938  023F  0AA0               	incf	i1LCDWriteInt@val,f
  3939  0240  1903               	skipnz
  3940  0241  0AA1               	incf	i1LCDWriteInt@val+1,f
  3941  0242                     i1l2010:	
  3942                           ;lcd_hd44780_pic16.c: 327: }
  3943                           ;lcd_hd44780_pic16.c: 329: while(val)
  3944                           
  3945  0242  0820               	movf	i1LCDWriteInt@val,w
  3946  0243  0421               	iorwf	i1LCDWriteInt@val+1,w
  3947  0244  1903               	btfsc	3,2
  3948  0245  2A6B               	goto	i1l2012
  3949                           
  3950                           ;lcd_hd44780_pic16.c: 330: {
  3951                           ;lcd_hd44780_pic16.c: 331: str[i]=val%10;
  3952  0246  300A               	movlw	10
  3953  0247  00F0               	movwf	i1___awmod@divisor
  3954  0248  3000               	movlw	0
  3955  0249  00F1               	movwf	i1___awmod@divisor+1
  3956  024A  0821               	movf	i1LCDWriteInt@val+1,w
  3957  024B  00F3               	movwf	i1___awmod@dividend+1
  3958  024C  0820               	movf	i1LCDWriteInt@val,w
  3959  024D  00F2               	movwf	i1___awmod@dividend
  3960  024E  25D1               	fcall	i1___awmod
  3961  024F  0870               	movf	?i1___awmod,w
  3962  0250  00FC               	movwf	??i1_LCDWriteInt
  3963  0251  0020               	movlb	0	; select bank0
  3964  0252  082A               	movf	i1LCDWriteInt@i,w
  3965  0253  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  3966  0254  0086               	movwf	6
  3967  0255  0187               	clrf	7
  3968  0256  087C               	movf	??i1_LCDWriteInt,w
  3969  0257  0081               	movwf	1
  3970                           
  3971                           ;lcd_hd44780_pic16.c: 332: val=val/10;
  3972  0258  300A               	movlw	10
  3973  0259  00F0               	movwf	i1___awdiv@divisor
  3974  025A  3000               	movlw	0
  3975  025B  00F1               	movwf	i1___awdiv@divisor+1
  3976  025C  0821               	movf	i1LCDWriteInt@val+1,w
  3977  025D  00F3               	movwf	i1___awdiv@dividend+1
  3978  025E  0820               	movf	i1LCDWriteInt@val,w
  3979  025F  00F2               	movwf	i1___awdiv@dividend
  3980  0260  245C               	fcall	i1___awdiv
  3981  0261  0871               	movf	?i1___awdiv+1,w
  3982  0262  0020               	movlb	0	; select bank0
  3983  0263  00A1               	movwf	i1LCDWriteInt@val+1
  3984  0264  0870               	movf	?i1___awdiv,w
  3985  0265  00A0               	movwf	i1LCDWriteInt@val
  3986                           
  3987                           ;lcd_hd44780_pic16.c: 333: i--;
  3988  0266  30FF               	movlw	255
  3989  0267  07AA               	addwf	i1LCDWriteInt@i,f
  3990  0268  30FF               	movlw	255
  3991  0269  3DAB               	addwfc	i1LCDWriteInt@i+1,f
  3992  026A  2A42               	goto	i1l2010
  3993  026B                     i1l2012:	
  3994                           
  3995                           ;lcd_hd44780_pic16.c: 334: }
  3996                           ;lcd_hd44780_pic16.c: 335: if(field_length==-1)
  3997  026B  0A22               	incf	i1LCDWriteInt@field_length,w
  3998  026C  1903               	btfsc	3,2
  3999  026D  2A7E               	goto	i1l2020
  4000                           
  4001                           ;lcd_hd44780_pic16.c: 337: else
  4002                           ;lcd_hd44780_pic16.c: 338: j=5-field_length;
  4003                           
  4004                           ;lcd_hd44780_pic16.c: 336: while(str[j]==-16) j++;
  4005  026E  0822               	movf	i1LCDWriteInt@field_length,w
  4006  026F  00FC               	movwf	??i1_LCDWriteInt
  4007  0270  01FD               	clrf	??i1_LCDWriteInt+1
  4008  0271  1BFC               	btfsc	??i1_LCDWriteInt,7
  4009  0272  03FD               	decf	??i1_LCDWriteInt+1,f
  4010  0273  09FC               	comf	??i1_LCDWriteInt,f
  4011  0274  09FD               	comf	??i1_LCDWriteInt+1,f
  4012  0275  0AFC               	incf	??i1_LCDWriteInt,f
  4013  0276  1903               	skipnz
  4014  0277  0AFD               	incf	??i1_LCDWriteInt+1,f
  4015  0278  087C               	movf	??i1_LCDWriteInt,w
  4016  0279  3E05               	addlw	5
  4017  027A  00A8               	movwf	i1LCDWriteInt@j
  4018  027B  3000               	movlw	0
  4019  027C  3D7D               	addwfc	??i1_LCDWriteInt+1,w
  4020  027D  00A9               	movwf	i1LCDWriteInt@j+1
  4021  027E                     i1l2020:	
  4022                           
  4023                           ;lcd_hd44780_pic16.c: 341: for(i=j;i<5;i++)
  4024  027E  0829               	movf	i1LCDWriteInt@j+1,w
  4025  027F  00AB               	movwf	i1LCDWriteInt@i+1
  4026  0280  0828               	movf	i1LCDWriteInt@j,w
  4027  0281  00AA               	movwf	i1LCDWriteInt@i
  4028  0282                     L7:	
  4029  0282  082B               	movf	i1LCDWriteInt@i+1,w
  4030  0283  3A80               	xorlw	128
  4031  0284  00FC               	movwf	??i1_LCDWriteInt
  4032  0285  3080               	movlw	128
  4033  0286  027C               	subwf	??i1_LCDWriteInt,w
  4034  0287  1D03               	skipz
  4035  0288  2A8B               	goto	u232_25
  4036  0289  3005               	movlw	5
  4037  028A  022A               	subwf	i1LCDWriteInt@i,w
  4038  028B                     u232_25:	
  4039  028B  1803               	btfsc	3,0
  4040  028C  0008               	return
  4041                           
  4042                           ;lcd_hd44780_pic16.c: 342: {
  4043                           ;lcd_hd44780_pic16.c: 343: (LCDByte(48+str[i],1));
  4044  028D  01F5               	clrf	i1LCDByte@isdata
  4045  028E  0AF5               	incf	i1LCDByte@isdata,f
  4046  028F  0020               	movlb	0	; select bank0
  4047  0290  082A               	movf	i1LCDWriteInt@i,w
  4048  0291  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4049  0292  0086               	movwf	6
  4050  0293  0187               	clrf	7
  4051  0294  0801               	movf	1,w
  4052  0295  3E30               	addlw	48
  4053  0296  24AD               	fcall	i1_LCDByte
  4054  0297  3001               	movlw	1
  4055  0298  0020               	movlb	0	; select bank0
  4056  0299  07AA               	addwf	i1LCDWriteInt@i,f
  4057  029A  3000               	movlw	0
  4058  029B  3DAB               	addwfc	i1LCDWriteInt@i+1,f
  4059  029C  2A82               	goto	L7
  4060  029D                     __end_ofi1_LCDWriteInt:	
  4061                           
  4062                           	psect	text21
  4063  05D1                     __ptext21:	
  4064 ;; *************** function i1___awmod *****************
  4065 ;; Defined at:
  4066 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  divisor         2    0[COMMON] int 
  4069 ;;  dividend        2    2[COMMON] int 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  __awmod         1    6[COMMON] unsigned char 
  4072 ;;  __awmod         1    5[COMMON] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  2    0[COMMON] int 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1
  4082 ;;      Params:         4       0       0
  4083 ;;      Locals:         2       0       0
  4084 ;;      Temps:          1       0       0
  4085 ;;      Totals:         7       0       0
  4086 ;;Total ram usage:        7 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		i1_LCDWriteInt
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           
  4096                           ;psect for function i1___awmod
  4097  05D1                     i1___awmod:	
  4098                           
  4099                           ;incstack = 0
  4100                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4101  05D1  01F6               	clrf	i1___awmod@sign
  4102  05D2  1FF3               	btfss	i1___awmod@dividend+1,7
  4103  05D3  2DDB               	goto	i1l1794
  4104  05D4  09F2               	comf	i1___awmod@dividend,f
  4105  05D5  09F3               	comf	i1___awmod@dividend+1,f
  4106  05D6  0AF2               	incf	i1___awmod@dividend,f
  4107  05D7  1903               	skipnz
  4108  05D8  0AF3               	incf	i1___awmod@dividend+1,f
  4109  05D9  01F6               	clrf	i1___awmod@sign
  4110  05DA  0AF6               	incf	i1___awmod@sign,f
  4111  05DB                     i1l1794:	
  4112  05DB  1FF1               	btfss	i1___awmod@divisor+1,7
  4113  05DC  2DE2               	goto	i1l1798
  4114  05DD  09F0               	comf	i1___awmod@divisor,f
  4115  05DE  09F1               	comf	i1___awmod@divisor+1,f
  4116  05DF  0AF0               	incf	i1___awmod@divisor,f
  4117  05E0  1903               	skipnz
  4118  05E1  0AF1               	incf	i1___awmod@divisor+1,f
  4119  05E2                     i1l1798:	
  4120  05E2  0870               	movf	i1___awmod@divisor,w
  4121  05E3  0471               	iorwf	i1___awmod@divisor+1,w
  4122  05E4  1903               	btfsc	3,2
  4123  05E5  2E09               	goto	i1l1816
  4124  05E6  01F5               	clrf	i1___awmod@counter
  4125  05E7  0AF5               	incf	i1___awmod@counter,f
  4126  05E8                     i1l1806:	
  4127  05E8  1BF1               	btfsc	i1___awmod@divisor+1,7
  4128  05E9  2DF4               	goto	i1l1808
  4129  05EA  3001               	movlw	1
  4130  05EB                     u205_25:	
  4131  05EB  35F0               	lslf	i1___awmod@divisor,f
  4132  05EC  0DF1               	rlf	i1___awmod@divisor+1,f
  4133  05ED  0B89               	decfsz	9,f
  4134  05EE  2DEB               	goto	u205_25
  4135  05EF  3001               	movlw	1
  4136  05F0  00F4               	movwf	??i1___awmod
  4137  05F1  0874               	movf	??i1___awmod,w
  4138  05F2  07F5               	addwf	i1___awmod@counter,f
  4139  05F3  2DE8               	goto	i1l1806
  4140  05F4                     i1l1808:	
  4141  05F4  0871               	movf	i1___awmod@divisor+1,w
  4142  05F5  0273               	subwf	i1___awmod@dividend+1,w
  4143  05F6  1D03               	skipz
  4144  05F7  2DFA               	goto	u207_25
  4145  05F8  0870               	movf	i1___awmod@divisor,w
  4146  05F9  0272               	subwf	i1___awmod@dividend,w
  4147  05FA                     u207_25:	
  4148  05FA  1C03               	skipc
  4149  05FB  2E00               	goto	i1l1812
  4150  05FC  0870               	movf	i1___awmod@divisor,w
  4151  05FD  02F2               	subwf	i1___awmod@dividend,f
  4152  05FE  0871               	movf	i1___awmod@divisor+1,w
  4153  05FF  3BF3               	subwfb	i1___awmod@dividend+1,f
  4154  0600                     i1l1812:	
  4155  0600  3001               	movlw	1
  4156  0601                     u208_25:	
  4157  0601  36F1               	lsrf	i1___awmod@divisor+1,f
  4158  0602  0CF0               	rrf	i1___awmod@divisor,f
  4159  0603  0B89               	decfsz	9,f
  4160  0604  2E01               	goto	u208_25
  4161  0605  3001               	movlw	1
  4162  0606  02F5               	subwf	i1___awmod@counter,f
  4163  0607  1D03               	btfss	3,2
  4164  0608  2DF4               	goto	i1l1808
  4165  0609                     i1l1816:	
  4166  0609  0876               	movf	i1___awmod@sign,w
  4167  060A  1903               	btfsc	3,2
  4168  060B  2E11               	goto	i1l1820
  4169  060C  09F2               	comf	i1___awmod@dividend,f
  4170  060D  09F3               	comf	i1___awmod@dividend+1,f
  4171  060E  0AF2               	incf	i1___awmod@dividend,f
  4172  060F  1903               	skipnz
  4173  0610  0AF3               	incf	i1___awmod@dividend+1,f
  4174  0611                     i1l1820:	
  4175  0611  0873               	movf	i1___awmod@dividend+1,w
  4176  0612  00F1               	movwf	?i1___awmod+1
  4177  0613  0872               	movf	i1___awmod@dividend,w
  4178  0614  00F0               	movwf	?i1___awmod
  4179  0615  0008               	return
  4180  0616                     __end_ofi1___awmod:	
  4181                           
  4182                           	psect	text22
  4183  045C                     __ptext22:	
  4184 ;; *************** function i1___awdiv *****************
  4185 ;; Defined at:
  4186 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  divisor         2    0[COMMON] int 
  4189 ;;  dividend        2    2[COMMON] int 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  __awdiv         2    7[COMMON] int 
  4192 ;;  __awdiv         1    6[COMMON] unsigned char 
  4193 ;;  __awdiv         1    5[COMMON] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  2    0[COMMON] int 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1
  4203 ;;      Params:         4       0       0
  4204 ;;      Locals:         4       0       0
  4205 ;;      Temps:          1       0       0
  4206 ;;      Totals:         9       0       0
  4207 ;;Total ram usage:        9 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		i1_LCDWriteInt
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           
  4217                           ;psect for function i1___awdiv
  4218  045C                     i1___awdiv:	
  4219                           
  4220                           ;incstack = 0
  4221                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4222  045C  01F6               	clrf	i1___awdiv@sign
  4223  045D  1FF1               	btfss	i1___awdiv@divisor+1,7
  4224  045E  2C66               	goto	i1l1750
  4225  045F  09F0               	comf	i1___awdiv@divisor,f
  4226  0460  09F1               	comf	i1___awdiv@divisor+1,f
  4227  0461  0AF0               	incf	i1___awdiv@divisor,f
  4228  0462  1903               	skipnz
  4229  0463  0AF1               	incf	i1___awdiv@divisor+1,f
  4230  0464  01F6               	clrf	i1___awdiv@sign
  4231  0465  0AF6               	incf	i1___awdiv@sign,f
  4232  0466                     i1l1750:	
  4233  0466  1FF3               	btfss	i1___awdiv@dividend+1,7
  4234  0467  2C71               	goto	i1l1756
  4235  0468  09F2               	comf	i1___awdiv@dividend,f
  4236  0469  09F3               	comf	i1___awdiv@dividend+1,f
  4237  046A  0AF2               	incf	i1___awdiv@dividend,f
  4238  046B  1903               	skipnz
  4239  046C  0AF3               	incf	i1___awdiv@dividend+1,f
  4240  046D  3001               	movlw	1
  4241  046E  00F4               	movwf	??i1___awdiv
  4242  046F  0874               	movf	??i1___awdiv,w
  4243  0470  06F6               	xorwf	i1___awdiv@sign,f
  4244  0471                     i1l1756:	
  4245  0471  01F7               	clrf	i1___awdiv@quotient
  4246  0472  01F8               	clrf	i1___awdiv@quotient+1
  4247  0473  0870               	movf	i1___awdiv@divisor,w
  4248  0474  0471               	iorwf	i1___awdiv@divisor+1,w
  4249  0475  1903               	btfsc	3,2
  4250  0476  2CA0               	goto	i1l1778
  4251  0477  01F5               	clrf	i1___awdiv@counter
  4252  0478  0AF5               	incf	i1___awdiv@counter,f
  4253  0479                     i1l1766:	
  4254  0479  1BF1               	btfsc	i1___awdiv@divisor+1,7
  4255  047A  2C85               	goto	i1l1768
  4256  047B  3001               	movlw	1
  4257  047C                     u195_25:	
  4258  047C  35F0               	lslf	i1___awdiv@divisor,f
  4259  047D  0DF1               	rlf	i1___awdiv@divisor+1,f
  4260  047E  0B89               	decfsz	9,f
  4261  047F  2C7C               	goto	u195_25
  4262  0480  3001               	movlw	1
  4263  0481  00F4               	movwf	??i1___awdiv
  4264  0482  0874               	movf	??i1___awdiv,w
  4265  0483  07F5               	addwf	i1___awdiv@counter,f
  4266  0484  2C79               	goto	i1l1766
  4267  0485                     i1l1768:	
  4268  0485  3001               	movlw	1
  4269  0486                     u197_25:	
  4270  0486  35F7               	lslf	i1___awdiv@quotient,f
  4271  0487  0DF8               	rlf	i1___awdiv@quotient+1,f
  4272  0488  0B89               	decfsz	9,f
  4273  0489  2C86               	goto	u197_25
  4274  048A  0871               	movf	i1___awdiv@divisor+1,w
  4275  048B  0273               	subwf	i1___awdiv@dividend+1,w
  4276  048C  1D03               	skipz
  4277  048D  2C90               	goto	u198_25
  4278  048E  0870               	movf	i1___awdiv@divisor,w
  4279  048F  0272               	subwf	i1___awdiv@dividend,w
  4280  0490                     u198_25:	
  4281  0490  1C03               	skipc
  4282  0491  2C97               	goto	i1l1774
  4283  0492  0870               	movf	i1___awdiv@divisor,w
  4284  0493  02F2               	subwf	i1___awdiv@dividend,f
  4285  0494  0871               	movf	i1___awdiv@divisor+1,w
  4286  0495  3BF3               	subwfb	i1___awdiv@dividend+1,f
  4287  0496  1477               	bsf	i1___awdiv@quotient,0
  4288  0497                     i1l1774:	
  4289  0497  3001               	movlw	1
  4290  0498                     u199_25:	
  4291  0498  36F1               	lsrf	i1___awdiv@divisor+1,f
  4292  0499  0CF0               	rrf	i1___awdiv@divisor,f
  4293  049A  0B89               	decfsz	9,f
  4294  049B  2C98               	goto	u199_25
  4295  049C  3001               	movlw	1
  4296  049D  02F5               	subwf	i1___awdiv@counter,f
  4297  049E  1D03               	btfss	3,2
  4298  049F  2C85               	goto	i1l1768
  4299  04A0                     i1l1778:	
  4300  04A0  0876               	movf	i1___awdiv@sign,w
  4301  04A1  1903               	btfsc	3,2
  4302  04A2  2CA8               	goto	i1l1782
  4303  04A3  09F7               	comf	i1___awdiv@quotient,f
  4304  04A4  09F8               	comf	i1___awdiv@quotient+1,f
  4305  04A5  0AF7               	incf	i1___awdiv@quotient,f
  4306  04A6  1903               	skipnz
  4307  04A7  0AF8               	incf	i1___awdiv@quotient+1,f
  4308  04A8                     i1l1782:	
  4309  04A8  0878               	movf	i1___awdiv@quotient+1,w
  4310  04A9  00F1               	movwf	?i1___awdiv+1
  4311  04AA  0877               	movf	i1___awdiv@quotient,w
  4312  04AB  00F0               	movwf	?i1___awdiv
  4313  04AC  0008               	return
  4314  04AD                     __end_ofi1___awdiv:	
  4315                           
  4316                           	psect	text23
  4317  070C                     __ptext23:	
  4318 ;; *************** function i1_LCDGotoXY *****************
  4319 ;; Defined at:
  4320 ;;		line 351 in file "lcd_hd44780_pic16.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  x               1    wreg     unsigned char 
  4323 ;;  y               1   12[COMMON] unsigned char 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  x               1    0[BANK0 ] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  1    wreg      void 
  4328 ;; Registers used:
  4329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1
  4335 ;;      Params:         1       0       0
  4336 ;;      Locals:         0       1       0
  4337 ;;      Temps:          1       0       0
  4338 ;;      Totals:         2       1       0
  4339 ;;Total ram usage:        3 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; Hardware stack levels required when called:    2
  4342 ;; This function calls:
  4343 ;;		i1_LCDByte
  4344 ;; This function is called by:
  4345 ;;		_ISR
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           
  4350                           ;psect for function i1_LCDGotoXY
  4351  070C                     i1_LCDGotoXY:	
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4355                           ;i1LCDGotoXY@x stored from wreg
  4356  070C  0020               	movlb	0	; select bank0
  4357  070D  00A0               	movwf	i1LCDGotoXY@x
  4358                           
  4359                           ;lcd_hd44780_pic16.c: 353: if(x>=20) return;
  4360  070E  3014               	movlw	20
  4361  070F  0220               	subwf	i1LCDGotoXY@x,w
  4362  0710  1803               	btfsc	3,0
  4363  0711  0008               	return
  4364  0712  2F1C               	goto	i1l2042
  4365  0713                     i1l69:	
  4366                           ;lcd_hd44780_pic16.c: 361: case 1:
  4367                           
  4368                           ;lcd_hd44780_pic16.c: 360: break;
  4369                           
  4370                           ;lcd_hd44780_pic16.c: 358: {
  4371                           ;lcd_hd44780_pic16.c: 359: case 0:
  4372                           
  4373                           ;lcd_hd44780_pic16.c: 357: switch(y)
  4374                           
  4375                           
  4376                           ;lcd_hd44780_pic16.c: 362: x|=0b01000000;
  4377  0713  1720               	bsf	i1LCDGotoXY@x,6
  4378                           
  4379                           ;lcd_hd44780_pic16.c: 363: break;
  4380  0714  2F2A               	goto	i1l68
  4381  0715                     i1l2036:	
  4382                           ;lcd_hd44780_pic16.c: 364: case 2:
  4383                           
  4384                           
  4385                           ;lcd_hd44780_pic16.c: 365: x+=0x14;
  4386  0715  3014               	movlw	20
  4387  0716  2F18               	goto	L8
  4388  0717                     i1l2038:	
  4389                           ;lcd_hd44780_pic16.c: 367: case 3:
  4390                           
  4391                           ;lcd_hd44780_pic16.c: 366: break;
  4392                           
  4393                           
  4394                           ;lcd_hd44780_pic16.c: 368: x+=0x54;
  4395  0717  3054               	movlw	84
  4396  0718                     L8:	
  4397  0718  00FD               	movwf	??i1_LCDGotoXY
  4398  0719  087D               	movf	??i1_LCDGotoXY,w
  4399  071A  07A0               	addwf	i1LCDGotoXY@x,f
  4400                           
  4401                           ;lcd_hd44780_pic16.c: 370: }
  4402                           
  4403                           ;lcd_hd44780_pic16.c: 369: break;
  4404  071B  2F2A               	goto	i1l68
  4405  071C                     i1l2042:	
  4406  071C  087C               	movf	i1LCDGotoXY@y,w
  4407                           
  4408                           ; Switch size 1, requested type "space"
  4409                           ; Number of cases is 4, Range of values is 0 to 3
  4410                           ; switch strategies available:
  4411                           ; Name         Instructions Cycles
  4412                           ; simple_byte           13     7 (average)
  4413                           ; direct_byte           14     6 (fixed)
  4414                           ; jumptable            260     6 (fixed)
  4415                           ;	Chosen strategy is simple_byte
  4416  071D  3A00               	xorlw	0	; case 0
  4417  071E  1903               	skipnz
  4418  071F  2F2A               	goto	i1l68
  4419  0720  3A01               	xorlw	1	; case 1
  4420  0721  1903               	skipnz
  4421  0722  2F13               	goto	i1l69
  4422  0723  3A03               	xorlw	3	; case 2
  4423  0724  1903               	skipnz
  4424  0725  2F15               	goto	i1l2036
  4425  0726  3A01               	xorlw	1	; case 3
  4426  0727  1903               	skipnz
  4427  0728  2F17               	goto	i1l2038
  4428  0729  2F2A               	goto	i1l68
  4429  072A                     i1l68:	
  4430                           
  4431                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  4432  072A  17A0               	bsf	i1LCDGotoXY@x,7
  4433                           
  4434                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  4435  072B  01F5               	clrf	i1LCDByte@isdata
  4436  072C  0820               	movf	i1LCDGotoXY@x,w
  4437  072D  24AD               	fcall	i1_LCDByte
  4438  072E  0008               	return
  4439  072F                     __end_ofi1_LCDGotoXY:	
  4440                           
  4441                           	psect	text24
  4442  04AD                     __ptext24:	
  4443 ;; *************** function i1_LCDByte *****************
  4444 ;; Defined at:
  4445 ;;		line 80 in file "lcd_hd44780_pic16.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  c               1    wreg     unsigned char 
  4448 ;;  isdata          1    5[COMMON] unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  c               1    8[COMMON] unsigned char 
  4451 ;;  LCDByte         1   11[COMMON] unsigned char 
  4452 ;;  LCDByte         1   10[COMMON] unsigned char 
  4453 ;;  LCDByte         1    9[COMMON] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0, pclath, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1
  4463 ;;      Params:         1       0       0
  4464 ;;      Locals:         4       0       0
  4465 ;;      Temps:          2       0       0
  4466 ;;      Totals:         7       0       0
  4467 ;;Total ram usage:        7 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    1
  4470 ;; This function calls:
  4471 ;;		i1_LCDBusyLoop
  4472 ;; This function is called by:
  4473 ;;		_ISR
  4474 ;;		i1_LCDWriteString
  4475 ;;		i1_LCDWriteInt
  4476 ;;		i1_LCDGotoXY
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           
  4481                           ;psect for function i1_LCDByte
  4482  04AD                     i1_LCDByte:	
  4483                           
  4484                           ;incstack = 0
  4485                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  4486                           ;i1LCDByte@c stored from wreg
  4487  04AD  00F8               	movwf	i1LCDByte@c
  4488                           
  4489                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  4490                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  4491                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  4492  04AE  0878               	movf	i1LCDByte@c,w
  4493  04AF  00F6               	movwf	??i1_LCDByte
  4494  04B0  3004               	movlw	4
  4495  04B1                     u188_25:	
  4496  04B1  36F6               	lsrf	??i1_LCDByte,f
  4497  04B2  0B89               	decfsz	9,f
  4498  04B3  2CB1               	goto	u188_25
  4499  04B4  0876               	movf	??i1_LCDByte,w
  4500  04B5  00F7               	movwf	??i1_LCDByte+1
  4501  04B6  0877               	movf	??i1_LCDByte+1,w
  4502  04B7  00F9               	movwf	i1LCDByte@hn
  4503                           
  4504                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  4505  04B8  0878               	movf	i1LCDByte@c,w
  4506  04B9  390F               	andlw	15
  4507  04BA  00F6               	movwf	??i1_LCDByte
  4508  04BB  0876               	movf	??i1_LCDByte,w
  4509  04BC  00FA               	movwf	i1LCDByte@ln
  4510                           
  4511                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  4512  04BD  0875               	movf	i1LCDByte@isdata,w
  4513  04BE  1D03               	btfss	3,2
  4514  04BF  2CC3               	goto	i1l23
  4515                           
  4516                           ;lcd_hd44780_pic16.c: 96: (RC0=0);
  4517  04C0  0020               	movlb	0	; select bank0
  4518  04C1  100E               	bcf	14,0	;volatile
  4519  04C2  2CC5               	goto	i1l24
  4520  04C3                     i1l23:	
  4521                           
  4522                           ;lcd_hd44780_pic16.c: 97: else
  4523                           ;lcd_hd44780_pic16.c: 98: (RC0=1);
  4524  04C3  0020               	movlb	0	; select bank0
  4525  04C4  140E               	bsf	14,0	;volatile
  4526  04C5                     i1l24:	
  4527                           
  4528                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4529  04C5  3200               	nop2	;2 cycle nop
  4530                           
  4531                           ;lcd_hd44780_pic16.c: 102: (RC1=1);
  4532  04C6  0020               	movlb	0	; select bank0
  4533  04C7  148E               	bsf	14,1	;volatile
  4534                           
  4535                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  4536  04C8  0879               	movf	i1LCDByte@hn,w
  4537  04C9  00F6               	movwf	??i1_LCDByte
  4538  04CA  3002               	movlw	2
  4539  04CB                     u190_25:	
  4540  04CB  35F6               	lslf	??i1_LCDByte,f
  4541  04CC  0B89               	decfsz	9,f
  4542  04CD  2CCB               	goto	u190_25
  4543  04CE  080E               	movf	14,w	;volatile
  4544  04CF  39C3               	andlw	195
  4545  04D0  0476               	iorwf	??i1_LCDByte,w
  4546  04D1  00F7               	movwf	??i1_LCDByte+1
  4547  04D2  0877               	movf	??i1_LCDByte+1,w
  4548  04D3  00FB               	movwf	i1LCDByte@temp
  4549                           
  4550                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  4551  04D4  087B               	movf	i1LCDByte@temp,w
  4552  04D5  008E               	movwf	14	;volatile
  4553                           
  4554                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4555  04D6  3200               	nop2	;2 cycle nop
  4556  04D7  3200               	nop2	;2 cycle nop
  4557  04D8  0000               	nop
  4558                           
  4559                           ;lcd_hd44780_pic16.c: 113: (RC1=0);
  4560  04D9  0020               	movlb	0	; select bank0
  4561  04DA  108E               	bcf	14,1	;volatile
  4562                           
  4563                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4564  04DB  3200               	nop2	;2 cycle nop
  4565  04DC  3200               	nop2	;2 cycle nop
  4566  04DD  0000               	nop
  4567                           
  4568                           ;lcd_hd44780_pic16.c: 118: (RC1=1);
  4569  04DE  0020               	movlb	0	; select bank0
  4570  04DF  148E               	bsf	14,1	;volatile
  4571                           
  4572                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  4573  04E0  087A               	movf	i1LCDByte@ln,w
  4574  04E1  00F6               	movwf	??i1_LCDByte
  4575  04E2  3002               	movlw	2
  4576  04E3                     u191_25:	
  4577  04E3  35F6               	lslf	??i1_LCDByte,f
  4578  04E4  0B89               	decfsz	9,f
  4579  04E5  2CE3               	goto	u191_25
  4580  04E6  080E               	movf	14,w	;volatile
  4581  04E7  39C3               	andlw	195
  4582  04E8  0476               	iorwf	??i1_LCDByte,w
  4583  04E9  00F7               	movwf	??i1_LCDByte+1
  4584  04EA  0877               	movf	??i1_LCDByte+1,w
  4585  04EB  00FB               	movwf	i1LCDByte@temp
  4586                           
  4587                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  4588  04EC  087B               	movf	i1LCDByte@temp,w
  4589  04ED  008E               	movwf	14	;volatile
  4590                           
  4591                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4592  04EE  3200               	nop2	;2 cycle nop
  4593  04EF  3200               	nop2	;2 cycle nop
  4594  04F0  0000               	nop
  4595                           
  4596                           ;lcd_hd44780_pic16.c: 128: (RC1=0);
  4597  04F1  0020               	movlb	0	; select bank0
  4598  04F2  108E               	bcf	14,1	;volatile
  4599                           
  4600                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4601  04F3  3200               	nop2	;2 cycle nop
  4602  04F4  3200               	nop2	;2 cycle nop
  4603  04F5  0000               	nop
  4604                           
  4605                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  4606  04F6  23B4               	fcall	i1_LCDBusyLoop
  4607  04F7  0008               	return
  4608  04F8                     __end_ofi1_LCDByte:	
  4609                           
  4610                           	psect	text25
  4611  03B4                     __ptext25:	
  4612 ;; *************** function i1_LCDBusyLoop *****************
  4613 ;; Defined at:
  4614 ;;		line 135 in file "lcd_hd44780_pic16.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;		None
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  4619 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  4620 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1
  4630 ;;      Params:         0       0       0
  4631 ;;      Locals:         3       0       0
  4632 ;;      Temps:          2       0       0
  4633 ;;      Totals:         5       0       0
  4634 ;;Total ram usage:        5 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		i1_LCDByte
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function i1_LCDBusyLoop
  4645  03B4                     i1_LCDBusyLoop:	
  4646                           
  4647                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  4651  03B4  01F4               	clrf	i1LCDBusyLoop@status
  4652                           
  4653                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<2);
  4654  03B5  303C               	movlw	60
  4655  03B6  00F0               	movwf	??i1_LCDBusyLoop
  4656  03B7  0870               	movf	??i1_LCDBusyLoop,w
  4657  03B8  0021               	movlb	1	; select bank1
  4658  03B9  048E               	iorwf	14,f	;volatile
  4659                           
  4660                           ;lcd_hd44780_pic16.c: 145: (RA0=1);
  4661  03BA  0020               	movlb	0	; select bank0
  4662  03BB  140C               	bsf	12,0	;volatile
  4663                           
  4664                           ;lcd_hd44780_pic16.c: 146: (RC0=0);
  4665  03BC  100E               	bcf	14,0	;volatile
  4666                           
  4667                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4668  03BD  3200               	nop2	;2 cycle nop
  4669  03BE                     i1l1452:	
  4670                           ;lcd_hd44780_pic16.c: 153: do
  4671                           
  4672                           
  4673                           ;lcd_hd44780_pic16.c: 154: {
  4674                           ;lcd_hd44780_pic16.c: 156: (RC1=1);
  4675  03BE  0020               	movlb	0	; select bank0
  4676  03BF  148E               	bsf	14,1	;volatile
  4677                           
  4678                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4679  03C0  3200               	nop2	;2 cycle nop
  4680                           
  4681                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>2);
  4682  03C1  0020               	movlb	0	; select bank0
  4683  03C2  080E               	movf	14,w	;volatile
  4684  03C3  00F0               	movwf	??i1_LCDBusyLoop
  4685  03C4  3002               	movlw	2
  4686  03C5                     u137_25:	
  4687  03C5  36F0               	lsrf	??i1_LCDBusyLoop,f
  4688  03C6  0B89               	decfsz	9,f
  4689  03C7  2BC5               	goto	u137_25
  4690  03C8  0870               	movf	??i1_LCDBusyLoop,w
  4691  03C9  00F1               	movwf	??i1_LCDBusyLoop+1
  4692  03CA  0871               	movf	??i1_LCDBusyLoop+1,w
  4693  03CB  00F4               	movwf	i1LCDBusyLoop@status
  4694                           
  4695                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4696  03CC  0874               	movf	i1LCDBusyLoop@status,w
  4697  03CD  00F0               	movwf	??i1_LCDBusyLoop
  4698  03CE  3003               	movlw	3
  4699  03CF                     u138_25:	
  4700  03CF  35F0               	lslf	??i1_LCDBusyLoop,f
  4701  03D0  3EFF               	addlw	-1
  4702  03D1  1D03               	skipz
  4703  03D2  2BCF               	goto	u138_25
  4704  03D3  3570               	lslf	??i1_LCDBusyLoop,w
  4705  03D4  00F1               	movwf	??i1_LCDBusyLoop+1
  4706  03D5  0871               	movf	??i1_LCDBusyLoop+1,w
  4707  03D6  00F4               	movwf	i1LCDBusyLoop@status
  4708                           
  4709                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4710  03D7  3200               	nop2	;2 cycle nop
  4711                           
  4712                           ;lcd_hd44780_pic16.c: 167: (RC1=0);
  4713  03D8  0020               	movlb	0	; select bank0
  4714  03D9  108E               	bcf	14,1	;volatile
  4715                           
  4716                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4717  03DA  3200               	nop2	;2 cycle nop
  4718  03DB  3200               	nop2	;2 cycle nop
  4719  03DC  0000               	nop
  4720                           
  4721                           ;lcd_hd44780_pic16.c: 170: (RC1=1);
  4722  03DD  0020               	movlb	0	; select bank0
  4723  03DE  148E               	bsf	14,1	;volatile
  4724                           
  4725                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4726  03DF  3200               	nop2	;2 cycle nop
  4727                           
  4728                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>2);
  4729  03E0  0020               	movlb	0	; select bank0
  4730  03E1  080E               	movf	14,w	;volatile
  4731  03E2  00F0               	movwf	??i1_LCDBusyLoop
  4732  03E3  3002               	movlw	2
  4733  03E4                     u139_25:	
  4734  03E4  36F0               	lsrf	??i1_LCDBusyLoop,f
  4735  03E5  0B89               	decfsz	9,f
  4736  03E6  2BE4               	goto	u139_25
  4737  03E7  0870               	movf	??i1_LCDBusyLoop,w
  4738  03E8  00F1               	movwf	??i1_LCDBusyLoop+1
  4739  03E9  0871               	movf	??i1_LCDBusyLoop+1,w
  4740  03EA  00F3               	movwf	i1LCDBusyLoop@temp
  4741                           
  4742                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  4743  03EB  300F               	movlw	15
  4744  03EC  00F0               	movwf	??i1_LCDBusyLoop
  4745  03ED  0870               	movf	??i1_LCDBusyLoop,w
  4746  03EE  05F3               	andwf	i1LCDBusyLoop@temp,f
  4747                           
  4748                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  4749  03EF  0874               	movf	i1LCDBusyLoop@status,w
  4750  03F0  0473               	iorwf	i1LCDBusyLoop@temp,w
  4751  03F1  00F0               	movwf	??i1_LCDBusyLoop
  4752  03F2  0870               	movf	??i1_LCDBusyLoop,w
  4753  03F3  00F4               	movwf	i1LCDBusyLoop@status
  4754                           
  4755                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  4756  03F4  0874               	movf	i1LCDBusyLoop@status,w
  4757  03F5  3980               	andlw	128
  4758  03F6  00F0               	movwf	??i1_LCDBusyLoop
  4759  03F7  0870               	movf	??i1_LCDBusyLoop,w
  4760  03F8  00F2               	movwf	i1LCDBusyLoop@busy
  4761                           
  4762                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4763  03F9  3200               	nop2	;2 cycle nop
  4764                           
  4765                           ;lcd_hd44780_pic16.c: 182: (RC1=0);
  4766  03FA  0020               	movlb	0	; select bank0
  4767  03FB  108E               	bcf	14,1	;volatile
  4768                           
  4769                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4770  03FC  3200               	nop2	;2 cycle nop
  4771  03FD  3200               	nop2	;2 cycle nop
  4772  03FE  0000               	nop
  4773                           
  4774                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  4775  03FF  0872               	movf	i1LCDBusyLoop@busy,w
  4776  0400  1D03               	btfss	3,2
  4777  0401  2BBE               	goto	i1l1452
  4778                           
  4779                           ;lcd_hd44780_pic16.c: 186: (RA0=0);
  4780  0402  0020               	movlb	0	; select bank0
  4781  0403  100C               	bcf	12,0	;volatile
  4782                           
  4783                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<2));
  4784  0404  30C3               	movlw	195
  4785  0405  00F0               	movwf	??i1_LCDBusyLoop
  4786  0406  0870               	movf	??i1_LCDBusyLoop,w
  4787  0407  0021               	movlb	1	; select bank1
  4788  0408  058E               	andwf	14,f	;volatile
  4789  0409  0008               	return
  4790  040A                     __end_ofi1_LCDBusyLoop:	
  4791  007E                     btemp	set	126	;btemp
  4792  007E                     int$flags	set	126
  4793  007E                     wtemp	set	126
  4794  007E                     wtemp0	set	126
  4795  0080                     wtemp1	set	128
  4796  0082                     wtemp2	set	130
  4797  0084                     wtemp3	set	132
  4798  0086                     wtemp4	set	134
  4799  0088                     wtemp5	set	136
  4800  007F                     wtemp6	set	127
  4801  007E                     ttemp	set	126
  4802  007E                     ttemp0	set	126
  4803  0081                     ttemp1	set	129
  4804  0084                     ttemp2	set	132
  4805  0087                     ttemp3	set	135
  4806  007F                     ttemp4	set	127
  4807  007E                     ltemp	set	126
  4808  007E                     ltemp0	set	126
  4809  0082                     ltemp1	set	130
  4810  0086                     ltemp2	set	134
  4811  0080                     ltemp3	set	128


Data Sizes:
    Strings     34
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      64
    BANK1            32     19      19

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[4]), STR_3(CODE[13]), STR_2(CODE[4]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    _ISR->i1_LCDWriteString
    i1_LCDWriteString->i1_LCDByte
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LM35ReadTemp
    _LM35ReadTemp->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _main->_LM35ReadTemp
    _LM35ReadTemp->___fttol

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13951
                                             16 BANK1      3     3      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                       _LM35ReadTemp
                     _TriggerOutInit
                     _TuneButtonInit
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TriggerOutInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35ReadTemp                                         4     2      2    5982
                                             44 BANK0      2     0      2
                                             14 BANK1      2     2      0
                            _ReadADC
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2452
                                             24 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                              0 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2986
                                             28 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             16 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2      62
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1528
                                             28 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2525
                                             28 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                             16 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1352
                                             28 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1419
                                             28 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1145
                                             21 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                             16 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0    3355
                                             12 BANK0      4     4      0
                          i1_LCDByte
                        i1_LCDGotoXY
                      i1_LCDWriteInt
                   i1_LCDWriteString
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteString                                     4     2      2     714
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    1553
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     605
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     483
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LM35ReadTemp
     _ReadADC
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _TriggerOutInit
   _TuneButtonInit

 _ISR (ROOT)
   i1_LCDByte
     i1_LCDBusyLoop
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod
   i1_LCDWriteString
     i1_LCDByte
       i1_LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      61       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2E      40       6       80.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20     13      13       8       59.4%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      61       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jun 08 00:38:27 2016

             ?_LCDBusyLoop 0070         ??i1_LCDWriteString 0020                __CFG_CP$OFF 0000  
                       l23 050E                         l24 050F                         l68 0707  
                       l69 06F0               ___awdiv@sign 0036                __CFG_LVP$ON 0000  
                      l126 0324                        l153 06DF                        l412 02E3  
                      l413 02EB                        l405 02D0                        l496 018B  
                      _RA0 0060                        _RA1 0061                        _RC0 0070  
                      _RC1 0071                        _RA5 0065               __CFG_CPD$OFF 0000  
                      _ISR 0004            __end_of_ADCInit 0777               ___awmod@sign 0036  
                      wreg 0009               __CFG_FOSC$HS 0000      LM35ReadTemp@adc_value 00AE  
  LCDWriteInt@field_length 003E            __end_of_LCDByte 0542            __end_of_LCDInit 058B  
             ?_LCDWriteInt 003C                       ?_ISR 0070                LCDByte@temp 003B  
                     l2112 02AD                       l2122 02D5                       l2114 02B7  
                     l2124 02DD                       l2116 02BC                       l2108 02A6  
                     l2142 06CB                       l1600 05AF                       l2240 019C  
                     l2208 0137                       l2234 0182                       l2226 0167  
                     l1612 05CC                       l1604 05BB                       l2180 00DB  
                     l2164 0098                       l2236 018E                       l2228 0175  
                     l1374 0368                       l1542 0415                       l2158 0082  
                     l2262 030B                       l1560 0434                       l1608 05C4  
                     l2192 00F7                       l2176 00D3                       l1570 044F  
                     l1548 0420                       l2188 00EF                       l2268 0326  
                     l1574 0457                       l1566 0446                       l1558 0428  
                     l1590 059D                       l2278 0338                       l1586 0596  
                     l1916 01C6                       l1942 06F2                       l1598 05A3  
                     l1926 0202                       l1918 01EF                       l1944 06F4  
                     l1948 06F9                       l1892 0644                       l1888 063F  
                     l1896 0616                       STR_1 072F                       STR_2 074D  
                     STR_3 0740                       STR_4 074D                       u1215 036F  
                     u1225 0379                       u1235 038E                       u1415 04FD  
                     u2215 020F                       u1505 042B                       u2170 01B0  
                     u1435 0515                       u1445 052D                       u1525 0435  
                     u1605 05A6                       u1535 043F                       u1545 0447  
                     u1625 05B5                       u1635 05BC                       u2515 02F2  
                     u2435 02B2                       u2605 00DC                       u2455 02CB  
                     u2615 00E2                       u2475 02D8                       u2715 0168  
                     u2645 00F8                       u2807 06DA                       u2655 00FE  
                     u2575 00A4                       u2817 0548                       u2585 00B4  
                     u2745 0183                       u2685 013E                       i1l23 04C3  
                     u2775 031F                       i1l24 04C5                       u2797 0355  
                     i1l68 072A                       i1l69 0713                _tuneTempDir 005B  
             __CFG_WRT$OFF 0000                       _main 0302               ___ftpack@arg 0030  
   __end_of_TuneButtonInit 078F         __size_of_LCDGotoXY 0023               ___ftpack@exp 0033  
                     fsr0h 0005                       fsr1h 0007                       fsr0l 0004  
                     indf0 0000                       indf1 0001                       fsr1l 0006  
                     btemp 007E              __CFG_BOREN$ON 0000                       ltemp 007E  
                     start 0059                       ttemp 007E                       wtemp 007E  
i1LCDWriteInt@field_length 0022               ___ftmul@cntr 004A               ___ftmul@sign 004B  
          __end_of_ReadADC 06E9                      ??_ISR 002C         __size_ofi1_LCDByte 004B  
             ___fttol@exp1 00AD               ___fttol@lval 00A9               ?i1_LCDGotoXY 007C  
                    ?_main 0070             i1___awdiv@sign 0076            __end_of___awdiv 045C  
            __CFG_WDTE$OFF 0000            __end_of___awmod 05D1               LCDInit@style 003E  
          __end_of___ftmul 011E            ___awdiv@divisor 0030            __end_of___fttol 01A5  
                    i1l121 004F                      i1l122 0054                      i1l117 0053  
          ___awdiv@counter 0035                      _PORTC 000E                      _TRISC 008E  
           i1___awmod@sign 0076              ___ftpack@sign 0034       __end_of_LM35ReadTemp 06C2  
                    ltemp0 007E                      ltemp1 0082                      ltemp2 0086  
                    ltemp3 0080                      ttemp0 007E                      ttemp1 0081  
                    ttemp2 0084                      ttemp3 0087                      ttemp4 007F  
                    status 0003                      wtemp0 007E                      wtemp1 0080  
                    wtemp2 0082                      wtemp3 0084                      wtemp4 0086  
                    wtemp5 0088                      wtemp6 007F            ?_TuneButtonInit 0070  
       __size_ofi1___awdiv 0051         __size_ofi1___awmod 0045            __initialization 005A  
             __end_of_main 035D                  ??_ADCInit 0030                     ??_main 00B0  
            ___fttol@sign1 00A8          __end_of_LCDGotoXY 070C              LCDByte@isdata 0035  
                ??_LCDByte 0036                  ??_LCDInit 003C                     _ADRESH 009C  
                   _ADRESL 009B           ___awdiv@dividend 0032          __end_ofi1_LCDByte 04F8  
         __end_of___ftpack 0302     __size_ofi1_LCDBusyLoop 0056                     i1l2010 0242  
                   i1l2020 027E                     i1l2012 026B                     i1l2042 071C  
                   i1l2036 0715                     i1l2060 002F                     i1l2038 0717  
                   i1l1452 03BE                     i1l1820 0611                     i1l1812 0600  
                   i1l1750 0466                     i1l1806 05E8                     i1l1808 05F4  
                   i1l1816 0609                     i1l1756 0471                     i1l1782 04A8  
                   i1l1774 0497                     i1l1766 0479                     i1l1768 0485  
                   i1l1778 04A0                     i1l1794 05DB                     i1l1798 05E2  
                   i1l1982 067B                     i1l1990 0653                     i1l1986 067F  
      i1LCDBusyLoop@status 0074                     u205_25 05EB                     u207_25 05FA  
                   u208_25 0601                     u232_25 028B                     u137_25 03C5  
                   u138_25 03CF                     u139_25 03E4                     u228_20 022B  
                   u237_25 002A                     u190_25 04CB                     u191_25 04E3  
         __end_of___lwtoft 0765                     u282_27 0036                     u195_25 047C  
                   u188_25 04B1                     u197_25 0486                     u198_25 0490  
                   u199_25 0498                  ??_ReadADC 0032             __CFG_PWRTE$OFF 0000  
           _LCDWriteString 0616                  ??___awdiv 0034                  ??___awmod 0034  
                ??___ftmul 0042                  ??___fttol 00A4     __size_ofi1_LCDWriteInt 007C  
     __size_of_LCDBusyLoop 0057           i1LCDWriteInt@val 0020           i1LCDWriteInt@str 0023  
         ___awdiv@quotient 0037            ___awmod@divisor 0030            ___awmod@counter 0035  
    ___ftmul@f3_as_product 0047          __end_ofi1___awdiv 04AD          __end_ofi1___awmod 0616  
             LCDWriteInt@i 0048               LCDWriteInt@j 0046           ??_TriggerOutInit 0030  
     __size_of_LCDWriteInt 007C    __end_of__initialization 0068     __end_of_LCDWriteString 0653  
                LCDByte@hn 0038                  LCDByte@ln 0039                 ___ftmul@f1 003C  
               ___ftmul@f2 003F                 ___fttol@f1 00A0             __pcstackCOMMON 0070  
             __pidataBANK0 0777              i1_LCDBusyLoop 03B4                 ___lwtoft@c 0038  
             i1LCDGotoXY@x 0020               i1LCDGotoXY@y 007C          i1LCDBusyLoop@busy 0072  
        i1LCDBusyLoop@temp 0073       __size_ofi1_LCDGotoXY 0023  __size_ofi1_LCDWriteString 0039  
    __size_of_LM35ReadTemp 0036             i1LCDWriteInt@i 002A             i1LCDWriteInt@j 0028  
          i1LCDByte@isdata 0075              i1_LCDWriteInt 0221                 __pbssBANK0 005C  
          ?_LCDWriteString 003C                 __pmaintext 0302             ?i1_LCDBusyLoop 0070  
               __pintentry 0004                    _ADCInit 0765               _LM35ReadTemp 068C  
                ?___ftpack 0030                  ?___lwtoft 0038         i1___awdiv@dividend 0072  
                  _LCDByte 04F8                    _LCDInit 0542           ??_TuneButtonInit 0030  
           ?i1_LCDWriteInt 0020                    _ReadADC 06C2         i1___awdiv@quotient 0077  
                  ___cgram 004E                    ___awdiv 040A                    ___awmod 058B  
                  ___ftmul 006B                    ___fttol 011E                 ??___ftpack 0035  
                  __ptext1 0785                    __ptext2 0795                    __ptext3 068C  
                  __ptext4 0751                    __ptext5 011E                    __ptext6 006B  
                  __ptext7 029D                    __ptext8 06C2                    __ptext9 0616  
               ??___lwtoft 003B                    _curTemp 005C               __size_of_ISR 0055  
         ___awmod@dividend 0032                  _IOCAFbits 0393                  _IOCAPbits 0391  
                _LCDGotoXY 06E9       end_of_initialization 0068                    init_ram 078F  
                  initloop 0790                  i1_LCDByte 04AD            ??i1_LCDBusyLoop 0070  
             __pstringtext 072F          LCDWriteString@msg 003C           i1_LCDWriteString 0653  
                _TRISAbits 008C                  _TRISCbits 008E            ??i1_LCDWriteInt 007C  
               ?_LCDGotoXY 003C                  i1___awdiv 045C                  i1___awmod 05D1  
                ReadADC@ch 0033                 LCDInit@__i 003F                 ?i1_LCDByte 0075  
               LCDGotoXY@x 003E                 LCDGotoXY@y 003C                ___ftmul@exp 0046  
            ??_LCDBusyLoop 0030        start_initialization 005A                __end_of_ISR 0059  
               ?i1___awdiv 0070                 ?i1___awmod 0070              ??_LCDWriteInt 003F  
         ??_LCDWriteString 003E              i1LCDByte@temp 007B                __pdataBANK0 004E  
       i1___awmod@dividend 0072                   ?_ADCInit 0070              ??i1_LCDGotoXY 007D  
      __end_of_LCDBusyLoop 03B4                   ?_LCDByte 0035                   ?_LCDInit 0070  
        __size_of___ftpack 0065                   LCDByte@c 003A                  ___latbits 0000  
        __size_of___lwtoft 0014              __pcstackBANK0 0020              __pcstackBANK1 00A0  
              ??_LCDGotoXY 003D                i1LCDByte@hn 0079                i1LCDByte@ln 007A  
         LCDWriteInt@F2516 0056                ??i1_LCDByte 0076                   ?_ReadADC 0030  
      __end_of_LCDWriteInt 0221    __size_of_TriggerOutInit 0005                   ?___awdiv 0030  
                 ?___awmod 0030                   ?___ftmul 003C                   ?___fttol 00A0  
        i1___awdiv@divisor 0070          i1___awdiv@counter 0075        __end_ofi1_LCDGotoXY 072F  
          LCDBusyLoop@busy 0032                ??i1___awdiv 0074                ??i1___awmod 0074  
          LCDBusyLoop@temp 0033   __end_ofi1_LCDWriteString 068C                _LCDBusyLoop 035D  
         LCDWriteString@cc 003F           __size_of_ADCInit 0012                 _ADCON0bits 009D  
               _ADCON1bits 009E           __size_of_LCDByte 004A           __size_of_LCDInit 0049  
              _LCDWriteInt 01A5           __size_of_ReadADC 0027    __size_of_TuneButtonInit 000A  
    __end_ofi1_LCDBusyLoop 040A          i1___awmod@divisor 0070          i1___awmod@counter 0075  
         __size_of___awdiv 0052           __size_of___awmod 0046           __size_of___ftmul 00B3  
         __size_of___fttol 0087          LCDBusyLoop@status 0034                   ___ftpack 029D  
              i1_LCDGotoXY 070C                 _ANSELAbits 018C                   ___lwtoft 0751  
               i1LCDByte@c 0078                   __ptext10 01A5                   __ptext11 058B  
                 __ptext20 0221                   __ptext12 040A                   __ptext21 05D1  
                 __ptext13 0542                   __ptext22 045C                   __ptext14 06E9  
                 __ptext23 070C                   __ptext15 04F8                   __ptext24 04AD  
                 __ptext16 035D                   __ptext25 03B4                   __ptext17 0765  
                 __ptext19 0653      __end_ofi1_LCDWriteInt 029D              __size_of_main 005B  
      i1LCDWriteString@msg 007C             _TriggerOutInit 0795                   int$flags 007E  
            ?_LM35ReadTemp 004C                   _tuneTemp 005E                 _INTCONbits 000B  
                 intlevel1 0000             LCDWriteInt@val 003C             LCDWriteInt@str 0041  
   __end_of_TriggerOutInit 079A         i1LCDWriteString@cc 0021             ??_LM35ReadTemp 004E  
          ?_TriggerOutInit 0070             _TuneButtonInit 0785          ?i1_LCDWriteString 007C  
  __size_of_LCDWriteString 003D  
