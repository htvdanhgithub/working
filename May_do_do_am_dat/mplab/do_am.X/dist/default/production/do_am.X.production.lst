

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jun 15 21:50:47 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0008                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000E                     	;# 
    55  0011                     	;# 
    56  0012                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  008C                     	;# 
    69  008E                     	;# 
    70  0091                     	;# 
    71  0092                     	;# 
    72  0095                     	;# 
    73  0096                     	;# 
    74  0097                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  010C                     	;# 
    84  010E                     	;# 
    85  0111                     	;# 
    86  0112                     	;# 
    87  0113                     	;# 
    88  0114                     	;# 
    89  0115                     	;# 
    90  0116                     	;# 
    91  0117                     	;# 
    92  0118                     	;# 
    93  0119                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011D                     	;# 
    97  011D                     	;# 
    98  018C                     	;# 
    99  018E                     	;# 
   100  0191                     	;# 
   101  0191                     	;# 
   102  0192                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0193                     	;# 
   106  0194                     	;# 
   107  0195                     	;# 
   108  0196                     	;# 
   109  0199                     	;# 
   110  019A                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019B                     	;# 
   115  019C                     	;# 
   116  019C                     	;# 
   117  019D                     	;# 
   118  019E                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  020E                     	;# 
   122  0211                     	;# 
   123  0211                     	;# 
   124  0212                     	;# 
   125  0212                     	;# 
   126  0213                     	;# 
   127  0213                     	;# 
   128  0214                     	;# 
   129  0214                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0216                     	;# 
   134  0216                     	;# 
   135  0217                     	;# 
   136  0217                     	;# 
   137  0291                     	;# 
   138  0291                     	;# 
   139  0292                     	;# 
   140  0293                     	;# 
   141  0294                     	;# 
   142  0295                     	;# 
   143  0295                     	;# 
   144  0296                     	;# 
   145  0391                     	;# 
   146  0392                     	;# 
   147  0393                     	;# 
   148  039A                     	;# 
   149  039C                     	;# 
   150  039D                     	;# 
   151  039E                     	;# 
   152  039F                     	;# 
   153  0FE4                     	;# 
   154  0FE5                     	;# 
   155  0FE6                     	;# 
   156  0FE7                     	;# 
   157  0FE8                     	;# 
   158  0FE9                     	;# 
   159  0FEA                     	;# 
   160  0FEB                     	;# 
   161  0FED                     	;# 
   162  0FEE                     	;# 
   163  0FEF                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000E                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  008C                     	;# 
   192  008E                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  010C                     	;# 
   207  010E                     	;# 
   208  0111                     	;# 
   209  0112                     	;# 
   210  0113                     	;# 
   211  0114                     	;# 
   212  0115                     	;# 
   213  0116                     	;# 
   214  0117                     	;# 
   215  0118                     	;# 
   216  0119                     	;# 
   217  011A                     	;# 
   218  011B                     	;# 
   219  011D                     	;# 
   220  011D                     	;# 
   221  018C                     	;# 
   222  018E                     	;# 
   223  0191                     	;# 
   224  0191                     	;# 
   225  0192                     	;# 
   226  0193                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0194                     	;# 
   230  0195                     	;# 
   231  0196                     	;# 
   232  0199                     	;# 
   233  019A                     	;# 
   234  019B                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019C                     	;# 
   239  019C                     	;# 
   240  019D                     	;# 
   241  019E                     	;# 
   242  019F                     	;# 
   243  020C                     	;# 
   244  020E                     	;# 
   245  0211                     	;# 
   246  0211                     	;# 
   247  0212                     	;# 
   248  0212                     	;# 
   249  0213                     	;# 
   250  0213                     	;# 
   251  0214                     	;# 
   252  0214                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0291                     	;# 
   261  0291                     	;# 
   262  0292                     	;# 
   263  0293                     	;# 
   264  0294                     	;# 
   265  0295                     	;# 
   266  0295                     	;# 
   267  0296                     	;# 
   268  0391                     	;# 
   269  0392                     	;# 
   270  0393                     	;# 
   271  039A                     	;# 
   272  039C                     	;# 
   273  039D                     	;# 
   274  039E                     	;# 
   275  039F                     	;# 
   276  0FE4                     	;# 
   277  0FE5                     	;# 
   278  0FE6                     	;# 
   279  0FE7                     	;# 
   280  0FE8                     	;# 
   281  0FE9                     	;# 
   282  0FEA                     	;# 
   283  0FEB                     	;# 
   284  0FED                     	;# 
   285  0FEE                     	;# 
   286  0FEF                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000E                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001C                     	;# 
   312  001E                     	;# 
   313  001F                     	;# 
   314  008C                     	;# 
   315  008E                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  010C                     	;# 
   330  010E                     	;# 
   331  0111                     	;# 
   332  0112                     	;# 
   333  0113                     	;# 
   334  0114                     	;# 
   335  0115                     	;# 
   336  0116                     	;# 
   337  0117                     	;# 
   338  0118                     	;# 
   339  0119                     	;# 
   340  011A                     	;# 
   341  011B                     	;# 
   342  011D                     	;# 
   343  011D                     	;# 
   344  018C                     	;# 
   345  018E                     	;# 
   346  0191                     	;# 
   347  0191                     	;# 
   348  0192                     	;# 
   349  0193                     	;# 
   350  0193                     	;# 
   351  0193                     	;# 
   352  0194                     	;# 
   353  0195                     	;# 
   354  0196                     	;# 
   355  0199                     	;# 
   356  019A                     	;# 
   357  019B                     	;# 
   358  019B                     	;# 
   359  019B                     	;# 
   360  019B                     	;# 
   361  019C                     	;# 
   362  019C                     	;# 
   363  019D                     	;# 
   364  019E                     	;# 
   365  019F                     	;# 
   366  020C                     	;# 
   367  020E                     	;# 
   368  0211                     	;# 
   369  0211                     	;# 
   370  0212                     	;# 
   371  0212                     	;# 
   372  0213                     	;# 
   373  0213                     	;# 
   374  0214                     	;# 
   375  0214                     	;# 
   376  0215                     	;# 
   377  0215                     	;# 
   378  0215                     	;# 
   379  0216                     	;# 
   380  0216                     	;# 
   381  0217                     	;# 
   382  0217                     	;# 
   383  0291                     	;# 
   384  0291                     	;# 
   385  0292                     	;# 
   386  0293                     	;# 
   387  0294                     	;# 
   388  0295                     	;# 
   389  0295                     	;# 
   390  0296                     	;# 
   391  0391                     	;# 
   392  0392                     	;# 
   393  0393                     	;# 
   394  039A                     	;# 
   395  039C                     	;# 
   396  039D                     	;# 
   397  039E                     	;# 
   398  039F                     	;# 
   399  0FE4                     	;# 
   400  0FE5                     	;# 
   401  0FE6                     	;# 
   402  0FE7                     	;# 
   403  0FE8                     	;# 
   404  0FE9                     	;# 
   405  0FEA                     	;# 
   406  0FEB                     	;# 
   407  0FED                     	;# 
   408  0FEE                     	;# 
   409  0FEF                     	;# 
   410  0000                     	;# 
   411  0001                     	;# 
   412  0002                     	;# 
   413  0003                     	;# 
   414  0004                     	;# 
   415  0005                     	;# 
   416  0006                     	;# 
   417  0007                     	;# 
   418  0008                     	;# 
   419  0009                     	;# 
   420  000A                     	;# 
   421  000B                     	;# 
   422  000C                     	;# 
   423  000E                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  008C                     	;# 
   438  008E                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  010C                     	;# 
   453  010E                     	;# 
   454  0111                     	;# 
   455  0112                     	;# 
   456  0113                     	;# 
   457  0114                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011A                     	;# 
   464  011B                     	;# 
   465  011D                     	;# 
   466  011D                     	;# 
   467  018C                     	;# 
   468  018E                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0193                     	;# 
   475  0194                     	;# 
   476  0195                     	;# 
   477  0196                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020C                     	;# 
   490  020E                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0294                     	;# 
   511  0295                     	;# 
   512  0295                     	;# 
   513  0296                     	;# 
   514  0391                     	;# 
   515  0392                     	;# 
   516  0393                     	;# 
   517  039A                     	;# 
   518  039C                     	;# 
   519  039D                     	;# 
   520  039E                     	;# 
   521  039F                     	;# 
   522  0FE4                     	;# 
   523  0FE5                     	;# 
   524  0FE6                     	;# 
   525  0FE7                     	;# 
   526  0FE8                     	;# 
   527  0FE9                     	;# 
   528  0FEA                     	;# 
   529  0FEB                     	;# 
   530  0FED                     	;# 
   531  0FEE                     	;# 
   532  0FEF                     	;# 
   533                           
   534                           	psect	idataBANK0
   535  07E3                     __pidataBANK0:	
   536                           
   537                           ;initializer for LCDWriteInt@F2516
   538  07E3  34F0               	retlw	240
   539  07E4  34F0               	retlw	240
   540  07E5  34F0               	retlw	240
   541  07E6  34F0               	retlw	240
   542  07E7  34F0               	retlw	240
   543                           
   544                           ;initializer for _tuneUpTempDir
   545  07E8  3401               	retlw	1
   546                           
   547                           	psect	idataBANK1
   548  07DB                     __pidataBANK1:	
   549                           
   550                           ;initializer for ___cgram
   551  07DB  340C               	retlw	12
   552  07DC  3412               	retlw	18
   553  07DD  3412               	retlw	18
   554  07DE  340C               	retlw	12
   555  07DF  3400               	retlw	0
   556  07E0  3400               	retlw	0
   557  07E1  3400               	retlw	0
   558  07E2  3400               	retlw	0
   559  000B                     _INTCONbits	set	11
   560  000E                     _PORTC	set	14
   561  0060                     _RA0	set	96
   562  0061                     _RA1	set	97
   563  0064                     _RA4	set	100
   564  0065                     _RA5	set	101
   565  0070                     _RC0	set	112
   566  0071                     _RC1	set	113
   567  009D                     _ADCON0bits	set	157
   568  009E                     _ADCON1bits	set	158
   569  009C                     _ADRESH	set	156
   570  009B                     _ADRESL	set	155
   571  008C                     _TRISAbits	set	140
   572  008E                     _TRISC	set	142
   573  008E                     _TRISCbits	set	142
   574  018C                     _ANSELAbits	set	396
   575  0393                     _IOCAFbits	set	915
   576                           
   577                           	psect	stringtext
   578  079B                     __pstringtext:	
   579  079B                     STR_1:	
   580  079B  3443               	retlw	67	;'C'
   581  079C  3475               	retlw	117	;'u'
   582  079D  3472               	retlw	114	;'r'
   583  079E  343A               	retlw	58	;':'
   584  079F  3400               	retlw	0
   585  07A0                     STR_4:	
   586  07A0  344D               	retlw	77	;'M'
   587  07A1  3461               	retlw	97	;'a'
   588  07A2  3478               	retlw	120	;'x'
   589  07A3  343A               	retlw	58	;':'
   590  07A4  3400               	retlw	0
   591  07A5                     STR_7:	
   592  07A5  344F               	retlw	79	;'O'
   593  07A6  344E               	retlw	78	;'N'
   594  07A7  3420               	retlw	32	;' '
   595  07A8  3400               	retlw	0
   596  07A9                     STR_3:	
   597  07A9  3457               	retlw	87	;'W'
   598  07AA  3461               	retlw	97	;'a'
   599  07AB  343A               	retlw	58	;':'
   600  07AC  3400               	retlw	0
   601  07AD                     STR_2:	
   602  07AD  3425               	retlw	37	;'%'
   603  07AE  3430               	retlw	48	;'0'
   604  07AF  3443               	retlw	67	;'C'
   605  07B0  3400               	retlw	0
   606  07B1                     STR_6:	
   607  07B1  344F               	retlw	79	;'O'
   608  07B2  3446               	retlw	70	;'F'
   609  07B3  3446               	retlw	70	;'F'
   610  07B4  3400               	retlw	0
   611  07AD                     
   612                           ; #config settings
   613  0000                     
   614                           	psect	cinit
   615  0048                     start_initialization:	
   616  0048                     __initialization:	
   617                           
   618                           ; Clear objects allocated to BANK0
   619  0048  01DD               	clrf	__pbssBANK0& (0+127)
   620  0049  01DE               	clrf	(__pbssBANK0+1)& (0+127)
   621  004A  01DF               	clrf	(__pbssBANK0+2)& (0+127)
   622  004B  01E0               	clrf	(__pbssBANK0+3)& (0+127)
   623                           
   624                           ; Initialize objects allocated to BANK0
   625  004C  30E3               	movlw	low __pidataBANK0
   626  004D  0084               	movwf	4
   627  004E  3087               	movlw	(high __pidataBANK0)| (0+128)
   628  004F  0085               	movwf	5
   629  0050  3057               	movlw	low __pdataBANK0
   630  0051  0086               	movwf	6
   631  0052  3000               	movlw	high __pdataBANK0
   632  0053  0087               	movwf	7
   633  0054  3006               	movlw	6
   634  0055  27E9               	fcall	init_ram
   635                           
   636                           ; Initialize objects allocated to BANK1
   637  0056  30DB               	movlw	low __pidataBANK1
   638  0057  0084               	movwf	4
   639  0058  3087               	movlw	(high __pidataBANK1)| (0+128)
   640  0059  0085               	movwf	5
   641  005A  30A9               	movlw	low __pdataBANK1
   642  005B  0086               	movwf	6
   643  005C  3000               	movlw	high __pdataBANK1
   644  005D  0087               	movwf	7
   645  005E  3008               	movlw	8
   646  005F  27E9               	fcall	init_ram
   647  0060                     end_of_initialization:	
   648                           ;End of C runtime variable initialization code
   649                           
   650  0060                     __end_of__initialization:	
   651  0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   652  0061  0020               	movlb	0
   653  0062  2863               	ljmp	_main	;jump to C main() function
   654                           
   655                           	psect	bssBANK0
   656  005D                     __pbssBANK0:	
   657  005D                     _curTemp:	
   658  005D                     	ds	2
   659  005F                     _tuneUpTemp:	
   660  005F                     	ds	2
   661                           
   662                           	psect	dataBANK0
   663  0057                     __pdataBANK0:	
   664  0057                     LCDWriteInt@F2516:	
   665  0057                     	ds	5
   666  005C                     _tuneUpTempDir:	
   667  005C                     	ds	1
   668                           
   669                           	psect	dataBANK1
   670  00A9                     __pdataBANK1:	
   671  00A9                     ___cgram:	
   672  00A9                     	ds	8
   673                           
   674                           	psect	inittext
   675  07E9                     init_ram:	
   676  07E9  00FE               	movwf	126
   677  07EA                     initloop:	
   678  07EA  0012               	moviw fsr0++
   679  07EB  001E               	movwi fsr1++
   680  07EC  0BFE               	decfsz	126,f
   681  07ED  2FEA               	goto	initloop
   682  07EE  3400               	retlw	0
   683                           
   684                           	psect	cstackBANK1
   685  00A0                     __pcstackBANK1:	
   686  00A0                     ___fttol@sign1:	
   687                           
   688                           ; 1 bytes @ 0x0
   689  00A0                     	ds	1
   690  00A1                     ___fttol@lval:	
   691                           
   692                           ; 4 bytes @ 0x1
   693  00A1                     	ds	4
   694  00A5                     ___fttol@exp1:	
   695                           
   696                           ; 1 bytes @ 0x5
   697  00A5                     	ds	1
   698  00A6                     ??_main:	
   699                           
   700                           ; 1 bytes @ 0x6
   701  00A6                     	ds	3
   702                           
   703                           	psect	cstackCOMMON
   704  0070                     __pcstackCOMMON:	
   705  0070                     ?_LCDBusyLoop:	
   706  0070                     ?_ADCInit:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_LCDInit:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_TriggerOutInit:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_TuneButtonInit:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_ISR:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_main:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?i1_LCDBusyLoop:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??i1_LCDBusyLoop:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?i1___awdiv:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?i1___awmod:	
   734                           ; 2 bytes @ 0x0
   735                           
   736  0070                     i1___awdiv@divisor:	
   737                           ; 2 bytes @ 0x0
   738                           
   739  0070                     i1___awmod@divisor:	
   740                           ; 2 bytes @ 0x0
   741                           
   742                           
   743                           ; 2 bytes @ 0x0
   744  0070                     	ds	2
   745  0072                     i1LCDBusyLoop@busy:	
   746  0072                     i1___awdiv@dividend:	
   747                           ; 1 bytes @ 0x2
   748                           
   749  0072                     i1___awmod@dividend:	
   750                           ; 2 bytes @ 0x2
   751                           
   752                           
   753                           ; 2 bytes @ 0x2
   754  0072                     	ds	1
   755  0073                     i1LCDBusyLoop@temp:	
   756                           
   757                           ; 1 bytes @ 0x3
   758  0073                     	ds	1
   759  0074                     ??i1___awdiv:	
   760  0074                     ??i1___awmod:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     i1LCDBusyLoop@status:	
   764                           ; 1 bytes @ 0x4
   765                           
   766                           
   767                           ; 1 bytes @ 0x4
   768  0074                     	ds	1
   769  0075                     ?i1_LCDByte:	
   770  0075                     i1LCDByte@isdata:	
   771                           ; 1 bytes @ 0x5
   772                           
   773  0075                     i1___awdiv@counter:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0075                     i1___awmod@counter:	
   777                           ; 1 bytes @ 0x5
   778                           
   779                           
   780                           ; 1 bytes @ 0x5
   781  0075                     	ds	1
   782  0076                     ??i1_LCDByte:	
   783  0076                     i1___awdiv@sign:	
   784                           ; 1 bytes @ 0x6
   785                           
   786  0076                     i1___awmod@sign:	
   787                           ; 1 bytes @ 0x6
   788                           
   789                           
   790                           ; 1 bytes @ 0x6
   791  0076                     	ds	1
   792  0077                     i1___awdiv@quotient:	
   793                           
   794                           ; 2 bytes @ 0x7
   795  0077                     	ds	1
   796  0078                     i1LCDByte@hn:	
   797                           
   798                           ; 1 bytes @ 0x8
   799  0078                     	ds	1
   800  0079                     i1LCDByte@ln:	
   801                           
   802                           ; 1 bytes @ 0x9
   803  0079                     	ds	1
   804  007A                     i1LCDByte@c:	
   805                           
   806                           ; 1 bytes @ 0xA
   807  007A                     	ds	1
   808  007B                     i1LCDByte@temp:	
   809                           
   810                           ; 1 bytes @ 0xB
   811  007B                     	ds	1
   812  007C                     ??i1_LCDWriteInt:	
   813  007C                     ?i1_LCDGotoXY:	
   814                           ; 1 bytes @ 0xC
   815                           
   816  007C                     i1LCDGotoXY@y:	
   817                           ; 1 bytes @ 0xC
   818                           
   819                           
   820                           ; 1 bytes @ 0xC
   821  007C                     	ds	1
   822  007D                     ??i1_LCDGotoXY:	
   823                           
   824                           ; 1 bytes @ 0xD
   825  007D                     	ds	1
   826                           
   827                           	psect	cstackBANK0
   828  0020                     __pcstackBANK0:	
   829  0020                     ?i1_LCDWriteInt:	
   830  0020                     i1LCDGotoXY@x:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0020                     i1LCDWriteInt@val:	
   834                           ; 1 bytes @ 0x0
   835                           
   836                           
   837                           ; 2 bytes @ 0x0
   838  0020                     	ds	2
   839  0022                     i1LCDWriteInt@field_length:	
   840                           
   841                           ; 1 bytes @ 0x2
   842  0022                     	ds	1
   843  0023                     i1LCDWriteInt@str:	
   844                           
   845                           ; 5 bytes @ 0x3
   846  0023                     	ds	5
   847  0028                     i1LCDWriteInt@j:	
   848                           
   849                           ; 2 bytes @ 0x8
   850  0028                     	ds	2
   851  002A                     i1LCDWriteInt@i:	
   852                           
   853                           ; 2 bytes @ 0xA
   854  002A                     	ds	2
   855  002C                     ??_ISR:	
   856                           
   857                           ; 1 bytes @ 0xC
   858  002C                     	ds	3
   859  002F                     ??_LCDBusyLoop:	
   860  002F                     ??_ADCInit:	
   861                           ; 1 bytes @ 0xF
   862                           
   863  002F                     ??_TriggerOutInit:	
   864                           ; 1 bytes @ 0xF
   865                           
   866  002F                     ??_TuneButtonInit:	
   867                           ; 1 bytes @ 0xF
   868                           
   869  002F                     ?_ReadADC:	
   870                           ; 1 bytes @ 0xF
   871                           
   872  002F                     ?___awdiv:	
   873                           ; 2 bytes @ 0xF
   874                           
   875  002F                     ?___awmod:	
   876                           ; 2 bytes @ 0xF
   877                           
   878  002F                     ?___ftpack:	
   879                           ; 2 bytes @ 0xF
   880                           
   881  002F                     ___awdiv@divisor:	
   882                           ; 3 bytes @ 0xF
   883                           
   884  002F                     ___awmod@divisor:	
   885                           ; 2 bytes @ 0xF
   886                           
   887  002F                     ___ftpack@arg:	
   888                           ; 2 bytes @ 0xF
   889                           
   890                           
   891                           ; 3 bytes @ 0xF
   892  002F                     	ds	2
   893  0031                     ??_ReadADC:	
   894  0031                     LCDBusyLoop@busy:	
   895                           ; 1 bytes @ 0x11
   896                           
   897  0031                     ___awdiv@dividend:	
   898                           ; 1 bytes @ 0x11
   899                           
   900  0031                     ___awmod@dividend:	
   901                           ; 2 bytes @ 0x11
   902                           
   903                           
   904                           ; 2 bytes @ 0x11
   905  0031                     	ds	1
   906  0032                     LCDBusyLoop@temp:	
   907  0032                     ReadADC@ch:	
   908                           ; 1 bytes @ 0x12
   909                           
   910  0032                     ___ftpack@exp:	
   911                           ; 1 bytes @ 0x12
   912                           
   913                           
   914                           ; 1 bytes @ 0x12
   915  0032                     	ds	1
   916  0033                     ??___awdiv:	
   917  0033                     ??___awmod:	
   918                           ; 1 bytes @ 0x13
   919                           
   920  0033                     LCDBusyLoop@status:	
   921                           ; 1 bytes @ 0x13
   922                           
   923  0033                     ___ftpack@sign:	
   924                           ; 1 bytes @ 0x13
   925                           
   926                           
   927                           ; 1 bytes @ 0x13
   928  0033                     	ds	1
   929  0034                     ??___ftpack:	
   930  0034                     ?_LCDByte:	
   931                           ; 1 bytes @ 0x14
   932                           
   933  0034                     LCDByte@isdata:	
   934                           ; 1 bytes @ 0x14
   935                           
   936  0034                     ___awdiv@counter:	
   937                           ; 1 bytes @ 0x14
   938                           
   939  0034                     ___awmod@counter:	
   940                           ; 1 bytes @ 0x14
   941                           
   942                           
   943                           ; 1 bytes @ 0x14
   944  0034                     	ds	1
   945  0035                     ??_LCDByte:	
   946  0035                     ___awdiv@sign:	
   947                           ; 1 bytes @ 0x15
   948                           
   949  0035                     ___awmod@sign:	
   950                           ; 1 bytes @ 0x15
   951                           
   952                           
   953                           ; 1 bytes @ 0x15
   954  0035                     	ds	1
   955  0036                     ___awdiv@quotient:	
   956                           
   957                           ; 2 bytes @ 0x16
   958  0036                     	ds	1
   959  0037                     ?___lwtoft:	
   960  0037                     LCDByte@hn:	
   961                           ; 3 bytes @ 0x17
   962                           
   963  0037                     ___lwtoft@c:	
   964                           ; 1 bytes @ 0x17
   965                           
   966                           
   967                           ; 2 bytes @ 0x17
   968  0037                     	ds	1
   969  0038                     LCDByte@ln:	
   970                           
   971                           ; 1 bytes @ 0x18
   972  0038                     	ds	1
   973  0039                     LCDByte@c:	
   974                           
   975                           ; 1 bytes @ 0x19
   976  0039                     	ds	1
   977  003A                     ??___lwtoft:	
   978  003A                     LCDByte@temp:	
   979                           ; 1 bytes @ 0x1A
   980                           
   981                           
   982                           ; 1 bytes @ 0x1A
   983  003A                     	ds	1
   984  003B                     ??_LCDInit:	
   985  003B                     ?_LCDWriteString:	
   986                           ; 1 bytes @ 0x1B
   987                           
   988  003B                     ?_LCDWriteInt:	
   989                           ; 1 bytes @ 0x1B
   990                           
   991  003B                     ?_LCDGotoXY:	
   992                           ; 1 bytes @ 0x1B
   993                           
   994  003B                     ?___ftmul:	
   995                           ; 1 bytes @ 0x1B
   996                           
   997  003B                     LCDGotoXY@y:	
   998                           ; 3 bytes @ 0x1B
   999                           
  1000  003B                     LCDWriteString@msg:	
  1001                           ; 1 bytes @ 0x1B
  1002                           
  1003  003B                     LCDWriteInt@val:	
  1004                           ; 2 bytes @ 0x1B
  1005                           
  1006  003B                     ___ftmul@f1:	
  1007                           ; 2 bytes @ 0x1B
  1008                           
  1009                           
  1010                           ; 3 bytes @ 0x1B
  1011  003B                     	ds	1
  1012  003C                     ??_LCDGotoXY:	
  1013                           
  1014                           ; 1 bytes @ 0x1C
  1015  003C                     	ds	1
  1016  003D                     ??_LCDWriteString:	
  1017  003D                     LCDInit@style:	
  1018                           ; 1 bytes @ 0x1D
  1019                           
  1020  003D                     LCDWriteInt@field_length:	
  1021                           ; 1 bytes @ 0x1D
  1022                           
  1023  003D                     LCDGotoXY@x:	
  1024                           ; 1 bytes @ 0x1D
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0x1D
  1028  003D                     	ds	1
  1029  003E                     ??_LCDWriteInt:	
  1030  003E                     LCDInit@__i:	
  1031                           ; 1 bytes @ 0x1E
  1032                           
  1033  003E                     LCDWriteString@cc:	
  1034                           ; 1 bytes @ 0x1E
  1035                           
  1036  003E                     ___ftmul@f2:	
  1037                           ; 1 bytes @ 0x1E
  1038                           
  1039                           
  1040                           ; 3 bytes @ 0x1E
  1041  003E                     	ds	2
  1042  0040                     LCDWriteInt@str:	
  1043                           
  1044                           ; 5 bytes @ 0x20
  1045  0040                     	ds	1
  1046  0041                     ??___ftmul:	
  1047                           
  1048                           ; 1 bytes @ 0x21
  1049  0041                     	ds	4
  1050  0045                     ___ftmul@exp:	
  1051  0045                     LCDWriteInt@j:	
  1052                           ; 1 bytes @ 0x25
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x25
  1056  0045                     	ds	1
  1057  0046                     ___ftmul@f3_as_product:	
  1058                           
  1059                           ; 3 bytes @ 0x26
  1060  0046                     	ds	1
  1061  0047                     LCDWriteInt@i:	
  1062                           
  1063                           ; 2 bytes @ 0x27
  1064  0047                     	ds	2
  1065  0049                     ___ftmul@cntr:	
  1066                           
  1067                           ; 1 bytes @ 0x29
  1068  0049                     	ds	1
  1069  004A                     ___ftmul@sign:	
  1070                           
  1071                           ; 1 bytes @ 0x2A
  1072  004A                     	ds	1
  1073  004B                     ?___fttol:	
  1074  004B                     ___fttol@f1:	
  1075                           ; 4 bytes @ 0x2B
  1076                           
  1077                           
  1078                           ; 3 bytes @ 0x2B
  1079  004B                     	ds	4
  1080  004F                     ??___fttol:	
  1081                           
  1082                           ; 1 bytes @ 0x2F
  1083  004F                     	ds	4
  1084  0053                     ?_LM35ReadTemp:	
  1085                           
  1086                           ; 2 bytes @ 0x33
  1087  0053                     	ds	2
  1088  0055                     ??_LM35ReadTemp:	
  1089  0055                     LM35ReadTemp@adc_value:	
  1090                           ; 1 bytes @ 0x35
  1091                           
  1092                           
  1093                           ; 2 bytes @ 0x35
  1094  0055                     	ds	2
  1095                           
  1096                           	psect	maintext
  1097  0063                     __pmaintext:	
  1098 ;;
  1099 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1100 ;;
  1101 ;; *************** function _main *****************
  1102 ;; Defined at:
  1103 ;;		line 134 in file "do_am.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : B1F/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1
  1117 ;;      Params:         0       0       0
  1118 ;;      Locals:         0       0       0
  1119 ;;      Temps:          0       0       3
  1120 ;;      Totals:         0       0       3
  1121 ;;Total ram usage:        3 bytes
  1122 ;; Hardware stack levels required when called:    7
  1123 ;; This function calls:
  1124 ;;		_ADCInit
  1125 ;;		_LCDByte
  1126 ;;		_LCDGotoXY
  1127 ;;		_LCDInit
  1128 ;;		_LCDWriteInt
  1129 ;;		_LCDWriteString
  1130 ;;		_LM35ReadTemp
  1131 ;;		_TriggerOutInit
  1132 ;;		_TuneButtonInit
  1133 ;; This function is called by:
  1134 ;;		Startup code after reset
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _main
  1140  0063                     _main:	
  1141                           
  1142                           ;do_am.c: 137: LCDInit(0B00000000);
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1146  0063  3000               	movlw	0
  1147  0064  25F5               	fcall	_LCDInit
  1148                           
  1149                           ;do_am.c: 140: ADCInit();
  1150  0065  27C9               	fcall	_ADCInit
  1151                           
  1152                           ;do_am.c: 143: TuneButtonInit();
  1153  0066  27EF               	fcall	_TuneButtonInit
  1154                           
  1155                           ;do_am.c: 146: TriggerOutInit();
  1156  0067  27F5               	fcall	_TriggerOutInit
  1157                           
  1158                           ;do_am.c: 151: RA4 = 0;
  1159  0068  0020               	movlb	0	; select bank0
  1160  0069  120C               	bcf	12,4	;volatile
  1161                           
  1162                           ;do_am.c: 152: RA5 = 1;
  1163  006A  168C               	bsf	12,5	;volatile
  1164                           
  1165                           ;do_am.c: 155: (LCDByte(0b00000001,0));
  1166  006B  01B4               	clrf	LCDByte@isdata
  1167  006C  3001               	movlw	1
  1168  006D  25AB               	fcall	_LCDByte
  1169                           
  1170                           ;do_am.c: 157: { LCDGotoXY(0,0); LCDWriteString("Cur:");};
  1171  006E  0020               	movlb	0	; select bank0
  1172  006F  01BB               	clrf	LCDGotoXY@y
  1173  0070  3000               	movlw	0
  1174  0071  2755               	fcall	_LCDGotoXY
  1175  0072  309B               	movlw	low (STR_1| (0+32768))
  1176  0073  0020               	movlb	0	; select bank0
  1177  0074  00BB               	movwf	LCDWriteString@msg
  1178  0075  3087               	movlw	high (STR_1| (0+32768))
  1179  0076  00BC               	movwf	LCDWriteString@msg+1
  1180  0077  26C9               	fcall	_LCDWriteString
  1181                           
  1182                           ;do_am.c: 159: { LCDGotoXY(7,0); LCDWriteString("%0C");};
  1183  0078  0020               	movlb	0	; select bank0
  1184  0079  01BB               	clrf	LCDGotoXY@y
  1185  007A  3007               	movlw	7
  1186  007B  2755               	fcall	_LCDGotoXY
  1187  007C  30AD               	movlw	low (STR_2| (0+32768))
  1188  007D  0020               	movlb	0	; select bank0
  1189  007E  00BB               	movwf	LCDWriteString@msg
  1190  007F  3087               	movlw	high (STR_2| (0+32768))
  1191  0080  00BC               	movwf	LCDWriteString@msg+1
  1192  0081  26C9               	fcall	_LCDWriteString
  1193                           
  1194                           ;do_am.c: 161: { LCDGotoXY(10,0); LCDWriteString("Wa:");};
  1195  0082  0020               	movlb	0	; select bank0
  1196  0083  01BB               	clrf	LCDGotoXY@y
  1197  0084  300A               	movlw	10
  1198  0085  2755               	fcall	_LCDGotoXY
  1199  0086  30A9               	movlw	low (STR_3| (0+32768))
  1200  0087  0020               	movlb	0	; select bank0
  1201  0088  00BB               	movwf	LCDWriteString@msg
  1202  0089  3087               	movlw	high (STR_3| (0+32768))
  1203  008A  00BC               	movwf	LCDWriteString@msg+1
  1204  008B  26C9               	fcall	_LCDWriteString
  1205                           
  1206                           ;do_am.c: 163: { LCDGotoXY(0,1); LCDWriteString("Max:");};
  1207  008C  0020               	movlb	0	; select bank0
  1208  008D  01BB               	clrf	LCDGotoXY@y
  1209  008E  0ABB               	incf	LCDGotoXY@y,f
  1210  008F  3000               	movlw	0
  1211  0090  2755               	fcall	_LCDGotoXY
  1212  0091  30A0               	movlw	low (STR_4| (0+32768))
  1213  0092  0020               	movlb	0	; select bank0
  1214  0093  00BB               	movwf	LCDWriteString@msg
  1215  0094  3087               	movlw	high (STR_4| (0+32768))
  1216  0095  00BC               	movwf	LCDWriteString@msg+1
  1217  0096  26C9               	fcall	_LCDWriteString
  1218                           
  1219                           ;do_am.c: 165: { LCDGotoXY(7,1); LCDWriteString("%0C");};
  1220  0097  0020               	movlb	0	; select bank0
  1221  0098  01BB               	clrf	LCDGotoXY@y
  1222  0099  0ABB               	incf	LCDGotoXY@y,f
  1223  009A  3007               	movlw	7
  1224  009B  2755               	fcall	_LCDGotoXY
  1225  009C  30AD               	movlw	low (STR_2| (0+32768))
  1226  009D  0020               	movlb	0	; select bank0
  1227  009E  00BB               	movwf	LCDWriteString@msg
  1228  009F  3087               	movlw	high (STR_2| (0+32768))
  1229  00A0  00BC               	movwf	LCDWriteString@msg+1
  1230  00A1  26C9               	fcall	_LCDWriteString
  1231                           
  1232                           ;do_am.c: 167: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1233  00A2  0020               	movlb	0	; select bank0
  1234  00A3  01BB               	clrf	LCDGotoXY@y
  1235  00A4  300D               	movlw	13
  1236  00A5  2755               	fcall	_LCDGotoXY
  1237  00A6  30B1               	movlw	low (STR_6| (0+32768))
  1238  00A7  0020               	movlb	0	; select bank0
  1239  00A8  00BB               	movwf	LCDWriteString@msg
  1240  00A9  3087               	movlw	high (STR_6| (0+32768))
  1241  00AA  00BC               	movwf	LCDWriteString@msg+1
  1242  00AB  26C9               	fcall	_LCDWriteString
  1243                           
  1244                           ;do_am.c: 169: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1245  00AC  0020               	movlb	0	; select bank0
  1246  00AD  01BB               	clrf	LCDGotoXY@y
  1247  00AE  0ABB               	incf	LCDGotoXY@y,f
  1248  00AF  3004               	movlw	4
  1249  00B0  2755               	fcall	_LCDGotoXY
  1250  00B1  0020               	movlb	0	; select bank0
  1251  00B2  0860               	movf	_tuneUpTemp+1,w
  1252  00B3  00BC               	movwf	LCDWriteInt@val+1
  1253  00B4  085F               	movf	_tuneUpTemp,w
  1254  00B5  00BB               	movwf	LCDWriteInt@val
  1255  00B6  3003               	movlw	3
  1256  00B7  0021               	movlb	1	; select bank1
  1257  00B8  00A6               	movwf	??_main^(0+128)
  1258  00B9  0826               	movf	??_main^(0+128),w
  1259  00BA  0020               	movlb	0	; select bank0
  1260  00BB  00BD               	movwf	LCDWriteInt@field_length
  1261  00BC  22AB               	fcall	_LCDWriteInt
  1262                           
  1263                           ;do_am.c: 170: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1264  00BD  0020               	movlb	0	; select bank0
  1265  00BE                     L1:	
  1266  00BE  01BB               	clrf	LCDGotoXY@y
  1267  00BF  3004               	movlw	4
  1268  00C0  2755               	fcall	_LCDGotoXY
  1269  00C1  0020               	movlb	0	; select bank0
  1270  00C2  085E               	movf	_curTemp+1,w
  1271  00C3  00BC               	movwf	LCDWriteInt@val+1
  1272  00C4  085D               	movf	_curTemp,w
  1273  00C5  00BB               	movwf	LCDWriteInt@val
  1274  00C6  3003               	movlw	3
  1275  00C7  0021               	movlb	1	; select bank1
  1276  00C8  00A6               	movwf	??_main^(0+128)
  1277  00C9  0826               	movf	??_main^(0+128),w
  1278  00CA  0020               	movlb	0	; select bank0
  1279  00CB  00BD               	movwf	LCDWriteInt@field_length
  1280  00CC  22AB               	fcall	_LCDWriteInt
  1281                           
  1282                           ;do_am.c: 172: {
  1283                           ;do_am.c: 174: curTemp = LM35ReadTemp();
  1284                           
  1285                           ;do_am.c: 171: while(1)
  1286  00CD  2706               	fcall	_LM35ReadTemp
  1287  00CE  0020               	movlb	0	; select bank0
  1288  00CF  0854               	movf	?_LM35ReadTemp+1,w
  1289  00D0  00DE               	movwf	_curTemp+1
  1290  00D1  0853               	movf	?_LM35ReadTemp,w
  1291  00D2  00DD               	movwf	_curTemp
  1292                           
  1293                           ;do_am.c: 176: if((tuneUpTemp >= 5) && (curTemp >= tuneUpTemp))
  1294  00D3  0860               	movf	_tuneUpTemp+1,w
  1295  00D4  3A80               	xorlw	128
  1296  00D5  0021               	movlb	1	; select bank1
  1297  00D6  00A6               	movwf	??_main^(0+128)
  1298  00D7  3080               	movlw	128
  1299  00D8  0226               	subwf	??_main^(0+128),w
  1300  00D9  1D03               	skipz
  1301  00DA  28DE               	goto	u2535
  1302  00DB  3005               	movlw	5
  1303  00DC  0020               	movlb	0	; select bank0
  1304  00DD  025F               	subwf	_tuneUpTemp,w
  1305  00DE                     u2535:	
  1306  00DE  1C03               	skipc
  1307  00DF  28FF               	goto	l2265
  1308  00E0  0020               	movlb	0	; select bank0
  1309  00E1  085E               	movf	_curTemp+1,w
  1310  00E2  3A80               	xorlw	128
  1311  00E3  0021               	movlb	1	; select bank1
  1312  00E4  00A6               	movwf	??_main^(0+128)
  1313  00E5  0020               	movlb	0	; select bank0
  1314  00E6  0860               	movf	_tuneUpTemp+1,w
  1315  00E7  3A80               	xorlw	128
  1316  00E8  0021               	movlb	1	; select bank1
  1317  00E9  0226               	subwf	??_main^(0+128),w
  1318  00EA  1D03               	skipz
  1319  00EB  28EF               	goto	u2545
  1320  00EC  0020               	movlb	0	; select bank0
  1321  00ED  085F               	movf	_tuneUpTemp,w
  1322  00EE  025D               	subwf	_curTemp,w
  1323  00EF                     u2545:	
  1324  00EF  1C03               	skipc
  1325  00F0  28FF               	goto	l2265
  1326                           
  1327                           ;do_am.c: 177: {
  1328                           ;do_am.c: 178: { LCDGotoXY(13,0); LCDWriteString("ON ");};
  1329  00F1  0020               	movlb	0	; select bank0
  1330  00F2  01BB               	clrf	LCDGotoXY@y
  1331  00F3  300D               	movlw	13
  1332  00F4  2755               	fcall	_LCDGotoXY
  1333  00F5  30A5               	movlw	low (STR_7| (0+32768))
  1334  00F6  0020               	movlb	0	; select bank0
  1335  00F7  00BB               	movwf	LCDWriteString@msg
  1336  00F8  3087               	movlw	high (STR_7| (0+32768))
  1337  00F9  00BC               	movwf	LCDWriteString@msg+1
  1338  00FA  26C9               	fcall	_LCDWriteString
  1339                           
  1340                           ;do_am.c: 179: RA4 = 1;
  1341  00FB  0020               	movlb	0	; select bank0
  1342  00FC  160C               	bsf	12,4	;volatile
  1343                           
  1344                           ;do_am.c: 180: RA5 = 0;
  1345  00FD  128C               	bcf	12,5	;volatile
  1346                           
  1347                           ;do_am.c: 181: }
  1348  00FE  2926               	goto	l2283
  1349  00FF                     l2265:	
  1350                           
  1351                           ;do_am.c: 182: else
  1352                           ;do_am.c: 183: {
  1353                           ;do_am.c: 184: if(curTemp <= tuneUpTemp - 5)
  1354  00FF  0020               	movlb	0	; select bank0
  1355  0100  085F               	movf	_tuneUpTemp,w
  1356  0101  3EFB               	addlw	251
  1357  0102  0021               	movlb	1	; select bank1
  1358  0103  00A6               	movwf	??_main^(0+128)
  1359  0104  30FF               	movlw	255
  1360  0105  0020               	movlb	0	; select bank0
  1361  0106  3D60               	addwfc	_tuneUpTemp+1,w
  1362  0107  0021               	movlb	1	; select bank1
  1363  0108  00A7               	movwf	(??_main+1)^(0+128)
  1364  0109  0827               	movf	(??_main+1)^(0+128),w
  1365  010A  3A80               	xorlw	128
  1366  010B  00A8               	movwf	(??_main+2)^(0+128)
  1367  010C  0020               	movlb	0	; select bank0
  1368  010D  085E               	movf	_curTemp+1,w
  1369  010E  3A80               	xorlw	128
  1370  010F  0021               	movlb	1	; select bank1
  1371  0110  0228               	subwf	(??_main+2)^(0+128),w
  1372  0111  1D03               	skipz
  1373  0112  2917               	goto	u2555
  1374  0113  0020               	movlb	0	; select bank0
  1375  0114  085D               	movf	_curTemp,w
  1376  0115  0021               	movlb	1	; select bank1
  1377  0116  0226               	subwf	??_main^(0+128),w
  1378  0117                     u2555:	
  1379  0117  1C03               	skipc
  1380  0118  2926               	goto	l2283
  1381                           
  1382                           ;do_am.c: 185: {
  1383                           ;do_am.c: 186: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1384  0119  0020               	movlb	0	; select bank0
  1385  011A  01BB               	clrf	LCDGotoXY@y
  1386  011B  300D               	movlw	13
  1387  011C  2755               	fcall	_LCDGotoXY
  1388  011D  30B1               	movlw	low (STR_6| (0+32768))
  1389  011E  0020               	movlb	0	; select bank0
  1390  011F  00BB               	movwf	LCDWriteString@msg
  1391  0120  3087               	movlw	high (STR_6| (0+32768))
  1392  0121  00BC               	movwf	LCDWriteString@msg+1
  1393  0122  26C9               	fcall	_LCDWriteString
  1394                           
  1395                           ;do_am.c: 187: RA4 = 0;
  1396  0123  0020               	movlb	0	; select bank0
  1397  0124  120C               	bcf	12,4	;volatile
  1398                           
  1399                           ;do_am.c: 188: RA5 = 1;
  1400  0125  168C               	bsf	12,5	;volatile
  1401  0126                     l2283:	
  1402                           ;do_am.c: 189: }
  1403                           ;do_am.c: 190: }
  1404                           ;do_am.c: 191: while(RA1 == 1)
  1405                           
  1406  0126  0020               	movlb	0	; select bank0
  1407  0127  1C8C               	btfss	12,1	;volatile
  1408  0128  28BE               	goto	L1
  1409                           
  1410                           ;do_am.c: 192: {
  1411                           ;do_am.c: 193: tuneUpTemp++;
  1412  0129  3001               	movlw	1
  1413  012A  07DF               	addwf	_tuneUpTemp,f
  1414  012B  3000               	movlw	0
  1415  012C  3DE0               	addwfc	_tuneUpTemp+1,f
  1416                           
  1417                           ;do_am.c: 194: if(tuneUpTemp > 150)
  1418  012D  0860               	movf	_tuneUpTemp+1,w
  1419  012E  3A80               	xorlw	128
  1420  012F  0021               	movlb	1	; select bank1
  1421  0130  00A6               	movwf	??_main^(0+128)
  1422  0131  3080               	movlw	128
  1423  0132  0226               	subwf	??_main^(0+128),w
  1424  0133  1D03               	skipz
  1425  0134  2938               	goto	u2565
  1426  0135  3097               	movlw	151
  1427  0136  0020               	movlb	0	; select bank0
  1428  0137  025F               	subwf	_tuneUpTemp,w
  1429  0138                     u2565:	
  1430  0138  1C03               	skipc
  1431  0139  293D               	goto	l2277
  1432                           
  1433                           ;do_am.c: 195: {
  1434                           ;do_am.c: 196: tuneUpTemp = 0;
  1435  013A  0020               	movlb	0	; select bank0
  1436  013B  01DF               	clrf	_tuneUpTemp
  1437  013C  01E0               	clrf	_tuneUpTemp+1
  1438  013D                     l2277:	
  1439                           
  1440                           ;do_am.c: 197: }
  1441                           ;do_am.c: 199: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1442  013D  0020               	movlb	0	; select bank0
  1443  013E  01BB               	clrf	LCDGotoXY@y
  1444  013F  0ABB               	incf	LCDGotoXY@y,f
  1445  0140  3004               	movlw	4
  1446  0141  2755               	fcall	_LCDGotoXY
  1447  0142  0020               	movlb	0	; select bank0
  1448  0143  0860               	movf	_tuneUpTemp+1,w
  1449  0144  00BC               	movwf	LCDWriteInt@val+1
  1450  0145  085F               	movf	_tuneUpTemp,w
  1451  0146  00BB               	movwf	LCDWriteInt@val
  1452  0147  3003               	movlw	3
  1453  0148  0021               	movlb	1	; select bank1
  1454  0149  00A6               	movwf	??_main^(0+128)
  1455  014A  0826               	movf	??_main^(0+128),w
  1456  014B  0020               	movlb	0	; select bank0
  1457  014C  00BD               	movwf	LCDWriteInt@field_length
  1458  014D  22AB               	fcall	_LCDWriteInt
  1459                           
  1460                           ;do_am.c: 201: _delay((unsigned long)((5)*(20000000/4000.0)));
  1461  014E  3021               	movlw	33
  1462  014F  0021               	movlb	1	; select bank1
  1463  0150  00A7               	movwf	(??_main^(0+128)+1)
  1464  0151  3076               	movlw	118
  1465  0152  00A6               	movwf	??_main^(0+128)
  1466  0153                     u2587:	
  1467  0153  0BA6               	decfsz	??_main^(0+128),f
  1468  0154  2953               	goto	u2587
  1469  0155  0BA7               	decfsz	(??_main^(0+128)+1),f
  1470  0156  2953               	goto	u2587
  1471  0157  0000               	nop
  1472  0158  2926               	goto	l2283
  1473  0159                     __end_of_main:	
  1474                           ;do_am.c: 209: }
  1475                           ;do_am.c: 217: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1476                           
  1477                           
  1478                           	psect	text1
  1479  07EF                     __ptext1:	
  1480 ;; *************** function _TuneButtonInit *****************
  1481 ;; Defined at:
  1482 ;;		line 79 in file "do_am.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		None
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1
  1496 ;;      Params:         0       0       0
  1497 ;;      Locals:         0       0       0
  1498 ;;      Temps:          0       0       0
  1499 ;;      Totals:         0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    4
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _TuneButtonInit
  1512  07EF                     _TuneButtonInit:	
  1513                           
  1514                           ;do_am.c: 82: INTCONbits.IOCIE = 1;
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _TuneButtonInit: []
  1518  07EF  158B               	bsf	11,3	;volatile
  1519                           
  1520                           ;do_am.c: 84: (TRISAbits.TRISA1 = 1);
  1521  07F0  0021               	movlb	1	; select bank1
  1522  07F1  148C               	bsf	12,1	;volatile
  1523                           
  1524                           ;do_am.c: 85: ANSELAbits.ANSA1 = 0;
  1525  07F2  0023               	movlb	3	; select bank3
  1526  07F3  108C               	bcf	12,1	;volatile
  1527  07F4  0008               	return
  1528  07F5                     __end_of_TuneButtonInit:	
  1529                           
  1530                           	psect	text2
  1531  07F5                     __ptext2:	
  1532 ;; *************** function _TriggerOutInit *****************
  1533 ;; Defined at:
  1534 ;;		line 64 in file "do_am.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		None
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1
  1548 ;;      Params:         0       0       0
  1549 ;;      Locals:         0       0       0
  1550 ;;      Temps:          0       0       0
  1551 ;;      Totals:         0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    4
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _TriggerOutInit
  1564  07F5                     _TriggerOutInit:	
  1565                           
  1566                           ;do_am.c: 67: (TRISAbits.TRISA4 = 0);
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _TriggerOutInit: []
  1570  07F5  0021               	movlb	1	; select bank1
  1571  07F6  120C               	bcf	12,4	;volatile
  1572                           
  1573                           ;do_am.c: 68: (TRISAbits.TRISA5 = 0);
  1574  07F7  128C               	bcf	12,5	;volatile
  1575                           
  1576                           ;do_am.c: 70: ANSELAbits.ANSA4 = 0;
  1577  07F8  0023               	movlb	3	; select bank3
  1578  07F9  120C               	bcf	12,4	;volatile
  1579  07FA  0008               	return
  1580  07FB                     __end_of_TriggerOutInit:	
  1581                           
  1582                           	psect	text3
  1583  0706                     __ptext3:	
  1584 ;; *************** function _LM35ReadTemp *****************
  1585 ;; Defined at:
  1586 ;;		line 8 in file "lm35_pic16.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  adc_value       2   53[BANK0 ] unsigned int 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  2   51[BANK0 ] int 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1
  1600 ;;      Params:         0       2       0
  1601 ;;      Locals:         0       2       0
  1602 ;;      Temps:          0       0       0
  1603 ;;      Totals:         0       4       0
  1604 ;;Total ram usage:        4 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    6
  1607 ;; This function calls:
  1608 ;;		_ReadADC
  1609 ;;		___ftmul
  1610 ;;		___fttol
  1611 ;;		___lwtoft
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _LM35ReadTemp
  1619  0706                     _LM35ReadTemp:	
  1620                           
  1621                           ;lm35_pic16.c: 14: uint16_t adc_value=ReadADC(2);
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _LM35ReadTemp: [wreg+status,2+status,0+pclath+cstack]
  1625  0706  3002               	movlw	2
  1626  0707  272E               	fcall	_ReadADC
  1627  0708  0020               	movlb	0	; select bank0
  1628  0709  0830               	movf	?_ReadADC+1,w
  1629  070A  00D6               	movwf	LM35ReadTemp@adc_value+1
  1630  070B  082F               	movf	?_ReadADC,w
  1631  070C  00D5               	movwf	LM35ReadTemp@adc_value
  1632                           
  1633                           ;lm35_pic16.c: 28: return (int)(adc_value*0.4887);
  1634  070D  0856               	movf	LM35ReadTemp@adc_value+1,w
  1635  070E  00B8               	movwf	___lwtoft@c+1
  1636  070F  0855               	movf	LM35ReadTemp@adc_value,w
  1637  0710  00B7               	movwf	___lwtoft@c
  1638  0711  27B5               	fcall	___lwtoft
  1639  0712  0020               	movlb	0	; select bank0
  1640  0713  0837               	movf	?___lwtoft,w
  1641  0714  00BE               	movwf	___ftmul@f2
  1642  0715  0838               	movf	?___lwtoft+1,w
  1643  0716  00BF               	movwf	___ftmul@f2+1
  1644  0717  0839               	movf	?___lwtoft+2,w
  1645  0718  00C0               	movwf	___ftmul@f2+2
  1646  0719  3037               	movlw	55
  1647  071A  00BB               	movwf	___ftmul@f1
  1648  071B  30FA               	movlw	250
  1649  071C  00BC               	movwf	___ftmul@f1+1
  1650  071D  303E               	movlw	62
  1651  071E  00BD               	movwf	___ftmul@f1+2
  1652  071F  2159               	fcall	___ftmul
  1653  0720  0020               	movlb	0	; select bank0
  1654  0721  083B               	movf	?___ftmul,w
  1655  0722  00CB               	movwf	___fttol@f1
  1656  0723  083C               	movf	?___ftmul+1,w
  1657  0724  00CC               	movwf	___fttol@f1+1
  1658  0725  083D               	movf	?___ftmul+2,w
  1659  0726  00CD               	movwf	___fttol@f1+2
  1660  0727  220C               	fcall	___fttol
  1661  0728  0020               	movlb	0	; select bank0
  1662  0729  084C               	movf	?___fttol+1,w
  1663  072A  00D4               	movwf	?_LM35ReadTemp+1
  1664  072B  084B               	movf	?___fttol,w
  1665  072C  00D3               	movwf	?_LM35ReadTemp
  1666  072D  0008               	return
  1667  072E                     __end_of_LM35ReadTemp:	
  1668                           
  1669                           	psect	text4
  1670  07B5                     __ptext4:	
  1671 ;; *************** function ___lwtoft *****************
  1672 ;; Defined at:
  1673 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  c               2   23[BANK0 ] unsigned int 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  3   23[BANK0 ] float 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, pclath, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1
  1687 ;;      Params:         0       3       0
  1688 ;;      Locals:         0       0       0
  1689 ;;      Temps:          0       1       0
  1690 ;;      Totals:         0       4       0
  1691 ;;Total ram usage:        4 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    5
  1694 ;; This function calls:
  1695 ;;		___ftpack
  1696 ;; This function is called by:
  1697 ;;		_LM35ReadTemp
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function ___lwtoft
  1703  07B5                     ___lwtoft:	
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1707  07B5  0020               	movlb	0	; select bank0
  1708  07B6  0837               	movf	___lwtoft@c,w
  1709  07B7  00AF               	movwf	___ftpack@arg
  1710  07B8  0838               	movf	___lwtoft@c+1,w
  1711  07B9  00B0               	movwf	___ftpack@arg+1
  1712  07BA  01B1               	clrf	___ftpack@arg+2
  1713  07BB  308E               	movlw	142
  1714  07BC  00BA               	movwf	??___lwtoft
  1715  07BD  083A               	movf	??___lwtoft,w
  1716  07BE  00B2               	movwf	___ftpack@exp
  1717  07BF  01B3               	clrf	___ftpack@sign
  1718  07C0  23AB               	fcall	___ftpack
  1719  07C1  0020               	movlb	0	; select bank0
  1720  07C2  082F               	movf	?___ftpack,w
  1721  07C3  00B7               	movwf	?___lwtoft
  1722  07C4  0830               	movf	?___ftpack+1,w
  1723  07C5  00B8               	movwf	?___lwtoft+1
  1724  07C6  0831               	movf	?___ftpack+2,w
  1725  07C7  00B9               	movwf	?___lwtoft+2
  1726  07C8  0008               	return
  1727  07C9                     __end_of___lwtoft:	
  1728                           
  1729                           	psect	text5
  1730  020C                     __ptext5:	
  1731 ;; *************** function ___fttol *****************
  1732 ;; Defined at:
  1733 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  f1              3   43[BANK0 ] float 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  lval            4    1[BANK1 ] unsigned long 
  1738 ;;  exp1            1    5[BANK1 ] unsigned char 
  1739 ;;  sign1           1    0[BANK1 ] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  4   43[BANK0 ] long 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1
  1749 ;;      Params:         0       4       0
  1750 ;;      Locals:         0       0       6
  1751 ;;      Temps:          0       4       0
  1752 ;;      Totals:         0       8       6
  1753 ;;Total ram usage:       14 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    4
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_LM35ReadTemp
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           
  1764                           ;psect for function ___fttol
  1765  020C                     ___fttol:	
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1769  020C  0020               	movlb	0	; select bank0
  1770  020D  084B               	movf	___fttol@f1,w
  1771  020E  00CF               	movwf	??___fttol
  1772  020F  084C               	movf	___fttol@f1+1,w
  1773  0210  00D0               	movwf	??___fttol+1
  1774  0211  084D               	movf	___fttol@f1+2,w
  1775  0212  00D1               	movwf	??___fttol+2
  1776  0213  1003               	clrc
  1777  0214  0D50               	rlf	??___fttol+1,w
  1778  0215  0D51               	rlf	??___fttol+2,w
  1779  0216  00D2               	movwf	??___fttol+3
  1780  0217  0852               	movf	??___fttol+3,w
  1781  0218  0021               	movlb	1	; select bank1
  1782  0219  00A5               	movwf	___fttol@exp1^(0+128)
  1783  021A  0825               	movf	___fttol@exp1^(0+128),w
  1784  021B  1D03               	btfss	3,2
  1785  021C  2A27               	goto	l2167
  1786  021D  3000               	movlw	0
  1787  021E  0020               	movlb	0	; select bank0
  1788  021F  00CE               	movwf	?___fttol+3
  1789  0220  3000               	movlw	0
  1790  0221  00CD               	movwf	?___fttol+2
  1791  0222  3000               	movlw	0
  1792  0223  00CC               	movwf	?___fttol+1
  1793  0224  3000               	movlw	0
  1794  0225  00CB               	movwf	?___fttol
  1795  0226  0008               	return
  1796  0227                     l2167:	
  1797  0227  0020               	movlb	0	; select bank0
  1798  0228  084B               	movf	___fttol@f1,w
  1799  0229  00CF               	movwf	??___fttol
  1800  022A  084C               	movf	___fttol@f1+1,w
  1801  022B  00D0               	movwf	??___fttol+1
  1802  022C  084D               	movf	___fttol@f1+2,w
  1803  022D  00D1               	movwf	??___fttol+2
  1804  022E  3017               	movlw	23
  1805  022F                     u2445:	
  1806  022F  36D1               	lsrf	??___fttol+2,f
  1807  0230  0CD0               	rrf	??___fttol+1,f
  1808  0231  0CCF               	rrf	??___fttol,f
  1809  0232  0B89               	decfsz	9,f
  1810  0233  2A2F               	goto	u2445
  1811  0234  084F               	movf	??___fttol,w
  1812  0235  00D2               	movwf	??___fttol+3
  1813  0236  0852               	movf	??___fttol+3,w
  1814  0237  0021               	movlb	1	; select bank1
  1815  0238  00A0               	movwf	___fttol@sign1^(0+128)
  1816  0239  0020               	movlb	0	; select bank0
  1817  023A  17CC               	bsf	___fttol@f1+1,7
  1818  023B  30FF               	movlw	255
  1819  023C  05CB               	andwf	___fttol@f1,f
  1820  023D  30FF               	movlw	255
  1821  023E  05CC               	andwf	___fttol@f1+1,f
  1822  023F  3000               	movlw	0
  1823  0240  05CD               	andwf	___fttol@f1+2,f
  1824  0241  084B               	movf	___fttol@f1,w
  1825  0242  0021               	movlb	1	; select bank1
  1826  0243  00A1               	movwf	___fttol@lval^(0+128)
  1827  0244  0020               	movlb	0	; select bank0
  1828  0245  084C               	movf	___fttol@f1+1,w
  1829  0246  0021               	movlb	1	; select bank1
  1830  0247  00A2               	movwf	(___fttol@lval^(0+128)+1)
  1831  0248  0020               	movlb	0	; select bank0
  1832  0249  084D               	movf	___fttol@f1+2,w
  1833  024A  0021               	movlb	1	; select bank1
  1834  024B  00A3               	movwf	(___fttol@lval^(0+128)+2)
  1835  024C  01A4               	clrf	(___fttol@lval^(0+128)+3)
  1836  024D  308E               	movlw	142
  1837  024E  02A5               	subwf	___fttol@exp1^(0+128),f
  1838  024F  1FA5               	btfss	___fttol@exp1^(0+128),7
  1839  0250  2A71               	goto	l2187
  1840  0251  0825               	movf	___fttol@exp1^(0+128),w
  1841  0252  3A80               	xorlw	128
  1842  0253  3E8F               	addlw	143
  1843  0254  1803               	skipnc
  1844  0255  2A60               	goto	l2185
  1845  0256  3000               	movlw	0
  1846  0257  0020               	movlb	0	; select bank0
  1847  0258  00CE               	movwf	?___fttol+3
  1848  0259  3000               	movlw	0
  1849  025A  00CD               	movwf	?___fttol+2
  1850  025B  3000               	movlw	0
  1851  025C  00CC               	movwf	?___fttol+1
  1852  025D  3000               	movlw	0
  1853  025E  00CB               	movwf	?___fttol
  1854  025F  0008               	return
  1855  0260                     l2185:	
  1856  0260  3001               	movlw	1
  1857  0261                     u2475:	
  1858  0261  0021               	movlb	1	; select bank1
  1859  0262  36A4               	lsrf	(___fttol@lval+3)^(0+128),f
  1860  0263  0CA3               	rrf	(___fttol@lval+2)^(0+128),f
  1861  0264  0CA2               	rrf	(___fttol@lval+1)^(0+128),f
  1862  0265  0CA1               	rrf	___fttol@lval^(0+128),f
  1863  0266  0B89               	decfsz	9,f
  1864  0267  2A61               	goto	u2475
  1865  0268  3001               	movlw	1
  1866  0269  0020               	movlb	0	; select bank0
  1867  026A  00CF               	movwf	??___fttol
  1868  026B  084F               	movf	??___fttol,w
  1869  026C  0021               	movlb	1	; select bank1
  1870  026D  07A5               	addwf	___fttol@exp1^(0+128),f
  1871  026E  1903               	btfsc	3,2
  1872  026F  2A8D               	goto	l2195
  1873  0270  2A60               	goto	l2185
  1874  0271                     l2187:	
  1875  0271  3018               	movlw	24
  1876  0272  0225               	subwf	___fttol@exp1^(0+128),w
  1877  0273  1C03               	skipc
  1878  0274  2A89               	goto	l501
  1879  0275  3000               	movlw	0
  1880  0276  0020               	movlb	0	; select bank0
  1881  0277  00CE               	movwf	?___fttol+3
  1882  0278  3000               	movlw	0
  1883  0279  00CD               	movwf	?___fttol+2
  1884  027A  3000               	movlw	0
  1885  027B  00CC               	movwf	?___fttol+1
  1886  027C  3000               	movlw	0
  1887  027D  00CB               	movwf	?___fttol
  1888  027E  0008               	return
  1889  027F                     l2193:	
  1890  027F  3001               	movlw	1
  1891  0280                     u2505:	
  1892  0280  0021               	movlb	1	; select bank1
  1893  0281  35A1               	lslf	___fttol@lval^(0+128),f
  1894  0282  0DA2               	rlf	(___fttol@lval+1)^(0+128),f
  1895  0283  0DA3               	rlf	(___fttol@lval+2)^(0+128),f
  1896  0284  0DA4               	rlf	(___fttol@lval+3)^(0+128),f
  1897  0285  0B89               	decfsz	9,f
  1898  0286  2A80               	goto	u2505
  1899  0287  3001               	movlw	1
  1900  0288  02A5               	subwf	___fttol@exp1^(0+128),f
  1901  0289                     l501:	
  1902  0289  0021               	movlb	1	; select bank1
  1903  028A  0825               	movf	___fttol@exp1^(0+128),w
  1904  028B  1D03               	btfss	3,2
  1905  028C  2A7F               	goto	l2193
  1906  028D                     l2195:	
  1907  028D  0820               	movf	___fttol@sign1^(0+128),w
  1908  028E  1903               	btfsc	3,2
  1909  028F  2A9B               	goto	l2199
  1910  0290  09A1               	comf	___fttol@lval^(0+128),f
  1911  0291  09A2               	comf	(___fttol@lval+1)^(0+128),f
  1912  0292  09A3               	comf	(___fttol@lval+2)^(0+128),f
  1913  0293  09A4               	comf	(___fttol@lval+3)^(0+128),f
  1914  0294  0AA1               	incf	___fttol@lval^(0+128),f
  1915  0295  1903               	skipnz
  1916  0296  0AA2               	incf	(___fttol@lval+1)^(0+128),f
  1917  0297  1903               	skipnz
  1918  0298  0AA3               	incf	(___fttol@lval+2)^(0+128),f
  1919  0299  1903               	skipnz
  1920  029A  0AA4               	incf	(___fttol@lval+3)^(0+128),f
  1921  029B                     l2199:	
  1922  029B  0824               	movf	(___fttol@lval+3)^(0+128),w
  1923  029C  0020               	movlb	0	; select bank0
  1924  029D  00CE               	movwf	?___fttol+3
  1925  029E  0021               	movlb	1	; select bank1
  1926  029F  0823               	movf	(___fttol@lval+2)^(0+128),w
  1927  02A0  0020               	movlb	0	; select bank0
  1928  02A1  00CD               	movwf	?___fttol+2
  1929  02A2  0021               	movlb	1	; select bank1
  1930  02A3  0822               	movf	(___fttol@lval+1)^(0+128),w
  1931  02A4  0020               	movlb	0	; select bank0
  1932  02A5  00CC               	movwf	?___fttol+1
  1933  02A6  0021               	movlb	1	; select bank1
  1934  02A7  0821               	movf	___fttol@lval^(0+128),w
  1935  02A8  0020               	movlb	0	; select bank0
  1936  02A9  00CB               	movwf	?___fttol
  1937  02AA  0008               	return
  1938  02AB                     __end_of___fttol:	
  1939                           
  1940                           	psect	text6
  1941  0159                     __ptext6:	
  1942 ;; *************** function ___ftmul *****************
  1943 ;; Defined at:
  1944 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  f1              3   27[BANK0 ] float 
  1947 ;;  f2              3   30[BANK0 ] float 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  f3_as_produc    3   38[BANK0 ] unsigned um
  1950 ;;  sign            1   42[BANK0 ] unsigned char 
  1951 ;;  cntr            1   41[BANK0 ] unsigned char 
  1952 ;;  exp             1   37[BANK0 ] unsigned char 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  3   27[BANK0 ] float 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1
  1962 ;;      Params:         0       6       0
  1963 ;;      Locals:         0       6       0
  1964 ;;      Temps:          0       4       0
  1965 ;;      Totals:         0      16       0
  1966 ;;Total ram usage:       16 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    5
  1969 ;; This function calls:
  1970 ;;		___ftpack
  1971 ;; This function is called by:
  1972 ;;		_LM35ReadTemp
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function ___ftmul
  1978  0159                     ___ftmul:	
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1982  0159  0020               	movlb	0	; select bank0
  1983  015A  083B               	movf	___ftmul@f1,w
  1984  015B  00C1               	movwf	??___ftmul
  1985  015C  083C               	movf	___ftmul@f1+1,w
  1986  015D  00C2               	movwf	??___ftmul+1
  1987  015E  083D               	movf	___ftmul@f1+2,w
  1988  015F  00C3               	movwf	??___ftmul+2
  1989  0160  1003               	clrc
  1990  0161  0D42               	rlf	??___ftmul+1,w
  1991  0162  0D43               	rlf	??___ftmul+2,w
  1992  0163  00C4               	movwf	??___ftmul+3
  1993  0164  0844               	movf	??___ftmul+3,w
  1994  0165  00C5               	movwf	___ftmul@exp
  1995  0166  0845               	movf	___ftmul@exp,w
  1996  0167  1D03               	btfss	3,2
  1997  0168  2970               	goto	l1653
  1998  0169  3000               	movlw	0
  1999  016A  00BB               	movwf	?___ftmul
  2000  016B  3000               	movlw	0
  2001  016C  00BC               	movwf	?___ftmul+1
  2002  016D  3000               	movlw	0
  2003  016E  00BD               	movwf	?___ftmul+2
  2004  016F  0008               	return
  2005  0170                     l1653:	
  2006  0170  083E               	movf	___ftmul@f2,w
  2007  0171  00C1               	movwf	??___ftmul
  2008  0172  083F               	movf	___ftmul@f2+1,w
  2009  0173  00C2               	movwf	??___ftmul+1
  2010  0174  0840               	movf	___ftmul@f2+2,w
  2011  0175  00C3               	movwf	??___ftmul+2
  2012  0176  1003               	clrc
  2013  0177  0D42               	rlf	??___ftmul+1,w
  2014  0178  0D43               	rlf	??___ftmul+2,w
  2015  0179  00C4               	movwf	??___ftmul+3
  2016  017A  0844               	movf	??___ftmul+3,w
  2017  017B  00CA               	movwf	___ftmul@sign
  2018  017C  084A               	movf	___ftmul@sign,w
  2019  017D  1D03               	btfss	3,2
  2020  017E  2986               	goto	l1659
  2021  017F  3000               	movlw	0
  2022  0180  00BB               	movwf	?___ftmul
  2023  0181  3000               	movlw	0
  2024  0182  00BC               	movwf	?___ftmul+1
  2025  0183  3000               	movlw	0
  2026  0184  00BD               	movwf	?___ftmul+2
  2027  0185  0008               	return
  2028  0186                     l1659:	
  2029  0186  084A               	movf	___ftmul@sign,w
  2030  0187  3E7B               	addlw	123
  2031  0188  00C1               	movwf	??___ftmul
  2032  0189  0841               	movf	??___ftmul,w
  2033  018A  07C5               	addwf	___ftmul@exp,f
  2034  018B  083B               	movf	___ftmul@f1,w
  2035  018C  00C1               	movwf	??___ftmul
  2036  018D  083C               	movf	___ftmul@f1+1,w
  2037  018E  00C2               	movwf	??___ftmul+1
  2038  018F  083D               	movf	___ftmul@f1+2,w
  2039  0190  00C3               	movwf	??___ftmul+2
  2040  0191  3010               	movlw	16
  2041  0192                     u1695:	
  2042  0192  36C3               	lsrf	??___ftmul+2,f
  2043  0193  0CC2               	rrf	??___ftmul+1,f
  2044  0194  0CC1               	rrf	??___ftmul,f
  2045  0195  0B89               	decfsz	9,f
  2046  0196  2992               	goto	u1695
  2047  0197  0841               	movf	??___ftmul,w
  2048  0198  00C4               	movwf	??___ftmul+3
  2049  0199  0844               	movf	??___ftmul+3,w
  2050  019A  00CA               	movwf	___ftmul@sign
  2051  019B  083E               	movf	___ftmul@f2,w
  2052  019C  00C1               	movwf	??___ftmul
  2053  019D  083F               	movf	___ftmul@f2+1,w
  2054  019E  00C2               	movwf	??___ftmul+1
  2055  019F  0840               	movf	___ftmul@f2+2,w
  2056  01A0  00C3               	movwf	??___ftmul+2
  2057  01A1  3010               	movlw	16
  2058  01A2                     u1705:	
  2059  01A2  36C3               	lsrf	??___ftmul+2,f
  2060  01A3  0CC2               	rrf	??___ftmul+1,f
  2061  01A4  0CC1               	rrf	??___ftmul,f
  2062  01A5  0B89               	decfsz	9,f
  2063  01A6  29A2               	goto	u1705
  2064  01A7  0841               	movf	??___ftmul,w
  2065  01A8  00C4               	movwf	??___ftmul+3
  2066  01A9  0844               	movf	??___ftmul+3,w
  2067  01AA  06CA               	xorwf	___ftmul@sign,f
  2068  01AB  3080               	movlw	128
  2069  01AC  00C1               	movwf	??___ftmul
  2070  01AD  0841               	movf	??___ftmul,w
  2071  01AE  05CA               	andwf	___ftmul@sign,f
  2072  01AF  17BC               	bsf	___ftmul@f1+1,7
  2073  01B0  17BF               	bsf	___ftmul@f2+1,7
  2074  01B1  30FF               	movlw	255
  2075  01B2  05BE               	andwf	___ftmul@f2,f
  2076  01B3  30FF               	movlw	255
  2077  01B4  05BF               	andwf	___ftmul@f2+1,f
  2078  01B5  3000               	movlw	0
  2079  01B6  05C0               	andwf	___ftmul@f2+2,f
  2080  01B7  3000               	movlw	0
  2081  01B8  00C6               	movwf	___ftmul@f3_as_product
  2082  01B9  3000               	movlw	0
  2083  01BA  00C7               	movwf	___ftmul@f3_as_product+1
  2084  01BB  3000               	movlw	0
  2085  01BC  00C8               	movwf	___ftmul@f3_as_product+2
  2086  01BD  3007               	movlw	7
  2087  01BE  00C1               	movwf	??___ftmul
  2088  01BF  0841               	movf	??___ftmul,w
  2089  01C0  00C9               	movwf	___ftmul@cntr
  2090  01C1                     l1671:	
  2091  01C1  1C3B               	btfss	___ftmul@f1,0
  2092  01C2  29C9               	goto	l1675
  2093  01C3  083E               	movf	___ftmul@f2,w
  2094  01C4  07C6               	addwf	___ftmul@f3_as_product,f
  2095  01C5  083F               	movf	___ftmul@f2+1,w
  2096  01C6  3DC7               	addwfc	___ftmul@f3_as_product+1,f
  2097  01C7  0840               	movf	___ftmul@f2+2,w
  2098  01C8  3DC8               	addwfc	___ftmul@f3_as_product+2,f
  2099  01C9                     l1675:	
  2100  01C9  3001               	movlw	1
  2101  01CA                     u1725:	
  2102  01CA  36BD               	lsrf	___ftmul@f1+2,f
  2103  01CB  0CBC               	rrf	___ftmul@f1+1,f
  2104  01CC  0CBB               	rrf	___ftmul@f1,f
  2105  01CD  0B89               	decfsz	9,f
  2106  01CE  29CA               	goto	u1725
  2107  01CF  3001               	movlw	1
  2108  01D0                     u1735:	
  2109  01D0  35BE               	lslf	___ftmul@f2,f
  2110  01D1  0DBF               	rlf	___ftmul@f2+1,f
  2111  01D2  0DC0               	rlf	___ftmul@f2+2,f
  2112  01D3  0B89               	decfsz	9,f
  2113  01D4  29D0               	goto	u1735
  2114  01D5  3001               	movlw	1
  2115  01D6  02C9               	subwf	___ftmul@cntr,f
  2116  01D7  1D03               	btfss	3,2
  2117  01D8  29C1               	goto	l1671
  2118  01D9  3009               	movlw	9
  2119  01DA  00C1               	movwf	??___ftmul
  2120  01DB  0841               	movf	??___ftmul,w
  2121  01DC  00C9               	movwf	___ftmul@cntr
  2122  01DD                     l1683:	
  2123  01DD  1C3B               	btfss	___ftmul@f1,0
  2124  01DE  29E5               	goto	l1687
  2125  01DF  083E               	movf	___ftmul@f2,w
  2126  01E0  07C6               	addwf	___ftmul@f3_as_product,f
  2127  01E1  083F               	movf	___ftmul@f2+1,w
  2128  01E2  3DC7               	addwfc	___ftmul@f3_as_product+1,f
  2129  01E3  0840               	movf	___ftmul@f2+2,w
  2130  01E4  3DC8               	addwfc	___ftmul@f3_as_product+2,f
  2131  01E5                     l1687:	
  2132  01E5  3001               	movlw	1
  2133  01E6                     u1765:	
  2134  01E6  36BD               	lsrf	___ftmul@f1+2,f
  2135  01E7  0CBC               	rrf	___ftmul@f1+1,f
  2136  01E8  0CBB               	rrf	___ftmul@f1,f
  2137  01E9  0B89               	decfsz	9,f
  2138  01EA  29E6               	goto	u1765
  2139  01EB  3001               	movlw	1
  2140  01EC                     u1775:	
  2141  01EC  36C8               	lsrf	___ftmul@f3_as_product+2,f
  2142  01ED  0CC7               	rrf	___ftmul@f3_as_product+1,f
  2143  01EE  0CC6               	rrf	___ftmul@f3_as_product,f
  2144  01EF  0B89               	decfsz	9,f
  2145  01F0  29EC               	goto	u1775
  2146  01F1  3001               	movlw	1
  2147  01F2  02C9               	subwf	___ftmul@cntr,f
  2148  01F3  1D03               	btfss	3,2
  2149  01F4  29DD               	goto	l1683
  2150  01F5  0846               	movf	___ftmul@f3_as_product,w
  2151  01F6  00AF               	movwf	___ftpack@arg
  2152  01F7  0847               	movf	___ftmul@f3_as_product+1,w
  2153  01F8  00B0               	movwf	___ftpack@arg+1
  2154  01F9  0848               	movf	___ftmul@f3_as_product+2,w
  2155  01FA  00B1               	movwf	___ftpack@arg+2
  2156  01FB  0845               	movf	___ftmul@exp,w
  2157  01FC  00C1               	movwf	??___ftmul
  2158  01FD  0841               	movf	??___ftmul,w
  2159  01FE  00B2               	movwf	___ftpack@exp
  2160  01FF  084A               	movf	___ftmul@sign,w
  2161  0200  00C2               	movwf	??___ftmul+1
  2162  0201  0842               	movf	??___ftmul+1,w
  2163  0202  00B3               	movwf	___ftpack@sign
  2164  0203  23AB               	fcall	___ftpack
  2165  0204  0020               	movlb	0	; select bank0
  2166  0205  082F               	movf	?___ftpack,w
  2167  0206  00BB               	movwf	?___ftmul
  2168  0207  0830               	movf	?___ftpack+1,w
  2169  0208  00BC               	movwf	?___ftmul+1
  2170  0209  0831               	movf	?___ftpack+2,w
  2171  020A  00BD               	movwf	?___ftmul+2
  2172  020B  0008               	return
  2173  020C                     __end_of___ftmul:	
  2174                           
  2175                           	psect	text7
  2176  03AB                     __ptext7:	
  2177 ;; *************** function ___ftpack *****************
  2178 ;; Defined at:
  2179 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  arg             3   15[BANK0 ] unsigned um
  2182 ;;  exp             1   18[BANK0 ] unsigned char 
  2183 ;;  sign            1   19[BANK0 ] unsigned char 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  3   15[BANK0 ] float 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1
  2195 ;;      Params:         0       5       0
  2196 ;;      Locals:         0       0       0
  2197 ;;      Temps:          0       3       0
  2198 ;;      Totals:         0       8       0
  2199 ;;Total ram usage:        8 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    4
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		___ftmul
  2206 ;;		___lwtoft
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           
  2211                           ;psect for function ___ftpack
  2212  03AB                     ___ftpack:	
  2213                           
  2214                           ;incstack = 0
  2215                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2216  03AB  0020               	movlb	0	; select bank0
  2217  03AC  0832               	movf	___ftpack@exp,w
  2218  03AD  1903               	btfsc	3,2
  2219  03AE  2BB4               	goto	l1445
  2220  03AF  0831               	movf	___ftpack@arg+2,w
  2221  03B0  0430               	iorwf	___ftpack@arg+1,w
  2222  03B1  042F               	iorwf	___ftpack@arg,w
  2223  03B2  1D03               	skipz
  2224  03B3  2BC5               	goto	l1451
  2225  03B4                     l1445:	
  2226  03B4  3000               	movlw	0
  2227  03B5  00AF               	movwf	?___ftpack
  2228  03B6  3000               	movlw	0
  2229  03B7  00B0               	movwf	?___ftpack+1
  2230  03B8  3000               	movlw	0
  2231  03B9  00B1               	movwf	?___ftpack+2
  2232  03BA  0008               	return
  2233  03BB                     l1449:	
  2234  03BB  3001               	movlw	1
  2235  03BC  00B4               	movwf	??___ftpack
  2236  03BD  0834               	movf	??___ftpack,w
  2237  03BE  07B2               	addwf	___ftpack@exp,f
  2238  03BF  3001               	movlw	1
  2239  03C0                     u1285:	
  2240  03C0  36B1               	lsrf	___ftpack@arg+2,f
  2241  03C1  0CB0               	rrf	___ftpack@arg+1,f
  2242  03C2  0CAF               	rrf	___ftpack@arg,f
  2243  03C3  0B89               	decfsz	9,f
  2244  03C4  2BC0               	goto	u1285
  2245  03C5                     l1451:	
  2246  03C5  30FE               	movlw	254
  2247  03C6  0531               	andwf	___ftpack@arg+2,w
  2248  03C7  1903               	btfsc	3,2
  2249  03C8  2BDE               	goto	l410
  2250  03C9  2BBB               	goto	l1449
  2251  03CA                     l1453:	
  2252  03CA  3001               	movlw	1
  2253  03CB  00B4               	movwf	??___ftpack
  2254  03CC  0834               	movf	??___ftpack,w
  2255  03CD  07B2               	addwf	___ftpack@exp,f
  2256  03CE  3001               	movlw	1
  2257  03CF  07AF               	addwf	___ftpack@arg,f
  2258  03D0  3000               	movlw	0
  2259  03D1  1803               	skipnc
  2260  03D2  3001               	movlw	1
  2261  03D3  07B0               	addwf	___ftpack@arg+1,f
  2262  03D4  3000               	movlw	0
  2263  03D5  1803               	skipnc
  2264  03D6  3001               	movlw	1
  2265  03D7  07B1               	addwf	___ftpack@arg+2,f
  2266  03D8  3001               	movlw	1
  2267  03D9                     u1305:	
  2268  03D9  36B1               	lsrf	___ftpack@arg+2,f
  2269  03DA  0CB0               	rrf	___ftpack@arg+1,f
  2270  03DB  0CAF               	rrf	___ftpack@arg,f
  2271  03DC  0B89               	decfsz	9,f
  2272  03DD  2BD9               	goto	u1305
  2273  03DE                     l410:	
  2274  03DE  30FF               	movlw	255
  2275  03DF  0531               	andwf	___ftpack@arg+2,w
  2276  03E0  1903               	btfsc	3,2
  2277  03E1  2BEB               	goto	l1461
  2278  03E2  2BCA               	goto	l1453
  2279  03E3                     l1459:	
  2280  03E3  3001               	movlw	1
  2281  03E4  02B2               	subwf	___ftpack@exp,f
  2282  03E5  3001               	movlw	1
  2283  03E6                     u1325:	
  2284  03E6  35AF               	lslf	___ftpack@arg,f
  2285  03E7  0DB0               	rlf	___ftpack@arg+1,f
  2286  03E8  0DB1               	rlf	___ftpack@arg+2,f
  2287  03E9  0B89               	decfsz	9,f
  2288  03EA  2BE6               	goto	u1325
  2289  03EB                     l1461:	
  2290  03EB  1BB0               	btfsc	___ftpack@arg+1,7
  2291  03EC  2BF1               	goto	l417
  2292  03ED  3002               	movlw	2
  2293  03EE  0232               	subwf	___ftpack@exp,w
  2294  03EF  1803               	skipnc
  2295  03F0  2BE3               	goto	l1459
  2296  03F1                     l417:	
  2297  03F1  1832               	btfsc	___ftpack@exp,0
  2298  03F2  2BF9               	goto	l418
  2299  03F3  30FF               	movlw	255
  2300  03F4  05AF               	andwf	___ftpack@arg,f
  2301  03F5  307F               	movlw	127
  2302  03F6  05B0               	andwf	___ftpack@arg+1,f
  2303  03F7  30FF               	movlw	255
  2304  03F8  05B1               	andwf	___ftpack@arg+2,f
  2305  03F9                     l418:	
  2306  03F9  1003               	clrc
  2307  03FA  0CB2               	rrf	___ftpack@exp,f
  2308  03FB  0832               	movf	___ftpack@exp,w
  2309  03FC  00B4               	movwf	??___ftpack
  2310  03FD  01B5               	clrf	??___ftpack+1
  2311  03FE  01B6               	clrf	??___ftpack+2
  2312  03FF  3010               	movlw	16
  2313  0400                     u1365:	
  2314  0400  35B4               	lslf	??___ftpack,f
  2315  0401  0DB5               	rlf	??___ftpack+1,f
  2316  0402  0DB6               	rlf	??___ftpack+2,f
  2317  0403  0B89               	decfsz	9,f
  2318  0404  2C00               	goto	u1365
  2319  0405  0834               	movf	??___ftpack,w
  2320  0406  04AF               	iorwf	___ftpack@arg,f
  2321  0407  0835               	movf	??___ftpack+1,w
  2322  0408  04B0               	iorwf	___ftpack@arg+1,f
  2323  0409  0836               	movf	??___ftpack+2,w
  2324  040A  04B1               	iorwf	___ftpack@arg+2,f
  2325  040B  0833               	movf	___ftpack@sign,w
  2326  040C  1903               	btfsc	3,2
  2327  040D  0008               	return
  2328  040E  17B1               	bsf	___ftpack@arg+2,7
  2329  040F  0008               	return
  2330  0410                     __end_of___ftpack:	
  2331                           
  2332                           	psect	text8
  2333  072E                     __ptext8:	
  2334 ;; *************** function _ReadADC *****************
  2335 ;; Defined at:
  2336 ;;		line 40 in file "adc_pic16.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  ch              1    wreg     unsigned char 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  ch              1   18[BANK0 ] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  2   15[BANK0 ] unsigned int 
  2343 ;; Registers used:
  2344 ;;		wreg, status,2, status,0
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1
  2350 ;;      Params:         0       2       0
  2351 ;;      Locals:         0       1       0
  2352 ;;      Temps:          0       1       0
  2353 ;;      Totals:         0       4       0
  2354 ;;Total ram usage:        4 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    4
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_LM35ReadTemp
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _ReadADC
  2366  072E                     _ReadADC:	
  2367                           
  2368                           ;incstack = 0
  2369                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  2370                           ;ReadADC@ch stored from wreg
  2371  072E  0020               	movlb	0	; select bank0
  2372  072F  00B2               	movwf	ReadADC@ch
  2373                           
  2374                           ;adc_pic16.c: 42: if(ch>7) return 0;
  2375  0730  3008               	movlw	8
  2376  0731  0232               	subwf	ReadADC@ch,w
  2377  0732  1C03               	skipc
  2378  0733  2F37               	goto	l1555
  2379  0734  01AF               	clrf	?_ReadADC
  2380  0735  01B0               	clrf	?_ReadADC+1
  2381  0736  0008               	return
  2382  0737                     l1555:	
  2383                           
  2384                           ;adc_pic16.c: 44: ADCON0bits.CHS=ch;
  2385  0737  0832               	movf	ReadADC@ch,w
  2386  0738  00B1               	movwf	??_ReadADC
  2387  0739  0DB1               	rlf	??_ReadADC,f
  2388  073A  0DB1               	rlf	??_ReadADC,f
  2389  073B  0021               	movlb	1	; select bank1
  2390  073C  081D               	movf	29,w	;volatile
  2391  073D  0020               	movlb	0	; select bank0
  2392  073E  0631               	xorwf	??_ReadADC,w
  2393  073F  3983               	andlw	-125
  2394  0740  0631               	xorwf	??_ReadADC,w
  2395  0741  0021               	movlb	1	; select bank1
  2396  0742  009D               	movwf	29	;volatile
  2397                           
  2398                           ;adc_pic16.c: 47: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2399  0743  30A6               	movlw	166
  2400  0744  0020               	movlb	0	; select bank0
  2401  0745  00B1               	movwf	??_ReadADC
  2402  0746                     u2597:	
  2403  0746  0BB1               	decfsz	??_ReadADC,f
  2404  0747  2F46               	goto	u2597
  2405  0748  0000               	nop
  2406                           
  2407                           ;adc_pic16.c: 50: ADCON0bits.GO=1;
  2408  0749  0021               	movlb	1	; select bank1
  2409  074A  149D               	bsf	29,1	;volatile
  2410  074B                     l158:	
  2411                           ;adc_pic16.c: 53: while(ADCON0bits.GO);
  2412                           
  2413  074B  189D               	btfsc	29,1	;volatile
  2414  074C  2F4B               	goto	l158
  2415                           
  2416                           ;adc_pic16.c: 55: return ((ADRESH<<8)|ADRESL);
  2417  074D  081C               	movf	28,w	;volatile
  2418  074E  0020               	movlb	0	; select bank0
  2419  074F  00B0               	movwf	?_ReadADC+1
  2420  0750  0021               	movlb	1	; select bank1
  2421  0751  081B               	movf	27,w	;volatile
  2422  0752  0020               	movlb	0	; select bank0
  2423  0753  00AF               	movwf	?_ReadADC
  2424  0754  0008               	return
  2425  0755                     __end_of_ReadADC:	
  2426                           
  2427                           	psect	text9
  2428  06C9                     __ptext9:	
  2429 ;; *************** function _LCDWriteString *****************
  2430 ;; Defined at:
  2431 ;;		line 279 in file "lcd_hd44780_pic16.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  msg             2   27[BANK0 ] PTR const unsigned char 
  2434 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  2435 ;;		 -> STR_4(5), STR_3(4), STR_2(4), STR_1(5), 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  cc              1   30[BANK0 ] char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1
  2447 ;;      Params:         0       2       0
  2448 ;;      Locals:         0       1       0
  2449 ;;      Temps:          0       1       0
  2450 ;;      Totals:         0       4       0
  2451 ;;Total ram usage:        4 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    6
  2454 ;; This function calls:
  2455 ;;		_LCDByte
  2456 ;; This function is called by:
  2457 ;;		_main
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           
  2462                           ;psect for function _LCDWriteString
  2463  06C9                     _LCDWriteString:	
  2464  06C9                     l1927:	
  2465                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  2466                           
  2467                           ;incstack = 0
  2468                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2469                           
  2470  06C9  0020               	movlb	0	; select bank0
  2471  06CA  083B               	movf	LCDWriteString@msg,w
  2472  06CB  0084               	movwf	4
  2473  06CC  083C               	movf	LCDWriteString@msg+1,w
  2474  06CD  0085               	movwf	5
  2475  06CE  0012               	moviw fsr0++
  2476  06CF  1903               	btfsc	3,2
  2477  06D0  0008               	return
  2478                           
  2479                           ;lcd_hd44780_pic16.c: 282: {
  2480                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  2481  06D1  0020               	movlb	0	; select bank0
  2482  06D2  083B               	movf	LCDWriteString@msg,w
  2483  06D3  0084               	movwf	4
  2484  06D4  083C               	movf	LCDWriteString@msg+1,w
  2485  06D5  0085               	movwf	5
  2486  06D6  0012               	moviw fsr0++
  2487  06D7  3A25               	xorlw	37
  2488  06D8  1D03               	btfss	3,2
  2489  06D9  2EF7               	goto	l1923
  2490                           
  2491                           ;lcd_hd44780_pic16.c: 285: {
  2492                           ;lcd_hd44780_pic16.c: 286: msg++;
  2493  06DA  3001               	movlw	1
  2494  06DB  07BB               	addwf	LCDWriteString@msg,f
  2495  06DC  3000               	movlw	0
  2496  06DD  3DBC               	addwfc	LCDWriteString@msg+1,f
  2497                           
  2498                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  2499  06DE  083B               	movf	LCDWriteString@msg,w
  2500  06DF  0084               	movwf	4
  2501  06E0  083C               	movf	LCDWriteString@msg+1,w
  2502  06E1  0085               	movwf	5
  2503  06E2  0800               	movf	0,w	;code access
  2504  06E3  3ED0               	addlw	-48
  2505  06E4  00BD               	movwf	??_LCDWriteString
  2506  06E5  083D               	movf	??_LCDWriteString,w
  2507  06E6  00BE               	movwf	LCDWriteString@cc
  2508                           
  2509                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  2510  06E7  1BBE               	btfsc	LCDWriteString@cc,7
  2511  06E8  2EF2               	goto	l1919
  2512  06E9  083E               	movf	LCDWriteString@cc,w
  2513  06EA  3A80               	xorlw	128
  2514  06EB  3E78               	addlw	-136
  2515  06EC  1803               	skipnc
  2516  06ED  2EF2               	goto	l1919
  2517                           
  2518                           ;lcd_hd44780_pic16.c: 290: {
  2519                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  2520  06EE  01B4               	clrf	LCDByte@isdata
  2521  06EF  0AB4               	incf	LCDByte@isdata,f
  2522  06F0  083E               	movf	LCDWriteString@cc,w
  2523  06F1  2EFF               	goto	L2
  2524  06F2                     l1919:	
  2525                           ;lcd_hd44780_pic16.c: 292: }
  2526                           
  2527                           
  2528                           ;lcd_hd44780_pic16.c: 293: else
  2529                           ;lcd_hd44780_pic16.c: 294: {
  2530                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  2531  06F2  0020               	movlb	0	; select bank0
  2532  06F3  01B4               	clrf	LCDByte@isdata
  2533  06F4  0AB4               	incf	LCDByte@isdata,f
  2534  06F5  3025               	movlw	37
  2535  06F6  25AB               	fcall	_LCDByte
  2536  06F7                     l1923:	
  2537                           ;lcd_hd44780_pic16.c: 297: }
  2538                           ;lcd_hd44780_pic16.c: 298: }
  2539                           
  2540                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  2541                           
  2542                           
  2543                           ;lcd_hd44780_pic16.c: 299: else
  2544                           ;lcd_hd44780_pic16.c: 300: {
  2545                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  2546  06F7  0020               	movlb	0	; select bank0
  2547  06F8  01B4               	clrf	LCDByte@isdata
  2548  06F9  0AB4               	incf	LCDByte@isdata,f
  2549  06FA  083B               	movf	LCDWriteString@msg,w
  2550  06FB  0084               	movwf	4
  2551  06FC  083C               	movf	LCDWriteString@msg+1,w
  2552  06FD  0085               	movwf	5
  2553  06FE  0800               	movf	0,w	;code access
  2554  06FF                     L2:	
  2555  06FF  25AB               	fcall	_LCDByte
  2556                           
  2557                           ;lcd_hd44780_pic16.c: 302: }
  2558                           ;lcd_hd44780_pic16.c: 303: msg++;
  2559  0700  3001               	movlw	1
  2560  0701  0020               	movlb	0	; select bank0
  2561  0702  07BB               	addwf	LCDWriteString@msg,f
  2562  0703  3000               	movlw	0
  2563  0704  3DBC               	addwfc	LCDWriteString@msg+1,f
  2564  0705  2EC9               	goto	l1927
  2565  0706                     __end_of_LCDWriteString:	
  2566                           
  2567                           	psect	text10
  2568  02AB                     __ptext10:	
  2569 ;; *************** function _LCDWriteInt *****************
  2570 ;; Defined at:
  2571 ;;		line 317 in file "lcd_hd44780_pic16.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  val             2   27[BANK0 ] int 
  2574 ;;  field_length    1   29[BANK0 ] char 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  str             5   32[BANK0 ] unsigned char [5]
  2577 ;;  i               2   39[BANK0 ] int 
  2578 ;;  j               2   37[BANK0 ] int 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1
  2588 ;;      Params:         0       3       0
  2589 ;;      Locals:         0       9       0
  2590 ;;      Temps:          0       2       0
  2591 ;;      Totals:         0      14       0
  2592 ;;Total ram usage:       14 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    6
  2595 ;; This function calls:
  2596 ;;		_LCDByte
  2597 ;;		___awdiv
  2598 ;;		___awmod
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           
  2605                           ;psect for function _LCDWriteInt
  2606  02AB                     _LCDWriteInt:	
  2607                           
  2608                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  2609                           
  2610                           ;incstack = 0
  2611                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2612  02AB  3057               	movlw	low LCDWriteInt@F2516
  2613  02AC  0086               	movwf	6
  2614  02AD  3000               	movlw	high LCDWriteInt@F2516
  2615  02AE  0087               	movwf	7
  2616  02AF  3040               	movlw	low LCDWriteInt@str
  2617  02B0  0084               	movwf	4
  2618  02B1  3000               	movlw	high LCDWriteInt@str
  2619  02B2  0085               	movwf	5
  2620  02B3  3005               	movlw	5
  2621  02B4  0020               	movlb	0	; select bank0
  2622  02B5  00BE               	movwf	??_LCDWriteInt
  2623  02B6                     u2180:	
  2624  02B6  0016               	moviw fsr1++
  2625  02B7  001A               	movwi fsr0++
  2626  02B8  0BBE               	decfsz	??_LCDWriteInt,f
  2627  02B9  2AB6               	goto	u2180
  2628                           
  2629                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  2630  02BA  3004               	movlw	4
  2631  02BB  00C7               	movwf	LCDWriteInt@i
  2632  02BC  3000               	movlw	0
  2633  02BD  00C8               	movwf	LCDWriteInt@i+1
  2634  02BE  01C5               	clrf	LCDWriteInt@j
  2635  02BF  01C6               	clrf	LCDWriteInt@j+1
  2636                           
  2637                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  2638  02C0  083B               	movf	LCDWriteInt@val,w
  2639  02C1  043C               	iorwf	LCDWriteInt@val+1,w
  2640  02C2  1903               	btfsc	3,2
  2641                           
  2642                           ;lcd_hd44780_pic16.c: 323: {
  2643                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  2644  02C3  01C4               	clrf	LCDWriteInt@str+4
  2645                           
  2646                           ;lcd_hd44780_pic16.c: 325: }
  2647                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  2648  02C4  1FBC               	btfss	LCDWriteInt@val+1,7
  2649  02C5  2AD0               	goto	l1951
  2650                           
  2651                           ;lcd_hd44780_pic16.c: 328: {
  2652                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  2653  02C6  01B4               	clrf	LCDByte@isdata
  2654  02C7  0AB4               	incf	LCDByte@isdata,f
  2655  02C8  302D               	movlw	45
  2656  02C9  25AB               	fcall	_LCDByte
  2657                           
  2658                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  2659  02CA  0020               	movlb	0	; select bank0
  2660  02CB  09BB               	comf	LCDWriteInt@val,f
  2661  02CC  09BC               	comf	LCDWriteInt@val+1,f
  2662  02CD  0ABB               	incf	LCDWriteInt@val,f
  2663  02CE  1903               	skipnz
  2664  02CF  0ABC               	incf	LCDWriteInt@val+1,f
  2665  02D0                     l1951:	
  2666                           ;lcd_hd44780_pic16.c: 331: }
  2667                           ;lcd_hd44780_pic16.c: 333: while(val)
  2668                           
  2669  02D0  083B               	movf	LCDWriteInt@val,w
  2670  02D1  043C               	iorwf	LCDWriteInt@val+1,w
  2671  02D2  1903               	btfsc	3,2
  2672  02D3  2AF9               	goto	l1953
  2673                           
  2674                           ;lcd_hd44780_pic16.c: 334: {
  2675                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  2676  02D4  300A               	movlw	10
  2677  02D5  00AF               	movwf	___awmod@divisor
  2678  02D6  3000               	movlw	0
  2679  02D7  00B0               	movwf	___awmod@divisor+1
  2680  02D8  083C               	movf	LCDWriteInt@val+1,w
  2681  02D9  00B2               	movwf	___awmod@dividend+1
  2682  02DA  083B               	movf	LCDWriteInt@val,w
  2683  02DB  00B1               	movwf	___awmod@dividend
  2684  02DC  263E               	fcall	___awmod
  2685  02DD  0020               	movlb	0	; select bank0
  2686  02DE  082F               	movf	?___awmod,w
  2687  02DF  00BE               	movwf	??_LCDWriteInt
  2688  02E0  0847               	movf	LCDWriteInt@i,w
  2689  02E1  3E40               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2690  02E2  0086               	movwf	6
  2691  02E3  0187               	clrf	7
  2692  02E4  083E               	movf	??_LCDWriteInt,w
  2693  02E5  0081               	movwf	1
  2694                           
  2695                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  2696  02E6  300A               	movlw	10
  2697  02E7  00AF               	movwf	___awdiv@divisor
  2698  02E8  3000               	movlw	0
  2699  02E9  00B0               	movwf	___awdiv@divisor+1
  2700  02EA  083C               	movf	LCDWriteInt@val+1,w
  2701  02EB  00B2               	movwf	___awdiv@dividend+1
  2702  02EC  083B               	movf	LCDWriteInt@val,w
  2703  02ED  00B1               	movwf	___awdiv@dividend
  2704  02EE  24BD               	fcall	___awdiv
  2705  02EF  0020               	movlb	0	; select bank0
  2706  02F0  0830               	movf	?___awdiv+1,w
  2707  02F1  00BC               	movwf	LCDWriteInt@val+1
  2708  02F2  082F               	movf	?___awdiv,w
  2709  02F3  00BB               	movwf	LCDWriteInt@val
  2710                           
  2711                           ;lcd_hd44780_pic16.c: 337: i--;
  2712  02F4  30FF               	movlw	255
  2713  02F5  07C7               	addwf	LCDWriteInt@i,f
  2714  02F6  30FF               	movlw	255
  2715  02F7  3DC8               	addwfc	LCDWriteInt@i+1,f
  2716  02F8  2AD0               	goto	l1951
  2717  02F9                     l1953:	
  2718                           
  2719                           ;lcd_hd44780_pic16.c: 338: }
  2720                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  2721  02F9  0A3D               	incf	LCDWriteInt@field_length,w
  2722  02FA  1903               	btfsc	3,2
  2723  02FB  2B0C               	goto	l1961
  2724                           
  2725                           ;lcd_hd44780_pic16.c: 341: else
  2726                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  2727                           
  2728                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  2729  02FC  083D               	movf	LCDWriteInt@field_length,w
  2730  02FD  00BE               	movwf	??_LCDWriteInt
  2731  02FE  01BF               	clrf	??_LCDWriteInt+1
  2732  02FF  1BBE               	btfsc	??_LCDWriteInt,7
  2733  0300  03BF               	decf	??_LCDWriteInt+1,f
  2734  0301  09BE               	comf	??_LCDWriteInt,f
  2735  0302  09BF               	comf	??_LCDWriteInt+1,f
  2736  0303  0ABE               	incf	??_LCDWriteInt,f
  2737  0304  1903               	skipnz
  2738  0305  0ABF               	incf	??_LCDWriteInt+1,f
  2739  0306  083E               	movf	??_LCDWriteInt,w
  2740  0307  3E05               	addlw	5
  2741  0308  00C5               	movwf	LCDWriteInt@j
  2742  0309  3000               	movlw	0
  2743  030A  3D3F               	addwfc	??_LCDWriteInt+1,w
  2744  030B  00C6               	movwf	LCDWriteInt@j+1
  2745  030C                     l1961:	
  2746                           
  2747                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  2748  030C  0846               	movf	LCDWriteInt@j+1,w
  2749  030D  00C8               	movwf	LCDWriteInt@i+1
  2750  030E  0845               	movf	LCDWriteInt@j,w
  2751  030F  00C7               	movwf	LCDWriteInt@i
  2752  0310                     L3:	
  2753  0310  0848               	movf	LCDWriteInt@i+1,w
  2754  0311  3A80               	xorlw	128
  2755  0312  00BE               	movwf	??_LCDWriteInt
  2756  0313  3080               	movlw	128
  2757  0314  023E               	subwf	??_LCDWriteInt,w
  2758  0315  1D03               	skipz
  2759  0316  2B19               	goto	u2235
  2760  0317  3005               	movlw	5
  2761  0318  0247               	subwf	LCDWriteInt@i,w
  2762  0319                     u2235:	
  2763  0319  1803               	btfsc	3,0
  2764  031A  0008               	return
  2765                           
  2766                           ;lcd_hd44780_pic16.c: 346: {
  2767                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  2768  031B  0020               	movlb	0	; select bank0
  2769  031C  01B4               	clrf	LCDByte@isdata
  2770  031D  0AB4               	incf	LCDByte@isdata,f
  2771  031E  0847               	movf	LCDWriteInt@i,w
  2772  031F  3E40               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2773  0320  0086               	movwf	6
  2774  0321  0187               	clrf	7
  2775  0322  0801               	movf	1,w
  2776  0323  3E30               	addlw	48
  2777  0324  25AB               	fcall	_LCDByte
  2778  0325  3001               	movlw	1
  2779  0326  0020               	movlb	0	; select bank0
  2780  0327  07C7               	addwf	LCDWriteInt@i,f
  2781  0328  3000               	movlw	0
  2782  0329  3DC8               	addwfc	LCDWriteInt@i+1,f
  2783  032A  2B10               	goto	L3
  2784  032B                     __end_of_LCDWriteInt:	
  2785                           
  2786                           	psect	text11
  2787  063E                     __ptext11:	
  2788 ;; *************** function ___awmod *****************
  2789 ;; Defined at:
  2790 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  divisor         2   15[BANK0 ] int 
  2793 ;;  dividend        2   17[BANK0 ] int 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  sign            1   21[BANK0 ] unsigned char 
  2796 ;;  counter         1   20[BANK0 ] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  2   15[BANK0 ] int 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1
  2806 ;;      Params:         0       4       0
  2807 ;;      Locals:         0       2       0
  2808 ;;      Temps:          0       1       0
  2809 ;;      Totals:         0       7       0
  2810 ;;Total ram usage:        7 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    4
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_LCDWriteInt
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function ___awmod
  2822  063E                     ___awmod:	
  2823                           
  2824                           ;incstack = 0
  2825                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2826  063E  0020               	movlb	0	; select bank0
  2827  063F  01B5               	clrf	___awmod@sign
  2828  0640  1FB2               	btfss	___awmod@dividend+1,7
  2829  0641  2E49               	goto	l1617
  2830  0642  09B1               	comf	___awmod@dividend,f
  2831  0643  09B2               	comf	___awmod@dividend+1,f
  2832  0644  0AB1               	incf	___awmod@dividend,f
  2833  0645  1903               	skipnz
  2834  0646  0AB2               	incf	___awmod@dividend+1,f
  2835  0647  01B5               	clrf	___awmod@sign
  2836  0648  0AB5               	incf	___awmod@sign,f
  2837  0649                     l1617:	
  2838  0649  1FB0               	btfss	___awmod@divisor+1,7
  2839  064A  2E50               	goto	l1621
  2840  064B  09AF               	comf	___awmod@divisor,f
  2841  064C  09B0               	comf	___awmod@divisor+1,f
  2842  064D  0AAF               	incf	___awmod@divisor,f
  2843  064E  1903               	skipnz
  2844  064F  0AB0               	incf	___awmod@divisor+1,f
  2845  0650                     l1621:	
  2846  0650  082F               	movf	___awmod@divisor,w
  2847  0651  0430               	iorwf	___awmod@divisor+1,w
  2848  0652  1903               	btfsc	3,2
  2849  0653  2E77               	goto	l1639
  2850  0654  01B4               	clrf	___awmod@counter
  2851  0655  0AB4               	incf	___awmod@counter,f
  2852  0656                     l1629:	
  2853  0656  1BB0               	btfsc	___awmod@divisor+1,7
  2854  0657  2E62               	goto	l1631
  2855  0658  3001               	movlw	1
  2856  0659                     u1615:	
  2857  0659  35AF               	lslf	___awmod@divisor,f
  2858  065A  0DB0               	rlf	___awmod@divisor+1,f
  2859  065B  0B89               	decfsz	9,f
  2860  065C  2E59               	goto	u1615
  2861  065D  3001               	movlw	1
  2862  065E  00B3               	movwf	??___awmod
  2863  065F  0833               	movf	??___awmod,w
  2864  0660  07B4               	addwf	___awmod@counter,f
  2865  0661  2E56               	goto	l1629
  2866  0662                     l1631:	
  2867  0662  0830               	movf	___awmod@divisor+1,w
  2868  0663  0232               	subwf	___awmod@dividend+1,w
  2869  0664  1D03               	skipz
  2870  0665  2E68               	goto	u1635
  2871  0666  082F               	movf	___awmod@divisor,w
  2872  0667  0231               	subwf	___awmod@dividend,w
  2873  0668                     u1635:	
  2874  0668  1C03               	skipc
  2875  0669  2E6E               	goto	l1635
  2876  066A  082F               	movf	___awmod@divisor,w
  2877  066B  02B1               	subwf	___awmod@dividend,f
  2878  066C  0830               	movf	___awmod@divisor+1,w
  2879  066D  3BB2               	subwfb	___awmod@dividend+1,f
  2880  066E                     l1635:	
  2881  066E  3001               	movlw	1
  2882  066F                     u1645:	
  2883  066F  36B0               	lsrf	___awmod@divisor+1,f
  2884  0670  0CAF               	rrf	___awmod@divisor,f
  2885  0671  0B89               	decfsz	9,f
  2886  0672  2E6F               	goto	u1645
  2887  0673  3001               	movlw	1
  2888  0674  02B4               	subwf	___awmod@counter,f
  2889  0675  1D03               	btfss	3,2
  2890  0676  2E62               	goto	l1631
  2891  0677                     l1639:	
  2892  0677  0835               	movf	___awmod@sign,w
  2893  0678  1903               	btfsc	3,2
  2894  0679  2E7F               	goto	l1643
  2895  067A  09B1               	comf	___awmod@dividend,f
  2896  067B  09B2               	comf	___awmod@dividend+1,f
  2897  067C  0AB1               	incf	___awmod@dividend,f
  2898  067D  1903               	skipnz
  2899  067E  0AB2               	incf	___awmod@dividend+1,f
  2900  067F                     l1643:	
  2901  067F  0832               	movf	___awmod@dividend+1,w
  2902  0680  00B0               	movwf	?___awmod+1
  2903  0681  0831               	movf	___awmod@dividend,w
  2904  0682  00AF               	movwf	?___awmod
  2905  0683  0008               	return
  2906  0684                     __end_of___awmod:	
  2907                           
  2908                           	psect	text12
  2909  04BD                     __ptext12:	
  2910 ;; *************** function ___awdiv *****************
  2911 ;; Defined at:
  2912 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  divisor         2   15[BANK0 ] int 
  2915 ;;  dividend        2   17[BANK0 ] int 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  quotient        2   22[BANK0 ] int 
  2918 ;;  sign            1   21[BANK0 ] unsigned char 
  2919 ;;  counter         1   20[BANK0 ] unsigned char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  2   15[BANK0 ] int 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1
  2929 ;;      Params:         0       4       0
  2930 ;;      Locals:         0       4       0
  2931 ;;      Temps:          0       1       0
  2932 ;;      Totals:         0       9       0
  2933 ;;Total ram usage:        9 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    4
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_LCDWriteInt
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           
  2944                           ;psect for function ___awdiv
  2945  04BD                     ___awdiv:	
  2946                           
  2947                           ;incstack = 0
  2948                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2949  04BD  0020               	movlb	0	; select bank0
  2950  04BE  01B5               	clrf	___awdiv@sign
  2951  04BF  1FB0               	btfss	___awdiv@divisor+1,7
  2952  04C0  2CC8               	goto	l1573
  2953  04C1  09AF               	comf	___awdiv@divisor,f
  2954  04C2  09B0               	comf	___awdiv@divisor+1,f
  2955  04C3  0AAF               	incf	___awdiv@divisor,f
  2956  04C4  1903               	skipnz
  2957  04C5  0AB0               	incf	___awdiv@divisor+1,f
  2958  04C6  01B5               	clrf	___awdiv@sign
  2959  04C7  0AB5               	incf	___awdiv@sign,f
  2960  04C8                     l1573:	
  2961  04C8  1FB2               	btfss	___awdiv@dividend+1,7
  2962  04C9  2CD3               	goto	l1579
  2963  04CA  09B1               	comf	___awdiv@dividend,f
  2964  04CB  09B2               	comf	___awdiv@dividend+1,f
  2965  04CC  0AB1               	incf	___awdiv@dividend,f
  2966  04CD  1903               	skipnz
  2967  04CE  0AB2               	incf	___awdiv@dividend+1,f
  2968  04CF  3001               	movlw	1
  2969  04D0  00B3               	movwf	??___awdiv
  2970  04D1  0833               	movf	??___awdiv,w
  2971  04D2  06B5               	xorwf	___awdiv@sign,f
  2972  04D3                     l1579:	
  2973  04D3  01B6               	clrf	___awdiv@quotient
  2974  04D4  01B7               	clrf	___awdiv@quotient+1
  2975  04D5  082F               	movf	___awdiv@divisor,w
  2976  04D6  0430               	iorwf	___awdiv@divisor+1,w
  2977  04D7  1903               	btfsc	3,2
  2978  04D8  2D02               	goto	l1601
  2979  04D9  01B4               	clrf	___awdiv@counter
  2980  04DA  0AB4               	incf	___awdiv@counter,f
  2981  04DB                     l1589:	
  2982  04DB  1BB0               	btfsc	___awdiv@divisor+1,7
  2983  04DC  2CE7               	goto	l1591
  2984  04DD  3001               	movlw	1
  2985  04DE                     u1515:	
  2986  04DE  35AF               	lslf	___awdiv@divisor,f
  2987  04DF  0DB0               	rlf	___awdiv@divisor+1,f
  2988  04E0  0B89               	decfsz	9,f
  2989  04E1  2CDE               	goto	u1515
  2990  04E2  3001               	movlw	1
  2991  04E3  00B3               	movwf	??___awdiv
  2992  04E4  0833               	movf	??___awdiv,w
  2993  04E5  07B4               	addwf	___awdiv@counter,f
  2994  04E6  2CDB               	goto	l1589
  2995  04E7                     l1591:	
  2996  04E7  3001               	movlw	1
  2997  04E8                     u1535:	
  2998  04E8  35B6               	lslf	___awdiv@quotient,f
  2999  04E9  0DB7               	rlf	___awdiv@quotient+1,f
  3000  04EA  0B89               	decfsz	9,f
  3001  04EB  2CE8               	goto	u1535
  3002  04EC  0830               	movf	___awdiv@divisor+1,w
  3003  04ED  0232               	subwf	___awdiv@dividend+1,w
  3004  04EE  1D03               	skipz
  3005  04EF  2CF2               	goto	u1545
  3006  04F0  082F               	movf	___awdiv@divisor,w
  3007  04F1  0231               	subwf	___awdiv@dividend,w
  3008  04F2                     u1545:	
  3009  04F2  1C03               	skipc
  3010  04F3  2CF9               	goto	l1597
  3011  04F4  082F               	movf	___awdiv@divisor,w
  3012  04F5  02B1               	subwf	___awdiv@dividend,f
  3013  04F6  0830               	movf	___awdiv@divisor+1,w
  3014  04F7  3BB2               	subwfb	___awdiv@dividend+1,f
  3015  04F8  1436               	bsf	___awdiv@quotient,0
  3016  04F9                     l1597:	
  3017  04F9  3001               	movlw	1
  3018  04FA                     u1555:	
  3019  04FA  36B0               	lsrf	___awdiv@divisor+1,f
  3020  04FB  0CAF               	rrf	___awdiv@divisor,f
  3021  04FC  0B89               	decfsz	9,f
  3022  04FD  2CFA               	goto	u1555
  3023  04FE  3001               	movlw	1
  3024  04FF  02B4               	subwf	___awdiv@counter,f
  3025  0500  1D03               	btfss	3,2
  3026  0501  2CE7               	goto	l1591
  3027  0502                     l1601:	
  3028  0502  0835               	movf	___awdiv@sign,w
  3029  0503  1903               	btfsc	3,2
  3030  0504  2D0A               	goto	l1605
  3031  0505  09B6               	comf	___awdiv@quotient,f
  3032  0506  09B7               	comf	___awdiv@quotient+1,f
  3033  0507  0AB6               	incf	___awdiv@quotient,f
  3034  0508  1903               	skipnz
  3035  0509  0AB7               	incf	___awdiv@quotient+1,f
  3036  050A                     l1605:	
  3037  050A  0837               	movf	___awdiv@quotient+1,w
  3038  050B  00B0               	movwf	?___awdiv+1
  3039  050C  0836               	movf	___awdiv@quotient,w
  3040  050D  00AF               	movwf	?___awdiv
  3041  050E  0008               	return
  3042  050F                     __end_of___awdiv:	
  3043                           
  3044                           	psect	text13
  3045  05F5                     __ptext13:	
  3046 ;; *************** function _LCDInit *****************
  3047 ;; Defined at:
  3048 ;;		line 207 in file "lcd_hd44780_pic16.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  style           1    wreg     unsigned char 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  style           1   29[BANK0 ] unsigned char 
  3053 ;;  __i             1   30[BANK0 ] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1
  3063 ;;      Params:         0       0       0
  3064 ;;      Locals:         0       2       0
  3065 ;;      Temps:          0       2       0
  3066 ;;      Totals:         0       4       0
  3067 ;;Total ram usage:        4 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    6
  3070 ;; This function calls:
  3071 ;;		_LCDBusyLoop
  3072 ;;		_LCDByte
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function _LCDInit
  3080  05F5                     _LCDInit:	
  3081                           
  3082                           ;incstack = 0
  3083                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3084                           ;LCDInit@style stored from wreg
  3085  05F5  0020               	movlb	0	; select bank0
  3086  05F6  00BD               	movwf	LCDInit@style
  3087                           
  3088                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  3089  05F7  30C3               	movlw	195
  3090  05F8  00BC               	movwf	??_LCDInit+1
  3091  05F9  30CD               	movlw	205
  3092  05FA  00BB               	movwf	??_LCDInit
  3093  05FB                     u2607:	
  3094  05FB  0BBB               	decfsz	??_LCDInit,f
  3095  05FC  2DFB               	goto	u2607
  3096  05FD  0BBC               	decfsz	??_LCDInit+1,f
  3097  05FE  2DFB               	goto	u2607
  3098                           
  3099                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<2));
  3100  05FF  30C3               	movlw	195
  3101  0600  0020               	movlb	0	; select bank0
  3102  0601  00BB               	movwf	??_LCDInit
  3103  0602  083B               	movf	??_LCDInit,w
  3104  0603  0021               	movlb	1	; select bank1
  3105  0604  058E               	andwf	14,f	;volatile
  3106                           
  3107                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC1=0;
  3108  0605  108E               	bcf	14,1	;volatile
  3109                           
  3110                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC0=0;
  3111  0606  100E               	bcf	14,0	;volatile
  3112                           
  3113                           ;lcd_hd44780_pic16.c: 216: TRISAbits.TRISA0=0;
  3114  0607  100C               	bcf	12,0	;volatile
  3115                           
  3116                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<2));
  3117  0608  30C3               	movlw	195
  3118  0609  0020               	movlb	0	; select bank0
  3119  060A  00BB               	movwf	??_LCDInit
  3120  060B  083B               	movf	??_LCDInit,w
  3121  060C  058E               	andwf	14,f	;volatile
  3122                           
  3123                           ;lcd_hd44780_pic16.c: 220: (RC1=0);
  3124  060D  108E               	bcf	14,1	;volatile
  3125                           
  3126                           ;lcd_hd44780_pic16.c: 221: (RA0=0);
  3127  060E  100C               	bcf	12,0	;volatile
  3128                           
  3129                           ;lcd_hd44780_pic16.c: 222: (RC0=0);
  3130  060F  100E               	bcf	14,0	;volatile
  3131                           
  3132                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3133  0610  3200               	nop2	;2 cycle nop
  3134                           
  3135                           ;lcd_hd44780_pic16.c: 227: (RC1=1);
  3136  0611  0020               	movlb	0	; select bank0
  3137  0612  148E               	bsf	14,1	;volatile
  3138                           
  3139                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<2);
  3140  0613  158E               	bsf	14,3	;volatile
  3141                           
  3142                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3143  0614  3200               	nop2	;2 cycle nop
  3144  0615  3200               	nop2	;2 cycle nop
  3145  0616  0000               	nop
  3146                           
  3147                           ;lcd_hd44780_pic16.c: 230: (RC1=0);
  3148  0617  0020               	movlb	0	; select bank0
  3149  0618  108E               	bcf	14,1	;volatile
  3150                           
  3151                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3152  0619  3200               	nop2	;2 cycle nop
  3153  061A  3200               	nop2	;2 cycle nop
  3154  061B  0000               	nop
  3155                           
  3156                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  3157  061C  2410               	fcall	_LCDBusyLoop
  3158                           
  3159                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  3160  061D  0020               	movlb	0	; select bank0
  3161  061E  01B4               	clrf	LCDByte@isdata
  3162  061F  3028               	movlw	40
  3163  0620  25AB               	fcall	_LCDByte
  3164                           
  3165                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  3166  0621  0020               	movlb	0	; select bank0
  3167  0622  01B4               	clrf	LCDByte@isdata
  3168  0623  083D               	movf	LCDInit@style,w
  3169  0624  380C               	iorlw	12
  3170  0625  25AB               	fcall	_LCDByte
  3171                           
  3172                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  3173  0626  0020               	movlb	0	; select bank0
  3174  0627  01B4               	clrf	LCDByte@isdata
  3175  0628  3040               	movlw	64
  3176  0629  25AB               	fcall	_LCDByte
  3177                           
  3178                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  3179                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  3180  062A  0020               	movlb	0	; select bank0
  3181  062B  01BE               	clrf	LCDInit@__i
  3182  062C                     L4:	
  3183  062C  3008               	movlw	8
  3184  062D  023E               	subwf	LCDInit@__i,w
  3185  062E  1803               	btfsc	3,0
  3186  062F  0008               	return
  3187                           
  3188                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  3189  0630  01B4               	clrf	LCDByte@isdata
  3190  0631  0AB4               	incf	LCDByte@isdata,f
  3191  0632  083E               	movf	LCDInit@__i,w
  3192  0633  3EA9               	addlw	(low (___cgram| 0))& (0+255)
  3193  0634  0086               	movwf	6
  3194  0635  0187               	clrf	7
  3195  0636  0801               	movf	1,w
  3196  0637  25AB               	fcall	_LCDByte
  3197  0638  3001               	movlw	1
  3198  0639  0020               	movlb	0	; select bank0
  3199  063A  00BB               	movwf	??_LCDInit
  3200  063B  083B               	movf	??_LCDInit,w
  3201  063C  07BE               	addwf	LCDInit@__i,f
  3202  063D  2E2C               	goto	L4
  3203  063E                     __end_of_LCDInit:	
  3204                           
  3205                           	psect	text14
  3206  0755                     __ptext14:	
  3207 ;; *************** function _LCDGotoXY *****************
  3208 ;; Defined at:
  3209 ;;		line 355 in file "lcd_hd44780_pic16.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  x               1    wreg     unsigned char 
  3212 ;;  y               1   27[BANK0 ] unsigned char 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  x               1   29[BANK0 ] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1
  3224 ;;      Params:         0       1       0
  3225 ;;      Locals:         0       1       0
  3226 ;;      Temps:          0       1       0
  3227 ;;      Totals:         0       3       0
  3228 ;;Total ram usage:        3 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    6
  3231 ;; This function calls:
  3232 ;;		_LCDByte
  3233 ;; This function is called by:
  3234 ;;		_main
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _LCDGotoXY
  3240  0755                     _LCDGotoXY:	
  3241                           
  3242                           ;incstack = 0
  3243                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3244                           ;LCDGotoXY@x stored from wreg
  3245  0755  0020               	movlb	0	; select bank0
  3246  0756  00BD               	movwf	LCDGotoXY@x
  3247                           
  3248                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  3249  0757  3014               	movlw	20
  3250  0758  023D               	subwf	LCDGotoXY@x,w
  3251  0759  1803               	btfsc	3,0
  3252  075A  0008               	return
  3253  075B  2F65               	goto	l1983
  3254  075C                     l70:	
  3255                           ;lcd_hd44780_pic16.c: 365: case 1:
  3256                           
  3257                           ;lcd_hd44780_pic16.c: 364: break;
  3258                           
  3259                           ;lcd_hd44780_pic16.c: 362: {
  3260                           ;lcd_hd44780_pic16.c: 363: case 0:
  3261                           
  3262                           ;lcd_hd44780_pic16.c: 361: switch(y)
  3263                           
  3264                           
  3265                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  3266  075C  173D               	bsf	LCDGotoXY@x,6
  3267                           
  3268                           ;lcd_hd44780_pic16.c: 367: break;
  3269  075D  2F73               	goto	l69
  3270  075E                     l1977:	
  3271                           ;lcd_hd44780_pic16.c: 368: case 2:
  3272                           
  3273                           
  3274                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  3275  075E  3014               	movlw	20
  3276  075F  2F61               	goto	L5
  3277  0760                     l1979:	
  3278                           ;lcd_hd44780_pic16.c: 371: case 3:
  3279                           
  3280                           ;lcd_hd44780_pic16.c: 370: break;
  3281                           
  3282                           
  3283                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  3284  0760  3054               	movlw	84
  3285  0761                     L5:	
  3286  0761  00BC               	movwf	??_LCDGotoXY
  3287  0762  083C               	movf	??_LCDGotoXY,w
  3288  0763  07BD               	addwf	LCDGotoXY@x,f
  3289                           
  3290                           ;lcd_hd44780_pic16.c: 374: }
  3291                           
  3292                           ;lcd_hd44780_pic16.c: 373: break;
  3293  0764  2F73               	goto	l69
  3294  0765                     l1983:	
  3295  0765  083B               	movf	LCDGotoXY@y,w
  3296                           
  3297                           ; Switch size 1, requested type "space"
  3298                           ; Number of cases is 4, Range of values is 0 to 3
  3299                           ; switch strategies available:
  3300                           ; Name         Instructions Cycles
  3301                           ; simple_byte           13     7 (average)
  3302                           ; direct_byte           14     6 (fixed)
  3303                           ; jumptable            260     6 (fixed)
  3304                           ;	Chosen strategy is simple_byte
  3305  0766  3A00               	xorlw	0	; case 0
  3306  0767  1903               	skipnz
  3307  0768  2F73               	goto	l69
  3308  0769  3A01               	xorlw	1	; case 1
  3309  076A  1903               	skipnz
  3310  076B  2F5C               	goto	l70
  3311  076C  3A03               	xorlw	3	; case 2
  3312  076D  1903               	skipnz
  3313  076E  2F5E               	goto	l1977
  3314  076F  3A01               	xorlw	1	; case 3
  3315  0770  1903               	skipnz
  3316  0771  2F60               	goto	l1979
  3317  0772  2F73               	goto	l69
  3318  0773                     l69:	
  3319                           
  3320                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  3321  0773  17BD               	bsf	LCDGotoXY@x,7
  3322                           
  3323                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  3324  0774  01B4               	clrf	LCDByte@isdata
  3325  0775  083D               	movf	LCDGotoXY@x,w
  3326  0776  25AB               	fcall	_LCDByte
  3327  0777  0008               	return
  3328  0778                     __end_of_LCDGotoXY:	
  3329                           
  3330                           	psect	text15
  3331  05AB                     __ptext15:	
  3332 ;; *************** function _LCDByte *****************
  3333 ;; Defined at:
  3334 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  c               1    wreg     unsigned char 
  3337 ;;  isdata          1   20[BANK0 ] unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  c               1   25[BANK0 ] unsigned char 
  3340 ;;  temp            1   26[BANK0 ] unsigned char 
  3341 ;;  ln              1   24[BANK0 ] unsigned char 
  3342 ;;  hn              1   23[BANK0 ] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1
  3352 ;;      Params:         0       1       0
  3353 ;;      Locals:         0       4       0
  3354 ;;      Temps:          0       2       0
  3355 ;;      Totals:         0       7       0
  3356 ;;Total ram usage:        7 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    5
  3359 ;; This function calls:
  3360 ;;		_LCDBusyLoop
  3361 ;; This function is called by:
  3362 ;;		_LCDInit
  3363 ;;		_LCDWriteString
  3364 ;;		_LCDWriteInt
  3365 ;;		_LCDGotoXY
  3366 ;;		_main
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           
  3371                           ;psect for function _LCDByte
  3372  05AB                     _LCDByte:	
  3373                           
  3374                           ;incstack = 0
  3375                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3376                           ;LCDByte@c stored from wreg
  3377  05AB  0020               	movlb	0	; select bank0
  3378  05AC  00B9               	movwf	LCDByte@c
  3379                           
  3380                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3381                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3382                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3383  05AD  0839               	movf	LCDByte@c,w
  3384  05AE  00B5               	movwf	??_LCDByte
  3385  05AF  3004               	movlw	4
  3386  05B0                     u1425:	
  3387  05B0  36B5               	lsrf	??_LCDByte,f
  3388  05B1  0B89               	decfsz	9,f
  3389  05B2  2DB0               	goto	u1425
  3390  05B3  0835               	movf	??_LCDByte,w
  3391  05B4  00B6               	movwf	??_LCDByte+1
  3392  05B5  0836               	movf	??_LCDByte+1,w
  3393  05B6  00B7               	movwf	LCDByte@hn
  3394                           
  3395                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3396  05B7  0839               	movf	LCDByte@c,w
  3397  05B8  390F               	andlw	15
  3398  05B9  00B5               	movwf	??_LCDByte
  3399  05BA  0835               	movf	??_LCDByte,w
  3400  05BB  00B8               	movwf	LCDByte@ln
  3401                           
  3402                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3403  05BC  0834               	movf	LCDByte@isdata,w
  3404  05BD  1D03               	btfss	3,2
  3405  05BE  2DC1               	goto	l23
  3406                           
  3407                           ;lcd_hd44780_pic16.c: 96: (RC0=0);
  3408  05BF  100E               	bcf	14,0	;volatile
  3409  05C0  2DC2               	goto	l24
  3410  05C1                     l23:	
  3411                           
  3412                           ;lcd_hd44780_pic16.c: 97: else
  3413                           ;lcd_hd44780_pic16.c: 98: (RC0=1);
  3414  05C1  140E               	bsf	14,0	;volatile
  3415  05C2                     l24:	
  3416                           
  3417                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3418  05C2  3200               	nop2	;2 cycle nop
  3419                           
  3420                           ;lcd_hd44780_pic16.c: 102: (RC1=1);
  3421  05C3  0020               	movlb	0	; select bank0
  3422  05C4  148E               	bsf	14,1	;volatile
  3423                           
  3424                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  3425  05C5  0837               	movf	LCDByte@hn,w
  3426  05C6  00B5               	movwf	??_LCDByte
  3427  05C7  3002               	movlw	2
  3428  05C8                     u1445:	
  3429  05C8  35B5               	lslf	??_LCDByte,f
  3430  05C9  0B89               	decfsz	9,f
  3431  05CA  2DC8               	goto	u1445
  3432  05CB  080E               	movf	14,w	;volatile
  3433  05CC  39C3               	andlw	195
  3434  05CD  0435               	iorwf	??_LCDByte,w
  3435  05CE  00B6               	movwf	??_LCDByte+1
  3436  05CF  0836               	movf	??_LCDByte+1,w
  3437  05D0  00BA               	movwf	LCDByte@temp
  3438                           
  3439                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3440  05D1  083A               	movf	LCDByte@temp,w
  3441  05D2  008E               	movwf	14	;volatile
  3442                           
  3443                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3444  05D3  3200               	nop2	;2 cycle nop
  3445  05D4  3200               	nop2	;2 cycle nop
  3446  05D5  0000               	nop
  3447                           
  3448                           ;lcd_hd44780_pic16.c: 113: (RC1=0);
  3449  05D6  0020               	movlb	0	; select bank0
  3450  05D7  108E               	bcf	14,1	;volatile
  3451                           
  3452                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3453  05D8  3200               	nop2	;2 cycle nop
  3454  05D9  3200               	nop2	;2 cycle nop
  3455  05DA  0000               	nop
  3456                           
  3457                           ;lcd_hd44780_pic16.c: 118: (RC1=1);
  3458  05DB  0020               	movlb	0	; select bank0
  3459  05DC  148E               	bsf	14,1	;volatile
  3460                           
  3461                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  3462  05DD  0838               	movf	LCDByte@ln,w
  3463  05DE  00B5               	movwf	??_LCDByte
  3464  05DF  3002               	movlw	2
  3465  05E0                     u1455:	
  3466  05E0  35B5               	lslf	??_LCDByte,f
  3467  05E1  0B89               	decfsz	9,f
  3468  05E2  2DE0               	goto	u1455
  3469  05E3  080E               	movf	14,w	;volatile
  3470  05E4  39C3               	andlw	195
  3471  05E5  0435               	iorwf	??_LCDByte,w
  3472  05E6  00B6               	movwf	??_LCDByte+1
  3473  05E7  0836               	movf	??_LCDByte+1,w
  3474  05E8  00BA               	movwf	LCDByte@temp
  3475                           
  3476                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3477  05E9  083A               	movf	LCDByte@temp,w
  3478  05EA  008E               	movwf	14	;volatile
  3479                           
  3480                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3481  05EB  3200               	nop2	;2 cycle nop
  3482  05EC  3200               	nop2	;2 cycle nop
  3483  05ED  0000               	nop
  3484                           
  3485                           ;lcd_hd44780_pic16.c: 128: (RC1=0);
  3486  05EE  0020               	movlb	0	; select bank0
  3487  05EF  108E               	bcf	14,1	;volatile
  3488                           
  3489                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3490  05F0  3200               	nop2	;2 cycle nop
  3491  05F1  3200               	nop2	;2 cycle nop
  3492  05F2  0000               	nop
  3493                           
  3494                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3495  05F3  2410               	fcall	_LCDBusyLoop
  3496  05F4  0008               	return
  3497  05F5                     __end_of_LCDByte:	
  3498                           
  3499                           	psect	text16
  3500  0410                     __ptext16:	
  3501 ;; *************** function _LCDBusyLoop *****************
  3502 ;; Defined at:
  3503 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  status          1   19[BANK0 ] unsigned char 
  3508 ;;  temp            1   18[BANK0 ] unsigned char 
  3509 ;;  busy            1   17[BANK0 ] unsigned char 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1
  3519 ;;      Params:         0       0       0
  3520 ;;      Locals:         0       3       0
  3521 ;;      Temps:          0       2       0
  3522 ;;      Totals:         0       5       0
  3523 ;;Total ram usage:        5 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    4
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_LCDByte
  3530 ;;		_LCDInit
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           
  3535                           ;psect for function _LCDBusyLoop
  3536  0410                     _LCDBusyLoop:	
  3537                           
  3538                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  3539                           
  3540                           ;incstack = 0
  3541                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  3542  0410  0020               	movlb	0	; select bank0
  3543  0411  01B3               	clrf	LCDBusyLoop@status
  3544                           
  3545                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<2);
  3546  0412  303C               	movlw	60
  3547  0413  00AF               	movwf	??_LCDBusyLoop
  3548  0414  082F               	movf	??_LCDBusyLoop,w
  3549  0415  0021               	movlb	1	; select bank1
  3550  0416  048E               	iorwf	14,f	;volatile
  3551                           
  3552                           ;lcd_hd44780_pic16.c: 145: (RA0=1);
  3553  0417  0020               	movlb	0	; select bank0
  3554  0418  140C               	bsf	12,0	;volatile
  3555                           
  3556                           ;lcd_hd44780_pic16.c: 146: (RC0=0);
  3557  0419  100E               	bcf	14,0	;volatile
  3558                           
  3559                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3560  041A  3200               	nop2	;2 cycle nop
  3561  041B                     l1405:	
  3562                           ;lcd_hd44780_pic16.c: 153: do
  3563                           
  3564                           
  3565                           ;lcd_hd44780_pic16.c: 154: {
  3566                           ;lcd_hd44780_pic16.c: 156: (RC1=1);
  3567  041B  0020               	movlb	0	; select bank0
  3568  041C  148E               	bsf	14,1	;volatile
  3569                           
  3570                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3571  041D  3200               	nop2	;2 cycle nop
  3572                           
  3573                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>2);
  3574  041E  0020               	movlb	0	; select bank0
  3575  041F  080E               	movf	14,w	;volatile
  3576  0420  00AF               	movwf	??_LCDBusyLoop
  3577  0421  3002               	movlw	2
  3578  0422                     u1225:	
  3579  0422  36AF               	lsrf	??_LCDBusyLoop,f
  3580  0423  0B89               	decfsz	9,f
  3581  0424  2C22               	goto	u1225
  3582  0425  082F               	movf	??_LCDBusyLoop,w
  3583  0426  00B0               	movwf	??_LCDBusyLoop+1
  3584  0427  0830               	movf	??_LCDBusyLoop+1,w
  3585  0428  00B3               	movwf	LCDBusyLoop@status
  3586                           
  3587                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  3588  0429  0833               	movf	LCDBusyLoop@status,w
  3589  042A  00AF               	movwf	??_LCDBusyLoop
  3590  042B  3003               	movlw	3
  3591  042C                     u1235:	
  3592  042C  35AF               	lslf	??_LCDBusyLoop,f
  3593  042D  3EFF               	addlw	-1
  3594  042E  1D03               	skipz
  3595  042F  2C2C               	goto	u1235
  3596  0430  352F               	lslf	??_LCDBusyLoop,w
  3597  0431  00B0               	movwf	??_LCDBusyLoop+1
  3598  0432  0830               	movf	??_LCDBusyLoop+1,w
  3599  0433  00B3               	movwf	LCDBusyLoop@status
  3600                           
  3601                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3602  0434  3200               	nop2	;2 cycle nop
  3603                           
  3604                           ;lcd_hd44780_pic16.c: 167: (RC1=0);
  3605  0435  0020               	movlb	0	; select bank0
  3606  0436  108E               	bcf	14,1	;volatile
  3607                           
  3608                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3609  0437  3200               	nop2	;2 cycle nop
  3610  0438  3200               	nop2	;2 cycle nop
  3611  0439  0000               	nop
  3612                           
  3613                           ;lcd_hd44780_pic16.c: 170: (RC1=1);
  3614  043A  0020               	movlb	0	; select bank0
  3615  043B  148E               	bsf	14,1	;volatile
  3616                           
  3617                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3618  043C  3200               	nop2	;2 cycle nop
  3619                           
  3620                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>2);
  3621  043D  0020               	movlb	0	; select bank0
  3622  043E  080E               	movf	14,w	;volatile
  3623  043F  00AF               	movwf	??_LCDBusyLoop
  3624  0440  3002               	movlw	2
  3625  0441                     u1245:	
  3626  0441  36AF               	lsrf	??_LCDBusyLoop,f
  3627  0442  0B89               	decfsz	9,f
  3628  0443  2C41               	goto	u1245
  3629  0444  082F               	movf	??_LCDBusyLoop,w
  3630  0445  00B0               	movwf	??_LCDBusyLoop+1
  3631  0446  0830               	movf	??_LCDBusyLoop+1,w
  3632  0447  00B2               	movwf	LCDBusyLoop@temp
  3633                           
  3634                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  3635  0448  300F               	movlw	15
  3636  0449  00AF               	movwf	??_LCDBusyLoop
  3637  044A  082F               	movf	??_LCDBusyLoop,w
  3638  044B  05B2               	andwf	LCDBusyLoop@temp,f
  3639                           
  3640                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  3641  044C  0833               	movf	LCDBusyLoop@status,w
  3642  044D  0432               	iorwf	LCDBusyLoop@temp,w
  3643  044E  00AF               	movwf	??_LCDBusyLoop
  3644  044F  082F               	movf	??_LCDBusyLoop,w
  3645  0450  00B3               	movwf	LCDBusyLoop@status
  3646                           
  3647                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  3648  0451  0833               	movf	LCDBusyLoop@status,w
  3649  0452  3980               	andlw	128
  3650  0453  00AF               	movwf	??_LCDBusyLoop
  3651  0454  082F               	movf	??_LCDBusyLoop,w
  3652  0455  00B1               	movwf	LCDBusyLoop@busy
  3653                           
  3654                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3655  0456  3200               	nop2	;2 cycle nop
  3656                           
  3657                           ;lcd_hd44780_pic16.c: 182: (RC1=0);
  3658  0457  0020               	movlb	0	; select bank0
  3659  0458  108E               	bcf	14,1	;volatile
  3660                           
  3661                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3662  0459  3200               	nop2	;2 cycle nop
  3663  045A  3200               	nop2	;2 cycle nop
  3664  045B  0000               	nop
  3665                           
  3666                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  3667  045C  0020               	movlb	0	; select bank0
  3668  045D  0831               	movf	LCDBusyLoop@busy,w
  3669  045E  1D03               	btfss	3,2
  3670  045F  2C1B               	goto	l1405
  3671                           
  3672                           ;lcd_hd44780_pic16.c: 186: (RA0=0);
  3673  0460  100C               	bcf	12,0	;volatile
  3674                           
  3675                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<2));
  3676  0461  30C3               	movlw	195
  3677  0462  00AF               	movwf	??_LCDBusyLoop
  3678  0463  082F               	movf	??_LCDBusyLoop,w
  3679  0464  0021               	movlb	1	; select bank1
  3680  0465  058E               	andwf	14,f	;volatile
  3681  0466  0008               	return
  3682  0467                     __end_of_LCDBusyLoop:	
  3683                           
  3684                           	psect	text17
  3685  07C9                     __ptext17:	
  3686 ;; *************** function _ADCInit *****************
  3687 ;; Defined at:
  3688 ;;		line 7 in file "adc_pic16.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;		None
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;		None
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMMON   BANK0   BANK1
  3702 ;;      Params:         0       0       0
  3703 ;;      Locals:         0       0       0
  3704 ;;      Temps:          0       0       0
  3705 ;;      Totals:         0       0       0
  3706 ;;Total ram usage:        0 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    4
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_main
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           
  3717                           ;psect for function _ADCInit
  3718  07C9                     _ADCInit:	
  3719                           
  3720                           ;adc_pic16.c: 10: TRISAbits.TRISA2 = 1;
  3721                           
  3722                           ;incstack = 0
  3723                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  3724  07C9  0021               	movlb	1	; select bank1
  3725  07CA  150C               	bsf	12,2	;volatile
  3726                           
  3727                           ;adc_pic16.c: 11: ANSELAbits.ANSA2 = 1;
  3728  07CB  0023               	movlb	3	; select bank3
  3729  07CC  150C               	bsf	12,2	;volatile
  3730                           
  3731                           ;adc_pic16.c: 13: ADCON0bits.CHS = 0b00010;
  3732  07CD  0021               	movlb	1	; select bank1
  3733  07CE  081D               	movf	29,w	;volatile
  3734  07CF  3983               	andlw	-125
  3735  07D0  3808               	iorlw	8
  3736  07D1  009D               	movwf	29	;volatile
  3737                           
  3738                           ;adc_pic16.c: 15: ADCON1bits.ADPREF = 0b00;
  3739  07D2  30FC               	movlw	-4
  3740  07D3  059E               	andwf	30,f	;volatile
  3741                           
  3742                           ;adc_pic16.c: 17: ADCON1bits.ADCS = 0b011;
  3743  07D4  081E               	movf	30,w	;volatile
  3744  07D5  398F               	andlw	-113
  3745  07D6  3830               	iorlw	48
  3746  07D7  009E               	movwf	30	;volatile
  3747                           
  3748                           ;adc_pic16.c: 20: ADCON1bits.ADFM=1;
  3749  07D8  179E               	bsf	30,7	;volatile
  3750                           
  3751                           ;adc_pic16.c: 22: ADCON0bits.ADON = 1;
  3752  07D9  141D               	bsf	29,0	;volatile
  3753  07DA  0008               	return
  3754  07DB                     __end_of_ADCInit:	
  3755                           
  3756                           	psect	intentry
  3757  0004                     __pintentry:	
  3758 ;; *************** function _ISR *****************
  3759 ;; Defined at:
  3760 ;;		line 98 in file "do_am.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1
  3774 ;;      Params:         0       0       0
  3775 ;;      Locals:         0       0       0
  3776 ;;      Temps:          0       3       0
  3777 ;;      Totals:         0       3       0
  3778 ;;Total ram usage:        3 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    3
  3781 ;; This function calls:
  3782 ;;		i1_LCDGotoXY
  3783 ;;		i1_LCDWriteInt
  3784 ;; This function is called by:
  3785 ;;		Interrupt level 1
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789  0004                     _ISR:	
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3793  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3794  0005  3180               	pagesel	$
  3795  0006  0020               	movlb	0	; select bank0
  3796  0007  087F               	movf	127,w
  3797  0008  00AE               	movwf	??_ISR+2
  3798                           
  3799                           ;do_am.c: 100: if(INTCONbits.IOCIF == 1)
  3800  0009  1C0B               	btfss	11,0	;volatile
  3801  000A  2842               	goto	i1l123
  3802                           
  3803                           ;do_am.c: 101: {
  3804                           ;do_am.c: 102: if(IOCAFbits.IOCAF1 == 1)
  3805  000B  0027               	movlb	7	; select bank7
  3806  000C  1893               	btfsc	19,1	;volatile
  3807  000D  283A               	goto	i1l2077
  3808  000E  2841               	goto	i1l118
  3809  000F                     i1l2067:	
  3810                           ;do_am.c: 103: {
  3811                           ;do_am.c: 109: while(RA1 == 1)
  3812                           
  3813                           
  3814                           ;do_am.c: 110: {
  3815                           ;do_am.c: 111: tuneUpTemp++;
  3816  000F  3001               	movlw	1
  3817  0010  0020               	movlb	0	; select bank0
  3818  0011  07DF               	addwf	_tuneUpTemp,f
  3819  0012  3000               	movlw	0
  3820  0013  3DE0               	addwfc	_tuneUpTemp+1,f
  3821                           
  3822                           ;do_am.c: 112: if(tuneUpTemp > 150)
  3823  0014  0860               	movf	_tuneUpTemp+1,w
  3824  0015  3A80               	xorlw	128
  3825  0016  00AC               	movwf	??_ISR
  3826  0017  3080               	movlw	128
  3827  0018  022C               	subwf	??_ISR,w
  3828  0019  1D03               	skipz
  3829  001A  281D               	goto	u236_25
  3830  001B  3097               	movlw	151
  3831  001C  025F               	subwf	_tuneUpTemp,w
  3832  001D                     u236_25:	
  3833  001D  1C03               	skipc
  3834  001E  2822               	goto	i1l2071
  3835                           
  3836                           ;do_am.c: 113: {
  3837                           ;do_am.c: 114: tuneUpTemp = 0;
  3838  001F  0020               	movlb	0	; select bank0
  3839  0020  01DF               	clrf	_tuneUpTemp
  3840  0021  01E0               	clrf	_tuneUpTemp+1
  3841  0022                     i1l2071:	
  3842                           
  3843                           ;do_am.c: 115: }
  3844                           ;do_am.c: 117: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  3845  0022  01FC               	clrf	i1LCDGotoXY@y
  3846  0023  0AFC               	incf	i1LCDGotoXY@y,f
  3847  0024  3004               	movlw	4
  3848  0025  2778               	fcall	i1_LCDGotoXY
  3849  0026  0020               	movlb	0	; select bank0
  3850  0027  0860               	movf	_tuneUpTemp+1,w
  3851  0028  00A1               	movwf	i1LCDWriteInt@val+1
  3852  0029  085F               	movf	_tuneUpTemp,w
  3853  002A  00A0               	movwf	i1LCDWriteInt@val
  3854  002B  3003               	movlw	3
  3855  002C  00AC               	movwf	??_ISR
  3856  002D  082C               	movf	??_ISR,w
  3857  002E  00A2               	movwf	i1LCDWriteInt@field_length
  3858  002F  232B               	fcall	i1_LCDWriteInt
  3859                           
  3860                           ;do_am.c: 119: _delay((unsigned long)((10)*(20000000/4000.0)));
  3861  0030  3041               	movlw	65
  3862  0031  0020               	movlb	0	; select bank0
  3863  0032  00AD               	movwf	??_ISR+1
  3864  0033  30EE               	movlw	238
  3865  0034  00AC               	movwf	??_ISR
  3866  0035                     u261_27:	
  3867  0035  0BAC               	decfsz	??_ISR,f
  3868  0036  2835               	goto	u261_27
  3869  0037  0BAD               	decfsz	??_ISR+1,f
  3870  0038  2835               	goto	u261_27
  3871  0039  0000               	nop
  3872  003A                     i1l2077:	
  3873  003A  0020               	movlb	0	; select bank0
  3874  003B  188C               	btfsc	12,1	;volatile
  3875  003C  280F               	goto	i1l2067
  3876                           
  3877                           ;do_am.c: 127: }
  3878                           ;do_am.c: 128: tuneUpTempDir = 1;
  3879  003D  01DC               	clrf	_tuneUpTempDir
  3880  003E  0ADC               	incf	_tuneUpTempDir,f
  3881                           
  3882                           ;do_am.c: 129: IOCAFbits.IOCAF1 = 0;
  3883  003F  0027               	movlb	7	; select bank7
  3884  0040  1093               	bcf	19,1	;volatile
  3885  0041                     i1l118:	
  3886                           
  3887                           ;do_am.c: 130: }
  3888                           ;do_am.c: 131: INTCONbits.IOCIF = 0;
  3889  0041  100B               	bcf	11,0	;volatile
  3890  0042                     i1l123:	
  3891  0042  0020               	movlb	0	; select bank0
  3892  0043  082E               	movf	??_ISR+2,w
  3893  0044  00FF               	movwf	127
  3894  0045  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3895  0046  0009               	retfie
  3896  0047                     __end_of_ISR:	
  3897                           
  3898                           	psect	text19
  3899  032B                     __ptext19:	
  3900 ;; *************** function i1_LCDWriteInt *****************
  3901 ;; Defined at:
  3902 ;;		line 317 in file "lcd_hd44780_pic16.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  val             2    0[BANK0 ] int 
  3905 ;;  field_length    1    2[BANK0 ] char 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  3908 ;;  LCDWriteInt     2   10[BANK0 ] int 
  3909 ;;  LCDWriteInt     2    8[BANK0 ] int 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1
  3919 ;;      Params:         0       3       0
  3920 ;;      Locals:         0       9       0
  3921 ;;      Temps:          2       0       0
  3922 ;;      Totals:         2      12       0
  3923 ;;Total ram usage:       14 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    2
  3926 ;; This function calls:
  3927 ;;		i1_LCDByte
  3928 ;;		i1___awdiv
  3929 ;;		i1___awmod
  3930 ;; This function is called by:
  3931 ;;		_ISR
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           
  3936                           ;psect for function i1_LCDWriteInt
  3937  032B                     i1_LCDWriteInt:	
  3938                           
  3939                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  3940                           
  3941                           ;incstack = 0
  3942                           ; Regs used in i1_LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3943  032B  3057               	movlw	low LCDWriteInt@F2516
  3944  032C  0086               	movwf	6
  3945  032D  3000               	movlw	high LCDWriteInt@F2516
  3946  032E  0087               	movwf	7
  3947  032F  3023               	movlw	low i1LCDWriteInt@str
  3948  0330  0084               	movwf	4
  3949  0331  3000               	movlw	high i1LCDWriteInt@str
  3950  0332  0085               	movwf	5
  3951  0333  3005               	movlw	5
  3952  0334  00FC               	movwf	??i1_LCDWriteInt
  3953  0335                     u226_20:	
  3954  0335  0016               	moviw fsr1++
  3955  0336  001A               	movwi fsr0++
  3956  0337  0BFC               	decfsz	??i1_LCDWriteInt,f
  3957  0338  2B35               	goto	u226_20
  3958                           
  3959                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  3960  0339  3004               	movlw	4
  3961  033A  0020               	movlb	0	; select bank0
  3962  033B  00AA               	movwf	i1LCDWriteInt@i
  3963  033C  3000               	movlw	0
  3964  033D  00AB               	movwf	i1LCDWriteInt@i+1
  3965  033E  01A8               	clrf	i1LCDWriteInt@j
  3966  033F  01A9               	clrf	i1LCDWriteInt@j+1
  3967                           
  3968                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  3969  0340  0820               	movf	i1LCDWriteInt@val,w
  3970  0341  0421               	iorwf	i1LCDWriteInt@val+1,w
  3971  0342  1903               	btfsc	3,2
  3972                           
  3973                           ;lcd_hd44780_pic16.c: 323: {
  3974                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  3975  0343  01A7               	clrf	i1LCDWriteInt@str+4
  3976                           
  3977                           ;lcd_hd44780_pic16.c: 325: }
  3978                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  3979  0344  1FA1               	btfss	i1LCDWriteInt@val+1,7
  3980  0345  2B50               	goto	i1l2025
  3981                           
  3982                           ;lcd_hd44780_pic16.c: 328: {
  3983                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  3984  0346  01F5               	clrf	i1LCDByte@isdata
  3985  0347  0AF5               	incf	i1LCDByte@isdata,f
  3986  0348  302D               	movlw	45
  3987  0349  2560               	fcall	i1_LCDByte
  3988                           
  3989                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  3990  034A  0020               	movlb	0	; select bank0
  3991  034B  09A0               	comf	i1LCDWriteInt@val,f
  3992  034C  09A1               	comf	i1LCDWriteInt@val+1,f
  3993  034D  0AA0               	incf	i1LCDWriteInt@val,f
  3994  034E  1903               	skipnz
  3995  034F  0AA1               	incf	i1LCDWriteInt@val+1,f
  3996  0350                     i1l2025:	
  3997                           ;lcd_hd44780_pic16.c: 331: }
  3998                           ;lcd_hd44780_pic16.c: 333: while(val)
  3999                           
  4000  0350  0820               	movf	i1LCDWriteInt@val,w
  4001  0351  0421               	iorwf	i1LCDWriteInt@val+1,w
  4002  0352  1903               	btfsc	3,2
  4003  0353  2B79               	goto	i1l2027
  4004                           
  4005                           ;lcd_hd44780_pic16.c: 334: {
  4006                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  4007  0354  300A               	movlw	10
  4008  0355  00F0               	movwf	i1___awmod@divisor
  4009  0356  3000               	movlw	0
  4010  0357  00F1               	movwf	i1___awmod@divisor+1
  4011  0358  0821               	movf	i1LCDWriteInt@val+1,w
  4012  0359  00F3               	movwf	i1___awmod@dividend+1
  4013  035A  0820               	movf	i1LCDWriteInt@val,w
  4014  035B  00F2               	movwf	i1___awmod@dividend
  4015  035C  2684               	fcall	i1___awmod
  4016  035D  0870               	movf	?i1___awmod,w
  4017  035E  00FC               	movwf	??i1_LCDWriteInt
  4018  035F  0020               	movlb	0	; select bank0
  4019  0360  082A               	movf	i1LCDWriteInt@i,w
  4020  0361  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4021  0362  0086               	movwf	6
  4022  0363  0187               	clrf	7
  4023  0364  087C               	movf	??i1_LCDWriteInt,w
  4024  0365  0081               	movwf	1
  4025                           
  4026                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  4027  0366  300A               	movlw	10
  4028  0367  00F0               	movwf	i1___awdiv@divisor
  4029  0368  3000               	movlw	0
  4030  0369  00F1               	movwf	i1___awdiv@divisor+1
  4031  036A  0821               	movf	i1LCDWriteInt@val+1,w
  4032  036B  00F3               	movwf	i1___awdiv@dividend+1
  4033  036C  0820               	movf	i1LCDWriteInt@val,w
  4034  036D  00F2               	movwf	i1___awdiv@dividend
  4035  036E  250F               	fcall	i1___awdiv
  4036  036F  0871               	movf	?i1___awdiv+1,w
  4037  0370  0020               	movlb	0	; select bank0
  4038  0371  00A1               	movwf	i1LCDWriteInt@val+1
  4039  0372  0870               	movf	?i1___awdiv,w
  4040  0373  00A0               	movwf	i1LCDWriteInt@val
  4041                           
  4042                           ;lcd_hd44780_pic16.c: 337: i--;
  4043  0374  30FF               	movlw	255
  4044  0375  07AA               	addwf	i1LCDWriteInt@i,f
  4045  0376  30FF               	movlw	255
  4046  0377  3DAB               	addwfc	i1LCDWriteInt@i+1,f
  4047  0378  2B50               	goto	i1l2025
  4048  0379                     i1l2027:	
  4049                           
  4050                           ;lcd_hd44780_pic16.c: 338: }
  4051                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  4052  0379  0A22               	incf	i1LCDWriteInt@field_length,w
  4053  037A  1903               	btfsc	3,2
  4054  037B  2B8C               	goto	i1l2035
  4055                           
  4056                           ;lcd_hd44780_pic16.c: 341: else
  4057                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  4058                           
  4059                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  4060  037C  0822               	movf	i1LCDWriteInt@field_length,w
  4061  037D  00FC               	movwf	??i1_LCDWriteInt
  4062  037E  01FD               	clrf	??i1_LCDWriteInt+1
  4063  037F  1BFC               	btfsc	??i1_LCDWriteInt,7
  4064  0380  03FD               	decf	??i1_LCDWriteInt+1,f
  4065  0381  09FC               	comf	??i1_LCDWriteInt,f
  4066  0382  09FD               	comf	??i1_LCDWriteInt+1,f
  4067  0383  0AFC               	incf	??i1_LCDWriteInt,f
  4068  0384  1903               	skipnz
  4069  0385  0AFD               	incf	??i1_LCDWriteInt+1,f
  4070  0386  087C               	movf	??i1_LCDWriteInt,w
  4071  0387  3E05               	addlw	5
  4072  0388  00A8               	movwf	i1LCDWriteInt@j
  4073  0389  3000               	movlw	0
  4074  038A  3D7D               	addwfc	??i1_LCDWriteInt+1,w
  4075  038B  00A9               	movwf	i1LCDWriteInt@j+1
  4076  038C                     i1l2035:	
  4077                           
  4078                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  4079  038C  0829               	movf	i1LCDWriteInt@j+1,w
  4080  038D  00AB               	movwf	i1LCDWriteInt@i+1
  4081  038E  0828               	movf	i1LCDWriteInt@j,w
  4082  038F  00AA               	movwf	i1LCDWriteInt@i
  4083  0390                     L6:	
  4084  0390  082B               	movf	i1LCDWriteInt@i+1,w
  4085  0391  3A80               	xorlw	128
  4086  0392  00FC               	movwf	??i1_LCDWriteInt
  4087  0393  3080               	movlw	128
  4088  0394  027C               	subwf	??i1_LCDWriteInt,w
  4089  0395  1D03               	skipz
  4090  0396  2B99               	goto	u231_25
  4091  0397  3005               	movlw	5
  4092  0398  022A               	subwf	i1LCDWriteInt@i,w
  4093  0399                     u231_25:	
  4094  0399  1803               	btfsc	3,0
  4095  039A  0008               	return
  4096                           
  4097                           ;lcd_hd44780_pic16.c: 346: {
  4098                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  4099  039B  01F5               	clrf	i1LCDByte@isdata
  4100  039C  0AF5               	incf	i1LCDByte@isdata,f
  4101  039D  0020               	movlb	0	; select bank0
  4102  039E  082A               	movf	i1LCDWriteInt@i,w
  4103  039F  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4104  03A0  0086               	movwf	6
  4105  03A1  0187               	clrf	7
  4106  03A2  0801               	movf	1,w
  4107  03A3  3E30               	addlw	48
  4108  03A4  2560               	fcall	i1_LCDByte
  4109  03A5  3001               	movlw	1
  4110  03A6  0020               	movlb	0	; select bank0
  4111  03A7  07AA               	addwf	i1LCDWriteInt@i,f
  4112  03A8  3000               	movlw	0
  4113  03A9  3DAB               	addwfc	i1LCDWriteInt@i+1,f
  4114  03AA  2B90               	goto	L6
  4115  03AB                     __end_ofi1_LCDWriteInt:	
  4116                           
  4117                           	psect	text20
  4118  0684                     __ptext20:	
  4119 ;; *************** function i1___awmod *****************
  4120 ;; Defined at:
  4121 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  divisor         2    0[COMMON] int 
  4124 ;;  dividend        2    2[COMMON] int 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  __awmod         1    6[COMMON] unsigned char 
  4127 ;;  __awmod         1    5[COMMON] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  2    0[COMMON] int 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1
  4137 ;;      Params:         4       0       0
  4138 ;;      Locals:         2       0       0
  4139 ;;      Temps:          1       0       0
  4140 ;;      Totals:         7       0       0
  4141 ;;Total ram usage:        7 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		i1_LCDWriteInt
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function i1___awmod
  4152  0684                     i1___awmod:	
  4153                           
  4154                           ;incstack = 0
  4155                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4156  0684  01F6               	clrf	i1___awmod@sign
  4157  0685  1FF3               	btfss	i1___awmod@dividend+1,7
  4158  0686  2E8E               	goto	i1l1825
  4159  0687  09F2               	comf	i1___awmod@dividend,f
  4160  0688  09F3               	comf	i1___awmod@dividend+1,f
  4161  0689  0AF2               	incf	i1___awmod@dividend,f
  4162  068A  1903               	skipnz
  4163  068B  0AF3               	incf	i1___awmod@dividend+1,f
  4164  068C  01F6               	clrf	i1___awmod@sign
  4165  068D  0AF6               	incf	i1___awmod@sign,f
  4166  068E                     i1l1825:	
  4167  068E  1FF1               	btfss	i1___awmod@divisor+1,7
  4168  068F  2E95               	goto	i1l1829
  4169  0690  09F0               	comf	i1___awmod@divisor,f
  4170  0691  09F1               	comf	i1___awmod@divisor+1,f
  4171  0692  0AF0               	incf	i1___awmod@divisor,f
  4172  0693  1903               	skipnz
  4173  0694  0AF1               	incf	i1___awmod@divisor+1,f
  4174  0695                     i1l1829:	
  4175  0695  0870               	movf	i1___awmod@divisor,w
  4176  0696  0471               	iorwf	i1___awmod@divisor+1,w
  4177  0697  1903               	btfsc	3,2
  4178  0698  2EBC               	goto	i1l1847
  4179  0699  01F5               	clrf	i1___awmod@counter
  4180  069A  0AF5               	incf	i1___awmod@counter,f
  4181  069B                     i1l1837:	
  4182  069B  1BF1               	btfsc	i1___awmod@divisor+1,7
  4183  069C  2EA7               	goto	i1l1839
  4184  069D  3001               	movlw	1
  4185  069E                     u206_25:	
  4186  069E  35F0               	lslf	i1___awmod@divisor,f
  4187  069F  0DF1               	rlf	i1___awmod@divisor+1,f
  4188  06A0  0B89               	decfsz	9,f
  4189  06A1  2E9E               	goto	u206_25
  4190  06A2  3001               	movlw	1
  4191  06A3  00F4               	movwf	??i1___awmod
  4192  06A4  0874               	movf	??i1___awmod,w
  4193  06A5  07F5               	addwf	i1___awmod@counter,f
  4194  06A6  2E9B               	goto	i1l1837
  4195  06A7                     i1l1839:	
  4196  06A7  0871               	movf	i1___awmod@divisor+1,w
  4197  06A8  0273               	subwf	i1___awmod@dividend+1,w
  4198  06A9  1D03               	skipz
  4199  06AA  2EAD               	goto	u208_25
  4200  06AB  0870               	movf	i1___awmod@divisor,w
  4201  06AC  0272               	subwf	i1___awmod@dividend,w
  4202  06AD                     u208_25:	
  4203  06AD  1C03               	skipc
  4204  06AE  2EB3               	goto	i1l1843
  4205  06AF  0870               	movf	i1___awmod@divisor,w
  4206  06B0  02F2               	subwf	i1___awmod@dividend,f
  4207  06B1  0871               	movf	i1___awmod@divisor+1,w
  4208  06B2  3BF3               	subwfb	i1___awmod@dividend+1,f
  4209  06B3                     i1l1843:	
  4210  06B3  3001               	movlw	1
  4211  06B4                     u209_25:	
  4212  06B4  36F1               	lsrf	i1___awmod@divisor+1,f
  4213  06B5  0CF0               	rrf	i1___awmod@divisor,f
  4214  06B6  0B89               	decfsz	9,f
  4215  06B7  2EB4               	goto	u209_25
  4216  06B8  3001               	movlw	1
  4217  06B9  02F5               	subwf	i1___awmod@counter,f
  4218  06BA  1D03               	btfss	3,2
  4219  06BB  2EA7               	goto	i1l1839
  4220  06BC                     i1l1847:	
  4221  06BC  0876               	movf	i1___awmod@sign,w
  4222  06BD  1903               	btfsc	3,2
  4223  06BE  2EC4               	goto	i1l1851
  4224  06BF  09F2               	comf	i1___awmod@dividend,f
  4225  06C0  09F3               	comf	i1___awmod@dividend+1,f
  4226  06C1  0AF2               	incf	i1___awmod@dividend,f
  4227  06C2  1903               	skipnz
  4228  06C3  0AF3               	incf	i1___awmod@dividend+1,f
  4229  06C4                     i1l1851:	
  4230  06C4  0873               	movf	i1___awmod@dividend+1,w
  4231  06C5  00F1               	movwf	?i1___awmod+1
  4232  06C6  0872               	movf	i1___awmod@dividend,w
  4233  06C7  00F0               	movwf	?i1___awmod
  4234  06C8  0008               	return
  4235  06C9                     __end_ofi1___awmod:	
  4236                           
  4237                           	psect	text21
  4238  050F                     __ptext21:	
  4239 ;; *************** function i1___awdiv *****************
  4240 ;; Defined at:
  4241 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  divisor         2    0[COMMON] int 
  4244 ;;  dividend        2    2[COMMON] int 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  __awdiv         2    7[COMMON] int 
  4247 ;;  __awdiv         1    6[COMMON] unsigned char 
  4248 ;;  __awdiv         1    5[COMMON] unsigned char 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  2    0[COMMON] int 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1
  4258 ;;      Params:         4       0       0
  4259 ;;      Locals:         4       0       0
  4260 ;;      Temps:          1       0       0
  4261 ;;      Totals:         9       0       0
  4262 ;;Total ram usage:        9 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		i1_LCDWriteInt
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function i1___awdiv
  4273  050F                     i1___awdiv:	
  4274                           
  4275                           ;incstack = 0
  4276                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4277  050F  01F6               	clrf	i1___awdiv@sign
  4278  0510  1FF1               	btfss	i1___awdiv@divisor+1,7
  4279  0511  2D19               	goto	i1l1781
  4280  0512  09F0               	comf	i1___awdiv@divisor,f
  4281  0513  09F1               	comf	i1___awdiv@divisor+1,f
  4282  0514  0AF0               	incf	i1___awdiv@divisor,f
  4283  0515  1903               	skipnz
  4284  0516  0AF1               	incf	i1___awdiv@divisor+1,f
  4285  0517  01F6               	clrf	i1___awdiv@sign
  4286  0518  0AF6               	incf	i1___awdiv@sign,f
  4287  0519                     i1l1781:	
  4288  0519  1FF3               	btfss	i1___awdiv@dividend+1,7
  4289  051A  2D24               	goto	i1l1787
  4290  051B  09F2               	comf	i1___awdiv@dividend,f
  4291  051C  09F3               	comf	i1___awdiv@dividend+1,f
  4292  051D  0AF2               	incf	i1___awdiv@dividend,f
  4293  051E  1903               	skipnz
  4294  051F  0AF3               	incf	i1___awdiv@dividend+1,f
  4295  0520  3001               	movlw	1
  4296  0521  00F4               	movwf	??i1___awdiv
  4297  0522  0874               	movf	??i1___awdiv,w
  4298  0523  06F6               	xorwf	i1___awdiv@sign,f
  4299  0524                     i1l1787:	
  4300  0524  01F7               	clrf	i1___awdiv@quotient
  4301  0525  01F8               	clrf	i1___awdiv@quotient+1
  4302  0526  0870               	movf	i1___awdiv@divisor,w
  4303  0527  0471               	iorwf	i1___awdiv@divisor+1,w
  4304  0528  1903               	btfsc	3,2
  4305  0529  2D53               	goto	i1l1809
  4306  052A  01F5               	clrf	i1___awdiv@counter
  4307  052B  0AF5               	incf	i1___awdiv@counter,f
  4308  052C                     i1l1797:	
  4309  052C  1BF1               	btfsc	i1___awdiv@divisor+1,7
  4310  052D  2D38               	goto	i1l1799
  4311  052E  3001               	movlw	1
  4312  052F                     u196_25:	
  4313  052F  35F0               	lslf	i1___awdiv@divisor,f
  4314  0530  0DF1               	rlf	i1___awdiv@divisor+1,f
  4315  0531  0B89               	decfsz	9,f
  4316  0532  2D2F               	goto	u196_25
  4317  0533  3001               	movlw	1
  4318  0534  00F4               	movwf	??i1___awdiv
  4319  0535  0874               	movf	??i1___awdiv,w
  4320  0536  07F5               	addwf	i1___awdiv@counter,f
  4321  0537  2D2C               	goto	i1l1797
  4322  0538                     i1l1799:	
  4323  0538  3001               	movlw	1
  4324  0539                     u198_25:	
  4325  0539  35F7               	lslf	i1___awdiv@quotient,f
  4326  053A  0DF8               	rlf	i1___awdiv@quotient+1,f
  4327  053B  0B89               	decfsz	9,f
  4328  053C  2D39               	goto	u198_25
  4329  053D  0871               	movf	i1___awdiv@divisor+1,w
  4330  053E  0273               	subwf	i1___awdiv@dividend+1,w
  4331  053F  1D03               	skipz
  4332  0540  2D43               	goto	u199_25
  4333  0541  0870               	movf	i1___awdiv@divisor,w
  4334  0542  0272               	subwf	i1___awdiv@dividend,w
  4335  0543                     u199_25:	
  4336  0543  1C03               	skipc
  4337  0544  2D4A               	goto	i1l1805
  4338  0545  0870               	movf	i1___awdiv@divisor,w
  4339  0546  02F2               	subwf	i1___awdiv@dividend,f
  4340  0547  0871               	movf	i1___awdiv@divisor+1,w
  4341  0548  3BF3               	subwfb	i1___awdiv@dividend+1,f
  4342  0549  1477               	bsf	i1___awdiv@quotient,0
  4343  054A                     i1l1805:	
  4344  054A  3001               	movlw	1
  4345  054B                     u200_25:	
  4346  054B  36F1               	lsrf	i1___awdiv@divisor+1,f
  4347  054C  0CF0               	rrf	i1___awdiv@divisor,f
  4348  054D  0B89               	decfsz	9,f
  4349  054E  2D4B               	goto	u200_25
  4350  054F  3001               	movlw	1
  4351  0550  02F5               	subwf	i1___awdiv@counter,f
  4352  0551  1D03               	btfss	3,2
  4353  0552  2D38               	goto	i1l1799
  4354  0553                     i1l1809:	
  4355  0553  0876               	movf	i1___awdiv@sign,w
  4356  0554  1903               	btfsc	3,2
  4357  0555  2D5B               	goto	i1l1813
  4358  0556  09F7               	comf	i1___awdiv@quotient,f
  4359  0557  09F8               	comf	i1___awdiv@quotient+1,f
  4360  0558  0AF7               	incf	i1___awdiv@quotient,f
  4361  0559  1903               	skipnz
  4362  055A  0AF8               	incf	i1___awdiv@quotient+1,f
  4363  055B                     i1l1813:	
  4364  055B  0878               	movf	i1___awdiv@quotient+1,w
  4365  055C  00F1               	movwf	?i1___awdiv+1
  4366  055D  0877               	movf	i1___awdiv@quotient,w
  4367  055E  00F0               	movwf	?i1___awdiv
  4368  055F  0008               	return
  4369  0560                     __end_ofi1___awdiv:	
  4370                           
  4371                           	psect	text22
  4372  0778                     __ptext22:	
  4373 ;; *************** function i1_LCDGotoXY *****************
  4374 ;; Defined at:
  4375 ;;		line 355 in file "lcd_hd44780_pic16.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  x               1    wreg     unsigned char 
  4378 ;;  y               1   12[COMMON] unsigned char 
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  x               1    0[BANK0 ] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      void 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1
  4390 ;;      Params:         1       0       0
  4391 ;;      Locals:         0       1       0
  4392 ;;      Temps:          1       0       0
  4393 ;;      Totals:         2       1       0
  4394 ;;Total ram usage:        3 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    2
  4397 ;; This function calls:
  4398 ;;		i1_LCDByte
  4399 ;; This function is called by:
  4400 ;;		_ISR
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function i1_LCDGotoXY
  4406  0778                     i1_LCDGotoXY:	
  4407                           
  4408                           ;incstack = 0
  4409                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4410                           ;i1LCDGotoXY@x stored from wreg
  4411  0778  0020               	movlb	0	; select bank0
  4412  0779  00A0               	movwf	i1LCDGotoXY@x
  4413                           
  4414                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  4415  077A  3014               	movlw	20
  4416  077B  0220               	subwf	i1LCDGotoXY@x,w
  4417  077C  1803               	btfsc	3,0
  4418  077D  0008               	return
  4419  077E  2F88               	goto	i1l2057
  4420  077F                     i1l70:	
  4421                           ;lcd_hd44780_pic16.c: 365: case 1:
  4422                           
  4423                           ;lcd_hd44780_pic16.c: 364: break;
  4424                           
  4425                           ;lcd_hd44780_pic16.c: 362: {
  4426                           ;lcd_hd44780_pic16.c: 363: case 0:
  4427                           
  4428                           ;lcd_hd44780_pic16.c: 361: switch(y)
  4429                           
  4430                           
  4431                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  4432  077F  1720               	bsf	i1LCDGotoXY@x,6
  4433                           
  4434                           ;lcd_hd44780_pic16.c: 367: break;
  4435  0780  2F96               	goto	i1l69
  4436  0781                     i1l2051:	
  4437                           ;lcd_hd44780_pic16.c: 368: case 2:
  4438                           
  4439                           
  4440                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  4441  0781  3014               	movlw	20
  4442  0782  2F84               	goto	L7
  4443  0783                     i1l2053:	
  4444                           ;lcd_hd44780_pic16.c: 371: case 3:
  4445                           
  4446                           ;lcd_hd44780_pic16.c: 370: break;
  4447                           
  4448                           
  4449                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  4450  0783  3054               	movlw	84
  4451  0784                     L7:	
  4452  0784  00FD               	movwf	??i1_LCDGotoXY
  4453  0785  087D               	movf	??i1_LCDGotoXY,w
  4454  0786  07A0               	addwf	i1LCDGotoXY@x,f
  4455                           
  4456                           ;lcd_hd44780_pic16.c: 374: }
  4457                           
  4458                           ;lcd_hd44780_pic16.c: 373: break;
  4459  0787  2F96               	goto	i1l69
  4460  0788                     i1l2057:	
  4461  0788  087C               	movf	i1LCDGotoXY@y,w
  4462                           
  4463                           ; Switch size 1, requested type "space"
  4464                           ; Number of cases is 4, Range of values is 0 to 3
  4465                           ; switch strategies available:
  4466                           ; Name         Instructions Cycles
  4467                           ; simple_byte           13     7 (average)
  4468                           ; direct_byte           14     6 (fixed)
  4469                           ; jumptable            260     6 (fixed)
  4470                           ;	Chosen strategy is simple_byte
  4471  0789  3A00               	xorlw	0	; case 0
  4472  078A  1903               	skipnz
  4473  078B  2F96               	goto	i1l69
  4474  078C  3A01               	xorlw	1	; case 1
  4475  078D  1903               	skipnz
  4476  078E  2F7F               	goto	i1l70
  4477  078F  3A03               	xorlw	3	; case 2
  4478  0790  1903               	skipnz
  4479  0791  2F81               	goto	i1l2051
  4480  0792  3A01               	xorlw	1	; case 3
  4481  0793  1903               	skipnz
  4482  0794  2F83               	goto	i1l2053
  4483  0795  2F96               	goto	i1l69
  4484  0796                     i1l69:	
  4485                           
  4486                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  4487  0796  17A0               	bsf	i1LCDGotoXY@x,7
  4488                           
  4489                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  4490  0797  01F5               	clrf	i1LCDByte@isdata
  4491  0798  0820               	movf	i1LCDGotoXY@x,w
  4492  0799  2560               	fcall	i1_LCDByte
  4493  079A  0008               	return
  4494  079B                     __end_ofi1_LCDGotoXY:	
  4495                           
  4496                           	psect	text23
  4497  0560                     __ptext23:	
  4498 ;; *************** function i1_LCDByte *****************
  4499 ;; Defined at:
  4500 ;;		line 80 in file "lcd_hd44780_pic16.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  c               1    wreg     unsigned char 
  4503 ;;  isdata          1    5[COMMON] unsigned char 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  c               1   10[COMMON] unsigned char 
  4506 ;;  LCDByte         1   11[COMMON] unsigned char 
  4507 ;;  LCDByte         1    9[COMMON] unsigned char 
  4508 ;;  LCDByte         1    8[COMMON] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, pclath, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1
  4518 ;;      Params:         1       0       0
  4519 ;;      Locals:         4       0       0
  4520 ;;      Temps:          2       0       0
  4521 ;;      Totals:         7       0       0
  4522 ;;Total ram usage:        7 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    1
  4525 ;; This function calls:
  4526 ;;		i1_LCDBusyLoop
  4527 ;; This function is called by:
  4528 ;;		i1_LCDWriteInt
  4529 ;;		i1_LCDGotoXY
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           
  4534                           ;psect for function i1_LCDByte
  4535  0560                     i1_LCDByte:	
  4536                           
  4537                           ;incstack = 0
  4538                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  4539                           ;i1LCDByte@c stored from wreg
  4540  0560  00FA               	movwf	i1LCDByte@c
  4541                           
  4542                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  4543                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  4544                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  4545  0561  087A               	movf	i1LCDByte@c,w
  4546  0562  00F6               	movwf	??i1_LCDByte
  4547  0563  3004               	movlw	4
  4548  0564                     u189_25:	
  4549  0564  36F6               	lsrf	??i1_LCDByte,f
  4550  0565  0B89               	decfsz	9,f
  4551  0566  2D64               	goto	u189_25
  4552  0567  0876               	movf	??i1_LCDByte,w
  4553  0568  00F7               	movwf	??i1_LCDByte+1
  4554  0569  0877               	movf	??i1_LCDByte+1,w
  4555  056A  00F8               	movwf	i1LCDByte@hn
  4556                           
  4557                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  4558  056B  087A               	movf	i1LCDByte@c,w
  4559  056C  390F               	andlw	15
  4560  056D  00F6               	movwf	??i1_LCDByte
  4561  056E  0876               	movf	??i1_LCDByte,w
  4562  056F  00F9               	movwf	i1LCDByte@ln
  4563                           
  4564                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  4565  0570  0875               	movf	i1LCDByte@isdata,w
  4566  0571  1D03               	btfss	3,2
  4567  0572  2D76               	goto	i1l23
  4568                           
  4569                           ;lcd_hd44780_pic16.c: 96: (RC0=0);
  4570  0573  0020               	movlb	0	; select bank0
  4571  0574  100E               	bcf	14,0	;volatile
  4572  0575  2D78               	goto	i1l24
  4573  0576                     i1l23:	
  4574                           
  4575                           ;lcd_hd44780_pic16.c: 97: else
  4576                           ;lcd_hd44780_pic16.c: 98: (RC0=1);
  4577  0576  0020               	movlb	0	; select bank0
  4578  0577  140E               	bsf	14,0	;volatile
  4579  0578                     i1l24:	
  4580                           
  4581                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4582  0578  3200               	nop2	;2 cycle nop
  4583                           
  4584                           ;lcd_hd44780_pic16.c: 102: (RC1=1);
  4585  0579  0020               	movlb	0	; select bank0
  4586  057A  148E               	bsf	14,1	;volatile
  4587                           
  4588                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  4589  057B  0878               	movf	i1LCDByte@hn,w
  4590  057C  00F6               	movwf	??i1_LCDByte
  4591  057D  3002               	movlw	2
  4592  057E                     u191_25:	
  4593  057E  35F6               	lslf	??i1_LCDByte,f
  4594  057F  0B89               	decfsz	9,f
  4595  0580  2D7E               	goto	u191_25
  4596  0581  080E               	movf	14,w	;volatile
  4597  0582  39C3               	andlw	195
  4598  0583  0476               	iorwf	??i1_LCDByte,w
  4599  0584  00F7               	movwf	??i1_LCDByte+1
  4600  0585  0877               	movf	??i1_LCDByte+1,w
  4601  0586  00FB               	movwf	i1LCDByte@temp
  4602                           
  4603                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  4604  0587  087B               	movf	i1LCDByte@temp,w
  4605  0588  008E               	movwf	14	;volatile
  4606                           
  4607                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4608  0589  3200               	nop2	;2 cycle nop
  4609  058A  3200               	nop2	;2 cycle nop
  4610  058B  0000               	nop
  4611                           
  4612                           ;lcd_hd44780_pic16.c: 113: (RC1=0);
  4613  058C  0020               	movlb	0	; select bank0
  4614  058D  108E               	bcf	14,1	;volatile
  4615                           
  4616                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4617  058E  3200               	nop2	;2 cycle nop
  4618  058F  3200               	nop2	;2 cycle nop
  4619  0590  0000               	nop
  4620                           
  4621                           ;lcd_hd44780_pic16.c: 118: (RC1=1);
  4622  0591  0020               	movlb	0	; select bank0
  4623  0592  148E               	bsf	14,1	;volatile
  4624                           
  4625                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  4626  0593  0879               	movf	i1LCDByte@ln,w
  4627  0594  00F6               	movwf	??i1_LCDByte
  4628  0595  3002               	movlw	2
  4629  0596                     u192_25:	
  4630  0596  35F6               	lslf	??i1_LCDByte,f
  4631  0597  0B89               	decfsz	9,f
  4632  0598  2D96               	goto	u192_25
  4633  0599  080E               	movf	14,w	;volatile
  4634  059A  39C3               	andlw	195
  4635  059B  0476               	iorwf	??i1_LCDByte,w
  4636  059C  00F7               	movwf	??i1_LCDByte+1
  4637  059D  0877               	movf	??i1_LCDByte+1,w
  4638  059E  00FB               	movwf	i1LCDByte@temp
  4639                           
  4640                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  4641  059F  087B               	movf	i1LCDByte@temp,w
  4642  05A0  008E               	movwf	14	;volatile
  4643                           
  4644                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4645  05A1  3200               	nop2	;2 cycle nop
  4646  05A2  3200               	nop2	;2 cycle nop
  4647  05A3  0000               	nop
  4648                           
  4649                           ;lcd_hd44780_pic16.c: 128: (RC1=0);
  4650  05A4  0020               	movlb	0	; select bank0
  4651  05A5  108E               	bcf	14,1	;volatile
  4652                           
  4653                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4654  05A6  3200               	nop2	;2 cycle nop
  4655  05A7  3200               	nop2	;2 cycle nop
  4656  05A8  0000               	nop
  4657                           
  4658                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  4659  05A9  2467               	fcall	i1_LCDBusyLoop
  4660  05AA  0008               	return
  4661  05AB                     __end_ofi1_LCDByte:	
  4662                           
  4663                           	psect	text24
  4664  0467                     __ptext24:	
  4665 ;; *************** function i1_LCDBusyLoop *****************
  4666 ;; Defined at:
  4667 ;;		line 135 in file "lcd_hd44780_pic16.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;		None
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  4672 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  4673 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1
  4683 ;;      Params:         0       0       0
  4684 ;;      Locals:         3       0       0
  4685 ;;      Temps:          2       0       0
  4686 ;;      Totals:         5       0       0
  4687 ;;Total ram usage:        5 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		i1_LCDByte
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           
  4697                           ;psect for function i1_LCDBusyLoop
  4698  0467                     i1_LCDBusyLoop:	
  4699                           
  4700                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4701                           
  4702                           ;incstack = 0
  4703                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  4704  0467  01F4               	clrf	i1LCDBusyLoop@status
  4705                           
  4706                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<2);
  4707  0468  303C               	movlw	60
  4708  0469  00F0               	movwf	??i1_LCDBusyLoop
  4709  046A  0870               	movf	??i1_LCDBusyLoop,w
  4710  046B  0021               	movlb	1	; select bank1
  4711  046C  048E               	iorwf	14,f	;volatile
  4712                           
  4713                           ;lcd_hd44780_pic16.c: 145: (RA0=1);
  4714  046D  0020               	movlb	0	; select bank0
  4715  046E  140C               	bsf	12,0	;volatile
  4716                           
  4717                           ;lcd_hd44780_pic16.c: 146: (RC0=0);
  4718  046F  100E               	bcf	14,0	;volatile
  4719                           
  4720                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4721  0470  3200               	nop2	;2 cycle nop
  4722  0471                     i1l1483:	
  4723                           ;lcd_hd44780_pic16.c: 153: do
  4724                           
  4725                           
  4726                           ;lcd_hd44780_pic16.c: 154: {
  4727                           ;lcd_hd44780_pic16.c: 156: (RC1=1);
  4728  0471  0020               	movlb	0	; select bank0
  4729  0472  148E               	bsf	14,1	;volatile
  4730                           
  4731                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4732  0473  3200               	nop2	;2 cycle nop
  4733                           
  4734                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>2);
  4735  0474  0020               	movlb	0	; select bank0
  4736  0475  080E               	movf	14,w	;volatile
  4737  0476  00F0               	movwf	??i1_LCDBusyLoop
  4738  0477  3002               	movlw	2
  4739  0478                     u138_25:	
  4740  0478  36F0               	lsrf	??i1_LCDBusyLoop,f
  4741  0479  0B89               	decfsz	9,f
  4742  047A  2C78               	goto	u138_25
  4743  047B  0870               	movf	??i1_LCDBusyLoop,w
  4744  047C  00F1               	movwf	??i1_LCDBusyLoop+1
  4745  047D  0871               	movf	??i1_LCDBusyLoop+1,w
  4746  047E  00F4               	movwf	i1LCDBusyLoop@status
  4747                           
  4748                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4749  047F  0874               	movf	i1LCDBusyLoop@status,w
  4750  0480  00F0               	movwf	??i1_LCDBusyLoop
  4751  0481  3003               	movlw	3
  4752  0482                     u139_25:	
  4753  0482  35F0               	lslf	??i1_LCDBusyLoop,f
  4754  0483  3EFF               	addlw	-1
  4755  0484  1D03               	skipz
  4756  0485  2C82               	goto	u139_25
  4757  0486  3570               	lslf	??i1_LCDBusyLoop,w
  4758  0487  00F1               	movwf	??i1_LCDBusyLoop+1
  4759  0488  0871               	movf	??i1_LCDBusyLoop+1,w
  4760  0489  00F4               	movwf	i1LCDBusyLoop@status
  4761                           
  4762                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4763  048A  3200               	nop2	;2 cycle nop
  4764                           
  4765                           ;lcd_hd44780_pic16.c: 167: (RC1=0);
  4766  048B  0020               	movlb	0	; select bank0
  4767  048C  108E               	bcf	14,1	;volatile
  4768                           
  4769                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4770  048D  3200               	nop2	;2 cycle nop
  4771  048E  3200               	nop2	;2 cycle nop
  4772  048F  0000               	nop
  4773                           
  4774                           ;lcd_hd44780_pic16.c: 170: (RC1=1);
  4775  0490  0020               	movlb	0	; select bank0
  4776  0491  148E               	bsf	14,1	;volatile
  4777                           
  4778                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4779  0492  3200               	nop2	;2 cycle nop
  4780                           
  4781                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>2);
  4782  0493  0020               	movlb	0	; select bank0
  4783  0494  080E               	movf	14,w	;volatile
  4784  0495  00F0               	movwf	??i1_LCDBusyLoop
  4785  0496  3002               	movlw	2
  4786  0497                     u140_25:	
  4787  0497  36F0               	lsrf	??i1_LCDBusyLoop,f
  4788  0498  0B89               	decfsz	9,f
  4789  0499  2C97               	goto	u140_25
  4790  049A  0870               	movf	??i1_LCDBusyLoop,w
  4791  049B  00F1               	movwf	??i1_LCDBusyLoop+1
  4792  049C  0871               	movf	??i1_LCDBusyLoop+1,w
  4793  049D  00F3               	movwf	i1LCDBusyLoop@temp
  4794                           
  4795                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  4796  049E  300F               	movlw	15
  4797  049F  00F0               	movwf	??i1_LCDBusyLoop
  4798  04A0  0870               	movf	??i1_LCDBusyLoop,w
  4799  04A1  05F3               	andwf	i1LCDBusyLoop@temp,f
  4800                           
  4801                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  4802  04A2  0874               	movf	i1LCDBusyLoop@status,w
  4803  04A3  0473               	iorwf	i1LCDBusyLoop@temp,w
  4804  04A4  00F0               	movwf	??i1_LCDBusyLoop
  4805  04A5  0870               	movf	??i1_LCDBusyLoop,w
  4806  04A6  00F4               	movwf	i1LCDBusyLoop@status
  4807                           
  4808                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  4809  04A7  0874               	movf	i1LCDBusyLoop@status,w
  4810  04A8  3980               	andlw	128
  4811  04A9  00F0               	movwf	??i1_LCDBusyLoop
  4812  04AA  0870               	movf	??i1_LCDBusyLoop,w
  4813  04AB  00F2               	movwf	i1LCDBusyLoop@busy
  4814                           
  4815                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4816  04AC  3200               	nop2	;2 cycle nop
  4817                           
  4818                           ;lcd_hd44780_pic16.c: 182: (RC1=0);
  4819  04AD  0020               	movlb	0	; select bank0
  4820  04AE  108E               	bcf	14,1	;volatile
  4821                           
  4822                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4823  04AF  3200               	nop2	;2 cycle nop
  4824  04B0  3200               	nop2	;2 cycle nop
  4825  04B1  0000               	nop
  4826                           
  4827                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  4828  04B2  0872               	movf	i1LCDBusyLoop@busy,w
  4829  04B3  1D03               	btfss	3,2
  4830  04B4  2C71               	goto	i1l1483
  4831                           
  4832                           ;lcd_hd44780_pic16.c: 186: (RA0=0);
  4833  04B5  0020               	movlb	0	; select bank0
  4834  04B6  100C               	bcf	12,0	;volatile
  4835                           
  4836                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<2));
  4837  04B7  30C3               	movlw	195
  4838  04B8  00F0               	movwf	??i1_LCDBusyLoop
  4839  04B9  0870               	movf	??i1_LCDBusyLoop,w
  4840  04BA  0021               	movlb	1	; select bank1
  4841  04BB  058E               	andwf	14,f	;volatile
  4842  04BC  0008               	return
  4843  04BD                     __end_ofi1_LCDBusyLoop:	
  4844  007E                     btemp	set	126	;btemp
  4845  007E                     int$flags	set	126
  4846  007E                     wtemp	set	126
  4847  007E                     wtemp0	set	126
  4848  0080                     wtemp1	set	128
  4849  0082                     wtemp2	set	130
  4850  0084                     wtemp3	set	132
  4851  0086                     wtemp4	set	134
  4852  0088                     wtemp5	set	136
  4853  007F                     wtemp6	set	127
  4854  007E                     ttemp	set	126
  4855  007E                     ttemp0	set	126
  4856  0081                     ttemp1	set	129
  4857  0084                     ttemp2	set	132
  4858  0087                     ttemp3	set	135
  4859  007F                     ttemp4	set	127
  4860  007E                     ltemp	set	126
  4861  007E                     ltemp0	set	126
  4862  0082                     ltemp1	set	130
  4863  0086                     ltemp2	set	134
  4864  0080                     ltemp3	set	128


Data Sizes:
    Strings     26
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      65
    BANK1            32      9      17

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LM35ReadTemp
    _LM35ReadTemp->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _LM35ReadTemp->___fttol

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13851
                                              6 BANK1      3     3      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                       _LM35ReadTemp
                     _TriggerOutInit
                     _TuneButtonInit
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TriggerOutInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35ReadTemp                                         4     2      2    5050
                                             51 BANK0      4     2      2
                            _ReadADC
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2078
                                             23 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             43 BANK0      8     4      4
                                              0 BANK1      6     6      0
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2446
                                             27 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1992
                                             15 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2      44
                                             15 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1734
                                             27 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2855
                                             27 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                             15 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                             15 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1250
                                             27 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1919
                                             27 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1043
                                             20 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                             15 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0    1916
                                             12 BANK0      3     3      0
                        i1_LCDGotoXY
                      i1_LCDWriteInt
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    1467
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     449
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     353
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LM35ReadTemp
     _ReadADC
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _TriggerOutInit
   _TuneButtonInit

 _ISR (ROOT)
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      60       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     37      41       6       81.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      9      11       8       53.1%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      60       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jun 15 21:50:47 2016

             ?_LCDBusyLoop 0070                 __CFG_CP$ON 0000                         l23 05C1  
                       l24 05C2                         l70 075C                         l69 0773  
              __CFG_CPD$ON 0000               ___awdiv@sign 0035                __CFG_LVP$ON 0000  
                      l410 03DE                        l501 0289                        l158 074B  
                      l417 03F1                        l418 03F9                        _RA0 0060  
                      _RA1 0061                        _RC0 0070                        _RA4 0064  
                      _RC1 0071                        _RA5 0065                        _ISR 0004  
          __end_of_ADCInit 07DB               ___awmod@sign 0035               __CFG_BORV$LO 0000  
                      wreg 0009               __CFG_IESO$ON 0000      LM35ReadTemp@adc_value 0055  
  LCDWriteInt@field_length 003D            __end_of_LCDByte 05F5            __end_of_LCDInit 063E  
             ?_LCDWriteInt 003B                       ?_ISR 0070                LCDByte@temp 003A  
                     l1405 041B                       l1601 0502                       l1451 03C5  
                     l1605 050A                       l1621 0650                       l1461 03EB  
                     l1453 03CA                       l1445 03B4                       l1631 0662  
                     l2167 0227                       l1617 0649                       l1449 03BB  
                     l2193 027F                       l2185 0260                       l2265 00FF  
                     l1643 067F                       l1635 066E                       l1555 0737  
                     l1459 03E3                       l2195 028D                       l2187 0271  
                     l2283 0126                       l1573 04C8                       l1629 0656  
                     l1653 0170                       l2277 013D                       l1591 04E7  
                     l1639 0677                       l1671 01C1                       l2199 029B  
                     l1579 04D3                       l1923 06F7                       l1683 01DD  
                     l1675 01C9                       l1659 0186                       l1597 04F9  
                     l1589 04DB                       l1951 02D0                       l1919 06F2  
                     l1927 06C9                       l1687 01E5                       l1961 030C  
                     l1953 02F9                       l1983 0765                       l1977 075E  
                     l1979 0760                       STR_1 079B                       STR_2 07AD  
                     STR_3 07A9                       STR_4 07A0                       STR_5 07AD  
                     STR_6 07B1                       STR_7 07A5                       STR_8 07B1  
                     u1225 0422                       u1305 03D9                       u1235 042C  
                     u1245 0441                       u1325 03E6                       u1425 05B0  
                     u1515 04DE                       u2235 0319                       u2180 02B6  
                     u1445 05C8                       u1365 0400                       u1285 03C0  
                     u1455 05E0                       u1535 04E8                       u1615 0659  
                     u1545 04F2                       u1705 01A2                       u2505 0280  
                     u1555 04FA                       u1635 0668                       u1645 066F  
                     u1725 01CA                       u2445 022F                       u2607 05FB  
                     u1735 01D0                       u2535 00DE                       u2545 00EF  
                     u2475 0261                       u2555 0117                       u1765 01E6  
                     u2565 0138                       u1775 01EC                       u1695 0192  
                     u2587 0153                       u2597 0746                       i1l23 0576  
                     i1l24 0578                       i1l70 077F                       i1l69 0796  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 0063  
             ___ftpack@arg 002F     __end_of_TuneButtonInit 07F5         __size_of_LCDGotoXY 0023  
             ___ftpack@exp 0032                       fsr0h 0005                       fsr1h 0007  
                     fsr0l 0004                       indf0 0000                       indf1 0001  
                     fsr1l 0006                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0047                       ttemp 007E  
                     wtemp 007E  i1LCDWriteInt@field_length 0022               ___ftmul@cntr 0049  
             ___ftmul@sign 004A            __end_of_ReadADC 0755                      ??_ISR 002C  
       __size_ofi1_LCDByte 004B               ___fttol@exp1 00A5               ___fttol@lval 00A1  
            __CFG_PLLEN$ON 0000               ?i1_LCDGotoXY 007C                      ?_main 0070  
           i1___awdiv@sign 0076            __end_of___awdiv 050F              __CFG_WDTE$OFF 0000  
          __end_of___awmod 0684               LCDInit@style 003D            __end_of___ftmul 020C  
          ___awdiv@divisor 002F            __end_of___fttol 02AB                      i1l123 0042  
                    i1l118 0041            ___awdiv@counter 0034                      _PORTC 000E  
                    _TRISC 008E             i1___awmod@sign 0076              ___ftpack@sign 0033  
     __end_of_LM35ReadTemp 072E                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          ?_TuneButtonInit 0070         __size_ofi1___awdiv 0051         __size_ofi1___awmod 0045  
           __CFG_MCLRE$OFF 0000            __initialization 0048               __end_of_main 0159  
                ??_ADCInit 002F                     ??_main 00A6              ___fttol@sign1 00A0  
        __end_of_LCDGotoXY 0778              LCDByte@isdata 0034                  ??_LCDByte 0035  
                ??_LCDInit 003B                     _ADRESH 009C                     _ADRESL 009B  
         ___awdiv@dividend 0031          __end_ofi1_LCDByte 05AB           __end_of___ftpack 0410  
   __size_ofi1_LCDBusyLoop 0056                     i1l2025 0350                     i1l2051 0781  
                   i1l2035 038C                     i1l2027 0379                     i1l2053 0783  
                   i1l2071 0022                     i1l2057 0788                     i1l2067 000F  
                   u200_25 054B                     i1l2077 003A                     i1l1483 0471  
                   i1l1813 055B                     i1l1805 054A                     i1l1809 0553  
                   i1l1825 068E                     i1l1851 06C4                     i1l1843 06B3  
                   i1l1781 0519                     i1l1837 069B                     i1l1829 0695  
                   i1l1839 06A7                     i1l1847 06BC                     i1l1787 0524  
                   i1l1797 052C                     i1l1799 0538        i1LCDBusyLoop@status 0074  
                   u140_25 0497                     u206_25 069E                     u231_25 0399  
                   u208_25 06AD                     u209_25 06B4                     u226_20 0335  
                   u138_25 0478                     u139_25 0482                     u236_25 001D  
                   u261_27 0035                     u191_25 057E                     u192_25 0596  
         __end_of___lwtoft 07C9                     u196_25 052F                     u189_25 0564  
                   u198_25 0539                     u199_25 0543                  ??_ReadADC 0031  
            _tuneUpTempDir 005C             __CFG_PWRTE$OFF 0000             _LCDWriteString 06C9  
                ??___awdiv 0033             __CFG_STVREN$ON 0000                  ??___awmod 0033  
                ??___ftmul 0041                  ??___fttol 004F     __size_ofi1_LCDWriteInt 0080  
     __size_of_LCDBusyLoop 0057           i1LCDWriteInt@val 0020           i1LCDWriteInt@str 0023  
         ___awdiv@quotient 0036            ___awmod@divisor 002F            ___awmod@counter 0034  
    ___ftmul@f3_as_product 0046          __end_ofi1___awdiv 0560          __end_ofi1___awmod 06C9  
             LCDWriteInt@i 0047               LCDWriteInt@j 0045           ??_TriggerOutInit 002F  
     __size_of_LCDWriteInt 0080    __end_of__initialization 0060     __end_of_LCDWriteString 0706  
                LCDByte@hn 0037                  LCDByte@ln 0038                 ___ftmul@f1 003B  
               ___ftmul@f2 003E                 ___fttol@f1 004B             __pcstackCOMMON 0070  
             __pidataBANK0 07E3               __pidataBANK1 07DB              i1_LCDBusyLoop 0467  
               ___lwtoft@c 0037               i1LCDGotoXY@x 0020               i1LCDGotoXY@y 007C  
        i1LCDBusyLoop@busy 0072          i1LCDBusyLoop@temp 0073       __size_ofi1_LCDGotoXY 0023  
    __size_of_LM35ReadTemp 0028             i1LCDWriteInt@i 002A             i1LCDWriteInt@j 0028  
          i1LCDByte@isdata 0075              i1_LCDWriteInt 032B                 __pbssBANK0 005D  
          ?_LCDWriteString 003B                 __pmaintext 0063             ?i1_LCDBusyLoop 0070  
               __pintentry 0004                    _ADCInit 07C9               _LM35ReadTemp 0706  
                ?___ftpack 002F                  ?___lwtoft 0037         i1___awdiv@dividend 0072  
                  _LCDByte 05AB                    _LCDInit 05F5           ??_TuneButtonInit 002F  
           ?i1_LCDWriteInt 0020                    _ReadADC 072E         i1___awdiv@quotient 0077  
                  ___cgram 00A9                    ___awdiv 04BD                    ___awmod 063E  
                  ___ftmul 0159                    ___fttol 020C                 ??___ftpack 0034  
                  __ptext1 07EF                    __ptext2 07F5                    __ptext3 0706  
                  __ptext4 07B5                    __ptext5 020C                    __ptext6 0159  
                  __ptext7 03AB                    __ptext8 072E                    __ptext9 06C9  
               ??___lwtoft 003A                    _curTemp 005D               __size_of_ISR 0043  
         ___awmod@dividend 0031                  _IOCAFbits 0393                  _LCDGotoXY 0755  
     end_of_initialization 0060                    init_ram 07E9                    initloop 07EA  
                i1_LCDByte 0560            ??i1_LCDBusyLoop 0070               __pstringtext 079B  
        LCDWriteString@msg 003B           __CFG_FOSC$INTOSC 0000                  _TRISAbits 008C  
                _TRISCbits 008E            ??i1_LCDWriteInt 007C                 ?_LCDGotoXY 003B  
                i1___awdiv 050F                  i1___awmod 0684                  ReadADC@ch 0032  
               LCDInit@__i 003E                 ?i1_LCDByte 0075                 LCDGotoXY@x 003D  
               LCDGotoXY@y 003B                 _tuneUpTemp 005F                ___ftmul@exp 0045  
            ??_LCDBusyLoop 002F        start_initialization 0048                __end_of_ISR 0047  
               ?i1___awdiv 0070                 ?i1___awmod 0070              ??_LCDWriteInt 003E  
         ??_LCDWriteString 003D              i1LCDByte@temp 007B                __pdataBANK0 0057  
              __pdataBANK1 00A9         i1___awmod@dividend 0072                   ?_ADCInit 0070  
            ??i1_LCDGotoXY 007D        __end_of_LCDBusyLoop 0467                   ?_LCDByte 0034  
                 ?_LCDInit 0070          __size_of___ftpack 0065                   LCDByte@c 0039  
                ___latbits 0000          __size_of___lwtoft 0014              __pcstackBANK0 0020  
            __pcstackBANK1 00A0                ??_LCDGotoXY 003C                i1LCDByte@hn 0078  
              i1LCDByte@ln 0079           LCDWriteInt@F2516 0057                ??i1_LCDByte 0076  
                 ?_ReadADC 002F        __end_of_LCDWriteInt 032B    __size_of_TriggerOutInit 0006  
                 ?___awdiv 002F                   ?___awmod 002F                   ?___ftmul 003B  
                 ?___fttol 004B          i1___awdiv@divisor 0070          i1___awdiv@counter 0075  
      __end_ofi1_LCDGotoXY 079B            LCDBusyLoop@busy 0031                ??i1___awdiv 0074  
              ??i1___awmod 0074            LCDBusyLoop@temp 0032                _LCDBusyLoop 0410  
         LCDWriteString@cc 003E           __size_of_ADCInit 0012                 _ADCON0bits 009D  
               _ADCON1bits 009E           __size_of_LCDByte 004A           __size_of_LCDInit 0049  
              _LCDWriteInt 02AB           __size_of_ReadADC 0027    __size_of_TuneButtonInit 0006  
    __end_ofi1_LCDBusyLoop 04BD          i1___awmod@divisor 0070          i1___awmod@counter 0075  
         __size_of___awdiv 0052           __size_of___awmod 0046           __size_of___ftmul 00B3  
         __size_of___fttol 009F          LCDBusyLoop@status 0033                   ___ftpack 03AB  
              i1_LCDGotoXY 0778                 _ANSELAbits 018C                   ___lwtoft 07B5  
               i1LCDByte@c 007A                   __ptext10 02AB                   __ptext11 063E  
                 __ptext20 0684                   __ptext12 04BD                   __ptext21 050F  
                 __ptext13 05F5                   __ptext22 0778                   __ptext14 0755  
                 __ptext23 0560                   __ptext15 05AB                   __ptext24 0467  
                 __ptext16 0410                   __ptext17 07C9                   __ptext19 032B  
    __end_ofi1_LCDWriteInt 03AB              __size_of_main 00F6             _TriggerOutInit 07F5  
                 int$flags 007E              ?_LM35ReadTemp 0053                 _INTCONbits 000B  
                 intlevel1 0000             LCDWriteInt@val 003B             LCDWriteInt@str 0040  
   __end_of_TriggerOutInit 07FB          __CFG_CLKOUTEN$OFF 0000             ??_LM35ReadTemp 0055  
          ?_TriggerOutInit 0070             _TuneButtonInit 07EF    __size_of_LCDWriteString 003D  
