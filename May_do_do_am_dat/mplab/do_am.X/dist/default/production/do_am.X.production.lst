

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed May 18 02:16:16 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0008                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000E                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0015                     	;# 
    48  0016                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001C                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  008C                     	;# 
    59  008E                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0097                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009A                     	;# 
    68  009B                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  010C                     	;# 
    74  010E                     	;# 
    75  0111                     	;# 
    76  0112                     	;# 
    77  0113                     	;# 
    78  0114                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  0118                     	;# 
    83  0119                     	;# 
    84  011A                     	;# 
    85  011B                     	;# 
    86  011D                     	;# 
    87  011D                     	;# 
    88  018C                     	;# 
    89  018E                     	;# 
    90  0191                     	;# 
    91  0191                     	;# 
    92  0192                     	;# 
    93  0193                     	;# 
    94  0193                     	;# 
    95  0193                     	;# 
    96  0194                     	;# 
    97  0195                     	;# 
    98  0196                     	;# 
    99  0199                     	;# 
   100  019A                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019C                     	;# 
   106  019C                     	;# 
   107  019D                     	;# 
   108  019E                     	;# 
   109  019F                     	;# 
   110  020C                     	;# 
   111  020E                     	;# 
   112  0211                     	;# 
   113  0211                     	;# 
   114  0212                     	;# 
   115  0212                     	;# 
   116  0213                     	;# 
   117  0213                     	;# 
   118  0214                     	;# 
   119  0214                     	;# 
   120  0215                     	;# 
   121  0215                     	;# 
   122  0215                     	;# 
   123  0216                     	;# 
   124  0216                     	;# 
   125  0217                     	;# 
   126  0217                     	;# 
   127  0291                     	;# 
   128  0291                     	;# 
   129  0292                     	;# 
   130  0293                     	;# 
   131  0294                     	;# 
   132  0295                     	;# 
   133  0295                     	;# 
   134  0296                     	;# 
   135  0391                     	;# 
   136  0392                     	;# 
   137  0393                     	;# 
   138  039A                     	;# 
   139  039C                     	;# 
   140  039D                     	;# 
   141  039E                     	;# 
   142  039F                     	;# 
   143  0FE4                     	;# 
   144  0FE5                     	;# 
   145  0FE6                     	;# 
   146  0FE7                     	;# 
   147  0FE8                     	;# 
   148  0FE9                     	;# 
   149  0FEA                     	;# 
   150  0FEB                     	;# 
   151  0FED                     	;# 
   152  0FEE                     	;# 
   153  0FEF                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000E                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  008C                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  010C                     	;# 
   197  010E                     	;# 
   198  0111                     	;# 
   199  0112                     	;# 
   200  0113                     	;# 
   201  0114                     	;# 
   202  0115                     	;# 
   203  0116                     	;# 
   204  0117                     	;# 
   205  0118                     	;# 
   206  0119                     	;# 
   207  011A                     	;# 
   208  011B                     	;# 
   209  011D                     	;# 
   210  011D                     	;# 
   211  018C                     	;# 
   212  018E                     	;# 
   213  0191                     	;# 
   214  0191                     	;# 
   215  0192                     	;# 
   216  0193                     	;# 
   217  0193                     	;# 
   218  0193                     	;# 
   219  0194                     	;# 
   220  0195                     	;# 
   221  0196                     	;# 
   222  0199                     	;# 
   223  019A                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019B                     	;# 
   227  019B                     	;# 
   228  019C                     	;# 
   229  019C                     	;# 
   230  019D                     	;# 
   231  019E                     	;# 
   232  019F                     	;# 
   233  020C                     	;# 
   234  020E                     	;# 
   235  0211                     	;# 
   236  0211                     	;# 
   237  0212                     	;# 
   238  0212                     	;# 
   239  0213                     	;# 
   240  0213                     	;# 
   241  0214                     	;# 
   242  0214                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0216                     	;# 
   247  0216                     	;# 
   248  0217                     	;# 
   249  0217                     	;# 
   250  0291                     	;# 
   251  0291                     	;# 
   252  0292                     	;# 
   253  0293                     	;# 
   254  0294                     	;# 
   255  0295                     	;# 
   256  0295                     	;# 
   257  0296                     	;# 
   258  0391                     	;# 
   259  0392                     	;# 
   260  0393                     	;# 
   261  039A                     	;# 
   262  039C                     	;# 
   263  039D                     	;# 
   264  039E                     	;# 
   265  039F                     	;# 
   266  0FE4                     	;# 
   267  0FE5                     	;# 
   268  0FE6                     	;# 
   269  0FE7                     	;# 
   270  0FE8                     	;# 
   271  0FE9                     	;# 
   272  0FEA                     	;# 
   273  0FEB                     	;# 
   274  0FED                     	;# 
   275  0FEE                     	;# 
   276  0FEF                     	;# 
   277  0000                     	;# 
   278  0001                     	;# 
   279  0002                     	;# 
   280  0003                     	;# 
   281  0004                     	;# 
   282  0005                     	;# 
   283  0006                     	;# 
   284  0007                     	;# 
   285  0008                     	;# 
   286  0009                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000E                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0016                     	;# 
   296  0017                     	;# 
   297  0018                     	;# 
   298  0019                     	;# 
   299  001A                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  001E                     	;# 
   303  001F                     	;# 
   304  008C                     	;# 
   305  008E                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0095                     	;# 
   309  0096                     	;# 
   310  0097                     	;# 
   311  0098                     	;# 
   312  0099                     	;# 
   313  009A                     	;# 
   314  009B                     	;# 
   315  009B                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  010C                     	;# 
   320  010E                     	;# 
   321  0111                     	;# 
   322  0112                     	;# 
   323  0113                     	;# 
   324  0114                     	;# 
   325  0115                     	;# 
   326  0116                     	;# 
   327  0117                     	;# 
   328  0118                     	;# 
   329  0119                     	;# 
   330  011A                     	;# 
   331  011B                     	;# 
   332  011D                     	;# 
   333  011D                     	;# 
   334  018C                     	;# 
   335  018E                     	;# 
   336  0191                     	;# 
   337  0191                     	;# 
   338  0192                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0193                     	;# 
   342  0194                     	;# 
   343  0195                     	;# 
   344  0196                     	;# 
   345  0199                     	;# 
   346  019A                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019B                     	;# 
   351  019C                     	;# 
   352  019C                     	;# 
   353  019D                     	;# 
   354  019E                     	;# 
   355  019F                     	;# 
   356  020C                     	;# 
   357  020E                     	;# 
   358  0211                     	;# 
   359  0211                     	;# 
   360  0212                     	;# 
   361  0212                     	;# 
   362  0213                     	;# 
   363  0213                     	;# 
   364  0214                     	;# 
   365  0214                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0216                     	;# 
   371  0217                     	;# 
   372  0217                     	;# 
   373  0291                     	;# 
   374  0291                     	;# 
   375  0292                     	;# 
   376  0293                     	;# 
   377  0294                     	;# 
   378  0295                     	;# 
   379  0295                     	;# 
   380  0296                     	;# 
   381  0391                     	;# 
   382  0392                     	;# 
   383  0393                     	;# 
   384  039A                     	;# 
   385  039C                     	;# 
   386  039D                     	;# 
   387  039E                     	;# 
   388  039F                     	;# 
   389  0FE4                     	;# 
   390  0FE5                     	;# 
   391  0FE6                     	;# 
   392  0FE7                     	;# 
   393  0FE8                     	;# 
   394  0FE9                     	;# 
   395  0FEA                     	;# 
   396  0FEB                     	;# 
   397  0FED                     	;# 
   398  0FEE                     	;# 
   399  0FEF                     	;# 
   400  0000                     	;# 
   401  0001                     	;# 
   402  0002                     	;# 
   403  0003                     	;# 
   404  0004                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  0007                     	;# 
   408  0008                     	;# 
   409  0009                     	;# 
   410  000A                     	;# 
   411  000B                     	;# 
   412  000C                     	;# 
   413  000E                     	;# 
   414  0011                     	;# 
   415  0012                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  008C                     	;# 
   428  008E                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  010C                     	;# 
   443  010E                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011D                     	;# 
   456  011D                     	;# 
   457  018C                     	;# 
   458  018E                     	;# 
   459  0191                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0199                     	;# 
   469  019A                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019C                     	;# 
   475  019C                     	;# 
   476  019D                     	;# 
   477  019E                     	;# 
   478  019F                     	;# 
   479  020C                     	;# 
   480  020E                     	;# 
   481  0211                     	;# 
   482  0211                     	;# 
   483  0212                     	;# 
   484  0212                     	;# 
   485  0213                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0214                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0216                     	;# 
   493  0216                     	;# 
   494  0217                     	;# 
   495  0217                     	;# 
   496  0291                     	;# 
   497  0291                     	;# 
   498  0292                     	;# 
   499  0293                     	;# 
   500  0294                     	;# 
   501  0295                     	;# 
   502  0295                     	;# 
   503  0296                     	;# 
   504  0391                     	;# 
   505  0392                     	;# 
   506  0393                     	;# 
   507  039A                     	;# 
   508  039C                     	;# 
   509  039D                     	;# 
   510  039E                     	;# 
   511  039F                     	;# 
   512  0FE4                     	;# 
   513  0FE5                     	;# 
   514  0FE6                     	;# 
   515  0FE7                     	;# 
   516  0FE8                     	;# 
   517  0FE9                     	;# 
   518  0FEA                     	;# 
   519  0FEB                     	;# 
   520  0FED                     	;# 
   521  0FEE                     	;# 
   522  0FEF                     	;# 
   523                           
   524                           	psect	idataBANK0
   525  0219                     __pidataBANK0:	
   526                           
   527                           ;initializer for ___cgram
   528  0219  340C               	retlw	12
   529  021A  3412               	retlw	18
   530  021B  3412               	retlw	18
   531  021C  340C               	retlw	12
   532  021D  3400               	retlw	0
   533  021E  3400               	retlw	0
   534  021F  3400               	retlw	0
   535  0220  3400               	retlw	0
   536  000E                     _PORTC	set	14
   537  0060                     _RA0	set	96
   538  0070                     _RC0	set	112
   539  0071                     _RC1	set	113
   540  009D                     _ADCON0bits	set	157
   541  009E                     _ADCON1bits	set	158
   542  009C                     _ADRESH	set	156
   543  009B                     _ADRESL	set	155
   544  008C                     _TRISAbits	set	140
   545  008E                     _TRISC	set	142
   546  008E                     _TRISCbits	set	142
   547  018C                     _ANSELAbits	set	396
   548                           
   549                           	psect	stringtext
   550  0221                     __pstringtext:	
   551  0221                     STR_1:	
   552  0221  3454               	retlw	84	;'T'
   553  0222  3468               	retlw	104	;'h'
   554  0223  3465               	retlw	101	;'e'
   555  0224  3472               	retlw	114	;'r'
   556  0225  346D               	retlw	109	;'m'
   557  0226  346F               	retlw	111	;'o'
   558  0227  346D               	retlw	109	;'m'
   559  0228  3465               	retlw	101	;'e'
   560  0229  3474               	retlw	116	;'t'
   561  022A  3465               	retlw	101	;'e'
   562  022B  3472               	retlw	114	;'r'
   563  022C  3400               	retlw	0
   564  022D                     STR_2:	
   565  022D  3425               	retlw	37	;'%'
   566  022E  3430               	retlw	48	;'0'
   567  022F  3443               	retlw	67	;'C'
   568  0230  3400               	retlw	0
   569                           
   570                           ; #config settings
   571  0000                     
   572                           	psect	cinit
   573  07EF                     start_initialization:	
   574  07EF                     __initialization:	
   575                           
   576                           ; Clear objects allocated to BANK0
   577  07EF  01D6               	clrf	__pbssBANK0& (0+127)
   578  07F0  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   579  07F1  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   580  07F2  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   581  07F3  01DA               	clrf	(__pbssBANK0+4)& (0+127)
   582                           
   583                           ; Initialize objects allocated to BANK0
   584  07F4  3019               	movlw	low __pidataBANK0
   585  07F5  0084               	movwf	4
   586  07F6  3082               	movlw	(high __pidataBANK0)| (0+128)
   587  07F7  0085               	movwf	5
   588  07F8  304E               	movlw	low __pdataBANK0
   589  07F9  0086               	movwf	6
   590  07FA  3000               	movlw	high __pdataBANK0
   591  07FB  0087               	movwf	7
   592  07FC  3008               	movlw	8
   593  07FD  2213               	fcall	init_ram
   594  07FE                     end_of_initialization:	
   595                           ;End of C runtime variable initialization code
   596                           
   597  07FE                     __end_of__initialization:	
   598  07FE  0020               	movlb	0
   599  07FF  2B05               	ljmp	_main	;jump to C main() function
   600                           
   601                           	psect	bssBANK0
   602  0056                     __pbssBANK0:	
   603  0056                     LCDWriteInt@F2516:	
   604  0056                     	ds	5
   605                           
   606                           	psect	dataBANK0
   607  004E                     __pdataBANK0:	
   608  004E                     ___cgram:	
   609  004E                     	ds	8
   610                           
   611                           	psect	inittext
   612  0213                     init_ram:	
   613  0213  00FE               	movwf	126
   614  0214                     initloop:	
   615  0214  0012               	moviw fsr0++
   616  0215  001E               	movwi fsr1++
   617  0216  0BFE               	decfsz	126,f
   618  0217  2A14               	goto	initloop
   619  0218  3400               	retlw	0
   620                           
   621                           	psect	cstackCOMMON
   622  0070                     __pcstackCOMMON:	
   623  0070                     ?_LCDBusyLoop:	
   624  0070                     ??_LCDBusyLoop:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_ADCInit:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ??_ADCInit:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_LCDInit:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_main:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_ReadADC:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?___awdiv:	
   643                           ; 2 bytes @ 0x0
   644                           
   645  0070                     ?___awmod:	
   646                           ; 2 bytes @ 0x0
   647                           
   648  0070                     ?___lwdiv:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     ?___ftpack:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     ?___fttol:	
   655                           ; 3 bytes @ 0x0
   656                           
   657  0070                     ___awdiv@divisor:	
   658                           ; 4 bytes @ 0x0
   659                           
   660  0070                     ___awmod@divisor:	
   661                           ; 2 bytes @ 0x0
   662                           
   663  0070                     ___lwdiv@divisor:	
   664                           ; 2 bytes @ 0x0
   665                           
   666  0070                     ___ftpack@arg:	
   667                           ; 2 bytes @ 0x0
   668                           
   669  0070                     ___fttol@f1:	
   670                           ; 3 bytes @ 0x0
   671                           
   672                           
   673                           ; 3 bytes @ 0x0
   674  0070                     	ds	2
   675  0072                     ??_ReadADC:	
   676  0072                     LCDBusyLoop@busy:	
   677                           ; 1 bytes @ 0x2
   678                           
   679  0072                     ___awdiv@dividend:	
   680                           ; 1 bytes @ 0x2
   681                           
   682  0072                     ___awmod@dividend:	
   683                           ; 2 bytes @ 0x2
   684                           
   685  0072                     ___lwdiv@dividend:	
   686                           ; 2 bytes @ 0x2
   687                           
   688                           
   689                           ; 2 bytes @ 0x2
   690  0072                     	ds	1
   691  0073                     LCDBusyLoop@temp:	
   692  0073                     ReadADC@ch:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0073                     ___ftpack@exp:	
   696                           ; 1 bytes @ 0x3
   697                           
   698                           
   699                           ; 1 bytes @ 0x3
   700  0073                     	ds	1
   701  0074                     ??___awdiv:	
   702  0074                     ??___awmod:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0074                     ??___fttol:	
   706                           ; 1 bytes @ 0x4
   707                           
   708  0074                     ??___lwdiv:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     LCDBusyLoop@status:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     ___ftpack@sign:	
   715                           ; 1 bytes @ 0x4
   716                           
   717                           
   718                           ; 1 bytes @ 0x4
   719  0074                     	ds	1
   720  0075                     ??___ftpack:	
   721  0075                     ?_LCDByte:	
   722                           ; 1 bytes @ 0x5
   723                           
   724  0075                     LCDByte@isdata:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     ___awdiv@counter:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     ___awmod@counter:	
   731                           ; 1 bytes @ 0x5
   732                           
   733  0075                     ___lwdiv@quotient:	
   734                           ; 1 bytes @ 0x5
   735                           
   736                           
   737                           ; 2 bytes @ 0x5
   738  0075                     	ds	1
   739  0076                     ??_LCDByte:	
   740  0076                     ___awdiv@sign:	
   741                           ; 1 bytes @ 0x6
   742                           
   743  0076                     ___awmod@sign:	
   744                           ; 1 bytes @ 0x6
   745                           
   746                           
   747                           ; 1 bytes @ 0x6
   748  0076                     	ds	1
   749  0077                     ___lwdiv@counter:	
   750  0077                     ___awdiv@quotient:	
   751                           ; 1 bytes @ 0x7
   752                           
   753                           
   754                           ; 2 bytes @ 0x7
   755  0077                     	ds	1
   756  0078                     ?___lwtoft:	
   757  0078                     LCDByte@hn:	
   758                           ; 3 bytes @ 0x8
   759                           
   760  0078                     ___fttol@sign1:	
   761                           ; 1 bytes @ 0x8
   762                           
   763  0078                     ___lwtoft@c:	
   764                           ; 1 bytes @ 0x8
   765                           
   766                           
   767                           ; 2 bytes @ 0x8
   768  0078                     	ds	1
   769  0079                     LCDByte@ln:	
   770  0079                     ___fttol@lval:	
   771                           ; 1 bytes @ 0x9
   772                           
   773                           
   774                           ; 4 bytes @ 0x9
   775  0079                     	ds	1
   776  007A                     LCDByte@c:	
   777                           
   778                           ; 1 bytes @ 0xA
   779  007A                     	ds	1
   780  007B                     ??___lwtoft:	
   781  007B                     LCDByte@temp:	
   782                           ; 1 bytes @ 0xB
   783                           
   784                           
   785                           ; 1 bytes @ 0xB
   786  007B                     	ds	1
   787  007C                     ??_LM35ReadTemp:	
   788  007C                     ??_LCDInit:	
   789                           ; 1 bytes @ 0xC
   790                           
   791  007C                     ?_LCDWriteString:	
   792                           ; 1 bytes @ 0xC
   793                           
   794  007C                     ?_LCDGotoXY:	
   795                           ; 1 bytes @ 0xC
   796                           
   797  007C                     LCDGotoXY@y:	
   798                           ; 1 bytes @ 0xC
   799                           
   800  007C                     LCDWriteString@msg:	
   801                           ; 1 bytes @ 0xC
   802                           
   803                           
   804                           ; 2 bytes @ 0xC
   805  007C                     	ds	1
   806  007D                     ??_LCDGotoXY:	
   807  007D                     ___fttol@exp1:	
   808                           ; 1 bytes @ 0xD
   809                           
   810                           
   811                           ; 1 bytes @ 0xD
   812  007D                     	ds	1
   813                           
   814                           	psect	cstackBANK0
   815  0020                     __pcstackBANK0:	
   816  0020                     ??_LCDWriteString:	
   817  0020                     ?_LCDWriteInt:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0020                     ?___ftdiv:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0020                     LCDInit@style:	
   824                           ; 3 bytes @ 0x0
   825                           
   826  0020                     LCDGotoXY@x:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0020                     LCDWriteInt@val:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0020                     ___ftdiv@f2:	
   833                           ; 2 bytes @ 0x0
   834                           
   835                           
   836                           ; 3 bytes @ 0x0
   837  0020                     	ds	1
   838  0021                     LCDInit@__i:	
   839  0021                     LCDWriteString@cc:	
   840                           ; 1 bytes @ 0x1
   841                           
   842                           
   843                           ; 1 bytes @ 0x1
   844  0021                     	ds	1
   845  0022                     LCDWriteInt@field_length:	
   846                           
   847                           ; 1 bytes @ 0x2
   848  0022                     	ds	1
   849  0023                     ??_LCDWriteInt:	
   850  0023                     ___ftdiv@f1:	
   851                           ; 1 bytes @ 0x3
   852                           
   853                           
   854                           ; 3 bytes @ 0x3
   855  0023                     	ds	2
   856  0025                     LCDWriteInt@str:	
   857                           
   858                           ; 5 bytes @ 0x5
   859  0025                     	ds	1
   860  0026                     ??___ftdiv:	
   861                           
   862                           ; 1 bytes @ 0x6
   863  0026                     	ds	4
   864  002A                     ___ftdiv@cntr:	
   865  002A                     LCDWriteInt@j:	
   866                           ; 1 bytes @ 0xA
   867                           
   868                           
   869                           ; 2 bytes @ 0xA
   870  002A                     	ds	1
   871  002B                     ___ftdiv@f3:	
   872                           
   873                           ; 3 bytes @ 0xB
   874  002B                     	ds	1
   875  002C                     LCDWriteInt@i:	
   876                           
   877                           ; 2 bytes @ 0xC
   878  002C                     	ds	2
   879  002E                     ___ftdiv@exp:	
   880                           
   881                           ; 1 bytes @ 0xE
   882  002E                     	ds	1
   883  002F                     ___ftdiv@sign:	
   884                           
   885                           ; 1 bytes @ 0xF
   886  002F                     	ds	1
   887  0030                     ?___ftmul:	
   888  0030                     ___ftmul@f1:	
   889                           ; 3 bytes @ 0x10
   890                           
   891                           
   892                           ; 3 bytes @ 0x10
   893  0030                     	ds	3
   894  0033                     ___ftmul@f2:	
   895                           
   896                           ; 3 bytes @ 0x13
   897  0033                     	ds	3
   898  0036                     ??___ftmul:	
   899                           
   900                           ; 1 bytes @ 0x16
   901  0036                     	ds	4
   902  003A                     ___ftmul@exp:	
   903                           
   904                           ; 1 bytes @ 0x1A
   905  003A                     	ds	1
   906  003B                     ___ftmul@f3_as_product:	
   907                           
   908                           ; 3 bytes @ 0x1B
   909  003B                     	ds	3
   910  003E                     ___ftmul@cntr:	
   911                           
   912                           ; 1 bytes @ 0x1E
   913  003E                     	ds	1
   914  003F                     ___ftmul@sign:	
   915                           
   916                           ; 1 bytes @ 0x1F
   917  003F                     	ds	1
   918  0040                     ?_LM35ReadTemp:	
   919                           
   920                           ; 3 bytes @ 0x20
   921  0040                     	ds	3
   922  0043                     LM35ReadTemp@t:	
   923                           
   924                           ; 3 bytes @ 0x23
   925  0043                     	ds	3
   926  0046                     LM35ReadTemp@adc_value:	
   927                           
   928                           ; 2 bytes @ 0x26
   929  0046                     	ds	2
   930  0048                     ??_main:	
   931                           
   932                           ; 1 bytes @ 0x28
   933  0048                     	ds	3
   934  004B                     main@t:	
   935                           
   936                           ; 3 bytes @ 0x2B
   937  004B                     	ds	3
   938                           
   939                           	psect	maintext
   940  0305                     __pmaintext:	
   941 ;;
   942 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   943 ;;
   944 ;; *************** function _main *****************
   945 ;; Defined at:
   946 ;;		line 18 in file "do_am.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  t               3   43[BANK0 ] float 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : B1F/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1
   960 ;;      Params:         0       0       0
   961 ;;      Locals:         0       3       0
   962 ;;      Temps:          0       3       0
   963 ;;      Totals:         0       6       0
   964 ;;Total ram usage:        6 bytes
   965 ;; Hardware stack levels required when called:    3
   966 ;; This function calls:
   967 ;;		_ADCInit
   968 ;;		_LCDByte
   969 ;;		_LCDGotoXY
   970 ;;		_LCDInit
   971 ;;		_LCDWriteInt
   972 ;;		_LCDWriteString
   973 ;;		_LM35ReadTemp
   974 ;;		___fttol
   975 ;; This function is called by:
   976 ;;		Startup code after reset
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function _main
   982  0305                     _main:	
   983                           
   984                           ;do_am.c: 21: LCDInit(0B00000000);
   985                           
   986                           ;incstack = 0
   987                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   988  0305  3000               	movlw	0
   989  0306  2387               	fcall	_LCDInit
   990                           
   991                           ;do_am.c: 24: ADCInit();
   992  0307  2231               	fcall	_ADCInit
   993                           
   994                           ;do_am.c: 27: (LCDByte(0b00000001,0));
   995  0308  01F5               	clrf	LCDByte@isdata
   996  0309  3001               	movlw	1
   997  030A  23CD               	fcall	_LCDByte
   998                           
   999                           ;do_am.c: 29: LCDWriteString("Thermometer");
  1000  030B  3021               	movlw	low (STR_1| (0+32768))
  1001  030C  00FC               	movwf	LCDWriteString@msg
  1002  030D  3082               	movlw	high (STR_1| (0+32768))
  1003  030E  00FD               	movwf	LCDWriteString@msg+1
  1004  030F  22CC               	fcall	_LCDWriteString
  1005  0310                     l1656:	
  1006                           ;do_am.c: 31: while(1)
  1007                           
  1008                           
  1009                           ;do_am.c: 32: {
  1010                           ;do_am.c: 34: float t = LM35ReadTemp();
  1011  0310  24BF               	fcall	_LM35ReadTemp
  1012  0311  0020               	movlb	0	; select bank0
  1013  0312  0840               	movf	?_LM35ReadTemp,w
  1014  0313  00CB               	movwf	main@t
  1015  0314  0841               	movf	?_LM35ReadTemp+1,w
  1016  0315  00CC               	movwf	main@t+1
  1017  0316  0842               	movf	?_LM35ReadTemp+2,w
  1018  0317  00CD               	movwf	main@t+2
  1019                           
  1020                           ;do_am.c: 37: { LCDGotoXY(0,1); LCDWriteInt(t,3);};
  1021  0318  01FC               	clrf	LCDGotoXY@y
  1022  0319  0AFC               	incf	LCDGotoXY@y,f
  1023  031A  3000               	movlw	0
  1024  031B  2275               	fcall	_LCDGotoXY
  1025  031C  0020               	movlb	0	; select bank0
  1026  031D  084B               	movf	main@t,w
  1027  031E  00F0               	movwf	___fttol@f1
  1028  031F  084C               	movf	main@t+1,w
  1029  0320  00F1               	movwf	___fttol@f1+1
  1030  0321  084D               	movf	main@t+2,w
  1031  0322  00F2               	movwf	___fttol@f1+2
  1032  0323  2585               	fcall	___fttol
  1033  0324  0871               	movf	?___fttol+1,w
  1034  0325  0020               	movlb	0	; select bank0
  1035  0326  00A1               	movwf	LCDWriteInt@val+1
  1036  0327  0870               	movf	?___fttol,w
  1037  0328  00A0               	movwf	LCDWriteInt@val
  1038  0329  3003               	movlw	3
  1039  032A  00C8               	movwf	??_main
  1040  032B  0848               	movf	??_main,w
  1041  032C  00A2               	movwf	LCDWriteInt@field_length
  1042  032D  260B               	fcall	_LCDWriteInt
  1043                           
  1044                           ;do_am.c: 40: LCDWriteString("%0C");
  1045  032E  302D               	movlw	low (STR_2| (0+32768))
  1046  032F  00FC               	movwf	LCDWriteString@msg
  1047  0330  3082               	movlw	high (STR_2| (0+32768))
  1048  0331  00FD               	movwf	LCDWriteString@msg+1
  1049  0332  22CC               	fcall	_LCDWriteString
  1050                           
  1051                           ;do_am.c: 43: _delay((unsigned long)((200)*(20000000/4000.0)));
  1052  0333  3006               	movlw	6
  1053  0334  0020               	movlb	0	; select bank0
  1054  0335  00CA               	movwf	??_main+2
  1055  0336  3013               	movlw	19
  1056  0337  00C9               	movwf	??_main+1
  1057  0338  30B1               	movlw	177
  1058  0339  00C8               	movwf	??_main
  1059  033A                     u1857:	
  1060  033A  0BC8               	decfsz	??_main,f
  1061  033B  2B3A               	goto	u1857
  1062  033C  0BC9               	decfsz	??_main+1,f
  1063  033D  2B3A               	goto	u1857
  1064  033E  0BCA               	decfsz	??_main+2,f
  1065  033F  2B3A               	goto	u1857
  1066  0340  3200               	nop2
  1067  0341  2B10               	goto	l1656
  1068  0342                     __end_of_main:	
  1069                           
  1070                           	psect	text1
  1071  0585                     __ptext1:	
  1072 ;; *************** function ___fttol *****************
  1073 ;; Defined at:
  1074 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  f1              3    0[COMMON] float 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  lval            4    9[COMMON] unsigned long 
  1079 ;;  exp1            1   13[COMMON] unsigned char 
  1080 ;;  sign1           1    8[COMMON] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  4    0[COMMON] long 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1
  1090 ;;      Params:         4       0       0
  1091 ;;      Locals:         6       0       0
  1092 ;;      Temps:          4       0       0
  1093 ;;      Totals:        14       0       0
  1094 ;;Total ram usage:       14 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function ___fttol
  1105  0585                     ___fttol:	
  1106                           
  1107                           ;incstack = 0
  1108                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1109  0585  0870               	movf	___fttol@f1,w
  1110  0586  00F4               	movwf	??___fttol
  1111  0587  0871               	movf	___fttol@f1+1,w
  1112  0588  00F5               	movwf	??___fttol+1
  1113  0589  0872               	movf	___fttol@f1+2,w
  1114  058A  00F6               	movwf	??___fttol+2
  1115  058B  1003               	clrc
  1116  058C  0D75               	rlf	??___fttol+1,w
  1117  058D  0D76               	rlf	??___fttol+2,w
  1118  058E  00F7               	movwf	??___fttol+3
  1119  058F  0877               	movf	??___fttol+3,w
  1120  0590  00FD               	movwf	___fttol@exp1
  1121  0591  087D               	movf	___fttol@exp1,w
  1122  0592  1D03               	btfss	3,2
  1123  0593  2D9D               	goto	l1612
  1124  0594  3000               	movlw	0
  1125  0595  00F3               	movwf	?___fttol+3
  1126  0596  3000               	movlw	0
  1127  0597  00F2               	movwf	?___fttol+2
  1128  0598  3000               	movlw	0
  1129  0599  00F1               	movwf	?___fttol+1
  1130  059A  3000               	movlw	0
  1131  059B  00F0               	movwf	?___fttol
  1132  059C  0008               	return
  1133  059D                     l1612:	
  1134  059D  0870               	movf	___fttol@f1,w
  1135  059E  00F4               	movwf	??___fttol
  1136  059F  0871               	movf	___fttol@f1+1,w
  1137  05A0  00F5               	movwf	??___fttol+1
  1138  05A1  0872               	movf	___fttol@f1+2,w
  1139  05A2  00F6               	movwf	??___fttol+2
  1140  05A3  3017               	movlw	23
  1141  05A4                     u1765:	
  1142  05A4  36F6               	lsrf	??___fttol+2,f
  1143  05A5  0CF5               	rrf	??___fttol+1,f
  1144  05A6  0CF4               	rrf	??___fttol,f
  1145  05A7  0B89               	decfsz	9,f
  1146  05A8  2DA4               	goto	u1765
  1147  05A9  0874               	movf	??___fttol,w
  1148  05AA  00F7               	movwf	??___fttol+3
  1149  05AB  0877               	movf	??___fttol+3,w
  1150  05AC  00F8               	movwf	___fttol@sign1
  1151  05AD  17F1               	bsf	___fttol@f1+1,7
  1152  05AE  30FF               	movlw	255
  1153  05AF  05F0               	andwf	___fttol@f1,f
  1154  05B0  30FF               	movlw	255
  1155  05B1  05F1               	andwf	___fttol@f1+1,f
  1156  05B2  3000               	movlw	0
  1157  05B3  05F2               	andwf	___fttol@f1+2,f
  1158  05B4  0870               	movf	___fttol@f1,w
  1159  05B5  00F9               	movwf	___fttol@lval
  1160  05B6  0871               	movf	___fttol@f1+1,w
  1161  05B7  00FA               	movwf	___fttol@lval+1
  1162  05B8  0872               	movf	___fttol@f1+2,w
  1163  05B9  00FB               	movwf	___fttol@lval+2
  1164  05BA  01FC               	clrf	___fttol@lval+3
  1165  05BB  308E               	movlw	142
  1166  05BC  02FD               	subwf	___fttol@exp1,f
  1167  05BD  1FFD               	btfss	___fttol@exp1,7
  1168  05BE  2DDB               	goto	l1632
  1169  05BF  087D               	movf	___fttol@exp1,w
  1170  05C0  3A80               	xorlw	128
  1171  05C1  3E8F               	addlw	143
  1172  05C2  1803               	skipnc
  1173  05C3  2DCD               	goto	l1630
  1174  05C4  3000               	movlw	0
  1175  05C5  00F3               	movwf	?___fttol+3
  1176  05C6  3000               	movlw	0
  1177  05C7  00F2               	movwf	?___fttol+2
  1178  05C8  3000               	movlw	0
  1179  05C9  00F1               	movwf	?___fttol+1
  1180  05CA  3000               	movlw	0
  1181  05CB  00F0               	movwf	?___fttol
  1182  05CC  0008               	return
  1183  05CD                     l1630:	
  1184  05CD  3001               	movlw	1
  1185  05CE                     u1795:	
  1186  05CE  36FC               	lsrf	___fttol@lval+3,f
  1187  05CF  0CFB               	rrf	___fttol@lval+2,f
  1188  05D0  0CFA               	rrf	___fttol@lval+1,f
  1189  05D1  0CF9               	rrf	___fttol@lval,f
  1190  05D2  0B89               	decfsz	9,f
  1191  05D3  2DCE               	goto	u1795
  1192  05D4  3001               	movlw	1
  1193  05D5  00F4               	movwf	??___fttol
  1194  05D6  0874               	movf	??___fttol,w
  1195  05D7  07FD               	addwf	___fttol@exp1,f
  1196  05D8  1903               	btfsc	3,2
  1197  05D9  2DF4               	goto	l1640
  1198  05DA  2DCD               	goto	l1630
  1199  05DB                     l1632:	
  1200  05DB  3018               	movlw	24
  1201  05DC  027D               	subwf	___fttol@exp1,w
  1202  05DD  1C03               	skipc
  1203  05DE  2DF1               	goto	l460
  1204  05DF  3000               	movlw	0
  1205  05E0  00F3               	movwf	?___fttol+3
  1206  05E1  3000               	movlw	0
  1207  05E2  00F2               	movwf	?___fttol+2
  1208  05E3  3000               	movlw	0
  1209  05E4  00F1               	movwf	?___fttol+1
  1210  05E5  3000               	movlw	0
  1211  05E6  00F0               	movwf	?___fttol
  1212  05E7  0008               	return
  1213  05E8                     l1638:	
  1214  05E8  3001               	movlw	1
  1215  05E9                     u1825:	
  1216  05E9  35F9               	lslf	___fttol@lval,f
  1217  05EA  0DFA               	rlf	___fttol@lval+1,f
  1218  05EB  0DFB               	rlf	___fttol@lval+2,f
  1219  05EC  0DFC               	rlf	___fttol@lval+3,f
  1220  05ED  0B89               	decfsz	9,f
  1221  05EE  2DE9               	goto	u1825
  1222  05EF  3001               	movlw	1
  1223  05F0  02FD               	subwf	___fttol@exp1,f
  1224  05F1                     l460:	
  1225  05F1  087D               	movf	___fttol@exp1,w
  1226  05F2  1D03               	btfss	3,2
  1227  05F3  2DE8               	goto	l1638
  1228  05F4                     l1640:	
  1229  05F4  0878               	movf	___fttol@sign1,w
  1230  05F5  1903               	btfsc	3,2
  1231  05F6  2E02               	goto	l1644
  1232  05F7  09F9               	comf	___fttol@lval,f
  1233  05F8  09FA               	comf	___fttol@lval+1,f
  1234  05F9  09FB               	comf	___fttol@lval+2,f
  1235  05FA  09FC               	comf	___fttol@lval+3,f
  1236  05FB  0AF9               	incf	___fttol@lval,f
  1237  05FC  1903               	skipnz
  1238  05FD  0AFA               	incf	___fttol@lval+1,f
  1239  05FE  1903               	skipnz
  1240  05FF  0AFB               	incf	___fttol@lval+2,f
  1241  0600  1903               	skipnz
  1242  0601  0AFC               	incf	___fttol@lval+3,f
  1243  0602                     l1644:	
  1244  0602  087C               	movf	___fttol@lval+3,w
  1245  0603  00F3               	movwf	?___fttol+3
  1246  0604  087B               	movf	___fttol@lval+2,w
  1247  0605  00F2               	movwf	?___fttol+2
  1248  0606  087A               	movf	___fttol@lval+1,w
  1249  0607  00F1               	movwf	?___fttol+1
  1250  0608  0879               	movf	___fttol@lval,w
  1251  0609  00F0               	movwf	?___fttol
  1252  060A  0008               	return
  1253  060B                     __end_of___fttol:	
  1254                           
  1255                           	psect	text2
  1256  04BF                     __ptext2:	
  1257 ;; *************** function _LM35ReadTemp *****************
  1258 ;; Defined at:
  1259 ;;		line 8 in file "lm35_pic16.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  t               3   35[BANK0 ] float 
  1264 ;;  adc_value       2   38[BANK0 ] unsigned int 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  3   32[BANK0 ] float 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, pclath, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1
  1274 ;;      Params:         0       3       0
  1275 ;;      Locals:         0       5       0
  1276 ;;      Temps:          1       0       0
  1277 ;;      Totals:         1       8       0
  1278 ;;Total ram usage:        9 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    2
  1281 ;; This function calls:
  1282 ;;		_ReadADC
  1283 ;;		___ftdiv
  1284 ;;		___ftmul
  1285 ;;		___lwdiv
  1286 ;;		___lwtoft
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _LM35ReadTemp
  1294  04BF                     _LM35ReadTemp:	
  1295                           
  1296                           ;lm35_pic16.c: 11: float t;
  1297                           ;lm35_pic16.c: 14: uint16_t adc_value=ReadADC(2);
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in _LM35ReadTemp: [wreg+status,2+status,0+pclath+cstack]
  1301  04BF  3002               	movlw	2
  1302  04C0  2255               	fcall	_ReadADC
  1303  04C1  0871               	movf	?_ReadADC+1,w
  1304  04C2  0020               	movlb	0	; select bank0
  1305  04C3  00C7               	movwf	LM35ReadTemp@adc_value+1
  1306  04C4  0870               	movf	?_ReadADC,w
  1307  04C5  00C6               	movwf	LM35ReadTemp@adc_value
  1308                           
  1309                           ;lm35_pic16.c: 15: _delay((unsigned long)((100)*(20000000/4000000.0)));
  1310  04C6  30A6               	movlw	166
  1311  04C7  00FC               	movwf	??_LM35ReadTemp
  1312  04C8                     u1867:	
  1313  04C8  0BFC               	decfsz	??_LM35ReadTemp,f
  1314  04C9  2CC8               	goto	u1867
  1315  04CA  0000               	nop
  1316                           
  1317                           ;lm35_pic16.c: 17: adc_value+=ReadADC(2);
  1318  04CB  3002               	movlw	2
  1319  04CC  2255               	fcall	_ReadADC
  1320  04CD  0870               	movf	?_ReadADC,w
  1321  04CE  0020               	movlb	0	; select bank0
  1322  04CF  07C6               	addwf	LM35ReadTemp@adc_value,f
  1323  04D0  0871               	movf	?_ReadADC+1,w
  1324  04D1  3DC7               	addwfc	LM35ReadTemp@adc_value+1,f
  1325                           
  1326                           ;lm35_pic16.c: 18: _delay((unsigned long)((100)*(20000000/4000000.0)));
  1327  04D2  30A6               	movlw	166
  1328  04D3  00FC               	movwf	??_LM35ReadTemp
  1329  04D4                     u1877:	
  1330  04D4  0BFC               	decfsz	??_LM35ReadTemp,f
  1331  04D5  2CD4               	goto	u1877
  1332  04D6  0000               	nop
  1333                           
  1334                           ;lm35_pic16.c: 20: adc_value+=ReadADC(2);
  1335  04D7  3002               	movlw	2
  1336  04D8  2255               	fcall	_ReadADC
  1337  04D9  0870               	movf	?_ReadADC,w
  1338  04DA  0020               	movlb	0	; select bank0
  1339  04DB  07C6               	addwf	LM35ReadTemp@adc_value,f
  1340  04DC  0871               	movf	?_ReadADC+1,w
  1341  04DD  3DC7               	addwfc	LM35ReadTemp@adc_value+1,f
  1342                           
  1343                           ;lm35_pic16.c: 21: _delay((unsigned long)((100)*(20000000/4000000.0)));
  1344  04DE  30A6               	movlw	166
  1345  04DF  00FC               	movwf	??_LM35ReadTemp
  1346  04E0                     u1887:	
  1347  04E0  0BFC               	decfsz	??_LM35ReadTemp,f
  1348  04E1  2CE0               	goto	u1887
  1349  04E2  0000               	nop
  1350                           
  1351                           ;lm35_pic16.c: 23: adc_value=adc_value/3;
  1352  04E3  3003               	movlw	3
  1353  04E4  00F0               	movwf	___lwdiv@divisor
  1354  04E5  3000               	movlw	0
  1355  04E6  00F1               	movwf	___lwdiv@divisor+1
  1356  04E7  0020               	movlb	0	; select bank0
  1357  04E8  0847               	movf	LM35ReadTemp@adc_value+1,w
  1358  04E9  00F3               	movwf	___lwdiv@dividend+1
  1359  04EA  0846               	movf	LM35ReadTemp@adc_value,w
  1360  04EB  00F2               	movwf	___lwdiv@dividend
  1361  04EC  2298               	fcall	___lwdiv
  1362  04ED  0871               	movf	?___lwdiv+1,w
  1363  04EE  0020               	movlb	0	; select bank0
  1364  04EF  00C7               	movwf	LM35ReadTemp@adc_value+1
  1365  04F0  0870               	movf	?___lwdiv,w
  1366  04F1  00C6               	movwf	LM35ReadTemp@adc_value
  1367                           
  1368                           ;lm35_pic16.c: 26: t=((adc_value/1023.00)*500.00);
  1369  04F2  3000               	movlw	0
  1370  04F3  00B0               	movwf	___ftmul@f1
  1371  04F4  30FA               	movlw	250
  1372  04F5  00B1               	movwf	___ftmul@f1+1
  1373  04F6  3043               	movlw	67
  1374  04F7  00B2               	movwf	___ftmul@f1+2
  1375  04F8  30C0               	movlw	192
  1376  04F9  00A0               	movwf	___ftdiv@f2
  1377  04FA  307F               	movlw	127
  1378  04FB  00A1               	movwf	___ftdiv@f2+1
  1379  04FC  3044               	movlw	68
  1380  04FD  00A2               	movwf	___ftdiv@f2+2
  1381  04FE  0847               	movf	LM35ReadTemp@adc_value+1,w
  1382  04FF  00F9               	movwf	___lwtoft@c+1
  1383  0500  0846               	movf	LM35ReadTemp@adc_value,w
  1384  0501  00F8               	movwf	___lwtoft@c
  1385  0502  2243               	fcall	___lwtoft
  1386  0503  0878               	movf	?___lwtoft,w
  1387  0504  0020               	movlb	0	; select bank0
  1388  0505  00A3               	movwf	___ftdiv@f1
  1389  0506  0879               	movf	?___lwtoft+1,w
  1390  0507  00A4               	movwf	___ftdiv@f1+1
  1391  0508  087A               	movf	?___lwtoft+2,w
  1392  0509  00A5               	movwf	___ftdiv@f1+2
  1393  050A  2694               	fcall	___ftdiv
  1394  050B  0020               	movlb	0	; select bank0
  1395  050C  0820               	movf	?___ftdiv,w
  1396  050D  00B3               	movwf	___ftmul@f2
  1397  050E  0821               	movf	?___ftdiv+1,w
  1398  050F  00B4               	movwf	___ftmul@f2+1
  1399  0510  0822               	movf	?___ftdiv+2,w
  1400  0511  00B5               	movwf	___ftmul@f2+2
  1401  0512  273C               	fcall	___ftmul
  1402  0513  0020               	movlb	0	; select bank0
  1403  0514  0830               	movf	?___ftmul,w
  1404  0515  00C3               	movwf	LM35ReadTemp@t
  1405  0516  0831               	movf	?___ftmul+1,w
  1406  0517  00C4               	movwf	LM35ReadTemp@t+1
  1407  0518  0832               	movf	?___ftmul+2,w
  1408  0519  00C5               	movwf	LM35ReadTemp@t+2
  1409                           
  1410                           ;lm35_pic16.c: 28: return t;
  1411  051A  0843               	movf	LM35ReadTemp@t,w
  1412  051B  00C0               	movwf	?_LM35ReadTemp
  1413  051C  0844               	movf	LM35ReadTemp@t+1,w
  1414  051D  00C1               	movwf	?_LM35ReadTemp+1
  1415  051E  0845               	movf	LM35ReadTemp@t+2,w
  1416  051F  00C2               	movwf	?_LM35ReadTemp+2
  1417  0520  0008               	return
  1418  0521                     __end_of_LM35ReadTemp:	
  1419                           
  1420                           	psect	text3
  1421  0243                     __ptext3:	
  1422 ;; *************** function ___lwtoft *****************
  1423 ;; Defined at:
  1424 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  c               2    8[COMMON] unsigned int 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  3    8[COMMON] float 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1
  1438 ;;      Params:         3       0       0
  1439 ;;      Locals:         0       0       0
  1440 ;;      Temps:          1       0       0
  1441 ;;      Totals:         4       0       0
  1442 ;;Total ram usage:        4 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    1
  1445 ;; This function calls:
  1446 ;;		___ftpack
  1447 ;; This function is called by:
  1448 ;;		_LM35ReadTemp
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           
  1453                           ;psect for function ___lwtoft
  1454  0243                     ___lwtoft:	
  1455                           
  1456                           ;incstack = 0
  1457                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1458  0243  0878               	movf	___lwtoft@c,w
  1459  0244  00F0               	movwf	___ftpack@arg
  1460  0245  0879               	movf	___lwtoft@c+1,w
  1461  0246  00F1               	movwf	___ftpack@arg+1
  1462  0247  01F2               	clrf	___ftpack@arg+2
  1463  0248  308E               	movlw	142
  1464  0249  00FB               	movwf	??___lwtoft
  1465  024A  087B               	movf	??___lwtoft,w
  1466  024B  00F3               	movwf	___ftpack@exp
  1467  024C  01F4               	clrf	___ftpack@sign
  1468  024D  2521               	fcall	___ftpack
  1469  024E  0870               	movf	?___ftpack,w
  1470  024F  00F8               	movwf	?___lwtoft
  1471  0250  0871               	movf	?___ftpack+1,w
  1472  0251  00F9               	movwf	?___lwtoft+1
  1473  0252  0872               	movf	?___ftpack+2,w
  1474  0253  00FA               	movwf	?___lwtoft+2
  1475  0254  0008               	return
  1476  0255                     __end_of___lwtoft:	
  1477                           
  1478                           	psect	text4
  1479  0298                     __ptext4:	
  1480 ;; *************** function ___lwdiv *****************
  1481 ;; Defined at:
  1482 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  divisor         2    0[COMMON] unsigned int 
  1485 ;;  dividend        2    2[COMMON] unsigned int 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  quotient        2    5[COMMON] unsigned int 
  1488 ;;  counter         1    7[COMMON] unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  2    0[COMMON] unsigned int 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1
  1498 ;;      Params:         4       0       0
  1499 ;;      Locals:         3       0       0
  1500 ;;      Temps:          1       0       0
  1501 ;;      Totals:         8       0       0
  1502 ;;Total ram usage:        8 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_LM35ReadTemp
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           
  1512                           ;psect for function ___lwdiv
  1513  0298                     ___lwdiv:	
  1514                           
  1515                           ;incstack = 0
  1516                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1517  0298  01F5               	clrf	___lwdiv@quotient
  1518  0299  01F6               	clrf	___lwdiv@quotient+1
  1519  029A  0870               	movf	___lwdiv@divisor,w
  1520  029B  0471               	iorwf	___lwdiv@divisor+1,w
  1521  029C  1903               	btfsc	3,2
  1522  029D  2AC7               	goto	l1446
  1523  029E  01F7               	clrf	___lwdiv@counter
  1524  029F  0AF7               	incf	___lwdiv@counter,f
  1525  02A0                     l1434:	
  1526  02A0  1BF1               	btfsc	___lwdiv@divisor+1,7
  1527  02A1  2AAC               	goto	l1436
  1528  02A2  3001               	movlw	1
  1529  02A3                     u1555:	
  1530  02A3  35F0               	lslf	___lwdiv@divisor,f
  1531  02A4  0DF1               	rlf	___lwdiv@divisor+1,f
  1532  02A5  0B89               	decfsz	9,f
  1533  02A6  2AA3               	goto	u1555
  1534  02A7  3001               	movlw	1
  1535  02A8  00F4               	movwf	??___lwdiv
  1536  02A9  0874               	movf	??___lwdiv,w
  1537  02AA  07F7               	addwf	___lwdiv@counter,f
  1538  02AB  2AA0               	goto	l1434
  1539  02AC                     l1436:	
  1540  02AC  3001               	movlw	1
  1541  02AD                     u1575:	
  1542  02AD  35F5               	lslf	___lwdiv@quotient,f
  1543  02AE  0DF6               	rlf	___lwdiv@quotient+1,f
  1544  02AF  0B89               	decfsz	9,f
  1545  02B0  2AAD               	goto	u1575
  1546  02B1  0871               	movf	___lwdiv@divisor+1,w
  1547  02B2  0273               	subwf	___lwdiv@dividend+1,w
  1548  02B3  1D03               	skipz
  1549  02B4  2AB7               	goto	u1585
  1550  02B5  0870               	movf	___lwdiv@divisor,w
  1551  02B6  0272               	subwf	___lwdiv@dividend,w
  1552  02B7                     u1585:	
  1553  02B7  1C03               	skipc
  1554  02B8  2ABE               	goto	l1442
  1555  02B9  0870               	movf	___lwdiv@divisor,w
  1556  02BA  02F2               	subwf	___lwdiv@dividend,f
  1557  02BB  0871               	movf	___lwdiv@divisor+1,w
  1558  02BC  3BF3               	subwfb	___lwdiv@dividend+1,f
  1559  02BD  1475               	bsf	___lwdiv@quotient,0
  1560  02BE                     l1442:	
  1561  02BE  3001               	movlw	1
  1562  02BF                     u1595:	
  1563  02BF  36F1               	lsrf	___lwdiv@divisor+1,f
  1564  02C0  0CF0               	rrf	___lwdiv@divisor,f
  1565  02C1  0B89               	decfsz	9,f
  1566  02C2  2ABF               	goto	u1595
  1567  02C3  3001               	movlw	1
  1568  02C4  02F7               	subwf	___lwdiv@counter,f
  1569  02C5  1D03               	btfss	3,2
  1570  02C6  2AAC               	goto	l1436
  1571  02C7                     l1446:	
  1572  02C7  0876               	movf	___lwdiv@quotient+1,w
  1573  02C8  00F1               	movwf	?___lwdiv+1
  1574  02C9  0875               	movf	___lwdiv@quotient,w
  1575  02CA  00F0               	movwf	?___lwdiv
  1576  02CB  0008               	return
  1577  02CC                     __end_of___lwdiv:	
  1578                           
  1579                           	psect	text5
  1580  073C                     __ptext5:	
  1581 ;; *************** function ___ftmul *****************
  1582 ;; Defined at:
  1583 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  f1              3   16[BANK0 ] float 
  1586 ;;  f2              3   19[BANK0 ] float 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  1589 ;;  sign            1   31[BANK0 ] unsigned char 
  1590 ;;  cntr            1   30[BANK0 ] unsigned char 
  1591 ;;  exp             1   26[BANK0 ] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  3   16[BANK0 ] float 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1
  1601 ;;      Params:         0       6       0
  1602 ;;      Locals:         0       6       0
  1603 ;;      Temps:          0       4       0
  1604 ;;      Totals:         0      16       0
  1605 ;;Total ram usage:       16 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    1
  1608 ;; This function calls:
  1609 ;;		___ftpack
  1610 ;; This function is called by:
  1611 ;;		_LM35ReadTemp
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function ___ftmul
  1617  073C                     ___ftmul:	
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1621  073C  0020               	movlb	0	; select bank0
  1622  073D  0830               	movf	___ftmul@f1,w
  1623  073E  00B6               	movwf	??___ftmul
  1624  073F  0831               	movf	___ftmul@f1+1,w
  1625  0740  00B7               	movwf	??___ftmul+1
  1626  0741  0832               	movf	___ftmul@f1+2,w
  1627  0742  00B8               	movwf	??___ftmul+2
  1628  0743  1003               	clrc
  1629  0744  0D37               	rlf	??___ftmul+1,w
  1630  0745  0D38               	rlf	??___ftmul+2,w
  1631  0746  00B9               	movwf	??___ftmul+3
  1632  0747  0839               	movf	??___ftmul+3,w
  1633  0748  00BA               	movwf	___ftmul@exp
  1634  0749  083A               	movf	___ftmul@exp,w
  1635  074A  1D03               	btfss	3,2
  1636  074B  2F53               	goto	l1380
  1637  074C  3000               	movlw	0
  1638  074D  00B0               	movwf	?___ftmul
  1639  074E  3000               	movlw	0
  1640  074F  00B1               	movwf	?___ftmul+1
  1641  0750  3000               	movlw	0
  1642  0751  00B2               	movwf	?___ftmul+2
  1643  0752  0008               	return
  1644  0753                     l1380:	
  1645  0753  0833               	movf	___ftmul@f2,w
  1646  0754  00B6               	movwf	??___ftmul
  1647  0755  0834               	movf	___ftmul@f2+1,w
  1648  0756  00B7               	movwf	??___ftmul+1
  1649  0757  0835               	movf	___ftmul@f2+2,w
  1650  0758  00B8               	movwf	??___ftmul+2
  1651  0759  1003               	clrc
  1652  075A  0D37               	rlf	??___ftmul+1,w
  1653  075B  0D38               	rlf	??___ftmul+2,w
  1654  075C  00B9               	movwf	??___ftmul+3
  1655  075D  0839               	movf	??___ftmul+3,w
  1656  075E  00BF               	movwf	___ftmul@sign
  1657  075F  083F               	movf	___ftmul@sign,w
  1658  0760  1D03               	btfss	3,2
  1659  0761  2F69               	goto	l1386
  1660  0762  3000               	movlw	0
  1661  0763  00B0               	movwf	?___ftmul
  1662  0764  3000               	movlw	0
  1663  0765  00B1               	movwf	?___ftmul+1
  1664  0766  3000               	movlw	0
  1665  0767  00B2               	movwf	?___ftmul+2
  1666  0768  0008               	return
  1667  0769                     l1386:	
  1668  0769  083F               	movf	___ftmul@sign,w
  1669  076A  3E7B               	addlw	123
  1670  076B  00B6               	movwf	??___ftmul
  1671  076C  0836               	movf	??___ftmul,w
  1672  076D  07BA               	addwf	___ftmul@exp,f
  1673  076E  0830               	movf	___ftmul@f1,w
  1674  076F  00B6               	movwf	??___ftmul
  1675  0770  0831               	movf	___ftmul@f1+1,w
  1676  0771  00B7               	movwf	??___ftmul+1
  1677  0772  0832               	movf	___ftmul@f1+2,w
  1678  0773  00B8               	movwf	??___ftmul+2
  1679  0774  3010               	movlw	16
  1680  0775                     u1445:	
  1681  0775  36B8               	lsrf	??___ftmul+2,f
  1682  0776  0CB7               	rrf	??___ftmul+1,f
  1683  0777  0CB6               	rrf	??___ftmul,f
  1684  0778  0B89               	decfsz	9,f
  1685  0779  2F75               	goto	u1445
  1686  077A  0836               	movf	??___ftmul,w
  1687  077B  00B9               	movwf	??___ftmul+3
  1688  077C  0839               	movf	??___ftmul+3,w
  1689  077D  00BF               	movwf	___ftmul@sign
  1690  077E  0833               	movf	___ftmul@f2,w
  1691  077F  00B6               	movwf	??___ftmul
  1692  0780  0834               	movf	___ftmul@f2+1,w
  1693  0781  00B7               	movwf	??___ftmul+1
  1694  0782  0835               	movf	___ftmul@f2+2,w
  1695  0783  00B8               	movwf	??___ftmul+2
  1696  0784  3010               	movlw	16
  1697  0785                     u1455:	
  1698  0785  36B8               	lsrf	??___ftmul+2,f
  1699  0786  0CB7               	rrf	??___ftmul+1,f
  1700  0787  0CB6               	rrf	??___ftmul,f
  1701  0788  0B89               	decfsz	9,f
  1702  0789  2F85               	goto	u1455
  1703  078A  0836               	movf	??___ftmul,w
  1704  078B  00B9               	movwf	??___ftmul+3
  1705  078C  0839               	movf	??___ftmul+3,w
  1706  078D  06BF               	xorwf	___ftmul@sign,f
  1707  078E  3080               	movlw	128
  1708  078F  00B6               	movwf	??___ftmul
  1709  0790  0836               	movf	??___ftmul,w
  1710  0791  05BF               	andwf	___ftmul@sign,f
  1711  0792  17B1               	bsf	___ftmul@f1+1,7
  1712  0793  17B4               	bsf	___ftmul@f2+1,7
  1713  0794  30FF               	movlw	255
  1714  0795  05B3               	andwf	___ftmul@f2,f
  1715  0796  30FF               	movlw	255
  1716  0797  05B4               	andwf	___ftmul@f2+1,f
  1717  0798  3000               	movlw	0
  1718  0799  05B5               	andwf	___ftmul@f2+2,f
  1719  079A  3000               	movlw	0
  1720  079B  00BB               	movwf	___ftmul@f3_as_product
  1721  079C  3000               	movlw	0
  1722  079D  00BC               	movwf	___ftmul@f3_as_product+1
  1723  079E  3000               	movlw	0
  1724  079F  00BD               	movwf	___ftmul@f3_as_product+2
  1725  07A0  3007               	movlw	7
  1726  07A1  00B6               	movwf	??___ftmul
  1727  07A2  0836               	movf	??___ftmul,w
  1728  07A3  00BE               	movwf	___ftmul@cntr
  1729  07A4                     l1398:	
  1730  07A4  1C30               	btfss	___ftmul@f1,0
  1731  07A5  2FAC               	goto	l1402
  1732  07A6  0833               	movf	___ftmul@f2,w
  1733  07A7  07BB               	addwf	___ftmul@f3_as_product,f
  1734  07A8  0834               	movf	___ftmul@f2+1,w
  1735  07A9  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  1736  07AA  0835               	movf	___ftmul@f2+2,w
  1737  07AB  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  1738  07AC                     l1402:	
  1739  07AC  3001               	movlw	1
  1740  07AD                     u1475:	
  1741  07AD  36B2               	lsrf	___ftmul@f1+2,f
  1742  07AE  0CB1               	rrf	___ftmul@f1+1,f
  1743  07AF  0CB0               	rrf	___ftmul@f1,f
  1744  07B0  0B89               	decfsz	9,f
  1745  07B1  2FAD               	goto	u1475
  1746  07B2  3001               	movlw	1
  1747  07B3                     u1485:	
  1748  07B3  35B3               	lslf	___ftmul@f2,f
  1749  07B4  0DB4               	rlf	___ftmul@f2+1,f
  1750  07B5  0DB5               	rlf	___ftmul@f2+2,f
  1751  07B6  0B89               	decfsz	9,f
  1752  07B7  2FB3               	goto	u1485
  1753  07B8  3001               	movlw	1
  1754  07B9  02BE               	subwf	___ftmul@cntr,f
  1755  07BA  1D03               	btfss	3,2
  1756  07BB  2FA4               	goto	l1398
  1757  07BC  3009               	movlw	9
  1758  07BD  00B6               	movwf	??___ftmul
  1759  07BE  0836               	movf	??___ftmul,w
  1760  07BF  00BE               	movwf	___ftmul@cntr
  1761  07C0                     l1410:	
  1762  07C0  1C30               	btfss	___ftmul@f1,0
  1763  07C1  2FC8               	goto	l1414
  1764  07C2  0833               	movf	___ftmul@f2,w
  1765  07C3  07BB               	addwf	___ftmul@f3_as_product,f
  1766  07C4  0834               	movf	___ftmul@f2+1,w
  1767  07C5  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  1768  07C6  0835               	movf	___ftmul@f2+2,w
  1769  07C7  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  1770  07C8                     l1414:	
  1771  07C8  3001               	movlw	1
  1772  07C9                     u1515:	
  1773  07C9  36B2               	lsrf	___ftmul@f1+2,f
  1774  07CA  0CB1               	rrf	___ftmul@f1+1,f
  1775  07CB  0CB0               	rrf	___ftmul@f1,f
  1776  07CC  0B89               	decfsz	9,f
  1777  07CD  2FC9               	goto	u1515
  1778  07CE  3001               	movlw	1
  1779  07CF                     u1525:	
  1780  07CF  36BD               	lsrf	___ftmul@f3_as_product+2,f
  1781  07D0  0CBC               	rrf	___ftmul@f3_as_product+1,f
  1782  07D1  0CBB               	rrf	___ftmul@f3_as_product,f
  1783  07D2  0B89               	decfsz	9,f
  1784  07D3  2FCF               	goto	u1525
  1785  07D4  3001               	movlw	1
  1786  07D5  02BE               	subwf	___ftmul@cntr,f
  1787  07D6  1D03               	btfss	3,2
  1788  07D7  2FC0               	goto	l1410
  1789  07D8  083B               	movf	___ftmul@f3_as_product,w
  1790  07D9  00F0               	movwf	___ftpack@arg
  1791  07DA  083C               	movf	___ftmul@f3_as_product+1,w
  1792  07DB  00F1               	movwf	___ftpack@arg+1
  1793  07DC  083D               	movf	___ftmul@f3_as_product+2,w
  1794  07DD  00F2               	movwf	___ftpack@arg+2
  1795  07DE  083A               	movf	___ftmul@exp,w
  1796  07DF  00B6               	movwf	??___ftmul
  1797  07E0  0836               	movf	??___ftmul,w
  1798  07E1  00F3               	movwf	___ftpack@exp
  1799  07E2  083F               	movf	___ftmul@sign,w
  1800  07E3  00B7               	movwf	??___ftmul+1
  1801  07E4  0837               	movf	??___ftmul+1,w
  1802  07E5  00F4               	movwf	___ftpack@sign
  1803  07E6  2521               	fcall	___ftpack
  1804  07E7  0870               	movf	?___ftpack,w
  1805  07E8  0020               	movlb	0	; select bank0
  1806  07E9  00B0               	movwf	?___ftmul
  1807  07EA  0871               	movf	?___ftpack+1,w
  1808  07EB  00B1               	movwf	?___ftmul+1
  1809  07EC  0872               	movf	?___ftpack+2,w
  1810  07ED  00B2               	movwf	?___ftmul+2
  1811  07EE  0008               	return
  1812  07EF                     __end_of___ftmul:	
  1813                           
  1814                           	psect	text6
  1815  0694                     __ptext6:	
  1816 ;; *************** function ___ftdiv *****************
  1817 ;; Defined at:
  1818 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  f2              3    0[BANK0 ] float 
  1821 ;;  f1              3    3[BANK0 ] float 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  f3              3   11[BANK0 ] float 
  1824 ;;  sign            1   15[BANK0 ] unsigned char 
  1825 ;;  exp             1   14[BANK0 ] unsigned char 
  1826 ;;  cntr            1   10[BANK0 ] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  3    0[BANK0 ] float 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0, pclath, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1
  1836 ;;      Params:         0       6       0
  1837 ;;      Locals:         0       6       0
  1838 ;;      Temps:          0       4       0
  1839 ;;      Totals:         0      16       0
  1840 ;;Total ram usage:       16 bytes
  1841 ;; Hardware stack levels used:    1
  1842 ;; Hardware stack levels required when called:    1
  1843 ;; This function calls:
  1844 ;;		___ftpack
  1845 ;; This function is called by:
  1846 ;;		_LM35ReadTemp
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function ___ftdiv
  1852  0694                     ___ftdiv:	
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1856  0694  0020               	movlb	0	; select bank0
  1857  0695  0823               	movf	___ftdiv@f1,w
  1858  0696  00A6               	movwf	??___ftdiv
  1859  0697  0824               	movf	___ftdiv@f1+1,w
  1860  0698  00A7               	movwf	??___ftdiv+1
  1861  0699  0825               	movf	___ftdiv@f1+2,w
  1862  069A  00A8               	movwf	??___ftdiv+2
  1863  069B  1003               	clrc
  1864  069C  0D27               	rlf	??___ftdiv+1,w
  1865  069D  0D28               	rlf	??___ftdiv+2,w
  1866  069E  00A9               	movwf	??___ftdiv+3
  1867  069F  0829               	movf	??___ftdiv+3,w
  1868  06A0  00AE               	movwf	___ftdiv@exp
  1869  06A1  082E               	movf	___ftdiv@exp,w
  1870  06A2  1D03               	btfss	3,2
  1871  06A3  2EAB               	goto	l1338
  1872  06A4  3000               	movlw	0
  1873  06A5  00A0               	movwf	?___ftdiv
  1874  06A6  3000               	movlw	0
  1875  06A7  00A1               	movwf	?___ftdiv+1
  1876  06A8  3000               	movlw	0
  1877  06A9  00A2               	movwf	?___ftdiv+2
  1878  06AA  0008               	return
  1879  06AB                     l1338:	
  1880  06AB  0820               	movf	___ftdiv@f2,w
  1881  06AC  00A6               	movwf	??___ftdiv
  1882  06AD  0821               	movf	___ftdiv@f2+1,w
  1883  06AE  00A7               	movwf	??___ftdiv+1
  1884  06AF  0822               	movf	___ftdiv@f2+2,w
  1885  06B0  00A8               	movwf	??___ftdiv+2
  1886  06B1  1003               	clrc
  1887  06B2  0D27               	rlf	??___ftdiv+1,w
  1888  06B3  0D28               	rlf	??___ftdiv+2,w
  1889  06B4  00A9               	movwf	??___ftdiv+3
  1890  06B5  0829               	movf	??___ftdiv+3,w
  1891  06B6  00AF               	movwf	___ftdiv@sign
  1892  06B7  082F               	movf	___ftdiv@sign,w
  1893  06B8  1D03               	btfss	3,2
  1894  06B9  2EC1               	goto	l1344
  1895  06BA  3000               	movlw	0
  1896  06BB  00A0               	movwf	?___ftdiv
  1897  06BC  3000               	movlw	0
  1898  06BD  00A1               	movwf	?___ftdiv+1
  1899  06BE  3000               	movlw	0
  1900  06BF  00A2               	movwf	?___ftdiv+2
  1901  06C0  0008               	return
  1902  06C1                     l1344:	
  1903  06C1  3000               	movlw	0
  1904  06C2  00AB               	movwf	___ftdiv@f3
  1905  06C3  3000               	movlw	0
  1906  06C4  00AC               	movwf	___ftdiv@f3+1
  1907  06C5  3000               	movlw	0
  1908  06C6  00AD               	movwf	___ftdiv@f3+2
  1909  06C7  3089               	movlw	137
  1910  06C8  072F               	addwf	___ftdiv@sign,w
  1911  06C9  00A6               	movwf	??___ftdiv
  1912  06CA  0826               	movf	??___ftdiv,w
  1913  06CB  02AE               	subwf	___ftdiv@exp,f
  1914  06CC  0823               	movf	___ftdiv@f1,w
  1915  06CD  00A6               	movwf	??___ftdiv
  1916  06CE  0824               	movf	___ftdiv@f1+1,w
  1917  06CF  00A7               	movwf	??___ftdiv+1
  1918  06D0  0825               	movf	___ftdiv@f1+2,w
  1919  06D1  00A8               	movwf	??___ftdiv+2
  1920  06D2  3010               	movlw	16
  1921  06D3                     u1365:	
  1922  06D3  36A8               	lsrf	??___ftdiv+2,f
  1923  06D4  0CA7               	rrf	??___ftdiv+1,f
  1924  06D5  0CA6               	rrf	??___ftdiv,f
  1925  06D6  0B89               	decfsz	9,f
  1926  06D7  2ED3               	goto	u1365
  1927  06D8  0826               	movf	??___ftdiv,w
  1928  06D9  00A9               	movwf	??___ftdiv+3
  1929  06DA  0829               	movf	??___ftdiv+3,w
  1930  06DB  00AF               	movwf	___ftdiv@sign
  1931  06DC  0820               	movf	___ftdiv@f2,w
  1932  06DD  00A6               	movwf	??___ftdiv
  1933  06DE  0821               	movf	___ftdiv@f2+1,w
  1934  06DF  00A7               	movwf	??___ftdiv+1
  1935  06E0  0822               	movf	___ftdiv@f2+2,w
  1936  06E1  00A8               	movwf	??___ftdiv+2
  1937  06E2  3010               	movlw	16
  1938  06E3                     u1375:	
  1939  06E3  36A8               	lsrf	??___ftdiv+2,f
  1940  06E4  0CA7               	rrf	??___ftdiv+1,f
  1941  06E5  0CA6               	rrf	??___ftdiv,f
  1942  06E6  0B89               	decfsz	9,f
  1943  06E7  2EE3               	goto	u1375
  1944  06E8  0826               	movf	??___ftdiv,w
  1945  06E9  00A9               	movwf	??___ftdiv+3
  1946  06EA  0829               	movf	??___ftdiv+3,w
  1947  06EB  06AF               	xorwf	___ftdiv@sign,f
  1948  06EC  3080               	movlw	128
  1949  06ED  00A6               	movwf	??___ftdiv
  1950  06EE  0826               	movf	??___ftdiv,w
  1951  06EF  05AF               	andwf	___ftdiv@sign,f
  1952  06F0  17A4               	bsf	___ftdiv@f1+1,7
  1953  06F1  30FF               	movlw	255
  1954  06F2  05A3               	andwf	___ftdiv@f1,f
  1955  06F3  30FF               	movlw	255
  1956  06F4  05A4               	andwf	___ftdiv@f1+1,f
  1957  06F5  3000               	movlw	0
  1958  06F6  05A5               	andwf	___ftdiv@f1+2,f
  1959  06F7  17A1               	bsf	___ftdiv@f2+1,7
  1960  06F8  30FF               	movlw	255
  1961  06F9  05A0               	andwf	___ftdiv@f2,f
  1962  06FA  30FF               	movlw	255
  1963  06FB  05A1               	andwf	___ftdiv@f2+1,f
  1964  06FC  3000               	movlw	0
  1965  06FD  05A2               	andwf	___ftdiv@f2+2,f
  1966  06FE  3018               	movlw	24
  1967  06FF  00A6               	movwf	??___ftdiv
  1968  0700  0826               	movf	??___ftdiv,w
  1969  0701  00AA               	movwf	___ftdiv@cntr
  1970  0702                     l1358:	
  1971  0702  3001               	movlw	1
  1972  0703                     u1385:	
  1973  0703  35AB               	lslf	___ftdiv@f3,f
  1974  0704  0DAC               	rlf	___ftdiv@f3+1,f
  1975  0705  0DAD               	rlf	___ftdiv@f3+2,f
  1976  0706  0B89               	decfsz	9,f
  1977  0707  2F03               	goto	u1385
  1978  0708  0822               	movf	___ftdiv@f2+2,w
  1979  0709  0225               	subwf	___ftdiv@f1+2,w
  1980  070A  1D03               	skipz
  1981  070B  2F12               	goto	u1395
  1982  070C  0821               	movf	___ftdiv@f2+1,w
  1983  070D  0224               	subwf	___ftdiv@f1+1,w
  1984  070E  1D03               	skipz
  1985  070F  2F12               	goto	u1395
  1986  0710  0820               	movf	___ftdiv@f2,w
  1987  0711  0223               	subwf	___ftdiv@f1,w
  1988  0712                     u1395:	
  1989  0712  1C03               	skipc
  1990  0713  2F1B               	goto	l1366
  1991  0714  0820               	movf	___ftdiv@f2,w
  1992  0715  02A3               	subwf	___ftdiv@f1,f
  1993  0716  0821               	movf	___ftdiv@f2+1,w
  1994  0717  3BA4               	subwfb	___ftdiv@f1+1,f
  1995  0718  0822               	movf	___ftdiv@f2+2,w
  1996  0719  3BA5               	subwfb	___ftdiv@f1+2,f
  1997  071A  142B               	bsf	___ftdiv@f3,0
  1998  071B                     l1366:	
  1999  071B  3001               	movlw	1
  2000  071C                     u1405:	
  2001  071C  35A3               	lslf	___ftdiv@f1,f
  2002  071D  0DA4               	rlf	___ftdiv@f1+1,f
  2003  071E  0DA5               	rlf	___ftdiv@f1+2,f
  2004  071F  0B89               	decfsz	9,f
  2005  0720  2F1C               	goto	u1405
  2006  0721  3001               	movlw	1
  2007  0722  02AA               	subwf	___ftdiv@cntr,f
  2008  0723  1D03               	btfss	3,2
  2009  0724  2F02               	goto	l1358
  2010  0725  082B               	movf	___ftdiv@f3,w
  2011  0726  00F0               	movwf	___ftpack@arg
  2012  0727  082C               	movf	___ftdiv@f3+1,w
  2013  0728  00F1               	movwf	___ftpack@arg+1
  2014  0729  082D               	movf	___ftdiv@f3+2,w
  2015  072A  00F2               	movwf	___ftpack@arg+2
  2016  072B  082E               	movf	___ftdiv@exp,w
  2017  072C  00A6               	movwf	??___ftdiv
  2018  072D  0826               	movf	??___ftdiv,w
  2019  072E  00F3               	movwf	___ftpack@exp
  2020  072F  082F               	movf	___ftdiv@sign,w
  2021  0730  00A7               	movwf	??___ftdiv+1
  2022  0731  0827               	movf	??___ftdiv+1,w
  2023  0732  00F4               	movwf	___ftpack@sign
  2024  0733  2521               	fcall	___ftpack
  2025  0734  0870               	movf	?___ftpack,w
  2026  0735  0020               	movlb	0	; select bank0
  2027  0736  00A0               	movwf	?___ftdiv
  2028  0737  0871               	movf	?___ftpack+1,w
  2029  0738  00A1               	movwf	?___ftdiv+1
  2030  0739  0872               	movf	?___ftpack+2,w
  2031  073A  00A2               	movwf	?___ftdiv+2
  2032  073B  0008               	return
  2033  073C                     __end_of___ftdiv:	
  2034                           
  2035                           	psect	text7
  2036  0521                     __ptext7:	
  2037 ;; *************** function ___ftpack *****************
  2038 ;; Defined at:
  2039 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  arg             3    0[COMMON] unsigned um
  2042 ;;  exp             1    3[COMMON] unsigned char 
  2043 ;;  sign            1    4[COMMON] unsigned char 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  3    0[COMMON] float 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMMON   BANK0   BANK1
  2055 ;;      Params:         5       0       0
  2056 ;;      Locals:         0       0       0
  2057 ;;      Temps:          3       0       0
  2058 ;;      Totals:         8       0       0
  2059 ;;Total ram usage:        8 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		___ftdiv
  2065 ;;		___ftmul
  2066 ;;		___lwtoft
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function ___ftpack
  2072  0521                     ___ftpack:	
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2076  0521  0873               	movf	___ftpack@exp,w
  2077  0522  1903               	btfsc	3,2
  2078  0523  2D29               	goto	l1176
  2079  0524  0872               	movf	___ftpack@arg+2,w
  2080  0525  0471               	iorwf	___ftpack@arg+1,w
  2081  0526  0470               	iorwf	___ftpack@arg,w
  2082  0527  1D03               	skipz
  2083  0528  2D3A               	goto	l1182
  2084  0529                     l1176:	
  2085  0529  3000               	movlw	0
  2086  052A  00F0               	movwf	?___ftpack
  2087  052B  3000               	movlw	0
  2088  052C  00F1               	movwf	?___ftpack+1
  2089  052D  3000               	movlw	0
  2090  052E  00F2               	movwf	?___ftpack+2
  2091  052F  0008               	return
  2092  0530                     l1180:	
  2093  0530  3001               	movlw	1
  2094  0531  00F5               	movwf	??___ftpack
  2095  0532  0875               	movf	??___ftpack,w
  2096  0533  07F3               	addwf	___ftpack@exp,f
  2097  0534  3001               	movlw	1
  2098  0535                     u995:	
  2099  0535  36F2               	lsrf	___ftpack@arg+2,f
  2100  0536  0CF1               	rrf	___ftpack@arg+1,f
  2101  0537  0CF0               	rrf	___ftpack@arg,f
  2102  0538  0B89               	decfsz	9,f
  2103  0539  2D35               	goto	u995
  2104  053A                     l1182:	
  2105  053A  30FE               	movlw	254
  2106  053B  0572               	andwf	___ftpack@arg+2,w
  2107  053C  1903               	btfsc	3,2
  2108  053D  2D53               	goto	l369
  2109  053E  2D30               	goto	l1180
  2110  053F                     l1184:	
  2111  053F  3001               	movlw	1
  2112  0540  00F5               	movwf	??___ftpack
  2113  0541  0875               	movf	??___ftpack,w
  2114  0542  07F3               	addwf	___ftpack@exp,f
  2115  0543  3001               	movlw	1
  2116  0544  07F0               	addwf	___ftpack@arg,f
  2117  0545  3000               	movlw	0
  2118  0546  1803               	skipnc
  2119  0547  3001               	movlw	1
  2120  0548  07F1               	addwf	___ftpack@arg+1,f
  2121  0549  3000               	movlw	0
  2122  054A  1803               	skipnc
  2123  054B  3001               	movlw	1
  2124  054C  07F2               	addwf	___ftpack@arg+2,f
  2125  054D  3001               	movlw	1
  2126  054E                     u1015:	
  2127  054E  36F2               	lsrf	___ftpack@arg+2,f
  2128  054F  0CF1               	rrf	___ftpack@arg+1,f
  2129  0550  0CF0               	rrf	___ftpack@arg,f
  2130  0551  0B89               	decfsz	9,f
  2131  0552  2D4E               	goto	u1015
  2132  0553                     l369:	
  2133  0553  30FF               	movlw	255
  2134  0554  0572               	andwf	___ftpack@arg+2,w
  2135  0555  1903               	btfsc	3,2
  2136  0556  2D60               	goto	l1192
  2137  0557  2D3F               	goto	l1184
  2138  0558                     l1190:	
  2139  0558  3001               	movlw	1
  2140  0559  02F3               	subwf	___ftpack@exp,f
  2141  055A  3001               	movlw	1
  2142  055B                     u1035:	
  2143  055B  35F0               	lslf	___ftpack@arg,f
  2144  055C  0DF1               	rlf	___ftpack@arg+1,f
  2145  055D  0DF2               	rlf	___ftpack@arg+2,f
  2146  055E  0B89               	decfsz	9,f
  2147  055F  2D5B               	goto	u1035
  2148  0560                     l1192:	
  2149  0560  1BF1               	btfsc	___ftpack@arg+1,7
  2150  0561  2D66               	goto	l376
  2151  0562  3002               	movlw	2
  2152  0563  0273               	subwf	___ftpack@exp,w
  2153  0564  1803               	skipnc
  2154  0565  2D58               	goto	l1190
  2155  0566                     l376:	
  2156  0566  1873               	btfsc	___ftpack@exp,0
  2157  0567  2D6E               	goto	l377
  2158  0568  30FF               	movlw	255
  2159  0569  05F0               	andwf	___ftpack@arg,f
  2160  056A  307F               	movlw	127
  2161  056B  05F1               	andwf	___ftpack@arg+1,f
  2162  056C  30FF               	movlw	255
  2163  056D  05F2               	andwf	___ftpack@arg+2,f
  2164  056E                     l377:	
  2165  056E  1003               	clrc
  2166  056F  0CF3               	rrf	___ftpack@exp,f
  2167  0570  0873               	movf	___ftpack@exp,w
  2168  0571  00F5               	movwf	??___ftpack
  2169  0572  01F6               	clrf	??___ftpack+1
  2170  0573  01F7               	clrf	??___ftpack+2
  2171  0574  3010               	movlw	16
  2172  0575                     u1075:	
  2173  0575  35F5               	lslf	??___ftpack,f
  2174  0576  0DF6               	rlf	??___ftpack+1,f
  2175  0577  0DF7               	rlf	??___ftpack+2,f
  2176  0578  0B89               	decfsz	9,f
  2177  0579  2D75               	goto	u1075
  2178  057A  0875               	movf	??___ftpack,w
  2179  057B  04F0               	iorwf	___ftpack@arg,f
  2180  057C  0876               	movf	??___ftpack+1,w
  2181  057D  04F1               	iorwf	___ftpack@arg+1,f
  2182  057E  0877               	movf	??___ftpack+2,w
  2183  057F  04F2               	iorwf	___ftpack@arg+2,f
  2184  0580  0874               	movf	___ftpack@sign,w
  2185  0581  1903               	btfsc	3,2
  2186  0582  0008               	return
  2187  0583  17F2               	bsf	___ftpack@arg+2,7
  2188  0584  0008               	return
  2189  0585                     __end_of___ftpack:	
  2190                           
  2191                           	psect	text8
  2192  0255                     __ptext8:	
  2193 ;; *************** function _ReadADC *****************
  2194 ;; Defined at:
  2195 ;;		line 40 in file "adc_pic16.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  ch              1    wreg     unsigned char 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  ch              1    3[COMMON] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  2    0[COMMON] unsigned int 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1
  2209 ;;      Params:         2       0       0
  2210 ;;      Locals:         1       0       0
  2211 ;;      Temps:          1       0       0
  2212 ;;      Totals:         4       0       0
  2213 ;;Total ram usage:        4 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_LM35ReadTemp
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _ReadADC
  2224  0255                     _ReadADC:	
  2225                           
  2226                           ;incstack = 0
  2227                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  2228                           ;ReadADC@ch stored from wreg
  2229  0255  00F3               	movwf	ReadADC@ch
  2230                           
  2231                           ;adc_pic16.c: 42: if(ch>7) return 0;
  2232  0256  3008               	movlw	8
  2233  0257  0273               	subwf	ReadADC@ch,w
  2234  0258  1C03               	skipc
  2235  0259  2A5D               	goto	l1240
  2236  025A  01F0               	clrf	?_ReadADC
  2237  025B  01F1               	clrf	?_ReadADC+1
  2238  025C  0008               	return
  2239  025D                     l1240:	
  2240                           
  2241                           ;adc_pic16.c: 44: ADCON0bits.CHS=ch;
  2242  025D  0873               	movf	ReadADC@ch,w
  2243  025E  00F2               	movwf	??_ReadADC
  2244  025F  0DF2               	rlf	??_ReadADC,f
  2245  0260  0DF2               	rlf	??_ReadADC,f
  2246  0261  0021               	movlb	1	; select bank1
  2247  0262  081D               	movf	29,w	;volatile
  2248  0263  0672               	xorwf	??_ReadADC,w
  2249  0264  3983               	andlw	-125
  2250  0265  0672               	xorwf	??_ReadADC,w
  2251  0266  009D               	movwf	29	;volatile
  2252                           
  2253                           ;adc_pic16.c: 47: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2254  0267  30A6               	movlw	166
  2255  0268  00F2               	movwf	??_ReadADC
  2256  0269                     u1897:	
  2257  0269  0BF2               	decfsz	??_ReadADC,f
  2258  026A  2A69               	goto	u1897
  2259  026B  0000               	nop
  2260                           
  2261                           ;adc_pic16.c: 50: ADCON0bits.GO=1;
  2262  026C  0021               	movlb	1	; select bank1
  2263  026D  149D               	bsf	29,1	;volatile
  2264  026E                     l115:	
  2265                           ;adc_pic16.c: 53: while(ADCON0bits.GO);
  2266                           
  2267  026E  189D               	btfsc	29,1	;volatile
  2268  026F  2A6E               	goto	l115
  2269                           
  2270                           ;adc_pic16.c: 55: return ((ADRESH<<8)|ADRESL);
  2271  0270  081C               	movf	28,w	;volatile
  2272  0271  00F1               	movwf	?_ReadADC+1
  2273  0272  081B               	movf	27,w	;volatile
  2274  0273  00F0               	movwf	?_ReadADC
  2275  0274  0008               	return
  2276  0275                     __end_of_ReadADC:	
  2277                           
  2278                           	psect	text9
  2279  02CC                     __ptext9:	
  2280 ;; *************** function _LCDWriteString *****************
  2281 ;; Defined at:
  2282 ;;		line 279 in file "lcd_hd44780_pic16.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  msg             2   12[COMMON] PTR const unsigned char 
  2285 ;;		 -> STR_2(4), STR_1(12), 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  cc              1    1[BANK0 ] char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1
  2297 ;;      Params:         2       0       0
  2298 ;;      Locals:         0       1       0
  2299 ;;      Temps:          0       1       0
  2300 ;;      Totals:         2       2       0
  2301 ;;Total ram usage:        4 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    2
  2304 ;; This function calls:
  2305 ;;		_LCDByte
  2306 ;; This function is called by:
  2307 ;;		_main
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _LCDWriteString
  2313  02CC                     _LCDWriteString:	
  2314  02CC                     l1526:	
  2315                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2319                           
  2320  02CC  087C               	movf	LCDWriteString@msg,w
  2321  02CD  0084               	movwf	4
  2322  02CE  087D               	movf	LCDWriteString@msg+1,w
  2323  02CF  0085               	movwf	5
  2324  02D0  0012               	moviw fsr0++
  2325  02D1  1903               	btfsc	3,2
  2326  02D2  0008               	return
  2327                           
  2328                           ;lcd_hd44780_pic16.c: 282: {
  2329                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  2330  02D3  087C               	movf	LCDWriteString@msg,w
  2331  02D4  0084               	movwf	4
  2332  02D5  087D               	movf	LCDWriteString@msg+1,w
  2333  02D6  0085               	movwf	5
  2334  02D7  0012               	moviw fsr0++
  2335  02D8  3A25               	xorlw	37
  2336  02D9  1D03               	btfss	3,2
  2337  02DA  2AF8               	goto	l1522
  2338                           
  2339                           ;lcd_hd44780_pic16.c: 285: {
  2340                           ;lcd_hd44780_pic16.c: 286: msg++;
  2341  02DB  3001               	movlw	1
  2342  02DC  07FC               	addwf	LCDWriteString@msg,f
  2343  02DD  3000               	movlw	0
  2344  02DE  3DFD               	addwfc	LCDWriteString@msg+1,f
  2345                           
  2346                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  2347  02DF  087C               	movf	LCDWriteString@msg,w
  2348  02E0  0084               	movwf	4
  2349  02E1  087D               	movf	LCDWriteString@msg+1,w
  2350  02E2  0085               	movwf	5
  2351  02E3  0800               	movf	0,w	;code access
  2352  02E4  3ED0               	addlw	-48
  2353  02E5  0020               	movlb	0	; select bank0
  2354  02E6  00A0               	movwf	??_LCDWriteString
  2355  02E7  0820               	movf	??_LCDWriteString,w
  2356  02E8  00A1               	movwf	LCDWriteString@cc
  2357                           
  2358                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  2359  02E9  1BA1               	btfsc	LCDWriteString@cc,7
  2360  02EA  2AF4               	goto	l1518
  2361  02EB  0821               	movf	LCDWriteString@cc,w
  2362  02EC  3A80               	xorlw	128
  2363  02ED  3E78               	addlw	-136
  2364  02EE  1803               	skipnc
  2365  02EF  2AF4               	goto	l1518
  2366                           
  2367                           ;lcd_hd44780_pic16.c: 290: {
  2368                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  2369  02F0  01F5               	clrf	LCDByte@isdata
  2370  02F1  0AF5               	incf	LCDByte@isdata,f
  2371  02F2  0821               	movf	LCDWriteString@cc,w
  2372  02F3  2AFF               	goto	L1
  2373  02F4                     l1518:	
  2374                           ;lcd_hd44780_pic16.c: 292: }
  2375                           
  2376                           
  2377                           ;lcd_hd44780_pic16.c: 293: else
  2378                           ;lcd_hd44780_pic16.c: 294: {
  2379                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  2380  02F4  01F5               	clrf	LCDByte@isdata
  2381  02F5  0AF5               	incf	LCDByte@isdata,f
  2382  02F6  3025               	movlw	37
  2383  02F7  23CD               	fcall	_LCDByte
  2384  02F8                     l1522:	
  2385                           ;lcd_hd44780_pic16.c: 297: }
  2386                           ;lcd_hd44780_pic16.c: 298: }
  2387                           
  2388                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  2389                           
  2390                           
  2391                           ;lcd_hd44780_pic16.c: 299: else
  2392                           ;lcd_hd44780_pic16.c: 300: {
  2393                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  2394  02F8  01F5               	clrf	LCDByte@isdata
  2395  02F9  0AF5               	incf	LCDByte@isdata,f
  2396  02FA  087C               	movf	LCDWriteString@msg,w
  2397  02FB  0084               	movwf	4
  2398  02FC  087D               	movf	LCDWriteString@msg+1,w
  2399  02FD  0085               	movwf	5
  2400  02FE  0800               	movf	0,w	;code access
  2401  02FF                     L1:	
  2402  02FF  23CD               	fcall	_LCDByte
  2403                           
  2404                           ;lcd_hd44780_pic16.c: 302: }
  2405                           ;lcd_hd44780_pic16.c: 303: msg++;
  2406  0300  3001               	movlw	1
  2407  0301  07FC               	addwf	LCDWriteString@msg,f
  2408  0302  3000               	movlw	0
  2409  0303  3DFD               	addwfc	LCDWriteString@msg+1,f
  2410  0304  2ACC               	goto	l1526
  2411  0305                     __end_of_LCDWriteString:	
  2412                           
  2413                           	psect	text10
  2414  060B                     __ptext10:	
  2415 ;; *************** function _LCDWriteInt *****************
  2416 ;; Defined at:
  2417 ;;		line 317 in file "lcd_hd44780_pic16.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  val             2    0[BANK0 ] int 
  2420 ;;  field_length    1    2[BANK0 ] char 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  str             5    5[BANK0 ] unsigned char [5]
  2423 ;;  i               2   12[BANK0 ] int 
  2424 ;;  j               2   10[BANK0 ] int 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1
  2434 ;;      Params:         0       3       0
  2435 ;;      Locals:         0       9       0
  2436 ;;      Temps:          0       2       0
  2437 ;;      Totals:         0      14       0
  2438 ;;Total ram usage:       14 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    2
  2441 ;; This function calls:
  2442 ;;		_LCDByte
  2443 ;;		___awdiv
  2444 ;;		___awmod
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           
  2451                           ;psect for function _LCDWriteInt
  2452  060B                     _LCDWriteInt:	
  2453                           
  2454                           ;lcd_hd44780_pic16.c: 319: char str[5]={0,0,0,0,0};
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2458  060B  3056               	movlw	low LCDWriteInt@F2516
  2459  060C  0086               	movwf	6
  2460  060D  3000               	movlw	high LCDWriteInt@F2516
  2461  060E  0087               	movwf	7
  2462  060F  3025               	movlw	low LCDWriteInt@str
  2463  0610  0084               	movwf	4
  2464  0611  3000               	movlw	high LCDWriteInt@str
  2465  0612  0085               	movwf	5
  2466  0613  3005               	movlw	5
  2467  0614  0020               	movlb	0	; select bank0
  2468  0615  00A3               	movwf	??_LCDWriteInt
  2469  0616                     u1670:	
  2470  0616  0016               	moviw fsr1++
  2471  0617  001A               	movwi fsr0++
  2472  0618  0BA3               	decfsz	??_LCDWriteInt,f
  2473  0619  2E16               	goto	u1670
  2474                           
  2475                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  2476  061A  3004               	movlw	4
  2477  061B  00AC               	movwf	LCDWriteInt@i
  2478  061C  3000               	movlw	0
  2479  061D  00AD               	movwf	LCDWriteInt@i+1
  2480  061E  01AA               	clrf	LCDWriteInt@j
  2481  061F  01AB               	clrf	LCDWriteInt@j+1
  2482                           
  2483                           ;lcd_hd44780_pic16.c: 323: if(val<0)
  2484  0620  1FA1               	btfss	LCDWriteInt@val+1,7
  2485  0621  2E2C               	goto	l1546
  2486                           
  2487                           ;lcd_hd44780_pic16.c: 324: {
  2488                           ;lcd_hd44780_pic16.c: 325: (LCDByte('-',1));
  2489  0622  01F5               	clrf	LCDByte@isdata
  2490  0623  0AF5               	incf	LCDByte@isdata,f
  2491  0624  302D               	movlw	45
  2492  0625  23CD               	fcall	_LCDByte
  2493                           
  2494                           ;lcd_hd44780_pic16.c: 326: val=val*-1;
  2495  0626  0020               	movlb	0	; select bank0
  2496  0627  09A0               	comf	LCDWriteInt@val,f
  2497  0628  09A1               	comf	LCDWriteInt@val+1,f
  2498  0629  0AA0               	incf	LCDWriteInt@val,f
  2499  062A  1903               	skipnz
  2500  062B  0AA1               	incf	LCDWriteInt@val+1,f
  2501  062C                     l1546:	
  2502                           ;lcd_hd44780_pic16.c: 327: }
  2503                           ;lcd_hd44780_pic16.c: 329: while(val)
  2504                           
  2505  062C  0820               	movf	LCDWriteInt@val,w
  2506  062D  0421               	iorwf	LCDWriteInt@val+1,w
  2507  062E  1903               	btfsc	3,2
  2508  062F  2E55               	goto	l1548
  2509                           
  2510                           ;lcd_hd44780_pic16.c: 330: {
  2511                           ;lcd_hd44780_pic16.c: 331: str[i]=val%10;
  2512  0630  300A               	movlw	10
  2513  0631  00F0               	movwf	___awmod@divisor
  2514  0632  3000               	movlw	0
  2515  0633  00F1               	movwf	___awmod@divisor+1
  2516  0634  0821               	movf	LCDWriteInt@val+1,w
  2517  0635  00F3               	movwf	___awmod@dividend+1
  2518  0636  0820               	movf	LCDWriteInt@val,w
  2519  0637  00F2               	movwf	___awmod@dividend
  2520  0638  2342               	fcall	___awmod
  2521  0639  0870               	movf	?___awmod,w
  2522  063A  0020               	movlb	0	; select bank0
  2523  063B  00A3               	movwf	??_LCDWriteInt
  2524  063C  082C               	movf	LCDWriteInt@i,w
  2525  063D  3E25               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2526  063E  0086               	movwf	6
  2527  063F  0187               	clrf	7
  2528  0640  0823               	movf	??_LCDWriteInt,w
  2529  0641  0081               	movwf	1
  2530                           
  2531                           ;lcd_hd44780_pic16.c: 332: val=val/10;
  2532  0642  300A               	movlw	10
  2533  0643  00F0               	movwf	___awdiv@divisor
  2534  0644  3000               	movlw	0
  2535  0645  00F1               	movwf	___awdiv@divisor+1
  2536  0646  0821               	movf	LCDWriteInt@val+1,w
  2537  0647  00F3               	movwf	___awdiv@dividend+1
  2538  0648  0820               	movf	LCDWriteInt@val,w
  2539  0649  00F2               	movwf	___awdiv@dividend
  2540  064A  2418               	fcall	___awdiv
  2541  064B  0871               	movf	?___awdiv+1,w
  2542  064C  0020               	movlb	0	; select bank0
  2543  064D  00A1               	movwf	LCDWriteInt@val+1
  2544  064E  0870               	movf	?___awdiv,w
  2545  064F  00A0               	movwf	LCDWriteInt@val
  2546                           
  2547                           ;lcd_hd44780_pic16.c: 333: i--;
  2548  0650  30FF               	movlw	255
  2549  0651  07AC               	addwf	LCDWriteInt@i,f
  2550  0652  30FF               	movlw	255
  2551  0653  3DAD               	addwfc	LCDWriteInt@i+1,f
  2552  0654  2E2C               	goto	l1546
  2553  0655                     l1548:	
  2554                           
  2555                           ;lcd_hd44780_pic16.c: 334: }
  2556                           ;lcd_hd44780_pic16.c: 335: if(field_length==-1)
  2557  0655  0A22               	incf	LCDWriteInt@field_length,w
  2558  0656  1903               	btfsc	3,2
  2559  0657  2E5D               	goto	l1554
  2560  0658  2E65               	goto	l1556
  2561  0659                     l1552:	
  2562                           ;lcd_hd44780_pic16.c: 336: while(str[j]==0) j++;
  2563                           
  2564  0659  3001               	movlw	1
  2565  065A  07AA               	addwf	LCDWriteInt@j,f
  2566  065B  3000               	movlw	0
  2567  065C  3DAB               	addwfc	LCDWriteInt@j+1,f
  2568  065D                     l1554:	
  2569  065D  082A               	movf	LCDWriteInt@j,w
  2570  065E  3E25               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2571  065F  0086               	movwf	6
  2572  0660  0187               	clrf	7
  2573  0661  0801               	movf	1,w
  2574  0662  1D03               	btfss	3,2
  2575  0663  2E75               	goto	l1558
  2576  0664  2E59               	goto	l1552
  2577  0665                     l1556:	
  2578                           
  2579                           ;lcd_hd44780_pic16.c: 337: else
  2580                           ;lcd_hd44780_pic16.c: 338: j=5-field_length;
  2581  0665  0822               	movf	LCDWriteInt@field_length,w
  2582  0666  00A3               	movwf	??_LCDWriteInt
  2583  0667  01A4               	clrf	??_LCDWriteInt+1
  2584  0668  1BA3               	btfsc	??_LCDWriteInt,7
  2585  0669  03A4               	decf	??_LCDWriteInt+1,f
  2586  066A  09A3               	comf	??_LCDWriteInt,f
  2587  066B  09A4               	comf	??_LCDWriteInt+1,f
  2588  066C  0AA3               	incf	??_LCDWriteInt,f
  2589  066D  1903               	skipnz
  2590  066E  0AA4               	incf	??_LCDWriteInt+1,f
  2591  066F  0823               	movf	??_LCDWriteInt,w
  2592  0670  3E05               	addlw	5
  2593  0671  00AA               	movwf	LCDWriteInt@j
  2594  0672  3000               	movlw	0
  2595  0673  3D24               	addwfc	??_LCDWriteInt+1,w
  2596  0674  00AB               	movwf	LCDWriteInt@j+1
  2597  0675                     l1558:	
  2598                           
  2599                           ;lcd_hd44780_pic16.c: 341: for(i=j;i<5;i++)
  2600  0675  082B               	movf	LCDWriteInt@j+1,w
  2601  0676  00AD               	movwf	LCDWriteInt@i+1
  2602  0677  082A               	movf	LCDWriteInt@j,w
  2603  0678  00AC               	movwf	LCDWriteInt@i
  2604  0679                     L2:	
  2605  0679  082D               	movf	LCDWriteInt@i+1,w
  2606  067A  3A80               	xorlw	128
  2607  067B  00A3               	movwf	??_LCDWriteInt
  2608  067C  3080               	movlw	128
  2609  067D  0223               	subwf	??_LCDWriteInt,w
  2610  067E  1D03               	skipz
  2611  067F  2E82               	goto	u1725
  2612  0680  3005               	movlw	5
  2613  0681  022C               	subwf	LCDWriteInt@i,w
  2614  0682                     u1725:	
  2615  0682  1803               	btfsc	3,0
  2616  0683  0008               	return
  2617                           
  2618                           ;lcd_hd44780_pic16.c: 342: {
  2619                           ;lcd_hd44780_pic16.c: 343: (LCDByte(48+str[i],1));
  2620  0684  01F5               	clrf	LCDByte@isdata
  2621  0685  0AF5               	incf	LCDByte@isdata,f
  2622  0686  0020               	movlb	0	; select bank0
  2623  0687  082C               	movf	LCDWriteInt@i,w
  2624  0688  3E25               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2625  0689  0086               	movwf	6
  2626  068A  0187               	clrf	7
  2627  068B  0801               	movf	1,w
  2628  068C  3E30               	addlw	48
  2629  068D  23CD               	fcall	_LCDByte
  2630  068E  3001               	movlw	1
  2631  068F  0020               	movlb	0	; select bank0
  2632  0690  07AC               	addwf	LCDWriteInt@i,f
  2633  0691  3000               	movlw	0
  2634  0692  3DAD               	addwfc	LCDWriteInt@i+1,f
  2635  0693  2E79               	goto	L2
  2636  0694                     __end_of_LCDWriteInt:	
  2637                           
  2638                           	psect	text11
  2639  0342                     __ptext11:	
  2640 ;; *************** function ___awmod *****************
  2641 ;; Defined at:
  2642 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  divisor         2    0[COMMON] int 
  2645 ;;  dividend        2    2[COMMON] int 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  sign            1    6[COMMON] unsigned char 
  2648 ;;  counter         1    5[COMMON] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  2    0[COMMON] int 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1
  2658 ;;      Params:         4       0       0
  2659 ;;      Locals:         2       0       0
  2660 ;;      Temps:          1       0       0
  2661 ;;      Totals:         7       0       0
  2662 ;;Total ram usage:        7 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_LCDWriteInt
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function ___awmod
  2673  0342                     ___awmod:	
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2677  0342  01F6               	clrf	___awmod@sign
  2678  0343  1FF3               	btfss	___awmod@dividend+1,7
  2679  0344  2B4C               	goto	l1302
  2680  0345  09F2               	comf	___awmod@dividend,f
  2681  0346  09F3               	comf	___awmod@dividend+1,f
  2682  0347  0AF2               	incf	___awmod@dividend,f
  2683  0348  1903               	skipnz
  2684  0349  0AF3               	incf	___awmod@dividend+1,f
  2685  034A  01F6               	clrf	___awmod@sign
  2686  034B  0AF6               	incf	___awmod@sign,f
  2687  034C                     l1302:	
  2688  034C  1FF1               	btfss	___awmod@divisor+1,7
  2689  034D  2B53               	goto	l1306
  2690  034E  09F0               	comf	___awmod@divisor,f
  2691  034F  09F1               	comf	___awmod@divisor+1,f
  2692  0350  0AF0               	incf	___awmod@divisor,f
  2693  0351  1903               	skipnz
  2694  0352  0AF1               	incf	___awmod@divisor+1,f
  2695  0353                     l1306:	
  2696  0353  0870               	movf	___awmod@divisor,w
  2697  0354  0471               	iorwf	___awmod@divisor+1,w
  2698  0355  1903               	btfsc	3,2
  2699  0356  2B7A               	goto	l1324
  2700  0357  01F5               	clrf	___awmod@counter
  2701  0358  0AF5               	incf	___awmod@counter,f
  2702  0359                     l1314:	
  2703  0359  1BF1               	btfsc	___awmod@divisor+1,7
  2704  035A  2B65               	goto	l1316
  2705  035B  3001               	movlw	1
  2706  035C                     u1285:	
  2707  035C  35F0               	lslf	___awmod@divisor,f
  2708  035D  0DF1               	rlf	___awmod@divisor+1,f
  2709  035E  0B89               	decfsz	9,f
  2710  035F  2B5C               	goto	u1285
  2711  0360  3001               	movlw	1
  2712  0361  00F4               	movwf	??___awmod
  2713  0362  0874               	movf	??___awmod,w
  2714  0363  07F5               	addwf	___awmod@counter,f
  2715  0364  2B59               	goto	l1314
  2716  0365                     l1316:	
  2717  0365  0871               	movf	___awmod@divisor+1,w
  2718  0366  0273               	subwf	___awmod@dividend+1,w
  2719  0367  1D03               	skipz
  2720  0368  2B6B               	goto	u1305
  2721  0369  0870               	movf	___awmod@divisor,w
  2722  036A  0272               	subwf	___awmod@dividend,w
  2723  036B                     u1305:	
  2724  036B  1C03               	skipc
  2725  036C  2B71               	goto	l1320
  2726  036D  0870               	movf	___awmod@divisor,w
  2727  036E  02F2               	subwf	___awmod@dividend,f
  2728  036F  0871               	movf	___awmod@divisor+1,w
  2729  0370  3BF3               	subwfb	___awmod@dividend+1,f
  2730  0371                     l1320:	
  2731  0371  3001               	movlw	1
  2732  0372                     u1315:	
  2733  0372  36F1               	lsrf	___awmod@divisor+1,f
  2734  0373  0CF0               	rrf	___awmod@divisor,f
  2735  0374  0B89               	decfsz	9,f
  2736  0375  2B72               	goto	u1315
  2737  0376  3001               	movlw	1
  2738  0377  02F5               	subwf	___awmod@counter,f
  2739  0378  1D03               	btfss	3,2
  2740  0379  2B65               	goto	l1316
  2741  037A                     l1324:	
  2742  037A  0876               	movf	___awmod@sign,w
  2743  037B  1903               	btfsc	3,2
  2744  037C  2B82               	goto	l1328
  2745  037D  09F2               	comf	___awmod@dividend,f
  2746  037E  09F3               	comf	___awmod@dividend+1,f
  2747  037F  0AF2               	incf	___awmod@dividend,f
  2748  0380  1903               	skipnz
  2749  0381  0AF3               	incf	___awmod@dividend+1,f
  2750  0382                     l1328:	
  2751  0382  0873               	movf	___awmod@dividend+1,w
  2752  0383  00F1               	movwf	?___awmod+1
  2753  0384  0872               	movf	___awmod@dividend,w
  2754  0385  00F0               	movwf	?___awmod
  2755  0386  0008               	return
  2756  0387                     __end_of___awmod:	
  2757                           
  2758                           	psect	text12
  2759  0418                     __ptext12:	
  2760 ;; *************** function ___awdiv *****************
  2761 ;; Defined at:
  2762 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  divisor         2    0[COMMON] int 
  2765 ;;  dividend        2    2[COMMON] int 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  quotient        2    7[COMMON] int 
  2768 ;;  sign            1    6[COMMON] unsigned char 
  2769 ;;  counter         1    5[COMMON] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2    0[COMMON] int 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1
  2779 ;;      Params:         4       0       0
  2780 ;;      Locals:         4       0       0
  2781 ;;      Temps:          1       0       0
  2782 ;;      Totals:         9       0       0
  2783 ;;Total ram usage:        9 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_LCDWriteInt
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           
  2793                           ;psect for function ___awdiv
  2794  0418                     ___awdiv:	
  2795                           
  2796                           ;incstack = 0
  2797                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2798  0418  01F6               	clrf	___awdiv@sign
  2799  0419  1FF1               	btfss	___awdiv@divisor+1,7
  2800  041A  2C22               	goto	l1258
  2801  041B  09F0               	comf	___awdiv@divisor,f
  2802  041C  09F1               	comf	___awdiv@divisor+1,f
  2803  041D  0AF0               	incf	___awdiv@divisor,f
  2804  041E  1903               	skipnz
  2805  041F  0AF1               	incf	___awdiv@divisor+1,f
  2806  0420  01F6               	clrf	___awdiv@sign
  2807  0421  0AF6               	incf	___awdiv@sign,f
  2808  0422                     l1258:	
  2809  0422  1FF3               	btfss	___awdiv@dividend+1,7
  2810  0423  2C2D               	goto	l1264
  2811  0424  09F2               	comf	___awdiv@dividend,f
  2812  0425  09F3               	comf	___awdiv@dividend+1,f
  2813  0426  0AF2               	incf	___awdiv@dividend,f
  2814  0427  1903               	skipnz
  2815  0428  0AF3               	incf	___awdiv@dividend+1,f
  2816  0429  3001               	movlw	1
  2817  042A  00F4               	movwf	??___awdiv
  2818  042B  0874               	movf	??___awdiv,w
  2819  042C  06F6               	xorwf	___awdiv@sign,f
  2820  042D                     l1264:	
  2821  042D  01F7               	clrf	___awdiv@quotient
  2822  042E  01F8               	clrf	___awdiv@quotient+1
  2823  042F  0870               	movf	___awdiv@divisor,w
  2824  0430  0471               	iorwf	___awdiv@divisor+1,w
  2825  0431  1903               	btfsc	3,2
  2826  0432  2C5C               	goto	l1286
  2827  0433  01F5               	clrf	___awdiv@counter
  2828  0434  0AF5               	incf	___awdiv@counter,f
  2829  0435                     l1274:	
  2830  0435  1BF1               	btfsc	___awdiv@divisor+1,7
  2831  0436  2C41               	goto	l1276
  2832  0437  3001               	movlw	1
  2833  0438                     u1185:	
  2834  0438  35F0               	lslf	___awdiv@divisor,f
  2835  0439  0DF1               	rlf	___awdiv@divisor+1,f
  2836  043A  0B89               	decfsz	9,f
  2837  043B  2C38               	goto	u1185
  2838  043C  3001               	movlw	1
  2839  043D  00F4               	movwf	??___awdiv
  2840  043E  0874               	movf	??___awdiv,w
  2841  043F  07F5               	addwf	___awdiv@counter,f
  2842  0440  2C35               	goto	l1274
  2843  0441                     l1276:	
  2844  0441  3001               	movlw	1
  2845  0442                     u1205:	
  2846  0442  35F7               	lslf	___awdiv@quotient,f
  2847  0443  0DF8               	rlf	___awdiv@quotient+1,f
  2848  0444  0B89               	decfsz	9,f
  2849  0445  2C42               	goto	u1205
  2850  0446  0871               	movf	___awdiv@divisor+1,w
  2851  0447  0273               	subwf	___awdiv@dividend+1,w
  2852  0448  1D03               	skipz
  2853  0449  2C4C               	goto	u1215
  2854  044A  0870               	movf	___awdiv@divisor,w
  2855  044B  0272               	subwf	___awdiv@dividend,w
  2856  044C                     u1215:	
  2857  044C  1C03               	skipc
  2858  044D  2C53               	goto	l1282
  2859  044E  0870               	movf	___awdiv@divisor,w
  2860  044F  02F2               	subwf	___awdiv@dividend,f
  2861  0450  0871               	movf	___awdiv@divisor+1,w
  2862  0451  3BF3               	subwfb	___awdiv@dividend+1,f
  2863  0452  1477               	bsf	___awdiv@quotient,0
  2864  0453                     l1282:	
  2865  0453  3001               	movlw	1
  2866  0454                     u1225:	
  2867  0454  36F1               	lsrf	___awdiv@divisor+1,f
  2868  0455  0CF0               	rrf	___awdiv@divisor,f
  2869  0456  0B89               	decfsz	9,f
  2870  0457  2C54               	goto	u1225
  2871  0458  3001               	movlw	1
  2872  0459  02F5               	subwf	___awdiv@counter,f
  2873  045A  1D03               	btfss	3,2
  2874  045B  2C41               	goto	l1276
  2875  045C                     l1286:	
  2876  045C  0876               	movf	___awdiv@sign,w
  2877  045D  1903               	btfsc	3,2
  2878  045E  2C64               	goto	l1290
  2879  045F  09F7               	comf	___awdiv@quotient,f
  2880  0460  09F8               	comf	___awdiv@quotient+1,f
  2881  0461  0AF7               	incf	___awdiv@quotient,f
  2882  0462  1903               	skipnz
  2883  0463  0AF8               	incf	___awdiv@quotient+1,f
  2884  0464                     l1290:	
  2885  0464  0878               	movf	___awdiv@quotient+1,w
  2886  0465  00F1               	movwf	?___awdiv+1
  2887  0466  0877               	movf	___awdiv@quotient,w
  2888  0467  00F0               	movwf	?___awdiv
  2889  0468  0008               	return
  2890  0469                     __end_of___awdiv:	
  2891                           
  2892                           	psect	text13
  2893  0387                     __ptext13:	
  2894 ;; *************** function _LCDInit *****************
  2895 ;; Defined at:
  2896 ;;		line 207 in file "lcd_hd44780_pic16.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  style           1    wreg     unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  style           1    0[BANK0 ] unsigned char 
  2901 ;;  __i             1    1[BANK0 ] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1
  2911 ;;      Params:         0       0       0
  2912 ;;      Locals:         0       2       0
  2913 ;;      Temps:          2       0       0
  2914 ;;      Totals:         2       2       0
  2915 ;;Total ram usage:        4 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    2
  2918 ;; This function calls:
  2919 ;;		_LCDBusyLoop
  2920 ;;		_LCDByte
  2921 ;; This function is called by:
  2922 ;;		_main
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function _LCDInit
  2928  0387                     _LCDInit:	
  2929                           
  2930                           ;incstack = 0
  2931                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2932                           ;LCDInit@style stored from wreg
  2933  0387  0020               	movlb	0	; select bank0
  2934  0388  00A0               	movwf	LCDInit@style
  2935                           
  2936                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  2937  0389  30C3               	movlw	195
  2938  038A  00FD               	movwf	??_LCDInit+1
  2939  038B  30CD               	movlw	205
  2940  038C  00FC               	movwf	??_LCDInit
  2941  038D                     u1907:	
  2942  038D  0BFC               	decfsz	??_LCDInit,f
  2943  038E  2B8D               	goto	u1907
  2944  038F  0BFD               	decfsz	??_LCDInit+1,f
  2945  0390  2B8D               	goto	u1907
  2946                           
  2947                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<2));
  2948  0391  30C3               	movlw	195
  2949  0392  00FC               	movwf	??_LCDInit
  2950  0393  087C               	movf	??_LCDInit,w
  2951  0394  0021               	movlb	1	; select bank1
  2952  0395  058E               	andwf	14,f	;volatile
  2953                           
  2954                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC1=0;
  2955  0396  108E               	bcf	14,1	;volatile
  2956                           
  2957                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC0=0;
  2958  0397  100E               	bcf	14,0	;volatile
  2959                           
  2960                           ;lcd_hd44780_pic16.c: 216: TRISAbits.TRISA0=0;
  2961  0398  100C               	bcf	12,0	;volatile
  2962                           
  2963                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<2));
  2964  0399  30C3               	movlw	195
  2965  039A  00FC               	movwf	??_LCDInit
  2966  039B  087C               	movf	??_LCDInit,w
  2967  039C  0020               	movlb	0	; select bank0
  2968  039D  058E               	andwf	14,f	;volatile
  2969                           
  2970                           ;lcd_hd44780_pic16.c: 220: (RC1=0);
  2971  039E  108E               	bcf	14,1	;volatile
  2972                           
  2973                           ;lcd_hd44780_pic16.c: 221: (RA0=0);
  2974  039F  100C               	bcf	12,0	;volatile
  2975                           
  2976                           ;lcd_hd44780_pic16.c: 222: (RC0=0);
  2977  03A0  100E               	bcf	14,0	;volatile
  2978                           
  2979                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2980  03A1  3200               	nop2	;2 cycle nop
  2981                           
  2982                           ;lcd_hd44780_pic16.c: 227: (RC1=1);
  2983  03A2  0020               	movlb	0	; select bank0
  2984  03A3  148E               	bsf	14,1	;volatile
  2985                           
  2986                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<2);
  2987  03A4  158E               	bsf	14,3	;volatile
  2988                           
  2989                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2990  03A5  3200               	nop2	;2 cycle nop
  2991  03A6  3200               	nop2	;2 cycle nop
  2992  03A7  0000               	nop
  2993                           
  2994                           ;lcd_hd44780_pic16.c: 230: (RC1=0);
  2995  03A8  0020               	movlb	0	; select bank0
  2996  03A9  108E               	bcf	14,1	;volatile
  2997                           
  2998                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2999  03AA  3200               	nop2	;2 cycle nop
  3000  03AB  3200               	nop2	;2 cycle nop
  3001  03AC  0000               	nop
  3002                           
  3003                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  3004  03AD  2469               	fcall	_LCDBusyLoop
  3005                           
  3006                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  3007  03AE  01F5               	clrf	LCDByte@isdata
  3008  03AF  3028               	movlw	40
  3009  03B0  23CD               	fcall	_LCDByte
  3010                           
  3011                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  3012  03B1  01F5               	clrf	LCDByte@isdata
  3013  03B2  0020               	movlb	0	; select bank0
  3014  03B3  0820               	movf	LCDInit@style,w
  3015  03B4  380C               	iorlw	12
  3016  03B5  23CD               	fcall	_LCDByte
  3017                           
  3018                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  3019  03B6  01F5               	clrf	LCDByte@isdata
  3020  03B7  3040               	movlw	64
  3021  03B8  23CD               	fcall	_LCDByte
  3022                           
  3023                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  3024                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  3025  03B9  0020               	movlb	0	; select bank0
  3026  03BA  01A1               	clrf	LCDInit@__i
  3027  03BB                     L3:	
  3028  03BB  3008               	movlw	8
  3029  03BC  0221               	subwf	LCDInit@__i,w
  3030  03BD  1803               	btfsc	3,0
  3031  03BE  0008               	return
  3032                           
  3033                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  3034  03BF  01F5               	clrf	LCDByte@isdata
  3035  03C0  0AF5               	incf	LCDByte@isdata,f
  3036  03C1  0821               	movf	LCDInit@__i,w
  3037  03C2  3E4E               	addlw	(low (___cgram| 0))& (0+255)
  3038  03C3  0086               	movwf	6
  3039  03C4  0187               	clrf	7
  3040  03C5  0801               	movf	1,w
  3041  03C6  23CD               	fcall	_LCDByte
  3042  03C7  3001               	movlw	1
  3043  03C8  00FC               	movwf	??_LCDInit
  3044  03C9  087C               	movf	??_LCDInit,w
  3045  03CA  0020               	movlb	0	; select bank0
  3046  03CB  07A1               	addwf	LCDInit@__i,f
  3047  03CC  2BBB               	goto	L3
  3048  03CD                     __end_of_LCDInit:	
  3049                           
  3050                           	psect	text14
  3051  0275                     __ptext14:	
  3052 ;; *************** function _LCDGotoXY *****************
  3053 ;; Defined at:
  3054 ;;		line 351 in file "lcd_hd44780_pic16.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  x               1    wreg     unsigned char 
  3057 ;;  y               1   12[COMMON] unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  x               1    0[BANK0 ] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMMON   BANK0   BANK1
  3069 ;;      Params:         1       0       0
  3070 ;;      Locals:         0       1       0
  3071 ;;      Temps:          1       0       0
  3072 ;;      Totals:         2       1       0
  3073 ;;Total ram usage:        3 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    2
  3076 ;; This function calls:
  3077 ;;		_LCDByte
  3078 ;; This function is called by:
  3079 ;;		_main
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           
  3084                           ;psect for function _LCDGotoXY
  3085  0275                     _LCDGotoXY:	
  3086                           
  3087                           ;incstack = 0
  3088                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3089                           ;LCDGotoXY@x stored from wreg
  3090  0275  0020               	movlb	0	; select bank0
  3091  0276  00A0               	movwf	LCDGotoXY@x
  3092                           
  3093                           ;lcd_hd44780_pic16.c: 353: if(x>=20) return;
  3094  0277  3014               	movlw	20
  3095  0278  0220               	subwf	LCDGotoXY@x,w
  3096  0279  1803               	btfsc	3,0
  3097  027A  0008               	return
  3098  027B  2A85               	goto	l1580
  3099  027C                     l69:	
  3100                           ;lcd_hd44780_pic16.c: 361: case 1:
  3101                           
  3102                           ;lcd_hd44780_pic16.c: 360: break;
  3103                           
  3104                           ;lcd_hd44780_pic16.c: 358: {
  3105                           ;lcd_hd44780_pic16.c: 359: case 0:
  3106                           
  3107                           ;lcd_hd44780_pic16.c: 357: switch(y)
  3108                           
  3109                           
  3110                           ;lcd_hd44780_pic16.c: 362: x|=0b01000000;
  3111  027C  1720               	bsf	LCDGotoXY@x,6
  3112                           
  3113                           ;lcd_hd44780_pic16.c: 363: break;
  3114  027D  2A93               	goto	l68
  3115  027E                     l1574:	
  3116                           ;lcd_hd44780_pic16.c: 364: case 2:
  3117                           
  3118                           
  3119                           ;lcd_hd44780_pic16.c: 365: x+=0x14;
  3120  027E  3014               	movlw	20
  3121  027F  2A81               	goto	L4
  3122  0280                     l1576:	
  3123                           ;lcd_hd44780_pic16.c: 367: case 3:
  3124                           
  3125                           ;lcd_hd44780_pic16.c: 366: break;
  3126                           
  3127                           
  3128                           ;lcd_hd44780_pic16.c: 368: x+=0x54;
  3129  0280  3054               	movlw	84
  3130  0281                     L4:	
  3131  0281  00FD               	movwf	??_LCDGotoXY
  3132  0282  087D               	movf	??_LCDGotoXY,w
  3133  0283  07A0               	addwf	LCDGotoXY@x,f
  3134                           
  3135                           ;lcd_hd44780_pic16.c: 370: }
  3136                           
  3137                           ;lcd_hd44780_pic16.c: 369: break;
  3138  0284  2A93               	goto	l68
  3139  0285                     l1580:	
  3140  0285  087C               	movf	LCDGotoXY@y,w
  3141                           
  3142                           ; Switch size 1, requested type "space"
  3143                           ; Number of cases is 4, Range of values is 0 to 3
  3144                           ; switch strategies available:
  3145                           ; Name         Instructions Cycles
  3146                           ; simple_byte           13     7 (average)
  3147                           ; direct_byte           14     6 (fixed)
  3148                           ; jumptable            260     6 (fixed)
  3149                           ;	Chosen strategy is simple_byte
  3150  0286  3A00               	xorlw	0	; case 0
  3151  0287  1903               	skipnz
  3152  0288  2A93               	goto	l68
  3153  0289  3A01               	xorlw	1	; case 1
  3154  028A  1903               	skipnz
  3155  028B  2A7C               	goto	l69
  3156  028C  3A03               	xorlw	3	; case 2
  3157  028D  1903               	skipnz
  3158  028E  2A7E               	goto	l1574
  3159  028F  3A01               	xorlw	1	; case 3
  3160  0290  1903               	skipnz
  3161  0291  2A80               	goto	l1576
  3162  0292  2A93               	goto	l68
  3163  0293                     l68:	
  3164                           
  3165                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  3166  0293  17A0               	bsf	LCDGotoXY@x,7
  3167                           
  3168                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  3169  0294  01F5               	clrf	LCDByte@isdata
  3170  0295  0820               	movf	LCDGotoXY@x,w
  3171  0296  23CD               	fcall	_LCDByte
  3172  0297  0008               	return
  3173  0298                     __end_of_LCDGotoXY:	
  3174                           
  3175                           	psect	text15
  3176  03CD                     __ptext15:	
  3177 ;; *************** function _LCDByte *****************
  3178 ;; Defined at:
  3179 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  c               1    wreg     unsigned char 
  3182 ;;  isdata          1    5[COMMON] unsigned char 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  c               1   10[COMMON] unsigned char 
  3185 ;;  temp            1   11[COMMON] unsigned char 
  3186 ;;  ln              1    9[COMMON] unsigned char 
  3187 ;;  hn              1    8[COMMON] unsigned char 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0, pclath, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1
  3197 ;;      Params:         1       0       0
  3198 ;;      Locals:         4       0       0
  3199 ;;      Temps:          2       0       0
  3200 ;;      Totals:         7       0       0
  3201 ;;Total ram usage:        7 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    1
  3204 ;; This function calls:
  3205 ;;		_LCDBusyLoop
  3206 ;; This function is called by:
  3207 ;;		_LCDInit
  3208 ;;		_LCDWriteString
  3209 ;;		_LCDWriteInt
  3210 ;;		_LCDGotoXY
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function _LCDByte
  3217  03CD                     _LCDByte:	
  3218                           
  3219                           ;incstack = 0
  3220                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3221                           ;LCDByte@c stored from wreg
  3222  03CD  00FA               	movwf	LCDByte@c
  3223                           
  3224                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3225                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3226                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3227  03CE  087A               	movf	LCDByte@c,w
  3228  03CF  00F6               	movwf	??_LCDByte
  3229  03D0  3004               	movlw	4
  3230  03D1                     u1095:	
  3231  03D1  36F6               	lsrf	??_LCDByte,f
  3232  03D2  0B89               	decfsz	9,f
  3233  03D3  2BD1               	goto	u1095
  3234  03D4  0876               	movf	??_LCDByte,w
  3235  03D5  00F7               	movwf	??_LCDByte+1
  3236  03D6  0877               	movf	??_LCDByte+1,w
  3237  03D7  00F8               	movwf	LCDByte@hn
  3238                           
  3239                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3240  03D8  087A               	movf	LCDByte@c,w
  3241  03D9  390F               	andlw	15
  3242  03DA  00F6               	movwf	??_LCDByte
  3243  03DB  0876               	movf	??_LCDByte,w
  3244  03DC  00F9               	movwf	LCDByte@ln
  3245                           
  3246                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3247  03DD  0875               	movf	LCDByte@isdata,w
  3248  03DE  1D03               	btfss	3,2
  3249  03DF  2BE3               	goto	l23
  3250                           
  3251                           ;lcd_hd44780_pic16.c: 96: (RC0=0);
  3252  03E0  0020               	movlb	0	; select bank0
  3253  03E1  100E               	bcf	14,0	;volatile
  3254  03E2  2BE5               	goto	l24
  3255  03E3                     l23:	
  3256                           
  3257                           ;lcd_hd44780_pic16.c: 97: else
  3258                           ;lcd_hd44780_pic16.c: 98: (RC0=1);
  3259  03E3  0020               	movlb	0	; select bank0
  3260  03E4  140E               	bsf	14,0	;volatile
  3261  03E5                     l24:	
  3262                           
  3263                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3264  03E5  3200               	nop2	;2 cycle nop
  3265                           
  3266                           ;lcd_hd44780_pic16.c: 102: (RC1=1);
  3267  03E6  0020               	movlb	0	; select bank0
  3268  03E7  148E               	bsf	14,1	;volatile
  3269                           
  3270                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  3271  03E8  0878               	movf	LCDByte@hn,w
  3272  03E9  00F6               	movwf	??_LCDByte
  3273  03EA  3002               	movlw	2
  3274  03EB                     u1115:	
  3275  03EB  35F6               	lslf	??_LCDByte,f
  3276  03EC  0B89               	decfsz	9,f
  3277  03ED  2BEB               	goto	u1115
  3278  03EE  080E               	movf	14,w	;volatile
  3279  03EF  39C3               	andlw	195
  3280  03F0  0476               	iorwf	??_LCDByte,w
  3281  03F1  00F7               	movwf	??_LCDByte+1
  3282  03F2  0877               	movf	??_LCDByte+1,w
  3283  03F3  00FB               	movwf	LCDByte@temp
  3284                           
  3285                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3286  03F4  087B               	movf	LCDByte@temp,w
  3287  03F5  008E               	movwf	14	;volatile
  3288                           
  3289                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3290  03F6  3200               	nop2	;2 cycle nop
  3291  03F7  3200               	nop2	;2 cycle nop
  3292  03F8  0000               	nop
  3293                           
  3294                           ;lcd_hd44780_pic16.c: 113: (RC1=0);
  3295  03F9  0020               	movlb	0	; select bank0
  3296  03FA  108E               	bcf	14,1	;volatile
  3297                           
  3298                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3299  03FB  3200               	nop2	;2 cycle nop
  3300  03FC  3200               	nop2	;2 cycle nop
  3301  03FD  0000               	nop
  3302                           
  3303                           ;lcd_hd44780_pic16.c: 118: (RC1=1);
  3304  03FE  0020               	movlb	0	; select bank0
  3305  03FF  148E               	bsf	14,1	;volatile
  3306                           
  3307                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  3308  0400  0879               	movf	LCDByte@ln,w
  3309  0401  00F6               	movwf	??_LCDByte
  3310  0402  3002               	movlw	2
  3311  0403                     u1125:	
  3312  0403  35F6               	lslf	??_LCDByte,f
  3313  0404  0B89               	decfsz	9,f
  3314  0405  2C03               	goto	u1125
  3315  0406  080E               	movf	14,w	;volatile
  3316  0407  39C3               	andlw	195
  3317  0408  0476               	iorwf	??_LCDByte,w
  3318  0409  00F7               	movwf	??_LCDByte+1
  3319  040A  0877               	movf	??_LCDByte+1,w
  3320  040B  00FB               	movwf	LCDByte@temp
  3321                           
  3322                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3323  040C  087B               	movf	LCDByte@temp,w
  3324  040D  008E               	movwf	14	;volatile
  3325                           
  3326                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3327  040E  3200               	nop2	;2 cycle nop
  3328  040F  3200               	nop2	;2 cycle nop
  3329  0410  0000               	nop
  3330                           
  3331                           ;lcd_hd44780_pic16.c: 128: (RC1=0);
  3332  0411  0020               	movlb	0	; select bank0
  3333  0412  108E               	bcf	14,1	;volatile
  3334                           
  3335                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3336  0413  3200               	nop2	;2 cycle nop
  3337  0414  3200               	nop2	;2 cycle nop
  3338  0415  0000               	nop
  3339                           
  3340                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3341  0416  2469               	fcall	_LCDBusyLoop
  3342  0417  0008               	return
  3343  0418                     __end_of_LCDByte:	
  3344                           
  3345                           	psect	text16
  3346  0469                     __ptext16:	
  3347 ;; *************** function _LCDBusyLoop *****************
  3348 ;; Defined at:
  3349 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;		None
  3352 ;; Auto vars:     Size  Location     Type
  3353 ;;  status          1    4[COMMON] unsigned char 
  3354 ;;  temp            1    3[COMMON] unsigned char 
  3355 ;;  busy            1    2[COMMON] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1
  3365 ;;      Params:         0       0       0
  3366 ;;      Locals:         3       0       0
  3367 ;;      Temps:          2       0       0
  3368 ;;      Totals:         5       0       0
  3369 ;;Total ram usage:        5 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_LCDByte
  3375 ;;		_LCDInit
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _LCDBusyLoop
  3381  0469                     _LCDBusyLoop:	
  3382                           
  3383                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  3387  0469  01F4               	clrf	LCDBusyLoop@status
  3388                           
  3389                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<2);
  3390  046A  303C               	movlw	60
  3391  046B  00F0               	movwf	??_LCDBusyLoop
  3392  046C  0870               	movf	??_LCDBusyLoop,w
  3393  046D  0021               	movlb	1	; select bank1
  3394  046E  048E               	iorwf	14,f	;volatile
  3395                           
  3396                           ;lcd_hd44780_pic16.c: 145: (RA0=1);
  3397  046F  0020               	movlb	0	; select bank0
  3398  0470  140C               	bsf	12,0	;volatile
  3399                           
  3400                           ;lcd_hd44780_pic16.c: 146: (RC0=0);
  3401  0471  100E               	bcf	14,0	;volatile
  3402                           
  3403                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3404  0472  3200               	nop2	;2 cycle nop
  3405  0473                     l1136:	
  3406                           ;lcd_hd44780_pic16.c: 153: do
  3407                           
  3408                           
  3409                           ;lcd_hd44780_pic16.c: 154: {
  3410                           ;lcd_hd44780_pic16.c: 156: (RC1=1);
  3411  0473  0020               	movlb	0	; select bank0
  3412  0474  148E               	bsf	14,1	;volatile
  3413                           
  3414                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3415  0475  3200               	nop2	;2 cycle nop
  3416                           
  3417                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>2);
  3418  0476  0020               	movlb	0	; select bank0
  3419  0477  080E               	movf	14,w	;volatile
  3420  0478  00F0               	movwf	??_LCDBusyLoop
  3421  0479  3002               	movlw	2
  3422  047A                     u935:	
  3423  047A  36F0               	lsrf	??_LCDBusyLoop,f
  3424  047B  0B89               	decfsz	9,f
  3425  047C  2C7A               	goto	u935
  3426  047D  0870               	movf	??_LCDBusyLoop,w
  3427  047E  00F1               	movwf	??_LCDBusyLoop+1
  3428  047F  0871               	movf	??_LCDBusyLoop+1,w
  3429  0480  00F4               	movwf	LCDBusyLoop@status
  3430                           
  3431                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  3432  0481  0874               	movf	LCDBusyLoop@status,w
  3433  0482  00F0               	movwf	??_LCDBusyLoop
  3434  0483  3003               	movlw	3
  3435  0484                     u945:	
  3436  0484  35F0               	lslf	??_LCDBusyLoop,f
  3437  0485  3EFF               	addlw	-1
  3438  0486  1D03               	skipz
  3439  0487  2C84               	goto	u945
  3440  0488  3570               	lslf	??_LCDBusyLoop,w
  3441  0489  00F1               	movwf	??_LCDBusyLoop+1
  3442  048A  0871               	movf	??_LCDBusyLoop+1,w
  3443  048B  00F4               	movwf	LCDBusyLoop@status
  3444                           
  3445                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3446  048C  3200               	nop2	;2 cycle nop
  3447                           
  3448                           ;lcd_hd44780_pic16.c: 167: (RC1=0);
  3449  048D  0020               	movlb	0	; select bank0
  3450  048E  108E               	bcf	14,1	;volatile
  3451                           
  3452                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3453  048F  3200               	nop2	;2 cycle nop
  3454  0490  3200               	nop2	;2 cycle nop
  3455  0491  0000               	nop
  3456                           
  3457                           ;lcd_hd44780_pic16.c: 170: (RC1=1);
  3458  0492  0020               	movlb	0	; select bank0
  3459  0493  148E               	bsf	14,1	;volatile
  3460                           
  3461                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3462  0494  3200               	nop2	;2 cycle nop
  3463                           
  3464                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>2);
  3465  0495  0020               	movlb	0	; select bank0
  3466  0496  080E               	movf	14,w	;volatile
  3467  0497  00F0               	movwf	??_LCDBusyLoop
  3468  0498  3002               	movlw	2
  3469  0499                     u955:	
  3470  0499  36F0               	lsrf	??_LCDBusyLoop,f
  3471  049A  0B89               	decfsz	9,f
  3472  049B  2C99               	goto	u955
  3473  049C  0870               	movf	??_LCDBusyLoop,w
  3474  049D  00F1               	movwf	??_LCDBusyLoop+1
  3475  049E  0871               	movf	??_LCDBusyLoop+1,w
  3476  049F  00F3               	movwf	LCDBusyLoop@temp
  3477                           
  3478                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  3479  04A0  300F               	movlw	15
  3480  04A1  00F0               	movwf	??_LCDBusyLoop
  3481  04A2  0870               	movf	??_LCDBusyLoop,w
  3482  04A3  05F3               	andwf	LCDBusyLoop@temp,f
  3483                           
  3484                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  3485  04A4  0874               	movf	LCDBusyLoop@status,w
  3486  04A5  0473               	iorwf	LCDBusyLoop@temp,w
  3487  04A6  00F0               	movwf	??_LCDBusyLoop
  3488  04A7  0870               	movf	??_LCDBusyLoop,w
  3489  04A8  00F4               	movwf	LCDBusyLoop@status
  3490                           
  3491                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  3492  04A9  0874               	movf	LCDBusyLoop@status,w
  3493  04AA  3980               	andlw	128
  3494  04AB  00F0               	movwf	??_LCDBusyLoop
  3495  04AC  0870               	movf	??_LCDBusyLoop,w
  3496  04AD  00F2               	movwf	LCDBusyLoop@busy
  3497                           
  3498                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3499  04AE  3200               	nop2	;2 cycle nop
  3500                           
  3501                           ;lcd_hd44780_pic16.c: 182: (RC1=0);
  3502  04AF  0020               	movlb	0	; select bank0
  3503  04B0  108E               	bcf	14,1	;volatile
  3504                           
  3505                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3506  04B1  3200               	nop2	;2 cycle nop
  3507  04B2  3200               	nop2	;2 cycle nop
  3508  04B3  0000               	nop
  3509                           
  3510                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  3511  04B4  0872               	movf	LCDBusyLoop@busy,w
  3512  04B5  1D03               	btfss	3,2
  3513  04B6  2C73               	goto	l1136
  3514                           
  3515                           ;lcd_hd44780_pic16.c: 186: (RA0=0);
  3516  04B7  0020               	movlb	0	; select bank0
  3517  04B8  100C               	bcf	12,0	;volatile
  3518                           
  3519                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<2));
  3520  04B9  30C3               	movlw	195
  3521  04BA  00F0               	movwf	??_LCDBusyLoop
  3522  04BB  0870               	movf	??_LCDBusyLoop,w
  3523  04BC  0021               	movlb	1	; select bank1
  3524  04BD  058E               	andwf	14,f	;volatile
  3525  04BE  0008               	return
  3526  04BF                     __end_of_LCDBusyLoop:	
  3527                           
  3528                           	psect	text17
  3529  0231                     __ptext17:	
  3530 ;; *************** function _ADCInit *****************
  3531 ;; Defined at:
  3532 ;;		line 7 in file "adc_pic16.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1
  3546 ;;      Params:         0       0       0
  3547 ;;      Locals:         0       0       0
  3548 ;;      Temps:          0       0       0
  3549 ;;      Totals:         0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_main
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           
  3560                           ;psect for function _ADCInit
  3561  0231                     _ADCInit:	
  3562                           
  3563                           ;adc_pic16.c: 10: TRISAbits.TRISA2 = 1;
  3564                           
  3565                           ;incstack = 0
  3566                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  3567  0231  0021               	movlb	1	; select bank1
  3568  0232  150C               	bsf	12,2	;volatile
  3569                           
  3570                           ;adc_pic16.c: 11: ANSELAbits.ANSA2 = 1;
  3571  0233  0023               	movlb	3	; select bank3
  3572  0234  150C               	bsf	12,2	;volatile
  3573                           
  3574                           ;adc_pic16.c: 13: ADCON0bits.CHS = 0b010;
  3575  0235  0021               	movlb	1	; select bank1
  3576  0236  081D               	movf	29,w	;volatile
  3577  0237  3983               	andlw	-125
  3578  0238  3808               	iorlw	8
  3579  0239  009D               	movwf	29	;volatile
  3580                           
  3581                           ;adc_pic16.c: 15: ADCON1bits.ADPREF = 0b00;
  3582  023A  30FC               	movlw	-4
  3583  023B  059E               	andwf	30,f	;volatile
  3584                           
  3585                           ;adc_pic16.c: 17: ADCON1bits.ADCS = 0b011;
  3586  023C  081E               	movf	30,w	;volatile
  3587  023D  398F               	andlw	-113
  3588  023E  3830               	iorlw	48
  3589  023F  009E               	movwf	30	;volatile
  3590                           
  3591                           ;adc_pic16.c: 20: ADCON1bits.ADFM=1;
  3592  0240  179E               	bsf	30,7	;volatile
  3593                           
  3594                           ;adc_pic16.c: 22: ADCON0bits.ADON = 1;
  3595  0241  141D               	bsf	29,0	;volatile
  3596  0242  0008               	return
  3597  0243                     __end_of_ADCInit:	
  3598  007E                     btemp	set	126	;btemp
  3599  007E                     wtemp	set	126
  3600  007E                     wtemp0	set	126
  3601  0080                     wtemp1	set	128
  3602  0082                     wtemp2	set	130
  3603  0084                     wtemp3	set	132
  3604  0086                     wtemp4	set	134
  3605  0088                     wtemp5	set	136
  3606  007F                     wtemp6	set	127
  3607  007E                     ttemp	set	126
  3608  007E                     ttemp0	set	126
  3609  0081                     ttemp1	set	129
  3610  0084                     ttemp2	set	132
  3611  0087                     ttemp3	set	135
  3612  007F                     ttemp4	set	127
  3613  007E                     ltemp	set	126
  3614  007E                     ltemp0	set	126
  3615  0082                     ltemp1	set	130
  3616  0086                     ltemp2	set	134
  3617  0080                     ltemp3	set	128


Data Sizes:
    Strings     16
    Constant    0
    Data        8
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      59
    BANK1            32      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[4]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDInit
    _main->_LCDWriteString
    _main->___fttol
    _LM35ReadTemp->___lwtoft
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    _LCDWriteString->_LCDByte
    _LCDWriteInt->___fttol
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LM35ReadTemp
    _LM35ReadTemp->___ftmul
    ___ftmul->___ftdiv

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   14994
                                             40 BANK0      6     6      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                       _LM35ReadTemp
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     316
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LM35ReadTemp                                         9     6      3    7446
                                             12 COMMON     1     1      0
                                             32 BANK0      8     5      3
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2117
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2485
                                             16 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2439
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2031
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2      44
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1350
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2389
                                              0 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1250
                                             12 COMMON     2     2      0
                                              0 BANK0      2     2      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1177
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1043
                                              5 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
     ___fttol (ARG)
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LM35ReadTemp
     _ReadADC
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwdiv
     ___lwtoft
       ___ftpack
   ___fttol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      49       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2E      3B       6       73.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      49       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed May 18 02:16:16 2016

           ?_LCDBusyLoop 0070              __CFG_CP$OFF 0000                       l23 03E3  
                     l24 03E5                       l68 0293                       l69 027C  
           ___awdiv@sign 0076              __CFG_LVP$ON 0000                      l115 026E  
                    l460 05F1                      l376 0566                      l377 056E  
                    l369 0553                      _RA0 0060                      _RC0 0070  
                    _RC1 0071             __CFG_CPD$OFF 0000                      u935 047A  
                    u945 0484                      u955 0499                      u995 0535  
        __end_of_ADCInit 0243             ___awmod@sign 0076                      wreg 0009  
           __CFG_FOSC$HS 0000    LM35ReadTemp@adc_value 0046  LCDWriteInt@field_length 0022  
        __end_of_LCDByte 0418          __end_of_LCDInit 03CD             ?_LCDWriteInt 0020  
            LCDByte@temp 007B             ___ftdiv@cntr 002A             ___ftdiv@sign 002F  
                   l1302 034C                     l1136 0473                     l1320 0371  
                   l1240 025D                     l1314 0359                     l1306 0353  
                   l1410 07C0                     l1402 07AC                     l1316 0365  
                   l1324 037A                     l1180 0530                     l1190 0558  
                   l1182 053A                     l1414 07C8                     l1264 042D  
                   l1328 0382                     l1192 0560                     l1184 053F  
                   l1176 0529                     l1344 06C1                     l1290 0464  
                   l1282 0453                     l1274 0435                     l1258 0422  
                   l1522 02F8                     l1338 06AB                     l1442 02BE  
                   l1434 02A0                     l1276 0441                     l1380 0753  
                   l1436 02AC                     l1612 059D                     l1286 045C  
                   l1518 02F4                     l1526 02CC                     l1366 071B  
                   l1358 0702                     l1446 02C7                     l1630 05CD  
                   l1552 0659                     l1640 05F4                     l1632 05DB  
                   l1554 065D                     l1546 062C                     l1386 0769  
                   l1580 0285                     l1556 0665                     l1548 0655  
                   l1644 0602                     l1574 027E                     l1558 0675  
                   l1398 07A4                     l1638 05E8                     l1576 0280  
                   l1656 0310                     STR_1 0221                     STR_2 022D  
                   u1015 054E                     u1115 03EB                     u1035 055B  
                   u1125 0403                     u1205 0442                     u1215 044C  
                   u1225 0454                     u1305 036B                     u1315 0372  
                   u1075 0575                     u1405 071C                     u1095 03D1  
                   u1185 0438                     u1515 07C9                     u1285 035C  
                   u1365 06D3                     u1525 07CF                     u1445 0775  
                   u1375 06E3                     u1455 0785                     u1385 0703  
                   u1395 0712                     u1475 07AD                     u1555 02A3  
                   u1725 0682                     u1485 07B3                     u1670 0616  
                   u1575 02AD                     u1585 02B7                     u1825 05E9  
                   u1907 038D                     u1595 02BF                     u1765 05A4  
                   u1857 033A                     u1867 04C8                     u1795 05CE  
                   u1877 04D4                     u1887 04E0                     u1897 0269  
           __CFG_WRT$OFF 0000                     _main 0305             ___ftpack@arg 0070  
     __size_of_LCDGotoXY 0023             ___ftpack@exp 0073                     fsr0h 0005  
                   fsr1h 0007                     fsr0l 0004                     indf0 0000  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0001  
                   ttemp 007E                     wtemp 007E             ___ftmul@cntr 003E  
           ___ftmul@sign 003F          __end_of_ReadADC 0275             ___fttol@exp1 007D  
           ___fttol@lval 0079                    ?_main 0070          __end_of___awdiv 0469  
          __CFG_WDTE$OFF 0000          __end_of___awmod 0387          __end_of___ftdiv 073C  
           LCDInit@style 0020          __end_of___ftmul 07EF          ___awdiv@divisor 0070  
        __end_of___fttol 060B          __end_of___lwdiv 02CC          ___awdiv@counter 0075  
                  _PORTC 000E                    _TRISC 008E            ___ftpack@sign 0074  
                  main@t 004B     __end_of_LM35ReadTemp 0521                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07EF             __end_of_main 0342  
              ??_ADCInit 0070                   ??_main 0048            ___fttol@sign1 0078  
      __end_of_LCDGotoXY 0298            LCDByte@isdata 0075                ??_LCDByte 0076  
              ??_LCDInit 007C                   _ADRESH 009C                   _ADRESL 009B  
       ___awdiv@dividend 0072         __end_of___ftpack 0585         __end_of___lwtoft 0255  
              ??_ReadADC 0072           __CFG_PWRTE$OFF 0000           _LCDWriteString 02CC  
              ??___awdiv 0074                ??___awmod 0074                ??___ftdiv 0026  
              ??___ftmul 0036                ??___fttol 0074                ??___lwdiv 0074  
   __size_of_LCDBusyLoop 0056         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075    ___ftmul@f3_as_product 003B             LCDWriteInt@i 002C  
           LCDWriteInt@j 002A     __size_of_LCDWriteInt 0089  __end_of__initialization 07FE  
 __end_of_LCDWriteString 0305               ___ftdiv@f1 0023               ___ftdiv@f2 0020  
             ___ftdiv@f3 002B                LCDByte@hn 0078                LCDByte@ln 0079  
             ___ftmul@f1 0030               ___ftmul@f2 0033               ___fttol@f1 0070  
         __pcstackCOMMON 0070             __pidataBANK0 0219               ___lwtoft@c 0078  
  __size_of_LM35ReadTemp 0062               __pbssBANK0 0056          ?_LCDWriteString 007C  
             __pmaintext 0305                  _ADCInit 0231             _LM35ReadTemp 04BF  
              ?___ftpack 0070                ?___lwtoft 0078                  _LCDByte 03CD  
                _LCDInit 0387                  _ReadADC 0255                  ___cgram 004E  
                ___awdiv 0418                  ___awmod 0342                  ___ftdiv 0694  
                ___ftmul 073C                  ___fttol 0585                  ___lwdiv 0298  
             ??___ftpack 0075                  __ptext1 0585                  __ptext2 04BF  
                __ptext3 0243                  __ptext4 0298                  __ptext5 073C  
                __ptext6 0694                  __ptext7 0521                  __ptext8 0255  
                __ptext9 02CC               ??___lwtoft 007B         ___awmod@dividend 0072  
              _LCDGotoXY 0275     end_of_initialization 07FE                  init_ram 0213  
                initloop 0214             __pstringtext 0221        LCDWriteString@msg 007C  
              _TRISAbits 008C                _TRISCbits 008E               ?_LCDGotoXY 007C  
              ReadADC@ch 0073               LCDInit@__i 0021              ___ftdiv@exp 002E  
             LCDGotoXY@x 0020               LCDGotoXY@y 007C              ___ftmul@exp 003A  
          ??_LCDBusyLoop 0070      start_initialization 07EF            ??_LCDWriteInt 0023  
       ??_LCDWriteString 0020              __pdataBANK0 004E                 ?_ADCInit 0070  
    __end_of_LCDBusyLoop 04BF                 ?_LCDByte 0075                 ?_LCDInit 0070  
      __size_of___ftpack 0064                 LCDByte@c 007A                ___latbits 0000  
      __size_of___lwtoft 0012            __pcstackBANK0 0020              ??_LCDGotoXY 007D  
       LCDWriteInt@F2516 0056                 ?_ReadADC 0070      __end_of_LCDWriteInt 0694  
          LM35ReadTemp@t 0043         ___lwdiv@dividend 0072                 ?___awdiv 0070  
               ?___awmod 0070                 ?___ftdiv 0020                 ?___ftmul 0030  
               ?___fttol 0070                 ?___lwdiv 0070          LCDBusyLoop@busy 0072  
        LCDBusyLoop@temp 0073         ___lwdiv@quotient 0075              _LCDBusyLoop 0469  
       LCDWriteString@cc 0021         __size_of_ADCInit 0012               _ADCON0bits 009D  
             _ADCON1bits 009E         __size_of_LCDByte 004B         __size_of_LCDInit 0046  
            _LCDWriteInt 060B         __size_of_ReadADC 0020         __size_of___awdiv 0051  
       __size_of___awmod 0045         __size_of___ftdiv 00A8         __size_of___ftmul 00B3  
       __size_of___fttol 0086        LCDBusyLoop@status 0074         __size_of___lwdiv 0034  
               ___ftpack 0521               _ANSELAbits 018C                 ___lwtoft 0243  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 060B  
               __ptext11 0342                 __ptext12 0418                 __ptext13 0387  
               __ptext14 0275                 __ptext15 03CD                 __ptext16 0469  
               __ptext17 0231            __size_of_main 003D            ?_LM35ReadTemp 0040  
         LCDWriteInt@val 0020           LCDWriteInt@str 0025           ??_LM35ReadTemp 007C  
__size_of_LCDWriteString 0039  
