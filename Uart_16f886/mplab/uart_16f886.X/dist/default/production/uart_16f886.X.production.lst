

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Aug 14 14:29:31 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0014                     	;# 
   303  0015                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  0089                     	;# 
   321  008C                     	;# 
   322  008D                     	;# 
   323  008E                     	;# 
   324  008F                     	;# 
   325  0090                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0093                     	;# 
   329  0093                     	;# 
   330  0093                     	;# 
   331  0094                     	;# 
   332  0095                     	;# 
   333  0096                     	;# 
   334  0097                     	;# 
   335  0098                     	;# 
   336  0099                     	;# 
   337  009A                     	;# 
   338  009B                     	;# 
   339  009C                     	;# 
   340  009D                     	;# 
   341  009E                     	;# 
   342  009F                     	;# 
   343  0105                     	;# 
   344  0107                     	;# 
   345  0108                     	;# 
   346  0109                     	;# 
   347  010C                     	;# 
   348  010C                     	;# 
   349  010D                     	;# 
   350  010E                     	;# 
   351  010F                     	;# 
   352  0185                     	;# 
   353  0187                     	;# 
   354  0188                     	;# 
   355  0189                     	;# 
   356  018C                     	;# 
   357  018D                     	;# 
   358  0000                     	;# 
   359  0001                     	;# 
   360  0002                     	;# 
   361  0003                     	;# 
   362  0004                     	;# 
   363  0005                     	;# 
   364  0006                     	;# 
   365  0007                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000D                     	;# 
   371  000E                     	;# 
   372  000E                     	;# 
   373  000F                     	;# 
   374  0010                     	;# 
   375  0011                     	;# 
   376  0012                     	;# 
   377  0013                     	;# 
   378  0014                     	;# 
   379  0015                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0017                     	;# 
   383  0018                     	;# 
   384  0019                     	;# 
   385  001A                     	;# 
   386  001B                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  001D                     	;# 
   390  001E                     	;# 
   391  001F                     	;# 
   392  0081                     	;# 
   393  0085                     	;# 
   394  0086                     	;# 
   395  0087                     	;# 
   396  0089                     	;# 
   397  008C                     	;# 
   398  008D                     	;# 
   399  008E                     	;# 
   400  008F                     	;# 
   401  0090                     	;# 
   402  0091                     	;# 
   403  0092                     	;# 
   404  0093                     	;# 
   405  0093                     	;# 
   406  0093                     	;# 
   407  0094                     	;# 
   408  0095                     	;# 
   409  0096                     	;# 
   410  0097                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009A                     	;# 
   414  009B                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  0105                     	;# 
   420  0107                     	;# 
   421  0108                     	;# 
   422  0109                     	;# 
   423  010C                     	;# 
   424  010C                     	;# 
   425  010D                     	;# 
   426  010E                     	;# 
   427  010F                     	;# 
   428  0185                     	;# 
   429  0187                     	;# 
   430  0188                     	;# 
   431  0189                     	;# 
   432  018C                     	;# 
   433  018D                     	;# 
   434                           
   435                           	psect	idataBANK0
   436  0A66                     __pidataBANK0:	
   437                           
   438                           ;initializer for LCDWriteInt@F1632
   439  0A66  34F0               	retlw	240
   440  0A67  34F0               	retlw	240
   441  0A68  34F0               	retlw	240
   442  0A69  34F0               	retlw	240
   443  0A6A  34F0               	retlw	240
   444                           
   445                           	psect	idataBANK1
   446  0A7B                     __pidataBANK1:	
   447                           
   448                           ;initializer for ___cgram
   449  0A7B  340C               	retlw	12
   450  0A7C  3412               	retlw	18
   451  0A7D  3412               	retlw	18
   452  0A7E  340C               	retlw	12
   453  0A7F  3400               	retlw	0
   454  0A80  3400               	retlw	0
   455  0A81  3400               	retlw	0
   456  0A82  3400               	retlw	0
   457                           
   458                           ;initializer for _tuneTempDir
   459  0A83  3401               	retlw	1
   460  001F                     _ADCON0bits	set	31
   461  001E                     _ADRESH	set	30
   462  000B                     _INTCONbits	set	11
   463  000C                     _PIR1bits	set	12
   464  0005                     _PORTA	set	5
   465  001A                     _RCREG	set	26
   466  0018                     _RCSTAbits	set	24
   467  0019                     _TXREG	set	25
   468  005F                     _GIE	set	95
   469  005E                     _PEIE	set	94
   470  0029                     _RA1	set	41
   471  002A                     _RA2	set	42
   472  002B                     _RA3	set	43
   473  0031                     _RB1	set	49
   474  0034                     _RB4	set	52
   475  0065                     _RCIF	set	101
   476  009F                     _ADCON1bits	set	159
   477  009E                     _ADRESL	set	158
   478  0096                     _IOCBbits	set	150
   479  0081                     _OPTION_REGbits	set	129
   480  0099                     _SPBRG	set	153
   481  0085                     _TRISA	set	133
   482  0085                     _TRISAbits	set	133
   483  0086                     _TRISBbits	set	134
   484  0098                     _TXSTAbits	set	152
   485  0465                     _RCIE	set	1125
   486  0189                     _ANSELHbits	set	393
   487  0188                     _ANSELbits	set	392
   488                           
   489                           	psect	strings
   490  0800                     __pstrings:	
   491  0800                     stringtab:	
   492  0800                     __stringtab:	
   493                           
   494                           ;	String table - string pointers are 2 bytes each
   495  0800  1BFF               	btfsc	btemp+1,7
   496  0801  280A               	ljmp	stringcode
   497  0802  1383               	bcf	3,7
   498  0803  187F               	btfsc	btemp+1,0
   499  0804  1783               	bsf	3,7
   500  0805  0800               	movf	0,w
   501  0806  0A84               	incf	4,f
   502  0807  1903               	skipnz
   503  0808  0AFF               	incf	btemp+1,f
   504  0809  0008               	return
   505  080A                     stringcode:	
   506  080A  087F               	movf	btemp+1,w
   507  080B  397F               	andlw	127
   508  080C  008A               	movwf	10
   509  080D  0804               	movf	4,w
   510  080E  0A84               	incf	4,f
   511  080F  1903               	skipnz
   512  0810  0AFF               	incf	btemp+1,f
   513  0811  0082               	movwf	2
   514  0812                     __stringbase:	
   515  0812                     __end_of__stringtab:	
   516                           
   517                           	psect	stringtext
   518  0300                     __pstringtext:	
   519  0300                     STR_3:	
   520  0300  342A               	retlw	42	;'*'
   521  0301  342A               	retlw	42	;'*'
   522  0302  342A               	retlw	42	;'*'
   523  0303  342A               	retlw	42	;'*'
   524  0304  342A               	retlw	42	;'*'
   525  0305  342A               	retlw	42	;'*'
   526  0306  342A               	retlw	42	;'*'
   527  0307  342A               	retlw	42	;'*'
   528  0308  342A               	retlw	42	;'*'
   529  0309  342A               	retlw	42	;'*'
   530  030A  342A               	retlw	42	;'*'
   531  030B  342A               	retlw	42	;'*'
   532  030C  342A               	retlw	42	;'*'
   533  030D  342A               	retlw	42	;'*'
   534  030E  342A               	retlw	42	;'*'
   535  030F  342A               	retlw	42	;'*'
   536  0310  342A               	retlw	42	;'*'
   537  0311  342A               	retlw	42	;'*'
   538  0312  342A               	retlw	42	;'*'
   539  0313  342A               	retlw	42	;'*'
   540  0314  342A               	retlw	42	;'*'
   541  0315  342A               	retlw	42	;'*'
   542  0316  342A               	retlw	42	;'*'
   543  0317  342A               	retlw	42	;'*'
   544  0318  342A               	retlw	42	;'*'
   545  0319  342A               	retlw	42	;'*'
   546  031A  342A               	retlw	42	;'*'
   547  031B  342A               	retlw	42	;'*'
   548  031C  342A               	retlw	42	;'*'
   549  031D  342A               	retlw	42	;'*'
   550  031E  342A               	retlw	42	;'*'
   551  031F  342A               	retlw	42	;'*'
   552  0320  342A               	retlw	42	;'*'
   553  0321  342A               	retlw	42	;'*'
   554  0322  342A               	retlw	42	;'*'
   555  0323  342A               	retlw	42	;'*'
   556  0324  342A               	retlw	42	;'*'
   557  0325  342A               	retlw	42	;'*'
   558  0326  342A               	retlw	42	;'*'
   559  0327  342A               	retlw	42	;'*'
   560  0328  342A               	retlw	42	;'*'
   561  0329  342A               	retlw	42	;'*'
   562  032A  342A               	retlw	42	;'*'
   563  032B  342A               	retlw	42	;'*'
   564  032C  342A               	retlw	42	;'*'
   565  032D  342A               	retlw	42	;'*'
   566  032E  342A               	retlw	42	;'*'
   567  032F  3400               	retlw	0
   568  0330                     STR_7:	
   569  0330  3469               	retlw	105	;'i'
   570  0331  3474               	retlw	116	;'t'
   571  0332  3420               	retlw	32	;' '
   572  0333  3477               	retlw	119	;'w'
   573  0334  3469               	retlw	105	;'i'
   574  0335  346C               	retlw	108	;'l'
   575  0336  346C               	retlw	108	;'l'
   576  0337  3420               	retlw	32	;' '
   577  0338  3472               	retlw	114	;'r'
   578  0339  3465               	retlw	101	;'e'
   579  033A  3461               	retlw	97	;'a'
   580  033B  3463               	retlw	99	;'c'
   581  033C  3468               	retlw	104	;'h'
   582  033D  3420               	retlw	32	;' '
   583  033E  3474               	retlw	116	;'t'
   584  033F  3468               	retlw	104	;'h'
   585  0340  3465               	retlw	101	;'e'
   586  0341  3420               	retlw	32	;' '
   587  0342  3450               	retlw	80	;'P'
   588  0343  3449               	retlw	73	;'I'
   589  0344  3443               	retlw	67	;'C'
   590  0345  3420               	retlw	32	;' '
   591  0346  344D               	retlw	77	;'M'
   592  0347  3443               	retlw	67	;'C'
   593  0348  3455               	retlw	85	;'U'
   594  0349  3420               	retlw	32	;' '
   595  034A  3476               	retlw	118	;'v'
   596  034B  3469               	retlw	105	;'i'
   597  034C  3461               	retlw	97	;'a'
   598  034D  3420               	retlw	32	;' '
   599  034E  3474               	retlw	116	;'t'
   600  034F  3468               	retlw	104	;'h'
   601  0350  3465               	retlw	101	;'e'
   602  0351  3420               	retlw	32	;' '
   603  0352  3473               	retlw	115	;'s'
   604  0353  3465               	retlw	101	;'e'
   605  0354  3472               	retlw	114	;'r'
   606  0355  3469               	retlw	105	;'i'
   607  0356  3461               	retlw	97	;'a'
   608  0357  346C               	retlw	108	;'l'
   609  0358  3420               	retlw	32	;' '
   610  0359  346C               	retlw	108	;'l'
   611  035A  3469               	retlw	105	;'i'
   612  035B  346E               	retlw	110	;'n'
   613  035C  3465               	retlw	101	;'e'
   614  035D  3400               	retlw	0
   615  035E                     STR_11:	
   616  035E  3446               	retlw	70	;'F'
   617  035F  346F               	retlw	111	;'o'
   618  0360  3472               	retlw	114	;'r'
   619  0361  3420               	retlw	32	;' '
   620  0362  3465               	retlw	101	;'e'
   621  0363  3478               	retlw	120	;'x'
   622  0364  3461               	retlw	97	;'a'
   623  0365  346D               	retlw	109	;'m'
   624  0366  3470               	retlw	112	;'p'
   625  0367  346C               	retlw	108	;'l'
   626  0368  3465               	retlw	101	;'e'
   627  0369  3420               	retlw	32	;' '
   628  036A  3469               	retlw	105	;'i'
   629  036B  3466               	retlw	102	;'f'
   630  036C  3420               	retlw	32	;' '
   631  036D  3479               	retlw	121	;'y'
   632  036E  346F               	retlw	111	;'o'
   633  036F  3475               	retlw	117	;'u'
   634  0370  3420               	retlw	32	;' '
   635  0371  3474               	retlw	116	;'t'
   636  0372  3479               	retlw	121	;'y'
   637  0373  3470               	retlw	112	;'p'
   638  0374  3465               	retlw	101	;'e'
   639  0375  3420               	retlw	32	;' '
   640  0376  3427               	retlw	39	;'''
   641  0377  3461               	retlw	97	;'a'
   642  0378  3427               	retlw	39	;'''
   643  0379  3420               	retlw	32	;' '
   644  037A  3479               	retlw	121	;'y'
   645  037B  346F               	retlw	111	;'o'
   646  037C  3475               	retlw	117	;'u'
   647  037D  3420               	retlw	32	;' '
   648  037E  3477               	retlw	119	;'w'
   649  037F  3469               	retlw	105	;'i'
   650  0380  346C               	retlw	108	;'l'
   651  0381  346C               	retlw	108	;'l'
   652  0382  3420               	retlw	32	;' '
   653  0383  3473               	retlw	115	;'s'
   654  0384  3465               	retlw	101	;'e'
   655  0385  3465               	retlw	101	;'e'
   656  0386  3420               	retlw	32	;' '
   657  0387  343C               	retlw	60	;'<'
   658  0388  3461               	retlw	97	;'a'
   659  0389  343E               	retlw	62	;'>'
   660  038A  3400               	retlw	0
   661  038B                     STR_8:	
   662  038B  3450               	retlw	80	;'P'
   663  038C  3449               	retlw	73	;'I'
   664  038D  3443               	retlw	67	;'C'
   665  038E  3420               	retlw	32	;' '
   666  038F  344D               	retlw	77	;'M'
   667  0390  3443               	retlw	67	;'C'
   668  0391  3455               	retlw	85	;'U'
   669  0392  3420               	retlw	32	;' '
   670  0393  3477               	retlw	119	;'w'
   671  0394  3469               	retlw	105	;'i'
   672  0395  346C               	retlw	108	;'l'
   673  0396  346C               	retlw	108	;'l'
   674  0397  3420               	retlw	32	;' '
   675  0398  3472               	retlw	114	;'r'
   676  0399  3465               	retlw	101	;'e'
   677  039A  3474               	retlw	116	;'t'
   678  039B  3475               	retlw	117	;'u'
   679  039C  3472               	retlw	114	;'r'
   680  039D  346E               	retlw	110	;'n'
   681  039E  3420               	retlw	32	;' '
   682  039F  3474               	retlw	116	;'t'
   683  03A0  3468               	retlw	104	;'h'
   684  03A1  3465               	retlw	101	;'e'
   685  03A2  3420               	retlw	32	;' '
   686  03A3  3473               	retlw	115	;'s'
   687  03A4  3461               	retlw	97	;'a'
   688  03A5  346D               	retlw	109	;'m'
   689  03A6  3465               	retlw	101	;'e'
   690  03A7  3420               	retlw	32	;' '
   691  03A8  3463               	retlw	99	;'c'
   692  03A9  3468               	retlw	104	;'h'
   693  03AA  3461               	retlw	97	;'a'
   694  03AB  3472               	retlw	114	;'r'
   695  03AC  3461               	retlw	97	;'a'
   696  03AD  3463               	retlw	99	;'c'
   697  03AE  3474               	retlw	116	;'t'
   698  03AF  3465               	retlw	101	;'e'
   699  03B0  3472               	retlw	114	;'r'
   700  03B1  3420               	retlw	32	;' '
   701  03B2  3462               	retlw	98	;'b'
   702  03B3  3475               	retlw	117	;'u'
   703  03B4  3474               	retlw	116	;'t'
   704  03B5  3420               	retlw	32	;' '
   705  03B6  3400               	retlw	0
   706  03B7                     STR_14:	
   707  03B7  3454               	retlw	84	;'T'
   708  03B8  3468               	retlw	104	;'h'
   709  03B9  3469               	retlw	105	;'i'
   710  03BA  3473               	retlw	115	;'s'
   711  03BB  3420               	retlw	32	;' '
   712  03BC  3463               	retlw	99	;'c'
   713  03BD  3468               	retlw	104	;'h'
   714  03BE  3465               	retlw	101	;'e'
   715  03BF  3463               	retlw	99	;'c'
   716  03C0  346B               	retlw	107	;'k'
   717  03C1  3473               	retlw	115	;'s'
   718  03C2  3420               	retlw	32	;' '
   719  03C3  3462               	retlw	98	;'b'
   720  03C4  346F               	retlw	111	;'o'
   721  03C5  3474               	retlw	116	;'t'
   722  03C6  3468               	retlw	104	;'h'
   723  03C7  3420               	retlw	32	;' '
   724  03C8  3477               	retlw	119	;'w'
   725  03C9  3461               	retlw	97	;'a'
   726  03CA  3479               	retlw	121	;'y'
   727  03CB  3420               	retlw	32	;' '
   728  03CC  3473               	retlw	115	;'s'
   729  03CD  3465               	retlw	101	;'e'
   730  03CE  3472               	retlw	114	;'r'
   731  03CF  3469               	retlw	105	;'i'
   732  03D0  3461               	retlw	97	;'a'
   733  03D1  346C               	retlw	108	;'l'
   734  03D2  3420               	retlw	32	;' '
   735  03D3  3474               	retlw	116	;'t'
   736  03D4  3472               	retlw	114	;'r'
   737  03D5  3461               	retlw	97	;'a'
   738  03D6  346E               	retlw	110	;'n'
   739  03D7  3473               	retlw	115	;'s'
   740  03D8  3466               	retlw	102	;'f'
   741  03D9  3465               	retlw	101	;'e'
   742  03DA  3472               	retlw	114	;'r'
   743  03DB  3473               	retlw	115	;'s'
   744  03DC  342E               	retlw	46	;'.'
   745  03DD  3400               	retlw	0
   746  03DE                     STR_6:	
   747  03DE  3454               	retlw	84	;'T'
   748  03DF  3479               	retlw	121	;'y'
   749  03E0  3470               	retlw	112	;'p'
   750  03E1  3465               	retlw	101	;'e'
   751  03E2  3420               	retlw	32	;' '
   752  03E3  3461               	retlw	97	;'a'
   753  03E4  3420               	retlw	32	;' '
   754  03E5  3463               	retlw	99	;'c'
   755  03E6  3468               	retlw	104	;'h'
   756  03E7  3461               	retlw	97	;'a'
   757  03E8  3472               	retlw	114	;'r'
   758  03E9  3461               	retlw	97	;'a'
   759  03EA  3463               	retlw	99	;'c'
   760  03EB  3474               	retlw	116	;'t'
   761  03EC  3465               	retlw	101	;'e'
   762  03ED  3472               	retlw	114	;'r'
   763  03EE  3420               	retlw	32	;' '
   764  03EF  346F               	retlw	111	;'o'
   765  03F0  346E               	retlw	110	;'n'
   766  03F1  3420               	retlw	32	;' '
   767  03F2  346B               	retlw	107	;'k'
   768  03F3  3465               	retlw	101	;'e'
   769  03F4  3479               	retlw	121	;'y'
   770  03F5  3462               	retlw	98	;'b'
   771  03F6  346F               	retlw	111	;'o'
   772  03F7  3461               	retlw	97	;'a'
   773  03F8  3472               	retlw	114	;'r'
   774  03F9  3464               	retlw	100	;'d'
   775  03FA  3400               	retlw	0
   776  03FB                     STR_17:	
   777  03FB  3477               	retlw	119	;'w'
   778  03FC  3477               	retlw	119	;'w'
   779  03FD  3477               	retlw	119	;'w'
   780  03FE  342E               	retlw	46	;'.'
   781  03FF  3465               	retlw	101	;'e'
   782  0400  3458               	retlw	88	;'X'
   783  0401  3474               	retlw	116	;'t'
   784  0402  3472               	retlw	114	;'r'
   785  0403  3465               	retlw	101	;'e'
   786  0404  346D               	retlw	109	;'m'
   787  0405  3465               	retlw	101	;'e'
   788  0406  3445               	retlw	69	;'E'
   789  0407  346C               	retlw	108	;'l'
   790  0408  3465               	retlw	101	;'e'
   791  0409  3463               	retlw	99	;'c'
   792  040A  3474               	retlw	116	;'t'
   793  040B  3472               	retlw	114	;'r'
   794  040C  346F               	retlw	111	;'o'
   795  040D  346E               	retlw	110	;'n'
   796  040E  3469               	retlw	105	;'i'
   797  040F  3463               	retlw	99	;'c'
   798  0410  3473               	retlw	115	;'s'
   799  0411  342E               	retlw	46	;'.'
   800  0412  3463               	retlw	99	;'c'
   801  0413  346F               	retlw	111	;'o'
   802  0414  342E               	retlw	46	;'.'
   803  0415  3469               	retlw	105	;'i'
   804  0416  346E               	retlw	110	;'n'
   805  0417  3400               	retlw	0
   806  0418                     STR_12:	
   807  0418  3461               	retlw	97	;'a'
   808  0419  3470               	retlw	112	;'p'
   809  041A  3470               	retlw	112	;'p'
   810  041B  3465               	retlw	101	;'e'
   811  041C  3461               	retlw	97	;'a'
   812  041D  3472               	retlw	114	;'r'
   813  041E  3420               	retlw	32	;' '
   814  041F  346F               	retlw	111	;'o'
   815  0420  346E               	retlw	110	;'n'
   816  0421  3420               	retlw	32	;' '
   817  0422  3473               	retlw	115	;'s'
   818  0423  3465               	retlw	101	;'e'
   819  0424  3472               	retlw	114	;'r'
   820  0425  3469               	retlw	105	;'i'
   821  0426  3461               	retlw	97	;'a'
   822  0427  346C               	retlw	108	;'l'
   823  0428  3420               	retlw	32	;' '
   824  0429  3474               	retlw	116	;'t'
   825  042A  3465               	retlw	101	;'e'
   826  042B  3472               	retlw	114	;'r'
   827  042C  346D               	retlw	109	;'m'
   828  042D  3469               	retlw	105	;'i'
   829  042E  346E               	retlw	110	;'n'
   830  042F  3461               	retlw	97	;'a'
   831  0430  346C               	retlw	108	;'l'
   832  0431  342E               	retlw	46	;'.'
   833  0432  3400               	retlw	0
   834  0433                     STR_16:	
   835  0433  3443               	retlw	67	;'C'
   836  0434  346F               	retlw	111	;'o'
   837  0435  3470               	retlw	112	;'p'
   838  0436  3479               	retlw	121	;'y'
   839  0437  3472               	retlw	114	;'r'
   840  0438  3469               	retlw	105	;'i'
   841  0439  3467               	retlw	103	;'g'
   842  043A  3468               	retlw	104	;'h'
   843  043B  3474               	retlw	116	;'t'
   844  043C  3420               	retlw	32	;' '
   845  043D  3428               	retlw	40	;'('
   846  043E  3443               	retlw	67	;'C'
   847  043F  3429               	retlw	41	;')'
   848  0440  3420               	retlw	32	;' '
   849  0441  3432               	retlw	50	;'2'
   850  0442  3430               	retlw	48	;'0'
   851  0443  3430               	retlw	48	;'0'
   852  0444  3438               	retlw	56	;'8'
   853  0445  342D               	retlw	45	;'-'
   854  0446  3432               	retlw	50	;'2'
   855  0447  3430               	retlw	48	;'0'
   856  0448  3431               	retlw	49	;'1'
   857  0449  3433               	retlw	51	;'3'
   858  044A  3400               	retlw	0
   859  044B                     STR_1:	
   860  044B  3454               	retlw	84	;'T'
   861  044C  3468               	retlw	104	;'h'
   862  044D  3465               	retlw	101	;'e'
   863  044E  3472               	retlw	114	;'r'
   864  044F  346D               	retlw	109	;'m'
   865  0450  346F               	retlw	111	;'o'
   866  0451  346D               	retlw	109	;'m'
   867  0452  3465               	retlw	101	;'e'
   868  0453  3474               	retlw	116	;'t'
   869  0454  3465               	retlw	101	;'e'
   870  0455  3472               	retlw	114	;'r'
   871  0456  3420               	retlw	32	;' '
   872  0457  3473               	retlw	115	;'s'
   873  0458  3465               	retlw	101	;'e'
   874  0459  3474               	retlw	116	;'t'
   875  045A  343A               	retlw	58	;':'
   876  045B  3400               	retlw	0
   877  045C                     STR_9:	
   878  045C  3465               	retlw	101	;'e'
   879  045D  346E               	retlw	110	;'n'
   880  045E  3463               	retlw	99	;'c'
   881  045F  346C               	retlw	108	;'l'
   882  0460  346F               	retlw	111	;'o'
   883  0461  3473               	retlw	115	;'s'
   884  0462  3465               	retlw	101	;'e'
   885  0463  3464               	retlw	100	;'d'
   886  0464  3420               	retlw	32	;' '
   887  0465  3469               	retlw	105	;'i'
   888  0466  346E               	retlw	110	;'n'
   889  0467  3420               	retlw	32	;' '
   890  0468  3461               	retlw	97	;'a'
   891  0469  3420               	retlw	32	;' '
   892  046A  343C               	retlw	60	;'<'
   893  046B  343E               	retlw	62	;'>'
   894  046C  3400               	retlw	0
   895  046D                     STR_21:	
   896  046D  3454               	retlw	84	;'T'
   897  046E  3468               	retlw	104	;'h'
   898  046F  3465               	retlw	101	;'e'
   899  0470  3472               	retlw	114	;'r'
   900  0471  346D               	retlw	109	;'m'
   901  0472  346F               	retlw	111	;'o'
   902  0473  346D               	retlw	109	;'m'
   903  0474  3465               	retlw	101	;'e'
   904  0475  3474               	retlw	116	;'t'
   905  0476  3465               	retlw	101	;'e'
   906  0477  3472               	retlw	114	;'r'
   907  0478  343A               	retlw	58	;':'
   908  0479  3400               	retlw	0
   909  047A                     STR_5:	
   910  047A  342D               	retlw	45	;'-'
   911  047B  342D               	retlw	45	;'-'
   912  047C  342D               	retlw	45	;'-'
   913  047D  342D               	retlw	45	;'-'
   914  047E  342D               	retlw	45	;'-'
   915  047F  342D               	retlw	45	;'-'
   916  0480  342D               	retlw	45	;'-'
   917  0481  342D               	retlw	45	;'-'
   918  0482  342D               	retlw	45	;'-'
   919  0483  342D               	retlw	45	;'-'
   920  0484  3400               	retlw	0
   921  0485                     STR_4:	
   922  0485  3455               	retlw	85	;'U'
   923  0486  3453               	retlw	83	;'S'
   924  0487  3441               	retlw	65	;'A'
   925  0488  3452               	retlw	82	;'R'
   926  0489  3454               	retlw	84	;'T'
   927  048A  3420               	retlw	32	;' '
   928  048B  3454               	retlw	84	;'T'
   929  048C  3465               	retlw	101	;'e'
   930  048D  3473               	retlw	115	;'s'
   931  048E  3474               	retlw	116	;'t'
   932  048F  3400               	retlw	0
   933  0490                     STR_2:	
   934  0490  3425               	retlw	37	;'%'
   935  0491  3430               	retlw	48	;'0'
   936  0492  3443               	retlw	67	;'C'
   937  0493  3400               	retlw	0
   938  03B6                     
   939                           ; #config settings
   940  0000                     
   941                           	psect	cinit
   942  0015                     start_initialization:	
   943  0015                     __initialization:	
   944                           
   945                           ; Clear objects allocated to BANK0
   946  0015  1383               	bcf	3,7	;select IRP bank0
   947  0016  304F               	movlw	low __pbssBANK0
   948  0017  0084               	movwf	4
   949  0018  3058               	movlw	low (__pbssBANK0+9)
   950  0019  120A  158A  2273  120A  118A  	fcall	clear_ram0
   951                           
   952                           ; Clear objects allocated to BANK1
   953  001E  1683               	bsf	3,5	;RP0=1, select bank1
   954  001F  1303               	bcf	3,6	;RP1=0, select bank1
   955  0020  01C0               	clrf	__pbssBANK1& (0+127)
   956  0021  01C1               	clrf	(__pbssBANK1+1)& (0+127)
   957                           
   958                           ; Clear objects allocated to BANK3
   959  0022  1783               	bsf	3,7	;select IRP bank2
   960  0023  3090               	movlw	low __pbssBANK3
   961  0024  0084               	movwf	4
   962  0025  30D0               	movlw	low (__pbssBANK3+64)
   963  0026  120A  158A  2273  120A  118A  	fcall	clear_ram0
   964                           
   965                           ; Initialize objects allocated to BANK1
   966  002B  1383               	bcf	3,7	;select IRP bank0
   967  002C  30C0               	movlw	low (__pdataBANK1+9)
   968  002D  00FD               	movwf	btemp+-1
   969  002E  300A               	movlw	high __pidataBANK1
   970  002F  00FE               	movwf	btemp
   971  0030  307B               	movlw	low __pidataBANK1
   972  0031  00FF               	movwf	btemp+1
   973  0032  30B7               	movlw	low __pdataBANK1
   974  0033  0084               	movwf	4
   975  0034  120A  158A  2293  120A  118A  	fcall	init_ram0
   976                           
   977                           ; Initialize objects allocated to BANK0
   978  0039  305D               	movlw	low (__pdataBANK0+5)
   979  003A  00FD               	movwf	btemp+-1
   980  003B  300A               	movlw	high __pidataBANK0
   981  003C  00FE               	movwf	btemp
   982  003D  3066               	movlw	low __pidataBANK0
   983  003E  00FF               	movwf	btemp+1
   984  003F  3058               	movlw	low __pdataBANK0
   985  0040  0084               	movwf	4
   986  0041  120A  158A  2293   	fcall	init_ram0
   987  0044                     end_of_initialization:	
   988                           ;End of C runtime variable initialization code
   989                           
   990  0044                     __end_of__initialization:	
   991  0044  0183               	clrf	3
   992  0045  120A  118A  2848   	ljmp	_main	;jump to C main() function
   993                           
   994                           	psect	bssBANK0
   995  004F                     __pbssBANK0:	
   996  004F                     USARTWriteInt@F1617:	
   997  004F                     	ds	5
   998  0054                     _tuneTemp:	
   999  0054                     	ds	2
  1000  0056                     _UQEnd:	
  1001  0056                     	ds	1
  1002  0057                     _UQFront:	
  1003  0057                     	ds	1
  1004                           
  1005                           	psect	dataBANK0
  1006  0058                     __pdataBANK0:	
  1007  0058                     LCDWriteInt@F1632:	
  1008  0058                     	ds	5
  1009                           
  1010                           	psect	bssBANK1
  1011  00C0                     __pbssBANK1:	
  1012  00C0                     _curTemp:	
  1013  00C0                     	ds	2
  1014                           
  1015                           	psect	dataBANK1
  1016  00B7                     __pdataBANK1:	
  1017  00B7                     ___cgram:	
  1018  00B7                     	ds	8
  1019  00BF                     _tuneTempDir:	
  1020  00BF                     	ds	1
  1021                           
  1022                           	psect	bssBANK3
  1023  0190                     __pbssBANK3:	
  1024  0190                     _URBuff:	
  1025  0190                     	ds	64
  1026                           
  1027                           	psect	clrtext
  1028  0A73                     clear_ram0:	
  1029                           ;	Called with FSR containing the base address, and
  1030                           ;	W with the last address+1
  1031                           
  1032  0A73  0064               	clrwdt	;clear the watchdog before getting into this loop
  1033  0A74                     clrloop0:	
  1034  0A74  0180               	clrf	0	;clear RAM location pointed to by FSR
  1035  0A75  0A84               	incf	4,f	;increment pointer
  1036  0A76  0604               	xorwf	4,w	;XOR with final address
  1037  0A77  1903               	btfsc	3,2	;have we reached the end yet?
  1038  0A78  3400               	retlw	0	;all done for this memory range, return
  1039  0A79  0604               	xorwf	4,w	;XOR again to restore value
  1040  0A7A  2A74               	goto	clrloop0	;do the next byte
  1041                           
  1042                           	psect	inittext
  1043  0A8F                     init_fetch0:	
  1044                           ;	Called with low address in FSR and high address in W
  1045                           
  1046  0A8F  087E               	movf	126,w
  1047  0A90  008A               	movwf	10
  1048  0A91  087F               	movf	127,w
  1049  0A92  0082               	movwf	2
  1050  0A93                     init_ram0:	
  1051                           ;Called with:
  1052                           ;	high address of idata address in btemp 
  1053                           ;	low address of idata address in btemp+1 
  1054                           ;	low address of data in FSR
  1055                           ;	high address + 1 of data in btemp-1
  1056                           
  1057  0A93  228F  120A  158A   	fcall	init_fetch0
  1058  0A96  0080               	movwf	0
  1059  0A97  0A84               	incf	4,f
  1060  0A98  0804               	movf	4,w
  1061  0A99  067D               	xorwf	125,w
  1062  0A9A  1903               	btfsc	3,2
  1063  0A9B  3400               	retlw	0
  1064  0A9C  0AFF               	incf	127,f
  1065  0A9D  1903               	btfsc	3,2
  1066  0A9E  0AFE               	incf	126,f
  1067  0A9F  2A93               	goto	init_ram0
  1068                           
  1069                           	psect	cstackBANK1
  1070  00A0                     __pcstackBANK1:	
  1071  00A0                     ?___fttol:	
  1072  00A0                     ___fttol@f1:	
  1073                           ; 4 bytes @ 0x0
  1074                           
  1075                           
  1076                           ; 3 bytes @ 0x0
  1077  00A0                     	ds	4
  1078  00A4                     ??___fttol:	
  1079                           
  1080                           ; 1 bytes @ 0x4
  1081  00A4                     	ds	4
  1082  00A8                     ___fttol@sign1:	
  1083                           
  1084                           ; 1 bytes @ 0x8
  1085  00A8                     	ds	1
  1086  00A9                     ___fttol@lval:	
  1087                           
  1088                           ; 4 bytes @ 0x9
  1089  00A9                     	ds	4
  1090  00AD                     ___fttol@exp1:	
  1091                           
  1092                           ; 1 bytes @ 0xD
  1093  00AD                     	ds	1
  1094  00AE                     ?_LM35ReadTemp:	
  1095                           
  1096                           ; 2 bytes @ 0xE
  1097  00AE                     	ds	2
  1098  00B0                     LM35ReadTemp@adc_value:	
  1099                           
  1100                           ; 2 bytes @ 0x10
  1101  00B0                     	ds	2
  1102  00B2                     ??_main:	
  1103                           
  1104                           ; 1 bytes @ 0x12
  1105  00B2                     	ds	3
  1106  00B5                     main@n:	
  1107                           
  1108                           ; 1 bytes @ 0x15
  1109  00B5                     	ds	1
  1110  00B6                     main@data:	
  1111                           
  1112                           ; 1 bytes @ 0x16
  1113  00B6                     	ds	1
  1114                           
  1115                           	psect	cstackCOMMON
  1116  0070                     __pcstackCOMMON:	
  1117  0070                     ?_LCDBusyLoop:	
  1118  0070                     ?_USARTHandleRxInt:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ??_USARTHandleRxInt:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_USARTGotoNewLine:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ?_USARTDataAvailable:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?_USARTReadData:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?_USARTWriteChar:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?_ADCInit:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ?_LCDInit:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_TuneButtonInit:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?_ISR:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?_main:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?i1_LCDBusyLoop:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     ??i1_LCDBusyLoop:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ?i1___awdiv:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     ?i1___awmod:	
  1161                           ; 2 bytes @ 0x0
  1162                           
  1163  0070                     i1___awdiv@divisor:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166  0070                     i1___awmod@divisor:	
  1167                           ; 2 bytes @ 0x0
  1168                           
  1169                           
  1170                           ; 2 bytes @ 0x0
  1171  0070                     	ds	2
  1172  0072                     i1LCDBusyLoop@busy:	
  1173  0072                     i1___awdiv@dividend:	
  1174                           ; 1 bytes @ 0x2
  1175                           
  1176  0072                     i1___awmod@dividend:	
  1177                           ; 2 bytes @ 0x2
  1178                           
  1179                           
  1180                           ; 2 bytes @ 0x2
  1181  0072                     	ds	1
  1182  0073                     i1LCDBusyLoop@temp:	
  1183                           
  1184                           ; 1 bytes @ 0x3
  1185  0073                     	ds	1
  1186  0074                     ??i1___awdiv:	
  1187  0074                     ??i1___awmod:	
  1188                           ; 1 bytes @ 0x4
  1189                           
  1190  0074                     USARTHandleRxInt@data:	
  1191                           ; 1 bytes @ 0x4
  1192                           
  1193  0074                     i1LCDBusyLoop@status:	
  1194                           ; 1 bytes @ 0x4
  1195                           
  1196                           
  1197                           ; 1 bytes @ 0x4
  1198  0074                     	ds	1
  1199  0075                     ?i1_LCDByte:	
  1200  0075                     i1LCDByte@isdata:	
  1201                           ; 1 bytes @ 0x5
  1202                           
  1203  0075                     i1___awdiv@counter:	
  1204                           ; 1 bytes @ 0x5
  1205                           
  1206  0075                     i1___awmod@counter:	
  1207                           ; 1 bytes @ 0x5
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0x5
  1211  0075                     	ds	1
  1212  0076                     ??i1_LCDByte:	
  1213  0076                     i1___awdiv@sign:	
  1214                           ; 1 bytes @ 0x6
  1215                           
  1216  0076                     i1___awmod@sign:	
  1217                           ; 1 bytes @ 0x6
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0x6
  1221  0076                     	ds	1
  1222  0077                     i1___awdiv@quotient:	
  1223                           
  1224                           ; 2 bytes @ 0x7
  1225  0077                     	ds	1
  1226  0078                     i1LCDByte@c:	
  1227                           
  1228                           ; 1 bytes @ 0x8
  1229  0078                     	ds	1
  1230  0079                     i1LCDByte@hn:	
  1231                           
  1232                           ; 1 bytes @ 0x9
  1233  0079                     	ds	1
  1234  007A                     i1LCDByte@ln:	
  1235                           
  1236                           ; 1 bytes @ 0xA
  1237  007A                     	ds	1
  1238  007B                     i1LCDByte@temp:	
  1239                           
  1240                           ; 1 bytes @ 0xB
  1241  007B                     	ds	1
  1242  007C                     ?i1_LCDWriteString:	
  1243  007C                     ??i1_LCDWriteInt:	
  1244                           ; 1 bytes @ 0xC
  1245                           
  1246  007C                     ?i1_LCDGotoXY:	
  1247                           ; 1 bytes @ 0xC
  1248                           
  1249  007C                     i1LCDGotoXY@y:	
  1250                           ; 1 bytes @ 0xC
  1251                           
  1252  007C                     i1LCDWriteString@msg:	
  1253                           ; 1 bytes @ 0xC
  1254                           
  1255                           
  1256                           ; 2 bytes @ 0xC
  1257  007C                     	ds	1
  1258  007D                     ??i1_LCDGotoXY:	
  1259                           
  1260                           ; 1 bytes @ 0xD
  1261  007D                     	ds	1
  1262                           
  1263                           	psect	cstackBANK0
  1264  0020                     __pcstackBANK0:	
  1265  0020                     ??i1_LCDWriteString:	
  1266  0020                     ?i1_LCDWriteInt:	
  1267                           ; 1 bytes @ 0x0
  1268                           
  1269  0020                     i1LCDGotoXY@x:	
  1270                           ; 1 bytes @ 0x0
  1271                           
  1272  0020                     i1LCDWriteInt@val:	
  1273                           ; 1 bytes @ 0x0
  1274                           
  1275                           
  1276                           ; 2 bytes @ 0x0
  1277  0020                     	ds	1
  1278  0021                     i1LCDWriteString@cc:	
  1279                           
  1280                           ; 1 bytes @ 0x1
  1281  0021                     	ds	1
  1282  0022                     i1LCDWriteInt@field_length:	
  1283                           
  1284                           ; 1 bytes @ 0x2
  1285  0022                     	ds	1
  1286  0023                     i1LCDWriteInt@str:	
  1287                           
  1288                           ; 5 bytes @ 0x3
  1289  0023                     	ds	5
  1290  0028                     i1LCDWriteInt@j:	
  1291                           
  1292                           ; 2 bytes @ 0x8
  1293  0028                     	ds	2
  1294  002A                     i1LCDWriteInt@i:	
  1295                           
  1296                           ; 2 bytes @ 0xA
  1297  002A                     	ds	2
  1298  002C                     ??_ISR:	
  1299                           
  1300                           ; 1 bytes @ 0xC
  1301  002C                     	ds	7
  1302  0033                     ??_LCDBusyLoop:	
  1303  0033                     ?_USARTInit:	
  1304                           ; 1 bytes @ 0x13
  1305                           
  1306  0033                     ??_USARTDataAvailable:	
  1307                           ; 1 bytes @ 0x13
  1308                           
  1309  0033                     ??_USARTReadData:	
  1310                           ; 1 bytes @ 0x13
  1311                           
  1312  0033                     ??_USARTWriteChar:	
  1313                           ; 1 bytes @ 0x13
  1314                           
  1315  0033                     ??_ADCInit:	
  1316                           ; 1 bytes @ 0x13
  1317                           
  1318  0033                     ??_TuneButtonInit:	
  1319                           ; 1 bytes @ 0x13
  1320                           
  1321  0033                     ?_ReadADC:	
  1322                           ; 1 bytes @ 0x13
  1323                           
  1324  0033                     ?___awdiv:	
  1325                           ; 2 bytes @ 0x13
  1326                           
  1327  0033                     ?___awmod:	
  1328                           ; 2 bytes @ 0x13
  1329                           
  1330  0033                     ?___ftpack:	
  1331                           ; 2 bytes @ 0x13
  1332                           
  1333  0033                     USARTWriteChar@ch:	
  1334                           ; 3 bytes @ 0x13
  1335                           
  1336  0033                     USARTInit@baud_rate:	
  1337                           ; 1 bytes @ 0x13
  1338                           
  1339  0033                     ___awdiv@divisor:	
  1340                           ; 2 bytes @ 0x13
  1341                           
  1342  0033                     ___awmod@divisor:	
  1343                           ; 2 bytes @ 0x13
  1344                           
  1345  0033                     ___ftpack@arg:	
  1346                           ; 2 bytes @ 0x13
  1347                           
  1348                           
  1349                           ; 3 bytes @ 0x13
  1350  0033                     	ds	1
  1351  0034                     ??_USARTGotoNewLine:	
  1352  0034                     ?_USARTWriteString:	
  1353                           ; 1 bytes @ 0x14
  1354                           
  1355  0034                     USARTReadData@data:	
  1356                           ; 1 bytes @ 0x14
  1357                           
  1358  0034                     USARTWriteString@str:	
  1359                           ; 1 bytes @ 0x14
  1360                           
  1361                           
  1362                           ; 2 bytes @ 0x14
  1363  0034                     	ds	1
  1364  0035                     ??_USARTInit:	
  1365  0035                     ??_ReadADC:	
  1366                           ; 1 bytes @ 0x15
  1367                           
  1368  0035                     LCDBusyLoop@busy:	
  1369                           ; 1 bytes @ 0x15
  1370                           
  1371  0035                     ___awdiv@dividend:	
  1372                           ; 1 bytes @ 0x15
  1373                           
  1374  0035                     ___awmod@dividend:	
  1375                           ; 2 bytes @ 0x15
  1376                           
  1377                           
  1378                           ; 2 bytes @ 0x15
  1379  0035                     	ds	1
  1380  0036                     ?_USARTWriteLine:	
  1381  0036                     ??_USARTWriteString:	
  1382                           ; 1 bytes @ 0x16
  1383                           
  1384  0036                     ReadADC@ch:	
  1385                           ; 1 bytes @ 0x16
  1386                           
  1387  0036                     LCDBusyLoop@temp:	
  1388                           ; 1 bytes @ 0x16
  1389                           
  1390  0036                     ___ftpack@exp:	
  1391                           ; 1 bytes @ 0x16
  1392                           
  1393  0036                     USARTWriteLine@str:	
  1394                           ; 1 bytes @ 0x16
  1395                           
  1396                           
  1397                           ; 2 bytes @ 0x16
  1398  0036                     	ds	1
  1399  0037                     ??___awdiv:	
  1400  0037                     ??___awmod:	
  1401                           ; 1 bytes @ 0x17
  1402                           
  1403  0037                     LCDBusyLoop@status:	
  1404                           ; 1 bytes @ 0x17
  1405                           
  1406  0037                     ___ftpack@sign:	
  1407                           ; 1 bytes @ 0x17
  1408                           
  1409                           
  1410                           ; 1 bytes @ 0x17
  1411  0037                     	ds	1
  1412  0038                     ??_USARTWriteLine:	
  1413  0038                     ??___ftpack:	
  1414                           ; 1 bytes @ 0x18
  1415                           
  1416  0038                     ?_LCDByte:	
  1417                           ; 1 bytes @ 0x18
  1418                           
  1419  0038                     LCDByte@isdata:	
  1420                           ; 1 bytes @ 0x18
  1421                           
  1422  0038                     ___awdiv@counter:	
  1423                           ; 1 bytes @ 0x18
  1424                           
  1425  0038                     ___awmod@counter:	
  1426                           ; 1 bytes @ 0x18
  1427                           
  1428                           
  1429                           ; 1 bytes @ 0x18
  1430  0038                     	ds	1
  1431  0039                     ??_LCDByte:	
  1432  0039                     ___awdiv@sign:	
  1433                           ; 1 bytes @ 0x19
  1434                           
  1435  0039                     ___awmod@sign:	
  1436                           ; 1 bytes @ 0x19
  1437                           
  1438                           
  1439                           ; 1 bytes @ 0x19
  1440  0039                     	ds	1
  1441  003A                     ___awdiv@quotient:	
  1442                           
  1443                           ; 2 bytes @ 0x1A
  1444  003A                     	ds	1
  1445  003B                     ?___lwtoft:	
  1446  003B                     LCDByte@hn:	
  1447                           ; 3 bytes @ 0x1B
  1448                           
  1449  003B                     ___lwtoft@c:	
  1450                           ; 1 bytes @ 0x1B
  1451                           
  1452                           
  1453                           ; 2 bytes @ 0x1B
  1454  003B                     	ds	1
  1455  003C                     LCDByte@ln:	
  1456                           
  1457                           ; 1 bytes @ 0x1C
  1458  003C                     	ds	1
  1459  003D                     LCDByte@c:	
  1460                           
  1461                           ; 1 bytes @ 0x1D
  1462  003D                     	ds	1
  1463  003E                     ??___lwtoft:	
  1464  003E                     LCDByte@temp:	
  1465                           ; 1 bytes @ 0x1E
  1466                           
  1467                           
  1468                           ; 1 bytes @ 0x1E
  1469  003E                     	ds	1
  1470  003F                     ??_LCDInit:	
  1471  003F                     ?_LCDWriteString:	
  1472                           ; 1 bytes @ 0x1F
  1473                           
  1474  003F                     ?_LCDWriteInt:	
  1475                           ; 1 bytes @ 0x1F
  1476                           
  1477  003F                     ?_LCDGotoXY:	
  1478                           ; 1 bytes @ 0x1F
  1479                           
  1480  003F                     ?___ftmul:	
  1481                           ; 1 bytes @ 0x1F
  1482                           
  1483  003F                     LCDGotoXY@y:	
  1484                           ; 3 bytes @ 0x1F
  1485                           
  1486  003F                     LCDWriteString@msg:	
  1487                           ; 1 bytes @ 0x1F
  1488                           
  1489  003F                     LCDWriteInt@val:	
  1490                           ; 2 bytes @ 0x1F
  1491                           
  1492  003F                     ___ftmul@f1:	
  1493                           ; 2 bytes @ 0x1F
  1494                           
  1495                           
  1496                           ; 3 bytes @ 0x1F
  1497  003F                     	ds	1
  1498  0040                     ??_LCDGotoXY:	
  1499                           
  1500                           ; 1 bytes @ 0x20
  1501  0040                     	ds	1
  1502  0041                     ??_LCDWriteString:	
  1503  0041                     LCDInit@style:	
  1504                           ; 1 bytes @ 0x21
  1505                           
  1506  0041                     LCDWriteInt@field_length:	
  1507                           ; 1 bytes @ 0x21
  1508                           
  1509  0041                     LCDGotoXY@x:	
  1510                           ; 1 bytes @ 0x21
  1511                           
  1512                           
  1513                           ; 1 bytes @ 0x21
  1514  0041                     	ds	1
  1515  0042                     ??_LCDWriteInt:	
  1516  0042                     LCDInit@__i:	
  1517                           ; 1 bytes @ 0x22
  1518                           
  1519  0042                     LCDWriteString@cc:	
  1520                           ; 1 bytes @ 0x22
  1521                           
  1522  0042                     ___ftmul@f2:	
  1523                           ; 1 bytes @ 0x22
  1524                           
  1525                           
  1526                           ; 3 bytes @ 0x22
  1527  0042                     	ds	2
  1528  0044                     LCDWriteInt@str:	
  1529                           
  1530                           ; 5 bytes @ 0x24
  1531  0044                     	ds	1
  1532  0045                     ??___ftmul:	
  1533                           
  1534                           ; 1 bytes @ 0x25
  1535  0045                     	ds	4
  1536  0049                     ___ftmul@exp:	
  1537  0049                     LCDWriteInt@j:	
  1538                           ; 1 bytes @ 0x29
  1539                           
  1540                           
  1541                           ; 2 bytes @ 0x29
  1542  0049                     	ds	1
  1543  004A                     ___ftmul@f3_as_product:	
  1544                           
  1545                           ; 3 bytes @ 0x2A
  1546  004A                     	ds	1
  1547  004B                     LCDWriteInt@i:	
  1548                           
  1549                           ; 2 bytes @ 0x2B
  1550  004B                     	ds	2
  1551  004D                     ___ftmul@cntr:	
  1552                           
  1553                           ; 1 bytes @ 0x2D
  1554  004D                     	ds	1
  1555  004E                     ___ftmul@sign:	
  1556                           
  1557                           ; 1 bytes @ 0x2E
  1558  004E                     	ds	1
  1559  004F                     ??_LM35ReadTemp:	
  1560                           
  1561                           	psect	maintext
  1562  0048                     __pmaintext:	
  1563                           ; 1 bytes @ 0x2F
  1564 ;;
  1565 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1566 ;;
  1567 ;; *************** function _main *****************
  1568 ;; Defined at:
  1569 ;;		line 141 in file "uart_16f886.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  data            1   22[BANK1 ] unsigned char 
  1574 ;;  n               1   21[BANK1 ] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : B00/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         0       0       0       0       0
  1585 ;;      Locals:         0       0       2       0       0
  1586 ;;      Temps:          0       0       3       0       0
  1587 ;;      Totals:         0       0       5       0       0
  1588 ;;Total ram usage:        5 bytes
  1589 ;; Hardware stack levels required when called:    7
  1590 ;; This function calls:
  1591 ;;		_ADCInit
  1592 ;;		_LCDByte
  1593 ;;		_LCDGotoXY
  1594 ;;		_LCDInit
  1595 ;;		_LCDWriteInt
  1596 ;;		_LCDWriteString
  1597 ;;		_LM35ReadTemp
  1598 ;;		_TuneButtonInit
  1599 ;;		_USARTDataAvailable
  1600 ;;		_USARTGotoNewLine
  1601 ;;		_USARTInit
  1602 ;;		_USARTReadData
  1603 ;;		_USARTWriteChar
  1604 ;;		_USARTWriteLine
  1605 ;; This function is called by:
  1606 ;;		Startup code after reset
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _main
  1612  0048                     _main:	
  1613                           
  1614                           ;uart_16f886.c: 144: LCDInit(0B00000000);
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1618  0048  3000               	movlw	0
  1619  0049  120A  158A  2798  120A  118A  	fcall	_LCDInit
  1620                           
  1621                           ;uart_16f886.c: 147: ADCInit();
  1622  004E  120A  158A  22A0  120A  118A  	fcall	_ADCInit
  1623                           
  1624                           ;uart_16f886.c: 150: TuneButtonInit();
  1625  0053  120A  158A  22E2  120A  118A  	fcall	_TuneButtonInit
  1626                           
  1627                           ;uart_16f886.c: 156: USARTInit(9600);
  1628  0058  3080               	movlw	128
  1629  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1630  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1631  005B  00B3               	movwf	USARTInit@baud_rate
  1632  005C  3025               	movlw	37
  1633  005D  00B4               	movwf	USARTInit@baud_rate+1
  1634  005E  120A  158A  238B  120A  118A  	fcall	_USARTInit
  1635                           
  1636                           ;uart_16f886.c: 159: USARTWriteLine("***********************************************");
  1637  0063  3000               	movlw	low (STR_3| (0+32768))
  1638  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0066  00B6               	movwf	USARTWriteLine@str
  1641  0067  3083               	movlw	high (STR_3| (0+32768))
  1642  0068  00B7               	movwf	USARTWriteLine@str+1
  1643  0069  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1644                           
  1645                           ;uart_16f886.c: 160: USARTWriteLine("USART Test");
  1646  006E  3085               	movlw	low (STR_4| (0+32768))
  1647  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1649  0071  00B6               	movwf	USARTWriteLine@str
  1650  0072  3084               	movlw	high (STR_4| (0+32768))
  1651  0073  00B7               	movwf	USARTWriteLine@str+1
  1652  0074  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1653                           
  1654                           ;uart_16f886.c: 161: USARTWriteLine("----------");
  1655  0079  307A               	movlw	low (STR_5| (0+32768))
  1656  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1657  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1658  007C  00B6               	movwf	USARTWriteLine@str
  1659  007D  3084               	movlw	high (STR_5| (0+32768))
  1660  007E  00B7               	movwf	USARTWriteLine@str+1
  1661  007F  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1662                           
  1663                           ;uart_16f886.c: 162: USARTWriteLine("Type a character on keyboard");
  1664  0084  30DE               	movlw	low (STR_6| (0+32768))
  1665  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0087  00B6               	movwf	USARTWriteLine@str
  1668  0088  3083               	movlw	high (STR_6| (0+32768))
  1669  0089  00B7               	movwf	USARTWriteLine@str+1
  1670  008A  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1671                           
  1672                           ;uart_16f886.c: 163: USARTWriteLine("it will reach the PIC MCU via the serial line");
  1673  008F  3030               	movlw	low (STR_7| (0+32768))
  1674  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0092  00B6               	movwf	USARTWriteLine@str
  1677  0093  3083               	movlw	high (STR_7| (0+32768))
  1678  0094  00B7               	movwf	USARTWriteLine@str+1
  1679  0095  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1680                           
  1681                           ;uart_16f886.c: 164: USARTWriteLine("PIC MCU will return the same character but ");
  1682  009A  308B               	movlw	low (STR_8| (0+32768))
  1683  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1684  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1685  009D  00B6               	movwf	USARTWriteLine@str
  1686  009E  3083               	movlw	high (STR_8| (0+32768))
  1687  009F  00B7               	movwf	USARTWriteLine@str+1
  1688  00A0  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1689                           
  1690                           ;uart_16f886.c: 165: USARTWriteLine("enclosed in a <>");
  1691  00A5  305C               	movlw	low (STR_9| (0+32768))
  1692  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1693  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1694  00A8  00B6               	movwf	USARTWriteLine@str
  1695  00A9  3084               	movlw	high (STR_9| (0+32768))
  1696  00AA  00B7               	movwf	USARTWriteLine@str+1
  1697  00AB  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1698                           
  1699                           ;uart_16f886.c: 166: USARTWriteLine("--");
  1700  00B0  3082               	movlw	low ((STR_5+8)| (0+32768))
  1701  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1702  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1703  00B3  00B6               	movwf	USARTWriteLine@str
  1704  00B4  3084               	movlw	high ((STR_5+8)| (0+32768))
  1705  00B5  00B7               	movwf	USARTWriteLine@str+1
  1706  00B6  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1707                           
  1708                           ;uart_16f886.c: 167: USARTWriteLine("For example if you type 'a' you will see <a>");
  1709  00BB  305E               	movlw	low (STR_11| (0+32768))
  1710  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1711  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1712  00BE  00B6               	movwf	USARTWriteLine@str
  1713  00BF  3083               	movlw	high (STR_11| (0+32768))
  1714  00C0  00B7               	movwf	USARTWriteLine@str+1
  1715  00C1  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1716                           
  1717                           ;uart_16f886.c: 168: USARTWriteLine("appear on serial terminal.");
  1718  00C6  3018               	movlw	low (STR_12| (0+32768))
  1719  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1720  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1721  00C9  00B6               	movwf	USARTWriteLine@str
  1722  00CA  3084               	movlw	high (STR_12| (0+32768))
  1723  00CB  00B7               	movwf	USARTWriteLine@str+1
  1724  00CC  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1725                           
  1726                           ;uart_16f886.c: 169: USARTWriteLine(" ");
  1727  00D1  30B5               	movlw	low ((STR_8+42)| (0+32768))
  1728  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1729  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1730  00D4  00B6               	movwf	USARTWriteLine@str
  1731  00D5  3083               	movlw	high ((STR_8+42)| (0+32768))
  1732  00D6  00B7               	movwf	USARTWriteLine@str+1
  1733  00D7  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1734                           
  1735                           ;uart_16f886.c: 170: USARTWriteLine("This checks both way serial transfers.");
  1736  00DC  30B7               	movlw	low (STR_14| (0+32768))
  1737  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1738  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1739  00DF  00B6               	movwf	USARTWriteLine@str
  1740  00E0  3083               	movlw	high (STR_14| (0+32768))
  1741  00E1  00B7               	movwf	USARTWriteLine@str+1
  1742  00E2  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1743                           
  1744                           ;uart_16f886.c: 171: USARTWriteLine("");
  1745  00E7  30B6               	movlw	low ((STR_8+43)| (0+32768))
  1746  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1747  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1748  00EA  00B6               	movwf	USARTWriteLine@str
  1749  00EB  3083               	movlw	high ((STR_8+43)| (0+32768))
  1750  00EC  00B7               	movwf	USARTWriteLine@str+1
  1751  00ED  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1752                           
  1753                           ;uart_16f886.c: 172: USARTWriteLine("Copyright (C) 2008-2013");
  1754  00F2  3033               	movlw	low (STR_16| (0+32768))
  1755  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1756  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1757  00F5  00B6               	movwf	USARTWriteLine@str
  1758  00F6  3084               	movlw	high (STR_16| (0+32768))
  1759  00F7  00B7               	movwf	USARTWriteLine@str+1
  1760  00F8  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1761                           
  1762                           ;uart_16f886.c: 173: USARTWriteLine("www.eXtremeElectronics.co.in");
  1763  00FD  30FB               	movlw	low (STR_17| (0+32768))
  1764  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1765  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0100  00B6               	movwf	USARTWriteLine@str
  1767  0101  3083               	movlw	high (STR_17| (0+32768))
  1768  0102  00B7               	movwf	USARTWriteLine@str+1
  1769  0103  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1770                           
  1771                           ;uart_16f886.c: 174: USARTWriteLine("***********************************************");
  1772  0108  3000               	movlw	low (STR_3| (0+32768))
  1773  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1774  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1775  010B  00B6               	movwf	USARTWriteLine@str
  1776  010C  3083               	movlw	high (STR_3| (0+32768))
  1777  010D  00B7               	movwf	USARTWriteLine@str+1
  1778  010E  120A  158A  22B4  120A  118A  	fcall	_USARTWriteLine
  1779                           
  1780                           ;uart_16f886.c: 175: USARTGotoNewLine();
  1781  0113  120A  158A  2284  120A  118A  	fcall	_USARTGotoNewLine
  1782                           
  1783                           ;uart_16f886.c: 176: USARTGotoNewLine();
  1784  0118  120A  158A  2284  120A  118A  	fcall	_USARTGotoNewLine
  1785                           
  1786                           ;uart_16f886.c: 179: (LCDByte(0b00000001,0));
  1787  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1788  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1789  011F  01B8               	clrf	LCDByte@isdata
  1790  0120  3001               	movlw	1
  1791  0121  120A  158A  250B  120A  118A  	fcall	_LCDByte
  1792  0126                     l3017:	
  1793                           ;uart_16f886.c: 181: while(1)
  1794                           
  1795                           
  1796                           ;uart_16f886.c: 182: {
  1797                           ;uart_16f886.c: 184: if(RB4 == 1)
  1798  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0128  1E06               	btfss	6,4	;volatile
  1801  0129  2998               	goto	l3041
  1802                           
  1803                           ;uart_16f886.c: 185: {
  1804                           ;uart_16f886.c: 187: (LCDByte(0b00000001,0));
  1805  012A  01B8               	clrf	LCDByte@isdata
  1806  012B  3001               	movlw	1
  1807  012C  120A  158A  250B  120A  118A  	fcall	_LCDByte
  1808                           
  1809                           ;uart_16f886.c: 189: { LCDGotoXY(0,0); LCDWriteString("Thermometer set:");};
  1810  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0133  01BF               	clrf	LCDGotoXY@y
  1813  0134  3000               	movlw	0
  1814  0135  120A  118A  22BA  120A  118A  	fcall	_LCDGotoXY
  1815  013A  304B               	movlw	low (STR_1| (0+32768))
  1816  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1817  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1818  013D  00BF               	movwf	LCDWriteString@msg
  1819  013E  3084               	movlw	high (STR_1| (0+32768))
  1820  013F  00C0               	movwf	LCDWriteString@msg+1
  1821  0140  120A  158A  266F  120A  118A  	fcall	_LCDWriteString
  1822                           
  1823                           ;uart_16f886.c: 191: tuneTemp++;
  1824  0145  3001               	movlw	1
  1825  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1826  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1827  0148  07D4               	addwf	_tuneTemp,f
  1828  0149  1803               	skipnc
  1829  014A  0AD5               	incf	_tuneTemp+1,f
  1830  014B  3000               	movlw	0
  1831  014C  07D5               	addwf	_tuneTemp+1,f
  1832                           
  1833                           ;uart_16f886.c: 192: if(tuneTemp > 150)
  1834  014D  0855               	movf	_tuneTemp+1,w
  1835  014E  3A80               	xorlw	128
  1836  014F  00FF               	movwf	127
  1837  0150  3080               	movlw	128
  1838  0151  027F               	subwf	127,w
  1839  0152  1D03               	skipz
  1840  0153  2956               	goto	u3085
  1841  0154  3097               	movlw	151
  1842  0155  0254               	subwf	_tuneTemp,w
  1843  0156                     u3085:	
  1844  0156  1C03               	skipc
  1845  0157  295C               	goto	l3031
  1846                           
  1847                           ;uart_16f886.c: 193: {
  1848                           ;uart_16f886.c: 194: tuneTemp = 0;
  1849  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1851  015A  01D4               	clrf	_tuneTemp
  1852  015B  01D5               	clrf	_tuneTemp+1
  1853  015C                     l3031:	
  1854                           
  1855                           ;uart_16f886.c: 195: }
  1856                           ;uart_16f886.c: 198: { LCDGotoXY(0,1); LCDWriteInt(tuneTemp,3);};
  1857  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1858  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1859  015E  01BF               	clrf	LCDGotoXY@y
  1860  015F  0ABF               	incf	LCDGotoXY@y,f
  1861  0160  3000               	movlw	0
  1862  0161  120A  118A  22BA  120A  118A  	fcall	_LCDGotoXY
  1863  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0168  0855               	movf	_tuneTemp+1,w
  1866  0169  00C0               	movwf	LCDWriteInt@val+1
  1867  016A  0854               	movf	_tuneTemp,w
  1868  016B  00BF               	movwf	LCDWriteInt@val
  1869  016C  3003               	movlw	3
  1870  016D  1683               	bsf	3,5	;RP0=1, select bank1
  1871  016E  1303               	bcf	3,6	;RP1=0, select bank1
  1872  016F  00B2               	movwf	??_main^(0+128)
  1873  0170  0832               	movf	??_main^(0+128),w
  1874  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0173  00C1               	movwf	LCDWriteInt@field_length
  1877  0174  120A  118A  2567  120A  118A  	fcall	_LCDWriteInt
  1878                           
  1879                           ;uart_16f886.c: 201: LCDWriteString("%0C");
  1880  0179  3090               	movlw	low (STR_2| (0+32768))
  1881  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1882  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1883  017C  00BF               	movwf	LCDWriteString@msg
  1884  017D  3084               	movlw	high (STR_2| (0+32768))
  1885  017E  00C0               	movwf	LCDWriteString@msg+1
  1886  017F  120A  158A  266F  120A  118A  	fcall	_LCDWriteString
  1887                           
  1888                           ;uart_16f886.c: 203: _delay((unsigned long)((500)*(20000000/4000.0)));
  1889  0184  300D               	movlw	13
  1890  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1891  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1892  0187  00B4               	movwf	(??_main^(0+128)+2)
  1893  0188  30AF               	movlw	175
  1894  0189  00B3               	movwf	(??_main^(0+128)+1)
  1895  018A  30C1               	movlw	193
  1896  018B  00B2               	movwf	??_main^(0+128)
  1897  018C                     u3127:	
  1898  018C  0BB2               	decfsz	??_main^(0+128),f
  1899  018D  298C               	goto	u3127
  1900  018E  0BB3               	decfsz	(??_main^(0+128)+1),f
  1901  018F  298C               	goto	u3127
  1902  0190  0BB4               	decfsz	(??_main^(0+128)+2),f
  1903  0191  298C               	goto	u3127
  1904  0192  0000               	nop
  1905                           
  1906                           ;uart_16f886.c: 204: tuneTempDir = 1;
  1907  0193  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0194  1303               	bcf	3,6	;RP1=0, select bank1
  1909  0195  01BF               	clrf	_tuneTempDir^(0+128)
  1910  0196  0ABF               	incf	_tuneTempDir^(0+128),f
  1911                           
  1912                           ;uart_16f886.c: 206: }
  1913  0197  2A20               	goto	l3065
  1914  0198                     l3041:	
  1915                           
  1916                           ;uart_16f886.c: 207: else
  1917                           ;uart_16f886.c: 208: {
  1918                           ;uart_16f886.c: 210: curTemp = LM35ReadTemp();
  1919  0198  120A  118A  27AC  120A  118A  	fcall	_LM35ReadTemp
  1920  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1921  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1922  019F  082F               	movf	(?_LM35ReadTemp+1)^(0+128),w
  1923  01A0  00C1               	movwf	(_curTemp+1)^(0+128)
  1924  01A1  082E               	movf	?_LM35ReadTemp^(0+128),w
  1925  01A2  00C0               	movwf	_curTemp^(0+128)
  1926                           
  1927                           ;uart_16f886.c: 212: if(curTemp >= tuneTemp)
  1928  01A3  0841               	movf	(_curTemp+1)^(0+128),w
  1929  01A4  3A80               	xorlw	128
  1930  01A5  00B2               	movwf	??_main^(0+128)
  1931  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1932  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1933  01A8  0855               	movf	_tuneTemp+1,w
  1934  01A9  3A80               	xorlw	128
  1935  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1936  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  1937  01AC  0232               	subwf	??_main^(0+128),w
  1938  01AD  1D03               	skipz
  1939  01AE  29B5               	goto	u3095
  1940  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1941  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1942  01B1  0854               	movf	_tuneTemp,w
  1943  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1944  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1945  01B4  0240               	subwf	_curTemp^(0+128),w
  1946  01B5                     u3095:	
  1947  01B5  1C03               	skipc
  1948  01B6  29BB               	goto	l175
  1949                           
  1950                           ;uart_16f886.c: 213: {
  1951                           ;uart_16f886.c: 214: RA1 = 1;
  1952  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1953  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1954  01B9  1485               	bsf	5,1	;volatile
  1955                           
  1956                           ;uart_16f886.c: 215: }
  1957  01BA  29BE               	goto	l3047
  1958  01BB                     l175:	
  1959                           
  1960                           ;uart_16f886.c: 216: else
  1961                           ;uart_16f886.c: 217: {
  1962                           ;uart_16f886.c: 218: RA1 = 0;
  1963  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1964  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1965  01BD  1085               	bcf	5,1	;volatile
  1966  01BE                     l3047:	
  1967                           
  1968                           ;uart_16f886.c: 219: }
  1969                           ;uart_16f886.c: 221: if(tuneTempDir == 1)
  1970  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  1971  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  1972  01C0  033F               	decf	_tuneTempDir^(0+128),w
  1973  01C1  1D03               	btfss	3,2
  1974  01C2  29E3               	goto	l3057
  1975                           
  1976                           ;uart_16f886.c: 222: {
  1977                           ;uart_16f886.c: 224: (LCDByte(0b00000001,0));
  1978  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1979  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1980  01C5  01B8               	clrf	LCDByte@isdata
  1981  01C6  3001               	movlw	1
  1982  01C7  120A  158A  250B  120A  118A  	fcall	_LCDByte
  1983                           
  1984                           ;uart_16f886.c: 226: { LCDGotoXY(0,0); LCDWriteString("Thermometer:");};
  1985  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1986  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1987  01CE  01BF               	clrf	LCDGotoXY@y
  1988  01CF  3000               	movlw	0
  1989  01D0  120A  118A  22BA  120A  118A  	fcall	_LCDGotoXY
  1990  01D5  306D               	movlw	low (STR_21| (0+32768))
  1991  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1992  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1993  01D8  00BF               	movwf	LCDWriteString@msg
  1994  01D9  3084               	movlw	high (STR_21| (0+32768))
  1995  01DA  00C0               	movwf	LCDWriteString@msg+1
  1996  01DB  120A  158A  266F  120A  118A  	fcall	_LCDWriteString
  1997                           
  1998                           ;uart_16f886.c: 227: tuneTempDir = 0;
  1999  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2000  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2001  01E2  01BF               	clrf	_tuneTempDir^(0+128)
  2002  01E3                     l3057:	
  2003                           
  2004                           ;uart_16f886.c: 228: }
  2005                           ;uart_16f886.c: 231: { LCDGotoXY(0,1); LCDWriteInt(curTemp,3);};
  2006  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2007  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2008  01E5  01BF               	clrf	LCDGotoXY@y
  2009  01E6  0ABF               	incf	LCDGotoXY@y,f
  2010  01E7  3000               	movlw	0
  2011  01E8  120A  118A  22BA  120A  118A  	fcall	_LCDGotoXY
  2012  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2013  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2014  01EF  0841               	movf	(_curTemp+1)^(0+128),w
  2015  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2016  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2017  01F2  00C0               	movwf	LCDWriteInt@val+1
  2018  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2019  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2020  01F5  0840               	movf	_curTemp^(0+128),w
  2021  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2022  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2023  01F8  00BF               	movwf	LCDWriteInt@val
  2024  01F9  3003               	movlw	3
  2025  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  2026  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  2027  01FC  00B2               	movwf	??_main^(0+128)
  2028  01FD  0832               	movf	??_main^(0+128),w
  2029  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2030  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0200  00C1               	movwf	LCDWriteInt@field_length
  2032  0201  120A  118A  2567  120A  118A  	fcall	_LCDWriteInt
  2033                           
  2034                           ;uart_16f886.c: 234: LCDWriteString("%0C");
  2035  0206  3090               	movlw	low (STR_2| (0+32768))
  2036  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0209  00BF               	movwf	LCDWriteString@msg
  2039  020A  3084               	movlw	high (STR_2| (0+32768))
  2040  020B  00C0               	movwf	LCDWriteString@msg+1
  2041  020C  120A  158A  266F  120A  118A  	fcall	_LCDWriteString
  2042                           
  2043                           ;uart_16f886.c: 237: _delay((unsigned long)((200)*(20000000/4000.0)));
  2044  0211  3006               	movlw	6
  2045  0212  1683               	bsf	3,5	;RP0=1, select bank1
  2046  0213  1303               	bcf	3,6	;RP1=0, select bank1
  2047  0214  00B4               	movwf	(??_main^(0+128)+2)
  2048  0215  3013               	movlw	19
  2049  0216  00B3               	movwf	(??_main^(0+128)+1)
  2050  0217  30B1               	movlw	177
  2051  0218  00B2               	movwf	??_main^(0+128)
  2052  0219                     u3137:	
  2053  0219  0BB2               	decfsz	??_main^(0+128),f
  2054  021A  2A19               	goto	u3137
  2055  021B  0BB3               	decfsz	(??_main^(0+128)+1),f
  2056  021C  2A19               	goto	u3137
  2057  021D  0BB4               	decfsz	(??_main^(0+128)+2),f
  2058  021E  2A19               	goto	u3137
  2059  021F  2A20               	nop2
  2060  0220                     l3065:	
  2061                           
  2062                           ;uart_16f886.c: 239: }
  2063                           ;uart_16f886.c: 242: uint8_t n= USARTDataAvailable();
  2064  0220  120A  158A  22FA  120A  118A  	fcall	_USARTDataAvailable
  2065  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2066  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2067  0227  00B2               	movwf	??_main^(0+128)
  2068  0228  0832               	movf	??_main^(0+128),w
  2069  0229  00B5               	movwf	main@n^(0+128)
  2070                           
  2071                           ;uart_16f886.c: 245: if(n!=0)
  2072  022A  0835               	movf	main@n^(0+128),w
  2073  022B  1903               	btfsc	3,2
  2074  022C  2926               	goto	l3017
  2075                           
  2076                           ;uart_16f886.c: 246: {
  2077                           ;uart_16f886.c: 248: char data=USARTReadData();
  2078  022D  120A  158A  231D  120A  118A  	fcall	_USARTReadData
  2079  0232  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0233  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0234  00B2               	movwf	??_main^(0+128)
  2082  0235  0832               	movf	??_main^(0+128),w
  2083  0236  00B6               	movwf	main@data^(0+128)
  2084                           
  2085                           ;uart_16f886.c: 251: USARTWriteChar('<');
  2086  0237  303C               	movlw	60
  2087  0238  120A  158A  226B  120A  118A  	fcall	_USARTWriteChar
  2088                           
  2089                           ;uart_16f886.c: 252: USARTWriteChar(data);
  2090  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2091  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2092  023F  0836               	movf	main@data^(0+128),w
  2093  0240  120A  158A  226B  120A  118A  	fcall	_USARTWriteChar
  2094                           
  2095                           ;uart_16f886.c: 253: USARTWriteChar('>');
  2096  0245  303E               	movlw	62
  2097  0246  120A  158A  226B  120A  118A  	fcall	_USARTWriteChar
  2098  024B  2926               	goto	l3017
  2099  024C                     __end_of_main:	
  2100                           
  2101                           	psect	text1
  2102  0AB4                     __ptext1:	
  2103 ;; *************** function _USARTWriteLine *****************
  2104 ;; Defined at:
  2105 ;;		line 87 in file "usart_pic16.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  str             2   22[BANK0 ] PTR const unsigned char 
  2108 ;;		 -> STR_18(48), STR_17(29), STR_16(24), STR_15(1), 
  2109 ;;		 -> STR_14(39), STR_13(2), STR_12(27), STR_11(45), 
  2110 ;;		 -> STR_10(3), STR_9(17), STR_8(44), STR_7(46), 
  2111 ;;		 -> STR_6(29), STR_5(11), STR_4(11), STR_3(48), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       2       0       0       0
  2124 ;;      Locals:         0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0
  2126 ;;      Totals:         0       2       0       0       0
  2127 ;;Total ram usage:        2 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    6
  2130 ;; This function calls:
  2131 ;;		_USARTWriteChar
  2132 ;;		_USARTWriteString
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _USARTWriteLine
  2140  0AB4                     _USARTWriteLine:	
  2141                           
  2142                           ;usart_pic16.c: 89: USARTWriteChar('\r');
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _USARTWriteLine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2146  0AB4  300D               	movlw	13
  2147  0AB5  120A  158A  226B  120A  158A  	fcall	_USARTWriteChar
  2148                           
  2149                           ;usart_pic16.c: 90: USARTWriteChar('\n');
  2150  0ABA  300A               	movlw	10
  2151  0ABB  120A  158A  226B  120A  158A  	fcall	_USARTWriteChar
  2152                           
  2153                           ;usart_pic16.c: 92: USARTWriteString(str);
  2154  0AC0  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0AC1  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0AC2  0836               	movf	USARTWriteLine@str,w
  2157  0AC3  00B4               	movwf	USARTWriteString@str
  2158  0AC4  0837               	movf	USARTWriteLine@str+1,w
  2159  0AC5  00B5               	movwf	USARTWriteString@str+1
  2160  0AC6  120A  158A  2340   	fcall	_USARTWriteString
  2161  0AC9  0008               	return
  2162  0ACA                     __end_of_USARTWriteLine:	
  2163                           
  2164                           	psect	text2
  2165  0B40                     __ptext2:	
  2166 ;; *************** function _USARTWriteString *****************
  2167 ;; Defined at:
  2168 ;;		line 78 in file "usart_pic16.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  str             2   20[BANK0 ] PTR const unsigned char 
  2171 ;;		 -> STR_18(48), STR_17(29), STR_16(24), STR_15(1), 
  2172 ;;		 -> STR_14(39), STR_13(2), STR_12(27), STR_11(45), 
  2173 ;;		 -> STR_10(3), STR_9(17), STR_8(44), STR_7(46), 
  2174 ;;		 -> STR_6(29), STR_5(11), STR_4(11), STR_3(48), 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      void 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         0       2       0       0       0
  2187 ;;      Locals:         0       0       0       0       0
  2188 ;;      Temps:          0       0       0       0       0
  2189 ;;      Totals:         0       2       0       0       0
  2190 ;;Total ram usage:        2 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    5
  2193 ;; This function calls:
  2194 ;;		_USARTWriteChar
  2195 ;; This function is called by:
  2196 ;;		_USARTWriteLine
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _USARTWriteString
  2202  0B40                     _USARTWriteString:	
  2203  0B40                     l2015:	
  2204                           ;usart_pic16.c: 80: while(*str!='\0')
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _USARTWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2208                           
  2209  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0B42  0835               	movf	USARTWriteString@str+1,w
  2212  0B43  00FF               	movwf	127
  2213  0B44  0834               	movf	USARTWriteString@str,w
  2214  0B45  0084               	movwf	4
  2215  0B46  120A  158A  2000  120A  158A  	fcall	stringtab
  2216  0B4B  3A00               	xorlw	0
  2217  0B4C  1903               	btfsc	3,2
  2218  0B4D  0008               	return
  2219                           
  2220                           ;usart_pic16.c: 81: {
  2221                           ;usart_pic16.c: 82: USARTWriteChar(*str);
  2222  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0B50  0835               	movf	USARTWriteString@str+1,w
  2225  0B51  00FF               	movwf	127
  2226  0B52  0834               	movf	USARTWriteString@str,w
  2227  0B53  0084               	movwf	4
  2228  0B54  120A  158A  2000  120A  158A  	fcall	stringtab
  2229  0B59  120A  158A  226B  120A  158A  	fcall	_USARTWriteChar
  2230                           
  2231                           ;usart_pic16.c: 83: str++;
  2232  0B5E  3001               	movlw	1
  2233  0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0B60  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0B61  07B4               	addwf	USARTWriteString@str,f
  2236  0B62  1803               	skipnc
  2237  0B63  0AB5               	incf	USARTWriteString@str+1,f
  2238  0B64  2B40               	goto	l2015
  2239  0B65                     __end_of_USARTWriteString:	
  2240                           
  2241                           	psect	text3
  2242  0B1D                     __ptext3:	
  2243 ;; *************** function _USARTReadData *****************
  2244 ;; Defined at:
  2245 ;;		line 124 in file "usart_pic16.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  data            1   20[BANK0 ] unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      unsigned char 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         0       0       0       0       0
  2260 ;;      Locals:         0       1       0       0       0
  2261 ;;      Temps:          0       1       0       0       0
  2262 ;;      Totals:         0       2       0       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    4
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;;		_USARTReadBuffer
  2271 ;;		_USARTFlushBuffer
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function _USARTReadData
  2277  0B1D                     _USARTReadData:	
  2278                           
  2279                           ;usart_pic16.c: 126: char data;
  2280                           ;usart_pic16.c: 129: if(UQFront==-1)
  2281                           
  2282                           ;incstack = 0
  2283                           ; Regs used in _USARTReadData: [wreg-fsr0h+status,2+status,0]
  2284  0B1D  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0B1E  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0B1F  0A57               	incf	_UQFront,w	;volatile
  2287  0B20  1D03               	btfss	3,2
  2288  0B21  2B24               	goto	l2545
  2289                           
  2290                           ;usart_pic16.c: 130: return 0;
  2291  0B22  3000               	movlw	0
  2292  0B23  0008               	return
  2293  0B24                     l2545:	
  2294                           
  2295                           ;usart_pic16.c: 132: data=URBuff[UQFront];
  2296  0B24  0857               	movf	_UQFront,w
  2297  0B25  3E90               	addlw	(low (_URBuff| (0+256)))& (0+255)
  2298  0B26  0084               	movwf	4
  2299  0B27  1783               	bsf	3,7	;select IRP bank3
  2300  0B28  0800               	movf	0,w
  2301  0B29  00B3               	movwf	??_USARTReadData
  2302  0B2A  0833               	movf	??_USARTReadData,w
  2303  0B2B  00B4               	movwf	USARTReadData@data
  2304                           
  2305                           ;usart_pic16.c: 134: if(UQFront==UQEnd)
  2306  0B2C  0857               	movf	_UQFront,w	;volatile
  2307  0B2D  0656               	xorwf	_UQEnd,w	;volatile
  2308  0B2E  1D03               	skipz
  2309  0B2F  2B36               	goto	l2551
  2310                           
  2311                           ;usart_pic16.c: 135: {
  2312                           ;usart_pic16.c: 138: UQFront=UQEnd=-1;
  2313  0B30  30FF               	movlw	255
  2314  0B31  00D6               	movwf	_UQEnd	;volatile
  2315  0B32  00B3               	movwf	??_USARTReadData
  2316  0B33  0833               	movf	??_USARTReadData,w
  2317  0B34  00D7               	movwf	_UQFront	;volatile
  2318                           
  2319                           ;usart_pic16.c: 139: }
  2320  0B35  2B3E               	goto	l2555
  2321  0B36                     l2551:	
  2322                           
  2323                           ;usart_pic16.c: 140: else
  2324                           ;usart_pic16.c: 141: {
  2325                           ;usart_pic16.c: 142: UQFront++;
  2326  0B36  3001               	movlw	1
  2327  0B37  00B3               	movwf	??_USARTReadData
  2328  0B38  0833               	movf	??_USARTReadData,w
  2329  0B39  07D7               	addwf	_UQFront,f	;volatile
  2330                           
  2331                           ;usart_pic16.c: 144: if(UQFront==64)
  2332  0B3A  3040               	movlw	64
  2333  0B3B  0657               	xorwf	_UQFront,w	;volatile
  2334  0B3C  1903               	btfsc	3,2
  2335                           
  2336                           ;usart_pic16.c: 145: UQFront=0;
  2337  0B3D  01D7               	clrf	_UQFront	;volatile
  2338  0B3E                     l2555:	
  2339                           
  2340                           ;usart_pic16.c: 146: }
  2341                           ;usart_pic16.c: 148: return data;
  2342  0B3E  0834               	movf	USARTReadData@data,w
  2343  0B3F  0008               	return
  2344  0B40                     __end_of_USARTReadData:	
  2345                           
  2346                           	psect	text4
  2347  0B8B                     __ptext4:	
  2348 ;; *************** function _USARTInit *****************
  2349 ;; Defined at:
  2350 ;;		line 31 in file "usart_pic16.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  baud_rate       2   19[BANK0 ] unsigned int 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      void 
  2357 ;; Registers used:
  2358 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2364 ;;      Params:         0       2       0       0       0
  2365 ;;      Locals:         0       0       0       0       0
  2366 ;;      Temps:          0       1       0       0       0
  2367 ;;      Totals:         0       3       0       0       0
  2368 ;;Total ram usage:        3 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    4
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_main
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _USARTInit
  2380  0B8B                     _USARTInit:	
  2381                           
  2382                           ;usart_pic16.c: 34: UQFront=UQEnd=-1;
  2383                           
  2384                           ;incstack = 0
  2385                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  2386  0B8B  30FF               	movlw	255
  2387  0B8C  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0B8D  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0B8E  00D6               	movwf	_UQEnd	;volatile
  2390  0B8F  00B5               	movwf	??_USARTInit
  2391  0B90  0835               	movf	??_USARTInit,w
  2392  0B91  00D7               	movwf	_UQFront	;volatile
  2393                           
  2394                           ;usart_pic16.c: 37: switch(baud_rate)
  2395  0B92  2B9E               	goto	l2489
  2396  0B93                     l2479:	
  2397                           ;usart_pic16.c: 38: {
  2398                           ;usart_pic16.c: 39: case 9600:
  2399                           
  2400                           
  2401                           ;usart_pic16.c: 40: SPBRG=129;
  2402  0B93  3081               	movlw	129
  2403  0B94  2B9A               	goto	L3
  2404  0B95                     l2481:	
  2405                           ;usart_pic16.c: 42: case 19200:
  2406                           
  2407                           ;usart_pic16.c: 41: break;
  2408                           
  2409                           
  2410                           ;usart_pic16.c: 43: SPBRG=64;
  2411  0B95  3040               	movlw	64
  2412  0B96  2B9A               	goto	L3
  2413  0B97                     l2483:	
  2414                           ;usart_pic16.c: 45: case 28800:
  2415                           
  2416                           ;usart_pic16.c: 44: break;
  2417                           
  2418                           
  2419                           ;usart_pic16.c: 46: SPBRG=42;
  2420  0B97  302A               	movlw	42
  2421  0B98  2B9A               	goto	L3
  2422  0B99                     l2485:	
  2423                           ;usart_pic16.c: 48: case 33600:
  2424                           
  2425                           ;usart_pic16.c: 47: break;
  2426                           
  2427                           
  2428                           ;usart_pic16.c: 49: SPBRG=36;
  2429  0B99  3024               	movlw	36
  2430  0B9A                     L3:	
  2431  0B9A  1683               	bsf	3,5	;RP0=1, select bank1
  2432  0B9B  1303               	bcf	3,6	;RP1=0, select bank1
  2433  0B9C  0099               	movwf	25	;volatile
  2434                           
  2435                           ;usart_pic16.c: 51: }
  2436                           
  2437                           ;usart_pic16.c: 50: break;
  2438  0B9D  2BC1               	goto	l212
  2439  0B9E                     l2489:	
  2440                           
  2441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  2442                           ; Switch size 1, requested type "space"
  2443                           ; Number of cases is 4, Range of values is 37 to 131
  2444                           ; switch strategies available:
  2445                           ; Name         Instructions Cycles
  2446                           ; simple_byte           13     7 (average)
  2447                           ; jumptable            263     9 (fixed)
  2448                           ;	Chosen strategy is simple_byte
  2449  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0B9F  0834               	movf	USARTInit@baud_rate+1,w
  2451  0BA0  3A25               	xorlw	37	; case 37
  2452  0BA1  1903               	skipnz
  2453  0BA2  2BAD               	goto	l3157
  2454  0BA3  3A6E               	xorlw	110	; case 75
  2455  0BA4  1903               	skipnz
  2456  0BA5  2BB2               	goto	l3159
  2457  0BA6  3A3B               	xorlw	59	; case 112
  2458  0BA7  1903               	skipnz
  2459  0BA8  2BB7               	goto	l3161
  2460  0BA9  3AF3               	xorlw	243	; case 131
  2461  0BAA  1903               	skipnz
  2462  0BAB  2BBC               	goto	l3163
  2463  0BAC  2BC1               	goto	l212
  2464  0BAD                     l3157:	
  2465                           
  2466                           ; Switch size 1, requested type "space"
  2467                           ; Number of cases is 1, Range of values is 128 to 128
  2468                           ; switch strategies available:
  2469                           ; Name         Instructions Cycles
  2470                           ; simple_byte            4     3 (average)
  2471                           ; direct_byte           14    11 (fixed)
  2472                           ; jumptable            263     9 (fixed)
  2473                           ;	Chosen strategy is simple_byte
  2474  0BAD  0833               	movf	USARTInit@baud_rate,w
  2475  0BAE  3A80               	xorlw	128	; case 128
  2476  0BAF  1903               	skipnz
  2477  0BB0  2B93               	goto	l2479
  2478  0BB1  2BC1               	goto	l212
  2479  0BB2                     l3159:	
  2480                           
  2481                           ; Switch size 1, requested type "space"
  2482                           ; Number of cases is 1, Range of values is 0 to 0
  2483                           ; switch strategies available:
  2484                           ; Name         Instructions Cycles
  2485                           ; simple_byte            4     3 (average)
  2486                           ; direct_byte           11     8 (fixed)
  2487                           ; jumptable            260     6 (fixed)
  2488                           ;	Chosen strategy is simple_byte
  2489  0BB2  0833               	movf	USARTInit@baud_rate,w
  2490  0BB3  3A00               	xorlw	0	; case 0
  2491  0BB4  1903               	skipnz
  2492  0BB5  2B95               	goto	l2481
  2493  0BB6  2BC1               	goto	l212
  2494  0BB7                     l3161:	
  2495                           
  2496                           ; Switch size 1, requested type "space"
  2497                           ; Number of cases is 1, Range of values is 128 to 128
  2498                           ; switch strategies available:
  2499                           ; Name         Instructions Cycles
  2500                           ; simple_byte            4     3 (average)
  2501                           ; direct_byte           14    11 (fixed)
  2502                           ; jumptable            263     9 (fixed)
  2503                           ;	Chosen strategy is simple_byte
  2504  0BB7  0833               	movf	USARTInit@baud_rate,w
  2505  0BB8  3A80               	xorlw	128	; case 128
  2506  0BB9  1903               	skipnz
  2507  0BBA  2B97               	goto	l2483
  2508  0BBB  2BC1               	goto	l212
  2509  0BBC                     l3163:	
  2510                           
  2511                           ; Switch size 1, requested type "space"
  2512                           ; Number of cases is 1, Range of values is 64 to 64
  2513                           ; switch strategies available:
  2514                           ; Name         Instructions Cycles
  2515                           ; simple_byte            4     3 (average)
  2516                           ; direct_byte           14    11 (fixed)
  2517                           ; jumptable            263     9 (fixed)
  2518                           ;	Chosen strategy is simple_byte
  2519  0BBC  0833               	movf	USARTInit@baud_rate,w
  2520  0BBD  3A40               	xorlw	64	; case 64
  2521  0BBE  1903               	skipnz
  2522  0BBF  2B99               	goto	l2485
  2523  0BC0  2BC1               	goto	l212
  2524  0BC1                     l212:	
  2525                           
  2526                           ;usart_pic16.c: 53: TXSTAbits.TX9=0;
  2527  0BC1  1683               	bsf	3,5	;RP0=1, select bank1
  2528  0BC2  1303               	bcf	3,6	;RP1=0, select bank1
  2529  0BC3  1318               	bcf	24,6	;volatile
  2530                           
  2531                           ;usart_pic16.c: 54: TXSTAbits.TXEN=1;
  2532  0BC4  1698               	bsf	24,5	;volatile
  2533                           
  2534                           ;usart_pic16.c: 55: TXSTAbits.SYNC=0;
  2535  0BC5  1218               	bcf	24,4	;volatile
  2536                           
  2537                           ;usart_pic16.c: 56: TXSTAbits.BRGH=1;
  2538  0BC6  1518               	bsf	24,2	;volatile
  2539                           
  2540                           ;usart_pic16.c: 59: RCSTAbits.SPEN=1;
  2541  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0BC9  1798               	bsf	24,7	;volatile
  2544                           
  2545                           ;usart_pic16.c: 60: RCSTAbits.RX9=0;
  2546  0BCA  1318               	bcf	24,6	;volatile
  2547                           
  2548                           ;usart_pic16.c: 61: RCSTAbits.CREN=1;
  2549  0BCB  1618               	bsf	24,4	;volatile
  2550                           
  2551                           ;usart_pic16.c: 62: RCSTAbits.ADDEN=0;
  2552  0BCC  1198               	bcf	24,3	;volatile
  2553                           
  2554                           ;usart_pic16.c: 65: RCIE=1;
  2555  0BCD  1683               	bsf	3,5	;RP0=1, select bank1
  2556  0BCE  1303               	bcf	3,6	;RP1=0, select bank1
  2557  0BCF  168C               	bsf	12,5	;volatile
  2558                           
  2559                           ;usart_pic16.c: 66: PEIE=1;
  2560  0BD0  170B               	bsf	11,6	;volatile
  2561                           
  2562                           ;usart_pic16.c: 68: (GIE = 1);
  2563  0BD1  178B               	bsf	11,7	;volatile
  2564  0BD2  0008               	return
  2565  0BD3                     __end_of_USARTInit:	
  2566                           
  2567                           	psect	text5
  2568  0A84                     __ptext5:	
  2569 ;; *************** function _USARTGotoNewLine *****************
  2570 ;; Defined at:
  2571 ;;		line 202 in file "usart_pic16.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0, pclath, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2585 ;;      Params:         0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0
  2588 ;;      Totals:         0       0       0       0       0
  2589 ;;Total ram usage:        0 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    5
  2592 ;; This function calls:
  2593 ;;		_USARTWriteChar
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function _USARTGotoNewLine
  2601  0A84                     _USARTGotoNewLine:	
  2602                           
  2603                           ;usart_pic16.c: 204: USARTWriteChar('\r');
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _USARTGotoNewLine: [wreg+status,2+status,0+pclath+cstack]
  2607  0A84  300D               	movlw	13
  2608  0A85  120A  158A  226B  120A  158A  	fcall	_USARTWriteChar
  2609                           
  2610                           ;usart_pic16.c: 205: USARTWriteChar('\n');
  2611  0A8A  300A               	movlw	10
  2612  0A8B  120A  158A  226B   	fcall	_USARTWriteChar
  2613  0A8E  0008               	return
  2614  0A8F                     __end_of_USARTGotoNewLine:	
  2615                           
  2616                           	psect	text6
  2617  0A6B                     __ptext6:	
  2618 ;; *************** function _USARTWriteChar *****************
  2619 ;; Defined at:
  2620 ;;		line 71 in file "usart_pic16.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  ch              1    wreg     unsigned char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  ch              1   19[BANK0 ] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2634 ;;      Params:         0       0       0       0       0
  2635 ;;      Locals:         0       1       0       0       0
  2636 ;;      Temps:          0       0       0       0       0
  2637 ;;      Totals:         0       1       0       0       0
  2638 ;;Total ram usage:        1 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    4
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_main
  2645 ;;		_USARTWriteString
  2646 ;;		_USARTWriteLine
  2647 ;;		_USARTGotoNewLine
  2648 ;;		_USARTWriteInt
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function _USARTWriteChar
  2654  0A6B                     _USARTWriteChar:	
  2655                           
  2656                           ;incstack = 0
  2657                           ; Regs used in _USARTWriteChar: [wreg]
  2658                           ;USARTWriteChar@ch stored from wreg
  2659  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  2661  0A6D  00B3               	movwf	USARTWriteChar@ch
  2662  0A6E                     l219:	
  2663                           ;usart_pic16.c: 73: while(!PIR1bits.TXIF);
  2664                           
  2665  0A6E  1E0C               	btfss	12,4	;volatile
  2666  0A6F  2A6E               	goto	l219
  2667                           
  2668                           ;usart_pic16.c: 75: TXREG=ch;
  2669  0A70  0833               	movf	USARTWriteChar@ch,w
  2670  0A71  0099               	movwf	25	;volatile
  2671  0A72  0008               	return
  2672  0A73                     __end_of_USARTWriteChar:	
  2673                           
  2674                           	psect	text7
  2675  0AFA                     __ptext7:	
  2676 ;; *************** function _USARTDataAvailable *****************
  2677 ;; Defined at:
  2678 ;;		line 151 in file "usart_pic16.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      unsigned char 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0
  2694 ;;      Temps:          0       1       0       0       0
  2695 ;;      Totals:         0       1       0       0       0
  2696 ;;Total ram usage:        1 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    4
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;;		_USARTFlushBuffer
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _USARTDataAvailable
  2709  0AFA                     _USARTDataAvailable:	
  2710                           
  2711                           ;usart_pic16.c: 153: if(UQFront==-1) return 0;
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _USARTDataAvailable: [wreg+status,2+status,0]
  2715  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0AFC  0A57               	incf	_UQFront,w	;volatile
  2718  0AFD  1D03               	btfss	3,2
  2719  0AFE  2B01               	goto	l2519
  2720  0AFF  3000               	movlw	0
  2721  0B00  0008               	return
  2722  0B01                     l2519:	
  2723                           
  2724                           ;usart_pic16.c: 154: if(UQFront<UQEnd)
  2725  0B01  0857               	movf	_UQFront,w	;volatile
  2726  0B02  3A80               	xorlw	128
  2727  0B03  00B3               	movwf	??_USARTDataAvailable
  2728  0B04  0856               	movf	_UQEnd,w	;volatile
  2729  0B05  3A80               	xorlw	128
  2730  0B06  02B3               	subwf	??_USARTDataAvailable,f
  2731  0B07  1803               	skipnc
  2732  0B08  2B0E               	goto	l2527
  2733                           
  2734                           ;usart_pic16.c: 155: return(UQEnd-UQFront+1);
  2735  0B09  0357               	decf	_UQFront,w	;volatile
  2736  0B0A  3AFF               	xorlw	255
  2737  0B0B  0756               	addwf	_UQEnd,w	;volatile
  2738  0B0C  3E01               	addlw	1
  2739  0B0D  0008               	return
  2740  0B0E                     l2527:	
  2741                           
  2742                           ;usart_pic16.c: 156: else if(UQFront>UQEnd)
  2743  0B0E  0856               	movf	_UQEnd,w	;volatile
  2744  0B0F  3A80               	xorlw	128
  2745  0B10  00B3               	movwf	??_USARTDataAvailable
  2746  0B11  0857               	movf	_UQFront,w	;volatile
  2747  0B12  3A80               	xorlw	128
  2748  0B13  02B3               	subwf	??_USARTDataAvailable,f
  2749  0B14  1803               	skipnc
  2750  0B15  2B1B               	goto	l2535
  2751                           
  2752                           ;usart_pic16.c: 157: return (64-UQFront+UQEnd+1);
  2753  0B16  0357               	decf	_UQFront,w	;volatile
  2754  0B17  3AFF               	xorlw	255
  2755  0B18  0756               	addwf	_UQEnd,w	;volatile
  2756  0B19  3E41               	addlw	65
  2757  0B1A  0008               	return
  2758  0B1B                     l2535:	
  2759                           
  2760                           ;usart_pic16.c: 158: else
  2761                           ;usart_pic16.c: 159: return 1;
  2762  0B1B  3001               	movlw	1
  2763  0B1C  0008               	return
  2764  0B1D                     __end_of_USARTDataAvailable:	
  2765                           
  2766                           	psect	text8
  2767  0AE2                     __ptext8:	
  2768 ;; *************** function _TuneButtonInit *****************
  2769 ;; Defined at:
  2770 ;;		line 76 in file "uart_16f886.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		None
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    4
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _TuneButtonInit
  2800  0AE2                     _TuneButtonInit:	
  2801                           
  2802                           ;uart_16f886.c: 79: (TRISBbits.TRISB4 = 1);
  2803                           
  2804                           ;incstack = 0
  2805                           ; Regs used in _TuneButtonInit: []
  2806  0AE2  1683               	bsf	3,5	;RP0=1, select bank1
  2807  0AE3  1303               	bcf	3,6	;RP1=0, select bank1
  2808  0AE4  1606               	bsf	6,4	;volatile
  2809                           
  2810                           ;uart_16f886.c: 80: ANSELHbits.ANS11 = 0;
  2811  0AE5  1683               	bsf	3,5	;RP0=1, select bank3
  2812  0AE6  1703               	bsf	3,6	;RP1=1, select bank3
  2813  0AE7  1189               	bcf	9,3	;volatile
  2814                           
  2815                           ;uart_16f886.c: 82: OPTION_REGbits.INTEDG = 1;
  2816  0AE8  1683               	bsf	3,5	;RP0=1, select bank1
  2817  0AE9  1303               	bcf	3,6	;RP1=0, select bank1
  2818  0AEA  1701               	bsf	1,6	;volatile
  2819                           
  2820                           ;uart_16f886.c: 83: INTCONbits.PEIE = 1;
  2821  0AEB  170B               	bsf	11,6	;volatile
  2822                           
  2823                           ;uart_16f886.c: 85: ANSELbits.ANS1 = 0;
  2824  0AEC  1683               	bsf	3,5	;RP0=1, select bank3
  2825  0AED  1703               	bsf	3,6	;RP1=1, select bank3
  2826  0AEE  1088               	bcf	8,1	;volatile
  2827                           
  2828                           ;uart_16f886.c: 86: ANSELbits.ANS2 = 0;
  2829  0AEF  1108               	bcf	8,2	;volatile
  2830                           
  2831                           ;uart_16f886.c: 87: ANSELbits.ANS3 = 0;
  2832  0AF0  1188               	bcf	8,3	;volatile
  2833                           
  2834                           ;uart_16f886.c: 88: ANSELbits.ANS4 = 0;
  2835  0AF1  1208               	bcf	8,4	;volatile
  2836                           
  2837                           ;uart_16f886.c: 92: IOCBbits.IOCB4 = 1;
  2838  0AF2  1683               	bsf	3,5	;RP0=1, select bank1
  2839  0AF3  1303               	bcf	3,6	;RP1=0, select bank1
  2840  0AF4  1616               	bsf	22,4	;volatile
  2841                           
  2842                           ;uart_16f886.c: 93: INTCONbits.RBIE = 1;
  2843  0AF5  158B               	bsf	11,3	;volatile
  2844                           
  2845                           ;uart_16f886.c: 94: INTCONbits.INTE = 1;
  2846  0AF6  160B               	bsf	11,4	;volatile
  2847                           
  2848                           ;uart_16f886.c: 99: INTCONbits.RBIF = 0;
  2849  0AF7  100B               	bcf	11,0	;volatile
  2850                           
  2851                           ;uart_16f886.c: 103: INTCONbits.GIE = 1;
  2852  0AF8  178B               	bsf	11,7	;volatile
  2853  0AF9  0008               	return
  2854  0AFA                     __end_of_TuneButtonInit:	
  2855                           
  2856                           	psect	text9
  2857  07AC                     __ptext9:	
  2858 ;; *************** function _LM35ReadTemp *****************
  2859 ;; Defined at:
  2860 ;;		line 8 in file "lm35_pic16.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  t               3    0        float 
  2865 ;;  adc_value       2   16[BANK1 ] unsigned int 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2   14[BANK1 ] int 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, pclath, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         0       0       2       0       0
  2876 ;;      Locals:         0       0       2       0       0
  2877 ;;      Temps:          0       0       0       0       0
  2878 ;;      Totals:         0       0       4       0       0
  2879 ;;Total ram usage:        4 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    6
  2882 ;; This function calls:
  2883 ;;		_ReadADC
  2884 ;;		___ftmul
  2885 ;;		___fttol
  2886 ;;		___lwtoft
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _LM35ReadTemp
  2894  07AC                     _LM35ReadTemp:	
  2895                           
  2896                           ;lm35_pic16.c: 11: float t;
  2897                           ;lm35_pic16.c: 14: uint16_t adc_value=ReadADC(13);
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _LM35ReadTemp: [wreg+status,2+status,0+pclath+cstack]
  2901  07AC  300D               	movlw	13
  2902  07AD  120A  118A  22E0  120A  118A  	fcall	_ReadADC
  2903  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2904  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2905  07B4  0834               	movf	?_ReadADC+1,w
  2906  07B5  1683               	bsf	3,5	;RP0=1, select bank1
  2907  07B6  1303               	bcf	3,6	;RP1=0, select bank1
  2908  07B7  00B1               	movwf	(LM35ReadTemp@adc_value+1)^(0+128)
  2909  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2910  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2911  07BA  0833               	movf	?_ReadADC,w
  2912  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  2913  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  2914  07BD  00B0               	movwf	LM35ReadTemp@adc_value^(0+128)
  2915                           
  2916                           ;lm35_pic16.c: 28: return (int)(adc_value*0.4887);
  2917  07BE  0831               	movf	(LM35ReadTemp@adc_value+1)^(0+128),w
  2918  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  2919  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  2920  07C1  00BC               	movwf	___lwtoft@c+1
  2921  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  2922  07C3  1303               	bcf	3,6	;RP1=0, select bank1
  2923  07C4  0830               	movf	LM35ReadTemp@adc_value^(0+128),w
  2924  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  2925  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  2926  07C7  00BB               	movwf	___lwtoft@c
  2927  07C8  120A  158A  22CA  120A  118A  	fcall	___lwtoft
  2928  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2929  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  2930  07CF  083B               	movf	?___lwtoft,w
  2931  07D0  00C2               	movwf	___ftmul@f2
  2932  07D1  083C               	movf	?___lwtoft+1,w
  2933  07D2  00C3               	movwf	___ftmul@f2+1
  2934  07D3  083D               	movf	?___lwtoft+2,w
  2935  07D4  00C4               	movwf	___ftmul@f2+2
  2936  07D5  3037               	movlw	55
  2937  07D6  00BF               	movwf	___ftmul@f1
  2938  07D7  30FA               	movlw	250
  2939  07D8  00C0               	movwf	___ftmul@f1+1
  2940  07D9  303E               	movlw	62
  2941  07DA  00C1               	movwf	___ftmul@f1+2
  2942  07DB  120A  118A  2494  120A  118A  	fcall	___ftmul
  2943  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  2944  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  2945  07E2  083F               	movf	?___ftmul,w
  2946  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  2947  07E4  1303               	bcf	3,6	;RP1=0, select bank1
  2948  07E5  00A0               	movwf	___fttol@f1^(0+128)
  2949  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  2950  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  2951  07E8  0840               	movf	?___ftmul+1,w
  2952  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  2953  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  2954  07EB  00A1               	movwf	(___fttol@f1+1)^(0+128)
  2955  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2956  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  2957  07EE  0841               	movf	?___ftmul+2,w
  2958  07EF  1683               	bsf	3,5	;RP0=1, select bank1
  2959  07F0  1303               	bcf	3,6	;RP1=0, select bank1
  2960  07F1  00A2               	movwf	(___fttol@f1+2)^(0+128)
  2961  07F2  120A  118A  269D   	fcall	___fttol
  2962  07F5  1683               	bsf	3,5	;RP0=1, select bank1
  2963  07F6  1303               	bcf	3,6	;RP1=0, select bank1
  2964  07F7  0821               	movf	(?___fttol^(0+128)+1),w
  2965  07F8  00AF               	movwf	(?_LM35ReadTemp+1)^(0+128)
  2966  07F9  0820               	movf	?___fttol^(0+128),w
  2967  07FA  00AE               	movwf	?_LM35ReadTemp^(0+128)
  2968  07FB  0008               	return
  2969  07FC                     __end_of_LM35ReadTemp:	
  2970                           
  2971                           	psect	text10
  2972  0ACA                     __ptext10:	
  2973 ;; *************** function ___lwtoft *****************
  2974 ;; Defined at:
  2975 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  c               2   27[BANK0 ] unsigned int 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  3   27[BANK0 ] float 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       3       0       0       0
  2990 ;;      Locals:         0       0       0       0       0
  2991 ;;      Temps:          0       1       0       0       0
  2992 ;;      Totals:         0       4       0       0       0
  2993 ;;Total ram usage:        4 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    5
  2996 ;; This function calls:
  2997 ;;		___ftpack
  2998 ;; This function is called by:
  2999 ;;		_LM35ReadTemp
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           
  3004                           ;psect for function ___lwtoft
  3005  0ACA                     ___lwtoft:	
  3006                           
  3007                           ;incstack = 0
  3008                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3009  0ACA  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0ACB  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0ACC  083B               	movf	___lwtoft@c,w
  3012  0ACD  00B3               	movwf	___ftpack@arg
  3013  0ACE  083C               	movf	___lwtoft@c+1,w
  3014  0ACF  00B4               	movwf	___ftpack@arg+1
  3015  0AD0  01B5               	clrf	___ftpack@arg+2
  3016  0AD1  308E               	movlw	142
  3017  0AD2  00BE               	movwf	??___lwtoft
  3018  0AD3  083E               	movf	??___lwtoft,w
  3019  0AD4  00B6               	movwf	___ftpack@exp
  3020  0AD5  01B7               	clrf	___ftpack@sign
  3021  0AD6  120A  118A  224C   	fcall	___ftpack
  3022  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0ADB  0833               	movf	?___ftpack,w
  3025  0ADC  00BB               	movwf	?___lwtoft
  3026  0ADD  0834               	movf	?___ftpack+1,w
  3027  0ADE  00BC               	movwf	?___lwtoft+1
  3028  0ADF  0835               	movf	?___ftpack+2,w
  3029  0AE0  00BD               	movwf	?___lwtoft+2
  3030  0AE1  0008               	return
  3031  0AE2                     __end_of___lwtoft:	
  3032                           
  3033                           	psect	text11
  3034  069D                     __ptext11:	
  3035 ;; *************** function ___fttol *****************
  3036 ;; Defined at:
  3037 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  f1              3    0[BANK1 ] float 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  lval            4    9[BANK1 ] unsigned long 
  3042 ;;  exp1            1   13[BANK1 ] unsigned char 
  3043 ;;  sign1           1    8[BANK1 ] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  4    0[BANK1 ] long 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3053 ;;      Params:         0       0       4       0       0
  3054 ;;      Locals:         0       0       6       0       0
  3055 ;;      Temps:          0       0       4       0       0
  3056 ;;      Totals:         0       0      14       0       0
  3057 ;;Total ram usage:       14 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    4
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_LM35ReadTemp
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function ___fttol
  3069  069D                     ___fttol:	
  3070                           
  3071                           ;incstack = 0
  3072                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3073  069D  1683               	bsf	3,5	;RP0=1, select bank1
  3074  069E  1303               	bcf	3,6	;RP1=0, select bank1
  3075  069F  0820               	movf	___fttol@f1^(0+128),w
  3076  06A0  00A4               	movwf	??___fttol^(0+128)
  3077  06A1  0821               	movf	(___fttol@f1+1)^(0+128),w
  3078  06A2  00A5               	movwf	(??___fttol^(0+128)+1)
  3079  06A3  0822               	movf	(___fttol@f1+2)^(0+128),w
  3080  06A4  00A6               	movwf	(??___fttol^(0+128)+2)
  3081  06A5  1003               	clrc
  3082  06A6  0D25               	rlf	(??___fttol^(0+128)+1),w
  3083  06A7  0D26               	rlf	(??___fttol^(0+128)+2),w
  3084  06A8  00A7               	movwf	(??___fttol+3)^(0+128)
  3085  06A9  0827               	movf	(??___fttol+3)^(0+128),w
  3086  06AA  00AD               	movwf	___fttol@exp1^(0+128)
  3087  06AB  082D               	movf	___fttol@exp1^(0+128),w
  3088  06AC  1D03               	btfss	3,2
  3089  06AD  2EB7               	goto	l2931
  3090  06AE  3000               	movlw	0
  3091  06AF  00A3               	movwf	(?___fttol+3)^(0+128)
  3092  06B0  3000               	movlw	0
  3093  06B1  00A2               	movwf	(?___fttol+2)^(0+128)
  3094  06B2  3000               	movlw	0
  3095  06B3  00A1               	movwf	(?___fttol+1)^(0+128)
  3096  06B4  3000               	movlw	0
  3097  06B5  00A0               	movwf	?___fttol^(0+128)
  3098  06B6  0008               	return
  3099  06B7                     l2931:	
  3100  06B7  0820               	movf	___fttol@f1^(0+128),w
  3101  06B8  00A4               	movwf	??___fttol^(0+128)
  3102  06B9  0821               	movf	(___fttol@f1+1)^(0+128),w
  3103  06BA  00A5               	movwf	(??___fttol^(0+128)+1)
  3104  06BB  0822               	movf	(___fttol@f1+2)^(0+128),w
  3105  06BC  00A6               	movwf	(??___fttol^(0+128)+2)
  3106  06BD  3017               	movlw	23
  3107  06BE                     u2985:	
  3108  06BE  1003               	clrc
  3109  06BF  0CA6               	rrf	(??___fttol^(0+128)+2),f
  3110  06C0  0CA5               	rrf	(??___fttol^(0+128)+1),f
  3111  06C1  0CA4               	rrf	??___fttol^(0+128),f
  3112  06C2  3EFF               	addlw	-1
  3113  06C3  1D03               	skipz
  3114  06C4  2EBE               	goto	u2985
  3115  06C5  0824               	movf	??___fttol^(0+128),w
  3116  06C6  00A7               	movwf	(??___fttol+3)^(0+128)
  3117  06C7  0827               	movf	(??___fttol+3)^(0+128),w
  3118  06C8  00A8               	movwf	___fttol@sign1^(0+128)
  3119  06C9  17A1               	bsf	(___fttol@f1^(0+128)+1),7
  3120  06CA  30FF               	movlw	255
  3121  06CB  05A0               	andwf	___fttol@f1^(0+128),f
  3122  06CC  30FF               	movlw	255
  3123  06CD  05A1               	andwf	(___fttol@f1+1)^(0+128),f
  3124  06CE  3000               	movlw	0
  3125  06CF  05A2               	andwf	(___fttol@f1+2)^(0+128),f
  3126  06D0  0820               	movf	___fttol@f1^(0+128),w
  3127  06D1  00A9               	movwf	___fttol@lval^(0+128)
  3128  06D2  0821               	movf	(___fttol@f1+1)^(0+128),w
  3129  06D3  00AA               	movwf	(___fttol@lval^(0+128)+1)
  3130  06D4  0822               	movf	(___fttol@f1+2)^(0+128),w
  3131  06D5  00AB               	movwf	(___fttol@lval^(0+128)+2)
  3132  06D6  01AC               	clrf	(___fttol@lval^(0+128)+3)
  3133  06D7  308E               	movlw	142
  3134  06D8  02AD               	subwf	___fttol@exp1^(0+128),f
  3135  06D9  1FAD               	btfss	___fttol@exp1^(0+128),7
  3136  06DA  2EF9               	goto	l2951
  3137  06DB  082D               	movf	___fttol@exp1^(0+128),w
  3138  06DC  3A80               	xorlw	128
  3139  06DD  3E8F               	addlw	143
  3140  06DE  1803               	skipnc
  3141  06DF  2EE9               	goto	l2949
  3142  06E0  3000               	movlw	0
  3143  06E1  00A3               	movwf	(?___fttol+3)^(0+128)
  3144  06E2  3000               	movlw	0
  3145  06E3  00A2               	movwf	(?___fttol+2)^(0+128)
  3146  06E4  3000               	movlw	0
  3147  06E5  00A1               	movwf	(?___fttol+1)^(0+128)
  3148  06E6  3000               	movlw	0
  3149  06E7  00A0               	movwf	?___fttol^(0+128)
  3150  06E8  0008               	return
  3151  06E9                     l2949:	
  3152  06E9  3001               	movlw	1
  3153  06EA                     u3015:	
  3154  06EA  1003               	clrc
  3155  06EB  0CAC               	rrf	(___fttol@lval+3)^(0+128),f
  3156  06EC  0CAB               	rrf	(___fttol@lval+2)^(0+128),f
  3157  06ED  0CAA               	rrf	(___fttol@lval+1)^(0+128),f
  3158  06EE  0CA9               	rrf	___fttol@lval^(0+128),f
  3159  06EF  3EFF               	addlw	-1
  3160  06F0  1D03               	skipz
  3161  06F1  2EEA               	goto	u3015
  3162  06F2  3001               	movlw	1
  3163  06F3  00A4               	movwf	??___fttol^(0+128)
  3164  06F4  0824               	movf	??___fttol^(0+128),w
  3165  06F5  07AD               	addwf	___fttol@exp1^(0+128),f
  3166  06F6  1903               	btfsc	3,2
  3167  06F7  2F14               	goto	l2959
  3168  06F8  2EE9               	goto	l2949
  3169  06F9                     l2951:	
  3170  06F9  3018               	movlw	24
  3171  06FA  022D               	subwf	___fttol@exp1^(0+128),w
  3172  06FB  1C03               	skipc
  3173  06FC  2F11               	goto	l629
  3174  06FD  3000               	movlw	0
  3175  06FE  00A3               	movwf	(?___fttol+3)^(0+128)
  3176  06FF  3000               	movlw	0
  3177  0700  00A2               	movwf	(?___fttol+2)^(0+128)
  3178  0701  3000               	movlw	0
  3179  0702  00A1               	movwf	(?___fttol+1)^(0+128)
  3180  0703  3000               	movlw	0
  3181  0704  00A0               	movwf	?___fttol^(0+128)
  3182  0705  0008               	return
  3183  0706                     l2957:	
  3184  0706  3001               	movlw	1
  3185  0707  00A4               	movwf	??___fttol^(0+128)
  3186  0708                     u3045:	
  3187  0708  1003               	clrc
  3188  0709  0DA9               	rlf	___fttol@lval^(0+128),f
  3189  070A  0DAA               	rlf	(___fttol@lval+1)^(0+128),f
  3190  070B  0DAB               	rlf	(___fttol@lval+2)^(0+128),f
  3191  070C  0DAC               	rlf	(___fttol@lval+3)^(0+128),f
  3192  070D  0BA4               	decfsz	??___fttol^(0+128),f
  3193  070E  2F08               	goto	u3045
  3194  070F  3001               	movlw	1
  3195  0710  02AD               	subwf	___fttol@exp1^(0+128),f
  3196  0711                     l629:	
  3197  0711  082D               	movf	___fttol@exp1^(0+128),w
  3198  0712  1D03               	btfss	3,2
  3199  0713  2F06               	goto	l2957
  3200  0714                     l2959:	
  3201  0714  0828               	movf	___fttol@sign1^(0+128),w
  3202  0715  1903               	btfsc	3,2
  3203  0716  2F22               	goto	l2963
  3204  0717  09A9               	comf	___fttol@lval^(0+128),f
  3205  0718  09AA               	comf	(___fttol@lval+1)^(0+128),f
  3206  0719  09AB               	comf	(___fttol@lval+2)^(0+128),f
  3207  071A  09AC               	comf	(___fttol@lval+3)^(0+128),f
  3208  071B  0AA9               	incf	___fttol@lval^(0+128),f
  3209  071C  1903               	skipnz
  3210  071D  0AAA               	incf	(___fttol@lval+1)^(0+128),f
  3211  071E  1903               	skipnz
  3212  071F  0AAB               	incf	(___fttol@lval+2)^(0+128),f
  3213  0720  1903               	skipnz
  3214  0721  0AAC               	incf	(___fttol@lval+3)^(0+128),f
  3215  0722                     l2963:	
  3216  0722  082C               	movf	(___fttol@lval+3)^(0+128),w
  3217  0723  00A3               	movwf	(?___fttol+3)^(0+128)
  3218  0724  082B               	movf	(___fttol@lval+2)^(0+128),w
  3219  0725  00A2               	movwf	(?___fttol+2)^(0+128)
  3220  0726  082A               	movf	(___fttol@lval+1)^(0+128),w
  3221  0727  00A1               	movwf	(?___fttol+1)^(0+128)
  3222  0728  0829               	movf	___fttol@lval^(0+128),w
  3223  0729  00A0               	movwf	?___fttol^(0+128)
  3224  072A  0008               	return
  3225  072B                     __end_of___fttol:	
  3226                           
  3227                           	psect	text12
  3228  0494                     __ptext12:	
  3229 ;; *************** function ___ftmul *****************
  3230 ;; Defined at:
  3231 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  f1              3   31[BANK0 ] float 
  3234 ;;  f2              3   34[BANK0 ] float 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  f3_as_produc    3   42[BANK0 ] unsigned um
  3237 ;;  sign            1   46[BANK0 ] unsigned char 
  3238 ;;  cntr            1   45[BANK0 ] unsigned char 
  3239 ;;  exp             1   41[BANK0 ] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  3   31[BANK0 ] float 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         0       6       0       0       0
  3250 ;;      Locals:         0       6       0       0       0
  3251 ;;      Temps:          0       4       0       0       0
  3252 ;;      Totals:         0      16       0       0       0
  3253 ;;Total ram usage:       16 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    5
  3256 ;; This function calls:
  3257 ;;		___ftpack
  3258 ;; This function is called by:
  3259 ;;		_LM35ReadTemp
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function ___ftmul
  3265  0494                     ___ftmul:	
  3266                           
  3267                           ;incstack = 0
  3268                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3269  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0496  083F               	movf	___ftmul@f1,w
  3272  0497  00C5               	movwf	??___ftmul
  3273  0498  0840               	movf	___ftmul@f1+1,w
  3274  0499  00C6               	movwf	??___ftmul+1
  3275  049A  0841               	movf	___ftmul@f1+2,w
  3276  049B  00C7               	movwf	??___ftmul+2
  3277  049C  1003               	clrc
  3278  049D  0D46               	rlf	??___ftmul+1,w
  3279  049E  0D47               	rlf	??___ftmul+2,w
  3280  049F  00C8               	movwf	??___ftmul+3
  3281  04A0  0848               	movf	??___ftmul+3,w
  3282  04A1  00C9               	movwf	___ftmul@exp
  3283  04A2  0849               	movf	___ftmul@exp,w
  3284  04A3  1D03               	btfss	3,2
  3285  04A4  2CAC               	goto	l2105
  3286  04A5  3000               	movlw	0
  3287  04A6  00BF               	movwf	?___ftmul
  3288  04A7  3000               	movlw	0
  3289  04A8  00C0               	movwf	?___ftmul+1
  3290  04A9  3000               	movlw	0
  3291  04AA  00C1               	movwf	?___ftmul+2
  3292  04AB  0008               	return
  3293  04AC                     l2105:	
  3294  04AC  0842               	movf	___ftmul@f2,w
  3295  04AD  00C5               	movwf	??___ftmul
  3296  04AE  0843               	movf	___ftmul@f2+1,w
  3297  04AF  00C6               	movwf	??___ftmul+1
  3298  04B0  0844               	movf	___ftmul@f2+2,w
  3299  04B1  00C7               	movwf	??___ftmul+2
  3300  04B2  1003               	clrc
  3301  04B3  0D46               	rlf	??___ftmul+1,w
  3302  04B4  0D47               	rlf	??___ftmul+2,w
  3303  04B5  00C8               	movwf	??___ftmul+3
  3304  04B6  0848               	movf	??___ftmul+3,w
  3305  04B7  00CE               	movwf	___ftmul@sign
  3306  04B8  084E               	movf	___ftmul@sign,w
  3307  04B9  1D03               	btfss	3,2
  3308  04BA  2CC2               	goto	l2111
  3309  04BB  3000               	movlw	0
  3310  04BC  00BF               	movwf	?___ftmul
  3311  04BD  3000               	movlw	0
  3312  04BE  00C0               	movwf	?___ftmul+1
  3313  04BF  3000               	movlw	0
  3314  04C0  00C1               	movwf	?___ftmul+2
  3315  04C1  0008               	return
  3316  04C2                     l2111:	
  3317  04C2  084E               	movf	___ftmul@sign,w
  3318  04C3  3E7B               	addlw	123
  3319  04C4  00C5               	movwf	??___ftmul
  3320  04C5  0845               	movf	??___ftmul,w
  3321  04C6  07C9               	addwf	___ftmul@exp,f
  3322  04C7  083F               	movf	___ftmul@f1,w
  3323  04C8  00C5               	movwf	??___ftmul
  3324  04C9  0840               	movf	___ftmul@f1+1,w
  3325  04CA  00C6               	movwf	??___ftmul+1
  3326  04CB  0841               	movf	___ftmul@f1+2,w
  3327  04CC  00C7               	movwf	??___ftmul+2
  3328  04CD  3010               	movlw	16
  3329  04CE                     u1975:	
  3330  04CE  1003               	clrc
  3331  04CF  0CC7               	rrf	??___ftmul+2,f
  3332  04D0  0CC6               	rrf	??___ftmul+1,f
  3333  04D1  0CC5               	rrf	??___ftmul,f
  3334  04D2  3EFF               	addlw	-1
  3335  04D3  1D03               	skipz
  3336  04D4  2CCE               	goto	u1975
  3337  04D5  0845               	movf	??___ftmul,w
  3338  04D6  00C8               	movwf	??___ftmul+3
  3339  04D7  0848               	movf	??___ftmul+3,w
  3340  04D8  00CE               	movwf	___ftmul@sign
  3341  04D9  0842               	movf	___ftmul@f2,w
  3342  04DA  00C5               	movwf	??___ftmul
  3343  04DB  0843               	movf	___ftmul@f2+1,w
  3344  04DC  00C6               	movwf	??___ftmul+1
  3345  04DD  0844               	movf	___ftmul@f2+2,w
  3346  04DE  00C7               	movwf	??___ftmul+2
  3347  04DF  3010               	movlw	16
  3348  04E0                     u1985:	
  3349  04E0  1003               	clrc
  3350  04E1  0CC7               	rrf	??___ftmul+2,f
  3351  04E2  0CC6               	rrf	??___ftmul+1,f
  3352  04E3  0CC5               	rrf	??___ftmul,f
  3353  04E4  3EFF               	addlw	-1
  3354  04E5  1D03               	skipz
  3355  04E6  2CE0               	goto	u1985
  3356  04E7  0845               	movf	??___ftmul,w
  3357  04E8  00C8               	movwf	??___ftmul+3
  3358  04E9  0848               	movf	??___ftmul+3,w
  3359  04EA  06CE               	xorwf	___ftmul@sign,f
  3360  04EB  3080               	movlw	128
  3361  04EC  00C5               	movwf	??___ftmul
  3362  04ED  0845               	movf	??___ftmul,w
  3363  04EE  05CE               	andwf	___ftmul@sign,f
  3364  04EF  17C0               	bsf	___ftmul@f1+1,7
  3365  04F0  17C3               	bsf	___ftmul@f2+1,7
  3366  04F1  30FF               	movlw	255
  3367  04F2  05C2               	andwf	___ftmul@f2,f
  3368  04F3  30FF               	movlw	255
  3369  04F4  05C3               	andwf	___ftmul@f2+1,f
  3370  04F5  3000               	movlw	0
  3371  04F6  05C4               	andwf	___ftmul@f2+2,f
  3372  04F7  3000               	movlw	0
  3373  04F8  00CA               	movwf	___ftmul@f3_as_product
  3374  04F9  3000               	movlw	0
  3375  04FA  00CB               	movwf	___ftmul@f3_as_product+1
  3376  04FB  3000               	movlw	0
  3377  04FC  00CC               	movwf	___ftmul@f3_as_product+2
  3378  04FD  3007               	movlw	7
  3379  04FE  00C5               	movwf	??___ftmul
  3380  04FF  0845               	movf	??___ftmul,w
  3381  0500  00CD               	movwf	___ftmul@cntr
  3382  0501                     l2123:	
  3383  0501  1C3F               	btfss	___ftmul@f1,0
  3384  0502  2D11               	goto	l2127
  3385  0503  0842               	movf	___ftmul@f2,w
  3386  0504  07CA               	addwf	___ftmul@f3_as_product,f
  3387  0505  0843               	movf	___ftmul@f2+1,w
  3388  0506  1103               	clrz
  3389  0507  1803               	skipnc
  3390  0508  0A43               	incf	___ftmul@f2+1,w
  3391  0509  1D03               	btfss	3,2
  3392  050A  07CB               	addwf	___ftmul@f3_as_product+1,f
  3393  050B  0844               	movf	___ftmul@f2+2,w
  3394  050C  1103               	clrz
  3395  050D  1803               	skipnc
  3396  050E  0A44               	incf	___ftmul@f2+2,w
  3397  050F  1D03               	btfss	3,2
  3398  0510  07CC               	addwf	___ftmul@f3_as_product+2,f
  3399  0511                     l2127:	
  3400  0511  3001               	movlw	1
  3401  0512                     u2015:	
  3402  0512  1003               	clrc
  3403  0513  0CC1               	rrf	___ftmul@f1+2,f
  3404  0514  0CC0               	rrf	___ftmul@f1+1,f
  3405  0515  0CBF               	rrf	___ftmul@f1,f
  3406  0516  3EFF               	addlw	-1
  3407  0517  1D03               	skipz
  3408  0518  2D12               	goto	u2015
  3409  0519  3001               	movlw	1
  3410  051A                     u2025:	
  3411  051A  1003               	clrc
  3412  051B  0DC2               	rlf	___ftmul@f2,f
  3413  051C  0DC3               	rlf	___ftmul@f2+1,f
  3414  051D  0DC4               	rlf	___ftmul@f2+2,f
  3415  051E  3EFF               	addlw	-1
  3416  051F  1D03               	skipz
  3417  0520  2D1A               	goto	u2025
  3418  0521  3001               	movlw	1
  3419  0522  02CD               	subwf	___ftmul@cntr,f
  3420  0523  1D03               	btfss	3,2
  3421  0524  2D01               	goto	l2123
  3422  0525  3009               	movlw	9
  3423  0526  00C5               	movwf	??___ftmul
  3424  0527  0845               	movf	??___ftmul,w
  3425  0528  00CD               	movwf	___ftmul@cntr
  3426  0529                     l2135:	
  3427  0529  1C3F               	btfss	___ftmul@f1,0
  3428  052A  2D39               	goto	l2139
  3429  052B  0842               	movf	___ftmul@f2,w
  3430  052C  07CA               	addwf	___ftmul@f3_as_product,f
  3431  052D  0843               	movf	___ftmul@f2+1,w
  3432  052E  1103               	clrz
  3433  052F  1803               	skipnc
  3434  0530  0A43               	incf	___ftmul@f2+1,w
  3435  0531  1D03               	btfss	3,2
  3436  0532  07CB               	addwf	___ftmul@f3_as_product+1,f
  3437  0533  0844               	movf	___ftmul@f2+2,w
  3438  0534  1103               	clrz
  3439  0535  1803               	skipnc
  3440  0536  0A44               	incf	___ftmul@f2+2,w
  3441  0537  1D03               	btfss	3,2
  3442  0538  07CC               	addwf	___ftmul@f3_as_product+2,f
  3443  0539                     l2139:	
  3444  0539  3001               	movlw	1
  3445  053A                     u2065:	
  3446  053A  1003               	clrc
  3447  053B  0CC1               	rrf	___ftmul@f1+2,f
  3448  053C  0CC0               	rrf	___ftmul@f1+1,f
  3449  053D  0CBF               	rrf	___ftmul@f1,f
  3450  053E  3EFF               	addlw	-1
  3451  053F  1D03               	skipz
  3452  0540  2D3A               	goto	u2065
  3453  0541  3001               	movlw	1
  3454  0542                     u2075:	
  3455  0542  1003               	clrc
  3456  0543  0CCC               	rrf	___ftmul@f3_as_product+2,f
  3457  0544  0CCB               	rrf	___ftmul@f3_as_product+1,f
  3458  0545  0CCA               	rrf	___ftmul@f3_as_product,f
  3459  0546  3EFF               	addlw	-1
  3460  0547  1D03               	skipz
  3461  0548  2D42               	goto	u2075
  3462  0549  3001               	movlw	1
  3463  054A  02CD               	subwf	___ftmul@cntr,f
  3464  054B  1D03               	btfss	3,2
  3465  054C  2D29               	goto	l2135
  3466  054D  084A               	movf	___ftmul@f3_as_product,w
  3467  054E  00B3               	movwf	___ftpack@arg
  3468  054F  084B               	movf	___ftmul@f3_as_product+1,w
  3469  0550  00B4               	movwf	___ftpack@arg+1
  3470  0551  084C               	movf	___ftmul@f3_as_product+2,w
  3471  0552  00B5               	movwf	___ftpack@arg+2
  3472  0553  0849               	movf	___ftmul@exp,w
  3473  0554  00C5               	movwf	??___ftmul
  3474  0555  0845               	movf	??___ftmul,w
  3475  0556  00B6               	movwf	___ftpack@exp
  3476  0557  084E               	movf	___ftmul@sign,w
  3477  0558  00C6               	movwf	??___ftmul+1
  3478  0559  0846               	movf	??___ftmul+1,w
  3479  055A  00B7               	movwf	___ftpack@sign
  3480  055B  120A  118A  224C   	fcall	___ftpack
  3481  055E  1283               	bcf	3,5	;RP0=0, select bank0
  3482  055F  1303               	bcf	3,6	;RP1=0, select bank0
  3483  0560  0833               	movf	?___ftpack,w
  3484  0561  00BF               	movwf	?___ftmul
  3485  0562  0834               	movf	?___ftpack+1,w
  3486  0563  00C0               	movwf	?___ftmul+1
  3487  0564  0835               	movf	?___ftpack+2,w
  3488  0565  00C1               	movwf	?___ftmul+2
  3489  0566  0008               	return
  3490  0567                     __end_of___ftmul:	
  3491                           
  3492                           	psect	text13
  3493  024C                     __ptext13:	
  3494 ;; *************** function ___ftpack *****************
  3495 ;; Defined at:
  3496 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  arg             3   19[BANK0 ] unsigned um
  3499 ;;  exp             1   22[BANK0 ] unsigned char 
  3500 ;;  sign            1   23[BANK0 ] unsigned char 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  3   19[BANK0 ] float 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       5       0       0       0
  3513 ;;      Locals:         0       0       0       0       0
  3514 ;;      Temps:          0       3       0       0       0
  3515 ;;      Totals:         0       8       0       0       0
  3516 ;;Total ram usage:        8 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    4
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		___ftmul
  3523 ;;		___lwtoft
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function ___ftpack
  3529  024C                     ___ftpack:	
  3530                           
  3531                           ;incstack = 0
  3532                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3533  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3534  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3535  024E  0836               	movf	___ftpack@exp,w
  3536  024F  1903               	btfsc	3,2
  3537  0250  2A56               	goto	l1895
  3538  0251  0835               	movf	___ftpack@arg+2,w
  3539  0252  0434               	iorwf	___ftpack@arg+1,w
  3540  0253  0433               	iorwf	___ftpack@arg,w
  3541  0254  1D03               	skipz
  3542  0255  2A69               	goto	l1901
  3543  0256                     l1895:	
  3544  0256  3000               	movlw	0
  3545  0257  00B3               	movwf	?___ftpack
  3546  0258  3000               	movlw	0
  3547  0259  00B4               	movwf	?___ftpack+1
  3548  025A  3000               	movlw	0
  3549  025B  00B5               	movwf	?___ftpack+2
  3550  025C  0008               	return
  3551  025D                     l1899:	
  3552  025D  3001               	movlw	1
  3553  025E  00B8               	movwf	??___ftpack
  3554  025F  0838               	movf	??___ftpack,w
  3555  0260  07B6               	addwf	___ftpack@exp,f
  3556  0261  3001               	movlw	1
  3557  0262                     u1565:	
  3558  0262  1003               	clrc
  3559  0263  0CB5               	rrf	___ftpack@arg+2,f
  3560  0264  0CB4               	rrf	___ftpack@arg+1,f
  3561  0265  0CB3               	rrf	___ftpack@arg,f
  3562  0266  3EFF               	addlw	-1
  3563  0267  1D03               	skipz
  3564  0268  2A62               	goto	u1565
  3565  0269                     l1901:	
  3566  0269  30FE               	movlw	254
  3567  026A  0535               	andwf	___ftpack@arg+2,w
  3568  026B  1903               	btfsc	3,2
  3569  026C  2A84               	goto	l538
  3570  026D  2A5D               	goto	l1899
  3571  026E                     l1903:	
  3572  026E  3001               	movlw	1
  3573  026F  00B8               	movwf	??___ftpack
  3574  0270  0838               	movf	??___ftpack,w
  3575  0271  07B6               	addwf	___ftpack@exp,f
  3576  0272  3001               	movlw	1
  3577  0273  07B3               	addwf	___ftpack@arg,f
  3578  0274  3000               	movlw	0
  3579  0275  1803               	skipnc
  3580  0276  3001               	movlw	1
  3581  0277  07B4               	addwf	___ftpack@arg+1,f
  3582  0278  3000               	movlw	0
  3583  0279  1803               	skipnc
  3584  027A  3001               	movlw	1
  3585  027B  07B5               	addwf	___ftpack@arg+2,f
  3586  027C  3001               	movlw	1
  3587  027D                     u1585:	
  3588  027D  1003               	clrc
  3589  027E  0CB5               	rrf	___ftpack@arg+2,f
  3590  027F  0CB4               	rrf	___ftpack@arg+1,f
  3591  0280  0CB3               	rrf	___ftpack@arg,f
  3592  0281  3EFF               	addlw	-1
  3593  0282  1D03               	skipz
  3594  0283  2A7D               	goto	u1585
  3595  0284                     l538:	
  3596  0284  30FF               	movlw	255
  3597  0285  0535               	andwf	___ftpack@arg+2,w
  3598  0286  1903               	btfsc	3,2
  3599  0287  2A93               	goto	l1911
  3600  0288  2A6E               	goto	l1903
  3601  0289                     l1909:	
  3602  0289  3001               	movlw	1
  3603  028A  02B6               	subwf	___ftpack@exp,f
  3604  028B  3001               	movlw	1
  3605  028C                     u1605:	
  3606  028C  1003               	clrc
  3607  028D  0DB3               	rlf	___ftpack@arg,f
  3608  028E  0DB4               	rlf	___ftpack@arg+1,f
  3609  028F  0DB5               	rlf	___ftpack@arg+2,f
  3610  0290  3EFF               	addlw	-1
  3611  0291  1D03               	skipz
  3612  0292  2A8C               	goto	u1605
  3613  0293                     l1911:	
  3614  0293  1BB4               	btfsc	___ftpack@arg+1,7
  3615  0294  2A99               	goto	l545
  3616  0295  3002               	movlw	2
  3617  0296  0236               	subwf	___ftpack@exp,w
  3618  0297  1803               	skipnc
  3619  0298  2A89               	goto	l1909
  3620  0299                     l545:	
  3621  0299  1836               	btfsc	___ftpack@exp,0
  3622  029A  2AA1               	goto	l546
  3623  029B  30FF               	movlw	255
  3624  029C  05B3               	andwf	___ftpack@arg,f
  3625  029D  307F               	movlw	127
  3626  029E  05B4               	andwf	___ftpack@arg+1,f
  3627  029F  30FF               	movlw	255
  3628  02A0  05B5               	andwf	___ftpack@arg+2,f
  3629  02A1                     l546:	
  3630  02A1  1003               	clrc
  3631  02A2  0CB6               	rrf	___ftpack@exp,f
  3632  02A3  0836               	movf	___ftpack@exp,w
  3633  02A4  00B8               	movwf	??___ftpack
  3634  02A5  01B9               	clrf	??___ftpack+1
  3635  02A6  01BA               	clrf	??___ftpack+2
  3636  02A7  3010               	movlw	16
  3637  02A8                     u1645:	
  3638  02A8  1003               	clrc
  3639  02A9  0DB8               	rlf	??___ftpack,f
  3640  02AA  0DB9               	rlf	??___ftpack+1,f
  3641  02AB  0DBA               	rlf	??___ftpack+2,f
  3642  02AC  3EFF               	addlw	-1
  3643  02AD  1D03               	skipz
  3644  02AE  2AA8               	goto	u1645
  3645  02AF  0838               	movf	??___ftpack,w
  3646  02B0  04B3               	iorwf	___ftpack@arg,f
  3647  02B1  0839               	movf	??___ftpack+1,w
  3648  02B2  04B4               	iorwf	___ftpack@arg+1,f
  3649  02B3  083A               	movf	??___ftpack+2,w
  3650  02B4  04B5               	iorwf	___ftpack@arg+2,f
  3651  02B5  0837               	movf	___ftpack@sign,w
  3652  02B6  1903               	btfsc	3,2
  3653  02B7  0008               	return
  3654  02B8  17B5               	bsf	___ftpack@arg+2,7
  3655  02B9  0008               	return
  3656  02BA                     __end_of___ftpack:	
  3657                           
  3658                           	psect	text14
  3659  02E0                     __ptext14:	
  3660 ;; *************** function _ReadADC *****************
  3661 ;; Defined at:
  3662 ;;		line 27 in file "adc_pic16.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  ch              1    wreg     unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  ch              1   22[BANK0 ] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  2   19[BANK0 ] unsigned int 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3676 ;;      Params:         0       2       0       0       0
  3677 ;;      Locals:         0       1       0       0       0
  3678 ;;      Temps:          0       1       0       0       0
  3679 ;;      Totals:         0       4       0       0       0
  3680 ;;Total ram usage:        4 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    4
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_LM35ReadTemp
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           
  3691                           ;psect for function _ReadADC
  3692  02E0                     _ReadADC:	
  3693                           
  3694                           ;incstack = 0
  3695                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  3696                           ;ReadADC@ch stored from wreg
  3697  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  3698  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  3699  02E2  00B6               	movwf	ReadADC@ch
  3700                           
  3701                           ;adc_pic16.c: 29: ADCON0bits.CHS=ch;
  3702  02E3  0836               	movf	ReadADC@ch,w
  3703  02E4  00B5               	movwf	??_ReadADC
  3704  02E5  0DB5               	rlf	??_ReadADC,f
  3705  02E6  0DB5               	rlf	??_ReadADC,f
  3706  02E7  081F               	movf	31,w	;volatile
  3707  02E8  0635               	xorwf	??_ReadADC,w
  3708  02E9  39C3               	andlw	-61
  3709  02EA  0635               	xorwf	??_ReadADC,w
  3710  02EB  009F               	movwf	31	;volatile
  3711                           
  3712                           ;adc_pic16.c: 32: _delay((unsigned long)((100)*(20000000/4000000.0)));
  3713  02EC  30A6               	movlw	166
  3714  02ED  00B5               	movwf	??_ReadADC
  3715  02EE                     u3147:	
  3716  02EE  0BB5               	decfsz	??_ReadADC,f
  3717  02EF  2AEE               	goto	u3147
  3718  02F0  0000               	nop
  3719                           
  3720                           ;adc_pic16.c: 35: ADCON0bits.GO=1;
  3721  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  3722  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  3723  02F3  149F               	bsf	31,1	;volatile
  3724  02F4                     l20:	
  3725                           ;adc_pic16.c: 38: while(ADCON0bits.GO);
  3726                           
  3727  02F4  189F               	btfsc	31,1	;volatile
  3728  02F5  2AF4               	goto	l20
  3729                           
  3730                           ;adc_pic16.c: 40: return ((ADRESH<<8)|ADRESL);
  3731  02F6  081E               	movf	30,w	;volatile
  3732  02F7  00B4               	movwf	?_ReadADC+1
  3733  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  3734  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  3735  02FA  081E               	movf	30,w	;volatile
  3736  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  3737  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  3738  02FD  00B3               	movwf	?_ReadADC
  3739  02FE  0008               	return
  3740  02FF                     __end_of_ReadADC:	
  3741                           
  3742                           	psect	text15
  3743  0E6F                     __ptext15:	
  3744 ;; *************** function _LCDWriteString *****************
  3745 ;; Defined at:
  3746 ;;		line 279 in file "lcd_hd44780_pic16.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  msg             2   31[BANK0 ] PTR const unsigned char 
  3749 ;;		 -> STR_22(4), STR_21(13), STR_20(4), STR_19(17), 
  3750 ;;		 -> STR_2(4), STR_1(17), 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  cc              1   34[BANK0 ] char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         0       2       0       0       0
  3763 ;;      Locals:         0       1       0       0       0
  3764 ;;      Temps:          0       1       0       0       0
  3765 ;;      Totals:         0       4       0       0       0
  3766 ;;Total ram usage:        4 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    6
  3769 ;; This function calls:
  3770 ;;		_LCDByte
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           
  3777                           ;psect for function _LCDWriteString
  3778  0E6F                     _LCDWriteString:	
  3779  0E6F                     l2387:	
  3780                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  3781                           
  3782                           ;incstack = 0
  3783                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3784                           
  3785  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0E71  0840               	movf	LCDWriteString@msg+1,w
  3788  0E72  00FF               	movwf	127
  3789  0E73  083F               	movf	LCDWriteString@msg,w
  3790  0E74  0084               	movwf	4
  3791  0E75  120A  158A  2000  120A  158A  	fcall	stringtab
  3792  0E7A  3A00               	xorlw	0
  3793  0E7B  1903               	btfsc	3,2
  3794  0E7C  0008               	return
  3795                           
  3796                           ;lcd_hd44780_pic16.c: 282: {
  3797                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  3798  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0E7F  0840               	movf	LCDWriteString@msg+1,w
  3801  0E80  00FF               	movwf	127
  3802  0E81  083F               	movf	LCDWriteString@msg,w
  3803  0E82  0084               	movwf	4
  3804  0E83  120A  158A  2000  120A  158A  	fcall	stringtab
  3805  0E88  3A25               	xorlw	37
  3806  0E89  1D03               	skipz
  3807  0E8A  2EB1               	goto	l2383
  3808                           
  3809                           ;lcd_hd44780_pic16.c: 285: {
  3810                           ;lcd_hd44780_pic16.c: 286: msg++;
  3811  0E8B  3001               	movlw	1
  3812  0E8C  07BF               	addwf	LCDWriteString@msg,f
  3813  0E8D  1803               	skipnc
  3814  0E8E  0AC0               	incf	LCDWriteString@msg+1,f
  3815                           
  3816                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  3817  0E8F  0840               	movf	LCDWriteString@msg+1,w
  3818  0E90  00FF               	movwf	127
  3819  0E91  083F               	movf	LCDWriteString@msg,w
  3820  0E92  0084               	movwf	4
  3821  0E93  120A  158A  2000  120A  158A  	fcall	stringtab
  3822  0E98  3ED0               	addlw	-48
  3823  0E99  00C1               	movwf	??_LCDWriteString
  3824  0E9A  0841               	movf	??_LCDWriteString,w
  3825  0E9B  00C2               	movwf	LCDWriteString@cc
  3826                           
  3827                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  3828  0E9C  1BC2               	btfsc	LCDWriteString@cc,7
  3829  0E9D  2EA7               	goto	l2379
  3830  0E9E  0842               	movf	LCDWriteString@cc,w
  3831  0E9F  3A80               	xorlw	128
  3832  0EA0  3E78               	addlw	-136
  3833  0EA1  1803               	skipnc
  3834  0EA2  2EA7               	goto	l2379
  3835                           
  3836                           ;lcd_hd44780_pic16.c: 290: {
  3837                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  3838  0EA3  01B8               	clrf	LCDByte@isdata
  3839  0EA4  0AB8               	incf	LCDByte@isdata,f
  3840  0EA5  0842               	movf	LCDWriteString@cc,w
  3841  0EA6  2EBE               	goto	L4
  3842  0EA7                     l2379:	
  3843                           ;lcd_hd44780_pic16.c: 292: }
  3844                           
  3845                           
  3846                           ;lcd_hd44780_pic16.c: 293: else
  3847                           ;lcd_hd44780_pic16.c: 294: {
  3848                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  3849  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  3851  0EA9  01B8               	clrf	LCDByte@isdata
  3852  0EAA  0AB8               	incf	LCDByte@isdata,f
  3853  0EAB  3025               	movlw	37
  3854  0EAC  120A  158A  250B  120A  158A  	fcall	_LCDByte
  3855  0EB1                     l2383:	
  3856                           ;lcd_hd44780_pic16.c: 297: }
  3857                           ;lcd_hd44780_pic16.c: 298: }
  3858                           
  3859                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  3860                           
  3861                           
  3862                           ;lcd_hd44780_pic16.c: 299: else
  3863                           ;lcd_hd44780_pic16.c: 300: {
  3864                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  3865  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  3866  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  3867  0EB3  01B8               	clrf	LCDByte@isdata
  3868  0EB4  0AB8               	incf	LCDByte@isdata,f
  3869  0EB5  0840               	movf	LCDWriteString@msg+1,w
  3870  0EB6  00FF               	movwf	127
  3871  0EB7  083F               	movf	LCDWriteString@msg,w
  3872  0EB8  0084               	movwf	4
  3873  0EB9  120A  158A  2000  120A  158A  	fcall	stringtab
  3874  0EBE                     L4:	
  3875  0EBE  120A  158A  250B  120A  158A  	fcall	_LCDByte
  3876                           
  3877                           ;lcd_hd44780_pic16.c: 302: }
  3878                           ;lcd_hd44780_pic16.c: 303: msg++;
  3879  0EC3  3001               	movlw	1
  3880  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  3881  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0EC6  07BF               	addwf	LCDWriteString@msg,f
  3883  0EC7  1803               	skipnc
  3884  0EC8  0AC0               	incf	LCDWriteString@msg+1,f
  3885  0EC9  2E6F               	goto	l2387
  3886  0ECA                     __end_of_LCDWriteString:	
  3887                           
  3888                           	psect	text16
  3889  0567                     __ptext16:	
  3890 ;; *************** function _LCDWriteInt *****************
  3891 ;; Defined at:
  3892 ;;		line 317 in file "lcd_hd44780_pic16.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  val             2   31[BANK0 ] int 
  3895 ;;  field_length    1   33[BANK0 ] char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  str             5   36[BANK0 ] unsigned char [5]
  3898 ;;  i               2   43[BANK0 ] int 
  3899 ;;  j               2   41[BANK0 ] int 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3909 ;;      Params:         0       3       0       0       0
  3910 ;;      Locals:         0       9       0       0       0
  3911 ;;      Temps:          0       2       0       0       0
  3912 ;;      Totals:         0      14       0       0       0
  3913 ;;Total ram usage:       14 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    6
  3916 ;; This function calls:
  3917 ;;		_LCDByte
  3918 ;;		___awdiv
  3919 ;;		___awmod
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _LCDWriteInt
  3927  0567                     _LCDWriteInt:	
  3928                           
  3929                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  3930                           
  3931                           ;incstack = 0
  3932                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3933  0567  3044               	movlw	LCDWriteInt@str& (0+255)
  3934  0568  0084               	movwf	4
  3935  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3936  056A  1303               	bcf	3,6	;RP1=0, select bank0
  3937  056B  0858               	movf	LCDWriteInt@F1632,w
  3938  056C  1383               	bcf	3,7	;select IRP bank0
  3939  056D  0080               	movwf	0
  3940  056E  0A84               	incf	4,f
  3941  056F  0859               	movf	LCDWriteInt@F1632+1,w
  3942  0570  0080               	movwf	0
  3943  0571  0A84               	incf	4,f
  3944  0572  085A               	movf	LCDWriteInt@F1632+2,w
  3945  0573  0080               	movwf	0
  3946  0574  0A84               	incf	4,f
  3947  0575  085B               	movf	LCDWriteInt@F1632+3,w
  3948  0576  0080               	movwf	0
  3949  0577  0A84               	incf	4,f
  3950  0578  085C               	movf	LCDWriteInt@F1632+4,w
  3951  0579  0080               	movwf	0
  3952                           
  3953                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  3954  057A  3004               	movlw	4
  3955  057B  00CB               	movwf	LCDWriteInt@i
  3956  057C  3000               	movlw	0
  3957  057D  00CC               	movwf	LCDWriteInt@i+1
  3958  057E  01C9               	clrf	LCDWriteInt@j
  3959  057F  01CA               	clrf	LCDWriteInt@j+1
  3960                           
  3961                           ;lcd_hd44780_pic16.c: 323: if(val<0)
  3962  0580  1FC0               	btfss	LCDWriteInt@val+1,7
  3963  0581  2D91               	goto	l2407
  3964                           
  3965                           ;lcd_hd44780_pic16.c: 324: {
  3966                           ;lcd_hd44780_pic16.c: 325: (LCDByte('-',1));
  3967  0582  01B8               	clrf	LCDByte@isdata
  3968  0583  0AB8               	incf	LCDByte@isdata,f
  3969  0584  302D               	movlw	45
  3970  0585  120A  158A  250B  120A  118A  	fcall	_LCDByte
  3971                           
  3972                           ;lcd_hd44780_pic16.c: 326: val=val*-1;
  3973  058A  1283               	bcf	3,5	;RP0=0, select bank0
  3974  058B  1303               	bcf	3,6	;RP1=0, select bank0
  3975  058C  09BF               	comf	LCDWriteInt@val,f
  3976  058D  09C0               	comf	LCDWriteInt@val+1,f
  3977  058E  0ABF               	incf	LCDWriteInt@val,f
  3978  058F  1903               	skipnz
  3979  0590  0AC0               	incf	LCDWriteInt@val+1,f
  3980  0591                     l2407:	
  3981                           ;lcd_hd44780_pic16.c: 327: }
  3982                           ;lcd_hd44780_pic16.c: 329: while(val)
  3983                           
  3984  0591  083F               	movf	LCDWriteInt@val,w
  3985  0592  0440               	iorwf	LCDWriteInt@val+1,w
  3986  0593  1903               	btfsc	3,2
  3987  0594  2DC6               	goto	l2409
  3988                           
  3989                           ;lcd_hd44780_pic16.c: 330: {
  3990                           ;lcd_hd44780_pic16.c: 331: str[i]=val%10;
  3991  0595  300A               	movlw	10
  3992  0596  00B3               	movwf	___awmod@divisor
  3993  0597  3000               	movlw	0
  3994  0598  00B4               	movwf	___awmod@divisor+1
  3995  0599  0840               	movf	LCDWriteInt@val+1,w
  3996  059A  00B6               	movwf	___awmod@dividend+1
  3997  059B  083F               	movf	LCDWriteInt@val,w
  3998  059C  00B5               	movwf	___awmod@dividend
  3999  059D  120A  158A  2467  120A  118A  	fcall	___awmod
  4000  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  4001  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  4002  05A4  0833               	movf	?___awmod,w
  4003  05A5  00C2               	movwf	??_LCDWriteInt
  4004  05A6  084B               	movf	LCDWriteInt@i,w
  4005  05A7  3E44               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  4006  05A8  0084               	movwf	4
  4007  05A9  0842               	movf	??_LCDWriteInt,w
  4008  05AA  1383               	bcf	3,7	;select IRP bank0
  4009  05AB  0080               	movwf	0
  4010                           
  4011                           ;lcd_hd44780_pic16.c: 332: val=val/10;
  4012  05AC  300A               	movlw	10
  4013  05AD  00B3               	movwf	___awdiv@divisor
  4014  05AE  3000               	movlw	0
  4015  05AF  00B4               	movwf	___awdiv@divisor+1
  4016  05B0  0840               	movf	LCDWriteInt@val+1,w
  4017  05B1  00B6               	movwf	___awdiv@dividend+1
  4018  05B2  083F               	movf	LCDWriteInt@val,w
  4019  05B3  00B5               	movwf	___awdiv@dividend
  4020  05B4  120A  158A  2614  120A  118A  	fcall	___awdiv
  4021  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  4022  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  4023  05BB  0834               	movf	?___awdiv+1,w
  4024  05BC  00C0               	movwf	LCDWriteInt@val+1
  4025  05BD  0833               	movf	?___awdiv,w
  4026  05BE  00BF               	movwf	LCDWriteInt@val
  4027                           
  4028                           ;lcd_hd44780_pic16.c: 333: i--;
  4029  05BF  30FF               	movlw	255
  4030  05C0  07CB               	addwf	LCDWriteInt@i,f
  4031  05C1  1803               	skipnc
  4032  05C2  0ACC               	incf	LCDWriteInt@i+1,f
  4033  05C3  30FF               	movlw	255
  4034  05C4  07CC               	addwf	LCDWriteInt@i+1,f
  4035  05C5  2D91               	goto	l2407
  4036  05C6                     l2409:	
  4037                           
  4038                           ;lcd_hd44780_pic16.c: 334: }
  4039                           ;lcd_hd44780_pic16.c: 335: if(field_length==-1)
  4040  05C6  0A41               	incf	LCDWriteInt@field_length,w
  4041  05C7  1903               	btfsc	3,2
  4042  05C8  2DDB               	goto	l2417
  4043                           
  4044                           ;lcd_hd44780_pic16.c: 337: else
  4045                           ;lcd_hd44780_pic16.c: 338: j=5-field_length;
  4046                           
  4047                           ;lcd_hd44780_pic16.c: 336: while(str[j]==-16) j++;
  4048  05C9  0841               	movf	LCDWriteInt@field_length,w
  4049  05CA  00C2               	movwf	??_LCDWriteInt
  4050  05CB  01C3               	clrf	??_LCDWriteInt+1
  4051  05CC  1BC2               	btfsc	??_LCDWriteInt,7
  4052  05CD  03C3               	decf	??_LCDWriteInt+1,f
  4053  05CE  09C2               	comf	??_LCDWriteInt,f
  4054  05CF  09C3               	comf	??_LCDWriteInt+1,f
  4055  05D0  0AC2               	incf	??_LCDWriteInt,f
  4056  05D1  1903               	skipnz
  4057  05D2  0AC3               	incf	??_LCDWriteInt+1,f
  4058  05D3  0842               	movf	??_LCDWriteInt,w
  4059  05D4  3E05               	addlw	5
  4060  05D5  00C9               	movwf	LCDWriteInt@j
  4061  05D6  0843               	movf	??_LCDWriteInt+1,w
  4062  05D7  1803               	skipnc
  4063  05D8  3E01               	addlw	1
  4064  05D9  3E00               	addlw	0
  4065  05DA  00CA               	movwf	LCDWriteInt@j+1
  4066  05DB                     l2417:	
  4067                           
  4068                           ;lcd_hd44780_pic16.c: 341: for(i=j;i<5;i++)
  4069  05DB  084A               	movf	LCDWriteInt@j+1,w
  4070  05DC  00CC               	movwf	LCDWriteInt@i+1
  4071  05DD  0849               	movf	LCDWriteInt@j,w
  4072  05DE  00CB               	movwf	LCDWriteInt@i
  4073  05DF                     L5:	
  4074  05DF  084C               	movf	LCDWriteInt@i+1,w
  4075  05E0  3A80               	xorlw	128
  4076  05E1  00FF               	movwf	127
  4077  05E2  3080               	movlw	128
  4078  05E3  027F               	subwf	127,w
  4079  05E4  1D03               	skipz
  4080  05E5  2DE8               	goto	u2515
  4081  05E6  3005               	movlw	5
  4082  05E7  024B               	subwf	LCDWriteInt@i,w
  4083  05E8                     u2515:	
  4084  05E8  1803               	btfsc	3,0
  4085  05E9  0008               	return
  4086                           
  4087                           ;lcd_hd44780_pic16.c: 342: {
  4088                           ;lcd_hd44780_pic16.c: 343: (LCDByte(48+str[i],1));
  4089  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  4090  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  4091  05EC  01B8               	clrf	LCDByte@isdata
  4092  05ED  0AB8               	incf	LCDByte@isdata,f
  4093  05EE  084B               	movf	LCDWriteInt@i,w
  4094  05EF  3E44               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  4095  05F0  0084               	movwf	4
  4096  05F1  1383               	bcf	3,7	;select IRP bank0
  4097  05F2  0800               	movf	0,w
  4098  05F3  3E30               	addlw	48
  4099  05F4  120A  158A  250B  120A  118A  	fcall	_LCDByte
  4100  05F9  3001               	movlw	1
  4101  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  4102  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  4103  05FC  07CB               	addwf	LCDWriteInt@i,f
  4104  05FD  1803               	skipnc
  4105  05FE  0ACC               	incf	LCDWriteInt@i+1,f
  4106  05FF  3000               	movlw	0
  4107  0600  07CC               	addwf	LCDWriteInt@i+1,f
  4108  0601  2DDF               	goto	L5
  4109  0602                     __end_of_LCDWriteInt:	
  4110                           
  4111                           	psect	text17
  4112  0C67                     __ptext17:	
  4113 ;; *************** function ___awmod *****************
  4114 ;; Defined at:
  4115 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  divisor         2   19[BANK0 ] int 
  4118 ;;  dividend        2   21[BANK0 ] int 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;  sign            1   25[BANK0 ] unsigned char 
  4121 ;;  counter         1   24[BANK0 ] unsigned char 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  2   19[BANK0 ] int 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4131 ;;      Params:         0       4       0       0       0
  4132 ;;      Locals:         0       2       0       0       0
  4133 ;;      Temps:          0       1       0       0       0
  4134 ;;      Totals:         0       7       0       0       0
  4135 ;;Total ram usage:        7 bytes
  4136 ;; Hardware stack levels used:    1
  4137 ;; Hardware stack levels required when called:    4
  4138 ;; This function calls:
  4139 ;;		Nothing
  4140 ;; This function is called by:
  4141 ;;		_LCDWriteInt
  4142 ;;		_USARTWriteInt
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           
  4147                           ;psect for function ___awmod
  4148  0C67                     ___awmod:	
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4152  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0C69  01B9               	clrf	___awmod@sign
  4155  0C6A  1FB6               	btfss	___awmod@dividend+1,7
  4156  0C6B  2C73               	goto	l2069
  4157  0C6C  09B5               	comf	___awmod@dividend,f
  4158  0C6D  09B6               	comf	___awmod@dividend+1,f
  4159  0C6E  0AB5               	incf	___awmod@dividend,f
  4160  0C6F  1903               	skipnz
  4161  0C70  0AB6               	incf	___awmod@dividend+1,f
  4162  0C71  01B9               	clrf	___awmod@sign
  4163  0C72  0AB9               	incf	___awmod@sign,f
  4164  0C73                     l2069:	
  4165  0C73  1FB4               	btfss	___awmod@divisor+1,7
  4166  0C74  2C7A               	goto	l2073
  4167  0C75  09B3               	comf	___awmod@divisor,f
  4168  0C76  09B4               	comf	___awmod@divisor+1,f
  4169  0C77  0AB3               	incf	___awmod@divisor,f
  4170  0C78  1903               	skipnz
  4171  0C79  0AB4               	incf	___awmod@divisor+1,f
  4172  0C7A                     l2073:	
  4173  0C7A  0833               	movf	___awmod@divisor,w
  4174  0C7B  0434               	iorwf	___awmod@divisor+1,w
  4175  0C7C  1903               	btfsc	3,2
  4176  0C7D  2CA7               	goto	l2091
  4177  0C7E  01B8               	clrf	___awmod@counter
  4178  0C7F  0AB8               	incf	___awmod@counter,f
  4179  0C80                     l2081:	
  4180  0C80  1BB4               	btfsc	___awmod@divisor+1,7
  4181  0C81  2C8E               	goto	l2083
  4182  0C82  3001               	movlw	1
  4183  0C83                     u1895:	
  4184  0C83  1003               	clrc
  4185  0C84  0DB3               	rlf	___awmod@divisor,f
  4186  0C85  0DB4               	rlf	___awmod@divisor+1,f
  4187  0C86  3EFF               	addlw	-1
  4188  0C87  1D03               	skipz
  4189  0C88  2C83               	goto	u1895
  4190  0C89  3001               	movlw	1
  4191  0C8A  00B7               	movwf	??___awmod
  4192  0C8B  0837               	movf	??___awmod,w
  4193  0C8C  07B8               	addwf	___awmod@counter,f
  4194  0C8D  2C80               	goto	l2081
  4195  0C8E                     l2083:	
  4196  0C8E  0834               	movf	___awmod@divisor+1,w
  4197  0C8F  0236               	subwf	___awmod@dividend+1,w
  4198  0C90  1D03               	skipz
  4199  0C91  2C94               	goto	u1915
  4200  0C92  0833               	movf	___awmod@divisor,w
  4201  0C93  0235               	subwf	___awmod@dividend,w
  4202  0C94                     u1915:	
  4203  0C94  1C03               	skipc
  4204  0C95  2C9C               	goto	l2087
  4205  0C96  0833               	movf	___awmod@divisor,w
  4206  0C97  02B5               	subwf	___awmod@dividend,f
  4207  0C98  0834               	movf	___awmod@divisor+1,w
  4208  0C99  1C03               	skipc
  4209  0C9A  03B6               	decf	___awmod@dividend+1,f
  4210  0C9B  02B6               	subwf	___awmod@dividend+1,f
  4211  0C9C                     l2087:	
  4212  0C9C  3001               	movlw	1
  4213  0C9D                     u1925:	
  4214  0C9D  1003               	clrc
  4215  0C9E  0CB4               	rrf	___awmod@divisor+1,f
  4216  0C9F  0CB3               	rrf	___awmod@divisor,f
  4217  0CA0  3EFF               	addlw	-1
  4218  0CA1  1D03               	skipz
  4219  0CA2  2C9D               	goto	u1925
  4220  0CA3  3001               	movlw	1
  4221  0CA4  02B8               	subwf	___awmod@counter,f
  4222  0CA5  1D03               	btfss	3,2
  4223  0CA6  2C8E               	goto	l2083
  4224  0CA7                     l2091:	
  4225  0CA7  0839               	movf	___awmod@sign,w
  4226  0CA8  1903               	btfsc	3,2
  4227  0CA9  2CAF               	goto	l2095
  4228  0CAA  09B5               	comf	___awmod@dividend,f
  4229  0CAB  09B6               	comf	___awmod@dividend+1,f
  4230  0CAC  0AB5               	incf	___awmod@dividend,f
  4231  0CAD  1903               	skipnz
  4232  0CAE  0AB6               	incf	___awmod@dividend+1,f
  4233  0CAF                     l2095:	
  4234  0CAF  0836               	movf	___awmod@dividend+1,w
  4235  0CB0  00B4               	movwf	?___awmod+1
  4236  0CB1  0835               	movf	___awmod@dividend,w
  4237  0CB2  00B3               	movwf	?___awmod
  4238  0CB3  0008               	return
  4239  0CB4                     __end_of___awmod:	
  4240                           
  4241                           	psect	text18
  4242  0E14                     __ptext18:	
  4243 ;; *************** function ___awdiv *****************
  4244 ;; Defined at:
  4245 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  divisor         2   19[BANK0 ] int 
  4248 ;;  dividend        2   21[BANK0 ] int 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  quotient        2   26[BANK0 ] int 
  4251 ;;  sign            1   25[BANK0 ] unsigned char 
  4252 ;;  counter         1   24[BANK0 ] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  2   19[BANK0 ] int 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         0       4       0       0       0
  4263 ;;      Locals:         0       4       0       0       0
  4264 ;;      Temps:          0       1       0       0       0
  4265 ;;      Totals:         0       9       0       0       0
  4266 ;;Total ram usage:        9 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    4
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_LCDWriteInt
  4273 ;;		_USARTWriteInt
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function ___awdiv
  4279  0E14                     ___awdiv:	
  4280                           
  4281                           ;incstack = 0
  4282                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4283  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0E16  01B9               	clrf	___awdiv@sign
  4286  0E17  1FB4               	btfss	___awdiv@divisor+1,7
  4287  0E18  2E20               	goto	l2025
  4288  0E19  09B3               	comf	___awdiv@divisor,f
  4289  0E1A  09B4               	comf	___awdiv@divisor+1,f
  4290  0E1B  0AB3               	incf	___awdiv@divisor,f
  4291  0E1C  1903               	skipnz
  4292  0E1D  0AB4               	incf	___awdiv@divisor+1,f
  4293  0E1E  01B9               	clrf	___awdiv@sign
  4294  0E1F  0AB9               	incf	___awdiv@sign,f
  4295  0E20                     l2025:	
  4296  0E20  1FB6               	btfss	___awdiv@dividend+1,7
  4297  0E21  2E2B               	goto	l2031
  4298  0E22  09B5               	comf	___awdiv@dividend,f
  4299  0E23  09B6               	comf	___awdiv@dividend+1,f
  4300  0E24  0AB5               	incf	___awdiv@dividend,f
  4301  0E25  1903               	skipnz
  4302  0E26  0AB6               	incf	___awdiv@dividend+1,f
  4303  0E27  3001               	movlw	1
  4304  0E28  00B7               	movwf	??___awdiv
  4305  0E29  0837               	movf	??___awdiv,w
  4306  0E2A  06B9               	xorwf	___awdiv@sign,f
  4307  0E2B                     l2031:	
  4308  0E2B  01BA               	clrf	___awdiv@quotient
  4309  0E2C  01BB               	clrf	___awdiv@quotient+1
  4310  0E2D  0833               	movf	___awdiv@divisor,w
  4311  0E2E  0434               	iorwf	___awdiv@divisor+1,w
  4312  0E2F  1903               	btfsc	3,2
  4313  0E30  2E62               	goto	l2053
  4314  0E31  01B8               	clrf	___awdiv@counter
  4315  0E32  0AB8               	incf	___awdiv@counter,f
  4316  0E33                     l2041:	
  4317  0E33  1BB4               	btfsc	___awdiv@divisor+1,7
  4318  0E34  2E41               	goto	l2043
  4319  0E35  3001               	movlw	1
  4320  0E36                     u1795:	
  4321  0E36  1003               	clrc
  4322  0E37  0DB3               	rlf	___awdiv@divisor,f
  4323  0E38  0DB4               	rlf	___awdiv@divisor+1,f
  4324  0E39  3EFF               	addlw	-1
  4325  0E3A  1D03               	skipz
  4326  0E3B  2E36               	goto	u1795
  4327  0E3C  3001               	movlw	1
  4328  0E3D  00B7               	movwf	??___awdiv
  4329  0E3E  0837               	movf	??___awdiv,w
  4330  0E3F  07B8               	addwf	___awdiv@counter,f
  4331  0E40  2E33               	goto	l2041
  4332  0E41                     l2043:	
  4333  0E41  3001               	movlw	1
  4334  0E42                     u1815:	
  4335  0E42  1003               	clrc
  4336  0E43  0DBA               	rlf	___awdiv@quotient,f
  4337  0E44  0DBB               	rlf	___awdiv@quotient+1,f
  4338  0E45  3EFF               	addlw	-1
  4339  0E46  1D03               	skipz
  4340  0E47  2E42               	goto	u1815
  4341  0E48  0834               	movf	___awdiv@divisor+1,w
  4342  0E49  0236               	subwf	___awdiv@dividend+1,w
  4343  0E4A  1D03               	skipz
  4344  0E4B  2E4E               	goto	u1825
  4345  0E4C  0833               	movf	___awdiv@divisor,w
  4346  0E4D  0235               	subwf	___awdiv@dividend,w
  4347  0E4E                     u1825:	
  4348  0E4E  1C03               	skipc
  4349  0E4F  2E57               	goto	l2049
  4350  0E50  0833               	movf	___awdiv@divisor,w
  4351  0E51  02B5               	subwf	___awdiv@dividend,f
  4352  0E52  0834               	movf	___awdiv@divisor+1,w
  4353  0E53  1C03               	skipc
  4354  0E54  03B6               	decf	___awdiv@dividend+1,f
  4355  0E55  02B6               	subwf	___awdiv@dividend+1,f
  4356  0E56  143A               	bsf	___awdiv@quotient,0
  4357  0E57                     l2049:	
  4358  0E57  3001               	movlw	1
  4359  0E58                     u1835:	
  4360  0E58  1003               	clrc
  4361  0E59  0CB4               	rrf	___awdiv@divisor+1,f
  4362  0E5A  0CB3               	rrf	___awdiv@divisor,f
  4363  0E5B  3EFF               	addlw	-1
  4364  0E5C  1D03               	skipz
  4365  0E5D  2E58               	goto	u1835
  4366  0E5E  3001               	movlw	1
  4367  0E5F  02B8               	subwf	___awdiv@counter,f
  4368  0E60  1D03               	btfss	3,2
  4369  0E61  2E41               	goto	l2043
  4370  0E62                     l2053:	
  4371  0E62  0839               	movf	___awdiv@sign,w
  4372  0E63  1903               	btfsc	3,2
  4373  0E64  2E6A               	goto	l2057
  4374  0E65  09BA               	comf	___awdiv@quotient,f
  4375  0E66  09BB               	comf	___awdiv@quotient+1,f
  4376  0E67  0ABA               	incf	___awdiv@quotient,f
  4377  0E68  1903               	skipnz
  4378  0E69  0ABB               	incf	___awdiv@quotient+1,f
  4379  0E6A                     l2057:	
  4380  0E6A  083B               	movf	___awdiv@quotient+1,w
  4381  0E6B  00B4               	movwf	?___awdiv+1
  4382  0E6C  083A               	movf	___awdiv@quotient,w
  4383  0E6D  00B3               	movwf	?___awdiv
  4384  0E6E  0008               	return
  4385  0E6F                     __end_of___awdiv:	
  4386                           
  4387                           	psect	text19
  4388  0F98                     __ptext19:	
  4389 ;; *************** function _LCDInit *****************
  4390 ;; Defined at:
  4391 ;;		line 207 in file "lcd_hd44780_pic16.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  style           1    wreg     unsigned char 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  style           1   33[BANK0 ] unsigned char 
  4396 ;;  __i             1   34[BANK0 ] unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4406 ;;      Params:         0       0       0       0       0
  4407 ;;      Locals:         0       2       0       0       0
  4408 ;;      Temps:          0       2       0       0       0
  4409 ;;      Totals:         0       4       0       0       0
  4410 ;;Total ram usage:        4 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    6
  4413 ;; This function calls:
  4414 ;;		_LCDBusyLoop
  4415 ;;		_LCDByte
  4416 ;; This function is called by:
  4417 ;;		_main
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           
  4422                           ;psect for function _LCDInit
  4423  0F98                     _LCDInit:	
  4424                           
  4425                           ;incstack = 0
  4426                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4427                           ;LCDInit@style stored from wreg
  4428  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  4429  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  4430  0F9A  00C1               	movwf	LCDInit@style
  4431                           
  4432                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  4433  0F9B  30C3               	movlw	195
  4434  0F9C  00C0               	movwf	??_LCDInit+1
  4435  0F9D  30CD               	movlw	205
  4436  0F9E  00BF               	movwf	??_LCDInit
  4437  0F9F                     u3157:	
  4438  0F9F  0BBF               	decfsz	??_LCDInit,f
  4439  0FA0  2F9F               	goto	u3157
  4440  0FA1  0BC0               	decfsz	??_LCDInit+1,f
  4441  0FA2  2F9F               	goto	u3157
  4442                           
  4443                           ;lcd_hd44780_pic16.c: 212: TRISA&=(~(0x0F<<4));
  4444  0FA3  300F               	movlw	15
  4445  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  4446  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  4447  0FA6  00BF               	movwf	??_LCDInit
  4448  0FA7  083F               	movf	??_LCDInit,w
  4449  0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  4450  0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0FAA  0585               	andwf	5,f	;volatile
  4452                           
  4453                           ;lcd_hd44780_pic16.c: 214: TRISAbits.TRISA3=0;
  4454  0FAB  1185               	bcf	5,3	;volatile
  4455                           
  4456                           ;lcd_hd44780_pic16.c: 215: TRISAbits.TRISA1=0;
  4457  0FAC  1085               	bcf	5,1	;volatile
  4458                           
  4459                           ;lcd_hd44780_pic16.c: 216: TRISAbits.TRISA2=0;
  4460  0FAD  1105               	bcf	5,2	;volatile
  4461                           
  4462                           ;lcd_hd44780_pic16.c: 218: PORTA&=(~(0x0F<<4));
  4463  0FAE  300F               	movlw	15
  4464  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0FB1  00BF               	movwf	??_LCDInit
  4467  0FB2  083F               	movf	??_LCDInit,w
  4468  0FB3  0585               	andwf	5,f	;volatile
  4469                           
  4470                           ;lcd_hd44780_pic16.c: 220: (RA3=0);
  4471  0FB4  1185               	bcf	5,3	;volatile
  4472                           
  4473                           ;lcd_hd44780_pic16.c: 221: (RA2=0);
  4474  0FB5  1105               	bcf	5,2	;volatile
  4475                           
  4476                           ;lcd_hd44780_pic16.c: 222: (RA1=0);
  4477  0FB6  1085               	bcf	5,1	;volatile
  4478                           
  4479                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4480  0FB7  2FB8               	nop2	;2 cycle nop
  4481                           
  4482                           ;lcd_hd44780_pic16.c: 227: (RA3=1);
  4483  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  4484  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  4485  0FBA  1585               	bsf	5,3	;volatile
  4486                           
  4487                           ;lcd_hd44780_pic16.c: 228: PORTA|=((0b00000010)<<4);
  4488  0FBB  1685               	bsf	5,5	;volatile
  4489                           
  4490                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4491  0FBC  2FBD               	nop2	;2 cycle nop
  4492  0FBD  2FBE               	nop2	;2 cycle nop
  4493  0FBE  0000               	nop
  4494                           
  4495                           ;lcd_hd44780_pic16.c: 230: (RA3=0);
  4496  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  4497  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  4498  0FC1  1185               	bcf	5,3	;volatile
  4499                           
  4500                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4501  0FC2  2FC3               	nop2	;2 cycle nop
  4502  0FC3  2FC4               	nop2	;2 cycle nop
  4503  0FC4  0000               	nop
  4504                           
  4505                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  4506  0FC5  120A  158A  2730  120A  158A  	fcall	_LCDBusyLoop
  4507                           
  4508                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  4509  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  4510  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  4511  0FCC  01B8               	clrf	LCDByte@isdata
  4512  0FCD  3028               	movlw	40
  4513  0FCE  120A  158A  250B  120A  158A  	fcall	_LCDByte
  4514                           
  4515                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  4516  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  4517  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  4518  0FD5  01B8               	clrf	LCDByte@isdata
  4519  0FD6  0841               	movf	LCDInit@style,w
  4520  0FD7  380C               	iorlw	12
  4521  0FD8  120A  158A  250B  120A  158A  	fcall	_LCDByte
  4522                           
  4523                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  4524  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  4525  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  4526  0FDF  01B8               	clrf	LCDByte@isdata
  4527  0FE0  3040               	movlw	64
  4528  0FE1  120A  158A  250B  120A  158A  	fcall	_LCDByte
  4529                           
  4530                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  4531                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  4532  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  4533  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  4534  0FE8  01C2               	clrf	LCDInit@__i
  4535  0FE9                     L6:	
  4536  0FE9  3008               	movlw	8
  4537  0FEA  0242               	subwf	LCDInit@__i,w
  4538  0FEB  1803               	btfsc	3,0
  4539  0FEC  0008               	return
  4540                           
  4541                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  4542  0FED  01B8               	clrf	LCDByte@isdata
  4543  0FEE  0AB8               	incf	LCDByte@isdata,f
  4544  0FEF  0842               	movf	LCDInit@__i,w
  4545  0FF0  3EB7               	addlw	(low (___cgram| 0))& (0+255)
  4546  0FF1  0084               	movwf	4
  4547  0FF2  1383               	bcf	3,7	;select IRP bank1
  4548  0FF3  0800               	movf	0,w
  4549  0FF4  120A  158A  250B  120A  158A  	fcall	_LCDByte
  4550  0FF9  3001               	movlw	1
  4551  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  4552  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  4553  0FFC  00BF               	movwf	??_LCDInit
  4554  0FFD  083F               	movf	??_LCDInit,w
  4555  0FFE  07C2               	addwf	LCDInit@__i,f
  4556  0FFF  2FE9               	goto	L6
  4557  1000                     __end_of_LCDInit:	
  4558                           
  4559                           	psect	text20
  4560  02BA                     __ptext20:	
  4561 ;; *************** function _LCDGotoXY *****************
  4562 ;; Defined at:
  4563 ;;		line 351 in file "lcd_hd44780_pic16.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  x               1    wreg     unsigned char 
  4566 ;;  y               1   31[BANK0 ] unsigned char 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  x               1   33[BANK0 ] unsigned char 
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      void 
  4571 ;; Registers used:
  4572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4578 ;;      Params:         0       1       0       0       0
  4579 ;;      Locals:         0       1       0       0       0
  4580 ;;      Temps:          0       1       0       0       0
  4581 ;;      Totals:         0       3       0       0       0
  4582 ;;Total ram usage:        3 bytes
  4583 ;; Hardware stack levels used:    1
  4584 ;; Hardware stack levels required when called:    6
  4585 ;; This function calls:
  4586 ;;		_LCDByte
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           
  4593                           ;psect for function _LCDGotoXY
  4594  02BA                     _LCDGotoXY:	
  4595                           
  4596                           ;incstack = 0
  4597                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4598                           ;LCDGotoXY@x stored from wreg
  4599  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  4600  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  4601  02BC  00C1               	movwf	LCDGotoXY@x
  4602                           
  4603                           ;lcd_hd44780_pic16.c: 353: if(x>=20) return;
  4604  02BD  3014               	movlw	20
  4605  02BE  0241               	subwf	LCDGotoXY@x,w
  4606  02BF  1803               	btfsc	3,0
  4607  02C0  0008               	return
  4608  02C1  2ACB               	goto	l2439
  4609  02C2                     l90:	
  4610                           ;lcd_hd44780_pic16.c: 361: case 1:
  4611                           
  4612                           ;lcd_hd44780_pic16.c: 360: break;
  4613                           
  4614                           ;lcd_hd44780_pic16.c: 358: {
  4615                           ;lcd_hd44780_pic16.c: 359: case 0:
  4616                           
  4617                           ;lcd_hd44780_pic16.c: 357: switch(y)
  4618                           
  4619                           
  4620                           ;lcd_hd44780_pic16.c: 362: x|=0b01000000;
  4621  02C2  1741               	bsf	LCDGotoXY@x,6
  4622                           
  4623                           ;lcd_hd44780_pic16.c: 363: break;
  4624  02C3  2AD9               	goto	l89
  4625  02C4                     l2433:	
  4626                           ;lcd_hd44780_pic16.c: 364: case 2:
  4627                           
  4628                           
  4629                           ;lcd_hd44780_pic16.c: 365: x+=0x14;
  4630  02C4  3014               	movlw	20
  4631  02C5  2AC7               	goto	L7
  4632  02C6                     l2435:	
  4633                           ;lcd_hd44780_pic16.c: 367: case 3:
  4634                           
  4635                           ;lcd_hd44780_pic16.c: 366: break;
  4636                           
  4637                           
  4638                           ;lcd_hd44780_pic16.c: 368: x+=0x54;
  4639  02C6  3054               	movlw	84
  4640  02C7                     L7:	
  4641  02C7  00C0               	movwf	??_LCDGotoXY
  4642  02C8  0840               	movf	??_LCDGotoXY,w
  4643  02C9  07C1               	addwf	LCDGotoXY@x,f
  4644                           
  4645                           ;lcd_hd44780_pic16.c: 370: }
  4646                           
  4647                           ;lcd_hd44780_pic16.c: 369: break;
  4648  02CA  2AD9               	goto	l89
  4649  02CB                     l2439:	
  4650  02CB  083F               	movf	LCDGotoXY@y,w
  4651                           
  4652                           ; Switch size 1, requested type "space"
  4653                           ; Number of cases is 4, Range of values is 0 to 3
  4654                           ; switch strategies available:
  4655                           ; Name         Instructions Cycles
  4656                           ; simple_byte           13     7 (average)
  4657                           ; direct_byte           20     8 (fixed)
  4658                           ; jumptable            260     6 (fixed)
  4659                           ;	Chosen strategy is simple_byte
  4660  02CC  3A00               	xorlw	0	; case 0
  4661  02CD  1903               	skipnz
  4662  02CE  2AD9               	goto	l89
  4663  02CF  3A01               	xorlw	1	; case 1
  4664  02D0  1903               	skipnz
  4665  02D1  2AC2               	goto	l90
  4666  02D2  3A03               	xorlw	3	; case 2
  4667  02D3  1903               	skipnz
  4668  02D4  2AC4               	goto	l2433
  4669  02D5  3A01               	xorlw	1	; case 3
  4670  02D6  1903               	skipnz
  4671  02D7  2AC6               	goto	l2435
  4672  02D8  2AD9               	goto	l89
  4673  02D9                     l89:	
  4674                           
  4675                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  4676  02D9  17C1               	bsf	LCDGotoXY@x,7
  4677                           
  4678                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  4679  02DA  01B8               	clrf	LCDByte@isdata
  4680  02DB  0841               	movf	LCDGotoXY@x,w
  4681  02DC  120A  158A  250B   	fcall	_LCDByte
  4682  02DF  0008               	return
  4683  02E0                     __end_of_LCDGotoXY:	
  4684                           
  4685                           	psect	text21
  4686  0D0B                     __ptext21:	
  4687 ;; *************** function _LCDByte *****************
  4688 ;; Defined at:
  4689 ;;		line 80 in file "lcd_hd44780_pic16.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  c               1    wreg     unsigned char 
  4692 ;;  isdata          1   24[BANK0 ] unsigned char 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  c               1   29[BANK0 ] unsigned char 
  4695 ;;  temp            1   30[BANK0 ] unsigned char 
  4696 ;;  ln              1   28[BANK0 ] unsigned char 
  4697 ;;  hn              1   27[BANK0 ] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0, pclath, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4707 ;;      Params:         0       1       0       0       0
  4708 ;;      Locals:         0       4       0       0       0
  4709 ;;      Temps:          0       2       0       0       0
  4710 ;;      Totals:         0       7       0       0       0
  4711 ;;Total ram usage:        7 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    5
  4714 ;; This function calls:
  4715 ;;		_LCDBusyLoop
  4716 ;; This function is called by:
  4717 ;;		_LCDInit
  4718 ;;		_LCDWriteString
  4719 ;;		_LCDWriteInt
  4720 ;;		_LCDGotoXY
  4721 ;;		_main
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           
  4726                           ;psect for function _LCDByte
  4727  0D0B                     _LCDByte:	
  4728                           
  4729                           ;incstack = 0
  4730                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  4731                           ;LCDByte@c stored from wreg
  4732  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  4733  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  4734  0D0D  00BD               	movwf	LCDByte@c
  4735                           
  4736                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  4737                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  4738                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  4739  0D0E  083D               	movf	LCDByte@c,w
  4740  0D0F  00B9               	movwf	??_LCDByte
  4741  0D10  3004               	movlw	4
  4742  0D11                     u1715:	
  4743  0D11  1003               	clrc
  4744  0D12  0CB9               	rrf	??_LCDByte,f
  4745  0D13  3EFF               	addlw	-1
  4746  0D14  1D03               	skipz
  4747  0D15  2D11               	goto	u1715
  4748  0D16  0839               	movf	??_LCDByte,w
  4749  0D17  00BA               	movwf	??_LCDByte+1
  4750  0D18  083A               	movf	??_LCDByte+1,w
  4751  0D19  00BB               	movwf	LCDByte@hn
  4752                           
  4753                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  4754  0D1A  083D               	movf	LCDByte@c,w
  4755  0D1B  390F               	andlw	15
  4756  0D1C  00B9               	movwf	??_LCDByte
  4757  0D1D  0839               	movf	??_LCDByte,w
  4758  0D1E  00BC               	movwf	LCDByte@ln
  4759                           
  4760                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  4761  0D1F  0838               	movf	LCDByte@isdata,w
  4762  0D20  1D03               	btfss	3,2
  4763  0D21  2D24               	goto	l44
  4764                           
  4765                           ;lcd_hd44780_pic16.c: 96: (RA1=0);
  4766  0D22  1085               	bcf	5,1	;volatile
  4767  0D23  2D25               	goto	l45
  4768  0D24                     l44:	
  4769                           
  4770                           ;lcd_hd44780_pic16.c: 97: else
  4771                           ;lcd_hd44780_pic16.c: 98: (RA1=1);
  4772  0D24  1485               	bsf	5,1	;volatile
  4773  0D25                     l45:	
  4774                           
  4775                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4776  0D25  2D26               	nop2	;2 cycle nop
  4777                           
  4778                           ;lcd_hd44780_pic16.c: 102: (RA3=1);
  4779  0D26  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0D27  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0D28  1585               	bsf	5,3	;volatile
  4782                           
  4783                           ;lcd_hd44780_pic16.c: 106: temp=(PORTA & (~(0X0F<<4)))|((hn<<4));
  4784  0D29  083B               	movf	LCDByte@hn,w
  4785  0D2A  00B9               	movwf	??_LCDByte
  4786  0D2B  3004               	movlw	4
  4787  0D2C                     u1735:	
  4788  0D2C  1003               	clrc
  4789  0D2D  0DB9               	rlf	??_LCDByte,f
  4790  0D2E  3EFF               	addlw	-1
  4791  0D2F  1D03               	skipz
  4792  0D30  2D2C               	goto	u1735
  4793  0D31  0805               	movf	5,w	;volatile
  4794  0D32  390F               	andlw	15
  4795  0D33  0439               	iorwf	??_LCDByte,w
  4796  0D34  00BA               	movwf	??_LCDByte+1
  4797  0D35  083A               	movf	??_LCDByte+1,w
  4798  0D36  00BE               	movwf	LCDByte@temp
  4799                           
  4800                           ;lcd_hd44780_pic16.c: 107: PORTA=temp;
  4801  0D37  083E               	movf	LCDByte@temp,w
  4802  0D38  0085               	movwf	5	;volatile
  4803                           
  4804                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4805  0D39  2D3A               	nop2	;2 cycle nop
  4806  0D3A  2D3B               	nop2	;2 cycle nop
  4807  0D3B  0000               	nop
  4808                           
  4809                           ;lcd_hd44780_pic16.c: 113: (RA3=0);
  4810  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4811  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4812  0D3E  1185               	bcf	5,3	;volatile
  4813                           
  4814                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4815  0D3F  2D40               	nop2	;2 cycle nop
  4816  0D40  2D41               	nop2	;2 cycle nop
  4817  0D41  0000               	nop
  4818                           
  4819                           ;lcd_hd44780_pic16.c: 118: (RA3=1);
  4820  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  4821  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  4822  0D44  1585               	bsf	5,3	;volatile
  4823                           
  4824                           ;lcd_hd44780_pic16.c: 120: temp=(PORTA & (~(0X0F<<4)))|((ln<<4));
  4825  0D45  083C               	movf	LCDByte@ln,w
  4826  0D46  00B9               	movwf	??_LCDByte
  4827  0D47  3004               	movlw	4
  4828  0D48                     u1745:	
  4829  0D48  1003               	clrc
  4830  0D49  0DB9               	rlf	??_LCDByte,f
  4831  0D4A  3EFF               	addlw	-1
  4832  0D4B  1D03               	skipz
  4833  0D4C  2D48               	goto	u1745
  4834  0D4D  0805               	movf	5,w	;volatile
  4835  0D4E  390F               	andlw	15
  4836  0D4F  0439               	iorwf	??_LCDByte,w
  4837  0D50  00BA               	movwf	??_LCDByte+1
  4838  0D51  083A               	movf	??_LCDByte+1,w
  4839  0D52  00BE               	movwf	LCDByte@temp
  4840                           
  4841                           ;lcd_hd44780_pic16.c: 122: PORTA=temp;
  4842  0D53  083E               	movf	LCDByte@temp,w
  4843  0D54  0085               	movwf	5	;volatile
  4844                           
  4845                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4846  0D55  2D56               	nop2	;2 cycle nop
  4847  0D56  2D57               	nop2	;2 cycle nop
  4848  0D57  0000               	nop
  4849                           
  4850                           ;lcd_hd44780_pic16.c: 128: (RA3=0);
  4851  0D58  1283               	bcf	3,5	;RP0=0, select bank0
  4852  0D59  1303               	bcf	3,6	;RP1=0, select bank0
  4853  0D5A  1185               	bcf	5,3	;volatile
  4854                           
  4855                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4856  0D5B  2D5C               	nop2	;2 cycle nop
  4857  0D5C  2D5D               	nop2	;2 cycle nop
  4858  0D5D  0000               	nop
  4859                           
  4860                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  4861  0D5E  120A  158A  2730   	fcall	_LCDBusyLoop
  4862  0D61  0008               	return
  4863  0D62                     __end_of_LCDByte:	
  4864                           
  4865                           	psect	text22
  4866  0F30                     __ptext22:	
  4867 ;; *************** function _LCDBusyLoop *****************
  4868 ;; Defined at:
  4869 ;;		line 135 in file "lcd_hd44780_pic16.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;		None
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  status          1   23[BANK0 ] unsigned char 
  4874 ;;  temp            1   22[BANK0 ] unsigned char 
  4875 ;;  busy            1   21[BANK0 ] unsigned char 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, status,2, status,0
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4885 ;;      Params:         0       0       0       0       0
  4886 ;;      Locals:         0       3       0       0       0
  4887 ;;      Temps:          0       2       0       0       0
  4888 ;;      Totals:         0       5       0       0       0
  4889 ;;Total ram usage:        5 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:    4
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_LCDByte
  4896 ;;		_LCDInit
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           
  4901                           ;psect for function _LCDBusyLoop
  4902  0F30                     _LCDBusyLoop:	
  4903                           
  4904                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4905                           
  4906                           ;incstack = 0
  4907                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  4908  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  4909  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  4910  0F32  01B7               	clrf	LCDBusyLoop@status
  4911                           
  4912                           ;lcd_hd44780_pic16.c: 142: TRISA|=(0x0f<<4);
  4913  0F33  30F0               	movlw	240
  4914  0F34  00B3               	movwf	??_LCDBusyLoop
  4915  0F35  0833               	movf	??_LCDBusyLoop,w
  4916  0F36  1683               	bsf	3,5	;RP0=1, select bank1
  4917  0F37  1303               	bcf	3,6	;RP1=0, select bank1
  4918  0F38  0485               	iorwf	5,f	;volatile
  4919                           
  4920                           ;lcd_hd44780_pic16.c: 145: (RA2=1);
  4921  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4922  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4923  0F3B  1505               	bsf	5,2	;volatile
  4924                           
  4925                           ;lcd_hd44780_pic16.c: 146: (RA1=0);
  4926  0F3C  1085               	bcf	5,1	;volatile
  4927                           
  4928                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4929  0F3D  2F3E               	nop2	;2 cycle nop
  4930  0F3E                     l1851:	
  4931                           ;lcd_hd44780_pic16.c: 153: do
  4932                           
  4933                           
  4934                           ;lcd_hd44780_pic16.c: 154: {
  4935                           ;lcd_hd44780_pic16.c: 156: (RA3=1);
  4936  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  4938  0F40  1585               	bsf	5,3	;volatile
  4939                           
  4940                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4941  0F41  2F42               	nop2	;2 cycle nop
  4942                           
  4943                           ;lcd_hd44780_pic16.c: 161: status=(PORTA>>4);
  4944  0F42  1283               	bcf	3,5	;RP0=0, select bank0
  4945  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  4946  0F44  0805               	movf	5,w	;volatile
  4947  0F45  00B3               	movwf	??_LCDBusyLoop
  4948  0F46  3004               	movlw	4
  4949  0F47                     u1495:	
  4950  0F47  1003               	clrc
  4951  0F48  0CB3               	rrf	??_LCDBusyLoop,f
  4952  0F49  3EFF               	addlw	-1
  4953  0F4A  1D03               	skipz
  4954  0F4B  2F47               	goto	u1495
  4955  0F4C  0833               	movf	??_LCDBusyLoop,w
  4956  0F4D  00B4               	movwf	??_LCDBusyLoop+1
  4957  0F4E  0834               	movf	??_LCDBusyLoop+1,w
  4958  0F4F  00B7               	movwf	LCDBusyLoop@status
  4959                           
  4960                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4961  0F50  0837               	movf	LCDBusyLoop@status,w
  4962  0F51  00B3               	movwf	??_LCDBusyLoop
  4963  0F52  3003               	movlw	3
  4964  0F53                     u1505:	
  4965  0F53  1003               	clrc
  4966  0F54  0DB3               	rlf	??_LCDBusyLoop,f
  4967  0F55  3EFF               	addlw	-1
  4968  0F56  1D03               	skipz
  4969  0F57  2F53               	goto	u1505
  4970  0F58  1003               	clrc
  4971  0F59  0D33               	rlf	??_LCDBusyLoop,w
  4972  0F5A  00B4               	movwf	??_LCDBusyLoop+1
  4973  0F5B  0834               	movf	??_LCDBusyLoop+1,w
  4974  0F5C  00B7               	movwf	LCDBusyLoop@status
  4975                           
  4976                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4977  0F5D  2F5E               	nop2	;2 cycle nop
  4978                           
  4979                           ;lcd_hd44780_pic16.c: 167: (RA3=0);
  4980  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  4981  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  4982  0F60  1185               	bcf	5,3	;volatile
  4983                           
  4984                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4985  0F61  2F62               	nop2	;2 cycle nop
  4986  0F62  2F63               	nop2	;2 cycle nop
  4987  0F63  0000               	nop
  4988                           
  4989                           ;lcd_hd44780_pic16.c: 170: (RA3=1);
  4990  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  4991  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  4992  0F66  1585               	bsf	5,3	;volatile
  4993                           
  4994                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4995  0F67  2F68               	nop2	;2 cycle nop
  4996                           
  4997                           ;lcd_hd44780_pic16.c: 173: temp=(PORTA>>4);
  4998  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4999  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  5000  0F6A  0805               	movf	5,w	;volatile
  5001  0F6B  00B3               	movwf	??_LCDBusyLoop
  5002  0F6C  3004               	movlw	4
  5003  0F6D                     u1515:	
  5004  0F6D  1003               	clrc
  5005  0F6E  0CB3               	rrf	??_LCDBusyLoop,f
  5006  0F6F  3EFF               	addlw	-1
  5007  0F70  1D03               	skipz
  5008  0F71  2F6D               	goto	u1515
  5009  0F72  0833               	movf	??_LCDBusyLoop,w
  5010  0F73  00B4               	movwf	??_LCDBusyLoop+1
  5011  0F74  0834               	movf	??_LCDBusyLoop+1,w
  5012  0F75  00B6               	movwf	LCDBusyLoop@temp
  5013                           
  5014                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  5015  0F76  300F               	movlw	15
  5016  0F77  00B3               	movwf	??_LCDBusyLoop
  5017  0F78  0833               	movf	??_LCDBusyLoop,w
  5018  0F79  05B6               	andwf	LCDBusyLoop@temp,f
  5019                           
  5020                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  5021  0F7A  0837               	movf	LCDBusyLoop@status,w
  5022  0F7B  0436               	iorwf	LCDBusyLoop@temp,w
  5023  0F7C  00B3               	movwf	??_LCDBusyLoop
  5024  0F7D  0833               	movf	??_LCDBusyLoop,w
  5025  0F7E  00B7               	movwf	LCDBusyLoop@status
  5026                           
  5027                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  5028  0F7F  0837               	movf	LCDBusyLoop@status,w
  5029  0F80  3980               	andlw	128
  5030  0F81  00B3               	movwf	??_LCDBusyLoop
  5031  0F82  0833               	movf	??_LCDBusyLoop,w
  5032  0F83  00B5               	movwf	LCDBusyLoop@busy
  5033                           
  5034                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5035  0F84  2F85               	nop2	;2 cycle nop
  5036                           
  5037                           ;lcd_hd44780_pic16.c: 182: (RA3=0);
  5038  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  5039  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  5040  0F87  1185               	bcf	5,3	;volatile
  5041                           
  5042                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5043  0F88  2F89               	nop2	;2 cycle nop
  5044  0F89  2F8A               	nop2	;2 cycle nop
  5045  0F8A  0000               	nop
  5046                           
  5047                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  5048  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  5049  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  5050  0F8D  0835               	movf	LCDBusyLoop@busy,w
  5051  0F8E  1D03               	btfss	3,2
  5052  0F8F  2F3E               	goto	l1851
  5053                           
  5054                           ;lcd_hd44780_pic16.c: 186: (RA2=0);
  5055  0F90  1105               	bcf	5,2	;volatile
  5056                           
  5057                           ;lcd_hd44780_pic16.c: 189: TRISA&=(~(0x0F<<4));
  5058  0F91  300F               	movlw	15
  5059  0F92  00B3               	movwf	??_LCDBusyLoop
  5060  0F93  0833               	movf	??_LCDBusyLoop,w
  5061  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  5062  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  5063  0F96  0585               	andwf	5,f	;volatile
  5064  0F97  0008               	return
  5065  0F98                     __end_of_LCDBusyLoop:	
  5066                           
  5067                           	psect	text23
  5068  0AA0                     __ptext23:	
  5069 ;; *************** function _ADCInit *****************
  5070 ;; Defined at:
  5071 ;;		line 7 in file "adc_pic16.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5085 ;;      Params:         0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    4
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_main
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           
  5100                           ;psect for function _ADCInit
  5101  0AA0                     _ADCInit:	
  5102                           
  5103                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  5104                           
  5105                           ;incstack = 0
  5106                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  5107  0AA0  1683               	bsf	3,5	;RP0=1, select bank1
  5108  0AA1  1303               	bcf	3,6	;RP1=0, select bank1
  5109  0AA2  1686               	bsf	6,5	;volatile
  5110                           
  5111                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  5112  0AA3  1683               	bsf	3,5	;RP0=1, select bank3
  5113  0AA4  1703               	bsf	3,6	;RP1=1, select bank3
  5114  0AA5  1689               	bsf	9,5	;volatile
  5115                           
  5116                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  5117  0AA6  1683               	bsf	3,5	;RP0=1, select bank1
  5118  0AA7  1303               	bcf	3,6	;RP1=0, select bank1
  5119  0AA8  121F               	bcf	31,4	;volatile
  5120                           
  5121                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  5122  0AA9  30C0               	movlw	192
  5123  0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  5124  0AAB  1303               	bcf	3,6	;RP1=0, select bank0
  5125  0AAC  049F               	iorwf	31,f	;volatile
  5126                           
  5127                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  5128  0AAD  1683               	bsf	3,5	;RP0=1, select bank1
  5129  0AAE  1303               	bcf	3,6	;RP1=0, select bank1
  5130  0AAF  179F               	bsf	31,7	;volatile
  5131                           
  5132                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  5133  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  5134  0AB1  1303               	bcf	3,6	;RP1=0, select bank0
  5135  0AB2  141F               	bsf	31,0	;volatile
  5136  0AB3  0008               	return
  5137  0AB4                     __end_of_ADCInit:	
  5138                           
  5139                           	psect	text24
  5140  072B                     __ptext24:	
  5141 ;; *************** function _ISR *****************
  5142 ;; Defined at:
  5143 ;;		line 105 in file "uart_16f886.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5157 ;;      Params:         0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0
  5159 ;;      Temps:          0       7       0       0       0
  5160 ;;      Totals:         0       7       0       0       0
  5161 ;;Total ram usage:        7 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    3
  5164 ;; This function calls:
  5165 ;;		_USARTHandleRxInt
  5166 ;;		i1_LCDByte
  5167 ;;		i1_LCDGotoXY
  5168 ;;		i1_LCDWriteInt
  5169 ;;		i1_LCDWriteString
  5170 ;; This function is called by:
  5171 ;;		Interrupt level 1
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           
  5176                           ;psect for function _ISR
  5177  072B                     _ISR:	
  5178                           
  5179                           ;uart_16f886.c: 107: if(INTCONbits.RBIF == 1)
  5180  072B  1C0B               	btfss	11,0	;volatile
  5181  072C  2F8F               	goto	i1l2663
  5182                           
  5183                           ;uart_16f886.c: 108: {
  5184                           ;uart_16f886.c: 110: {
  5185                           ;uart_16f886.c: 112: (LCDByte(0b00000001,0));
  5186  072D  01F5               	clrf	i1LCDByte@isdata
  5187  072E  3001               	movlw	1
  5188  072F  120A  158A  2562  120A  118A  	fcall	i1_LCDByte
  5189                           
  5190                           ;uart_16f886.c: 114: { LCDGotoXY(0,0); LCDWriteString("Thermometer set:");};
  5191  0734  01FC               	clrf	i1LCDGotoXY@y
  5192  0735  3000               	movlw	0
  5193  0736  120A  158A  2365  120A  118A  	fcall	i1_LCDGotoXY
  5194  073B  304B               	movlw	low (STR_1| (0+32768))
  5195  073C  00FC               	movwf	i1LCDWriteString@msg
  5196  073D  3084               	movlw	high (STR_1| (0+32768))
  5197  073E  00FD               	movwf	i1LCDWriteString@msg+1
  5198  073F  120A  158A  24B4  120A  118A  	fcall	i1_LCDWriteString
  5199                           
  5200                           ;uart_16f886.c: 116: tuneTemp++;
  5201  0744  3001               	movlw	1
  5202  0745  1283               	bcf	3,5	;RP0=0, select bank0
  5203  0746  1303               	bcf	3,6	;RP1=0, select bank0
  5204  0747  07D4               	addwf	_tuneTemp,f
  5205  0748  1803               	skipnc
  5206  0749  0AD5               	incf	_tuneTemp+1,f
  5207  074A  3000               	movlw	0
  5208  074B  07D5               	addwf	_tuneTemp+1,f
  5209                           
  5210                           ;uart_16f886.c: 117: if(tuneTemp > 150)
  5211  074C  0855               	movf	_tuneTemp+1,w
  5212  074D  3A80               	xorlw	128
  5213  074E  00FF               	movwf	127
  5214  074F  3080               	movlw	128
  5215  0750  027F               	subwf	127,w
  5216  0751  1D03               	skipz
  5217  0752  2F55               	goto	u279_25
  5218  0753  3097               	movlw	151
  5219  0754  0254               	subwf	_tuneTemp,w
  5220  0755                     u279_25:	
  5221  0755  1C03               	skipc
  5222  0756  2F5B               	goto	i1l2651
  5223                           
  5224                           ;uart_16f886.c: 118: {
  5225                           ;uart_16f886.c: 119: tuneTemp = 0;
  5226  0757  1283               	bcf	3,5	;RP0=0, select bank0
  5227  0758  1303               	bcf	3,6	;RP1=0, select bank0
  5228  0759  01D4               	clrf	_tuneTemp
  5229  075A  01D5               	clrf	_tuneTemp+1
  5230  075B                     i1l2651:	
  5231                           
  5232                           ;uart_16f886.c: 120: }
  5233                           ;uart_16f886.c: 123: { LCDGotoXY(0,1); LCDWriteInt(tuneTemp,3);};
  5234  075B  01FC               	clrf	i1LCDGotoXY@y
  5235  075C  0AFC               	incf	i1LCDGotoXY@y,f
  5236  075D  3000               	movlw	0
  5237  075E  120A  158A  2365  120A  118A  	fcall	i1_LCDGotoXY
  5238  0763  1283               	bcf	3,5	;RP0=0, select bank0
  5239  0764  1303               	bcf	3,6	;RP1=0, select bank0
  5240  0765  0855               	movf	_tuneTemp+1,w
  5241  0766  00A1               	movwf	i1LCDWriteInt@val+1
  5242  0767  0854               	movf	_tuneTemp,w
  5243  0768  00A0               	movwf	i1LCDWriteInt@val
  5244  0769  3003               	movlw	3
  5245  076A  00AC               	movwf	??_ISR
  5246  076B  082C               	movf	??_ISR,w
  5247  076C  00A2               	movwf	i1LCDWriteInt@field_length
  5248  076D  120A  118A  2602  120A  118A  	fcall	i1_LCDWriteInt
  5249                           
  5250                           ;uart_16f886.c: 126: LCDWriteString("%0C");
  5251  0772  3090               	movlw	low (STR_2| (0+32768))
  5252  0773  00FC               	movwf	i1LCDWriteString@msg
  5253  0774  3084               	movlw	high (STR_2| (0+32768))
  5254  0775  00FD               	movwf	i1LCDWriteString@msg+1
  5255  0776  120A  158A  24B4  120A  118A  	fcall	i1_LCDWriteString
  5256                           
  5257                           ;uart_16f886.c: 128: _delay((unsigned long)((500)*(20000000/4000.0)));
  5258  077B  300D               	movlw	13
  5259  077C  1283               	bcf	3,5	;RP0=0, select bank0
  5260  077D  1303               	bcf	3,6	;RP1=0, select bank0
  5261  077E  00AE               	movwf	??_ISR+2
  5262  077F  30AF               	movlw	175
  5263  0780  00AD               	movwf	??_ISR+1
  5264  0781  30C1               	movlw	193
  5265  0782  00AC               	movwf	??_ISR
  5266  0783                     u316_27:	
  5267  0783  0BAC               	decfsz	??_ISR,f
  5268  0784  2F83               	goto	u316_27
  5269  0785  0BAD               	decfsz	??_ISR+1,f
  5270  0786  2F83               	goto	u316_27
  5271  0787  0BAE               	decfsz	??_ISR+2,f
  5272  0788  2F83               	goto	u316_27
  5273  0789  0000               	nop
  5274                           
  5275                           ;uart_16f886.c: 129: tuneTempDir = 1;
  5276  078A  1683               	bsf	3,5	;RP0=1, select bank1
  5277  078B  1303               	bcf	3,6	;RP1=0, select bank1
  5278  078C  01BF               	clrf	_tuneTempDir^(0+128)
  5279  078D  0ABF               	incf	_tuneTempDir^(0+128),f
  5280                           
  5281                           ;uart_16f886.c: 131: }
  5282                           ;uart_16f886.c: 132: INTCONbits.RBIF = 0;
  5283  078E  100B               	bcf	11,0	;volatile
  5284  078F                     i1l2663:	
  5285                           
  5286                           ;uart_16f886.c: 133: }
  5287                           ;uart_16f886.c: 134: IOCBbits.IOCB4 = 0;
  5288  078F  1683               	bsf	3,5	;RP0=1, select bank1
  5289  0790  1303               	bcf	3,6	;RP1=0, select bank1
  5290  0791  1216               	bcf	22,4	;volatile
  5291                           
  5292                           ;uart_16f886.c: 136: if (RCIE && RCIF) {
  5293  0792  1E8C               	btfss	12,5	;volatile
  5294  0793  2FA0               	goto	i1l168
  5295  0794  1283               	bcf	3,5	;RP0=0, select bank0
  5296  0795  1303               	bcf	3,6	;RP1=0, select bank0
  5297  0796  1E8C               	btfss	12,5	;volatile
  5298  0797  2FA0               	goto	i1l168
  5299                           
  5300                           ;uart_16f886.c: 137: USARTHandleRxInt();
  5301  0798  120A  158A  23D3  120A  118A  	fcall	_USARTHandleRxInt
  5302                           
  5303                           ;uart_16f886.c: 138: RCIF = 0;
  5304  079D  1283               	bcf	3,5	;RP0=0, select bank0
  5305  079E  1303               	bcf	3,6	;RP1=0, select bank0
  5306  079F  128C               	bcf	12,5	;volatile
  5307  07A0                     i1l168:	
  5308  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  5309  07A1  0832               	movf	??_ISR+6,w
  5310  07A2  00FF               	movwf	127
  5311  07A3  0831               	movf	??_ISR+5,w
  5312  07A4  008A               	movwf	10
  5313  07A5  0830               	movf	??_ISR+4,w
  5314  07A6  0084               	movwf	4
  5315  07A7  0E2F               	swapf	(??_ISR+3)^0,w
  5316  07A8  0083               	movwf	3
  5317  07A9  0EFE               	swapf	126,f
  5318  07AA  0E7E               	swapf	126,w
  5319  07AB  0009               	retfie
  5320  07AC                     __end_of_ISR:	
  5321                           
  5322                           	psect	intentry
  5323  0004                     __pintentry:	
  5324                           ;incstack = 0
  5325                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5326                           
  5327  0004                     interrupt_function:	
  5328  007E                     saved_w	set	btemp
  5329  0004  00FE               	movwf	btemp
  5330  0005  0E03               	swapf	3,w
  5331  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5332  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5333  0008  00AF               	movwf	??_ISR+3
  5334  0009  0804               	movf	4,w
  5335  000A  00B0               	movwf	??_ISR+4
  5336  000B  080A               	movf	10,w
  5337  000C  00B1               	movwf	??_ISR+5
  5338  000D  087F               	movf	btemp+1,w
  5339  000E  00B2               	movwf	??_ISR+6
  5340  000F  120A  118A  2F2B   	ljmp	_ISR
  5341                           
  5342                           	psect	text25
  5343  0CB4                     __ptext25:	
  5344 ;; *************** function i1_LCDWriteString *****************
  5345 ;; Defined at:
  5346 ;;		line 279 in file "lcd_hd44780_pic16.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  msg             2   12[COMMON] PTR const unsigned char 
  5349 ;;		 -> STR_22(4), STR_21(13), STR_20(4), STR_19(17), 
  5350 ;;		 -> STR_2(4), STR_1(17), 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  LCDWriteStri    1    1[BANK0 ] char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5362 ;;      Params:         2       0       0       0       0
  5363 ;;      Locals:         0       1       0       0       0
  5364 ;;      Temps:          0       1       0       0       0
  5365 ;;      Totals:         2       2       0       0       0
  5366 ;;Total ram usage:        4 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    2
  5369 ;; This function calls:
  5370 ;;		i1_LCDByte
  5371 ;; This function is called by:
  5372 ;;		_ISR
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           
  5377                           ;psect for function i1_LCDWriteString
  5378  0CB4                     i1_LCDWriteString:	
  5379  0CB4                     i1l2581:	
  5380                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  5381                           
  5382                           ;incstack = 0
  5383                           ; Regs used in i1_LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5384                           
  5385  0CB4  087D               	movf	i1LCDWriteString@msg+1,w
  5386  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0CB7  00FF               	movwf	127
  5389  0CB8  087C               	movf	i1LCDWriteString@msg,w
  5390  0CB9  0084               	movwf	4
  5391  0CBA  120A  158A  2000  120A  158A  	fcall	stringtab
  5392  0CBF  3A00               	xorlw	0
  5393  0CC0  1903               	btfsc	3,2
  5394  0CC1  0008               	return
  5395                           
  5396                           ;lcd_hd44780_pic16.c: 282: {
  5397                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  5398  0CC2  087D               	movf	i1LCDWriteString@msg+1,w
  5399  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  5400  0CC4  1303               	bcf	3,6	;RP1=0, select bank0
  5401  0CC5  00FF               	movwf	127
  5402  0CC6  087C               	movf	i1LCDWriteString@msg,w
  5403  0CC7  0084               	movwf	4
  5404  0CC8  120A  158A  2000  120A  158A  	fcall	stringtab
  5405  0CCD  3A25               	xorlw	37
  5406  0CCE  1D03               	skipz
  5407  0CCF  2CF4               	goto	i1l2577
  5408                           
  5409                           ;lcd_hd44780_pic16.c: 285: {
  5410                           ;lcd_hd44780_pic16.c: 286: msg++;
  5411  0CD0  3001               	movlw	1
  5412  0CD1  07FC               	addwf	i1LCDWriteString@msg,f
  5413  0CD2  1803               	skipnc
  5414  0CD3  0AFD               	incf	i1LCDWriteString@msg+1,f
  5415                           
  5416                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  5417  0CD4  087D               	movf	i1LCDWriteString@msg+1,w
  5418  0CD5  00FF               	movwf	127
  5419  0CD6  087C               	movf	i1LCDWriteString@msg,w
  5420  0CD7  0084               	movwf	4
  5421  0CD8  120A  158A  2000  120A  158A  	fcall	stringtab
  5422  0CDD  3ED0               	addlw	-48
  5423  0CDE  00A0               	movwf	??i1_LCDWriteString
  5424  0CDF  0820               	movf	??i1_LCDWriteString,w
  5425  0CE0  00A1               	movwf	i1LCDWriteString@cc
  5426                           
  5427                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  5428  0CE1  1BA1               	btfsc	i1LCDWriteString@cc,7
  5429  0CE2  2CEC               	goto	i1l2573
  5430  0CE3  0821               	movf	i1LCDWriteString@cc,w
  5431  0CE4  3A80               	xorlw	128
  5432  0CE5  3E78               	addlw	-136
  5433  0CE6  1803               	skipnc
  5434  0CE7  2CEC               	goto	i1l2573
  5435                           
  5436                           ;lcd_hd44780_pic16.c: 290: {
  5437                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  5438  0CE8  01F5               	clrf	i1LCDByte@isdata
  5439  0CE9  0AF5               	incf	i1LCDByte@isdata,f
  5440  0CEA  0821               	movf	i1LCDWriteString@cc,w
  5441  0CEB  2D01               	goto	L8
  5442  0CEC                     i1l2573:	
  5443                           ;lcd_hd44780_pic16.c: 292: }
  5444                           
  5445                           
  5446                           ;lcd_hd44780_pic16.c: 293: else
  5447                           ;lcd_hd44780_pic16.c: 294: {
  5448                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  5449  0CEC  01F5               	clrf	i1LCDByte@isdata
  5450  0CED  0AF5               	incf	i1LCDByte@isdata,f
  5451  0CEE  3025               	movlw	37
  5452  0CEF  120A  158A  2562  120A  158A  	fcall	i1_LCDByte
  5453  0CF4                     i1l2577:	
  5454                           ;lcd_hd44780_pic16.c: 297: }
  5455                           ;lcd_hd44780_pic16.c: 298: }
  5456                           
  5457                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  5458                           
  5459                           
  5460                           ;lcd_hd44780_pic16.c: 299: else
  5461                           ;lcd_hd44780_pic16.c: 300: {
  5462                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  5463  0CF4  01F5               	clrf	i1LCDByte@isdata
  5464  0CF5  0AF5               	incf	i1LCDByte@isdata,f
  5465  0CF6  087D               	movf	i1LCDWriteString@msg+1,w
  5466  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  5467  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  5468  0CF9  00FF               	movwf	127
  5469  0CFA  087C               	movf	i1LCDWriteString@msg,w
  5470  0CFB  0084               	movwf	4
  5471  0CFC  120A  158A  2000  120A  158A  	fcall	stringtab
  5472  0D01                     L8:	
  5473  0D01  120A  158A  2562  120A  158A  	fcall	i1_LCDByte
  5474                           
  5475                           ;lcd_hd44780_pic16.c: 302: }
  5476                           ;lcd_hd44780_pic16.c: 303: msg++;
  5477  0D06  3001               	movlw	1
  5478  0D07  07FC               	addwf	i1LCDWriteString@msg,f
  5479  0D08  1803               	skipnc
  5480  0D09  0AFD               	incf	i1LCDWriteString@msg+1,f
  5481  0D0A  2CB4               	goto	i1l2581
  5482  0D0B                     __end_ofi1_LCDWriteString:	
  5483                           
  5484                           	psect	text26
  5485  0602                     __ptext26:	
  5486 ;; *************** function i1_LCDWriteInt *****************
  5487 ;; Defined at:
  5488 ;;		line 317 in file "lcd_hd44780_pic16.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  val             2    0[BANK0 ] int 
  5491 ;;  field_length    1    2[BANK0 ] char 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  5494 ;;  LCDWriteInt     2   10[BANK0 ] int 
  5495 ;;  LCDWriteInt     2    8[BANK0 ] int 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5505 ;;      Params:         0       3       0       0       0
  5506 ;;      Locals:         0       9       0       0       0
  5507 ;;      Temps:          2       0       0       0       0
  5508 ;;      Totals:         2      12       0       0       0
  5509 ;;Total ram usage:       14 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    2
  5512 ;; This function calls:
  5513 ;;		i1_LCDByte
  5514 ;;		i1___awdiv
  5515 ;;		i1___awmod
  5516 ;; This function is called by:
  5517 ;;		_ISR
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           
  5522                           ;psect for function i1_LCDWriteInt
  5523  0602                     i1_LCDWriteInt:	
  5524                           
  5525                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in i1_LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5529  0602  3023               	movlw	i1LCDWriteInt@str& (0+255)
  5530  0603  0084               	movwf	4
  5531  0604  1283               	bcf	3,5	;RP0=0, select bank0
  5532  0605  1303               	bcf	3,6	;RP1=0, select bank0
  5533  0606  0858               	movf	LCDWriteInt@F1632,w
  5534  0607  1383               	bcf	3,7	;select IRP bank0
  5535  0608  0080               	movwf	0
  5536  0609  0A84               	incf	4,f
  5537  060A  0859               	movf	LCDWriteInt@F1632+1,w
  5538  060B  0080               	movwf	0
  5539  060C  0A84               	incf	4,f
  5540  060D  085A               	movf	LCDWriteInt@F1632+2,w
  5541  060E  0080               	movwf	0
  5542  060F  0A84               	incf	4,f
  5543  0610  085B               	movf	LCDWriteInt@F1632+3,w
  5544  0611  0080               	movwf	0
  5545  0612  0A84               	incf	4,f
  5546  0613  085C               	movf	LCDWriteInt@F1632+4,w
  5547  0614  0080               	movwf	0
  5548                           
  5549                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  5550  0615  3004               	movlw	4
  5551  0616  00AA               	movwf	i1LCDWriteInt@i
  5552  0617  3000               	movlw	0
  5553  0618  00AB               	movwf	i1LCDWriteInt@i+1
  5554  0619  01A8               	clrf	i1LCDWriteInt@j
  5555  061A  01A9               	clrf	i1LCDWriteInt@j+1
  5556                           
  5557                           ;lcd_hd44780_pic16.c: 323: if(val<0)
  5558  061B  1FA1               	btfss	i1LCDWriteInt@val+1,7
  5559  061C  2E2C               	goto	i1l2601
  5560                           
  5561                           ;lcd_hd44780_pic16.c: 324: {
  5562                           ;lcd_hd44780_pic16.c: 325: (LCDByte('-',1));
  5563  061D  01F5               	clrf	i1LCDByte@isdata
  5564  061E  0AF5               	incf	i1LCDByte@isdata,f
  5565  061F  302D               	movlw	45
  5566  0620  120A  158A  2562  120A  118A  	fcall	i1_LCDByte
  5567                           
  5568                           ;lcd_hd44780_pic16.c: 326: val=val*-1;
  5569  0625  1283               	bcf	3,5	;RP0=0, select bank0
  5570  0626  1303               	bcf	3,6	;RP1=0, select bank0
  5571  0627  09A0               	comf	i1LCDWriteInt@val,f
  5572  0628  09A1               	comf	i1LCDWriteInt@val+1,f
  5573  0629  0AA0               	incf	i1LCDWriteInt@val,f
  5574  062A  1903               	skipnz
  5575  062B  0AA1               	incf	i1LCDWriteInt@val+1,f
  5576  062C                     i1l2601:	
  5577                           ;lcd_hd44780_pic16.c: 327: }
  5578                           ;lcd_hd44780_pic16.c: 329: while(val)
  5579                           
  5580  062C  0820               	movf	i1LCDWriteInt@val,w
  5581  062D  0421               	iorwf	i1LCDWriteInt@val+1,w
  5582  062E  1903               	btfsc	3,2
  5583  062F  2E61               	goto	i1l2603
  5584                           
  5585                           ;lcd_hd44780_pic16.c: 330: {
  5586                           ;lcd_hd44780_pic16.c: 331: str[i]=val%10;
  5587  0630  300A               	movlw	10
  5588  0631  00F0               	movwf	i1___awmod@divisor
  5589  0632  3000               	movlw	0
  5590  0633  00F1               	movwf	i1___awmod@divisor+1
  5591  0634  0821               	movf	i1LCDWriteInt@val+1,w
  5592  0635  00F3               	movwf	i1___awmod@dividend+1
  5593  0636  0820               	movf	i1LCDWriteInt@val,w
  5594  0637  00F2               	movwf	i1___awmod@dividend
  5595  0638  120A  158A  241C  120A  118A  	fcall	i1___awmod
  5596  063D  0870               	movf	?i1___awmod,w
  5597  063E  00FC               	movwf	??i1_LCDWriteInt
  5598  063F  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0640  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0641  082A               	movf	i1LCDWriteInt@i,w
  5601  0642  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  5602  0643  0084               	movwf	4
  5603  0644  087C               	movf	??i1_LCDWriteInt,w
  5604  0645  1383               	bcf	3,7	;select IRP bank0
  5605  0646  0080               	movwf	0
  5606                           
  5607                           ;lcd_hd44780_pic16.c: 332: val=val/10;
  5608  0647  300A               	movlw	10
  5609  0648  00F0               	movwf	i1___awdiv@divisor
  5610  0649  3000               	movlw	0
  5611  064A  00F1               	movwf	i1___awdiv@divisor+1
  5612  064B  0821               	movf	i1LCDWriteInt@val+1,w
  5613  064C  00F3               	movwf	i1___awdiv@dividend+1
  5614  064D  0820               	movf	i1LCDWriteInt@val,w
  5615  064E  00F2               	movwf	i1___awdiv@dividend
  5616  064F  120A  158A  25BB  120A  118A  	fcall	i1___awdiv
  5617  0654  0871               	movf	?i1___awdiv+1,w
  5618  0655  1283               	bcf	3,5	;RP0=0, select bank0
  5619  0656  1303               	bcf	3,6	;RP1=0, select bank0
  5620  0657  00A1               	movwf	i1LCDWriteInt@val+1
  5621  0658  0870               	movf	?i1___awdiv,w
  5622  0659  00A0               	movwf	i1LCDWriteInt@val
  5623                           
  5624                           ;lcd_hd44780_pic16.c: 333: i--;
  5625  065A  30FF               	movlw	255
  5626  065B  07AA               	addwf	i1LCDWriteInt@i,f
  5627  065C  1803               	skipnc
  5628  065D  0AAB               	incf	i1LCDWriteInt@i+1,f
  5629  065E  30FF               	movlw	255
  5630  065F  07AB               	addwf	i1LCDWriteInt@i+1,f
  5631  0660  2E2C               	goto	i1l2601
  5632  0661                     i1l2603:	
  5633                           
  5634                           ;lcd_hd44780_pic16.c: 334: }
  5635                           ;lcd_hd44780_pic16.c: 335: if(field_length==-1)
  5636  0661  0A22               	incf	i1LCDWriteInt@field_length,w
  5637  0662  1903               	btfsc	3,2
  5638  0663  2E76               	goto	i1l2611
  5639                           
  5640                           ;lcd_hd44780_pic16.c: 337: else
  5641                           ;lcd_hd44780_pic16.c: 338: j=5-field_length;
  5642                           
  5643                           ;lcd_hd44780_pic16.c: 336: while(str[j]==-16) j++;
  5644  0664  0822               	movf	i1LCDWriteInt@field_length,w
  5645  0665  00FC               	movwf	??i1_LCDWriteInt
  5646  0666  01FD               	clrf	??i1_LCDWriteInt+1
  5647  0667  1BFC               	btfsc	??i1_LCDWriteInt,7
  5648  0668  03FD               	decf	??i1_LCDWriteInt+1,f
  5649  0669  09FC               	comf	??i1_LCDWriteInt,f
  5650  066A  09FD               	comf	??i1_LCDWriteInt+1,f
  5651  066B  0AFC               	incf	??i1_LCDWriteInt,f
  5652  066C  1903               	skipnz
  5653  066D  0AFD               	incf	??i1_LCDWriteInt+1,f
  5654  066E  087C               	movf	??i1_LCDWriteInt,w
  5655  066F  3E05               	addlw	5
  5656  0670  00A8               	movwf	i1LCDWriteInt@j
  5657  0671  087D               	movf	??i1_LCDWriteInt+1,w
  5658  0672  1803               	skipnc
  5659  0673  3E01               	addlw	1
  5660  0674  3E00               	addlw	0
  5661  0675  00A9               	movwf	i1LCDWriteInt@j+1
  5662  0676                     i1l2611:	
  5663                           
  5664                           ;lcd_hd44780_pic16.c: 341: for(i=j;i<5;i++)
  5665  0676  0829               	movf	i1LCDWriteInt@j+1,w
  5666  0677  00AB               	movwf	i1LCDWriteInt@i+1
  5667  0678  0828               	movf	i1LCDWriteInt@j,w
  5668  0679  00AA               	movwf	i1LCDWriteInt@i
  5669  067A                     L9:	
  5670  067A  082B               	movf	i1LCDWriteInt@i+1,w
  5671  067B  3A80               	xorlw	128
  5672  067C  00FF               	movwf	127
  5673  067D  3080               	movlw	128
  5674  067E  027F               	subwf	127,w
  5675  067F  1D03               	skipz
  5676  0680  2E83               	goto	u275_25
  5677  0681  3005               	movlw	5
  5678  0682  022A               	subwf	i1LCDWriteInt@i,w
  5679  0683                     u275_25:	
  5680  0683  1803               	btfsc	3,0
  5681  0684  0008               	return
  5682                           
  5683                           ;lcd_hd44780_pic16.c: 342: {
  5684                           ;lcd_hd44780_pic16.c: 343: (LCDByte(48+str[i],1));
  5685  0685  01F5               	clrf	i1LCDByte@isdata
  5686  0686  0AF5               	incf	i1LCDByte@isdata,f
  5687  0687  1283               	bcf	3,5	;RP0=0, select bank0
  5688  0688  1303               	bcf	3,6	;RP1=0, select bank0
  5689  0689  082A               	movf	i1LCDWriteInt@i,w
  5690  068A  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  5691  068B  0084               	movwf	4
  5692  068C  1383               	bcf	3,7	;select IRP bank0
  5693  068D  0800               	movf	0,w
  5694  068E  3E30               	addlw	48
  5695  068F  120A  158A  2562  120A  118A  	fcall	i1_LCDByte
  5696  0694  3001               	movlw	1
  5697  0695  1283               	bcf	3,5	;RP0=0, select bank0
  5698  0696  1303               	bcf	3,6	;RP1=0, select bank0
  5699  0697  07AA               	addwf	i1LCDWriteInt@i,f
  5700  0698  1803               	skipnc
  5701  0699  0AAB               	incf	i1LCDWriteInt@i+1,f
  5702  069A  3000               	movlw	0
  5703  069B  07AB               	addwf	i1LCDWriteInt@i+1,f
  5704  069C  2E7A               	goto	L9
  5705  069D                     __end_ofi1_LCDWriteInt:	
  5706                           
  5707                           	psect	text27
  5708  0C1C                     __ptext27:	
  5709 ;; *************** function i1___awmod *****************
  5710 ;; Defined at:
  5711 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  divisor         2    0[COMMON] int 
  5714 ;;  dividend        2    2[COMMON] int 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;  __awmod         1    6[COMMON] unsigned char 
  5717 ;;  __awmod         1    5[COMMON] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  2    0[COMMON] int 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5727 ;;      Params:         4       0       0       0       0
  5728 ;;      Locals:         2       0       0       0       0
  5729 ;;      Temps:          1       0       0       0       0
  5730 ;;      Totals:         7       0       0       0       0
  5731 ;;Total ram usage:        7 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		i1_LCDWriteInt
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           
  5741                           ;psect for function i1___awmod
  5742  0C1C                     i1___awmod:	
  5743                           
  5744                           ;incstack = 0
  5745                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  5746  0C1C  01F6               	clrf	i1___awmod@sign
  5747  0C1D  1FF3               	btfss	i1___awmod@dividend+1,7
  5748  0C1E  2C26               	goto	i1l2277
  5749  0C1F  09F2               	comf	i1___awmod@dividend,f
  5750  0C20  09F3               	comf	i1___awmod@dividend+1,f
  5751  0C21  0AF2               	incf	i1___awmod@dividend,f
  5752  0C22  1903               	skipnz
  5753  0C23  0AF3               	incf	i1___awmod@dividend+1,f
  5754  0C24  01F6               	clrf	i1___awmod@sign
  5755  0C25  0AF6               	incf	i1___awmod@sign,f
  5756  0C26                     i1l2277:	
  5757  0C26  1FF1               	btfss	i1___awmod@divisor+1,7
  5758  0C27  2C2D               	goto	i1l2281
  5759  0C28  09F0               	comf	i1___awmod@divisor,f
  5760  0C29  09F1               	comf	i1___awmod@divisor+1,f
  5761  0C2A  0AF0               	incf	i1___awmod@divisor,f
  5762  0C2B  1903               	skipnz
  5763  0C2C  0AF1               	incf	i1___awmod@divisor+1,f
  5764  0C2D                     i1l2281:	
  5765  0C2D  0870               	movf	i1___awmod@divisor,w
  5766  0C2E  0471               	iorwf	i1___awmod@divisor+1,w
  5767  0C2F  1903               	btfsc	3,2
  5768  0C30  2C5A               	goto	i1l2299
  5769  0C31  01F5               	clrf	i1___awmod@counter
  5770  0C32  0AF5               	incf	i1___awmod@counter,f
  5771  0C33                     i1l2289:	
  5772  0C33  1BF1               	btfsc	i1___awmod@divisor+1,7
  5773  0C34  2C41               	goto	i1l2291
  5774  0C35  3001               	movlw	1
  5775  0C36                     u236_25:	
  5776  0C36  1003               	clrc
  5777  0C37  0DF0               	rlf	i1___awmod@divisor,f
  5778  0C38  0DF1               	rlf	i1___awmod@divisor+1,f
  5779  0C39  3EFF               	addlw	-1
  5780  0C3A  1D03               	skipz
  5781  0C3B  2C36               	goto	u236_25
  5782  0C3C  3001               	movlw	1
  5783  0C3D  00F4               	movwf	??i1___awmod
  5784  0C3E  0874               	movf	??i1___awmod,w
  5785  0C3F  07F5               	addwf	i1___awmod@counter,f
  5786  0C40  2C33               	goto	i1l2289
  5787  0C41                     i1l2291:	
  5788  0C41  0871               	movf	i1___awmod@divisor+1,w
  5789  0C42  0273               	subwf	i1___awmod@dividend+1,w
  5790  0C43  1D03               	skipz
  5791  0C44  2C47               	goto	u238_25
  5792  0C45  0870               	movf	i1___awmod@divisor,w
  5793  0C46  0272               	subwf	i1___awmod@dividend,w
  5794  0C47                     u238_25:	
  5795  0C47  1C03               	skipc
  5796  0C48  2C4F               	goto	i1l2295
  5797  0C49  0870               	movf	i1___awmod@divisor,w
  5798  0C4A  02F2               	subwf	i1___awmod@dividend,f
  5799  0C4B  0871               	movf	i1___awmod@divisor+1,w
  5800  0C4C  1C03               	skipc
  5801  0C4D  03F3               	decf	i1___awmod@dividend+1,f
  5802  0C4E  02F3               	subwf	i1___awmod@dividend+1,f
  5803  0C4F                     i1l2295:	
  5804  0C4F  3001               	movlw	1
  5805  0C50                     u239_25:	
  5806  0C50  1003               	clrc
  5807  0C51  0CF1               	rrf	i1___awmod@divisor+1,f
  5808  0C52  0CF0               	rrf	i1___awmod@divisor,f
  5809  0C53  3EFF               	addlw	-1
  5810  0C54  1D03               	skipz
  5811  0C55  2C50               	goto	u239_25
  5812  0C56  3001               	movlw	1
  5813  0C57  02F5               	subwf	i1___awmod@counter,f
  5814  0C58  1D03               	btfss	3,2
  5815  0C59  2C41               	goto	i1l2291
  5816  0C5A                     i1l2299:	
  5817  0C5A  0876               	movf	i1___awmod@sign,w
  5818  0C5B  1903               	btfsc	3,2
  5819  0C5C  2C62               	goto	i1l2303
  5820  0C5D  09F2               	comf	i1___awmod@dividend,f
  5821  0C5E  09F3               	comf	i1___awmod@dividend+1,f
  5822  0C5F  0AF2               	incf	i1___awmod@dividend,f
  5823  0C60  1903               	skipnz
  5824  0C61  0AF3               	incf	i1___awmod@dividend+1,f
  5825  0C62                     i1l2303:	
  5826  0C62  0873               	movf	i1___awmod@dividend+1,w
  5827  0C63  00F1               	movwf	?i1___awmod+1
  5828  0C64  0872               	movf	i1___awmod@dividend,w
  5829  0C65  00F0               	movwf	?i1___awmod
  5830  0C66  0008               	return
  5831  0C67                     __end_ofi1___awmod:	
  5832                           
  5833                           	psect	text28
  5834  0DBB                     __ptext28:	
  5835 ;; *************** function i1___awdiv *****************
  5836 ;; Defined at:
  5837 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  divisor         2    0[COMMON] int 
  5840 ;;  dividend        2    2[COMMON] int 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  __awdiv         2    7[COMMON] int 
  5843 ;;  __awdiv         1    6[COMMON] unsigned char 
  5844 ;;  __awdiv         1    5[COMMON] unsigned char 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  2    0[COMMON] int 
  5847 ;; Registers used:
  5848 ;;		wreg, status,2, status,0
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5854 ;;      Params:         4       0       0       0       0
  5855 ;;      Locals:         4       0       0       0       0
  5856 ;;      Temps:          1       0       0       0       0
  5857 ;;      Totals:         9       0       0       0       0
  5858 ;;Total ram usage:        9 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		i1_LCDWriteInt
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           
  5868                           ;psect for function i1___awdiv
  5869  0DBB                     i1___awdiv:	
  5870                           
  5871                           ;incstack = 0
  5872                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  5873  0DBB  01F6               	clrf	i1___awdiv@sign
  5874  0DBC  1FF1               	btfss	i1___awdiv@divisor+1,7
  5875  0DBD  2DC5               	goto	i1l2233
  5876  0DBE  09F0               	comf	i1___awdiv@divisor,f
  5877  0DBF  09F1               	comf	i1___awdiv@divisor+1,f
  5878  0DC0  0AF0               	incf	i1___awdiv@divisor,f
  5879  0DC1  1903               	skipnz
  5880  0DC2  0AF1               	incf	i1___awdiv@divisor+1,f
  5881  0DC3  01F6               	clrf	i1___awdiv@sign
  5882  0DC4  0AF6               	incf	i1___awdiv@sign,f
  5883  0DC5                     i1l2233:	
  5884  0DC5  1FF3               	btfss	i1___awdiv@dividend+1,7
  5885  0DC6  2DD0               	goto	i1l2239
  5886  0DC7  09F2               	comf	i1___awdiv@dividend,f
  5887  0DC8  09F3               	comf	i1___awdiv@dividend+1,f
  5888  0DC9  0AF2               	incf	i1___awdiv@dividend,f
  5889  0DCA  1903               	skipnz
  5890  0DCB  0AF3               	incf	i1___awdiv@dividend+1,f
  5891  0DCC  3001               	movlw	1
  5892  0DCD  00F4               	movwf	??i1___awdiv
  5893  0DCE  0874               	movf	??i1___awdiv,w
  5894  0DCF  06F6               	xorwf	i1___awdiv@sign,f
  5895  0DD0                     i1l2239:	
  5896  0DD0  01F7               	clrf	i1___awdiv@quotient
  5897  0DD1  01F8               	clrf	i1___awdiv@quotient+1
  5898  0DD2  0870               	movf	i1___awdiv@divisor,w
  5899  0DD3  0471               	iorwf	i1___awdiv@divisor+1,w
  5900  0DD4  1903               	btfsc	3,2
  5901  0DD5  2E07               	goto	i1l2261
  5902  0DD6  01F5               	clrf	i1___awdiv@counter
  5903  0DD7  0AF5               	incf	i1___awdiv@counter,f
  5904  0DD8                     i1l2249:	
  5905  0DD8  1BF1               	btfsc	i1___awdiv@divisor+1,7
  5906  0DD9  2DE6               	goto	i1l2251
  5907  0DDA  3001               	movlw	1
  5908  0DDB                     u226_25:	
  5909  0DDB  1003               	clrc
  5910  0DDC  0DF0               	rlf	i1___awdiv@divisor,f
  5911  0DDD  0DF1               	rlf	i1___awdiv@divisor+1,f
  5912  0DDE  3EFF               	addlw	-1
  5913  0DDF  1D03               	skipz
  5914  0DE0  2DDB               	goto	u226_25
  5915  0DE1  3001               	movlw	1
  5916  0DE2  00F4               	movwf	??i1___awdiv
  5917  0DE3  0874               	movf	??i1___awdiv,w
  5918  0DE4  07F5               	addwf	i1___awdiv@counter,f
  5919  0DE5  2DD8               	goto	i1l2249
  5920  0DE6                     i1l2251:	
  5921  0DE6  3001               	movlw	1
  5922  0DE7                     u228_25:	
  5923  0DE7  1003               	clrc
  5924  0DE8  0DF7               	rlf	i1___awdiv@quotient,f
  5925  0DE9  0DF8               	rlf	i1___awdiv@quotient+1,f
  5926  0DEA  3EFF               	addlw	-1
  5927  0DEB  1D03               	skipz
  5928  0DEC  2DE7               	goto	u228_25
  5929  0DED  0871               	movf	i1___awdiv@divisor+1,w
  5930  0DEE  0273               	subwf	i1___awdiv@dividend+1,w
  5931  0DEF  1D03               	skipz
  5932  0DF0  2DF3               	goto	u229_25
  5933  0DF1  0870               	movf	i1___awdiv@divisor,w
  5934  0DF2  0272               	subwf	i1___awdiv@dividend,w
  5935  0DF3                     u229_25:	
  5936  0DF3  1C03               	skipc
  5937  0DF4  2DFC               	goto	i1l2257
  5938  0DF5  0870               	movf	i1___awdiv@divisor,w
  5939  0DF6  02F2               	subwf	i1___awdiv@dividend,f
  5940  0DF7  0871               	movf	i1___awdiv@divisor+1,w
  5941  0DF8  1C03               	skipc
  5942  0DF9  03F3               	decf	i1___awdiv@dividend+1,f
  5943  0DFA  02F3               	subwf	i1___awdiv@dividend+1,f
  5944  0DFB  1477               	bsf	i1___awdiv@quotient,0
  5945  0DFC                     i1l2257:	
  5946  0DFC  3001               	movlw	1
  5947  0DFD                     u230_25:	
  5948  0DFD  1003               	clrc
  5949  0DFE  0CF1               	rrf	i1___awdiv@divisor+1,f
  5950  0DFF  0CF0               	rrf	i1___awdiv@divisor,f
  5951  0E00  3EFF               	addlw	-1
  5952  0E01  1D03               	skipz
  5953  0E02  2DFD               	goto	u230_25
  5954  0E03  3001               	movlw	1
  5955  0E04  02F5               	subwf	i1___awdiv@counter,f
  5956  0E05  1D03               	btfss	3,2
  5957  0E06  2DE6               	goto	i1l2251
  5958  0E07                     i1l2261:	
  5959  0E07  0876               	movf	i1___awdiv@sign,w
  5960  0E08  1903               	btfsc	3,2
  5961  0E09  2E0F               	goto	i1l2265
  5962  0E0A  09F7               	comf	i1___awdiv@quotient,f
  5963  0E0B  09F8               	comf	i1___awdiv@quotient+1,f
  5964  0E0C  0AF7               	incf	i1___awdiv@quotient,f
  5965  0E0D  1903               	skipnz
  5966  0E0E  0AF8               	incf	i1___awdiv@quotient+1,f
  5967  0E0F                     i1l2265:	
  5968  0E0F  0878               	movf	i1___awdiv@quotient+1,w
  5969  0E10  00F1               	movwf	?i1___awdiv+1
  5970  0E11  0877               	movf	i1___awdiv@quotient,w
  5971  0E12  00F0               	movwf	?i1___awdiv
  5972  0E13  0008               	return
  5973  0E14                     __end_ofi1___awdiv:	
  5974                           
  5975                           	psect	text29
  5976  0B65                     __ptext29:	
  5977 ;; *************** function i1_LCDGotoXY *****************
  5978 ;; Defined at:
  5979 ;;		line 351 in file "lcd_hd44780_pic16.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;  x               1    wreg     unsigned char 
  5982 ;;  y               1   12[COMMON] unsigned char 
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;  x               1    0[BANK0 ] unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5994 ;;      Params:         1       0       0       0       0
  5995 ;;      Locals:         0       1       0       0       0
  5996 ;;      Temps:          1       0       0       0       0
  5997 ;;      Totals:         2       1       0       0       0
  5998 ;;Total ram usage:        3 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    2
  6001 ;; This function calls:
  6002 ;;		i1_LCDByte
  6003 ;; This function is called by:
  6004 ;;		_ISR
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           
  6009                           ;psect for function i1_LCDGotoXY
  6010  0B65                     i1_LCDGotoXY:	
  6011                           
  6012                           ;incstack = 0
  6013                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6014                           ;i1LCDGotoXY@x stored from wreg
  6015  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  6016  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  6017  0B67  00A0               	movwf	i1LCDGotoXY@x
  6018                           
  6019                           ;lcd_hd44780_pic16.c: 353: if(x>=20) return;
  6020  0B68  3014               	movlw	20
  6021  0B69  0220               	subwf	i1LCDGotoXY@x,w
  6022  0B6A  1803               	btfsc	3,0
  6023  0B6B  0008               	return
  6024  0B6C  2B76               	goto	i1l2633
  6025  0B6D                     i1l90:	
  6026                           ;lcd_hd44780_pic16.c: 361: case 1:
  6027                           
  6028                           ;lcd_hd44780_pic16.c: 360: break;
  6029                           
  6030                           ;lcd_hd44780_pic16.c: 358: {
  6031                           ;lcd_hd44780_pic16.c: 359: case 0:
  6032                           
  6033                           ;lcd_hd44780_pic16.c: 357: switch(y)
  6034                           
  6035                           
  6036                           ;lcd_hd44780_pic16.c: 362: x|=0b01000000;
  6037  0B6D  1720               	bsf	i1LCDGotoXY@x,6
  6038                           
  6039                           ;lcd_hd44780_pic16.c: 363: break;
  6040  0B6E  2B84               	goto	i1l89
  6041  0B6F                     i1l2627:	
  6042                           ;lcd_hd44780_pic16.c: 364: case 2:
  6043                           
  6044                           
  6045                           ;lcd_hd44780_pic16.c: 365: x+=0x14;
  6046  0B6F  3014               	movlw	20
  6047  0B70  2B72               	goto	L10
  6048  0B71                     i1l2629:	
  6049                           ;lcd_hd44780_pic16.c: 367: case 3:
  6050                           
  6051                           ;lcd_hd44780_pic16.c: 366: break;
  6052                           
  6053                           
  6054                           ;lcd_hd44780_pic16.c: 368: x+=0x54;
  6055  0B71  3054               	movlw	84
  6056  0B72                     L10:	
  6057  0B72  00FD               	movwf	??i1_LCDGotoXY
  6058  0B73  087D               	movf	??i1_LCDGotoXY,w
  6059  0B74  07A0               	addwf	i1LCDGotoXY@x,f
  6060                           
  6061                           ;lcd_hd44780_pic16.c: 370: }
  6062                           
  6063                           ;lcd_hd44780_pic16.c: 369: break;
  6064  0B75  2B84               	goto	i1l89
  6065  0B76                     i1l2633:	
  6066  0B76  087C               	movf	i1LCDGotoXY@y,w
  6067                           
  6068                           ; Switch size 1, requested type "space"
  6069                           ; Number of cases is 4, Range of values is 0 to 3
  6070                           ; switch strategies available:
  6071                           ; Name         Instructions Cycles
  6072                           ; simple_byte           13     7 (average)
  6073                           ; direct_byte           20     8 (fixed)
  6074                           ; jumptable            260     6 (fixed)
  6075                           ;	Chosen strategy is simple_byte
  6076  0B77  3A00               	xorlw	0	; case 0
  6077  0B78  1903               	skipnz
  6078  0B79  2B84               	goto	i1l89
  6079  0B7A  3A01               	xorlw	1	; case 1
  6080  0B7B  1903               	skipnz
  6081  0B7C  2B6D               	goto	i1l90
  6082  0B7D  3A03               	xorlw	3	; case 2
  6083  0B7E  1903               	skipnz
  6084  0B7F  2B6F               	goto	i1l2627
  6085  0B80  3A01               	xorlw	1	; case 3
  6086  0B81  1903               	skipnz
  6087  0B82  2B71               	goto	i1l2629
  6088  0B83  2B84               	goto	i1l89
  6089  0B84                     i1l89:	
  6090                           
  6091                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  6092  0B84  17A0               	bsf	i1LCDGotoXY@x,7
  6093                           
  6094                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  6095  0B85  01F5               	clrf	i1LCDByte@isdata
  6096  0B86  0820               	movf	i1LCDGotoXY@x,w
  6097  0B87  120A  158A  2562   	fcall	i1_LCDByte
  6098  0B8A  0008               	return
  6099  0B8B                     __end_ofi1_LCDGotoXY:	
  6100                           
  6101                           	psect	text30
  6102  0D62                     __ptext30:	
  6103 ;; *************** function i1_LCDByte *****************
  6104 ;; Defined at:
  6105 ;;		line 80 in file "lcd_hd44780_pic16.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  c               1    wreg     unsigned char 
  6108 ;;  isdata          1    5[COMMON] unsigned char 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  c               1    8[COMMON] unsigned char 
  6111 ;;  LCDByte         1   11[COMMON] unsigned char 
  6112 ;;  LCDByte         1   10[COMMON] unsigned char 
  6113 ;;  LCDByte         1    9[COMMON] unsigned char 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      void 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2, status,0, pclath, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6123 ;;      Params:         1       0       0       0       0
  6124 ;;      Locals:         4       0       0       0       0
  6125 ;;      Temps:          2       0       0       0       0
  6126 ;;      Totals:         7       0       0       0       0
  6127 ;;Total ram usage:        7 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:    1
  6130 ;; This function calls:
  6131 ;;		i1_LCDBusyLoop
  6132 ;; This function is called by:
  6133 ;;		_ISR
  6134 ;;		i1_LCDWriteString
  6135 ;;		i1_LCDWriteInt
  6136 ;;		i1_LCDGotoXY
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           
  6141                           ;psect for function i1_LCDByte
  6142  0D62                     i1_LCDByte:	
  6143                           
  6144                           ;incstack = 0
  6145                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  6146                           ;i1LCDByte@c stored from wreg
  6147  0D62  00F8               	movwf	i1LCDByte@c
  6148                           
  6149                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  6150                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  6151                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  6152  0D63  0878               	movf	i1LCDByte@c,w
  6153  0D64  00F6               	movwf	??i1_LCDByte
  6154  0D65  3004               	movlw	4
  6155  0D66                     u219_25:	
  6156  0D66  1003               	clrc
  6157  0D67  0CF6               	rrf	??i1_LCDByte,f
  6158  0D68  3EFF               	addlw	-1
  6159  0D69  1D03               	skipz
  6160  0D6A  2D66               	goto	u219_25
  6161  0D6B  0876               	movf	??i1_LCDByte,w
  6162  0D6C  00F7               	movwf	??i1_LCDByte+1
  6163  0D6D  0877               	movf	??i1_LCDByte+1,w
  6164  0D6E  00F9               	movwf	i1LCDByte@hn
  6165                           
  6166                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  6167  0D6F  0878               	movf	i1LCDByte@c,w
  6168  0D70  390F               	andlw	15
  6169  0D71  00F6               	movwf	??i1_LCDByte
  6170  0D72  0876               	movf	??i1_LCDByte,w
  6171  0D73  00FA               	movwf	i1LCDByte@ln
  6172                           
  6173                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  6174  0D74  0875               	movf	i1LCDByte@isdata,w
  6175  0D75  1D03               	btfss	3,2
  6176  0D76  2D7B               	goto	i1l44
  6177                           
  6178                           ;lcd_hd44780_pic16.c: 96: (RA1=0);
  6179  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  6180  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  6181  0D79  1085               	bcf	5,1	;volatile
  6182  0D7A  2D7E               	goto	i1l45
  6183  0D7B                     i1l44:	
  6184                           
  6185                           ;lcd_hd44780_pic16.c: 97: else
  6186                           ;lcd_hd44780_pic16.c: 98: (RA1=1);
  6187  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  6188  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  6189  0D7D  1485               	bsf	5,1	;volatile
  6190  0D7E                     i1l45:	
  6191                           
  6192                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  6193  0D7E  2D7F               	nop2	;2 cycle nop
  6194                           
  6195                           ;lcd_hd44780_pic16.c: 102: (RA3=1);
  6196  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  6197  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  6198  0D81  1585               	bsf	5,3	;volatile
  6199                           
  6200                           ;lcd_hd44780_pic16.c: 106: temp=(PORTA & (~(0X0F<<4)))|((hn<<4));
  6201  0D82  0879               	movf	i1LCDByte@hn,w
  6202  0D83  00F6               	movwf	??i1_LCDByte
  6203  0D84  3004               	movlw	4
  6204  0D85                     u221_25:	
  6205  0D85  1003               	clrc
  6206  0D86  0DF6               	rlf	??i1_LCDByte,f
  6207  0D87  3EFF               	addlw	-1
  6208  0D88  1D03               	skipz
  6209  0D89  2D85               	goto	u221_25
  6210  0D8A  0805               	movf	5,w	;volatile
  6211  0D8B  390F               	andlw	15
  6212  0D8C  0476               	iorwf	??i1_LCDByte,w
  6213  0D8D  00F7               	movwf	??i1_LCDByte+1
  6214  0D8E  0877               	movf	??i1_LCDByte+1,w
  6215  0D8F  00FB               	movwf	i1LCDByte@temp
  6216                           
  6217                           ;lcd_hd44780_pic16.c: 107: PORTA=temp;
  6218  0D90  087B               	movf	i1LCDByte@temp,w
  6219  0D91  0085               	movwf	5	;volatile
  6220                           
  6221                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  6222  0D92  2D93               	nop2	;2 cycle nop
  6223  0D93  2D94               	nop2	;2 cycle nop
  6224  0D94  0000               	nop
  6225                           
  6226                           ;lcd_hd44780_pic16.c: 113: (RA3=0);
  6227  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  6228  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  6229  0D97  1185               	bcf	5,3	;volatile
  6230                           
  6231                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  6232  0D98  2D99               	nop2	;2 cycle nop
  6233  0D99  2D9A               	nop2	;2 cycle nop
  6234  0D9A  0000               	nop
  6235                           
  6236                           ;lcd_hd44780_pic16.c: 118: (RA3=1);
  6237  0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  6238  0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  6239  0D9D  1585               	bsf	5,3	;volatile
  6240                           
  6241                           ;lcd_hd44780_pic16.c: 120: temp=(PORTA & (~(0X0F<<4)))|((ln<<4));
  6242  0D9E  087A               	movf	i1LCDByte@ln,w
  6243  0D9F  00F6               	movwf	??i1_LCDByte
  6244  0DA0  3004               	movlw	4
  6245  0DA1                     u222_25:	
  6246  0DA1  1003               	clrc
  6247  0DA2  0DF6               	rlf	??i1_LCDByte,f
  6248  0DA3  3EFF               	addlw	-1
  6249  0DA4  1D03               	skipz
  6250  0DA5  2DA1               	goto	u222_25
  6251  0DA6  0805               	movf	5,w	;volatile
  6252  0DA7  390F               	andlw	15
  6253  0DA8  0476               	iorwf	??i1_LCDByte,w
  6254  0DA9  00F7               	movwf	??i1_LCDByte+1
  6255  0DAA  0877               	movf	??i1_LCDByte+1,w
  6256  0DAB  00FB               	movwf	i1LCDByte@temp
  6257                           
  6258                           ;lcd_hd44780_pic16.c: 122: PORTA=temp;
  6259  0DAC  087B               	movf	i1LCDByte@temp,w
  6260  0DAD  0085               	movwf	5	;volatile
  6261                           
  6262                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  6263  0DAE  2DAF               	nop2	;2 cycle nop
  6264  0DAF  2DB0               	nop2	;2 cycle nop
  6265  0DB0  0000               	nop
  6266                           
  6267                           ;lcd_hd44780_pic16.c: 128: (RA3=0);
  6268  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  6269  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  6270  0DB3  1185               	bcf	5,3	;volatile
  6271                           
  6272                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  6273  0DB4  2DB5               	nop2	;2 cycle nop
  6274  0DB5  2DB6               	nop2	;2 cycle nop
  6275  0DB6  0000               	nop
  6276                           
  6277                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  6278  0DB7  120A  158A  26CA   	fcall	i1_LCDBusyLoop
  6279  0DBA  0008               	return
  6280  0DBB                     __end_ofi1_LCDByte:	
  6281                           
  6282                           	psect	text31
  6283  0ECA                     __ptext31:	
  6284 ;; *************** function i1_LCDBusyLoop *****************
  6285 ;; Defined at:
  6286 ;;		line 135 in file "lcd_hd44780_pic16.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;		None
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  6291 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  6292 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      void 
  6295 ;; Registers used:
  6296 ;;		wreg, status,2, status,0
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6302 ;;      Params:         0       0       0       0       0
  6303 ;;      Locals:         3       0       0       0       0
  6304 ;;      Temps:          2       0       0       0       0
  6305 ;;      Totals:         5       0       0       0       0
  6306 ;;Total ram usage:        5 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		i1_LCDByte
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           
  6316                           ;psect for function i1_LCDBusyLoop
  6317  0ECA                     i1_LCDBusyLoop:	
  6318                           
  6319                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  6320                           
  6321                           ;incstack = 0
  6322                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  6323  0ECA  01F4               	clrf	i1LCDBusyLoop@status
  6324                           
  6325                           ;lcd_hd44780_pic16.c: 142: TRISA|=(0x0f<<4);
  6326  0ECB  30F0               	movlw	240
  6327  0ECC  00F0               	movwf	??i1_LCDBusyLoop
  6328  0ECD  0870               	movf	??i1_LCDBusyLoop,w
  6329  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  6330  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  6331  0ED0  0485               	iorwf	5,f	;volatile
  6332                           
  6333                           ;lcd_hd44780_pic16.c: 145: (RA2=1);
  6334  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  6335  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  6336  0ED3  1505               	bsf	5,2	;volatile
  6337                           
  6338                           ;lcd_hd44780_pic16.c: 146: (RA1=0);
  6339  0ED4  1085               	bcf	5,1	;volatile
  6340                           
  6341                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  6342  0ED5  2ED6               	nop2	;2 cycle nop
  6343  0ED6                     i1l1933:	
  6344                           ;lcd_hd44780_pic16.c: 153: do
  6345                           
  6346                           
  6347                           ;lcd_hd44780_pic16.c: 154: {
  6348                           ;lcd_hd44780_pic16.c: 156: (RA3=1);
  6349  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  6350  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  6351  0ED8  1585               	bsf	5,3	;volatile
  6352                           
  6353                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  6354  0ED9  2EDA               	nop2	;2 cycle nop
  6355                           
  6356                           ;lcd_hd44780_pic16.c: 161: status=(PORTA>>4);
  6357  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  6358  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  6359  0EDC  0805               	movf	5,w	;volatile
  6360  0EDD  00F0               	movwf	??i1_LCDBusyLoop
  6361  0EDE  3004               	movlw	4
  6362  0EDF                     u166_25:	
  6363  0EDF  1003               	clrc
  6364  0EE0  0CF0               	rrf	??i1_LCDBusyLoop,f
  6365  0EE1  3EFF               	addlw	-1
  6366  0EE2  1D03               	skipz
  6367  0EE3  2EDF               	goto	u166_25
  6368  0EE4  0870               	movf	??i1_LCDBusyLoop,w
  6369  0EE5  00F1               	movwf	??i1_LCDBusyLoop+1
  6370  0EE6  0871               	movf	??i1_LCDBusyLoop+1,w
  6371  0EE7  00F4               	movwf	i1LCDBusyLoop@status
  6372                           
  6373                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  6374  0EE8  0874               	movf	i1LCDBusyLoop@status,w
  6375  0EE9  00F0               	movwf	??i1_LCDBusyLoop
  6376  0EEA  3003               	movlw	3
  6377  0EEB                     u167_25:	
  6378  0EEB  1003               	clrc
  6379  0EEC  0DF0               	rlf	??i1_LCDBusyLoop,f
  6380  0EED  3EFF               	addlw	-1
  6381  0EEE  1D03               	skipz
  6382  0EEF  2EEB               	goto	u167_25
  6383  0EF0  1003               	clrc
  6384  0EF1  0D70               	rlf	??i1_LCDBusyLoop,w
  6385  0EF2  00F1               	movwf	??i1_LCDBusyLoop+1
  6386  0EF3  0871               	movf	??i1_LCDBusyLoop+1,w
  6387  0EF4  00F4               	movwf	i1LCDBusyLoop@status
  6388                           
  6389                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  6390  0EF5  2EF6               	nop2	;2 cycle nop
  6391                           
  6392                           ;lcd_hd44780_pic16.c: 167: (RA3=0);
  6393  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  6394  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  6395  0EF8  1185               	bcf	5,3	;volatile
  6396                           
  6397                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  6398  0EF9  2EFA               	nop2	;2 cycle nop
  6399  0EFA  2EFB               	nop2	;2 cycle nop
  6400  0EFB  0000               	nop
  6401                           
  6402                           ;lcd_hd44780_pic16.c: 170: (RA3=1);
  6403  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  6404  0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  6405  0EFE  1585               	bsf	5,3	;volatile
  6406                           
  6407                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  6408  0EFF  2F00               	nop2	;2 cycle nop
  6409                           
  6410                           ;lcd_hd44780_pic16.c: 173: temp=(PORTA>>4);
  6411  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  6412  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  6413  0F02  0805               	movf	5,w	;volatile
  6414  0F03  00F0               	movwf	??i1_LCDBusyLoop
  6415  0F04  3004               	movlw	4
  6416  0F05                     u168_25:	
  6417  0F05  1003               	clrc
  6418  0F06  0CF0               	rrf	??i1_LCDBusyLoop,f
  6419  0F07  3EFF               	addlw	-1
  6420  0F08  1D03               	skipz
  6421  0F09  2F05               	goto	u168_25
  6422  0F0A  0870               	movf	??i1_LCDBusyLoop,w
  6423  0F0B  00F1               	movwf	??i1_LCDBusyLoop+1
  6424  0F0C  0871               	movf	??i1_LCDBusyLoop+1,w
  6425  0F0D  00F3               	movwf	i1LCDBusyLoop@temp
  6426                           
  6427                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  6428  0F0E  300F               	movlw	15
  6429  0F0F  00F0               	movwf	??i1_LCDBusyLoop
  6430  0F10  0870               	movf	??i1_LCDBusyLoop,w
  6431  0F11  05F3               	andwf	i1LCDBusyLoop@temp,f
  6432                           
  6433                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  6434  0F12  0874               	movf	i1LCDBusyLoop@status,w
  6435  0F13  0473               	iorwf	i1LCDBusyLoop@temp,w
  6436  0F14  00F0               	movwf	??i1_LCDBusyLoop
  6437  0F15  0870               	movf	??i1_LCDBusyLoop,w
  6438  0F16  00F4               	movwf	i1LCDBusyLoop@status
  6439                           
  6440                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  6441  0F17  0874               	movf	i1LCDBusyLoop@status,w
  6442  0F18  3980               	andlw	128
  6443  0F19  00F0               	movwf	??i1_LCDBusyLoop
  6444  0F1A  0870               	movf	??i1_LCDBusyLoop,w
  6445  0F1B  00F2               	movwf	i1LCDBusyLoop@busy
  6446                           
  6447                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  6448  0F1C  2F1D               	nop2	;2 cycle nop
  6449                           
  6450                           ;lcd_hd44780_pic16.c: 182: (RA3=0);
  6451  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  6452  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  6453  0F1F  1185               	bcf	5,3	;volatile
  6454                           
  6455                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  6456  0F20  2F21               	nop2	;2 cycle nop
  6457  0F21  2F22               	nop2	;2 cycle nop
  6458  0F22  0000               	nop
  6459                           
  6460                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  6461  0F23  0872               	movf	i1LCDBusyLoop@busy,w
  6462  0F24  1D03               	btfss	3,2
  6463  0F25  2ED6               	goto	i1l1933
  6464                           
  6465                           ;lcd_hd44780_pic16.c: 186: (RA2=0);
  6466  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  6467  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  6468  0F28  1105               	bcf	5,2	;volatile
  6469                           
  6470                           ;lcd_hd44780_pic16.c: 189: TRISA&=(~(0x0F<<4));
  6471  0F29  300F               	movlw	15
  6472  0F2A  00F0               	movwf	??i1_LCDBusyLoop
  6473  0F2B  0870               	movf	??i1_LCDBusyLoop,w
  6474  0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  6475  0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  6476  0F2E  0585               	andwf	5,f	;volatile
  6477  0F2F  0008               	return
  6478  0F30                     __end_ofi1_LCDBusyLoop:	
  6479                           
  6480                           	psect	text32
  6481  0BD3                     __ptext32:	
  6482 ;; *************** function _USARTHandleRxInt *****************
  6483 ;; Defined at:
  6484 ;;		line 95 in file "usart_pic16.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  data            1    4[COMMON] unsigned char 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  1    wreg      void 
  6491 ;; Registers used:
  6492 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6498 ;;      Params:         0       0       0       0       0
  6499 ;;      Locals:         1       0       0       0       0
  6500 ;;      Temps:          4       0       0       0       0
  6501 ;;      Totals:         5       0       0       0       0
  6502 ;;Total ram usage:        5 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		_ISR
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           
  6512                           ;psect for function _USARTHandleRxInt
  6513  0BD3                     _USARTHandleRxInt:	
  6514                           
  6515                           ;usart_pic16.c: 97: if(RB1==1)
  6516                           
  6517                           ;incstack = 0
  6518                           ; Regs used in _USARTHandleRxInt: [wreg-fsr0h+status,2+status,0]
  6519  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  6520  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  6521  0BD5  1C86               	btfss	6,1	;volatile
  6522  0BD6  2BD9               	goto	i1l234
  6523                           
  6524                           ;usart_pic16.c: 98: RB1=0;
  6525  0BD7  1086               	bcf	6,1	;volatile
  6526  0BD8  2BDA               	goto	i1l2453
  6527  0BD9                     i1l234:	
  6528                           
  6529                           ;usart_pic16.c: 99: else
  6530                           ;usart_pic16.c: 100: RB1=1;
  6531  0BD9  1486               	bsf	6,1	;volatile
  6532  0BDA                     i1l2453:	
  6533                           
  6534                           ;usart_pic16.c: 103: char data=RCREG;
  6535  0BDA  081A               	movf	26,w	;volatile
  6536  0BDB  00F0               	movwf	??_USARTHandleRxInt
  6537  0BDC  0870               	movf	??_USARTHandleRxInt,w
  6538  0BDD  00F4               	movwf	USARTHandleRxInt@data
  6539                           
  6540                           ;usart_pic16.c: 106: if(((UQEnd==64-1) && UQFront==0) || ((UQEnd+1)==UQFront))
  6541  0BDE  303F               	movlw	63
  6542  0BDF  0656               	xorwf	_UQEnd,w	;volatile
  6543  0BE0  1903               	btfsc	3,2
  6544  0BE1  0857               	movf	_UQFront,w	;volatile
  6545  0BE2  1903               	btfsc	3,2
  6546  0BE3  2BF9               	goto	i1l2461
  6547  0BE4  0857               	movf	_UQFront,w	;volatile
  6548  0BE5  00F0               	movwf	??_USARTHandleRxInt
  6549  0BE6  01F1               	clrf	??_USARTHandleRxInt+1
  6550  0BE7  1BF0               	btfsc	??_USARTHandleRxInt,7
  6551  0BE8  03F1               	decf	??_USARTHandleRxInt+1,f
  6552  0BE9  3001               	movlw	1
  6553  0BEA  0756               	addwf	_UQEnd,w	;volatile
  6554  0BEB  00F2               	movwf	??_USARTHandleRxInt+2
  6555  0BEC  01F3               	clrf	??_USARTHandleRxInt+3
  6556  0BED  1803               	skipnc
  6557  0BEE  0AF3               	incf	??_USARTHandleRxInt+3,f
  6558  0BEF  1BD6               	btfsc	_UQEnd,7	;volatile
  6559  0BF0  03F3               	decf	??_USARTHandleRxInt+3,f
  6560  0BF1  0871               	movf	??_USARTHandleRxInt+1,w
  6561  0BF2  0673               	xorwf	??_USARTHandleRxInt+3,w
  6562  0BF3  1D03               	skipz
  6563  0BF4  2BF7               	goto	u258_25
  6564  0BF5  0870               	movf	??_USARTHandleRxInt,w
  6565  0BF6  0672               	xorwf	??_USARTHandleRxInt+2,w
  6566  0BF7                     u258_25:	
  6567  0BF7  1D03               	skipz
  6568  0BF8  2C03               	goto	i1l2465
  6569  0BF9                     i1l2461:	
  6570                           
  6571                           ;usart_pic16.c: 107: {
  6572                           ;usart_pic16.c: 109: UQFront++;
  6573  0BF9  3001               	movlw	1
  6574  0BFA  00F0               	movwf	??_USARTHandleRxInt
  6575  0BFB  0870               	movf	??_USARTHandleRxInt,w
  6576  0BFC  1283               	bcf	3,5	;RP0=0, select bank0
  6577  0BFD  1303               	bcf	3,6	;RP1=0, select bank0
  6578  0BFE  07D7               	addwf	_UQFront,f	;volatile
  6579                           
  6580                           ;usart_pic16.c: 110: if(UQFront==64) UQFront=0;
  6581  0BFF  3040               	movlw	64
  6582  0C00  0657               	xorwf	_UQFront,w	;volatile
  6583  0C01  1903               	btfsc	3,2
  6584  0C02  01D7               	clrf	_UQFront	;volatile
  6585  0C03                     i1l2465:	
  6586                           
  6587                           ;usart_pic16.c: 111: }
  6588                           ;usart_pic16.c: 113: if(UQEnd==64-1)
  6589  0C03  303F               	movlw	63
  6590  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  6591  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  6592  0C06  0656               	xorwf	_UQEnd,w	;volatile
  6593  0C07  1D03               	btfss	3,2
  6594  0C08  2C0B               	goto	i1l2469
  6595                           
  6596                           ;usart_pic16.c: 114: UQEnd=0;
  6597  0C09  01D6               	clrf	_UQEnd	;volatile
  6598  0C0A  2C0F               	goto	i1l2471
  6599  0C0B                     i1l2469:	
  6600                           
  6601                           ;usart_pic16.c: 115: else
  6602                           ;usart_pic16.c: 116: UQEnd++;
  6603  0C0B  3001               	movlw	1
  6604  0C0C  00F0               	movwf	??_USARTHandleRxInt
  6605  0C0D  0870               	movf	??_USARTHandleRxInt,w
  6606  0C0E  07D6               	addwf	_UQEnd,f	;volatile
  6607  0C0F                     i1l2471:	
  6608                           
  6609                           ;usart_pic16.c: 118: URBuff[UQEnd]=data;
  6610  0C0F  0874               	movf	USARTHandleRxInt@data,w
  6611  0C10  00F0               	movwf	??_USARTHandleRxInt
  6612  0C11  0856               	movf	_UQEnd,w
  6613  0C12  3E90               	addlw	(low (_URBuff| (0+256)))& (0+255)
  6614  0C13  0084               	movwf	4
  6615  0C14  0870               	movf	??_USARTHandleRxInt,w
  6616  0C15  1783               	bsf	3,7	;select IRP bank3
  6617  0C16  0080               	movwf	0
  6618                           
  6619                           ;usart_pic16.c: 120: if(UQFront==-1) UQFront=0;
  6620  0C17  0A57               	incf	_UQFront,w	;volatile
  6621  0C18  1D03               	btfss	3,2
  6622  0C19  0008               	return
  6623  0C1A  01D7               	clrf	_UQFront	;volatile
  6624  0C1B  0008               	return
  6625  0C1C                     __end_of_USARTHandleRxInt:	
  6626  007E                     btemp	set	126	;btemp
  6627  007E                     wtemp	set	126
  6628  007E                     wtemp0	set	126
  6629  0080                     wtemp1	set	128
  6630  0082                     wtemp2	set	130
  6631  0084                     wtemp3	set	132
  6632  0086                     wtemp4	set	134
  6633  0088                     wtemp5	set	136
  6634  007F                     wtemp6	set	127
  6635  007E                     ttemp	set	126
  6636  007E                     ttemp0	set	126
  6637  0081                     ttemp1	set	129
  6638  0084                     ttemp2	set	132
  6639  0087                     ttemp3	set	135
  6640  007F                     ttemp4	set	127
  6641  007E                     ltemp	set	126
  6642  007E                     ltemp0	set	126
  6643  0082                     ltemp1	set	130
  6644  0086                     ltemp2	set	134
  6645  0080                     ltemp3	set	128


Data Sizes:
    Strings     404
    Constant    0
    Data        14
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     47      61
    BANK1            80     23      34
    BANK3            96      0      64
    BANK2            96      0       0

Pointer List with Targets:

    USARTWriteLine@str	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_18(CODE[48]), STR_17(CODE[29]), STR_16(CODE[24]), STR_15(CODE[1]), 
		 -> STR_14(CODE[39]), STR_13(CODE[2]), STR_12(CODE[27]), STR_11(CODE[45]), 
		 -> STR_10(CODE[3]), STR_9(CODE[17]), STR_8(CODE[44]), STR_7(CODE[46]), 
		 -> STR_6(CODE[29]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[48]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 48
		 -> STR_18(CODE[48]), STR_17(CODE[29]), STR_16(CODE[24]), STR_15(CODE[1]), 
		 -> STR_14(CODE[39]), STR_13(CODE[2]), STR_12(CODE[27]), STR_11(CODE[45]), 
		 -> STR_10(CODE[3]), STR_9(CODE[17]), STR_8(CODE[44]), STR_7(CODE[46]), 
		 -> STR_6(CODE[29]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[48]), 

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_22(CODE[4]), STR_21(CODE[13]), STR_20(CODE[4]), STR_19(CODE[17]), 
		 -> STR_2(CODE[4]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    _ISR->i1_LCDWriteString
    i1_LCDWriteString->i1_LCDByte
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _USARTWriteLine->_USARTWriteString
    _USARTWriteString->_USARTWriteChar
    _USARTGotoNewLine->_USARTWriteChar
    _LM35ReadTemp->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _main->_LM35ReadTemp
    _LM35ReadTemp->___fttol

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   15377
                                             18 BANK1      5     5      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                       _LM35ReadTemp
                     _TuneButtonInit
                 _USARTDataAvailable
                   _USARTGotoNewLine
                          _USARTInit
                      _USARTReadData
                     _USARTWriteChar
                     _USARTWriteLine
 ---------------------------------------------------------------------------------
 (1) _USARTWriteLine                                       2     0      2    1199
                                             22 BANK0      2     0      2
                     _USARTWriteChar
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (2) _USARTWriteString                                     2     0      2     131
                                             20 BANK0      2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (1) _USARTReadData                                        2     2      0      23
                                             19 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _USARTInit                                            3     1      2      86
                                             19 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _USARTGotoNewLine                                     0     0      0      22
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (3) _USARTWriteChar                                       1     1      0      22
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USARTDataAvailable                                   1     1      0       0
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35ReadTemp                                         7     5      2    5028
                                             14 BANK1      4     2      2
                            _ReadADC
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2078
                                             27 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                              0 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2446
                                             31 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1992
                                             19 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2      22
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1720
                                             31 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2973
                                             31 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     552
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     556
                                             19 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1416
                                             31 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1611
                                             31 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1209
                                             24 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                             19 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    3378
                                             12 BANK0      7     7      0
                   _USARTHandleRxInt
                          i1_LCDByte
                        i1_LCDGotoXY
                      i1_LCDWriteInt
                   i1_LCDWriteString
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteString                                     4     2      2     714
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    1553
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     605
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     483
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (5) _USARTHandleRxInt                                     5     5      0      23
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LM35ReadTemp
     _ReadADC
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _TuneButtonInit
   _USARTDataAvailable
   _USARTGotoNewLine
     _USARTWriteChar
   _USARTInit
   _USARTReadData
   _USARTWriteChar
   _USARTWriteLine
     _USARTWriteChar
     _USARTWriteString
       _USARTWriteChar

 _ISR (ROOT)
   _USARTHandleRxInt
   i1_LCDByte
     i1_LCDBusyLoop
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod
   i1_LCDWriteString
     i1_LCDByte
       i1_LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      40       9       66.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     17      22       7       42.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2F      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AD      12        0.0%
ABS                  0      0      AD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Aug 14 14:29:31 2016

               ?_LCDBusyLoop 0070                   __CFG_CP$ON 0000           ??i1_LCDWriteString 0020  
                          pc 0002                           l20 02F4                           l44 0D24  
                         l45 0D25                           l90 02C2                           l89 02D9  
                __CFG_CPD$ON 0000                 ___awdiv@sign 0039                           fsr 0004  
         USARTInit@baud_rate 0033                  __CFG_LVP$ON 0000                          l212 0BC1  
                        l219 0A6E                          l175 01BB                          l545 0299  
                        l546 02A1                          l538 0284                          l629 0711  
       ??_USARTDataAvailable 0033                          _GIE 005F                          _RA1 0029  
                        _RA2 002A                          _RB1 0031                          _RA3 002B  
                        _RB4 0034                          _ISR 072B               ?_USARTReadData 0070  
                        fsr0 0004              __end_of_ADCInit 0AB4                          indf 0000  
               ___awmod@sign 0039                 __CFG_IESO$ON 0000        LM35ReadTemp@adc_value 00B0  
    LCDWriteInt@field_length 0041              __end_of_LCDByte 0D62              __end_of_LCDInit 1000  
               ?_LCDWriteInt 003F                         ?_ISR 0070                  LCDByte@temp 003E  
                       l2031 0E2B                         l2111 04C2                         l2015 0B40  
                       l2041 0E33                         l2025 0E20                         l2105 04AC  
                       l2043 0E41                         l2123 0501                         l2053 0E62  
                       l2135 0529                         l2127 0511                         l3031 015C  
                       l2057 0E6A                         l2049 0E57                         l2081 0C80  
                       l2073 0C7A                         l3041 0198                         l3017 0126  
                       l2083 0C8E                         l2091 0CA7                         l2139 0539  
                       l2069 0C73                         l2095 0CAF                         l2087 0C9C  
                       l2407 0591                         l3047 01BE                         l2433 02C4  
                       l2417 05DB                         l2409 05C6                         l3161 0BB7  
                       l3057 01E3                         l3065 0220                         l2435 02C6  
                       l3163 0BBC                         l1901 0269                         l3157 0BAD  
                       l2439 02CB                         l2383 0EB1                         l1911 0293  
                       l1903 026E                         l2535 0B1B                         l2527 0B0E  
                       l2519 0B01                         l3159 0BB2                         l2551 0B36  
                       l2481 0B95                         l2545 0B24                         l1851 0F3E  
                       l2379 0EA7                         l2387 0E6F                         l2483 0B97  
                       l2555 0B3E                         l1909 0289                         l2485 0B99  
                       l2479 0B93                         l2489 0B9E                         l2931 06B7  
                       l1895 0256                         l2951 06F9                         l1899 025D  
                       l2963 0722                         l2957 0706                         l2949 06E9  
                       l2959 0714                         STR_1 044B                 __CFG_WDTE$ON 0000  
                       STR_2 0490                         STR_3 0300                         STR_4 0485  
                       STR_5 047A                         STR_6 03DE                         STR_7 0330  
                       STR_8 038B                         STR_9 045C                         u2015 0512  
                       u2025 051A                         u3015 06EA                         u1505 0F53  
                       u2065 053A                         u1515 0F6D                         u2075 0542  
                       u1605 028C                         u3045 0708                         u3127 018C  
                       u3137 0219                         u1715 0D11                         u2515 05E8  
                       u3147 02EE                         u3157 0F9F                         u1645 02A8  
                       u1565 0262                         u3085 0156                         u1495 0F47  
                       u1735 0D2C                         u1815 0E42                         u3095 01B5  
                       u1745 0D48                         u1825 0E4E                         u1585 027D  
                       u1835 0E58                         u1915 0C94                         u1925 0C9D  
                       u1795 0E36                         _PEIE 005E                         u1895 0C83  
                       u1975 04CE                         u1985 04E0                         _RCIE 0465  
                       i1l44 0D7B                         _RCIF 0065                         i1l45 0D7E  
                       u2985 06BE                         i1l90 0B6D                         i1l89 0B84  
                _tuneTempDir 00BF                 __CFG_WRT$OFF 0000       __end_of_USARTWriteChar 0A73  
              __CFG_FCMEN$ON 0000       __end_of_USARTWriteLine 0ACA                         _main 0048  
               ___ftpack@arg 0033       __end_of_TuneButtonInit 0AFA           __size_of_LCDGotoXY 0026  
               ___ftpack@exp 0036                         btemp 007E            USARTReadData@data 0034  
              __CFG_BOREN$ON 0000                         ltemp 007E                         start 0012  
                       ttemp 007E                         wtemp 007E    i1LCDWriteInt@field_length 0022  
              __CFG_MCLRE$ON 0000                 ___ftmul@cntr 004D                 ___ftmul@sign 004E  
            __end_of_ReadADC 02FF                        ??_ISR 002C           __size_ofi1_LCDByte 0059  
               ___fttol@exp1 00AD                 ___fttol@lval 00A9            ?_USARTHandleRxInt 0070  
               ?i1_LCDGotoXY 007C                        ?_main 0070               i1___awdiv@sign 0076  
            __end_of___awdiv 0E6F           ??_USARTHandleRxInt 0070                        STR_10 0482  
                      STR_11 035E                        STR_20 0490                        STR_12 0418  
                      STR_13 03B5                        STR_21 046D                        STR_22 0490  
                      STR_14 03B7                        STR_15 03B6                        STR_16 0433  
                      STR_17 03FB                        STR_18 0300                        STR_19 044B  
            __end_of___awmod 0CB4                 LCDInit@style 0041             USARTWriteChar@ch 0033  
            __end_of___ftmul 0567              ___awdiv@divisor 0033              __end_of___fttol 072B  
                      i1l234 0BD9                        i1l168 07A0              ___awdiv@counter 0038  
                      _RCREG 001A                        _SPBRG 0099                        _PORTA 0005  
                      _TRISA 0085                        _TXREG 0019                        _UQEnd 0056  
             i1___awmod@sign 0076                ___ftpack@sign 0037                        main@n 00B5  
       __end_of_LM35ReadTemp 07FC                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
         __size_of_USARTInit 0048              ?_USARTWriteChar 0070              ?_USARTWriteLine 0036  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F              ?_TuneButtonInit 0070           __size_ofi1___awdiv 0059  
         __size_ofi1___awmod 004B              __initialization 0015                 __end_of_main 024C  
                  ??_ADCInit 0033              ??_USARTReadData 0033                       ??_main 00B2  
              ___fttol@sign1 00A8            __end_of_LCDGotoXY 02E0                LCDByte@isdata 0038  
                  ??_LCDByte 0039                    ??_LCDInit 003F                       _ADRESH 001E  
                     _ADRESL 009E             ___awdiv@dividend 0035            __end_ofi1_LCDByte 0DBB  
           __end_of___ftpack 02BA       __size_ofi1_LCDBusyLoop 0066                       i1l2303 0C62  
                     i1l2233 0DC5                       i1l2251 0DE6                       i1l2261 0E07  
                     i1l2239 0DD0                       i1l2265 0E0F                       i1l2257 0DFC  
                     i1l2249 0DD8                       i1l2281 0C2D                       i1l2601 062C  
                     i1l2291 0C41                       i1l2611 0676                       i1l2603 0661  
                     i1l2461 0BF9                       i1l2453 0BDA                       i1l2277 0C26  
                     i1l2471 0C0F                       i1l2295 0C4F                       i1l2465 0C03  
                     i1l2633 0B76                       i1l2289 0C33                       i1l2627 0B6F  
                     i1l2299 0C5A                       i1l2651 075B                       i1l2469 0C0B  
                     i1l1933 0ED6                       i1l2629 0B71                       i1l2573 0CEC  
                     i1l2581 0CB4                       i1l2663 078F                       i1l2577 0CF4  
        i1LCDBusyLoop@status 0074                       u221_25 0D85                       u222_25 0DA1  
                     u230_25 0DFD                       u226_25 0DDB                       u219_25 0D66  
                     u228_25 0DE7                       u236_25 0C36                       u316_27 0783  
                     u229_25 0DF3                       u166_25 0EDF                       u238_25 0C47  
                     u167_25 0EEB                       u239_25 0C50                       u168_25 0F05  
           __end_of___lwtoft 0AE2                       u258_25 0BF7                       u275_25 0683  
                     u279_25 0755                    ??_ReadADC 0035                       _URBuff 0190  
             __CFG_PWRTE$OFF 0000               _LCDWriteString 0E6F            USARTWriteLine@str 0036  
          ?_USARTGotoNewLine 0070                    ??___awdiv 0037                    ??___awmod 0037  
                  ??___ftmul 0045                    ??___fttol 00A4           ??_USARTGotoNewLine 0034  
     __size_ofi1_LCDWriteInt 009B     __end_of_USARTWriteString 0B65         __size_of_LCDBusyLoop 0068  
           i1LCDWriteInt@val 0020             i1LCDWriteInt@str 0023             ___awdiv@quotient 003A  
            ___awmod@divisor 0033              ___awmod@counter 0038            __end_of_USARTInit 0BD3  
      ___ftmul@f3_as_product 004A            __end_ofi1___awdiv 0E14            __end_ofi1___awmod 0C67  
               LCDWriteInt@i 004B                 LCDWriteInt@j 0049                       saved_w 007E  
       __size_of_LCDWriteInt 009B      __end_of__initialization 0044       __end_of_LCDWriteString 0ECA  
                  LCDByte@hn 003B                    LCDByte@ln 003C                   ___ftmul@f1 003F  
                 ___ftmul@f2 0042                   ___fttol@f1 00A0               __pcstackCOMMON 0070  
               __pidataBANK0 0A66                 __pidataBANK1 0A7B                i1_LCDBusyLoop 0ECA  
                 ___lwtoft@c 003B                 i1LCDGotoXY@x 0020                 i1LCDGotoXY@y 007C  
          i1LCDBusyLoop@busy 0072               _OPTION_REGbits 0081            i1LCDBusyLoop@temp 0073  
       __size_ofi1_LCDGotoXY 0026    __size_ofi1_LCDWriteString 0057        __size_of_LM35ReadTemp 0050  
             i1LCDWriteInt@i 002A               i1LCDWriteInt@j 0028              i1LCDByte@isdata 0075  
              i1_LCDWriteInt 0602                   __pbssBANK0 004F                   __pbssBANK1 00C0  
                 __pbssBANK3 0190              ?_LCDWriteString 003F                   __pmaintext 0048  
             ?i1_LCDBusyLoop 0070                   __pintentry 0004                      _ADCInit 0AA0  
               _LM35ReadTemp 07AC                    ?___ftpack 0033                    ?___lwtoft 003B  
__size_of_USARTDataAvailable 0023           i1___awdiv@dividend 0072                      _LCDByte 0D0B  
                    _LCDInit 0F98             ??_USARTWriteChar 0033             ??_USARTWriteLine 0038  
           ??_TuneButtonInit 0033               ?i1_LCDWriteInt 0020           USARTWriteInt@F1617 004F  
  __size_of_USARTHandleRxInt 0049                   __stringtab 0800                      _UQFront 0057  
                    _ReadADC 02E0           i1___awdiv@quotient 0077                      ___cgram 00B7  
                    ___awdiv 0E14                      ___awmod 0C67                      ___ftmul 0494  
                    ___fttol 069D                   ??___ftpack 0038                    _ANSELbits 0188  
                    __ptext1 0AB4                      __ptext2 0B40                      __ptext3 0B1D  
                    __ptext4 0B8B                      __ptext5 0A84                      __ptext6 0A6B  
                    __ptext7 0AFA                      __ptext8 0AE2                      __ptext9 07AC  
                 ??___lwtoft 003E                      _curTemp 00C0                 __size_of_ISR 0081  
           ___awmod@dividend 0035                    _LCDGotoXY 02BA                      clrloop0 0A74  
       end_of_initialization 0044                    i1_LCDByte 0D62              ??i1_LCDBusyLoop 0070  
                  _RCSTAbits 0018                 __pstringtext 0300            ?_USARTWriteString 0034  
      __end_of_USARTReadData 0B40           ??_USARTWriteString 0036            LCDWriteString@msg 003F  
           i1_LCDWriteString 0CB4                    _USARTInit 0B8B                    _TRISAbits 0085  
                  _TRISBbits 0086              ??i1_LCDWriteInt 007C    __size_of_USARTGotoNewLine 000B  
                 ?_LCDGotoXY 003F                    i1___awdiv 0DBB                    i1___awmod 0C1C  
                  ReadADC@ch 0036                   LCDInit@__i 0042                   ?i1_LCDByte 0075  
                  _TXSTAbits 0098                   LCDGotoXY@x 0041                   LCDGotoXY@y 003F  
                ___ftmul@exp 0049                ??_LCDBusyLoop 0033          start_initialization 0015  
                 ?_USARTInit 0033                  __end_of_ISR 07AC                   ?i1___awdiv 0070  
                 ?i1___awmod 0070                ??_LCDWriteInt 0042             _USARTHandleRxInt 0BD3  
           ??_LCDWriteString 0041                i1LCDByte@temp 007B     __CFG_FOSC$INTRC_NOCLKOUT 0000  
                 init_fetch0 0A8F                  __pdataBANK0 0058                  __pdataBANK1 00B7  
         i1___awmod@dividend 0072                     ?_ADCInit 0070                ??i1_LCDGotoXY 007D  
        __end_of_LCDBusyLoop 0F98                     ?_LCDByte 0038                     ?_LCDInit 0070  
          __size_of___ftpack 006E                     LCDByte@c 003D                    ___latbits 0002  
          __size_of___lwtoft 0018                __pcstackBANK0 0020                __pcstackBANK1 00A0  
                ??_LCDGotoXY 0040                  i1LCDByte@hn 0079                  i1LCDByte@ln 007A  
           LCDWriteInt@F1632 0058                  ??i1_LCDByte 0076                     ?_ReadADC 0033  
        __end_of_LCDWriteInt 0602                     ?___awdiv 0033                     ?___awmod 0033  
                   ?___ftmul 003F                     ?___fttol 00A0            i1___awdiv@divisor 0070  
 __end_of_USARTDataAvailable 0B1D            i1___awdiv@counter 0075                    __pstrings 0800  
                ??_USARTInit 0035             _USARTGotoNewLine 0A84          __end_ofi1_LCDGotoXY 0B8B  
            LCDBusyLoop@busy 0035                  ??i1___awdiv 0074                  ??i1___awmod 0074  
            LCDBusyLoop@temp 0036            interrupt_function 0004                     _IOCBbits 0096  
                  clear_ram0 0A73     __end_ofi1_LCDWriteString 0D0B                     _PIR1bits 000C  
                _LCDBusyLoop 0F30             LCDWriteString@cc 0042             __size_of_ADCInit 0014  
                 _ADCON0bits 001F                  __stringbase 0812                   _ADCON1bits 009F  
           __size_of_LCDByte 0057             __size_of_LCDInit 0068                  _LCDWriteInt 0567  
  __size_of_USARTWriteString 0025      __size_of_USARTWriteChar 0008             __size_of_ReadADC 001F  
    __size_of_USARTWriteLine 0016      __size_of_TuneButtonInit 0018        __end_ofi1_LCDBusyLoop 0F30  
          i1___awmod@divisor 0070     __end_of_USARTHandleRxInt 0C1C            i1___awmod@counter 0075  
           __size_of___awdiv 005B             __size_of___awmod 004D             __size_of___ftmul 00D3  
           __size_of___fttol 008E            LCDBusyLoop@status 0037                     ___ftpack 024C  
         __end_of__stringtab 0812                  i1_LCDGotoXY 0B65                     ___lwtoft 0ACA  
                 i1LCDByte@c 0078                   _ANSELHbits 0189                     __ptext10 0ACA  
                   __ptext11 069D                     __ptext20 02BA                     __ptext12 0494  
                   __ptext21 0D0B                     __ptext13 024C                     __ptext30 0D62  
                   __ptext22 0F30                     __ptext14 02E0                     __ptext31 0ECA  
                   __ptext23 0AA0                     __ptext15 0E6F                     __ptext32 0BD3  
                   __ptext24 072B                     __ptext16 0567                     __ptext25 0CB4  
                   __ptext17 0C67                     __ptext26 0602                     __ptext18 0E14  
                   __ptext27 0C1C                     __ptext19 0F98                     __ptext28 0DBB  
                   __ptext29 0B65            __CFG_BOR4V$BOR21V 0000        __end_ofi1_LCDWriteInt 069D  
              __size_of_main 0204          i1LCDWriteString@msg 007C       __size_of_USARTReadData 0023  
              ?_LM35ReadTemp 00AE                     main@data 00B6                     _tuneTemp 0054  
                 _INTCONbits 000B                     init_ram0 0A93                     intlevel1 0000  
             LCDWriteInt@val 003F               LCDWriteInt@str 0044           i1LCDWriteString@cc 0021  
                  stringcode 080A     __end_of_USARTGotoNewLine 0A8F          USARTWriteString@str 0034  
             ??_LM35ReadTemp 004F                _USARTReadData 0B1D         USARTHandleRxInt@data 0074  
                   stringtab 0800           _USARTDataAvailable 0AFA             _USARTWriteString 0B40  
        ?_USARTDataAvailable 0070               _USARTWriteChar 0A6B               _USARTWriteLine 0AB4  
             _TuneButtonInit 0AE2            ?i1_LCDWriteString 007C      __size_of_LCDWriteString 005B  
