

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Jun 26 16:47:10 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  0105                     	;# 
   188  0107                     	;# 
   189  0108                     	;# 
   190  0109                     	;# 
   191  010C                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0185                     	;# 
   197  0187                     	;# 
   198  0188                     	;# 
   199  0189                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0089                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  008F                     	;# 
   245  0090                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0093                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  0105                     	;# 
   264  0107                     	;# 
   265  0108                     	;# 
   266  0109                     	;# 
   267  010C                     	;# 
   268  010C                     	;# 
   269  010D                     	;# 
   270  010E                     	;# 
   271  010F                     	;# 
   272  0185                     	;# 
   273  0187                     	;# 
   274  0188                     	;# 
   275  0189                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  0000                     	;# 
   279  0001                     	;# 
   280  0002                     	;# 
   281  0003                     	;# 
   282  0004                     	;# 
   283  0005                     	;# 
   284  0006                     	;# 
   285  0007                     	;# 
   286  0009                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000D                     	;# 
   291  000E                     	;# 
   292  000E                     	;# 
   293  000F                     	;# 
   294  0010                     	;# 
   295  0011                     	;# 
   296  0012                     	;# 
   297  0013                     	;# 
   298  0014                     	;# 
   299  0015                     	;# 
   300  0015                     	;# 
   301  0016                     	;# 
   302  0017                     	;# 
   303  0018                     	;# 
   304  0019                     	;# 
   305  001A                     	;# 
   306  001B                     	;# 
   307  001B                     	;# 
   308  001C                     	;# 
   309  001D                     	;# 
   310  001E                     	;# 
   311  001F                     	;# 
   312  0081                     	;# 
   313  0085                     	;# 
   314  0086                     	;# 
   315  0087                     	;# 
   316  0089                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  008E                     	;# 
   320  008F                     	;# 
   321  0090                     	;# 
   322  0091                     	;# 
   323  0092                     	;# 
   324  0093                     	;# 
   325  0093                     	;# 
   326  0093                     	;# 
   327  0094                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0097                     	;# 
   331  0098                     	;# 
   332  0099                     	;# 
   333  009A                     	;# 
   334  009B                     	;# 
   335  009C                     	;# 
   336  009D                     	;# 
   337  009E                     	;# 
   338  009F                     	;# 
   339  0105                     	;# 
   340  0107                     	;# 
   341  0108                     	;# 
   342  0109                     	;# 
   343  010C                     	;# 
   344  010C                     	;# 
   345  010D                     	;# 
   346  010E                     	;# 
   347  010F                     	;# 
   348  0185                     	;# 
   349  0187                     	;# 
   350  0188                     	;# 
   351  0189                     	;# 
   352  018C                     	;# 
   353  018D                     	;# 
   354  0000                     	;# 
   355  0001                     	;# 
   356  0002                     	;# 
   357  0003                     	;# 
   358  0004                     	;# 
   359  0005                     	;# 
   360  0006                     	;# 
   361  0007                     	;# 
   362  0009                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  000E                     	;# 
   369  000F                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0014                     	;# 
   375  0015                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001B                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  001D                     	;# 
   386  001E                     	;# 
   387  001F                     	;# 
   388  0081                     	;# 
   389  0085                     	;# 
   390  0086                     	;# 
   391  0087                     	;# 
   392  0089                     	;# 
   393  008C                     	;# 
   394  008D                     	;# 
   395  008E                     	;# 
   396  008F                     	;# 
   397  0090                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0093                     	;# 
   401  0093                     	;# 
   402  0093                     	;# 
   403  0094                     	;# 
   404  0095                     	;# 
   405  0096                     	;# 
   406  0097                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009A                     	;# 
   410  009B                     	;# 
   411  009C                     	;# 
   412  009D                     	;# 
   413  009E                     	;# 
   414  009F                     	;# 
   415  0105                     	;# 
   416  0107                     	;# 
   417  0108                     	;# 
   418  0109                     	;# 
   419  010C                     	;# 
   420  010C                     	;# 
   421  010D                     	;# 
   422  010E                     	;# 
   423  010F                     	;# 
   424  0185                     	;# 
   425  0187                     	;# 
   426  0188                     	;# 
   427  0189                     	;# 
   428  018C                     	;# 
   429  018D                     	;# 
   430                           
   431                           	psect	idataBANK1
   432  0C8B                     __pidataBANK1:	
   433                           
   434                           ;initializer for ___cgram
   435  0C8B  340C               	retlw	12
   436  0C8C  3412               	retlw	18
   437  0C8D  3412               	retlw	18
   438  0C8E  340C               	retlw	12
   439  0C8F  3400               	retlw	0
   440  0C90  3400               	retlw	0
   441  0C91  3400               	retlw	0
   442  0C92  3400               	retlw	0
   443                           
   444                           ;initializer for LCDWriteInt@F1646
   445  0C93  34F0               	retlw	240
   446  0C94  34F0               	retlw	240
   447  0C95  34F0               	retlw	240
   448  0C96  34F0               	retlw	240
   449  0C97  34F0               	retlw	240
   450                           
   451                           ;initializer for _mode
   452  0C98  3401               	retlw	1
   453                           
   454                           ;initializer for _pmsg
   455  0C99  34A9               	retlw	low (_msg| 0)
   456                           
   457                           ;initializer for _submode
   458  0C9A  3401               	retlw	1
   459                           
   460                           	psect	strings
   461  0606                     __pstrings:	
   462  0606                     stringtab:	
   463  0606                     __stringtab:	
   464                           
   465                           ;	String table - string pointers are 1 byte each
   466  0606  1BFF               	btfsc	btemp+1,7
   467  0607  2E10               	ljmp	stringcode
   468  0608  1383               	bcf	3,7
   469  0609  187F               	btfsc	btemp+1,0
   470  060A  1783               	bsf	3,7
   471  060B  0800               	movf	0,w
   472  060C  0A84               	incf	4,f
   473  060D  1903               	skipnz
   474  060E  0AFF               	incf	btemp+1,f
   475  060F  0008               	return
   476  0610                     stringcode:	
   477  0610                     stringdir:	
   478  0610  3006               	movlw	high stringdir
   479  0611  008A               	movwf	10
   480  0612  0804               	movf	4,w
   481  0613  0A84               	incf	4,f
   482  0614  0782               	addwf	2,f
   483  0615                     __stringbase:	
   484  0615  3400               	retlw	0
   485  0616                     __end_of__stringtab:	
   486  0616                     _dpowers:	
   487  0616  3401               	retlw	1
   488  0617  3400               	retlw	0
   489  0618  340A               	retlw	10
   490  0619  3400               	retlw	0
   491  061A  3464               	retlw	100
   492  061B  3400               	retlw	0
   493  061C  34E8               	retlw	232
   494  061D  3403               	retlw	3
   495  061E  3410               	retlw	16
   496  061F  3427               	retlw	39
   497  0620                     __end_of_dpowers:	
   498  001F                     _ADCON0bits	set	31
   499  001E                     _ADRESH	set	30
   500  0007                     _PORTC	set	7
   501  0018                     _CARRY	set	24
   502  005F                     _GIE	set	95
   503  0028                     _RA0	set	40
   504  0029                     _RA1	set	41
   505  002A                     _RA2	set	42
   506  002B                     _RA3	set	43
   507  002E                     _RA6	set	46
   508  002F                     _RA7	set	47
   509  0034                     _RB4	set	52
   510  0035                     _RB5	set	53
   511  0036                     _RB6	set	54
   512  0037                     _RB7	set	55
   513  0039                     _RC1	set	57
   514  003A                     _RC2	set	58
   515  003B                     _RC3	set	59
   516  009F                     _ADCON1bits	set	159
   517  009E                     _ADRESL	set	158
   518  0085                     _TRISAbits	set	133
   519  0086                     _TRISBbits	set	134
   520  0087                     _TRISC	set	135
   521  0087                     _TRISCbits	set	135
   522  010D                     _EEADR	set	269
   523  010C                     _EEDATA	set	268
   524  0189                     _ANSELHbits	set	393
   525  0188                     _ANSELbits	set	392
   526  018C                     _EECON1	set	396
   527  018D                     _EECON2	set	397
   528  0C60                     _RD	set	3168
   529  0C61                     _WR	set	3169
   530  0C62                     _WREN	set	3170
   531  0620                     STR_1:	
   532  0620  344D               	retlw	77	;'M'
   533  0621  343A               	retlw	58	;':'
   534  0622  3425               	retlw	37	;'%'
   535  0623  3464               	retlw	100	;'d'
   536  0624  342C               	retlw	44	;','
   537  0625  3425               	retlw	37	;'%'
   538  0626  3464               	retlw	100	;'d'
   539  0627  342C               	retlw	44	;','
   540  0628  3425               	retlw	37	;'%'
   541  0629  3464               	retlw	100	;'d'
   542  062A  342C               	retlw	44	;','
   543  062B  3425               	retlw	37	;'%'
   544  062C  3464               	retlw	100	;'d'
   545  062D  342C               	retlw	44	;','
   546  062E  3425               	retlw	37	;'%'
   547  062F  3464               	retlw	100	;'d'
   548  0630  342C               	retlw	44	;','
   549  0631  3425               	retlw	37	;'%'
   550  0632  3464               	retlw	100	;'d'
   551  0633  3400               	retlw	0
   552  0634                     STR_3:	
   553  0634  3443               	retlw	67	;'C'
   554  0635  343A               	retlw	58	;':'
   555  0636  3425               	retlw	37	;'%'
   556  0637  3464               	retlw	100	;'d'
   557  0638  342C               	retlw	44	;','
   558  0639  3425               	retlw	37	;'%'
   559  063A  3464               	retlw	100	;'d'
   560  063B  342C               	retlw	44	;','
   561  063C  3425               	retlw	37	;'%'
   562  063D  3464               	retlw	100	;'d'
   563  063E  342C               	retlw	44	;','
   564  063F  3425               	retlw	37	;'%'
   565  0640  3464               	retlw	100	;'d'
   566  0641  3400               	retlw	0
   567  0642                     STR_7:	
   568  0642  344E               	retlw	78	;'N'
   569  0643  344F               	retlw	79	;'O'
   570  0644  3454               	retlw	84	;'T'
   571  0645  3445               	retlw	69	;'E'
   572  0646  3444               	retlw	68	;'D'
   573  0647  3449               	retlw	73	;'I'
   574  0648  3454               	retlw	84	;'T'
   575  0649  3420               	retlw	32	;' '
   576  064A  344D               	retlw	77	;'M'
   577  064B  344F               	retlw	79	;'O'
   578  064C  3444               	retlw	68	;'D'
   579  064D  3445               	retlw	69	;'E'
   580  064E  3400               	retlw	0
   581  064F                     STR_8:	
   582  064F  344E               	retlw	78	;'N'
   583  0650  344F               	retlw	79	;'O'
   584  0651  3452               	retlw	82	;'R'
   585  0652  344D               	retlw	77	;'M'
   586  0653  3441               	retlw	65	;'A'
   587  0654  344C               	retlw	76	;'L'
   588  0655  3420               	retlw	32	;' '
   589  0656  344D               	retlw	77	;'M'
   590  0657  344F               	retlw	79	;'O'
   591  0658  3444               	retlw	68	;'D'
   592  0659  3445               	retlw	69	;'E'
   593  065A  3400               	retlw	0
   594  065B                     STR_5:	
   595  065B  344D               	retlw	77	;'M'
   596  065C  3445               	retlw	69	;'E'
   597  065D  344E               	retlw	78	;'N'
   598  065E  3455               	retlw	85	;'U'
   599  065F  3420               	retlw	32	;' '
   600  0660  344D               	retlw	77	;'M'
   601  0661  344F               	retlw	79	;'O'
   602  0662  3444               	retlw	68	;'D'
   603  0663  3445               	retlw	69	;'E'
   604  0664  3400               	retlw	0
   605  0665                     STR_11:	
   606  0665  3449               	retlw	73	;'I'
   607  0666  3444               	retlw	68	;'D'
   608  0667  3431               	retlw	49	;'1'
   609  0668  343A               	retlw	58	;':'
   610  0669  3400               	retlw	0
   611  066A                     STR_12:	
   612  066A  3449               	retlw	73	;'I'
   613  066B  3444               	retlw	68	;'D'
   614  066C  3432               	retlw	50	;'2'
   615  066D  343A               	retlw	58	;':'
   616  066E  3400               	retlw	0
   617  066F                     STR_13:	
   618  066F  3449               	retlw	73	;'I'
   619  0670  3444               	retlw	68	;'D'
   620  0671  3433               	retlw	51	;'3'
   621  0672  343A               	retlw	58	;':'
   622  0673  3400               	retlw	0
   623  0674                     STR_14:	
   624  0674  3449               	retlw	73	;'I'
   625  0675  3444               	retlw	68	;'D'
   626  0676  3434               	retlw	52	;'4'
   627  0677  343A               	retlw	58	;':'
   628  0678  3400               	retlw	0
   629  0679                     STR_10:	
   630  0679  3444               	retlw	68	;'D'
   631  067A  344F               	retlw	79	;'O'
   632  067B  3457               	retlw	87	;'W'
   633  067C  344E               	retlw	78	;'N'
   634  067D  3400               	retlw	0
   635  067E                     STR_9:	
   636  067E  3455               	retlw	85	;'U'
   637  067F  3450               	retlw	80	;'P'
   638  0680  3400               	retlw	0
   639  0669                     
   640                           ; #config settings
   641  0000                     
   642                           	psect	cinit
   643  0015                     start_initialization:	
   644  0015                     __initialization:	
   645                           
   646                           ; Clear objects allocated to COMMON
   647  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   648  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   649  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   650  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   651                           
   652                           ; Clear objects allocated to BANK1
   653  0019  1383               	bcf	3,7	;select IRP bank0
   654  001A  30A0               	movlw	low __pbssBANK1
   655  001B  0084               	movwf	4
   656  001C  30C0               	movlw	low (__pbssBANK1+32)
   657  001D  120A  158A  2444  120A  118A  	fcall	clear_ram0
   658                           
   659                           ; Initialize objects allocated to BANK1
   660  0022  30E7               	movlw	low (__pdataBANK1+16)
   661  0023  00FD               	movwf	btemp+-1
   662  0024  300C               	movlw	high __pidataBANK1
   663  0025  00FE               	movwf	btemp
   664  0026  308B               	movlw	low __pidataBANK1
   665  0027  00FF               	movwf	btemp+1
   666  0028  30D7               	movlw	low __pdataBANK1
   667  0029  0084               	movwf	4
   668  002A  120A  158A  24B0   	fcall	init_ram0
   669  002D                     end_of_initialization:	
   670                           ;End of C runtime variable initialization code
   671                           
   672  002D                     __end_of__initialization:	
   673  002D  0183               	clrf	3
   674  002E  120A  118A  2831   	ljmp	_main	;jump to C main() function
   675                           
   676                           	psect	bssCOMMON
   677  0076                     __pbssCOMMON:	
   678  0076                     _server_conn:	
   679  0076                     	ds	4
   680                           
   681                           	psect	bssBANK1
   682  00A0                     __pbssBANK1:	
   683  00A0                     _g_menu:	
   684  00A0                     	ds	9
   685  00A9                     _msg:	
   686  00A9                     	ds	23
   687                           
   688                           	psect	dataBANK1
   689  00D7                     __pdataBANK1:	
   690  00D7                     ___cgram:	
   691  00D7                     	ds	8
   692  00DF                     LCDWriteInt@F1646:	
   693  00DF                     	ds	5
   694  00E4                     _mode:	
   695  00E4                     	ds	1
   696  00E5                     _pmsg:	
   697  00E5                     	ds	1
   698  00E6                     _submode:	
   699  00E6                     	ds	1
   700                           
   701                           	psect	clrtext
   702  0C44                     clear_ram0:	
   703                           ;	Called with FSR containing the base address, and
   704                           ;	W with the last address+1
   705                           
   706  0C44  0064               	clrwdt	;clear the watchdog before getting into this loop
   707  0C45                     clrloop0:	
   708  0C45  0180               	clrf	0	;clear RAM location pointed to by FSR
   709  0C46  0A84               	incf	4,f	;increment pointer
   710  0C47  0604               	xorwf	4,w	;XOR with final address
   711  0C48  1903               	btfsc	3,2	;have we reached the end yet?
   712  0C49  3400               	retlw	0	;all done for this memory range, return
   713  0C4A  0604               	xorwf	4,w	;XOR again to restore value
   714  0C4B  2C45               	goto	clrloop0	;do the next byte
   715                           
   716                           	psect	inittext
   717  0CAC                     init_fetch0:	
   718                           ;	Called with low address in FSR and high address in W
   719                           
   720  0CAC  087E               	movf	126,w
   721  0CAD  008A               	movwf	10
   722  0CAE  087F               	movf	127,w
   723  0CAF  0082               	movwf	2
   724  0CB0                     init_ram0:	
   725                           ;Called with:
   726                           ;	high address of idata address in btemp 
   727                           ;	low address of idata address in btemp+1 
   728                           ;	low address of data in FSR
   729                           ;	high address + 1 of data in btemp-1
   730                           
   731  0CB0  24AC  120A  158A   	fcall	init_fetch0
   732  0CB3  0080               	movwf	0
   733  0CB4  0A84               	incf	4,f
   734  0CB5  0804               	movf	4,w
   735  0CB6  067D               	xorwf	125,w
   736  0CB7  1903               	btfsc	3,2
   737  0CB8  3400               	retlw	0
   738  0CB9  0AFF               	incf	127,f
   739  0CBA  1903               	btfsc	3,2
   740  0CBB  0AFE               	incf	126,f
   741  0CBC  2CB0               	goto	init_ram0
   742                           
   743                           	psect	cstackBANK3
   744  0190                     __pcstackBANK3:	
   745  0190                     dum_msg@s:	
   746                           
   747                           ; 32 bytes @ 0x0
   748  0190                     	ds	32
   749  01B0                     dum_msg@count:	
   750                           
   751                           ; 1 bytes @ 0x20
   752  01B0                     	ds	1
   753  01B1                     dum_msg@i:	
   754                           
   755                           ; 1 bytes @ 0x21
   756  01B1                     	ds	1
   757  01B2                     dum_msg@pmsg:	
   758                           
   759                           ; 1 bytes @ 0x22
   760  01B2                     	ds	1
   761                           
   762                           	psect	cstackBANK1
   763  00C0                     __pcstackBANK1:	
   764  00C0                     ??_main:	
   765                           
   766                           ; 1 bytes @ 0x0
   767  00C0                     	ds	3
   768  00C3                     main@revc:	
   769                           
   770                           ; 1 bytes @ 0x3
   771  00C3                     	ds	1
   772  00C4                     main@rsp:	
   773                           
   774                           ; 1 bytes @ 0x4
   775  00C4                     	ds	1
   776  00C5                     main@count_541:	
   777                           
   778                           ; 1 bytes @ 0x5
   779  00C5                     	ds	1
   780  00C6                     main@count_544:	
   781                           
   782                           ; 1 bytes @ 0x6
   783  00C6                     	ds	1
   784  00C7                     main@count_547:	
   785                           
   786                           ; 1 bytes @ 0x7
   787  00C7                     	ds	1
   788  00C8                     main@count_550:	
   789                           
   790                           ; 1 bytes @ 0x8
   791  00C8                     	ds	1
   792  00C9                     main@count_553:	
   793                           
   794                           ; 1 bytes @ 0x9
   795  00C9                     	ds	1
   796  00CA                     main@count_556:	
   797                           
   798                           ; 1 bytes @ 0xA
   799  00CA                     	ds	1
   800  00CB                     main@rqt:	
   801                           
   802                           ; 1 bytes @ 0xB
   803  00CB                     	ds	1
   804  00CC                     main@i:	
   805                           
   806                           ; 1 bytes @ 0xC
   807  00CC                     	ds	1
   808  00CD                     main@i_546:	
   809                           
   810                           ; 1 bytes @ 0xD
   811  00CD                     	ds	1
   812  00CE                     main@i_549:	
   813                           
   814                           ; 1 bytes @ 0xE
   815  00CE                     	ds	1
   816  00CF                     main@i_552:	
   817                           
   818                           ; 1 bytes @ 0xF
   819  00CF                     	ds	1
   820  00D0                     main@i_555:	
   821                           
   822                           ; 1 bytes @ 0x10
   823  00D0                     	ds	1
   824  00D1                     main@i_558:	
   825                           
   826                           ; 1 bytes @ 0x11
   827  00D1                     	ds	1
   828  00D2                     main@smsg:	
   829                           
   830                           ; 1 bytes @ 0x12
   831  00D2                     	ds	1
   832  00D3                     main@count:	
   833                           
   834                           ; 1 bytes @ 0x13
   835  00D3                     	ds	1
   836  00D4                     main@low:	
   837                           
   838                           ; 1 bytes @ 0x14
   839  00D4                     	ds	1
   840  00D5                     main@byte:	
   841                           
   842                           ; 1 bytes @ 0x15
   843  00D5                     	ds	1
   844  00D6                     main@byte_526:	
   845                           
   846                           ; 1 bytes @ 0x16
   847  00D6                     	ds	1
   848                           
   849                           	psect	cstackCOMMON
   850  0070                     __pcstackCOMMON:	
   851  0070                     ?_LoadMenuItem:	
   852  0070                     ?_LCDInit:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ?_MenuInit:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_ShowMenu:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_LCDSetStyle:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_ClearMenu:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ?_ValueInc:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_MenuUp:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_MenuDown:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_LCDBusyLoop:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_eeprom_read:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_ADCInit:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_dum_msg:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_dum_conn:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_ConnInit:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_IOInit:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_ISR:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ??_ISR:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_main:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_SaveMenuItem:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_ValueDec:	
   910                           ; 1 bytes @ 0x0
   911                           
   912                           
   913                           ; 2 bytes @ 0x0
   914  0070                     	ds	4
   915  0074                     ??_memcpy:	
   916  0074                     ??_MenuUp:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0074                     ??_MenuDown:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0074                     ??_LCDBusyLoop:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     ?_eeprom_write:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     ??_eeprom_read:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     ??_ADCInit:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0074                     ??_IOInit:	
   935                           ; 1 bytes @ 0x4
   936                           
   937  0074                     ??___awdiv:	
   938                           ; 1 bytes @ 0x4
   939                           
   940  0074                     ??___awmod:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0074                     ??___lwdiv:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0074                     eeprom_write@value:	
   947                           ; 1 bytes @ 0x4
   948                           
   949                           
   950                           ; 1 bytes @ 0x4
   951  0074                     	ds	1
   952  0075                     ??_eeprom_write:	
   953  0075                     ?_extract_REG_ID_RQT_CMD:	
   954                           ; 1 bytes @ 0x5
   955                           
   956  0075                     ??___lwmod:	
   957                           ; 1 bytes @ 0x5
   958                           
   959  0075                     extract_REG_ID_RQT_CMD@prqt:	
   960                           ; 1 bytes @ 0x5
   961                           
   962  0075                     eeprom_read@addr:	
   963                           ; 1 bytes @ 0x5
   964                           
   965                           
   966                           ; 1 bytes @ 0x5
   967  0075                     	ds	1
   968  0076                     ??_LCDSetStyle:	
   969                           
   970                           	psect	cstackBANK0
   971  0020                     __pcstackBANK0:	
   972                           ; 1 bytes @ 0x6
   973                           
   974  0020                     ?_memcpy:	
   975  0020                     ??_LoadMenuItem:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0020                     ?___awdiv:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0020                     ?___awmod:	
   982                           ; 2 bytes @ 0x0
   983                           
   984  0020                     ?___lwdiv:	
   985                           ; 2 bytes @ 0x0
   986                           
   987  0020                     LCDBusyLoop@busy:	
   988                           ; 2 bytes @ 0x0
   989                           
   990  0020                     eeprom_write@addr:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0020                     memcpy@s1:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0020                     ___awdiv@divisor:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0020                     ___awmod@divisor:	
  1000                           ; 2 bytes @ 0x0
  1001                           
  1002  0020                     ___lwdiv@divisor:	
  1003                           ; 2 bytes @ 0x0
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0x0
  1007  0020                     	ds	1
  1008  0021                     ??_SaveMenuItem:	
  1009  0021                     LCDBusyLoop@temp:	
  1010                           ; 1 bytes @ 0x1
  1011                           
  1012  0021                     memcpy@n:	
  1013                           ; 1 bytes @ 0x1
  1014                           
  1015                           
  1016                           ; 2 bytes @ 0x1
  1017  0021                     	ds	1
  1018  0022                     LCDBusyLoop@status:	
  1019  0022                     LoadMenuItem@item:	
  1020                           ; 1 bytes @ 0x2
  1021                           
  1022  0022                     ___awdiv@dividend:	
  1023                           ; 1 bytes @ 0x2
  1024                           
  1025  0022                     ___awmod@dividend:	
  1026                           ; 2 bytes @ 0x2
  1027                           
  1028  0022                     ___lwdiv@dividend:	
  1029                           ; 2 bytes @ 0x2
  1030                           
  1031                           
  1032                           ; 2 bytes @ 0x2
  1033  0022                     	ds	1
  1034  0023                     ?_LCDByte:	
  1035  0023                     ??_MenuInit:	
  1036                           ; 1 bytes @ 0x3
  1037                           
  1038  0023                     ??_ConnInit:	
  1039                           ; 1 bytes @ 0x3
  1040                           
  1041  0023                     LCDByte@isdata:	
  1042                           ; 1 bytes @ 0x3
  1043                           
  1044  0023                     SaveMenuItem@item:	
  1045                           ; 1 bytes @ 0x3
  1046                           
  1047  0023                     memcpy@d:	
  1048                           ; 1 bytes @ 0x3
  1049                           
  1050                           
  1051                           ; 1 bytes @ 0x3
  1052  0023                     	ds	1
  1053  0024                     ??_LCDByte:	
  1054  0024                     ??_ValueInc:	
  1055                           ; 1 bytes @ 0x4
  1056                           
  1057  0024                     ??_ValueDec:	
  1058                           ; 1 bytes @ 0x4
  1059                           
  1060  0024                     ___awdiv@counter:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063  0024                     ___awmod@counter:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066  0024                     ___lwdiv@counter:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069  0024                     memcpy@s:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072                           
  1073                           ; 1 bytes @ 0x4
  1074  0024                     	ds	1
  1075  0025                     ___awdiv@sign:	
  1076  0025                     ___awmod@sign:	
  1077                           ; 1 bytes @ 0x5
  1078                           
  1079  0025                     memcpy@d1:	
  1080                           ; 1 bytes @ 0x5
  1081                           
  1082  0025                     ___lwdiv@quotient:	
  1083                           ; 1 bytes @ 0x5
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x5
  1087  0025                     	ds	1
  1088  0026                     ??_extract_REG_ID_RQT_CMD:	
  1089  0026                     LCDByte@hn:	
  1090                           ; 1 bytes @ 0x6
  1091                           
  1092  0026                     ___awdiv@quotient:	
  1093                           ; 1 bytes @ 0x6
  1094                           
  1095                           
  1096                           ; 2 bytes @ 0x6
  1097  0026                     	ds	1
  1098  0027                     ?___lwmod:	
  1099  0027                     extract_REG_ID_RQT_CMD@pmsg:	
  1100                           ; 2 bytes @ 0x7
  1101                           
  1102  0027                     LCDByte@ln:	
  1103                           ; 1 bytes @ 0x7
  1104                           
  1105  0027                     ___lwmod@divisor:	
  1106                           ; 1 bytes @ 0x7
  1107                           
  1108                           
  1109                           ; 2 bytes @ 0x7
  1110  0027                     	ds	1
  1111  0028                     LCDByte@c:	
  1112                           
  1113                           ; 1 bytes @ 0x8
  1114  0028                     	ds	1
  1115  0029                     LCDByte@temp:	
  1116  0029                     ___lwmod@dividend:	
  1117                           ; 1 bytes @ 0x9
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x9
  1121  0029                     	ds	1
  1122  002A                     ?_LCDGotoXY:	
  1123  002A                     ?_LCDWriteString:	
  1124                           ; 1 bytes @ 0xA
  1125                           
  1126  002A                     ??_LCDInit:	
  1127                           ; 1 bytes @ 0xA
  1128                           
  1129  002A                     ?_LCDWriteInt:	
  1130                           ; 1 bytes @ 0xA
  1131                           
  1132  002A                     LCDSetStyle@style:	
  1133                           ; 1 bytes @ 0xA
  1134                           
  1135  002A                     LCDGotoXY@y:	
  1136                           ; 1 bytes @ 0xA
  1137                           
  1138  002A                     LCDWriteString@msg:	
  1139                           ; 1 bytes @ 0xA
  1140                           
  1141  002A                     LCDWriteInt@val:	
  1142                           ; 2 bytes @ 0xA
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0xA
  1146  002A                     	ds	1
  1147  002B                     ??_LCDGotoXY:	
  1148  002B                     ___lwmod@counter:	
  1149                           ; 1 bytes @ 0xB
  1150                           
  1151                           
  1152                           ; 1 bytes @ 0xB
  1153  002B                     	ds	1
  1154  002C                     ??_LCDWriteString:	
  1155  002C                     ?_sprintf:	
  1156                           ; 1 bytes @ 0xC
  1157                           
  1158  002C                     LCDInit@style:	
  1159                           ; 2 bytes @ 0xC
  1160                           
  1161  002C                     LCDWriteInt@field_length:	
  1162                           ; 1 bytes @ 0xC
  1163                           
  1164  002C                     LCDGotoXY@x:	
  1165                           ; 1 bytes @ 0xC
  1166                           
  1167  002C                     sprintf@sp:	
  1168                           ; 1 bytes @ 0xC
  1169                           
  1170                           
  1171                           ; 2 bytes @ 0xC
  1172  002C                     	ds	1
  1173  002D                     ??_LCDWriteInt:	
  1174  002D                     LCDInit@__i:	
  1175                           ; 1 bytes @ 0xD
  1176                           
  1177  002D                     LCDWriteString@count:	
  1178                           ; 1 bytes @ 0xD
  1179                           
  1180                           
  1181                           ; 1 bytes @ 0xD
  1182  002D                     	ds	1
  1183  002E                     LCDWriteString@cc:	
  1184  002E                     sprintf@f:	
  1185                           ; 1 bytes @ 0xE
  1186                           
  1187                           
  1188                           ; 1 bytes @ 0xE
  1189  002E                     	ds	1
  1190  002F                     ??_ClearMenu:	
  1191  002F                     LCDWriteInt@str:	
  1192                           ; 1 bytes @ 0xF
  1193                           
  1194                           
  1195                           ; 5 bytes @ 0xF
  1196  002F                     	ds	1
  1197  0030                     ClearMenu@count:	
  1198                           
  1199                           ; 1 bytes @ 0x10
  1200  0030                     	ds	1
  1201  0031                     ClearMenu@i:	
  1202                           
  1203                           ; 1 bytes @ 0x11
  1204  0031                     	ds	3
  1205  0034                     LCDWriteInt@j:	
  1206                           
  1207                           ; 2 bytes @ 0x14
  1208  0034                     	ds	2
  1209  0036                     LCDWriteInt@i:	
  1210                           
  1211                           ; 2 bytes @ 0x16
  1212  0036                     	ds	2
  1213  0038                     ??_ShowMenu:	
  1214                           
  1215                           ; 1 bytes @ 0x18
  1216  0038                     	ds	3
  1217  003B                     ??_sprintf:	
  1218                           
  1219                           ; 1 bytes @ 0x1B
  1220  003B                     	ds	1
  1221  003C                     ShowMenu@count:	
  1222                           
  1223                           ; 1 bytes @ 0x1C
  1224  003C                     	ds	1
  1225  003D                     ShowMenu@i:	
  1226                           
  1227                           ; 1 bytes @ 0x1D
  1228  003D                     	ds	1
  1229  003E                     sprintf@ap:	
  1230                           
  1231                           ; 1 bytes @ 0x1E
  1232  003E                     	ds	1
  1233  003F                     sprintf@flag:	
  1234                           
  1235                           ; 1 bytes @ 0x1F
  1236  003F                     	ds	1
  1237  0040                     sprintf@prec:	
  1238                           
  1239                           ; 1 bytes @ 0x20
  1240  0040                     	ds	1
  1241  0041                     sprintf@val:	
  1242                           
  1243                           ; 2 bytes @ 0x21
  1244  0041                     	ds	2
  1245  0043                     sprintf@c:	
  1246                           
  1247                           ; 1 bytes @ 0x23
  1248  0043                     	ds	1
  1249  0044                     ??_dum_msg:	
  1250  0044                     ??_dum_conn:	
  1251                           ; 1 bytes @ 0x24
  1252                           
  1253                           
  1254                           ; 1 bytes @ 0x24
  1255  0044                     	ds	9
  1256  004D                     dum_conn@s:	
  1257                           
  1258                           ; 32 bytes @ 0x2D
  1259  004D                     	ds	32
  1260  006D                     dum_conn@count:	
  1261                           
  1262                           ; 1 bytes @ 0x4D
  1263  006D                     	ds	1
  1264  006E                     dum_conn@i:	
  1265                           
  1266                           ; 1 bytes @ 0x4E
  1267  006E                     	ds	1
  1268  006F                     dum_conn@pconn:	
  1269                           
  1270                           ; 1 bytes @ 0x4F
  1271  006F                     	ds	1
  1272                           
  1273                           	psect	maintext
  1274  0031                     __pmaintext:	
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 172 in file "do_am.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  i               1   15[BANK1 ] char 
  1285 ;;  i               1   14[BANK1 ] char 
  1286 ;;  count           1    8[BANK1 ] char 
  1287 ;;  count           1    7[BANK1 ] char 
  1288 ;;  i               1   13[BANK1 ] char 
  1289 ;;  i               1   12[BANK1 ] char 
  1290 ;;  byte            1   22[BANK1 ] PTR struct .
  1291 ;;		 -> msg(23), 
  1292 ;;  i               1   17[BANK1 ] char 
  1293 ;;  i               1   16[BANK1 ] char 
  1294 ;;  count           1    6[BANK1 ] char 
  1295 ;;  count           1    5[BANK1 ] char 
  1296 ;;  count           1   10[BANK1 ] char 
  1297 ;;  count           1    9[BANK1 ] char 
  1298 ;;  byte            1   21[BANK1 ] PTR struct .
  1299 ;;		 -> msg(23), 
  1300 ;;  low             1   20[BANK1 ] unsigned char 
  1301 ;;  count           1   19[BANK1 ] unsigned char 
  1302 ;;  smsg            1   18[BANK1 ] PTR unsigned char 
  1303 ;;		 -> msg(23), 
  1304 ;;  rqt             1   11[BANK1 ] struct .
  1305 ;;  rsp             1    4[BANK1 ] struct .
  1306 ;;  revc            1    3[BANK1 ] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : B00/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         0       0       0       0       0
  1317 ;;      Locals:         0       0      20       0       0
  1318 ;;      Temps:          0       0       3       0       0
  1319 ;;      Totals:         0       0      23       0       0
  1320 ;;Total ram usage:       23 bytes
  1321 ;; Hardware stack levels required when called:    5
  1322 ;; This function calls:
  1323 ;;		_ADCInit
  1324 ;;		_ClearMenu
  1325 ;;		_ConnInit
  1326 ;;		_IOInit
  1327 ;;		_LCDByte
  1328 ;;		_LCDGotoXY
  1329 ;;		_LCDInit
  1330 ;;		_LCDSetStyle
  1331 ;;		_LCDWriteString
  1332 ;;		_MenuDown
  1333 ;;		_MenuInit
  1334 ;;		_MenuUp
  1335 ;;		_ShowMenu
  1336 ;;		_ValueDec
  1337 ;;		_ValueInc
  1338 ;;		_dum_conn
  1339 ;;		_dum_msg
  1340 ;;		_extract_REG_ID_RQT_CMD
  1341 ;; This function is called by:
  1342 ;;		Startup code after reset
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           
  1347                           ;psect for function _main
  1348  0031                     _main:	
  1349                           
  1350                           ;do_am.c: 175: LCDInit(0B00000000);
  1351                           
  1352                           ;incstack = 0
  1353                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1354  0031  3000               	movlw	0
  1355  0032  120A  118A  2681  120A  118A  	fcall	_LCDInit
  1356                           
  1357                           ;do_am.c: 178: ADCInit();
  1358  0037  120A  158A  24F5  120A  118A  	fcall	_ADCInit
  1359                           
  1360                           ;do_am.c: 181: IOInit();
  1361  003C  120A  158A  2656  120A  118A  	fcall	_IOInit
  1362                           
  1363                           ;do_am.c: 183: MenuInit();
  1364  0041  120A  158A  269C  120A  118A  	fcall	_MenuInit
  1365                           
  1366                           ;do_am.c: 185: ConnInit();
  1367  0046  120A  158A  247B  120A  118A  	fcall	_ConnInit
  1368                           
  1369                           ;do_am.c: 188: (LCDByte(0b00000001,0));
  1370  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1371  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1372  004D  01A3               	clrf	LCDByte@isdata
  1373  004E  3001               	movlw	1
  1374  004F  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  1375                           
  1376                           ;do_am.c: 190: uint8_t revc = 0;
  1377  0054  1683               	bsf	3,5	;RP0=1, select bank1
  1378  0055  1303               	bcf	3,6	;RP1=0, select bank1
  1379  0056  01C3               	clrf	main@revc^(0+128)
  1380                           
  1381                           ;do_am.c: 192: dum_conn(&server_conn);
  1382  0057  3076               	movlw	(low (_server_conn| 0))& (0+255)
  1383  0058  120A  118A  2588  120A  118A  	fcall	_dum_conn
  1384  005D  2AEE               	goto	l3134
  1385  005E                     l3136:	
  1386                           
  1387                           ;do_am.c: 204: {
  1388                           ;do_am.c: 205: { {uint8_t *smsg = (uint8_t *)pmsg; { uint8_t count = 0; uint8_t low = 1;
      +                           { BITbits_t *byte = (BITbits_t *)&smsg[count]; if(low == 1) { byte->B0 = RA0; byte->B1 
      +                          = RA1; byte->B2 = RA2; byte->B3 = RA3; } else { byte->B4 = RA0; byte->B5 = RA1; byte->B6
      +                           
  1389  005E  1683               	bsf	3,5	;RP0=1, select bank1
  1390  005F  1303               	bcf	3,6	;RP1=0, select bank1
  1391  0060  0865               	movf	_pmsg^(0+128),w
  1392  0061  00C0               	movwf	??_main^(0+128)
  1393  0062  0840               	movf	??_main^(0+128),w
  1394  0063  00D2               	movwf	main@smsg^(0+128)
  1395  0064  01D3               	clrf	main@count^(0+128)
  1396  0065  01D4               	clrf	main@low^(0+128)
  1397  0066  0AD4               	incf	main@low^(0+128),f
  1398  0067  0853               	movf	main@count^(0+128),w
  1399  0068  0752               	addwf	main@smsg^(0+128),w
  1400  0069  00C0               	movwf	??_main^(0+128)
  1401  006A  0840               	movf	??_main^(0+128),w
  1402  006B  00D5               	movwf	main@byte^(0+128)
  1403  006C  0354               	decf	main@low^(0+128),w
  1404  006D  1D03               	btfss	3,2
  1405  006E  2896               	goto	l3148
  1406  006F  0855               	movf	main@byte^(0+128),w
  1407  0070  0084               	movwf	4
  1408  0071  1383               	bcf	3,7	;select IRP bank0
  1409  0072  1000               	bcf	0,0
  1410  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0075  1805               	btfsc	5,0	;volatile
  1413  0076  1400               	bsf	0,0
  1414  0077  1683               	bsf	3,5	;RP0=1, select bank1
  1415  0078  1303               	bcf	3,6	;RP1=0, select bank1
  1416  0079  0855               	movf	main@byte^(0+128),w
  1417  007A  0084               	movwf	4
  1418  007B  1383               	bcf	3,7	;select IRP bank0
  1419  007C  1080               	bcf	0,1
  1420  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1421  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1422  007F  1885               	btfsc	5,1	;volatile
  1423  0080  1480               	bsf	0,1
  1424  0081  1683               	bsf	3,5	;RP0=1, select bank1
  1425  0082  1303               	bcf	3,6	;RP1=0, select bank1
  1426  0083  0855               	movf	main@byte^(0+128),w
  1427  0084  0084               	movwf	4
  1428  0085  1383               	bcf	3,7	;select IRP bank0
  1429  0086  1100               	bcf	0,2
  1430  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0089  1905               	btfsc	5,2	;volatile
  1433  008A  1500               	bsf	0,2
  1434  008B  1683               	bsf	3,5	;RP0=1, select bank1
  1435  008C  1303               	bcf	3,6	;RP1=0, select bank1
  1436  008D  0855               	movf	main@byte^(0+128),w
  1437  008E  0084               	movwf	4
  1438  008F  1383               	bcf	3,7	;select IRP bank0
  1439  0090  1180               	bcf	0,3
  1440  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0093  1985               	btfsc	5,3	;volatile
  1443  0094  1580               	bsf	0,3
  1444  0095  28BE               	goto	l3150
  1445  0096                     l3148:	
  1446  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0098  0855               	movf	main@byte^(0+128),w
  1449  0099  0084               	movwf	4
  1450  009A  1383               	bcf	3,7	;select IRP bank0
  1451  009B  1200               	bcf	0,4
  1452  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1453  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1454  009E  1805               	btfsc	5,0	;volatile
  1455  009F  1600               	bsf	0,4
  1456  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  1457  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  1458  00A2  0855               	movf	main@byte^(0+128),w
  1459  00A3  0084               	movwf	4
  1460  00A4  1383               	bcf	3,7	;select IRP bank0
  1461  00A5  1280               	bcf	0,5
  1462  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1463  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1464  00A8  1885               	btfsc	5,1	;volatile
  1465  00A9  1680               	bsf	0,5
  1466  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1467  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1468  00AC  0855               	movf	main@byte^(0+128),w
  1469  00AD  0084               	movwf	4
  1470  00AE  1383               	bcf	3,7	;select IRP bank0
  1471  00AF  1300               	bcf	0,6
  1472  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1473  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1474  00B2  1905               	btfsc	5,2	;volatile
  1475  00B3  1700               	bsf	0,6
  1476  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1477  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1478  00B6  0855               	movf	main@byte^(0+128),w
  1479  00B7  0084               	movwf	4
  1480  00B8  1383               	bcf	3,7	;select IRP bank0
  1481  00B9  1380               	bcf	0,7
  1482  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1483  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1484  00BC  1985               	btfsc	5,3	;volatile
  1485  00BD  1780               	bsf	0,7
  1486  00BE                     l3150:	
  1487  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  1488  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  1489  00C0  0354               	decf	main@low^(0+128),w
  1490  00C1  1903               	btfsc	3,2
  1491  00C2  28C5               	goto	u3470
  1492  00C3  3001               	movlw	1
  1493  00C4  28C6               	goto	u3480
  1494  00C5                     u3470:	
  1495  00C5  3000               	movlw	0
  1496  00C6                     u3480:	
  1497  00C6  00C0               	movwf	??_main^(0+128)
  1498  00C7  0840               	movf	??_main^(0+128),w
  1499  00C8  00D4               	movwf	main@low^(0+128)
  1500  00C9  0354               	decf	main@low^(0+128),w
  1501  00CA  1D03               	btfss	3,2
  1502  00CB  28D7               	goto	l156
  1503  00CC  3001               	movlw	1
  1504  00CD  00C0               	movwf	??_main^(0+128)
  1505  00CE  0840               	movf	??_main^(0+128),w
  1506  00CF  07D3               	addwf	main@count^(0+128),f
  1507  00D0  0852               	movf	main@smsg^(0+128),w
  1508  00D1  0084               	movwf	4
  1509  00D2  1383               	bcf	3,7	;select IRP bank0
  1510  00D3  0800               	movf	0,w
  1511  00D4  0653               	xorwf	main@count^(0+128),w
  1512  00D5  1903               	btfsc	3,2
  1513  00D6  2B56               	goto	l196
  1514  00D7                     l156:	
  1515  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1516  00D8  1B05               	btfsc	5,6	;volatile
  1517  00D9  28D7               	goto	l156
  1518  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1519  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1520  00DC  0853               	movf	main@count^(0+128),w
  1521  00DD  0752               	addwf	main@smsg^(0+128),w
  1522  00DE  00C0               	movwf	??_main^(0+128)
  1523  00DF  0840               	movf	??_main^(0+128),w
  1524  00E0  00D6               	movwf	main@byte_526^(0+128)
  1525  00E1  0354               	decf	main@low^(0+128),w
  1526  00E2  1D03               	btfss	3,2
  1527  00E3  290B               	goto	l3164
  1528  00E4  0856               	movf	main@byte_526^(0+128),w
  1529  00E5  0084               	movwf	4
  1530  00E6  1383               	bcf	3,7	;select IRP bank0
  1531  00E7  1000               	bcf	0,0
  1532  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1533  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1534  00EA  1805               	btfsc	5,0	;volatile
  1535  00EB  1400               	bsf	0,0
  1536  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1537  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1538  00EE  0856               	movf	main@byte_526^(0+128),w
  1539  00EF  0084               	movwf	4
  1540  00F0  1383               	bcf	3,7	;select IRP bank0
  1541  00F1  1080               	bcf	0,1
  1542  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1543  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1544  00F4  1885               	btfsc	5,1	;volatile
  1545  00F5  1480               	bsf	0,1
  1546  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1547  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  1548  00F8  0856               	movf	main@byte_526^(0+128),w
  1549  00F9  0084               	movwf	4
  1550  00FA  1383               	bcf	3,7	;select IRP bank0
  1551  00FB  1100               	bcf	0,2
  1552  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1553  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1554  00FE  1905               	btfsc	5,2	;volatile
  1555  00FF  1500               	bsf	0,2
  1556  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1557  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1558  0102  0856               	movf	main@byte_526^(0+128),w
  1559  0103  0084               	movwf	4
  1560  0104  1383               	bcf	3,7	;select IRP bank0
  1561  0105  1180               	bcf	0,3
  1562  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0108  1985               	btfsc	5,3	;volatile
  1565  0109  1580               	bsf	0,3
  1566  010A  2933               	goto	l3166
  1567  010B                     l3164:	
  1568  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1569  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1570  010D  0856               	movf	main@byte_526^(0+128),w
  1571  010E  0084               	movwf	4
  1572  010F  1383               	bcf	3,7	;select IRP bank0
  1573  0110  1200               	bcf	0,4
  1574  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0113  1805               	btfsc	5,0	;volatile
  1577  0114  1600               	bsf	0,4
  1578  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1579  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0117  0856               	movf	main@byte_526^(0+128),w
  1581  0118  0084               	movwf	4
  1582  0119  1383               	bcf	3,7	;select IRP bank0
  1583  011A  1280               	bcf	0,5
  1584  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1585  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1586  011D  1885               	btfsc	5,1	;volatile
  1587  011E  1680               	bsf	0,5
  1588  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0121  0856               	movf	main@byte_526^(0+128),w
  1591  0122  0084               	movwf	4
  1592  0123  1383               	bcf	3,7	;select IRP bank0
  1593  0124  1300               	bcf	0,6
  1594  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0127  1905               	btfsc	5,2	;volatile
  1597  0128  1700               	bsf	0,6
  1598  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1599  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1600  012B  0856               	movf	main@byte_526^(0+128),w
  1601  012C  0084               	movwf	4
  1602  012D  1383               	bcf	3,7	;select IRP bank0
  1603  012E  1380               	bcf	0,7
  1604  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0131  1985               	btfsc	5,3	;volatile
  1607  0132  1780               	bsf	0,7
  1608  0133                     l3166:	
  1609  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1610  0134  1303               	bcf	3,6	;RP1=0, select bank1
  1611  0135  0354               	decf	main@low^(0+128),w
  1612  0136  1903               	btfsc	3,2
  1613  0137  293A               	goto	u3610
  1614  0138  3001               	movlw	1
  1615  0139  293B               	goto	u3620
  1616  013A                     u3610:	
  1617  013A  3000               	movlw	0
  1618  013B                     u3620:	
  1619  013B  00C0               	movwf	??_main^(0+128)
  1620  013C  0840               	movf	??_main^(0+128),w
  1621  013D  00D4               	movwf	main@low^(0+128)
  1622  013E  0354               	decf	main@low^(0+128),w
  1623  013F  1D03               	btfss	3,2
  1624  0140  28D7               	goto	l156
  1625  0141  3001               	movlw	1
  1626  0142  00C0               	movwf	??_main^(0+128)
  1627  0143  0840               	movf	??_main^(0+128),w
  1628  0144  07D3               	addwf	main@count^(0+128),f
  1629  0145  0852               	movf	main@smsg^(0+128),w
  1630  0146  0084               	movwf	4
  1631  0147  1383               	bcf	3,7	;select IRP bank0
  1632  0148  0800               	movf	0,w
  1633  0149  0653               	xorwf	main@count^(0+128),w
  1634  014A  1D03               	skipz
  1635  014B  28D7               	goto	l156
  1636  014C  30CB               	movlw	(low (main@rqt| 0))& (0+255)
  1637  014D  00C0               	movwf	??_main^(0+128)
  1638  014E  0840               	movf	??_main^(0+128),w
  1639  014F  00F5               	movwf	extract_REG_ID_RQT_CMD@prqt
  1640  0150  0865               	movf	_pmsg^(0+128),w
  1641  0151  120A  158A  249B  120A  118A  	fcall	_extract_REG_ID_RQT_CMD
  1642  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0157  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0158  084B               	movf	main@rqt^(0+128),w
  1645  0159  00C0               	movwf	??_main^(0+128)
  1646  015A  0840               	movf	??_main^(0+128),w
  1647  015B  00C4               	movwf	main@rsp^(0+128)
  1648  015C  0865               	movf	_pmsg^(0+128),w
  1649  015D  120A  118A  2430  120A  118A  	fcall	_dum_msg
  1650                           
  1651                           ;do_am.c: 207: }
  1652  0162  2AEE               	goto	l3134
  1653  0163                     l3182:	
  1654                           
  1655                           ;do_am.c: 211: {
  1656                           ;do_am.c: 212: if(mode == NORMAL)
  1657  0163  1683               	bsf	3,5	;RP0=1, select bank1
  1658  0164  1303               	bcf	3,6	;RP1=0, select bank1
  1659  0165  0364               	decf	_mode^(0+128),w
  1660  0166  1D03               	btfss	3,2
  1661  0167  29A7               	goto	l3204
  1662                           
  1663                           ;do_am.c: 213: {
  1664                           ;do_am.c: 214: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("MENU MODE"); for(int8_
      +                          t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1665  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1667  016A  01AA               	clrf	LCDGotoXY@y
  1668  016B  0AAA               	incf	LCDGotoXY@y,f
  1669  016C  3000               	movlw	0
  1670  016D  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  1671  0172  3046               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1672  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0175  00AA               	movwf	LCDWriteString@msg
  1675  0176  3080               	movlw	128
  1676  0177  00AB               	movwf	LCDWriteString@msg+1
  1677  0178  120A  118A  2751  120A  118A  	fcall	_LCDWriteString
  1678  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1679  017E  1303               	bcf	3,6	;RP1=0, select bank1
  1680  017F  00C0               	movwf	??_main^(0+128)
  1681  0180  0840               	movf	??_main^(0+128),w
  1682  0181  00C5               	movwf	main@count_541^(0+128)
  1683  0182  0845               	movf	main@count_541^(0+128),w
  1684  0183  00C0               	movwf	??_main^(0+128)
  1685  0184  0840               	movf	??_main^(0+128),w
  1686  0185  00CC               	movwf	main@i^(0+128)
  1687  0186  084C               	movf	main@i^(0+128),w
  1688  0187  3A80               	xorlw	128
  1689  0188  3E70               	addlw	-144
  1690  0189  1803               	btfsc	3,0
  1691  018A  29A0               	goto	l3200
  1692  018B                     l3194:	
  1693  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1694  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1695  018D  01A3               	clrf	LCDByte@isdata
  1696  018E  0AA3               	incf	LCDByte@isdata,f
  1697  018F  3020               	movlw	32
  1698  0190  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  1699  0195  3001               	movlw	1
  1700  0196  1683               	bsf	3,5	;RP0=1, select bank1
  1701  0197  1303               	bcf	3,6	;RP1=0, select bank1
  1702  0198  00C0               	movwf	??_main^(0+128)
  1703  0199  0840               	movf	??_main^(0+128),w
  1704  019A  07CC               	addwf	main@i^(0+128),f
  1705  019B  084C               	movf	main@i^(0+128),w
  1706  019C  3A80               	xorlw	128
  1707  019D  3E70               	addlw	-144
  1708  019E  1C03               	skipc
  1709  019F  298B               	goto	l3194
  1710  01A0                     l3200:	
  1711                           
  1712                           ;do_am.c: 215: mode = MENU;
  1713  01A0  01E4               	clrf	_mode^(0+128)
  1714                           
  1715                           ;do_am.c: 216: ShowMenu();
  1716  01A1  120A  158A  27A2  120A  118A  	fcall	_ShowMenu
  1717                           
  1718                           ;do_am.c: 217: }
  1719  01A6  29EB               	goto	l3226
  1720  01A7                     l3204:	
  1721                           
  1722                           ;do_am.c: 218: else
  1723                           ;do_am.c: 219: {
  1724                           ;do_am.c: 220: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("EDIT MODE"); for(int8_
      +                          t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1725  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1726  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1727  01A9  01AA               	clrf	LCDGotoXY@y
  1728  01AA  0AAA               	incf	LCDGotoXY@y,f
  1729  01AB  3000               	movlw	0
  1730  01AC  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  1731  01B1  3030               	movlw	(low (((STR_7+3)-__stringbase)| (0+32768)))& (0+255)
  1732  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1733  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1734  01B4  00AA               	movwf	LCDWriteString@msg
  1735  01B5  3080               	movlw	128
  1736  01B6  00AB               	movwf	LCDWriteString@msg+1
  1737  01B7  120A  118A  2751  120A  118A  	fcall	_LCDWriteString
  1738  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  1739  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  1740  01BE  00C0               	movwf	??_main^(0+128)
  1741  01BF  0840               	movf	??_main^(0+128),w
  1742  01C0  00C6               	movwf	main@count_544^(0+128)
  1743  01C1  0846               	movf	main@count_544^(0+128),w
  1744  01C2  00C0               	movwf	??_main^(0+128)
  1745  01C3  0840               	movf	??_main^(0+128),w
  1746  01C4  00CD               	movwf	main@i_546^(0+128)
  1747  01C5  084D               	movf	main@i_546^(0+128),w
  1748  01C6  3A80               	xorlw	128
  1749  01C7  3E70               	addlw	-144
  1750  01C8  1803               	btfsc	3,0
  1751  01C9  29DF               	goto	l3220
  1752  01CA                     l3214:	
  1753  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1754  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1755  01CC  01A3               	clrf	LCDByte@isdata
  1756  01CD  0AA3               	incf	LCDByte@isdata,f
  1757  01CE  3020               	movlw	32
  1758  01CF  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  1759  01D4  3001               	movlw	1
  1760  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  1761  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  1762  01D7  00C0               	movwf	??_main^(0+128)
  1763  01D8  0840               	movf	??_main^(0+128),w
  1764  01D9  07CD               	addwf	main@i_546^(0+128),f
  1765  01DA  084D               	movf	main@i_546^(0+128),w
  1766  01DB  3A80               	xorlw	128
  1767  01DC  3E70               	addlw	-144
  1768  01DD  1C03               	skipc
  1769  01DE  29CA               	goto	l3214
  1770  01DF                     l3220:	
  1771                           
  1772                           ;do_am.c: 221: submode = EDIT;
  1773  01DF  01E6               	clrf	_submode^(0+128)
  1774                           
  1775                           ;do_am.c: 222: ShowMenu();
  1776  01E0  120A  158A  27A2  120A  118A  	fcall	_ShowMenu
  1777                           
  1778                           ;do_am.c: 223: LCDSetStyle(0B00000001);
  1779  01E5  3001               	movlw	1
  1780  01E6  120A  158A  244C  120A  118A  	fcall	_LCDSetStyle
  1781  01EB                     l3226:	
  1782                           
  1783                           ;do_am.c: 224: }
  1784                           ;do_am.c: 226: _delay((unsigned long)((200)*(20000000/4000.0)));
  1785  01EB  3006               	movlw	6
  1786  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1787  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1788  01EE  00C2               	movwf	(??_main^(0+128)+2)
  1789  01EF  3013               	movlw	19
  1790  01F0  00C1               	movwf	(??_main^(0+128)+1)
  1791  01F1  30B1               	movlw	177
  1792  01F2  00C0               	movwf	??_main^(0+128)
  1793  01F3                     u3907:	
  1794  01F3  0BC0               	decfsz	??_main^(0+128),f
  1795  01F4  29F3               	goto	u3907
  1796  01F5  0BC1               	decfsz	(??_main^(0+128)+1),f
  1797  01F6  29F3               	goto	u3907
  1798  01F7  0BC2               	decfsz	(??_main^(0+128)+2),f
  1799  01F8  29F3               	goto	u3907
  1800  01F9  29FA               	nop2
  1801                           
  1802                           ;do_am.c: 227: }
  1803  01FA  2AEE               	goto	l3134
  1804  01FB                     l3228:	
  1805                           
  1806                           ;do_am.c: 229: {
  1807                           ;do_am.c: 230: if(mode == MENU)
  1808  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1809  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1810  01FD  0864               	movf	_mode^(0+128),w
  1811  01FE  1D03               	btfss	3,2
  1812  01FF  2A83               	goto	l3268
  1813                           
  1814                           ;do_am.c: 231: {
  1815                           ;do_am.c: 232: if(submode == EDIT)
  1816  0200  0866               	movf	_submode^(0+128),w
  1817  0201  1D03               	btfss	3,2
  1818  0202  2A44               	goto	l3250
  1819                           
  1820                           ;do_am.c: 233: {
  1821                           ;do_am.c: 234: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("NOTEDIT MODE"); for(in
      +                          t8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1822  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0205  01AA               	clrf	LCDGotoXY@y
  1825  0206  0AAA               	incf	LCDGotoXY@y,f
  1826  0207  3000               	movlw	0
  1827  0208  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  1828  020D  302D               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1829  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1830  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0210  00AA               	movwf	LCDWriteString@msg
  1832  0211  3080               	movlw	128
  1833  0212  00AB               	movwf	LCDWriteString@msg+1
  1834  0213  120A  118A  2751  120A  118A  	fcall	_LCDWriteString
  1835  0218  1683               	bsf	3,5	;RP0=1, select bank1
  1836  0219  1303               	bcf	3,6	;RP1=0, select bank1
  1837  021A  00C0               	movwf	??_main^(0+128)
  1838  021B  0840               	movf	??_main^(0+128),w
  1839  021C  00C7               	movwf	main@count_547^(0+128)
  1840  021D  0847               	movf	main@count_547^(0+128),w
  1841  021E  00C0               	movwf	??_main^(0+128)
  1842  021F  0840               	movf	??_main^(0+128),w
  1843  0220  00CE               	movwf	main@i_549^(0+128)
  1844  0221  084E               	movf	main@i_549^(0+128),w
  1845  0222  3A80               	xorlw	128
  1846  0223  3E70               	addlw	-144
  1847  0224  1803               	btfsc	3,0
  1848  0225  2A3B               	goto	l177
  1849  0226                     l3242:	
  1850  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0228  01A3               	clrf	LCDByte@isdata
  1853  0229  0AA3               	incf	LCDByte@isdata,f
  1854  022A  3020               	movlw	32
  1855  022B  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  1856  0230  3001               	movlw	1
  1857  0231  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0232  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0233  00C0               	movwf	??_main^(0+128)
  1860  0234  0840               	movf	??_main^(0+128),w
  1861  0235  07CE               	addwf	main@i_549^(0+128),f
  1862  0236  084E               	movf	main@i_549^(0+128),w
  1863  0237  3A80               	xorlw	128
  1864  0238  3E70               	addlw	-144
  1865  0239  1C03               	skipc
  1866  023A  2A26               	goto	l3242
  1867  023B                     l177:	
  1868                           
  1869                           ;do_am.c: 235: submode = NOTEDIT;
  1870  023B  01E6               	clrf	_submode^(0+128)
  1871  023C  0AE6               	incf	_submode^(0+128),f
  1872                           
  1873                           ;do_am.c: 236: LCDSetStyle(0B00000000);
  1874  023D  3000               	movlw	0
  1875  023E  120A  158A  244C  120A  118A  	fcall	_LCDSetStyle
  1876                           
  1877                           ;do_am.c: 237: }
  1878  0243  2A83               	goto	l3268
  1879  0244                     l3250:	
  1880                           
  1881                           ;do_am.c: 238: else
  1882                           ;do_am.c: 239: {
  1883                           ;do_am.c: 240: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("NORMAL MODE"); for(int
      +                          8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1884  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0246  01AA               	clrf	LCDGotoXY@y
  1887  0247  0AAA               	incf	LCDGotoXY@y,f
  1888  0248  3000               	movlw	0
  1889  0249  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  1890  024E  303A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1891  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0251  00AA               	movwf	LCDWriteString@msg
  1894  0252  3080               	movlw	128
  1895  0253  00AB               	movwf	LCDWriteString@msg+1
  1896  0254  120A  118A  2751  120A  118A  	fcall	_LCDWriteString
  1897  0259  1683               	bsf	3,5	;RP0=1, select bank1
  1898  025A  1303               	bcf	3,6	;RP1=0, select bank1
  1899  025B  00C0               	movwf	??_main^(0+128)
  1900  025C  0840               	movf	??_main^(0+128),w
  1901  025D  00C8               	movwf	main@count_550^(0+128)
  1902  025E  0848               	movf	main@count_550^(0+128),w
  1903  025F  00C0               	movwf	??_main^(0+128)
  1904  0260  0840               	movf	??_main^(0+128),w
  1905  0261  00CF               	movwf	main@i_552^(0+128)
  1906  0262  084F               	movf	main@i_552^(0+128),w
  1907  0263  3A80               	xorlw	128
  1908  0264  3E70               	addlw	-144
  1909  0265  1803               	btfsc	3,0
  1910  0266  2A7C               	goto	l180
  1911  0267                     l3260:	
  1912  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0269  01A3               	clrf	LCDByte@isdata
  1915  026A  0AA3               	incf	LCDByte@isdata,f
  1916  026B  3020               	movlw	32
  1917  026C  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  1918  0271  3001               	movlw	1
  1919  0272  1683               	bsf	3,5	;RP0=1, select bank1
  1920  0273  1303               	bcf	3,6	;RP1=0, select bank1
  1921  0274  00C0               	movwf	??_main^(0+128)
  1922  0275  0840               	movf	??_main^(0+128),w
  1923  0276  07CF               	addwf	main@i_552^(0+128),f
  1924  0277  084F               	movf	main@i_552^(0+128),w
  1925  0278  3A80               	xorlw	128
  1926  0279  3E70               	addlw	-144
  1927  027A  1C03               	skipc
  1928  027B  2A67               	goto	l3260
  1929  027C                     l180:	
  1930                           
  1931                           ;do_am.c: 241: mode = NORMAL;
  1932  027C  01E4               	clrf	_mode^(0+128)
  1933  027D  0AE4               	incf	_mode^(0+128),f
  1934                           
  1935                           ;do_am.c: 242: ClearMenu();
  1936  027E  120A  158A  25B3  120A  118A  	fcall	_ClearMenu
  1937  0283                     l3268:	
  1938                           
  1939                           ;do_am.c: 243: }
  1940                           ;do_am.c: 244: }
  1941                           ;do_am.c: 246: _delay((unsigned long)((200)*(20000000/4000.0)));
  1942  0283  3006               	movlw	6
  1943  0284  1683               	bsf	3,5	;RP0=1, select bank1
  1944  0285  1303               	bcf	3,6	;RP1=0, select bank1
  1945  0286  00C2               	movwf	(??_main^(0+128)+2)
  1946  0287  3013               	movlw	19
  1947  0288  00C1               	movwf	(??_main^(0+128)+1)
  1948  0289  30B1               	movlw	177
  1949  028A  00C0               	movwf	??_main^(0+128)
  1950  028B                     u3917:	
  1951  028B  0BC0               	decfsz	??_main^(0+128),f
  1952  028C  2A8B               	goto	u3917
  1953  028D  0BC1               	decfsz	(??_main^(0+128)+1),f
  1954  028E  2A8B               	goto	u3917
  1955  028F  0BC2               	decfsz	(??_main^(0+128)+2),f
  1956  0290  2A8B               	goto	u3917
  1957  0291  2A92               	nop2
  1958                           
  1959                           ;do_am.c: 247: }
  1960  0292  2AEE               	goto	l3134
  1961  0293                     l3270:	
  1962                           
  1963                           ;do_am.c: 249: {
  1964                           ;do_am.c: 250: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("UP"); for(int8_t i = c
      +                          ount + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1965  0293  01AA               	clrf	LCDGotoXY@y
  1966  0294  0AAA               	incf	LCDGotoXY@y,f
  1967  0295  3000               	movlw	0
  1968  0296  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  1969  029B  3069               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1970  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1971  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1972  029E  00AA               	movwf	LCDWriteString@msg
  1973  029F  3080               	movlw	128
  1974  02A0  00AB               	movwf	LCDWriteString@msg+1
  1975  02A1  120A  118A  2751  120A  118A  	fcall	_LCDWriteString
  1976  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  1977  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  1978  02A8  00C0               	movwf	??_main^(0+128)
  1979  02A9  0840               	movf	??_main^(0+128),w
  1980  02AA  00C9               	movwf	main@count_553^(0+128)
  1981  02AB  0849               	movf	main@count_553^(0+128),w
  1982  02AC  00C0               	movwf	??_main^(0+128)
  1983  02AD  0840               	movf	??_main^(0+128),w
  1984  02AE  00D0               	movwf	main@i_555^(0+128)
  1985  02AF  0850               	movf	main@i_555^(0+128),w
  1986  02B0  3A80               	xorlw	128
  1987  02B1  3E70               	addlw	-144
  1988  02B2  1803               	btfsc	3,0
  1989  02B3  2AC9               	goto	l3286
  1990  02B4                     l3280:	
  1991  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1992  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1993  02B6  01A3               	clrf	LCDByte@isdata
  1994  02B7  0AA3               	incf	LCDByte@isdata,f
  1995  02B8  3020               	movlw	32
  1996  02B9  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  1997  02BE  3001               	movlw	1
  1998  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1999  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2000  02C1  00C0               	movwf	??_main^(0+128)
  2001  02C2  0840               	movf	??_main^(0+128),w
  2002  02C3  07D0               	addwf	main@i_555^(0+128),f
  2003  02C4  0850               	movf	main@i_555^(0+128),w
  2004  02C5  3A80               	xorlw	128
  2005  02C6  3E70               	addlw	-144
  2006  02C7  1C03               	skipc
  2007  02C8  2AB4               	goto	l3280
  2008  02C9                     l3286:	
  2009                           
  2010                           ;do_am.c: 251: if(mode == MENU)
  2011  02C9  0864               	movf	_mode^(0+128),w
  2012  02CA  1D03               	btfss	3,2
  2013  02CB  2ADF               	goto	l3296
  2014                           
  2015                           ;do_am.c: 252: {
  2016                           ;do_am.c: 253: if(submode == EDIT)
  2017  02CC  0866               	movf	_submode^(0+128),w
  2018  02CD  1D03               	btfss	3,2
  2019  02CE  2AD5               	goto	l3292
  2020                           
  2021                           ;do_am.c: 254: {
  2022                           ;do_am.c: 255: ValueInc();
  2023  02CF  120A  158A  2509  120A  118A  	fcall	_ValueInc
  2024                           
  2025                           ;do_am.c: 256: }
  2026  02D4  2ADA               	goto	l3294
  2027  02D5                     l3292:	
  2028                           
  2029                           ;do_am.c: 257: else
  2030                           ;do_am.c: 258: {
  2031                           ;do_am.c: 259: MenuUp();
  2032  02D5  120A  158A  246E  120A  118A  	fcall	_MenuUp
  2033  02DA                     l3294:	
  2034                           
  2035                           ;do_am.c: 260: }
  2036                           ;do_am.c: 261: ShowMenu();
  2037  02DA  120A  158A  27A2  120A  118A  	fcall	_ShowMenu
  2038  02DF                     l3296:	
  2039                           
  2040                           ;do_am.c: 262: }
  2041                           ;do_am.c: 263: _delay((unsigned long)((200)*(20000000/4000.0)));
  2042  02DF  3006               	movlw	6
  2043  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  2044  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  2045  02E2  00C2               	movwf	(??_main^(0+128)+2)
  2046  02E3  3013               	movlw	19
  2047  02E4  00C1               	movwf	(??_main^(0+128)+1)
  2048  02E5  30B1               	movlw	177
  2049  02E6  00C0               	movwf	??_main^(0+128)
  2050  02E7                     u3927:	
  2051  02E7  0BC0               	decfsz	??_main^(0+128),f
  2052  02E8  2AE7               	goto	u3927
  2053  02E9  0BC1               	decfsz	(??_main^(0+128)+1),f
  2054  02EA  2AE7               	goto	u3927
  2055  02EB  0BC2               	decfsz	(??_main^(0+128)+2),f
  2056  02EC  2AE7               	goto	u3927
  2057  02ED  2AEE               	nop2
  2058  02EE                     l3134:	
  2059                           ;do_am.c: 193: while(1)
  2060                           
  2061                           ;do_am.c: 264: }
  2062                           
  2063                           
  2064                           ;do_am.c: 194: {
  2065                           ;do_am.c: 203: if(RA6 == 0)
  2066  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2067  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2068  02F0  1F05               	btfss	5,6	;volatile
  2069  02F1  285E               	goto	l3136
  2070                           
  2071                           ;do_am.c: 208: else
  2072                           ;do_am.c: 209: {
  2073                           ;do_am.c: 210: if(RB4 == 0)
  2074  02F2  1E06               	btfss	6,4	;volatile
  2075  02F3  2963               	goto	l3182
  2076                           
  2077                           ;do_am.c: 228: else if(RB6 == 0)
  2078  02F4  1F06               	btfss	6,6	;volatile
  2079  02F5  29FB               	goto	l3228
  2080                           
  2081                           ;do_am.c: 248: else if(RB5 == 0)
  2082  02F6  1E86               	btfss	6,5	;volatile
  2083  02F7  2A93               	goto	l3270
  2084                           
  2085                           ;do_am.c: 265: else if(RB7 == 0)
  2086  02F8  1B86               	btfsc	6,7	;volatile
  2087  02F9  2AEE               	goto	l3134
  2088                           
  2089                           ;do_am.c: 266: {
  2090                           ;do_am.c: 267: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("DOWN"); for(int8_t i =
      +                           count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  2091  02FA  01AA               	clrf	LCDGotoXY@y
  2092  02FB  0AAA               	incf	LCDGotoXY@y,f
  2093  02FC  3000               	movlw	0
  2094  02FD  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  2095  0302  3064               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2096  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0305  00AA               	movwf	LCDWriteString@msg
  2099  0306  3080               	movlw	128
  2100  0307  00AB               	movwf	LCDWriteString@msg+1
  2101  0308  120A  118A  2751  120A  118A  	fcall	_LCDWriteString
  2102  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2103  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2104  030F  00C0               	movwf	??_main^(0+128)
  2105  0310  0840               	movf	??_main^(0+128),w
  2106  0311  00CA               	movwf	main@count_556^(0+128)
  2107  0312  084A               	movf	main@count_556^(0+128),w
  2108  0313  00C0               	movwf	??_main^(0+128)
  2109  0314  0840               	movf	??_main^(0+128),w
  2110  0315  00D1               	movwf	main@i_558^(0+128)
  2111  0316  0851               	movf	main@i_558^(0+128),w
  2112  0317  3A80               	xorlw	128
  2113  0318  3E70               	addlw	-144
  2114  0319  1803               	btfsc	3,0
  2115  031A  2B30               	goto	l3314
  2116  031B                     l3308:	
  2117  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2118  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2119  031D  01A3               	clrf	LCDByte@isdata
  2120  031E  0AA3               	incf	LCDByte@isdata,f
  2121  031F  3020               	movlw	32
  2122  0320  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  2123  0325  3001               	movlw	1
  2124  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2125  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2126  0328  00C0               	movwf	??_main^(0+128)
  2127  0329  0840               	movf	??_main^(0+128),w
  2128  032A  07D1               	addwf	main@i_558^(0+128),f
  2129  032B  0851               	movf	main@i_558^(0+128),w
  2130  032C  3A80               	xorlw	128
  2131  032D  3E70               	addlw	-144
  2132  032E  1C03               	skipc
  2133  032F  2B1B               	goto	l3308
  2134  0330                     l3314:	
  2135                           
  2136                           ;do_am.c: 268: if(mode == MENU)
  2137  0330  0864               	movf	_mode^(0+128),w
  2138  0331  1D03               	btfss	3,2
  2139  0332  2B46               	goto	l3324
  2140                           
  2141                           ;do_am.c: 269: {
  2142                           ;do_am.c: 270: if(submode == EDIT)
  2143  0333  0866               	movf	_submode^(0+128),w
  2144  0334  1D03               	btfss	3,2
  2145  0335  2B3C               	goto	l3320
  2146                           
  2147                           ;do_am.c: 271: {
  2148                           ;do_am.c: 272: ValueDec();
  2149  0336  120A  158A  24E2  120A  118A  	fcall	_ValueDec
  2150                           
  2151                           ;do_am.c: 273: }
  2152  033B  2B41               	goto	l3322
  2153  033C                     l3320:	
  2154                           
  2155                           ;do_am.c: 274: else
  2156                           ;do_am.c: 275: {
  2157                           ;do_am.c: 276: MenuDown();
  2158  033C  120A  158A  2461  120A  118A  	fcall	_MenuDown
  2159  0341                     l3322:	
  2160                           
  2161                           ;do_am.c: 277: }
  2162                           ;do_am.c: 278: ShowMenu();
  2163  0341  120A  158A  27A2  120A  118A  	fcall	_ShowMenu
  2164  0346                     l3324:	
  2165                           
  2166                           ;do_am.c: 279: }
  2167                           ;do_am.c: 280: _delay((unsigned long)((200)*(20000000/4000.0)));
  2168  0346  3006               	movlw	6
  2169  0347  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0348  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0349  00C2               	movwf	(??_main^(0+128)+2)
  2172  034A  3013               	movlw	19
  2173  034B  00C1               	movwf	(??_main^(0+128)+1)
  2174  034C  30B1               	movlw	177
  2175  034D  00C0               	movwf	??_main^(0+128)
  2176  034E                     u3937:	
  2177  034E  0BC0               	decfsz	??_main^(0+128),f
  2178  034F  2B4E               	goto	u3937
  2179  0350  0BC1               	decfsz	(??_main^(0+128)+1),f
  2180  0351  2B4E               	goto	u3937
  2181  0352  0BC2               	decfsz	(??_main^(0+128)+2),f
  2182  0353  2B4E               	goto	u3937
  2183  0354  2B55               	nop2
  2184  0355  2AEE               	goto	l3134
  2185  0356                     l196:	
  2186  0356  120A  118A  2812   	ljmp	start
  2187  0359                     __end_of_main:	
  2188                           
  2189                           	psect	text1
  2190  0C9B                     __ptext1:	
  2191 ;; *************** function _extract_REG_ID_RQT_CMD *****************
  2192 ;; Defined at:
  2193 ;;		line 48 in file "reg_id.h"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  pmsg            1    wreg     PTR const struct .
  2196 ;;		 -> msg(23), 
  2197 ;;  prqt            1    5[COMMON] PTR struct .
  2198 ;;		 -> main@rqt(1), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  pmsg            1    7[BANK0 ] PTR const struct .
  2201 ;;		 -> msg(23), 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         1       0       0       0       0
  2212 ;;      Locals:         0       1       0       0       0
  2213 ;;      Temps:          0       1       0       0       0
  2214 ;;      Totals:         1       2       0       0       0
  2215 ;;Total ram usage:        3 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    2
  2218 ;; This function calls:
  2219 ;;		_memcpy
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _extract_REG_ID_RQT_CMD
  2227  0C9B                     _extract_REG_ID_RQT_CMD:	
  2228                           
  2229                           ;incstack = 0
  2230                           ; Regs used in _extract_REG_ID_RQT_CMD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2231                           ;extract_REG_ID_RQT_CMD@pmsg stored from wreg
  2232  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0C9D  00A7               	movwf	extract_REG_ID_RQT_CMD@pmsg
  2235                           
  2236                           ;reg_id.h: 50: memcpy((void *)prqt, (void *)pmsg->data, 1);
  2237  0C9E  0827               	movf	extract_REG_ID_RQT_CMD@pmsg,w
  2238  0C9F  3E07               	addlw	7
  2239  0CA0  00A6               	movwf	??_extract_REG_ID_RQT_CMD
  2240  0CA1  0826               	movf	??_extract_REG_ID_RQT_CMD,w
  2241  0CA2  00A0               	movwf	memcpy@s1
  2242  0CA3  3001               	movlw	1
  2243  0CA4  00A1               	movwf	memcpy@n
  2244  0CA5  3000               	movlw	0
  2245  0CA6  00A2               	movwf	memcpy@n+1
  2246  0CA7  0875               	movf	extract_REG_ID_RQT_CMD@prqt,w
  2247  0CA8  120A  158A  2561   	fcall	_memcpy
  2248  0CAB  0008               	return
  2249  0CAC                     __end_of_extract_REG_ID_RQT_CMD:	
  2250                           
  2251                           	psect	text2
  2252  0D61                     __ptext2:	
  2253 ;; *************** function _memcpy *****************
  2254 ;; Defined at:
  2255 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memcpy.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  d1              1    wreg     PTR void 
  2258 ;;		 -> main@rqt(1), 
  2259 ;;  s1              1    0[BANK0 ] PTR const void 
  2260 ;;		 -> msg.data(16), msg(23), 
  2261 ;;  n               2    1[BANK0 ] unsigned int 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  d1              1    5[BANK0 ] PTR void 
  2264 ;;		 -> main@rqt(1), 
  2265 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  2266 ;;		 -> msg.data(16), msg(23), 
  2267 ;;  d               1    3[BANK0 ] PTR unsigned char 
  2268 ;;		 -> main@rqt(1), 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      PTR void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         0       3       0       0       0
  2279 ;;      Locals:         0       3       0       0       0
  2280 ;;      Temps:          1       0       0       0       0
  2281 ;;      Totals:         1       6       0       0       0
  2282 ;;Total ram usage:        7 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    1
  2285 ;; This function calls:
  2286 ;;		Nothing
  2287 ;; This function is called by:
  2288 ;;		_extract_REG_ID_RQT_CMD
  2289 ;;		_compose
  2290 ;;		_extract_REG_ID_RSP_CMD
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           
  2295                           ;psect for function _memcpy
  2296  0D61                     _memcpy:	
  2297                           
  2298                           ;incstack = 0
  2299                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  2300                           ;memcpy@d1 stored from wreg
  2301  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0D63  00A5               	movwf	memcpy@d1
  2304  0D64  0820               	movf	memcpy@s1,w
  2305  0D65  00F4               	movwf	??_memcpy
  2306  0D66  0874               	movf	??_memcpy,w
  2307  0D67  00A4               	movwf	memcpy@s
  2308  0D68  0825               	movf	memcpy@d1,w
  2309  0D69  00F4               	movwf	??_memcpy
  2310  0D6A  0874               	movf	??_memcpy,w
  2311  0D6B  00A3               	movwf	memcpy@d
  2312  0D6C                     l2784:	
  2313  0D6C  3001               	movlw	1
  2314  0D6D  02A1               	subwf	memcpy@n,f
  2315  0D6E  3000               	movlw	0
  2316  0D6F  1C03               	skipc
  2317  0D70  03A2               	decf	memcpy@n+1,f
  2318  0D71  02A2               	subwf	memcpy@n+1,f
  2319  0D72  0A21               	incf	memcpy@n,w
  2320  0D73  1903               	btfsc	3,2
  2321  0D74  0A22               	incf	memcpy@n+1,w
  2322  0D75  1903               	btfsc	3,2
  2323  0D76  0008               	return
  2324  0D77  0824               	movf	memcpy@s,w
  2325  0D78  0084               	movwf	4
  2326  0D79  1383               	bcf	3,7	;select IRP bank0
  2327  0D7A  0800               	movf	0,w
  2328  0D7B  00F4               	movwf	??_memcpy
  2329  0D7C  0823               	movf	memcpy@d,w
  2330  0D7D  0084               	movwf	4
  2331  0D7E  0874               	movf	??_memcpy,w
  2332  0D7F  0080               	movwf	0
  2333  0D80  3001               	movlw	1
  2334  0D81  00F4               	movwf	??_memcpy
  2335  0D82  0874               	movf	??_memcpy,w
  2336  0D83  07A4               	addwf	memcpy@s,f
  2337  0D84  3001               	movlw	1
  2338  0D85  00F4               	movwf	??_memcpy
  2339  0D86  0874               	movf	??_memcpy,w
  2340  0D87  07A3               	addwf	memcpy@d,f
  2341  0D88  2D6C               	goto	l2784
  2342  0D89                     __end_of_memcpy:	
  2343                           ;	Return value of _memcpy is never used
  2344                           
  2345                           
  2346                           	psect	text3
  2347  0430                     __ptext3:	
  2348 ;; *************** function _dum_msg *****************
  2349 ;; Defined at:
  2350 ;;		line 72 in file "msg.h"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  pmsg            1    wreg     PTR struct .
  2353 ;;		 -> msg(23), 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  pmsg            1   34[BANK3 ] PTR struct .
  2356 ;;		 -> msg(23), 
  2357 ;;  i               1   33[BANK3 ] char 
  2358 ;;  count           1   32[BANK3 ] char 
  2359 ;;  s              32    0[BANK3 ] unsigned char [32]
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2369 ;;      Params:         0       0       0       0       0
  2370 ;;      Locals:         0       0       0      35       0
  2371 ;;      Temps:          0      11       0       0       0
  2372 ;;      Totals:         0      11       0      35       0
  2373 ;;Total ram usage:       46 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    4
  2376 ;; This function calls:
  2377 ;;		_LCDByte
  2378 ;;		_LCDGotoXY
  2379 ;;		_LCDWriteString
  2380 ;;		_sprintf
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _dum_msg
  2388  0430                     _dum_msg:	
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _dum_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2392                           ;dum_msg@pmsg stored from wreg
  2393  0430  1683               	bsf	3,5	;RP0=1, select bank3
  2394  0431  1703               	bsf	3,6	;RP1=1, select bank3
  2395  0432  00B2               	movwf	dum_msg@pmsg^(0+384)
  2396                           
  2397                           ;msg.h: 74: char s[32];
  2398                           ;msg.h: 75: sprintf(s, "M:%d,%d,%d,%d,%d,%d", pmsg->msglen, pmsg->crc, pmsg->from, pmsg-
      +                          >to, pmsg->msgid, pmsg->cmd);
  2399  0433  3090               	movlw	(low (dum_msg@s| (0+256)))& (0+255)
  2400  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2401  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2402  0436  00AC               	movwf	sprintf@sp
  2403  0437  3001               	movlw	1
  2404  0438  00AD               	movwf	sprintf@sp+1
  2405  0439  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2406  043A  00C4               	movwf	??_dum_msg
  2407  043B  0844               	movf	??_dum_msg,w
  2408  043C  00AE               	movwf	sprintf@f
  2409  043D  1683               	bsf	3,5	;RP0=1, select bank3
  2410  043E  1703               	bsf	3,6	;RP1=1, select bank3
  2411  043F  0832               	movf	dum_msg@pmsg^(0+384),w
  2412  0440  0084               	movwf	4
  2413  0441  1383               	bcf	3,7	;select IRP bank0
  2414  0442  0800               	movf	0,w
  2415  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0445  00C5               	movwf	??_dum_msg+1
  2418  0446  01C6               	clrf	??_dum_msg+2
  2419  0447  0845               	movf	??_dum_msg+1,w
  2420  0448  00AF               	movwf	?_sprintf+3
  2421  0449  0846               	movf	??_dum_msg+2,w
  2422  044A  00B0               	movwf	?_sprintf+4
  2423  044B  1683               	bsf	3,5	;RP0=1, select bank3
  2424  044C  1703               	bsf	3,6	;RP1=1, select bank3
  2425  044D  0A32               	incf	dum_msg@pmsg^(0+384),w
  2426  044E  0084               	movwf	4
  2427  044F  0800               	movf	0,w
  2428  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0452  00B1               	movwf	?_sprintf+5
  2431  0453  0A84               	incf	4,f
  2432  0454  0800               	movf	0,w
  2433  0455  00B2               	movwf	?_sprintf+6
  2434  0456  1683               	bsf	3,5	;RP0=1, select bank3
  2435  0457  1703               	bsf	3,6	;RP1=1, select bank3
  2436  0458  0832               	movf	dum_msg@pmsg^(0+384),w
  2437  0459  3E03               	addlw	3
  2438  045A  0084               	movwf	4
  2439  045B  0800               	movf	0,w
  2440  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2441  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2442  045E  00C7               	movwf	??_dum_msg+3
  2443  045F  01C8               	clrf	??_dum_msg+4
  2444  0460  0847               	movf	??_dum_msg+3,w
  2445  0461  00B3               	movwf	?_sprintf+7
  2446  0462  0848               	movf	??_dum_msg+4,w
  2447  0463  00B4               	movwf	?_sprintf+8
  2448  0464  1683               	bsf	3,5	;RP0=1, select bank3
  2449  0465  1703               	bsf	3,6	;RP1=1, select bank3
  2450  0466  0832               	movf	dum_msg@pmsg^(0+384),w
  2451  0467  3E04               	addlw	4
  2452  0468  0084               	movwf	4
  2453  0469  0800               	movf	0,w
  2454  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2455  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2456  046C  00C9               	movwf	??_dum_msg+5
  2457  046D  01CA               	clrf	??_dum_msg+6
  2458  046E  0849               	movf	??_dum_msg+5,w
  2459  046F  00B5               	movwf	?_sprintf+9
  2460  0470  084A               	movf	??_dum_msg+6,w
  2461  0471  00B6               	movwf	?_sprintf+10
  2462  0472  1683               	bsf	3,5	;RP0=1, select bank3
  2463  0473  1703               	bsf	3,6	;RP1=1, select bank3
  2464  0474  0832               	movf	dum_msg@pmsg^(0+384),w
  2465  0475  3E05               	addlw	5
  2466  0476  0084               	movwf	4
  2467  0477  0800               	movf	0,w
  2468  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2470  047A  00CB               	movwf	??_dum_msg+7
  2471  047B  01CC               	clrf	??_dum_msg+8
  2472  047C  084B               	movf	??_dum_msg+7,w
  2473  047D  00B7               	movwf	?_sprintf+11
  2474  047E  084C               	movf	??_dum_msg+8,w
  2475  047F  00B8               	movwf	?_sprintf+12
  2476  0480  1683               	bsf	3,5	;RP0=1, select bank3
  2477  0481  1703               	bsf	3,6	;RP1=1, select bank3
  2478  0482  0832               	movf	dum_msg@pmsg^(0+384),w
  2479  0483  3E06               	addlw	6
  2480  0484  0084               	movwf	4
  2481  0485  0800               	movf	0,w
  2482  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0487  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0488  00CD               	movwf	??_dum_msg+9
  2485  0489  01CE               	clrf	??_dum_msg+10
  2486  048A  084D               	movf	??_dum_msg+9,w
  2487  048B  00B9               	movwf	?_sprintf+13
  2488  048C  084E               	movf	??_dum_msg+10,w
  2489  048D  00BA               	movwf	?_sprintf+14
  2490  048E  120A  118A  2359  120A  118A  	fcall	_sprintf
  2491                           
  2492                           ;msg.h: 76: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString(""); for(int8_t i = count +
      +                           0; i < 16; i++) { (LCDByte(' ',1)); } };}; {{ LCDGotoXY(0,1); LCDWriteString(s);};};
  2493  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0495  01AA               	clrf	LCDGotoXY@y
  2496  0496  0AAA               	incf	LCDGotoXY@y,f
  2497  0497  3000               	movlw	0
  2498  0498  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  2499  049D  3054               	movlw	(low (((STR_11+4)-__stringbase)| (0+32768)))& (0+255)
  2500  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2501  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2502  04A0  00AA               	movwf	LCDWriteString@msg
  2503  04A1  3080               	movlw	128
  2504  04A2  00AB               	movwf	LCDWriteString@msg+1
  2505  04A3  120A  118A  2751  120A  118A  	fcall	_LCDWriteString
  2506  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2507  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2508  04AA  00C4               	movwf	??_dum_msg
  2509  04AB  0844               	movf	??_dum_msg,w
  2510  04AC  1683               	bsf	3,5	;RP0=1, select bank3
  2511  04AD  1703               	bsf	3,6	;RP1=1, select bank3
  2512  04AE  00B0               	movwf	dum_msg@count^(0+384)
  2513  04AF  0830               	movf	dum_msg@count^(0+384),w
  2514  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2515  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2516  04B2  00C4               	movwf	??_dum_msg
  2517  04B3  0844               	movf	??_dum_msg,w
  2518  04B4  1683               	bsf	3,5	;RP0=1, select bank3
  2519  04B5  1703               	bsf	3,6	;RP1=1, select bank3
  2520  04B6  00B1               	movwf	dum_msg@i^(0+384)
  2521  04B7  0831               	movf	dum_msg@i^(0+384),w
  2522  04B8  3A80               	xorlw	128
  2523  04B9  3E70               	addlw	-144
  2524  04BA  1803               	btfsc	3,0
  2525  04BB  2CD3               	goto	l2966
  2526  04BC                     l2960:	
  2527  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2528  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2529  04BE  01A3               	clrf	LCDByte@isdata
  2530  04BF  0AA3               	incf	LCDByte@isdata,f
  2531  04C0  3020               	movlw	32
  2532  04C1  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  2533  04C6  3001               	movlw	1
  2534  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2535  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2536  04C9  00C4               	movwf	??_dum_msg
  2537  04CA  0844               	movf	??_dum_msg,w
  2538  04CB  1683               	bsf	3,5	;RP0=1, select bank3
  2539  04CC  1703               	bsf	3,6	;RP1=1, select bank3
  2540  04CD  07B1               	addwf	dum_msg@i^(0+384),f
  2541  04CE  0831               	movf	dum_msg@i^(0+384),w
  2542  04CF  3A80               	xorlw	128
  2543  04D0  3E70               	addlw	-144
  2544  04D1  1C03               	skipc
  2545  04D2  2CBC               	goto	l2960
  2546  04D3                     l2966:	
  2547  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2548  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2549  04D5  01AA               	clrf	LCDGotoXY@y
  2550  04D6  0AAA               	incf	LCDGotoXY@y,f
  2551  04D7  3000               	movlw	0
  2552  04D8  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  2553  04DD  3090               	movlw	(low (dum_msg@s| (0+256)))& (0+255)
  2554  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2555  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2556  04E0  00AA               	movwf	LCDWriteString@msg
  2557  04E1  3001               	movlw	1
  2558  04E2  00AB               	movwf	LCDWriteString@msg+1
  2559  04E3  120A  118A  2751   	fcall	_LCDWriteString
  2560  04E6  0008               	return
  2561  04E7                     __end_of_dum_msg:	
  2562                           
  2563                           	psect	text4
  2564  0588                     __ptext4:	
  2565 ;; *************** function _dum_conn *****************
  2566 ;; Defined at:
  2567 ;;		line 34 in file "connection.h"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  pconn           1    wreg     PTR struct .
  2570 ;;		 -> server_conn(4), 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  pconn           1   79[BANK0 ] PTR struct .
  2573 ;;		 -> server_conn(4), 
  2574 ;;  i               1   78[BANK0 ] char 
  2575 ;;  count           1   77[BANK0 ] char 
  2576 ;;  s              32   45[BANK0 ] unsigned char [32]
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         0       0       0       0       0
  2587 ;;      Locals:         0      35       0       0       0
  2588 ;;      Temps:          0       9       0       0       0
  2589 ;;      Totals:         0      44       0       0       0
  2590 ;;Total ram usage:       44 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    4
  2593 ;; This function calls:
  2594 ;;		_LCDByte
  2595 ;;		_LCDGotoXY
  2596 ;;		_LCDWriteString
  2597 ;;		_sprintf
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           
  2604                           ;psect for function _dum_conn
  2605  0588                     _dum_conn:	
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _dum_conn: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2609                           ;dum_conn@pconn stored from wreg
  2610  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2612  058A  00EF               	movwf	dum_conn@pconn
  2613                           
  2614                           ;connection.h: 36: char s[32];
  2615                           ;connection.h: 37: sprintf(s, "C:%d,%d,%d,%d", pconn->from, pconn->to, pconn->msgid, pco
      +                          nn->available);
  2616  058B  304D               	movlw	(low (dum_conn@s| 0))& (0+255)
  2617  058C  00AC               	movwf	sprintf@sp
  2618  058D  3000               	movlw	0
  2619  058E  00AD               	movwf	sprintf@sp+1
  2620  058F  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2621  0590  00C4               	movwf	??_dum_conn
  2622  0591  0844               	movf	??_dum_conn,w
  2623  0592  00AE               	movwf	sprintf@f
  2624  0593  086F               	movf	dum_conn@pconn,w
  2625  0594  0084               	movwf	4
  2626  0595  0800               	movf	0,w
  2627  0596  00C5               	movwf	??_dum_conn+1
  2628  0597  01C6               	clrf	??_dum_conn+2
  2629  0598  0845               	movf	??_dum_conn+1,w
  2630  0599  00AF               	movwf	?_sprintf+3
  2631  059A  0846               	movf	??_dum_conn+2,w
  2632  059B  00B0               	movwf	?_sprintf+4
  2633  059C  0A6F               	incf	dum_conn@pconn,w
  2634  059D  0084               	movwf	4
  2635  059E  0800               	movf	0,w
  2636  059F  00C7               	movwf	??_dum_conn+3
  2637  05A0  01C8               	clrf	??_dum_conn+4
  2638  05A1  0847               	movf	??_dum_conn+3,w
  2639  05A2  00B1               	movwf	?_sprintf+5
  2640  05A3  0848               	movf	??_dum_conn+4,w
  2641  05A4  00B2               	movwf	?_sprintf+6
  2642  05A5  086F               	movf	dum_conn@pconn,w
  2643  05A6  3E02               	addlw	2
  2644  05A7  0084               	movwf	4
  2645  05A8  0800               	movf	0,w
  2646  05A9  00C9               	movwf	??_dum_conn+5
  2647  05AA  01CA               	clrf	??_dum_conn+6
  2648  05AB  0849               	movf	??_dum_conn+5,w
  2649  05AC  00B3               	movwf	?_sprintf+7
  2650  05AD  084A               	movf	??_dum_conn+6,w
  2651  05AE  00B4               	movwf	?_sprintf+8
  2652  05AF  086F               	movf	dum_conn@pconn,w
  2653  05B0  3E03               	addlw	3
  2654  05B1  0084               	movwf	4
  2655  05B2  0800               	movf	0,w
  2656  05B3  00CB               	movwf	??_dum_conn+7
  2657  05B4  01CC               	clrf	??_dum_conn+8
  2658  05B5  084B               	movf	??_dum_conn+7,w
  2659  05B6  00B5               	movwf	?_sprintf+9
  2660  05B7  084C               	movf	??_dum_conn+8,w
  2661  05B8  00B6               	movwf	?_sprintf+10
  2662  05B9  120A  118A  2359  120A  118A  	fcall	_sprintf
  2663                           
  2664                           ;connection.h: 38: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString(""); for(int8_t i = 
      +                          count + 0; i < 16; i++) { (LCDByte(' ',1)); } };}; {{ LCDGotoXY(0,1); LCDWriteString(s);
      +                          };};
  2665  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2666  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2667  05C0  01AA               	clrf	LCDGotoXY@y
  2668  05C1  0AAA               	incf	LCDGotoXY@y,f
  2669  05C2  3000               	movlw	0
  2670  05C3  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  2671  05C8  3054               	movlw	(low (((STR_11+4)-__stringbase)| (0+32768)))& (0+255)
  2672  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2673  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2674  05CB  00AA               	movwf	LCDWriteString@msg
  2675  05CC  3080               	movlw	128
  2676  05CD  00AB               	movwf	LCDWriteString@msg+1
  2677  05CE  120A  118A  2751  120A  118A  	fcall	_LCDWriteString
  2678  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2679  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2680  05D5  00C4               	movwf	??_dum_conn
  2681  05D6  0844               	movf	??_dum_conn,w
  2682  05D7  00ED               	movwf	dum_conn@count
  2683  05D8  086D               	movf	dum_conn@count,w
  2684  05D9  00C4               	movwf	??_dum_conn
  2685  05DA  0844               	movf	??_dum_conn,w
  2686  05DB  00EE               	movwf	dum_conn@i
  2687  05DC  086E               	movf	dum_conn@i,w
  2688  05DD  3A80               	xorlw	128
  2689  05DE  3E70               	addlw	-144
  2690  05DF  1803               	btfsc	3,0
  2691  05E0  2DF4               	goto	l2988
  2692  05E1                     l2982:	
  2693  05E1  01A3               	clrf	LCDByte@isdata
  2694  05E2  0AA3               	incf	LCDByte@isdata,f
  2695  05E3  3020               	movlw	32
  2696  05E4  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  2697  05E9  3001               	movlw	1
  2698  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  2699  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  2700  05EC  00C4               	movwf	??_dum_conn
  2701  05ED  0844               	movf	??_dum_conn,w
  2702  05EE  07EE               	addwf	dum_conn@i,f
  2703  05EF  086E               	movf	dum_conn@i,w
  2704  05F0  3A80               	xorlw	128
  2705  05F1  3E70               	addlw	-144
  2706  05F2  1C03               	skipc
  2707  05F3  2DE1               	goto	l2982
  2708  05F4                     l2988:	
  2709  05F4  01AA               	clrf	LCDGotoXY@y
  2710  05F5  0AAA               	incf	LCDGotoXY@y,f
  2711  05F6  3000               	movlw	0
  2712  05F7  120A  158A  253B  120A  118A  	fcall	_LCDGotoXY
  2713  05FC  304D               	movlw	(low (dum_conn@s| 0))& (0+255)
  2714  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2715  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2716  05FF  00AA               	movwf	LCDWriteString@msg
  2717  0600  3000               	movlw	0
  2718  0601  00AB               	movwf	LCDWriteString@msg+1
  2719  0602  120A  118A  2751   	fcall	_LCDWriteString
  2720  0605  0008               	return
  2721  0606                     __end_of_dum_conn:	
  2722                           
  2723                           	psect	text5
  2724  0359                     __ptext5:	
  2725 ;; *************** function _sprintf *****************
  2726 ;; Defined at:
  2727 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  2730 ;;		 -> dum_conn@s(32), dum_msg@s(32), 
  2731 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  2732 ;;		 -> STR_3(14), STR_1(20), 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  tmpval          4    0        struct .
  2735 ;;  val             2   33[BANK0 ] unsigned int 
  2736 ;;  cp              2    0        PTR const unsigned char 
  2737 ;;  len             2    0        unsigned int 
  2738 ;;  c               1   35[BANK0 ] char 
  2739 ;;  prec            1   32[BANK0 ] char 
  2740 ;;  flag            1   31[BANK0 ] unsigned char 
  2741 ;;  ap              1   30[BANK0 ] PTR void [1]
  2742 ;;		 -> ?_sprintf(2), 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  2   12[BANK0 ] int 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2752 ;;      Params:         0      15       0       0       0
  2753 ;;      Locals:         0       6       0       0       0
  2754 ;;      Temps:          0       3       0       0       0
  2755 ;;      Totals:         0      24       0       0       0
  2756 ;;Total ram usage:       24 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    2
  2759 ;; This function calls:
  2760 ;;		___lwdiv
  2761 ;;		___lwmod
  2762 ;; This function is called by:
  2763 ;;		_dum_msg
  2764 ;;		_dum_conn
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function _sprintf
  2770  0359                     _sprintf:	
  2771                           
  2772                           ;doprnt.c: 494: va_list ap;
  2773                           ;doprnt.c: 499: signed char c;
  2774                           ;doprnt.c: 506: signed char prec;
  2775                           ;doprnt.c: 508: unsigned char flag;
  2776                           ;doprnt.c: 523: union {
  2777                           ;doprnt.c: 524: unsigned long vd;
  2778                           ;doprnt.c: 525: double integ;
  2779                           ;doprnt.c: 526: } tmpval;
  2780                           ;doprnt.c: 528: unsigned int val;
  2781                           ;doprnt.c: 529: unsigned len;
  2782                           ;doprnt.c: 530: const char * cp;
  2783                           ;doprnt.c: 533: *ap = __va_start();
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2787  0359  302F               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2788  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2789  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2790  035C  00BB               	movwf	??_sprintf
  2791  035D  083B               	movf	??_sprintf,w
  2792  035E  00BE               	movwf	sprintf@ap
  2793  035F                     l2838:	
  2794                           ;doprnt.c: 536: while(c = *f++) {
  2795                           
  2796  035F  3001               	movlw	1
  2797  0360  07AE               	addwf	sprintf@f,f
  2798  0361  30FF               	movlw	-1
  2799  0362  072E               	addwf	sprintf@f,w
  2800  0363  0084               	movwf	4
  2801  0364  120A  118A  2610  120A  118A  	fcall	stringdir
  2802  0369  00BB               	movwf	??_sprintf
  2803  036A  083B               	movf	??_sprintf,w
  2804  036B  00C3               	movwf	sprintf@c
  2805  036C  0843               	movf	sprintf@c,w
  2806  036D  1903               	btfsc	3,2
  2807  036E  2C29               	goto	l2840
  2808                           
  2809                           ;doprnt.c: 538: if(c != '%')
  2810  036F  3025               	movlw	37
  2811  0370  0643               	xorwf	sprintf@c,w
  2812  0371  1903               	btfsc	3,2
  2813  0372  2B7F               	goto	l2794
  2814                           
  2815                           ;doprnt.c: 540: {
  2816                           ;doprnt.c: 541: ((*sp++ = (c)));
  2817  0373  082C               	movf	sprintf@sp,w
  2818  0374  0084               	movwf	4
  2819  0375  1383               	bcf	3,7
  2820  0376  182D               	btfsc	sprintf@sp+1,0
  2821  0377  1783               	bsf	3,7
  2822  0378  0843               	movf	sprintf@c,w
  2823  0379  0080               	movwf	0
  2824  037A  3001               	movlw	1
  2825  037B  07AC               	addwf	sprintf@sp,f
  2826  037C  1803               	skipnc
  2827  037D  0AAD               	incf	sprintf@sp+1,f
  2828                           
  2829                           ;doprnt.c: 542: continue;
  2830  037E  2B5F               	goto	l2838
  2831  037F                     l2794:	
  2832                           
  2833                           ;doprnt.c: 543: }
  2834                           ;doprnt.c: 548: flag = 0;
  2835  037F  01BF               	clrf	sprintf@flag
  2836                           
  2837                           ;doprnt.c: 822: }
  2838                           
  2839                           ;doprnt.c: 813: continue;
  2840                           
  2841                           ;doprnt.c: 802: default:
  2842                           
  2843                           ;doprnt.c: 698: case 'i':
  2844                           ;doprnt.c: 699: break;
  2845                           
  2846                           ;doprnt.c: 697: case 'd':
  2847                           
  2848                           ;doprnt.c: 638: goto alldone;
  2849                           
  2850                           ;doprnt.c: 637: case 0:
  2851                           
  2852                           ;doprnt.c: 635: switch(c = *f++) {
  2853  0380  3001               	movlw	1
  2854  0381  07AE               	addwf	sprintf@f,f
  2855  0382  30FF               	movlw	-1
  2856  0383  072E               	addwf	sprintf@f,w
  2857  0384  0084               	movwf	4
  2858  0385  120A  118A  2610  120A  118A  	fcall	stringdir
  2859  038A  00C3               	movwf	sprintf@c
  2860                           
  2861                           ; Switch size 1, requested type "space"
  2862                           ; Number of cases is 3, Range of values is 0 to 105
  2863                           ; switch strategies available:
  2864                           ; Name         Instructions Cycles
  2865                           ; simple_byte           10     6 (average)
  2866                           ; jumptable            260     6 (fixed)
  2867                           ;	Chosen strategy is simple_byte
  2868  038B  3A00               	xorlw	0	; case 0
  2869  038C  1903               	skipnz
  2870  038D  2C29               	goto	l2840
  2871  038E  3A64               	xorlw	100	; case 100
  2872  038F  1903               	skipnz
  2873  0390  2B95               	goto	l2800
  2874  0391  3A0D               	xorlw	13	; case 105
  2875  0392  1903               	skipnz
  2876  0393  2B95               	goto	l2800
  2877  0394  2B5F               	goto	l2838
  2878  0395                     l2800:	
  2879                           
  2880                           ;doprnt.c: 1253: {
  2881                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2882  0395  083E               	movf	sprintf@ap,w
  2883  0396  0084               	movwf	4
  2884  0397  1383               	bcf	3,7	;select IRP bank0
  2885  0398  0800               	movf	0,w
  2886  0399  00C1               	movwf	sprintf@val
  2887  039A  0A84               	incf	4,f
  2888  039B  0800               	movf	0,w
  2889  039C  00C2               	movwf	sprintf@val+1
  2890  039D  3002               	movlw	2
  2891  039E  00BB               	movwf	??_sprintf
  2892  039F  083B               	movf	??_sprintf,w
  2893  03A0  07BE               	addwf	sprintf@ap,f
  2894                           
  2895                           ;doprnt.c: 1261: if((int)val < 0) {
  2896  03A1  1FC2               	btfss	sprintf@val+1,7
  2897  03A2  2BAC               	goto	l2810
  2898                           
  2899                           ;doprnt.c: 1262: flag |= 0x03;
  2900  03A3  3003               	movlw	3
  2901  03A4  00BB               	movwf	??_sprintf
  2902  03A5  083B               	movf	??_sprintf,w
  2903  03A6  04BF               	iorwf	sprintf@flag,f
  2904                           
  2905                           ;doprnt.c: 1263: val = -val;
  2906  03A7  09C1               	comf	sprintf@val,f
  2907  03A8  09C2               	comf	sprintf@val+1,f
  2908  03A9  0AC1               	incf	sprintf@val,f
  2909  03AA  1903               	skipnz
  2910  03AB  0AC2               	incf	sprintf@val+1,f
  2911  03AC                     l2810:	
  2912                           
  2913                           ;doprnt.c: 1264: }
  2914                           ;doprnt.c: 1266: }
  2915                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2916  03AC  01C3               	clrf	sprintf@c
  2917  03AD  0AC3               	incf	sprintf@c,f
  2918  03AE  3005               	movlw	5
  2919  03AF  0643               	xorwf	sprintf@c,w
  2920  03B0  1903               	btfsc	3,2
  2921  03B1  2BD3               	goto	l2822
  2922  03B2                     l2816:	
  2923                           
  2924                           ;doprnt.c: 1306: if(val < dpowers[c])
  2925  03B2  0843               	movf	sprintf@c,w
  2926  03B3  00BB               	movwf	??_sprintf
  2927  03B4  073B               	addwf	??_sprintf,w
  2928  03B5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2929  03B6  0084               	movwf	4
  2930  03B7  120A  118A  2610  120A  118A  	fcall	stringdir
  2931  03BC  00BC               	movwf	??_sprintf+1
  2932  03BD  120A  118A  2610  120A  118A  	fcall	stringdir
  2933  03C2  00BD               	movwf	??_sprintf+2
  2934  03C3  083D               	movf	??_sprintf+2,w
  2935  03C4  0242               	subwf	sprintf@val+1,w
  2936  03C5  1D03               	skipz
  2937  03C6  2BC9               	goto	u3115
  2938  03C7  083C               	movf	??_sprintf+1,w
  2939  03C8  0241               	subwf	sprintf@val,w
  2940  03C9                     u3115:	
  2941  03C9  1C03               	btfss	3,0
  2942  03CA  2BD3               	goto	l2822
  2943                           
  2944                           ;doprnt.c: 1307: break;
  2945  03CB  3001               	movlw	1
  2946  03CC  00BB               	movwf	??_sprintf
  2947  03CD  083B               	movf	??_sprintf,w
  2948  03CE  07C3               	addwf	sprintf@c,f
  2949  03CF  3005               	movlw	5
  2950  03D0  0643               	xorwf	sprintf@c,w
  2951  03D1  1D03               	btfss	3,2
  2952  03D2  2BB2               	goto	l2816
  2953  03D3                     l2822:	
  2954                           
  2955                           ;doprnt.c: 1422: {
  2956                           ;doprnt.c: 1438: if(flag & 0x03)
  2957  03D3  083F               	movf	sprintf@flag,w
  2958  03D4  3903               	andlw	3
  2959  03D5  1903               	btfsc	3,2
  2960  03D6  2BE2               	goto	l2828
  2961                           
  2962                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2963  03D7  082C               	movf	sprintf@sp,w
  2964  03D8  0084               	movwf	4
  2965  03D9  1383               	bcf	3,7
  2966  03DA  182D               	btfsc	sprintf@sp+1,0
  2967  03DB  1783               	bsf	3,7
  2968  03DC  302D               	movlw	45
  2969  03DD  0080               	movwf	0
  2970  03DE  3001               	movlw	1
  2971  03DF  07AC               	addwf	sprintf@sp,f
  2972  03E0  1803               	skipnc
  2973  03E1  0AAD               	incf	sprintf@sp+1,f
  2974  03E2                     l2828:	
  2975                           
  2976                           ;doprnt.c: 1469: }
  2977                           ;doprnt.c: 1472: prec = c;
  2978  03E2  0843               	movf	sprintf@c,w
  2979  03E3  00BB               	movwf	??_sprintf
  2980  03E4  083B               	movf	??_sprintf,w
  2981  03E5  00C0               	movwf	sprintf@prec
  2982  03E6                     l2836:	
  2983                           ;doprnt.c: 1474: while(prec--) {
  2984                           
  2985  03E6  30FF               	movlw	255
  2986  03E7  00BB               	movwf	??_sprintf
  2987  03E8  083B               	movf	??_sprintf,w
  2988  03E9  07C0               	addwf	sprintf@prec,f
  2989  03EA  0A40               	incf	sprintf@prec,w
  2990  03EB  1903               	btfsc	3,2
  2991  03EC  2B5F               	goto	l2838
  2992                           
  2993                           ;doprnt.c: 1478: {
  2994                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2995  03ED  300A               	movlw	10
  2996  03EE  00A7               	movwf	___lwmod@divisor
  2997  03EF  3000               	movlw	0
  2998  03F0  00A8               	movwf	___lwmod@divisor+1
  2999  03F1  0840               	movf	sprintf@prec,w
  3000  03F2  00BB               	movwf	??_sprintf
  3001  03F3  073B               	addwf	??_sprintf,w
  3002  03F4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3003  03F5  0084               	movwf	4
  3004  03F6  120A  118A  2610  120A  118A  	fcall	stringdir
  3005  03FB  00A0               	movwf	___lwdiv@divisor
  3006  03FC  120A  118A  2610  120A  118A  	fcall	stringdir
  3007  0401  00A1               	movwf	___lwdiv@divisor+1
  3008  0402  0842               	movf	sprintf@val+1,w
  3009  0403  00A3               	movwf	___lwdiv@dividend+1
  3010  0404  0841               	movf	sprintf@val,w
  3011  0405  00A2               	movwf	___lwdiv@dividend
  3012  0406  120A  158A  2618  120A  118A  	fcall	___lwdiv
  3013  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3014  040C  1303               	bcf	3,6	;RP1=0, select bank0
  3015  040D  0821               	movf	?___lwdiv+1,w
  3016  040E  00AA               	movwf	___lwmod@dividend+1
  3017  040F  0820               	movf	?___lwdiv,w
  3018  0410  00A9               	movwf	___lwmod@dividend
  3019  0411  120A  158A  25E4  120A  118A  	fcall	___lwmod
  3020  0416  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0417  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0418  0827               	movf	?___lwmod,w
  3023  0419  3E30               	addlw	48
  3024  041A  00BC               	movwf	??_sprintf+1
  3025  041B  083C               	movf	??_sprintf+1,w
  3026  041C  00C3               	movwf	sprintf@c
  3027                           
  3028                           ;doprnt.c: 1523: }
  3029                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3030  041D  082C               	movf	sprintf@sp,w
  3031  041E  0084               	movwf	4
  3032  041F  1383               	bcf	3,7
  3033  0420  182D               	btfsc	sprintf@sp+1,0
  3034  0421  1783               	bsf	3,7
  3035  0422  0843               	movf	sprintf@c,w
  3036  0423  0080               	movwf	0
  3037  0424  3001               	movlw	1
  3038  0425  07AC               	addwf	sprintf@sp,f
  3039  0426  1803               	skipnc
  3040  0427  0AAD               	incf	sprintf@sp+1,f
  3041  0428  2BE6               	goto	l2836
  3042  0429                     l2840:	
  3043                           ;doprnt.c: 1525: }
  3044                           ;doprnt.c: 1533: }
  3045                           ;doprnt.c: 1535: alldone:
  3046                           
  3047                           
  3048                           ;doprnt.c: 1538: *sp = 0;
  3049  0429  082C               	movf	sprintf@sp,w
  3050  042A  0084               	movwf	4
  3051  042B  1783               	bsf	3,7
  3052  042C  1C2D               	btfss	sprintf@sp+1,0
  3053  042D  1383               	bcf	3,7
  3054  042E  0180               	clrf	0
  3055  042F  0008               	return
  3056  0430                     __end_of_sprintf:	
  3057                           ;doprnt.c: 1540: return 0;
  3058                           ;	Return value of _sprintf is never used
  3059                           
  3060                           
  3061                           	psect	text6
  3062  0DE4                     __ptext6:	
  3063 ;; *************** function ___lwmod *****************
  3064 ;; Defined at:
  3065 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  divisor         2    7[BANK0 ] unsigned int 
  3068 ;;  dividend        2    9[BANK0 ] unsigned int 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  counter         1   11[BANK0 ] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  2    7[BANK0 ] unsigned int 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3080 ;;      Params:         0       4       0       0       0
  3081 ;;      Locals:         0       1       0       0       0
  3082 ;;      Temps:          1       0       0       0       0
  3083 ;;      Totals:         1       5       0       0       0
  3084 ;;Total ram usage:        6 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:    1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_sprintf
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           
  3095                           ;psect for function ___lwmod
  3096  0DE4                     ___lwmod:	
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3100  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0DE6  0827               	movf	___lwmod@divisor,w
  3103  0DE7  0428               	iorwf	___lwmod@divisor+1,w
  3104  0DE8  1903               	btfsc	3,2
  3105  0DE9  2E13               	goto	l2772
  3106  0DEA  01AB               	clrf	___lwmod@counter
  3107  0DEB  0AAB               	incf	___lwmod@counter,f
  3108  0DEC                     l2762:	
  3109  0DEC  1BA8               	btfsc	___lwmod@divisor+1,7
  3110  0DED  2DFA               	goto	l2764
  3111  0DEE  3001               	movlw	1
  3112  0DEF                     u3025:	
  3113  0DEF  1003               	clrc
  3114  0DF0  0DA7               	rlf	___lwmod@divisor,f
  3115  0DF1  0DA8               	rlf	___lwmod@divisor+1,f
  3116  0DF2  3EFF               	addlw	-1
  3117  0DF3  1D03               	skipz
  3118  0DF4  2DEF               	goto	u3025
  3119  0DF5  3001               	movlw	1
  3120  0DF6  00F5               	movwf	??___lwmod
  3121  0DF7  0875               	movf	??___lwmod,w
  3122  0DF8  07AB               	addwf	___lwmod@counter,f
  3123  0DF9  2DEC               	goto	l2762
  3124  0DFA                     l2764:	
  3125  0DFA  0828               	movf	___lwmod@divisor+1,w
  3126  0DFB  022A               	subwf	___lwmod@dividend+1,w
  3127  0DFC  1D03               	skipz
  3128  0DFD  2E00               	goto	u3045
  3129  0DFE  0827               	movf	___lwmod@divisor,w
  3130  0DFF  0229               	subwf	___lwmod@dividend,w
  3131  0E00                     u3045:	
  3132  0E00  1C03               	skipc
  3133  0E01  2E08               	goto	l2768
  3134  0E02  0827               	movf	___lwmod@divisor,w
  3135  0E03  02A9               	subwf	___lwmod@dividend,f
  3136  0E04  0828               	movf	___lwmod@divisor+1,w
  3137  0E05  1C03               	skipc
  3138  0E06  03AA               	decf	___lwmod@dividend+1,f
  3139  0E07  02AA               	subwf	___lwmod@dividend+1,f
  3140  0E08                     l2768:	
  3141  0E08  3001               	movlw	1
  3142  0E09                     u3055:	
  3143  0E09  1003               	clrc
  3144  0E0A  0CA8               	rrf	___lwmod@divisor+1,f
  3145  0E0B  0CA7               	rrf	___lwmod@divisor,f
  3146  0E0C  3EFF               	addlw	-1
  3147  0E0D  1D03               	skipz
  3148  0E0E  2E09               	goto	u3055
  3149  0E0F  3001               	movlw	1
  3150  0E10  02AB               	subwf	___lwmod@counter,f
  3151  0E11  1D03               	btfss	3,2
  3152  0E12  2DFA               	goto	l2764
  3153  0E13                     l2772:	
  3154  0E13  082A               	movf	___lwmod@dividend+1,w
  3155  0E14  00A8               	movwf	?___lwmod+1
  3156  0E15  0829               	movf	___lwmod@dividend,w
  3157  0E16  00A7               	movwf	?___lwmod
  3158  0E17  0008               	return
  3159  0E18                     __end_of___lwmod:	
  3160                           
  3161                           	psect	text7
  3162  0E18                     __ptext7:	
  3163 ;; *************** function ___lwdiv *****************
  3164 ;; Defined at:
  3165 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  divisor         2    0[BANK0 ] unsigned int 
  3168 ;;  dividend        2    2[BANK0 ] unsigned int 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  quotient        2    5[BANK0 ] unsigned int 
  3171 ;;  counter         1    4[BANK0 ] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  2    0[BANK0 ] unsigned int 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3181 ;;      Params:         0       4       0       0       0
  3182 ;;      Locals:         0       3       0       0       0
  3183 ;;      Temps:          1       0       0       0       0
  3184 ;;      Totals:         1       7       0       0       0
  3185 ;;Total ram usage:        8 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    1
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_sprintf
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           
  3196                           ;psect for function ___lwdiv
  3197  0E18                     ___lwdiv:	
  3198                           
  3199                           ;incstack = 0
  3200                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3201  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0E1A  01A5               	clrf	___lwdiv@quotient
  3204  0E1B  01A6               	clrf	___lwdiv@quotient+1
  3205  0E1C  0820               	movf	___lwdiv@divisor,w
  3206  0E1D  0421               	iorwf	___lwdiv@divisor+1,w
  3207  0E1E  1903               	btfsc	3,2
  3208  0E1F  2E51               	goto	l2750
  3209  0E20  01A4               	clrf	___lwdiv@counter
  3210  0E21  0AA4               	incf	___lwdiv@counter,f
  3211  0E22                     l2738:	
  3212  0E22  1BA1               	btfsc	___lwdiv@divisor+1,7
  3213  0E23  2E30               	goto	l2740
  3214  0E24  3001               	movlw	1
  3215  0E25                     u2955:	
  3216  0E25  1003               	clrc
  3217  0E26  0DA0               	rlf	___lwdiv@divisor,f
  3218  0E27  0DA1               	rlf	___lwdiv@divisor+1,f
  3219  0E28  3EFF               	addlw	-1
  3220  0E29  1D03               	skipz
  3221  0E2A  2E25               	goto	u2955
  3222  0E2B  3001               	movlw	1
  3223  0E2C  00F4               	movwf	??___lwdiv
  3224  0E2D  0874               	movf	??___lwdiv,w
  3225  0E2E  07A4               	addwf	___lwdiv@counter,f
  3226  0E2F  2E22               	goto	l2738
  3227  0E30                     l2740:	
  3228  0E30  3001               	movlw	1
  3229  0E31                     u2975:	
  3230  0E31  1003               	clrc
  3231  0E32  0DA5               	rlf	___lwdiv@quotient,f
  3232  0E33  0DA6               	rlf	___lwdiv@quotient+1,f
  3233  0E34  3EFF               	addlw	-1
  3234  0E35  1D03               	skipz
  3235  0E36  2E31               	goto	u2975
  3236  0E37  0821               	movf	___lwdiv@divisor+1,w
  3237  0E38  0223               	subwf	___lwdiv@dividend+1,w
  3238  0E39  1D03               	skipz
  3239  0E3A  2E3D               	goto	u2985
  3240  0E3B  0820               	movf	___lwdiv@divisor,w
  3241  0E3C  0222               	subwf	___lwdiv@dividend,w
  3242  0E3D                     u2985:	
  3243  0E3D  1C03               	skipc
  3244  0E3E  2E46               	goto	l2746
  3245  0E3F  0820               	movf	___lwdiv@divisor,w
  3246  0E40  02A2               	subwf	___lwdiv@dividend,f
  3247  0E41  0821               	movf	___lwdiv@divisor+1,w
  3248  0E42  1C03               	skipc
  3249  0E43  03A3               	decf	___lwdiv@dividend+1,f
  3250  0E44  02A3               	subwf	___lwdiv@dividend+1,f
  3251  0E45  1425               	bsf	___lwdiv@quotient,0
  3252  0E46                     l2746:	
  3253  0E46  3001               	movlw	1
  3254  0E47                     u2995:	
  3255  0E47  1003               	clrc
  3256  0E48  0CA1               	rrf	___lwdiv@divisor+1,f
  3257  0E49  0CA0               	rrf	___lwdiv@divisor,f
  3258  0E4A  3EFF               	addlw	-1
  3259  0E4B  1D03               	skipz
  3260  0E4C  2E47               	goto	u2995
  3261  0E4D  3001               	movlw	1
  3262  0E4E  02A4               	subwf	___lwdiv@counter,f
  3263  0E4F  1D03               	btfss	3,2
  3264  0E50  2E30               	goto	l2740
  3265  0E51                     l2750:	
  3266  0E51  0826               	movf	___lwdiv@quotient+1,w
  3267  0E52  00A1               	movwf	?___lwdiv+1
  3268  0E53  0825               	movf	___lwdiv@quotient,w
  3269  0E54  00A0               	movwf	?___lwdiv
  3270  0E55  0008               	return
  3271  0E56                     __end_of___lwdiv:	
  3272                           
  3273                           	psect	text8
  3274  0D09                     __ptext8:	
  3275 ;; *************** function _ValueInc *****************
  3276 ;; Defined at:
  3277 ;;		line 62 in file "menu.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3291 ;;      Params:         0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0
  3293 ;;      Temps:          0       2       0       0       0
  3294 ;;      Totals:         0       2       0       0       0
  3295 ;;Total ram usage:        2 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    3
  3298 ;; This function calls:
  3299 ;;		_SaveMenuItem
  3300 ;; This function is called by:
  3301 ;;		_main
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           
  3306                           ;psect for function _ValueInc
  3307  0D09                     _ValueInc:	
  3308                           
  3309                           ;menu.c: 64: g_menu.items[g_menu.index].value++;
  3310                           
  3311                           ;incstack = 0
  3312                           ; Regs used in _ValueInc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3313  0D09  3001               	movlw	1
  3314  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0D0C  00A4               	movwf	??_ValueInc
  3317  0D0D  1683               	bsf	3,5	;RP0=1, select bank1
  3318  0D0E  1303               	bcf	3,6	;RP1=0, select bank1
  3319  0D0F  0828               	movf	(_g_menu^(0+128)+8),w
  3320  0D10  1283               	bcf	3,5	;RP0=0, select bank0
  3321  0D11  1303               	bcf	3,6	;RP1=0, select bank0
  3322  0D12  00A5               	movwf	??_ValueInc+1
  3323  0D13  0725               	addwf	??_ValueInc+1,w
  3324  0D14  3EA0               	addlw	(low (_g_menu| 0))& (0+255)
  3325  0D15  0084               	movwf	4
  3326  0D16  0824               	movf	??_ValueInc,w
  3327  0D17  1383               	bcf	3,7	;select IRP bank1
  3328  0D18  0780               	addwf	0,f
  3329                           
  3330                           ;menu.c: 65: SaveMenuItem(g_menu.index);
  3331  0D19  1683               	bsf	3,5	;RP0=1, select bank1
  3332  0D1A  1303               	bcf	3,6	;RP1=0, select bank1
  3333  0D1B  0828               	movf	(_g_menu^(0+128)+8),w
  3334  0D1C  120A  158A  24BD   	fcall	_SaveMenuItem
  3335  0D1F  0008               	return
  3336  0D20                     __end_of_ValueInc:	
  3337                           
  3338                           	psect	text9
  3339  0CE2                     __ptext9:	
  3340 ;; *************** function _ValueDec *****************
  3341 ;; Defined at:
  3342 ;;		line 67 in file "menu.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  2   83[None  ] int 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         0       0       0       0       0
  3357 ;;      Locals:         0       0       0       0       0
  3358 ;;      Temps:          0       1       0       0       0
  3359 ;;      Totals:         0       1       0       0       0
  3360 ;;Total ram usage:        1 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    3
  3363 ;; This function calls:
  3364 ;;		_SaveMenuItem
  3365 ;; This function is called by:
  3366 ;;		_main
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           
  3371                           ;psect for function _ValueDec
  3372  0CE2                     _ValueDec:	
  3373                           
  3374                           ;menu.c: 69: g_menu.items[g_menu.index].value--;
  3375                           
  3376                           ;incstack = 0
  3377                           ; Regs used in _ValueDec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3378  0CE2  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0CE3  1303               	bcf	3,6	;RP1=0, select bank1
  3380  0CE4  0828               	movf	(_g_menu^(0+128)+8),w
  3381  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  3382  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  3383  0CE7  00A4               	movwf	??_ValueDec
  3384  0CE8  0724               	addwf	??_ValueDec,w
  3385  0CE9  3EA0               	addlw	(low (_g_menu| 0))& (0+255)
  3386  0CEA  0084               	movwf	4
  3387  0CEB  3001               	movlw	1
  3388  0CEC  1383               	bcf	3,7	;select IRP bank1
  3389  0CED  0280               	subwf	0,f
  3390                           
  3391                           ;menu.c: 70: SaveMenuItem(g_menu.index);
  3392  0CEE  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0CEF  1303               	bcf	3,6	;RP1=0, select bank1
  3394  0CF0  0828               	movf	(_g_menu^(0+128)+8),w
  3395  0CF1  120A  158A  24BD   	fcall	_SaveMenuItem
  3396  0CF4  0008               	return
  3397  0CF5                     __end_of_ValueDec:	
  3398                           
  3399                           	psect	text10
  3400  0CBD                     __ptext10:	
  3401 ;; *************** function _SaveMenuItem *****************
  3402 ;; Defined at:
  3403 ;;		line 32 in file "menu.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  item            1    wreg     unsigned char 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  item            1    3[BANK0 ] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         0       0       0       0       0
  3418 ;;      Locals:         0       1       0       0       0
  3419 ;;      Temps:          0       2       0       0       0
  3420 ;;      Totals:         0       3       0       0       0
  3421 ;;Total ram usage:        3 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; Hardware stack levels required when called:    2
  3424 ;; This function calls:
  3425 ;;		_eeprom_write
  3426 ;; This function is called by:
  3427 ;;		_ValueInc
  3428 ;;		_ValueDec
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           
  3433                           ;psect for function _SaveMenuItem
  3434  0CBD                     _SaveMenuItem:	
  3435                           
  3436                           ;incstack = 0
  3437                           ; Regs used in _SaveMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3438                           ;SaveMenuItem@item stored from wreg
  3439  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0CBF  00A3               	movwf	SaveMenuItem@item
  3442                           
  3443                           ;menu.c: 34: eeprom_write(item, g_menu.items[item].value);
  3444  0CC0  0823               	movf	SaveMenuItem@item,w
  3445  0CC1  00A1               	movwf	??_SaveMenuItem
  3446  0CC2  0721               	addwf	??_SaveMenuItem,w
  3447  0CC3  3EA0               	addlw	(low (_g_menu| 0))& (0+255)
  3448  0CC4  0084               	movwf	4
  3449  0CC5  1383               	bcf	3,7	;select IRP bank1
  3450  0CC6  0800               	movf	0,w
  3451  0CC7  00A2               	movwf	??_SaveMenuItem+1
  3452  0CC8  0822               	movf	??_SaveMenuItem+1,w
  3453  0CC9  00F4               	movwf	eeprom_write@value
  3454  0CCA  0823               	movf	SaveMenuItem@item,w
  3455  0CCB  120A  158A  2589   	fcall	_eeprom_write
  3456  0CCE  0008               	return
  3457  0CCF                     __end_of_SaveMenuItem:	
  3458                           
  3459                           	psect	text11
  3460  0D89                     __ptext11:	
  3461 ;; *************** function _eeprom_write *****************
  3462 ;; Defined at:
  3463 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eewrite.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  addr            1    wreg     unsigned char 
  3466 ;;  value           1    4[COMMON] unsigned char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  addr            1    0[BANK0 ] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         1       0       0       0       0
  3479 ;;      Locals:         0       1       0       0       0
  3480 ;;      Temps:          1       0       0       0       0
  3481 ;;      Totals:         2       1       0       0       0
  3482 ;;Total ram usage:        3 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    1
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_SaveMenuItem
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _eeprom_write
  3494  0D89                     _eeprom_write:	
  3495                           
  3496                           ;incstack = 0
  3497                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  3498                           ;eeprom_write@addr stored from wreg
  3499  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0D8B  00A0               	movwf	eeprom_write@addr
  3502  0D8C                     l388:	
  3503  0D8C  1683               	bsf	3,5	;RP0=1, select bank3
  3504  0D8D  1703               	bsf	3,6	;RP1=1, select bank3
  3505  0D8E  188C               	btfsc	12,1	;volsfr
  3506  0D8F  2D8C               	goto	l388
  3507  0D90  1283               	bcf	3,5	;RP0=0, select bank0
  3508  0D91  1303               	bcf	3,6	;RP1=0, select bank0
  3509  0D92  0820               	movf	eeprom_write@addr,w
  3510  0D93  1283               	bcf	3,5	;RP0=0, select bank2
  3511  0D94  1703               	bsf	3,6	;RP1=1, select bank2
  3512  0D95  008D               	movwf	13	;volatile
  3513  0D96  0874               	movf	eeprom_write@value,w
  3514  0D97  008C               	movwf	12	;volatile
  3515  0D98  303F               	movlw	63
  3516  0D99  00F5               	movwf	??_eeprom_write
  3517  0D9A  0875               	movf	??_eeprom_write,w
  3518  0D9B  1683               	bsf	3,5	;RP0=1, select bank3
  3519  0D9C  1703               	bsf	3,6	;RP1=1, select bank3
  3520  0D9D  058C               	andwf	12,f	;volsfr
  3521  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0DA0  1003               	bcf	3,0	;volatile
  3524  0DA1  1B8B               	btfsc	11,7	;volatile
  3525  0DA2  1403               	bsf	3,0	;volatile
  3526  0DA3  138B               	bcf	11,7	;volatile
  3527  0DA4  1683               	bsf	3,5	;RP0=1, select bank3
  3528  0DA5  1703               	bsf	3,6	;RP1=1, select bank3
  3529  0DA6  150C               	bsf	12,2	;volsfr
  3530  0DA7  3055               	movlw	85
  3531  0DA8  008D               	movwf	13	;volsfr
  3532  0DA9  30AA               	movlw	170
  3533  0DAA  008D               	movwf	13	;volsfr
  3534  0DAB  148C               	bsf	12,1	;volsfr
  3535  0DAC  110C               	bcf	12,2	;volsfr
  3536  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3538  0DAF  1C03               	btfss	3,0	;volatile
  3539  0DB0  0008               	return
  3540  0DB1  178B               	bsf	11,7	;volatile
  3541  0DB2  0008               	return
  3542  0DB3                     __end_of_eeprom_write:	
  3543                           
  3544                           	psect	text12
  3545  0FA2                     __ptext12:	
  3546 ;; *************** function _ShowMenu *****************
  3547 ;; Defined at:
  3548 ;;		line 23 in file "menu.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;  i               1   29[BANK0 ] char 
  3553 ;;  count           1   28[BANK0 ] char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3563 ;;      Params:         0       0       0       0       0
  3564 ;;      Locals:         0       2       0       0       0
  3565 ;;      Temps:          0       4       0       0       0
  3566 ;;      Totals:         0       6       0       0       0
  3567 ;;Total ram usage:        6 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    4
  3570 ;; This function calls:
  3571 ;;		_LCDByte
  3572 ;;		_LCDGotoXY
  3573 ;;		_LCDWriteInt
  3574 ;;		_LCDWriteString
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _ShowMenu
  3582  0FA2                     _ShowMenu:	
  3583                           
  3584                           ;menu.c: 25: { LCDGotoXY(0,0); int8_t count = LCDWriteString(g_menu.items[g_menu.index].
      +                          name); for(int8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };
  3585                           
  3586                           ;incstack = 0
  3587                           ; Regs used in _ShowMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3588  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  3589  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  3590  0FA4  01AA               	clrf	LCDGotoXY@y
  3591  0FA5  3000               	movlw	0
  3592  0FA6  120A  158A  253B  120A  158A  	fcall	_LCDGotoXY
  3593  0FAB  1403               	setc
  3594  0FAC  1683               	bsf	3,5	;RP0=1, select bank1
  3595  0FAD  1303               	bcf	3,6	;RP1=0, select bank1
  3596  0FAE  0D28               	rlf	(_g_menu^(0+128)+8),w
  3597  0FAF  3EA0               	addlw	(low (_g_menu| 0))& (0+255)
  3598  0FB0  0084               	movwf	4
  3599  0FB1  1383               	bcf	3,7	;select IRP bank1
  3600  0FB2  0800               	movf	0,w
  3601  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0FB5  00AA               	movwf	LCDWriteString@msg
  3604  0FB6  3000               	movlw	0
  3605  0FB7  1D03               	btfss	3,2
  3606  0FB8  3080               	movlw	128
  3607  0FB9  00AB               	movwf	LCDWriteString@msg+1
  3608  0FBA  120A  118A  2751  120A  158A  	fcall	_LCDWriteString
  3609  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  3611  0FC1  00B8               	movwf	??_ShowMenu
  3612  0FC2  0838               	movf	??_ShowMenu,w
  3613  0FC3  00BC               	movwf	ShowMenu@count
  3614  0FC4  083C               	movf	ShowMenu@count,w
  3615  0FC5  00B8               	movwf	??_ShowMenu
  3616  0FC6  0838               	movf	??_ShowMenu,w
  3617  0FC7  00BD               	movwf	ShowMenu@i
  3618  0FC8  083D               	movf	ShowMenu@i,w
  3619  0FC9  3A80               	xorlw	128
  3620  0FCA  3E70               	addlw	-144
  3621  0FCB  1803               	btfsc	3,0
  3622  0FCC  2FE0               	goto	l3082
  3623  0FCD                     l3076:	
  3624  0FCD  01A3               	clrf	LCDByte@isdata
  3625  0FCE  0AA3               	incf	LCDByte@isdata,f
  3626  0FCF  3020               	movlw	32
  3627  0FD0  120A  158A  26F0  120A  158A  	fcall	_LCDByte
  3628  0FD5  3001               	movlw	1
  3629  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  3630  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  3631  0FD8  00B8               	movwf	??_ShowMenu
  3632  0FD9  0838               	movf	??_ShowMenu,w
  3633  0FDA  07BD               	addwf	ShowMenu@i,f
  3634  0FDB  083D               	movf	ShowMenu@i,w
  3635  0FDC  3A80               	xorlw	128
  3636  0FDD  3E70               	addlw	-144
  3637  0FDE  1C03               	skipc
  3638  0FDF  2FCD               	goto	l3076
  3639  0FE0                     l3082:	
  3640                           
  3641                           ;menu.c: 26: { LCDGotoXY(4,0); LCDWriteInt(g_menu.items[g_menu.index].value,3);};
  3642  0FE0  01AA               	clrf	LCDGotoXY@y
  3643  0FE1  3004               	movlw	4
  3644  0FE2  120A  158A  253B  120A  158A  	fcall	_LCDGotoXY
  3645  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  3646  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  3647  0FE9  0828               	movf	(_g_menu^(0+128)+8),w
  3648  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3649  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3650  0FEC  00B8               	movwf	??_ShowMenu
  3651  0FED  0738               	addwf	??_ShowMenu,w
  3652  0FEE  3EA0               	addlw	(low (_g_menu| 0))& (0+255)
  3653  0FEF  0084               	movwf	4
  3654  0FF0  1383               	bcf	3,7	;select IRP bank1
  3655  0FF1  0800               	movf	0,w
  3656  0FF2  00B9               	movwf	??_ShowMenu+1
  3657  0FF3  01BA               	clrf	??_ShowMenu+2
  3658  0FF4  0839               	movf	??_ShowMenu+1,w
  3659  0FF5  00AA               	movwf	LCDWriteInt@val
  3660  0FF6  083A               	movf	??_ShowMenu+2,w
  3661  0FF7  00AB               	movwf	LCDWriteInt@val+1
  3662  0FF8  3003               	movlw	3
  3663  0FF9  00BB               	movwf	??_ShowMenu+3
  3664  0FFA  083B               	movf	??_ShowMenu+3,w
  3665  0FFB  00AC               	movwf	LCDWriteInt@field_length
  3666  0FFC  120A  118A  24E7   	fcall	_LCDWriteInt
  3667  0FFF  0008               	return
  3668  1000                     __end_of_ShowMenu:	
  3669                           
  3670                           	psect	text13
  3671  04E7                     __ptext13:	
  3672 ;; *************** function _LCDWriteInt *****************
  3673 ;; Defined at:
  3674 ;;		line 328 in file "lcd_hd44780_pic16.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  val             2   10[BANK0 ] int 
  3677 ;;  field_length    1   12[BANK0 ] char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  str             5   15[BANK0 ] unsigned char [5]
  3680 ;;  i               2   22[BANK0 ] int 
  3681 ;;  j               2   20[BANK0 ] int 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  1    wreg      char 
  3684 ;; Registers used:
  3685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3691 ;;      Params:         0       3       0       0       0
  3692 ;;      Locals:         0       9       0       0       0
  3693 ;;      Temps:          0       2       0       0       0
  3694 ;;      Totals:         0      14       0       0       0
  3695 ;;Total ram usage:       14 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    3
  3698 ;; This function calls:
  3699 ;;		_LCDByte
  3700 ;;		___awdiv
  3701 ;;		___awmod
  3702 ;; This function is called by:
  3703 ;;		_ShowMenu
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _LCDWriteInt
  3709  04E7                     _LCDWriteInt:	
  3710                           
  3711                           ;lcd_hd44780_pic16.c: 330: char str[5]={-16,-16,-16,-16,-16};
  3712                           
  3713                           ;incstack = 0
  3714                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3715  04E7  302F               	movlw	LCDWriteInt@str& (0+255)
  3716  04E8  0084               	movwf	4
  3717  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  3718  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  3719  04EB  085F               	movf	LCDWriteInt@F1646^(0+128),w
  3720  04EC  1383               	bcf	3,7	;select IRP bank0
  3721  04ED  0080               	movwf	0
  3722  04EE  0A84               	incf	4,f
  3723  04EF  0860               	movf	(LCDWriteInt@F1646^(0+128)+1),w
  3724  04F0  0080               	movwf	0
  3725  04F1  0A84               	incf	4,f
  3726  04F2  0861               	movf	(LCDWriteInt@F1646^(0+128)+2),w
  3727  04F3  0080               	movwf	0
  3728  04F4  0A84               	incf	4,f
  3729  04F5  0862               	movf	(LCDWriteInt@F1646^(0+128)+3),w
  3730  04F6  0080               	movwf	0
  3731  04F7  0A84               	incf	4,f
  3732  04F8  0863               	movf	(LCDWriteInt@F1646^(0+128)+4),w
  3733  04F9  0080               	movwf	0
  3734                           
  3735                           ;lcd_hd44780_pic16.c: 331: int i=4,j=0;
  3736  04FA  3004               	movlw	4
  3737  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3738  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3739  04FD  00B6               	movwf	LCDWriteInt@i
  3740  04FE  3000               	movlw	0
  3741  04FF  00B7               	movwf	LCDWriteInt@i+1
  3742  0500  01B4               	clrf	LCDWriteInt@j
  3743  0501  01B5               	clrf	LCDWriteInt@j+1
  3744                           
  3745                           ;lcd_hd44780_pic16.c: 333: if(val == 0)
  3746  0502  082A               	movf	LCDWriteInt@val,w
  3747  0503  042B               	iorwf	LCDWriteInt@val+1,w
  3748  0504  1903               	btfsc	3,2
  3749                           
  3750                           ;lcd_hd44780_pic16.c: 334: {
  3751                           ;lcd_hd44780_pic16.c: 335: str[4] = 0;
  3752  0505  01B3               	clrf	LCDWriteInt@str+4
  3753                           
  3754                           ;lcd_hd44780_pic16.c: 336: }
  3755                           ;lcd_hd44780_pic16.c: 338: if(val<0)
  3756  0506  1FAB               	btfss	LCDWriteInt@val+1,7
  3757  0507  2D17               	goto	l2918
  3758                           
  3759                           ;lcd_hd44780_pic16.c: 339: {
  3760                           ;lcd_hd44780_pic16.c: 340: (LCDByte('-',1));
  3761  0508  01A3               	clrf	LCDByte@isdata
  3762  0509  0AA3               	incf	LCDByte@isdata,f
  3763  050A  302D               	movlw	45
  3764  050B  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  3765                           
  3766                           ;lcd_hd44780_pic16.c: 341: val=val*-1;
  3767  0510  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0511  1303               	bcf	3,6	;RP1=0, select bank0
  3769  0512  09AA               	comf	LCDWriteInt@val,f
  3770  0513  09AB               	comf	LCDWriteInt@val+1,f
  3771  0514  0AAA               	incf	LCDWriteInt@val,f
  3772  0515  1903               	skipnz
  3773  0516  0AAB               	incf	LCDWriteInt@val+1,f
  3774  0517                     l2918:	
  3775                           ;lcd_hd44780_pic16.c: 342: }
  3776                           ;lcd_hd44780_pic16.c: 344: while(val)
  3777                           
  3778  0517  082A               	movf	LCDWriteInt@val,w
  3779  0518  042B               	iorwf	LCDWriteInt@val+1,w
  3780  0519  1903               	btfsc	3,2
  3781  051A  2D4C               	goto	l2920
  3782                           
  3783                           ;lcd_hd44780_pic16.c: 345: {
  3784                           ;lcd_hd44780_pic16.c: 346: str[i]=val%10;
  3785  051B  300A               	movlw	10
  3786  051C  00A0               	movwf	___awmod@divisor
  3787  051D  3000               	movlw	0
  3788  051E  00A1               	movwf	___awmod@divisor+1
  3789  051F  082B               	movf	LCDWriteInt@val+1,w
  3790  0520  00A3               	movwf	___awmod@dividend+1
  3791  0521  082A               	movf	LCDWriteInt@val,w
  3792  0522  00A2               	movwf	___awmod@dividend
  3793  0523  120A  118A  27B3  120A  118A  	fcall	___awmod
  3794  0528  1283               	bcf	3,5	;RP0=0, select bank0
  3795  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3796  052A  0820               	movf	?___awmod,w
  3797  052B  00AD               	movwf	??_LCDWriteInt
  3798  052C  0836               	movf	LCDWriteInt@i,w
  3799  052D  3E2F               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  3800  052E  0084               	movwf	4
  3801  052F  082D               	movf	??_LCDWriteInt,w
  3802  0530  1383               	bcf	3,7	;select IRP bank0
  3803  0531  0080               	movwf	0
  3804                           
  3805                           ;lcd_hd44780_pic16.c: 347: val=val/10;
  3806  0532  300A               	movlw	10
  3807  0533  00A0               	movwf	___awdiv@divisor
  3808  0534  3000               	movlw	0
  3809  0535  00A1               	movwf	___awdiv@divisor+1
  3810  0536  082B               	movf	LCDWriteInt@val+1,w
  3811  0537  00A3               	movwf	___awdiv@dividend+1
  3812  0538  082A               	movf	LCDWriteInt@val,w
  3813  0539  00A2               	movwf	___awdiv@dividend
  3814  053A  120A  158A  2747  120A  118A  	fcall	___awdiv
  3815  053F  1283               	bcf	3,5	;RP0=0, select bank0
  3816  0540  1303               	bcf	3,6	;RP1=0, select bank0
  3817  0541  0821               	movf	?___awdiv+1,w
  3818  0542  00AB               	movwf	LCDWriteInt@val+1
  3819  0543  0820               	movf	?___awdiv,w
  3820  0544  00AA               	movwf	LCDWriteInt@val
  3821                           
  3822                           ;lcd_hd44780_pic16.c: 348: i--;
  3823  0545  30FF               	movlw	255
  3824  0546  07B6               	addwf	LCDWriteInt@i,f
  3825  0547  1803               	skipnc
  3826  0548  0AB7               	incf	LCDWriteInt@i+1,f
  3827  0549  30FF               	movlw	255
  3828  054A  07B7               	addwf	LCDWriteInt@i+1,f
  3829  054B  2D17               	goto	l2918
  3830  054C                     l2920:	
  3831                           
  3832                           ;lcd_hd44780_pic16.c: 349: }
  3833                           ;lcd_hd44780_pic16.c: 350: if(field_length==-1)
  3834  054C  0A2C               	incf	LCDWriteInt@field_length,w
  3835  054D  1903               	btfsc	3,2
  3836  054E  2D61               	goto	l2928
  3837                           
  3838                           ;lcd_hd44780_pic16.c: 352: else
  3839                           ;lcd_hd44780_pic16.c: 353: j=5-field_length;
  3840                           
  3841                           ;lcd_hd44780_pic16.c: 351: while(str[j]==-16) j++;
  3842  054F  082C               	movf	LCDWriteInt@field_length,w
  3843  0550  00AD               	movwf	??_LCDWriteInt
  3844  0551  01AE               	clrf	??_LCDWriteInt+1
  3845  0552  1BAD               	btfsc	??_LCDWriteInt,7
  3846  0553  03AE               	decf	??_LCDWriteInt+1,f
  3847  0554  09AD               	comf	??_LCDWriteInt,f
  3848  0555  09AE               	comf	??_LCDWriteInt+1,f
  3849  0556  0AAD               	incf	??_LCDWriteInt,f
  3850  0557  1903               	skipnz
  3851  0558  0AAE               	incf	??_LCDWriteInt+1,f
  3852  0559  082D               	movf	??_LCDWriteInt,w
  3853  055A  3E05               	addlw	5
  3854  055B  00B4               	movwf	LCDWriteInt@j
  3855  055C  082E               	movf	??_LCDWriteInt+1,w
  3856  055D  1803               	skipnc
  3857  055E  3E01               	addlw	1
  3858  055F  3E00               	addlw	0
  3859  0560  00B5               	movwf	LCDWriteInt@j+1
  3860  0561                     l2928:	
  3861                           
  3862                           ;lcd_hd44780_pic16.c: 356: for(i=j;i<5;i++)
  3863  0561  0835               	movf	LCDWriteInt@j+1,w
  3864  0562  00B7               	movwf	LCDWriteInt@i+1
  3865  0563  0834               	movf	LCDWriteInt@j,w
  3866  0564  00B6               	movwf	LCDWriteInt@i
  3867  0565                     L1:	
  3868  0565  0837               	movf	LCDWriteInt@i+1,w
  3869  0566  3A80               	xorlw	128
  3870  0567  00FF               	movwf	127
  3871  0568  3080               	movlw	128
  3872  0569  027F               	subwf	127,w
  3873  056A  1D03               	skipz
  3874  056B  2D6E               	goto	u3255
  3875  056C  3005               	movlw	5
  3876  056D  0236               	subwf	LCDWriteInt@i,w
  3877  056E                     u3255:	
  3878  056E  1803               	btfsc	3,0
  3879  056F  0008               	return
  3880                           
  3881                           ;lcd_hd44780_pic16.c: 357: {
  3882                           ;lcd_hd44780_pic16.c: 358: (LCDByte(48+str[i],1));
  3883  0570  1283               	bcf	3,5	;RP0=0, select bank0
  3884  0571  1303               	bcf	3,6	;RP1=0, select bank0
  3885  0572  01A3               	clrf	LCDByte@isdata
  3886  0573  0AA3               	incf	LCDByte@isdata,f
  3887  0574  0836               	movf	LCDWriteInt@i,w
  3888  0575  3E2F               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  3889  0576  0084               	movwf	4
  3890  0577  1383               	bcf	3,7	;select IRP bank0
  3891  0578  0800               	movf	0,w
  3892  0579  3E30               	addlw	48
  3893  057A  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  3894  057F  3001               	movlw	1
  3895  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0581  1303               	bcf	3,6	;RP1=0, select bank0
  3897  0582  07B6               	addwf	LCDWriteInt@i,f
  3898  0583  1803               	skipnc
  3899  0584  0AB7               	incf	LCDWriteInt@i+1,f
  3900  0585  3000               	movlw	0
  3901  0586  07B7               	addwf	LCDWriteInt@i+1,f
  3902  0587  2D65               	goto	L1
  3903  0588                     __end_of_LCDWriteInt:	
  3904                           ;lcd_hd44780_pic16.c: 359: }
  3905                           ;lcd_hd44780_pic16.c: 360: return field_length;
  3906                           ;	Return value of _LCDWriteInt is never used
  3907                           
  3908                           
  3909                           	psect	text14
  3910  07B3                     __ptext14:	
  3911 ;; *************** function ___awmod *****************
  3912 ;; Defined at:
  3913 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  divisor         2    0[BANK0 ] int 
  3916 ;;  dividend        2    2[BANK0 ] int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  sign            1    5[BANK0 ] unsigned char 
  3919 ;;  counter         1    4[BANK0 ] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2    0[BANK0 ] int 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3929 ;;      Params:         0       4       0       0       0
  3930 ;;      Locals:         0       2       0       0       0
  3931 ;;      Temps:          1       0       0       0       0
  3932 ;;      Totals:         1       6       0       0       0
  3933 ;;Total ram usage:        7 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; Hardware stack levels required when called:    1
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_LCDWriteInt
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function ___awmod
  3945  07B3                     ___awmod:	
  3946                           
  3947                           ;incstack = 0
  3948                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3949  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  3950  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  3951  07B5  01A5               	clrf	___awmod@sign
  3952  07B6  1FA3               	btfss	___awmod@dividend+1,7
  3953  07B7  2FBF               	goto	l2698
  3954  07B8  09A2               	comf	___awmod@dividend,f
  3955  07B9  09A3               	comf	___awmod@dividend+1,f
  3956  07BA  0AA2               	incf	___awmod@dividend,f
  3957  07BB  1903               	skipnz
  3958  07BC  0AA3               	incf	___awmod@dividend+1,f
  3959  07BD  01A5               	clrf	___awmod@sign
  3960  07BE  0AA5               	incf	___awmod@sign,f
  3961  07BF                     l2698:	
  3962  07BF  1FA1               	btfss	___awmod@divisor+1,7
  3963  07C0  2FC6               	goto	l2702
  3964  07C1  09A0               	comf	___awmod@divisor,f
  3965  07C2  09A1               	comf	___awmod@divisor+1,f
  3966  07C3  0AA0               	incf	___awmod@divisor,f
  3967  07C4  1903               	skipnz
  3968  07C5  0AA1               	incf	___awmod@divisor+1,f
  3969  07C6                     l2702:	
  3970  07C6  0820               	movf	___awmod@divisor,w
  3971  07C7  0421               	iorwf	___awmod@divisor+1,w
  3972  07C8  1903               	btfsc	3,2
  3973  07C9  2FF3               	goto	l2720
  3974  07CA  01A4               	clrf	___awmod@counter
  3975  07CB  0AA4               	incf	___awmod@counter,f
  3976  07CC                     l2710:	
  3977  07CC  1BA1               	btfsc	___awmod@divisor+1,7
  3978  07CD  2FDA               	goto	l2712
  3979  07CE  3001               	movlw	1
  3980  07CF                     u2885:	
  3981  07CF  1003               	clrc
  3982  07D0  0DA0               	rlf	___awmod@divisor,f
  3983  07D1  0DA1               	rlf	___awmod@divisor+1,f
  3984  07D2  3EFF               	addlw	-1
  3985  07D3  1D03               	skipz
  3986  07D4  2FCF               	goto	u2885
  3987  07D5  3001               	movlw	1
  3988  07D6  00F4               	movwf	??___awmod
  3989  07D7  0874               	movf	??___awmod,w
  3990  07D8  07A4               	addwf	___awmod@counter,f
  3991  07D9  2FCC               	goto	l2710
  3992  07DA                     l2712:	
  3993  07DA  0821               	movf	___awmod@divisor+1,w
  3994  07DB  0223               	subwf	___awmod@dividend+1,w
  3995  07DC  1D03               	skipz
  3996  07DD  2FE0               	goto	u2905
  3997  07DE  0820               	movf	___awmod@divisor,w
  3998  07DF  0222               	subwf	___awmod@dividend,w
  3999  07E0                     u2905:	
  4000  07E0  1C03               	skipc
  4001  07E1  2FE8               	goto	l2716
  4002  07E2  0820               	movf	___awmod@divisor,w
  4003  07E3  02A2               	subwf	___awmod@dividend,f
  4004  07E4  0821               	movf	___awmod@divisor+1,w
  4005  07E5  1C03               	skipc
  4006  07E6  03A3               	decf	___awmod@dividend+1,f
  4007  07E7  02A3               	subwf	___awmod@dividend+1,f
  4008  07E8                     l2716:	
  4009  07E8  3001               	movlw	1
  4010  07E9                     u2915:	
  4011  07E9  1003               	clrc
  4012  07EA  0CA1               	rrf	___awmod@divisor+1,f
  4013  07EB  0CA0               	rrf	___awmod@divisor,f
  4014  07EC  3EFF               	addlw	-1
  4015  07ED  1D03               	skipz
  4016  07EE  2FE9               	goto	u2915
  4017  07EF  3001               	movlw	1
  4018  07F0  02A4               	subwf	___awmod@counter,f
  4019  07F1  1D03               	btfss	3,2
  4020  07F2  2FDA               	goto	l2712
  4021  07F3                     l2720:	
  4022  07F3  0825               	movf	___awmod@sign,w
  4023  07F4  1903               	btfsc	3,2
  4024  07F5  2FFB               	goto	l2724
  4025  07F6  09A2               	comf	___awmod@dividend,f
  4026  07F7  09A3               	comf	___awmod@dividend+1,f
  4027  07F8  0AA2               	incf	___awmod@dividend,f
  4028  07F9  1903               	skipnz
  4029  07FA  0AA3               	incf	___awmod@dividend+1,f
  4030  07FB                     l2724:	
  4031  07FB  0823               	movf	___awmod@dividend+1,w
  4032  07FC  00A1               	movwf	?___awmod+1
  4033  07FD  0822               	movf	___awmod@dividend,w
  4034  07FE  00A0               	movwf	?___awmod
  4035  07FF  0008               	return
  4036  0800                     __end_of___awmod:	
  4037                           
  4038                           	psect	text15
  4039  0F47                     __ptext15:	
  4040 ;; *************** function ___awdiv *****************
  4041 ;; Defined at:
  4042 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  divisor         2    0[BANK0 ] int 
  4045 ;;  dividend        2    2[BANK0 ] int 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  quotient        2    6[BANK0 ] int 
  4048 ;;  sign            1    5[BANK0 ] unsigned char 
  4049 ;;  counter         1    4[BANK0 ] unsigned char 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  2    0[BANK0 ] int 
  4052 ;; Registers used:
  4053 ;;		wreg, status,2, status,0
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4059 ;;      Params:         0       4       0       0       0
  4060 ;;      Locals:         0       4       0       0       0
  4061 ;;      Temps:          1       0       0       0       0
  4062 ;;      Totals:         1       8       0       0       0
  4063 ;;Total ram usage:        9 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_LCDWriteInt
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           
  4074                           ;psect for function ___awdiv
  4075  0F47                     ___awdiv:	
  4076                           
  4077                           ;incstack = 0
  4078                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4079  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0F49  01A5               	clrf	___awdiv@sign
  4082  0F4A  1FA1               	btfss	___awdiv@divisor+1,7
  4083  0F4B  2F53               	goto	l2654
  4084  0F4C  09A0               	comf	___awdiv@divisor,f
  4085  0F4D  09A1               	comf	___awdiv@divisor+1,f
  4086  0F4E  0AA0               	incf	___awdiv@divisor,f
  4087  0F4F  1903               	skipnz
  4088  0F50  0AA1               	incf	___awdiv@divisor+1,f
  4089  0F51  01A5               	clrf	___awdiv@sign
  4090  0F52  0AA5               	incf	___awdiv@sign,f
  4091  0F53                     l2654:	
  4092  0F53  1FA3               	btfss	___awdiv@dividend+1,7
  4093  0F54  2F5E               	goto	l2660
  4094  0F55  09A2               	comf	___awdiv@dividend,f
  4095  0F56  09A3               	comf	___awdiv@dividend+1,f
  4096  0F57  0AA2               	incf	___awdiv@dividend,f
  4097  0F58  1903               	skipnz
  4098  0F59  0AA3               	incf	___awdiv@dividend+1,f
  4099  0F5A  3001               	movlw	1
  4100  0F5B  00F4               	movwf	??___awdiv
  4101  0F5C  0874               	movf	??___awdiv,w
  4102  0F5D  06A5               	xorwf	___awdiv@sign,f
  4103  0F5E                     l2660:	
  4104  0F5E  01A6               	clrf	___awdiv@quotient
  4105  0F5F  01A7               	clrf	___awdiv@quotient+1
  4106  0F60  0820               	movf	___awdiv@divisor,w
  4107  0F61  0421               	iorwf	___awdiv@divisor+1,w
  4108  0F62  1903               	btfsc	3,2
  4109  0F63  2F95               	goto	l2682
  4110  0F64  01A4               	clrf	___awdiv@counter
  4111  0F65  0AA4               	incf	___awdiv@counter,f
  4112  0F66                     l2670:	
  4113  0F66  1BA1               	btfsc	___awdiv@divisor+1,7
  4114  0F67  2F74               	goto	l2672
  4115  0F68  3001               	movlw	1
  4116  0F69                     u2785:	
  4117  0F69  1003               	clrc
  4118  0F6A  0DA0               	rlf	___awdiv@divisor,f
  4119  0F6B  0DA1               	rlf	___awdiv@divisor+1,f
  4120  0F6C  3EFF               	addlw	-1
  4121  0F6D  1D03               	skipz
  4122  0F6E  2F69               	goto	u2785
  4123  0F6F  3001               	movlw	1
  4124  0F70  00F4               	movwf	??___awdiv
  4125  0F71  0874               	movf	??___awdiv,w
  4126  0F72  07A4               	addwf	___awdiv@counter,f
  4127  0F73  2F66               	goto	l2670
  4128  0F74                     l2672:	
  4129  0F74  3001               	movlw	1
  4130  0F75                     u2805:	
  4131  0F75  1003               	clrc
  4132  0F76  0DA6               	rlf	___awdiv@quotient,f
  4133  0F77  0DA7               	rlf	___awdiv@quotient+1,f
  4134  0F78  3EFF               	addlw	-1
  4135  0F79  1D03               	skipz
  4136  0F7A  2F75               	goto	u2805
  4137  0F7B  0821               	movf	___awdiv@divisor+1,w
  4138  0F7C  0223               	subwf	___awdiv@dividend+1,w
  4139  0F7D  1D03               	skipz
  4140  0F7E  2F81               	goto	u2815
  4141  0F7F  0820               	movf	___awdiv@divisor,w
  4142  0F80  0222               	subwf	___awdiv@dividend,w
  4143  0F81                     u2815:	
  4144  0F81  1C03               	skipc
  4145  0F82  2F8A               	goto	l2678
  4146  0F83  0820               	movf	___awdiv@divisor,w
  4147  0F84  02A2               	subwf	___awdiv@dividend,f
  4148  0F85  0821               	movf	___awdiv@divisor+1,w
  4149  0F86  1C03               	skipc
  4150  0F87  03A3               	decf	___awdiv@dividend+1,f
  4151  0F88  02A3               	subwf	___awdiv@dividend+1,f
  4152  0F89  1426               	bsf	___awdiv@quotient,0
  4153  0F8A                     l2678:	
  4154  0F8A  3001               	movlw	1
  4155  0F8B                     u2825:	
  4156  0F8B  1003               	clrc
  4157  0F8C  0CA1               	rrf	___awdiv@divisor+1,f
  4158  0F8D  0CA0               	rrf	___awdiv@divisor,f
  4159  0F8E  3EFF               	addlw	-1
  4160  0F8F  1D03               	skipz
  4161  0F90  2F8B               	goto	u2825
  4162  0F91  3001               	movlw	1
  4163  0F92  02A4               	subwf	___awdiv@counter,f
  4164  0F93  1D03               	btfss	3,2
  4165  0F94  2F74               	goto	l2672
  4166  0F95                     l2682:	
  4167  0F95  0825               	movf	___awdiv@sign,w
  4168  0F96  1903               	btfsc	3,2
  4169  0F97  2F9D               	goto	l2686
  4170  0F98  09A6               	comf	___awdiv@quotient,f
  4171  0F99  09A7               	comf	___awdiv@quotient+1,f
  4172  0F9A  0AA6               	incf	___awdiv@quotient,f
  4173  0F9B  1903               	skipnz
  4174  0F9C  0AA7               	incf	___awdiv@quotient+1,f
  4175  0F9D                     l2686:	
  4176  0F9D  0827               	movf	___awdiv@quotient+1,w
  4177  0F9E  00A1               	movwf	?___awdiv+1
  4178  0F9F  0826               	movf	___awdiv@quotient,w
  4179  0FA0  00A0               	movwf	?___awdiv
  4180  0FA1  0008               	return
  4181  0FA2                     __end_of___awdiv:	
  4182                           
  4183                           	psect	text16
  4184  0C6E                     __ptext16:	
  4185 ;; *************** function _MenuUp *****************
  4186 ;; Defined at:
  4187 ;;		line 40 in file "menu.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4201 ;;      Params:         0       0       0       0       0
  4202 ;;      Locals:         0       0       0       0       0
  4203 ;;      Temps:          1       0       0       0       0
  4204 ;;      Totals:         1       0       0       0       0
  4205 ;;Total ram usage:        1 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _MenuUp
  4217  0C6E                     _MenuUp:	
  4218                           
  4219                           ;menu.c: 42: if(g_menu.index == 0)
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in _MenuUp: [wreg+status,2+status,0]
  4223  0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  4224  0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  4225  0C70  0828               	movf	(_g_menu^(0+128)+8),w
  4226  0C71  1D03               	btfss	3,2
  4227  0C72  2C78               	goto	l2306
  4228                           
  4229                           ;menu.c: 43: {
  4230                           ;menu.c: 44: g_menu.index = 4 - 1;
  4231  0C73  3003               	movlw	3
  4232  0C74  00F4               	movwf	??_MenuUp
  4233  0C75  0874               	movf	??_MenuUp,w
  4234  0C76  00A8               	movwf	(_g_menu^(0+128)+8)
  4235                           
  4236                           ;menu.c: 45: }
  4237  0C77  0008               	return
  4238  0C78                     l2306:	
  4239                           
  4240                           ;menu.c: 46: else
  4241                           ;menu.c: 47: {
  4242                           ;menu.c: 48: g_menu.index--;
  4243  0C78  3001               	movlw	1
  4244  0C79  02A8               	subwf	(_g_menu^(0+128)+8),f
  4245  0C7A  0008               	return
  4246  0C7B                     __end_of_MenuUp:	
  4247                           
  4248                           	psect	text17
  4249  0E9C                     __ptext17:	
  4250 ;; *************** function _MenuInit *****************
  4251 ;; Defined at:
  4252 ;;		line 7 in file "menu.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0
  4268 ;;      Temps:          0       1       0       0       0
  4269 ;;      Totals:         0       1       0       0       0
  4270 ;;Total ram usage:        1 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    3
  4273 ;; This function calls:
  4274 ;;		_LoadMenuItem
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _MenuInit
  4282  0E9C                     _MenuInit:	
  4283                           
  4284                           ;menu.c: 9: g_menu.items[0].name = "ID1:";
  4285                           
  4286                           ;incstack = 0
  4287                           ; Regs used in _MenuInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4288  0E9C  3050               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  4289  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  4290  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  4291  0E9F  00A3               	movwf	??_MenuInit
  4292  0EA0  0823               	movf	??_MenuInit,w
  4293  0EA1  1683               	bsf	3,5	;RP0=1, select bank1
  4294  0EA2  1303               	bcf	3,6	;RP1=0, select bank1
  4295  0EA3  00A1               	movwf	(low ((_g_menu| 0+1)))^(0+128)
  4296                           
  4297                           ;menu.c: 10: g_menu.items[0].value = LoadMenuItem(0);
  4298  0EA4  3000               	movlw	0
  4299  0EA5  120A  158A  24CF  120A  158A  	fcall	_LoadMenuItem
  4300  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0EAC  00A3               	movwf	??_MenuInit
  4303  0EAD  0823               	movf	??_MenuInit,w
  4304  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  4305  0EAF  1303               	bcf	3,6	;RP1=0, select bank1
  4306  0EB0  00A0               	movwf	_g_menu^(0+128)
  4307                           
  4308                           ;menu.c: 12: g_menu.items[1].name = "ID2:";
  4309  0EB1  3055               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  4310  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  4311  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  4312  0EB4  00A3               	movwf	??_MenuInit
  4313  0EB5  0823               	movf	??_MenuInit,w
  4314  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  4315  0EB7  1303               	bcf	3,6	;RP1=0, select bank1
  4316  0EB8  00A3               	movwf	(low ((_g_menu| 0+3)))^(0+128)
  4317                           
  4318                           ;menu.c: 13: g_menu.items[1].value = LoadMenuItem(1);
  4319  0EB9  3001               	movlw	1
  4320  0EBA  120A  158A  24CF  120A  158A  	fcall	_LoadMenuItem
  4321  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  4322  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  4323  0EC1  00A3               	movwf	??_MenuInit
  4324  0EC2  0823               	movf	??_MenuInit,w
  4325  0EC3  1683               	bsf	3,5	;RP0=1, select bank1
  4326  0EC4  1303               	bcf	3,6	;RP1=0, select bank1
  4327  0EC5  00A2               	movwf	(_g_menu^(0+128)+2)
  4328                           
  4329                           ;menu.c: 15: g_menu.items[2].name = "ID3:";
  4330  0EC6  305A               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  4331  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  4333  0EC9  00A3               	movwf	??_MenuInit
  4334  0ECA  0823               	movf	??_MenuInit,w
  4335  0ECB  1683               	bsf	3,5	;RP0=1, select bank1
  4336  0ECC  1303               	bcf	3,6	;RP1=0, select bank1
  4337  0ECD  00A5               	movwf	(low ((_g_menu| 0+5)))^(0+128)
  4338                           
  4339                           ;menu.c: 16: g_menu.items[2].value = LoadMenuItem(2);
  4340  0ECE  3002               	movlw	2
  4341  0ECF  120A  158A  24CF  120A  158A  	fcall	_LoadMenuItem
  4342  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  4343  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  4344  0ED6  00A3               	movwf	??_MenuInit
  4345  0ED7  0823               	movf	??_MenuInit,w
  4346  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  4347  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  4348  0EDA  00A4               	movwf	(_g_menu^(0+128)+4)
  4349                           
  4350                           ;menu.c: 18: g_menu.items[3].name = "ID4:";
  4351  0EDB  305F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  4352  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0EDE  00A3               	movwf	??_MenuInit
  4355  0EDF  0823               	movf	??_MenuInit,w
  4356  0EE0  1683               	bsf	3,5	;RP0=1, select bank1
  4357  0EE1  1303               	bcf	3,6	;RP1=0, select bank1
  4358  0EE2  00A7               	movwf	(low ((_g_menu| 0+7)))^(0+128)
  4359                           
  4360                           ;menu.c: 19: g_menu.items[3].value = LoadMenuItem(3);
  4361  0EE3  3003               	movlw	3
  4362  0EE4  120A  158A  24CF   	fcall	_LoadMenuItem
  4363  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0EE9  00A3               	movwf	??_MenuInit
  4366  0EEA  0823               	movf	??_MenuInit,w
  4367  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  4368  0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  4369  0EED  00A6               	movwf	(_g_menu^(0+128)+6)
  4370                           
  4371                           ;menu.c: 21: g_menu.index = 0;
  4372  0EEE  01A8               	clrf	(_g_menu^(0+128)+8)
  4373  0EEF  0008               	return
  4374  0EF0                     __end_of_MenuInit:	
  4375                           
  4376                           	psect	text18
  4377  0C61                     __ptext18:	
  4378 ;; *************** function _MenuDown *****************
  4379 ;; Defined at:
  4380 ;;		line 51 in file "menu.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4394 ;;      Params:         0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0
  4396 ;;      Temps:          1       0       0       0       0
  4397 ;;      Totals:         1       0       0       0       0
  4398 ;;Total ram usage:        1 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_main
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function _MenuDown
  4410  0C61                     _MenuDown:	
  4411                           
  4412                           ;menu.c: 53: if(g_menu.index == 4 - 1)
  4413                           
  4414                           ;incstack = 0
  4415                           ; Regs used in _MenuDown: [wreg+status,2+status,0]
  4416  0C61  3003               	movlw	3
  4417  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  4418  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  4419  0C64  0628               	xorwf	(_g_menu^(0+128)+8),w
  4420  0C65  1D03               	btfss	3,2
  4421  0C66  2C69               	goto	l2316
  4422                           
  4423                           ;menu.c: 54: {
  4424                           ;menu.c: 55: g_menu.index = 0;
  4425  0C67  01A8               	clrf	(_g_menu^(0+128)+8)
  4426                           
  4427                           ;menu.c: 56: }
  4428  0C68  0008               	return
  4429  0C69                     l2316:	
  4430                           
  4431                           ;menu.c: 57: else
  4432                           ;menu.c: 58: {
  4433                           ;menu.c: 59: g_menu.index++;
  4434  0C69  3001               	movlw	1
  4435  0C6A  00F4               	movwf	??_MenuDown
  4436  0C6B  0874               	movf	??_MenuDown,w
  4437  0C6C  07A8               	addwf	(_g_menu^(0+128)+8),f
  4438  0C6D  0008               	return
  4439  0C6E                     __end_of_MenuDown:	
  4440                           
  4441                           	psect	text19
  4442  0C4C                     __ptext19:	
  4443 ;; *************** function _LCDSetStyle *****************
  4444 ;; Defined at:
  4445 ;;		line 207 in file "lcd_hd44780_pic16.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  style           1    wreg     unsigned char 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  style           1   10[BANK0 ] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, pclath, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4459 ;;      Params:         0       0       0       0       0
  4460 ;;      Locals:         0       1       0       0       0
  4461 ;;      Temps:          0       0       0       0       0
  4462 ;;      Totals:         0       1       0       0       0
  4463 ;;Total ram usage:        1 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    3
  4466 ;; This function calls:
  4467 ;;		_LCDByte
  4468 ;; This function is called by:
  4469 ;;		_main
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           
  4474                           ;psect for function _LCDSetStyle
  4475  0C4C                     _LCDSetStyle:	
  4476                           
  4477                           ;incstack = 0
  4478                           ; Regs used in _LCDSetStyle: [wreg+status,2+status,0+pclath+cstack]
  4479                           ;LCDSetStyle@style stored from wreg
  4480  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  4481  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  4482  0C4E  00AA               	movwf	LCDSetStyle@style
  4483                           
  4484                           ;lcd_hd44780_pic16.c: 209: (LCDByte(0b00001100|style,0));
  4485  0C4F  01A3               	clrf	LCDByte@isdata
  4486  0C50  082A               	movf	LCDSetStyle@style,w
  4487  0C51  380C               	iorlw	12
  4488  0C52  120A  158A  26F0   	fcall	_LCDByte
  4489  0C55  0008               	return
  4490  0C56                     __end_of_LCDSetStyle:	
  4491                           
  4492                           	psect	text20
  4493  0681                     __ptext20:	
  4494 ;; *************** function _LCDInit *****************
  4495 ;; Defined at:
  4496 ;;		line 211 in file "lcd_hd44780_pic16.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  style           1    wreg     unsigned char 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  style           1   12[BANK0 ] unsigned char 
  4501 ;;  __i             1   13[BANK0 ] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4511 ;;      Params:         0       0       0       0       0
  4512 ;;      Locals:         0       2       0       0       0
  4513 ;;      Temps:          0       2       0       0       0
  4514 ;;      Totals:         0       4       0       0       0
  4515 ;;Total ram usage:        4 bytes
  4516 ;; Hardware stack levels used:    1
  4517 ;; Hardware stack levels required when called:    3
  4518 ;; This function calls:
  4519 ;;		_LCDBusyLoop
  4520 ;;		_LCDByte
  4521 ;; This function is called by:
  4522 ;;		_main
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           
  4527                           ;psect for function _LCDInit
  4528  0681                     _LCDInit:	
  4529                           
  4530                           ;incstack = 0
  4531                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4532                           ;LCDInit@style stored from wreg
  4533  0681  1283               	bcf	3,5	;RP0=0, select bank0
  4534  0682  1303               	bcf	3,6	;RP1=0, select bank0
  4535  0683  00AC               	movwf	LCDInit@style
  4536                           
  4537                           ;lcd_hd44780_pic16.c: 213: _delay((unsigned long)((30)*(20000000/4000.0)));
  4538  0684  30C3               	movlw	195
  4539  0685  00AB               	movwf	??_LCDInit+1
  4540  0686  30CD               	movlw	205
  4541  0687  00AA               	movwf	??_LCDInit
  4542  0688                     u3947:	
  4543  0688  0BAA               	decfsz	??_LCDInit,f
  4544  0689  2E88               	goto	u3947
  4545  068A  0BAB               	decfsz	??_LCDInit+1,f
  4546  068B  2E88               	goto	u3947
  4547                           
  4548                           ;lcd_hd44780_pic16.c: 216: TRISC&=(~(0x0F<<4));
  4549  068C  300F               	movlw	15
  4550  068D  1283               	bcf	3,5	;RP0=0, select bank0
  4551  068E  1303               	bcf	3,6	;RP1=0, select bank0
  4552  068F  00AA               	movwf	??_LCDInit
  4553  0690  082A               	movf	??_LCDInit,w
  4554  0691  1683               	bsf	3,5	;RP0=1, select bank1
  4555  0692  1303               	bcf	3,6	;RP1=0, select bank1
  4556  0693  0587               	andwf	7,f	;volatile
  4557                           
  4558                           ;lcd_hd44780_pic16.c: 218: TRISCbits.TRISC3=0;
  4559  0694  1187               	bcf	7,3	;volatile
  4560                           
  4561                           ;lcd_hd44780_pic16.c: 219: TRISCbits.TRISC1=0;
  4562  0695  1087               	bcf	7,1	;volatile
  4563                           
  4564                           ;lcd_hd44780_pic16.c: 220: TRISCbits.TRISC2=0;
  4565  0696  1107               	bcf	7,2	;volatile
  4566                           
  4567                           ;lcd_hd44780_pic16.c: 222: PORTC&=(~(0x0F<<4));
  4568  0697  300F               	movlw	15
  4569  0698  1283               	bcf	3,5	;RP0=0, select bank0
  4570  0699  1303               	bcf	3,6	;RP1=0, select bank0
  4571  069A  00AA               	movwf	??_LCDInit
  4572  069B  082A               	movf	??_LCDInit,w
  4573  069C  0587               	andwf	7,f	;volatile
  4574                           
  4575                           ;lcd_hd44780_pic16.c: 224: (RC3=0);
  4576  069D  1187               	bcf	7,3	;volatile
  4577                           
  4578                           ;lcd_hd44780_pic16.c: 225: (RC2=0);
  4579  069E  1107               	bcf	7,2	;volatile
  4580                           
  4581                           ;lcd_hd44780_pic16.c: 226: (RC1=0);
  4582  069F  1087               	bcf	7,1	;volatile
  4583                           
  4584                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4585  06A0  2EA1               	nop2	;2 cycle nop
  4586                           
  4587                           ;lcd_hd44780_pic16.c: 231: (RC3=1);
  4588  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  4589  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  4590  06A3  1587               	bsf	7,3	;volatile
  4591                           
  4592                           ;lcd_hd44780_pic16.c: 232: PORTC|=((0b00000010)<<4);
  4593  06A4  1687               	bsf	7,5	;volatile
  4594                           
  4595                           ;lcd_hd44780_pic16.c: 233: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4596  06A5  2EA6               	nop2	;2 cycle nop
  4597  06A6  2EA7               	nop2	;2 cycle nop
  4598  06A7  0000               	nop
  4599                           
  4600                           ;lcd_hd44780_pic16.c: 234: (RC3=0);
  4601  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  4602  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  4603  06AA  1187               	bcf	7,3	;volatile
  4604                           
  4605                           ;lcd_hd44780_pic16.c: 235: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4606  06AB  2EAC               	nop2	;2 cycle nop
  4607  06AC  2EAD               	nop2	;2 cycle nop
  4608  06AD  0000               	nop
  4609                           
  4610                           ;lcd_hd44780_pic16.c: 238: LCDBusyLoop();
  4611  06AE  120A  118A  26E9  120A  118A  	fcall	_LCDBusyLoop
  4612                           
  4613                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b00101000,0));
  4614  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  4615  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  4616  06B5  01A3               	clrf	LCDByte@isdata
  4617  06B6  3028               	movlw	40
  4618  06B7  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  4619                           
  4620                           ;lcd_hd44780_pic16.c: 244: (LCDByte(0b00001100|style,0));
  4621  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  4622  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  4623  06BE  01A3               	clrf	LCDByte@isdata
  4624  06BF  082C               	movf	LCDInit@style,w
  4625  06C0  380C               	iorlw	12
  4626  06C1  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  4627                           
  4628                           ;lcd_hd44780_pic16.c: 247: (LCDByte(0b01000000,0));
  4629  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  4630  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  4631  06C8  01A3               	clrf	LCDByte@isdata
  4632  06C9  3040               	movlw	64
  4633  06CA  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  4634                           
  4635                           ;lcd_hd44780_pic16.c: 249: uint8_t __i;
  4636                           ;lcd_hd44780_pic16.c: 250: for(__i=0;__i<sizeof(__cgram);__i++)
  4637  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  4638  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  4639  06D1  01AD               	clrf	LCDInit@__i
  4640  06D2                     L2:	
  4641  06D2  3008               	movlw	8
  4642  06D3  022D               	subwf	LCDInit@__i,w
  4643  06D4  1803               	btfsc	3,0
  4644  06D5  0008               	return
  4645                           
  4646                           ;lcd_hd44780_pic16.c: 251: (LCDByte(__cgram[__i],1));
  4647  06D6  01A3               	clrf	LCDByte@isdata
  4648  06D7  0AA3               	incf	LCDByte@isdata,f
  4649  06D8  082D               	movf	LCDInit@__i,w
  4650  06D9  3ED7               	addlw	(low (___cgram| 0))& (0+255)
  4651  06DA  0084               	movwf	4
  4652  06DB  1383               	bcf	3,7	;select IRP bank1
  4653  06DC  0800               	movf	0,w
  4654  06DD  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  4655  06E2  3001               	movlw	1
  4656  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  4657  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  4658  06E5  00AA               	movwf	??_LCDInit
  4659  06E6  082A               	movf	??_LCDInit,w
  4660  06E7  07AD               	addwf	LCDInit@__i,f
  4661  06E8  2ED2               	goto	L2
  4662  06E9                     __end_of_LCDInit:	
  4663                           
  4664                           	psect	text21
  4665  0E56                     __ptext21:	
  4666 ;; *************** function _IOInit *****************
  4667 ;; Defined at:
  4668 ;;		line 125 in file "do_am.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		None
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4682 ;;      Params:         0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    1
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           
  4697                           ;psect for function _IOInit
  4698  0E56                     _IOInit:	
  4699                           
  4700                           ;do_am.c: 128: (TRISAbits.TRISA6 = 1);
  4701                           
  4702                           ;incstack = 0
  4703                           ; Regs used in _IOInit: []
  4704  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  4705  0E57  1303               	bcf	3,6	;RP1=0, select bank1
  4706  0E58  1705               	bsf	5,6	;volatile
  4707                           
  4708                           ;do_am.c: 131: (TRISAbits.TRISA0 = 1);
  4709  0E59  1405               	bsf	5,0	;volatile
  4710                           
  4711                           ;do_am.c: 132: ANSELbits.ANS0 = 0;
  4712  0E5A  1683               	bsf	3,5	;RP0=1, select bank3
  4713  0E5B  1703               	bsf	3,6	;RP1=1, select bank3
  4714  0E5C  1008               	bcf	8,0	;volatile
  4715                           
  4716                           ;do_am.c: 134: (TRISAbits.TRISA1 = 1);
  4717  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  4718  0E5E  1303               	bcf	3,6	;RP1=0, select bank1
  4719  0E5F  1485               	bsf	5,1	;volatile
  4720                           
  4721                           ;do_am.c: 135: ANSELbits.ANS1 = 0;
  4722  0E60  1683               	bsf	3,5	;RP0=1, select bank3
  4723  0E61  1703               	bsf	3,6	;RP1=1, select bank3
  4724  0E62  1088               	bcf	8,1	;volatile
  4725                           
  4726                           ;do_am.c: 136: (TRISAbits.TRISA2 = 1);
  4727  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  4728  0E64  1303               	bcf	3,6	;RP1=0, select bank1
  4729  0E65  1505               	bsf	5,2	;volatile
  4730                           
  4731                           ;do_am.c: 137: ANSELbits.ANS2 = 0;
  4732  0E66  1683               	bsf	3,5	;RP0=1, select bank3
  4733  0E67  1703               	bsf	3,6	;RP1=1, select bank3
  4734  0E68  1108               	bcf	8,2	;volatile
  4735                           
  4736                           ;do_am.c: 138: (TRISAbits.TRISA3 = 1);
  4737  0E69  1683               	bsf	3,5	;RP0=1, select bank1
  4738  0E6A  1303               	bcf	3,6	;RP1=0, select bank1
  4739  0E6B  1585               	bsf	5,3	;volatile
  4740                           
  4741                           ;do_am.c: 139: ANSELbits.ANS3 = 0;
  4742  0E6C  1683               	bsf	3,5	;RP0=1, select bank3
  4743  0E6D  1703               	bsf	3,6	;RP1=1, select bank3
  4744  0E6E  1188               	bcf	8,3	;volatile
  4745                           
  4746                           ;do_am.c: 141: (TRISAbits.TRISA7 = 0);
  4747  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  4748  0E70  1303               	bcf	3,6	;RP1=0, select bank1
  4749  0E71  1385               	bcf	5,7	;volatile
  4750                           
  4751                           ;do_am.c: 143: (TRISBbits.TRISB0 = 0);
  4752  0E72  1006               	bcf	6,0	;volatile
  4753                           
  4754                           ;do_am.c: 144: ANSELHbits.ANS12 = 0;
  4755  0E73  1683               	bsf	3,5	;RP0=1, select bank3
  4756  0E74  1703               	bsf	3,6	;RP1=1, select bank3
  4757  0E75  1209               	bcf	9,4	;volatile
  4758                           
  4759                           ;do_am.c: 146: (TRISBbits.TRISB1 = 0);
  4760  0E76  1683               	bsf	3,5	;RP0=1, select bank1
  4761  0E77  1303               	bcf	3,6	;RP1=0, select bank1
  4762  0E78  1086               	bcf	6,1	;volatile
  4763                           
  4764                           ;do_am.c: 147: ANSELHbits.ANS10 = 0;
  4765  0E79  1683               	bsf	3,5	;RP0=1, select bank3
  4766  0E7A  1703               	bsf	3,6	;RP1=1, select bank3
  4767  0E7B  1109               	bcf	9,2	;volatile
  4768                           
  4769                           ;do_am.c: 149: (TRISBbits.TRISB2 = 0);
  4770  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  4771  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  4772  0E7E  1106               	bcf	6,2	;volatile
  4773                           
  4774                           ;do_am.c: 150: ANSELHbits.ANS8 = 0;
  4775  0E7F  1683               	bsf	3,5	;RP0=1, select bank3
  4776  0E80  1703               	bsf	3,6	;RP1=1, select bank3
  4777  0E81  1009               	bcf	9,0	;volatile
  4778                           
  4779                           ;do_am.c: 152: (TRISBbits.TRISB3 = 0);
  4780  0E82  1683               	bsf	3,5	;RP0=1, select bank1
  4781  0E83  1303               	bcf	3,6	;RP1=0, select bank1
  4782  0E84  1186               	bcf	6,3	;volatile
  4783                           
  4784                           ;do_am.c: 153: ANSELHbits.ANS9 = 0;
  4785  0E85  1683               	bsf	3,5	;RP0=1, select bank3
  4786  0E86  1703               	bsf	3,6	;RP1=1, select bank3
  4787  0E87  1089               	bcf	9,1	;volatile
  4788                           
  4789                           ;do_am.c: 155: RA7 = 1;
  4790  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  4791  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  4792  0E8A  1785               	bsf	5,7	;volatile
  4793                           
  4794                           ;do_am.c: 158: (TRISBbits.TRISB4 = 1);
  4795  0E8B  1683               	bsf	3,5	;RP0=1, select bank1
  4796  0E8C  1303               	bcf	3,6	;RP1=0, select bank1
  4797  0E8D  1606               	bsf	6,4	;volatile
  4798                           
  4799                           ;do_am.c: 159: ANSELHbits.ANS11 = 0;
  4800  0E8E  1683               	bsf	3,5	;RP0=1, select bank3
  4801  0E8F  1703               	bsf	3,6	;RP1=1, select bank3
  4802  0E90  1189               	bcf	9,3	;volatile
  4803                           
  4804                           ;do_am.c: 161: (TRISBbits.TRISB6 = 1);
  4805  0E91  1683               	bsf	3,5	;RP0=1, select bank1
  4806  0E92  1303               	bcf	3,6	;RP1=0, select bank1
  4807  0E93  1706               	bsf	6,6	;volatile
  4808                           
  4809                           ;do_am.c: 163: (TRISBbits.TRISB5 = 1);
  4810  0E94  1686               	bsf	6,5	;volatile
  4811                           
  4812                           ;do_am.c: 164: ANSELHbits.ANS13 = 0;
  4813  0E95  1683               	bsf	3,5	;RP0=1, select bank3
  4814  0E96  1703               	bsf	3,6	;RP1=1, select bank3
  4815  0E97  1289               	bcf	9,5	;volatile
  4816                           
  4817                           ;do_am.c: 166: (TRISBbits.TRISB7 = 1);
  4818  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  4819  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  4820  0E9A  1786               	bsf	6,7	;volatile
  4821  0E9B  0008               	return
  4822  0E9C                     __end_of_IOInit:	
  4823                           
  4824                           	psect	text22
  4825  0C7B                     __ptext22:	
  4826 ;; *************** function _ConnInit *****************
  4827 ;; Defined at:
  4828 ;;		line 117 in file "do_am.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0
  4844 ;;      Temps:          0       1       0       0       0
  4845 ;;      Totals:         0       1       0       0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    3
  4849 ;; This function calls:
  4850 ;;		_LoadMenuItem
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function _ConnInit
  4858  0C7B                     _ConnInit:	
  4859                           
  4860                           ;do_am.c: 119: server_conn.from = LoadMenuItem(0);
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _ConnInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4864  0C7B  3000               	movlw	0
  4865  0C7C  120A  158A  24CF   	fcall	_LoadMenuItem
  4866  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  4867  0C80  1303               	bcf	3,6	;RP1=0, select bank0
  4868  0C81  00A3               	movwf	??_ConnInit
  4869  0C82  0823               	movf	??_ConnInit,w
  4870  0C83  00F6               	movwf	_server_conn
  4871                           
  4872                           ;do_am.c: 120: server_conn.to = 16;
  4873  0C84  3010               	movlw	16
  4874  0C85  00A3               	movwf	??_ConnInit
  4875  0C86  0823               	movf	??_ConnInit,w
  4876  0C87  00F7               	movwf	_server_conn+1
  4877                           
  4878                           ;do_am.c: 121: server_conn.msgid = 0;
  4879  0C88  01F8               	clrf	_server_conn+2
  4880                           
  4881                           ;do_am.c: 122: server_conn.available = 0;
  4882  0C89  01F9               	clrf	_server_conn+3
  4883  0C8A  0008               	return
  4884  0C8B                     __end_of_ConnInit:	
  4885                           
  4886                           	psect	text23
  4887  0CCF                     __ptext23:	
  4888 ;; *************** function _LoadMenuItem *****************
  4889 ;; Defined at:
  4890 ;;		line 36 in file "menu.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  item            1    wreg     unsigned char 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  item            1    2[BANK0 ] unsigned char 
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      unsigned char 
  4897 ;; Registers used:
  4898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4904 ;;      Params:         0       0       0       0       0
  4905 ;;      Locals:         0       1       0       0       0
  4906 ;;      Temps:          0       2       0       0       0
  4907 ;;      Totals:         0       3       0       0       0
  4908 ;;Total ram usage:        3 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    2
  4911 ;; This function calls:
  4912 ;;		_eeprom_read
  4913 ;; This function is called by:
  4914 ;;		_ConnInit
  4915 ;;		_MenuInit
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           
  4920                           ;psect for function _LoadMenuItem
  4921  0CCF                     _LoadMenuItem:	
  4922                           
  4923                           ;incstack = 0
  4924                           ; Regs used in _LoadMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4925                           ;LoadMenuItem@item stored from wreg
  4926  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  4927  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  4928  0CD1  00A2               	movwf	LoadMenuItem@item
  4929                           
  4930                           ;menu.c: 38: g_menu.items[item].value = eeprom_read(item);
  4931  0CD2  0822               	movf	LoadMenuItem@item,w
  4932  0CD3  120A  158A  2520   	fcall	_eeprom_read
  4933  0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  4934  0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  4935  0CD8  00A0               	movwf	??_LoadMenuItem
  4936  0CD9  0822               	movf	LoadMenuItem@item,w
  4937  0CDA  00A1               	movwf	??_LoadMenuItem+1
  4938  0CDB  0721               	addwf	??_LoadMenuItem+1,w
  4939  0CDC  3EA0               	addlw	(low (_g_menu| 0))& (0+255)
  4940  0CDD  0084               	movwf	4
  4941  0CDE  0820               	movf	??_LoadMenuItem,w
  4942  0CDF  1383               	bcf	3,7	;select IRP bank1
  4943  0CE0  0080               	movwf	0
  4944  0CE1  0008               	return
  4945  0CE2                     __end_of_LoadMenuItem:	
  4946                           
  4947                           	psect	text24
  4948  0D20                     __ptext24:	
  4949 ;; *************** function _eeprom_read *****************
  4950 ;; Defined at:
  4951 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  addr            1    wreg     unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  addr            1    5[COMMON] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      unsigned char 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4965 ;;      Params:         0       0       0       0       0
  4966 ;;      Locals:         1       0       0       0       0
  4967 ;;      Temps:          1       0       0       0       0
  4968 ;;      Totals:         2       0       0       0       0
  4969 ;;Total ram usage:        2 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    1
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_LoadMenuItem
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function _eeprom_read
  4981  0D20                     _eeprom_read:	
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4985                           ;eeprom_read@addr stored from wreg
  4986  0D20  00F5               	movwf	eeprom_read@addr
  4987  0D21                     l366:	
  4988  0D21  0064               	clrwdt	;# 
  4989  0D22  1683               	bsf	3,5	;RP0=1, select bank3
  4990  0D23  1703               	bsf	3,6	;RP1=1, select bank3
  4991  0D24  188C               	btfsc	12,1	;volsfr
  4992  0D25  2D21               	goto	l366
  4993  0D26  0875               	movf	eeprom_read@addr,w
  4994  0D27  1283               	bcf	3,5	;RP0=0, select bank2
  4995  0D28  1703               	bsf	3,6	;RP1=1, select bank2
  4996  0D29  008D               	movwf	13	;volatile
  4997  0D2A  303F               	movlw	63
  4998  0D2B  00F4               	movwf	??_eeprom_read
  4999  0D2C  0874               	movf	??_eeprom_read,w
  5000  0D2D  1683               	bsf	3,5	;RP0=1, select bank3
  5001  0D2E  1703               	bsf	3,6	;RP1=1, select bank3
  5002  0D2F  058C               	andwf	12,f	;volsfr
  5003  0D30  140C               	bsf	12,0	;volsfr
  5004  0D31  1003               	clrc
  5005  0D32  180C               	btfsc	12,0	;volsfr
  5006  0D33  1403               	setc
  5007  0D34  3000               	movlw	0
  5008  0D35  1803               	skipnc
  5009  0D36  3001               	movlw	1
  5010  0D37  1283               	bcf	3,5	;RP0=0, select bank2
  5011  0D38  1703               	bsf	3,6	;RP1=1, select bank2
  5012  0D39  080C               	movf	12,w	;volatile
  5013  0D3A  0008               	return
  5014  0D3B                     __end_of_eeprom_read:	
  5015                           
  5016                           	psect	text25
  5017  0DB3                     __ptext25:	
  5018 ;; *************** function _ClearMenu *****************
  5019 ;; Defined at:
  5020 ;;		line 28 in file "menu.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  i               1   17[BANK0 ] char 
  5025 ;;  count           1   16[BANK0 ] char 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      void 
  5028 ;; Registers used:
  5029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5035 ;;      Params:         0       0       0       0       0
  5036 ;;      Locals:         0       2       0       0       0
  5037 ;;      Temps:          0       1       0       0       0
  5038 ;;      Totals:         0       3       0       0       0
  5039 ;;Total ram usage:        3 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    4
  5042 ;; This function calls:
  5043 ;;		_LCDByte
  5044 ;;		_LCDGotoXY
  5045 ;;		_LCDWriteString
  5046 ;; This function is called by:
  5047 ;;		_main
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _ClearMenu
  5053  0DB3                     _ClearMenu:	
  5054                           
  5055                           ;menu.c: 30: { LCDGotoXY(0,0); int8_t count = LCDWriteString(""); for(int8_t i = count +
      +                           0; i < 16; i++) { (LCDByte(' ',1)); } };
  5056                           
  5057                           ;incstack = 0
  5058                           ; Regs used in _ClearMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5059  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0DB5  01AA               	clrf	LCDGotoXY@y
  5062  0DB6  3000               	movlw	0
  5063  0DB7  120A  158A  253B  120A  158A  	fcall	_LCDGotoXY
  5064  0DBC  3054               	movlw	(low (((STR_11+4)-__stringbase)| (0+32768)))& (0+255)
  5065  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  5066  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  5067  0DBF  00AA               	movwf	LCDWriteString@msg
  5068  0DC0  3080               	movlw	128
  5069  0DC1  00AB               	movwf	LCDWriteString@msg+1
  5070  0DC2  120A  118A  2751  120A  158A  	fcall	_LCDWriteString
  5071  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  5072  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  5073  0DC9  00AF               	movwf	??_ClearMenu
  5074  0DCA  082F               	movf	??_ClearMenu,w
  5075  0DCB  00B0               	movwf	ClearMenu@count
  5076  0DCC  0830               	movf	ClearMenu@count,w
  5077  0DCD  00AF               	movwf	??_ClearMenu
  5078  0DCE  082F               	movf	??_ClearMenu,w
  5079  0DCF  00B1               	movwf	ClearMenu@i
  5080  0DD0                     L3:	
  5081  0DD0  0831               	movf	ClearMenu@i,w
  5082  0DD1  3A80               	xorlw	128
  5083  0DD2  3E70               	addlw	-144
  5084  0DD3  1803               	btfsc	3,0
  5085  0DD4  0008               	return
  5086  0DD5  01A3               	clrf	LCDByte@isdata
  5087  0DD6  0AA3               	incf	LCDByte@isdata,f
  5088  0DD7  3020               	movlw	32
  5089  0DD8  120A  158A  26F0  120A  158A  	fcall	_LCDByte
  5090  0DDD  3001               	movlw	1
  5091  0DDE  1283               	bcf	3,5	;RP0=0, select bank0
  5092  0DDF  1303               	bcf	3,6	;RP1=0, select bank0
  5093  0DE0  00AF               	movwf	??_ClearMenu
  5094  0DE1  082F               	movf	??_ClearMenu,w
  5095  0DE2  07B1               	addwf	ClearMenu@i,f
  5096  0DE3  2DD0               	goto	L3
  5097  0DE4                     __end_of_ClearMenu:	
  5098                           
  5099                           	psect	text26
  5100  0751                     __ptext26:	
  5101 ;; *************** function _LCDWriteString *****************
  5102 ;; Defined at:
  5103 ;;		line 283 in file "lcd_hd44780_pic16.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  msg             2   10[BANK0 ] PTR const unsigned char 
  5106 ;;		 -> STR_15(1), STR_14(5), STR_13(5), STR_12(5), 
  5107 ;;		 -> STR_11(5), STR_10(5), STR_9(3), STR_8(12), 
  5108 ;;		 -> STR_7(13), STR_6(10), STR_5(10), STR_4(1), 
  5109 ;;		 -> dum_conn@s(32), STR_2(1), dum_msg@s(32), 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  cc              1   14[BANK0 ] char 
  5112 ;;  count           1   13[BANK0 ] char 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      char 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5122 ;;      Params:         0       2       0       0       0
  5123 ;;      Locals:         0       2       0       0       0
  5124 ;;      Temps:          0       1       0       0       0
  5125 ;;      Totals:         0       5       0       0       0
  5126 ;;Total ram usage:        5 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    3
  5129 ;; This function calls:
  5130 ;;		_LCDByte
  5131 ;; This function is called by:
  5132 ;;		_dum_msg
  5133 ;;		_dum_conn
  5134 ;;		_main
  5135 ;;		_ShowMenu
  5136 ;;		_ClearMenu
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           
  5141                           ;psect for function _LCDWriteString
  5142  0751                     _LCDWriteString:	
  5143                           
  5144                           ;lcd_hd44780_pic16.c: 285: int8_t count = 0;
  5145                           
  5146                           ;incstack = 0
  5147                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5148  0751  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0752  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0753  01AD               	clrf	LCDWriteString@count
  5151  0754                     l2888:	
  5152                           ;lcd_hd44780_pic16.c: 286: while(*msg!='\0')
  5153                           
  5154  0754  082B               	movf	LCDWriteString@msg+1,w
  5155  0755  00FF               	movwf	127
  5156  0756  082A               	movf	LCDWriteString@msg,w
  5157  0757  0084               	movwf	4
  5158  0758  120A  118A  2606  120A  118A  	fcall	stringtab
  5159  075D  3A00               	xorlw	0
  5160  075E  1903               	btfsc	3,2
  5161  075F  2FB1               	goto	l2890
  5162                           
  5163                           ;lcd_hd44780_pic16.c: 287: {
  5164                           ;lcd_hd44780_pic16.c: 289: if(*msg=='%')
  5165  0760  082B               	movf	LCDWriteString@msg+1,w
  5166  0761  00FF               	movwf	127
  5167  0762  082A               	movf	LCDWriteString@msg,w
  5168  0763  0084               	movwf	4
  5169  0764  120A  118A  2606  120A  118A  	fcall	stringtab
  5170  0769  3A25               	xorlw	37
  5171  076A  1D03               	skipz
  5172  076B  2F96               	goto	l2882
  5173                           
  5174                           ;lcd_hd44780_pic16.c: 290: {
  5175                           ;lcd_hd44780_pic16.c: 291: msg++;
  5176  076C  3001               	movlw	1
  5177  076D  07AA               	addwf	LCDWriteString@msg,f
  5178  076E  1803               	skipnc
  5179  076F  0AAB               	incf	LCDWriteString@msg+1,f
  5180                           
  5181                           ;lcd_hd44780_pic16.c: 292: int8_t cc=*msg-'0';
  5182  0770  082B               	movf	LCDWriteString@msg+1,w
  5183  0771  00FF               	movwf	127
  5184  0772  082A               	movf	LCDWriteString@msg,w
  5185  0773  0084               	movwf	4
  5186  0774  120A  118A  2606  120A  118A  	fcall	stringtab
  5187  0779  3ED0               	addlw	-48
  5188  077A  00AC               	movwf	??_LCDWriteString
  5189  077B  082C               	movf	??_LCDWriteString,w
  5190  077C  00AE               	movwf	LCDWriteString@cc
  5191                           
  5192                           ;lcd_hd44780_pic16.c: 294: if(cc>=0 && cc<=7)
  5193  077D  1BAE               	btfsc	LCDWriteString@cc,7
  5194  077E  2F88               	goto	l2874
  5195  077F  082E               	movf	LCDWriteString@cc,w
  5196  0780  3A80               	xorlw	128
  5197  0781  3E78               	addlw	-136
  5198  0782  1803               	skipnc
  5199  0783  2F88               	goto	l2874
  5200                           
  5201                           ;lcd_hd44780_pic16.c: 295: {
  5202                           ;lcd_hd44780_pic16.c: 296: (LCDByte(cc,1));
  5203  0784  01A3               	clrf	LCDByte@isdata
  5204  0785  0AA3               	incf	LCDByte@isdata,f
  5205  0786  082E               	movf	LCDWriteString@cc,w
  5206  0787  2FA1               	goto	L4
  5207  0788                     l2874:	
  5208                           ;lcd_hd44780_pic16.c: 298: }
  5209                           
  5210                           ;lcd_hd44780_pic16.c: 297: count++;
  5211                           
  5212                           
  5213                           ;lcd_hd44780_pic16.c: 299: else
  5214                           ;lcd_hd44780_pic16.c: 300: {
  5215                           ;lcd_hd44780_pic16.c: 301: (LCDByte('%',1));
  5216  0788  01A3               	clrf	LCDByte@isdata
  5217  0789  0AA3               	incf	LCDByte@isdata,f
  5218  078A  3025               	movlw	37
  5219  078B  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  5220                           
  5221                           ;lcd_hd44780_pic16.c: 302: count++;
  5222  0790  3001               	movlw	1
  5223  0791  1283               	bcf	3,5	;RP0=0, select bank0
  5224  0792  1303               	bcf	3,6	;RP1=0, select bank0
  5225  0793  00AC               	movwf	??_LCDWriteString
  5226  0794  082C               	movf	??_LCDWriteString,w
  5227  0795  07AD               	addwf	LCDWriteString@count,f
  5228  0796                     l2882:	
  5229                           ;lcd_hd44780_pic16.c: 305: }
  5230                           ;lcd_hd44780_pic16.c: 306: }
  5231                           
  5232                           ;lcd_hd44780_pic16.c: 304: count++;
  5233                           
  5234                           ;lcd_hd44780_pic16.c: 303: (LCDByte(*msg,1));
  5235                           
  5236                           
  5237                           ;lcd_hd44780_pic16.c: 307: else
  5238                           ;lcd_hd44780_pic16.c: 308: {
  5239                           ;lcd_hd44780_pic16.c: 309: (LCDByte(*msg,1));
  5240  0796  01A3               	clrf	LCDByte@isdata
  5241  0797  0AA3               	incf	LCDByte@isdata,f
  5242  0798  082B               	movf	LCDWriteString@msg+1,w
  5243  0799  00FF               	movwf	127
  5244  079A  082A               	movf	LCDWriteString@msg,w
  5245  079B  0084               	movwf	4
  5246  079C  120A  118A  2606  120A  118A  	fcall	stringtab
  5247  07A1                     L4:	
  5248  07A1  120A  158A  26F0  120A  118A  	fcall	_LCDByte
  5249                           
  5250                           ;lcd_hd44780_pic16.c: 310: count++;
  5251  07A6  3001               	movlw	1
  5252  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  5253  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  5254  07A9  00AC               	movwf	??_LCDWriteString
  5255  07AA  082C               	movf	??_LCDWriteString,w
  5256  07AB  07AD               	addwf	LCDWriteString@count,f
  5257                           
  5258                           ;lcd_hd44780_pic16.c: 311: }
  5259                           ;lcd_hd44780_pic16.c: 312: msg++;
  5260  07AC  3001               	movlw	1
  5261  07AD  07AA               	addwf	LCDWriteString@msg,f
  5262  07AE  1803               	skipnc
  5263  07AF  0AAB               	incf	LCDWriteString@msg+1,f
  5264  07B0  2F54               	goto	l2888
  5265  07B1                     l2890:	
  5266                           
  5267                           ;lcd_hd44780_pic16.c: 313: }
  5268                           ;lcd_hd44780_pic16.c: 315: return count;
  5269  07B1  082D               	movf	LCDWriteString@count,w
  5270  07B2  0008               	return
  5271  07B3                     __end_of_LCDWriteString:	
  5272                           
  5273                           	psect	text27
  5274  0D3B                     __ptext27:	
  5275 ;; *************** function _LCDGotoXY *****************
  5276 ;; Defined at:
  5277 ;;		line 367 in file "lcd_hd44780_pic16.c"
  5278 ;; Parameters:    Size  Location     Type
  5279 ;;  x               1    wreg     unsigned char 
  5280 ;;  y               1   10[BANK0 ] unsigned char 
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;  x               1   12[BANK0 ] unsigned char 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5292 ;;      Params:         0       1       0       0       0
  5293 ;;      Locals:         0       1       0       0       0
  5294 ;;      Temps:          0       1       0       0       0
  5295 ;;      Totals:         0       3       0       0       0
  5296 ;;Total ram usage:        3 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    3
  5299 ;; This function calls:
  5300 ;;		_LCDByte
  5301 ;; This function is called by:
  5302 ;;		_dum_msg
  5303 ;;		_dum_conn
  5304 ;;		_main
  5305 ;;		_ShowMenu
  5306 ;;		_ClearMenu
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function _LCDGotoXY
  5312  0D3B                     _LCDGotoXY:	
  5313                           
  5314                           ;incstack = 0
  5315                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5316                           ;LCDGotoXY@x stored from wreg
  5317  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  5318  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  5319  0D3D  00AC               	movwf	LCDGotoXY@x
  5320                           
  5321                           ;lcd_hd44780_pic16.c: 369: if(x>=20) return;
  5322  0D3E  3014               	movlw	20
  5323  0D3F  022C               	subwf	LCDGotoXY@x,w
  5324  0D40  1803               	btfsc	3,0
  5325  0D41  0008               	return
  5326  0D42  2D4C               	goto	l2854
  5327  0D43                     l267:	
  5328                           ;lcd_hd44780_pic16.c: 377: case 1:
  5329                           
  5330                           ;lcd_hd44780_pic16.c: 376: break;
  5331                           
  5332                           ;lcd_hd44780_pic16.c: 374: {
  5333                           ;lcd_hd44780_pic16.c: 375: case 0:
  5334                           
  5335                           ;lcd_hd44780_pic16.c: 373: switch(y)
  5336                           
  5337                           
  5338                           ;lcd_hd44780_pic16.c: 378: x|=0b01000000;
  5339  0D43  172C               	bsf	LCDGotoXY@x,6
  5340                           
  5341                           ;lcd_hd44780_pic16.c: 379: break;
  5342  0D44  2D5A               	goto	l266
  5343  0D45                     l2848:	
  5344                           ;lcd_hd44780_pic16.c: 380: case 2:
  5345                           
  5346                           
  5347                           ;lcd_hd44780_pic16.c: 381: x+=0x14;
  5348  0D45  3014               	movlw	20
  5349  0D46  2D48               	goto	L5
  5350  0D47                     l2850:	
  5351                           ;lcd_hd44780_pic16.c: 383: case 3:
  5352                           
  5353                           ;lcd_hd44780_pic16.c: 382: break;
  5354                           
  5355                           
  5356                           ;lcd_hd44780_pic16.c: 384: x+=0x54;
  5357  0D47  3054               	movlw	84
  5358  0D48                     L5:	
  5359  0D48  00AB               	movwf	??_LCDGotoXY
  5360  0D49  082B               	movf	??_LCDGotoXY,w
  5361  0D4A  07AC               	addwf	LCDGotoXY@x,f
  5362                           
  5363                           ;lcd_hd44780_pic16.c: 386: }
  5364                           
  5365                           ;lcd_hd44780_pic16.c: 385: break;
  5366  0D4B  2D5A               	goto	l266
  5367  0D4C                     l2854:	
  5368  0D4C  082A               	movf	LCDGotoXY@y,w
  5369                           
  5370                           ; Switch size 1, requested type "space"
  5371                           ; Number of cases is 4, Range of values is 0 to 3
  5372                           ; switch strategies available:
  5373                           ; Name         Instructions Cycles
  5374                           ; simple_byte           13     7 (average)
  5375                           ; direct_byte           20     8 (fixed)
  5376                           ; jumptable            260     6 (fixed)
  5377                           ;	Chosen strategy is simple_byte
  5378  0D4D  3A00               	xorlw	0	; case 0
  5379  0D4E  1903               	skipnz
  5380  0D4F  2D5A               	goto	l266
  5381  0D50  3A01               	xorlw	1	; case 1
  5382  0D51  1903               	skipnz
  5383  0D52  2D43               	goto	l267
  5384  0D53  3A03               	xorlw	3	; case 2
  5385  0D54  1903               	skipnz
  5386  0D55  2D45               	goto	l2848
  5387  0D56  3A01               	xorlw	1	; case 3
  5388  0D57  1903               	skipnz
  5389  0D58  2D47               	goto	l2850
  5390  0D59  2D5A               	goto	l266
  5391  0D5A                     l266:	
  5392                           
  5393                           ;lcd_hd44780_pic16.c: 408: x|=0b10000000;
  5394  0D5A  17AC               	bsf	LCDGotoXY@x,7
  5395                           
  5396                           ;lcd_hd44780_pic16.c: 409: (LCDByte(x,0));
  5397  0D5B  01A3               	clrf	LCDByte@isdata
  5398  0D5C  082C               	movf	LCDGotoXY@x,w
  5399  0D5D  120A  158A  26F0   	fcall	_LCDByte
  5400  0D60  0008               	return
  5401  0D61                     __end_of_LCDGotoXY:	
  5402                           
  5403                           	psect	text28
  5404  0EF0                     __ptext28:	
  5405 ;; *************** function _LCDByte *****************
  5406 ;; Defined at:
  5407 ;;		line 80 in file "lcd_hd44780_pic16.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  c               1    wreg     unsigned char 
  5410 ;;  isdata          1    3[BANK0 ] unsigned char 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  c               1    8[BANK0 ] unsigned char 
  5413 ;;  temp            1    9[BANK0 ] unsigned char 
  5414 ;;  ln              1    7[BANK0 ] unsigned char 
  5415 ;;  hn              1    6[BANK0 ] unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      void 
  5418 ;; Registers used:
  5419 ;;		wreg, status,2, status,0, pclath, cstack
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5425 ;;      Params:         0       1       0       0       0
  5426 ;;      Locals:         0       4       0       0       0
  5427 ;;      Temps:          0       2       0       0       0
  5428 ;;      Totals:         0       7       0       0       0
  5429 ;;Total ram usage:        7 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; Hardware stack levels required when called:    2
  5432 ;; This function calls:
  5433 ;;		_LCDBusyLoop
  5434 ;; This function is called by:
  5435 ;;		_dum_msg
  5436 ;;		_dum_conn
  5437 ;;		_main
  5438 ;;		_LCDSetStyle
  5439 ;;		_LCDInit
  5440 ;;		_LCDWriteString
  5441 ;;		_LCDWriteInt
  5442 ;;		_LCDGotoXY
  5443 ;;		_ShowMenu
  5444 ;;		_ClearMenu
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           
  5449                           ;psect for function _LCDByte
  5450  0EF0                     _LCDByte:	
  5451                           
  5452                           ;incstack = 0
  5453                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  5454                           ;LCDByte@c stored from wreg
  5455  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  5457  0EF2  00A8               	movwf	LCDByte@c
  5458                           
  5459                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  5460                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  5461                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  5462  0EF3  0828               	movf	LCDByte@c,w
  5463  0EF4  00A4               	movwf	??_LCDByte
  5464  0EF5  3004               	movlw	4
  5465  0EF6                     u2675:	
  5466  0EF6  1003               	clrc
  5467  0EF7  0CA4               	rrf	??_LCDByte,f
  5468  0EF8  3EFF               	addlw	-1
  5469  0EF9  1D03               	skipz
  5470  0EFA  2EF6               	goto	u2675
  5471  0EFB  0824               	movf	??_LCDByte,w
  5472  0EFC  00A5               	movwf	??_LCDByte+1
  5473  0EFD  0825               	movf	??_LCDByte+1,w
  5474  0EFE  00A6               	movwf	LCDByte@hn
  5475                           
  5476                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  5477  0EFF  0828               	movf	LCDByte@c,w
  5478  0F00  390F               	andlw	15
  5479  0F01  00A4               	movwf	??_LCDByte
  5480  0F02  0824               	movf	??_LCDByte,w
  5481  0F03  00A7               	movwf	LCDByte@ln
  5482                           
  5483                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  5484  0F04  0823               	movf	LCDByte@isdata,w
  5485  0F05  1D03               	btfss	3,2
  5486  0F06  2F09               	goto	l217
  5487                           
  5488                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  5489  0F07  1087               	bcf	7,1	;volatile
  5490  0F08  2F0A               	goto	l218
  5491  0F09                     l217:	
  5492                           
  5493                           ;lcd_hd44780_pic16.c: 97: else
  5494                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  5495  0F09  1487               	bsf	7,1	;volatile
  5496  0F0A                     l218:	
  5497                           
  5498                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5499  0F0A  2F0B               	nop2	;2 cycle nop
  5500                           
  5501                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  5502  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  5503  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  5504  0F0D  1587               	bsf	7,3	;volatile
  5505                           
  5506                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  5507  0F0E  0826               	movf	LCDByte@hn,w
  5508  0F0F  00A4               	movwf	??_LCDByte
  5509  0F10  3004               	movlw	4
  5510  0F11                     u2695:	
  5511  0F11  1003               	clrc
  5512  0F12  0DA4               	rlf	??_LCDByte,f
  5513  0F13  3EFF               	addlw	-1
  5514  0F14  1D03               	skipz
  5515  0F15  2F11               	goto	u2695
  5516  0F16  0807               	movf	7,w	;volatile
  5517  0F17  390F               	andlw	15
  5518  0F18  0424               	iorwf	??_LCDByte,w
  5519  0F19  00A5               	movwf	??_LCDByte+1
  5520  0F1A  0825               	movf	??_LCDByte+1,w
  5521  0F1B  00A9               	movwf	LCDByte@temp
  5522                           
  5523                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  5524  0F1C  0829               	movf	LCDByte@temp,w
  5525  0F1D  0087               	movwf	7	;volatile
  5526                           
  5527                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5528  0F1E  2F1F               	nop2	;2 cycle nop
  5529  0F1F  2F20               	nop2	;2 cycle nop
  5530  0F20  0000               	nop
  5531                           
  5532                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  5533  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  5534  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  5535  0F23  1187               	bcf	7,3	;volatile
  5536                           
  5537                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5538  0F24  2F25               	nop2	;2 cycle nop
  5539  0F25  2F26               	nop2	;2 cycle nop
  5540  0F26  0000               	nop
  5541                           
  5542                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  5543  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  5544  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  5545  0F29  1587               	bsf	7,3	;volatile
  5546                           
  5547                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  5548  0F2A  0827               	movf	LCDByte@ln,w
  5549  0F2B  00A4               	movwf	??_LCDByte
  5550  0F2C  3004               	movlw	4
  5551  0F2D                     u2705:	
  5552  0F2D  1003               	clrc
  5553  0F2E  0DA4               	rlf	??_LCDByte,f
  5554  0F2F  3EFF               	addlw	-1
  5555  0F30  1D03               	skipz
  5556  0F31  2F2D               	goto	u2705
  5557  0F32  0807               	movf	7,w	;volatile
  5558  0F33  390F               	andlw	15
  5559  0F34  0424               	iorwf	??_LCDByte,w
  5560  0F35  00A5               	movwf	??_LCDByte+1
  5561  0F36  0825               	movf	??_LCDByte+1,w
  5562  0F37  00A9               	movwf	LCDByte@temp
  5563                           
  5564                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  5565  0F38  0829               	movf	LCDByte@temp,w
  5566  0F39  0087               	movwf	7	;volatile
  5567                           
  5568                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5569  0F3A  2F3B               	nop2	;2 cycle nop
  5570  0F3B  2F3C               	nop2	;2 cycle nop
  5571  0F3C  0000               	nop
  5572                           
  5573                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  5574  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  5575  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  5576  0F3F  1187               	bcf	7,3	;volatile
  5577                           
  5578                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5579  0F40  2F41               	nop2	;2 cycle nop
  5580  0F41  2F42               	nop2	;2 cycle nop
  5581  0F42  0000               	nop
  5582                           
  5583                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  5584  0F43  120A  118A  26E9   	fcall	_LCDBusyLoop
  5585  0F46  0008               	return
  5586  0F47                     __end_of_LCDByte:	
  5587                           
  5588                           	psect	text29
  5589  06E9                     __ptext29:	
  5590 ;; *************** function _LCDBusyLoop *****************
  5591 ;; Defined at:
  5592 ;;		line 135 in file "lcd_hd44780_pic16.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;		None
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  status          1    2[BANK0 ] unsigned char 
  5597 ;;  temp            1    1[BANK0 ] unsigned char 
  5598 ;;  busy            1    0[BANK0 ] unsigned char 
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		wreg, status,2, status,0
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5608 ;;      Params:         0       0       0       0       0
  5609 ;;      Locals:         0       3       0       0       0
  5610 ;;      Temps:          2       0       0       0       0
  5611 ;;      Totals:         2       3       0       0       0
  5612 ;;Total ram usage:        5 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    1
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_LCDByte
  5619 ;;		_LCDInit
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           
  5624                           ;psect for function _LCDBusyLoop
  5625  06E9                     _LCDBusyLoop:	
  5626                           
  5627                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  5628                           
  5629                           ;incstack = 0
  5630                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  5631  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  5632  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  5633  06EB  01A2               	clrf	LCDBusyLoop@status
  5634                           
  5635                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  5636  06EC  30F0               	movlw	240
  5637  06ED  00F4               	movwf	??_LCDBusyLoop
  5638  06EE  0874               	movf	??_LCDBusyLoop,w
  5639  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  5640  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  5641  06F1  0487               	iorwf	7,f	;volatile
  5642                           
  5643                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  5644  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  5645  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  5646  06F4  1507               	bsf	7,2	;volatile
  5647                           
  5648                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  5649  06F5  1087               	bcf	7,1	;volatile
  5650                           
  5651                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5652  06F6  2EF7               	nop2	;2 cycle nop
  5653  06F7                     l2556:	
  5654                           ;lcd_hd44780_pic16.c: 153: do
  5655                           
  5656                           
  5657                           ;lcd_hd44780_pic16.c: 154: {
  5658                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  5659  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  5660  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  5661  06F9  1587               	bsf	7,3	;volatile
  5662                           
  5663                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5664  06FA  2EFB               	nop2	;2 cycle nop
  5665                           
  5666                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  5667  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  5668  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  5669  06FD  0807               	movf	7,w	;volatile
  5670  06FE  00F4               	movwf	??_LCDBusyLoop
  5671  06FF  3004               	movlw	4
  5672  0700                     u2635:	
  5673  0700  1003               	clrc
  5674  0701  0CF4               	rrf	??_LCDBusyLoop,f
  5675  0702  3EFF               	addlw	-1
  5676  0703  1D03               	skipz
  5677  0704  2F00               	goto	u2635
  5678  0705  0874               	movf	??_LCDBusyLoop,w
  5679  0706  00F5               	movwf	??_LCDBusyLoop+1
  5680  0707  0875               	movf	??_LCDBusyLoop+1,w
  5681  0708  00A2               	movwf	LCDBusyLoop@status
  5682                           
  5683                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  5684  0709  0822               	movf	LCDBusyLoop@status,w
  5685  070A  00F4               	movwf	??_LCDBusyLoop
  5686  070B  3003               	movlw	3
  5687  070C                     u2645:	
  5688  070C  1003               	clrc
  5689  070D  0DF4               	rlf	??_LCDBusyLoop,f
  5690  070E  3EFF               	addlw	-1
  5691  070F  1D03               	skipz
  5692  0710  2F0C               	goto	u2645
  5693  0711  1003               	clrc
  5694  0712  0D74               	rlf	??_LCDBusyLoop,w
  5695  0713  00F5               	movwf	??_LCDBusyLoop+1
  5696  0714  0875               	movf	??_LCDBusyLoop+1,w
  5697  0715  00A2               	movwf	LCDBusyLoop@status
  5698                           
  5699                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5700  0716  2F17               	nop2	;2 cycle nop
  5701                           
  5702                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  5703  0717  1283               	bcf	3,5	;RP0=0, select bank0
  5704  0718  1303               	bcf	3,6	;RP1=0, select bank0
  5705  0719  1187               	bcf	7,3	;volatile
  5706                           
  5707                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5708  071A  2F1B               	nop2	;2 cycle nop
  5709  071B  2F1C               	nop2	;2 cycle nop
  5710  071C  0000               	nop
  5711                           
  5712                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  5713  071D  1283               	bcf	3,5	;RP0=0, select bank0
  5714  071E  1303               	bcf	3,6	;RP1=0, select bank0
  5715  071F  1587               	bsf	7,3	;volatile
  5716                           
  5717                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5718  0720  2F21               	nop2	;2 cycle nop
  5719                           
  5720                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  5721  0721  1283               	bcf	3,5	;RP0=0, select bank0
  5722  0722  1303               	bcf	3,6	;RP1=0, select bank0
  5723  0723  0807               	movf	7,w	;volatile
  5724  0724  00F4               	movwf	??_LCDBusyLoop
  5725  0725  3004               	movlw	4
  5726  0726                     u2655:	
  5727  0726  1003               	clrc
  5728  0727  0CF4               	rrf	??_LCDBusyLoop,f
  5729  0728  3EFF               	addlw	-1
  5730  0729  1D03               	skipz
  5731  072A  2F26               	goto	u2655
  5732  072B  0874               	movf	??_LCDBusyLoop,w
  5733  072C  00F5               	movwf	??_LCDBusyLoop+1
  5734  072D  0875               	movf	??_LCDBusyLoop+1,w
  5735  072E  00A1               	movwf	LCDBusyLoop@temp
  5736                           
  5737                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  5738  072F  300F               	movlw	15
  5739  0730  00F4               	movwf	??_LCDBusyLoop
  5740  0731  0874               	movf	??_LCDBusyLoop,w
  5741  0732  05A1               	andwf	LCDBusyLoop@temp,f
  5742                           
  5743                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  5744  0733  0822               	movf	LCDBusyLoop@status,w
  5745  0734  0421               	iorwf	LCDBusyLoop@temp,w
  5746  0735  00F4               	movwf	??_LCDBusyLoop
  5747  0736  0874               	movf	??_LCDBusyLoop,w
  5748  0737  00A2               	movwf	LCDBusyLoop@status
  5749                           
  5750                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  5751  0738  0822               	movf	LCDBusyLoop@status,w
  5752  0739  3980               	andlw	128
  5753  073A  00F4               	movwf	??_LCDBusyLoop
  5754  073B  0874               	movf	??_LCDBusyLoop,w
  5755  073C  00A0               	movwf	LCDBusyLoop@busy
  5756                           
  5757                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5758  073D  2F3E               	nop2	;2 cycle nop
  5759                           
  5760                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  5761  073E  1283               	bcf	3,5	;RP0=0, select bank0
  5762  073F  1303               	bcf	3,6	;RP1=0, select bank0
  5763  0740  1187               	bcf	7,3	;volatile
  5764                           
  5765                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5766  0741  2F42               	nop2	;2 cycle nop
  5767  0742  2F43               	nop2	;2 cycle nop
  5768  0743  0000               	nop
  5769                           
  5770                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  5771  0744  1283               	bcf	3,5	;RP0=0, select bank0
  5772  0745  1303               	bcf	3,6	;RP1=0, select bank0
  5773  0746  0820               	movf	LCDBusyLoop@busy,w
  5774  0747  1D03               	btfss	3,2
  5775  0748  2EF7               	goto	l2556
  5776                           
  5777                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  5778  0749  1107               	bcf	7,2	;volatile
  5779                           
  5780                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  5781  074A  300F               	movlw	15
  5782  074B  00F4               	movwf	??_LCDBusyLoop
  5783  074C  0874               	movf	??_LCDBusyLoop,w
  5784  074D  1683               	bsf	3,5	;RP0=1, select bank1
  5785  074E  1303               	bcf	3,6	;RP1=0, select bank1
  5786  074F  0587               	andwf	7,f	;volatile
  5787  0750  0008               	return
  5788  0751                     __end_of_LCDBusyLoop:	
  5789                           
  5790                           	psect	text30
  5791  0CF5                     __ptext30:	
  5792 ;; *************** function _ADCInit *****************
  5793 ;; Defined at:
  5794 ;;		line 7 in file "adc_pic16.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5808 ;;      Params:         0       0       0       0       0
  5809 ;;      Locals:         0       0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0
  5811 ;;      Totals:         0       0       0       0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; Hardware stack levels required when called:    1
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_main
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           
  5823                           ;psect for function _ADCInit
  5824  0CF5                     _ADCInit:	
  5825                           
  5826                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  5827                           
  5828                           ;incstack = 0
  5829                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  5830  0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  5831  0CF6  1303               	bcf	3,6	;RP1=0, select bank1
  5832  0CF7  1686               	bsf	6,5	;volatile
  5833                           
  5834                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  5835  0CF8  1683               	bsf	3,5	;RP0=1, select bank3
  5836  0CF9  1703               	bsf	3,6	;RP1=1, select bank3
  5837  0CFA  1689               	bsf	9,5	;volatile
  5838                           
  5839                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  5840  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  5841  0CFC  1303               	bcf	3,6	;RP1=0, select bank1
  5842  0CFD  121F               	bcf	31,4	;volatile
  5843                           
  5844                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  5845  0CFE  30C0               	movlw	192
  5846  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  5847  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  5848  0D01  049F               	iorwf	31,f	;volatile
  5849                           
  5850                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  5851  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  5852  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  5853  0D04  179F               	bsf	31,7	;volatile
  5854                           
  5855                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  5856  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  5857  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  5858  0D07  141F               	bsf	31,0	;volatile
  5859  0D08  0008               	return
  5860  0D09                     __end_of_ADCInit:	
  5861                           
  5862                           	psect	text31
  5863  0C56                     __ptext31:	
  5864 ;; *************** function _ISR *****************
  5865 ;; Defined at:
  5866 ;;		line 169 in file "do_am.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;		None
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		None
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5880 ;;      Params:         0       0       0       0       0
  5881 ;;      Locals:         0       0       0       0       0
  5882 ;;      Temps:          4       0       0       0       0
  5883 ;;      Totals:         4       0       0       0       0
  5884 ;;Total ram usage:        4 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		Interrupt level 1
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           
  5894                           ;psect for function _ISR
  5895  0C56                     _ISR:	
  5896  0C56  0873               	movf	??_ISR+3,w
  5897  0C57  00FF               	movwf	127
  5898  0C58  0872               	movf	??_ISR+2,w
  5899  0C59  008A               	movwf	10
  5900  0C5A  0871               	movf	??_ISR+1,w
  5901  0C5B  0084               	movwf	4
  5902  0C5C  0E70               	swapf	??_ISR^(0+-128),w
  5903  0C5D  0083               	movwf	3
  5904  0C5E  0EFE               	swapf	126,f
  5905  0C5F  0E7E               	swapf	126,w
  5906  0C60  0009               	retfie
  5907  0C61                     __end_of_ISR:	
  5908  007E                     btemp	set	126	;btemp
  5909  007E                     wtemp	set	126
  5910  007E                     wtemp0	set	126
  5911  0080                     wtemp1	set	128
  5912  0082                     wtemp2	set	130
  5913  0084                     wtemp3	set	132
  5914  0086                     wtemp4	set	134
  5915  0088                     wtemp5	set	136
  5916  007F                     wtemp6	set	127
  5917  007E                     ttemp	set	126
  5918  007E                     ttemp0	set	126
  5919  0081                     ttemp1	set	129
  5920  0084                     ttemp2	set	132
  5921  0087                     ttemp3	set	135
  5922  007F                     ttemp4	set	127
  5923  007E                     ltemp	set	126
  5924  007E                     ltemp0	set	126
  5925  0082                     ltemp1	set	130
  5926  0086                     ltemp2	set	134
  5927  0080                     ltemp3	set	128
  5928                           
  5929                           	psect	intentry
  5930  0004                     __pintentry:	
  5931                           ;incstack = 0
  5932                           ; Regs used in _ISR: []
  5933                           
  5934  0004                     interrupt_function:	
  5935  007E                     saved_w	set	btemp
  5936  0004  00FE               	movwf	btemp
  5937  0005  0E03               	swapf	3,w
  5938  0006  00F0               	movwf	??_ISR
  5939  0007  0804               	movf	4,w
  5940  0008  00F1               	movwf	??_ISR+1
  5941  0009  080A               	movf	10,w
  5942  000A  00F2               	movwf	??_ISR+2
  5943  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5944  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5945  000D  087F               	movf	btemp+1,w
  5946  000E  00F3               	movwf	??_ISR+3
  5947  000F  120A  158A  2C56   	ljmp	_ISR


Data Sizes:
    Strings     97
    Constant    10
    Data        16
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     80      80
    BANK1            80     23      71
    BANK3            96     35      35
    BANK2            96      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 1
		 -> main@rqt(BANK1[1]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 1
		 -> main@rqt(BANK1[1]), 

    memcpy@s1	PTR const void  size(1) Largest target is 23
		 -> msg.data(BANK1[16]), msg(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 23
		 -> msg.data(BANK1[16]), msg(BANK1[23]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_3(CODE[14]), STR_1(CODE[20]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> dum_conn@s(BANK0[32]), dum_msg@s(BANK3[32]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S634$name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), 

    g_menu.items.name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), 

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_15(CODE[1]), STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[5]), 
		 -> STR_11(CODE[5]), STR_10(CODE[5]), STR_9(CODE[3]), STR_8(CODE[12]), 
		 -> STR_7(CODE[13]), STR_6(CODE[10]), STR_5(CODE[10]), STR_4(CODE[1]), 
		 -> dum_conn@s(BANK0[32]), STR_2(CODE[1]), dum_msg@s(BANK3[32]), 

    main@byte_526	PTR struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    main@byte	PTR struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    main@smsg	PTR unsigned char  size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    pmsg	PTR struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    extract_REG_ID_RQT_CMD@pmsg	PTR const struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    extract_REG_ID_RQT_CMD@prqt	PTR struct . size(1) Largest target is 1
		 -> main@rqt(BANK1[1]), 

    dum_conn@pconn	PTR struct . size(1) Largest target is 4
		 -> server_conn(COMMON[4]), 

    dum_msg@pmsg	PTR struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    sp__memcpy	PTR void  size(1) Largest target is 1
		 -> main@rqt(BANK1[1]), 


Critical Paths under _main in COMMON

    _main->_extract_REG_ID_RQT_CMD
    _extract_REG_ID_RQT_CMD->_memcpy
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _SaveMenuItem->_eeprom_write
    _LCDInit->_LCDBusyLoop
    _LoadMenuItem->_eeprom_read
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_dum_conn
    _extract_REG_ID_RQT_CMD->_memcpy
    _dum_msg->_sprintf
    _dum_conn->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ValueInc->_SaveMenuItem
    _ValueDec->_SaveMenuItem
    _SaveMenuItem->_eeprom_write
    _ShowMenu->_LCDWriteInt
    _LCDWriteInt->_LCDByte
    _MenuInit->_LoadMenuItem
    _LCDSetStyle->_LCDByte
    _LCDInit->_LCDByte
    _ConnInit->_LoadMenuItem
    _ClearMenu->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_dum_msg

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   60580
                                              0 BANK1     23    23      0
                            _ADCInit
                          _ClearMenu
                           _ConnInit
                             _IOInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDSetStyle
                     _LCDWriteString
                           _MenuDown
                           _MenuInit
                             _MenuUp
                           _ShowMenu
                           _ValueDec
                           _ValueInc
                           _dum_conn
                            _dum_msg
             _extract_REG_ID_RQT_CMD
 ---------------------------------------------------------------------------------
 (1) _extract_REG_ID_RQT_CMD                               3     2      1     907
                                              5 COMMON     1     0      1
                                              6 BANK0      2     2      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                               7     4      3     735
                                              4 COMMON     1     1      0
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _dum_msg                                             46    46      0   10982
                                             36 BANK0     11    11      0
                                              0 BANK3     35    35      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _dum_conn                                            44    44      0   10920
                                             36 BANK0     44    44      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    17     15    1699
                                             12 BANK0     24     9     15
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     395
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _ValueInc                                             2     2      0     201
                                              4 BANK0      2     2      0
                       _SaveMenuItem
 ---------------------------------------------------------------------------------
 (1) _ValueDec                                             1     1      0     201
                                              4 BANK0      1     1      0
                       _SaveMenuItem
 ---------------------------------------------------------------------------------
 (2) _SaveMenuItem                                         3     3      0     201
                                              1 BANK0      3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     139
                                              4 COMMON     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ShowMenu                                             6     6      0   13027
                                             24 BANK0      6     6      0
                            _LCDByte
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    4064
                                             10 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     587
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     599
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _MenuUp                                               1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MenuInit                                             1     1      0      93
                                              3 BANK0      1     1      0
                       _LoadMenuItem
 ---------------------------------------------------------------------------------
 (1) _MenuDown                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDSetStyle                                          1     1      0    2207
                                             10 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    2482
                                             10 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _IOInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConnInit                                             1     1      0      93
                                              3 BANK0      1     1      0
                       _LoadMenuItem
 ---------------------------------------------------------------------------------
 (2) _LoadMenuItem                                         3     3      0      93
                                              0 BANK0      3     3      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearMenu                                            3     3      0    8963
                                             15 BANK0      3     3      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       5     3      2    3403
                                             10 BANK0      5     3      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    3282
                                             10 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1    2176
                                              3 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (4) _LCDBusyLoop                                          5     5      0     176
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _ClearMenu
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _ConnInit
     _LoadMenuItem
       _eeprom_read
   _IOInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDSetStyle
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _MenuDown
   _MenuInit
     _LoadMenuItem
       _eeprom_read
   _MenuUp
   _ShowMenu
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _ValueDec
     _SaveMenuItem
       _eeprom_write
   _ValueInc
     _SaveMenuItem
       _eeprom_write
   _dum_conn
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _dum_msg
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _extract_REG_ID_RQT_CMD
     _memcpy

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     23      23       9       36.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     17      47       7       88.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C4      12        0.0%
ABS                  0      0      C4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Jun 26 16:47:10 2016

                   ?_LCDBusyLoop 0070                       __CFG_CP$ON 0000                                pc 0002  
                             _RD 0C60                      __CFG_CPD$ON 0000                               _WR 0C61  
                   ___awdiv@sign 0025                               fsr 0004                     ?_LCDSetStyle 0070  
                    __CFG_LVP$ON 0000                              l217 0F09                              l218 0F0A  
                            l180 027C                              l156 00D7                              l177 023B  
                            l266 0D5A                              l267 0D43                              l196 0356  
                            l366 0D21                              l388 0D8C                              _GIE 005F  
                            _RA0 0028                              _RA1 0029                              _RA2 002A  
                            _RA3 002B                              _RC1 0039                              _RC2 003A  
                            _RB4 0034                              _RA6 002E                              _RC3 003B  
                            _RB5 0035                              _RA7 002F                              _RB6 0036  
                            _RB7 0037                              _ISR 0C56                              _msg 00A9  
                            fsr0 0004                  __end_of_ADCInit 0D09                              indf 0000  
                   ___awmod@sign 0025                     __CFG_IESO$ON 0000          LCDWriteInt@field_length 002C  
                __end_of_LCDByte 0F47                  __end_of_LCDInit 06E9                     ?_LCDWriteInt 002A  
                           ?_ISR 0070                      LCDByte@temp 0029                             l3200 01A0  
                           l2306 0C78                             l2316 0C69                             l3220 01DF  
                           l3204 01A7                             l3214 01CA                             l3150 00BE  
                           l3134 02EE                             l3320 033C                             l3136 005E  
                           l3082 0FE0                             l3322 0341                             l3314 0330  
                           l3242 0226                             l3250 0244                             l3226 01EB  
                           l3076 0FCD                             l3324 0346                             l3308 031B  
                           l3260 0267                             l3228 01FB                             l3164 010B  
                           l3148 0096                             l2710 07CC                             l2702 07C6  
                           l3270 0293                             l3182 0163                             l3166 0133  
                           l2712 07DA                             l2720 07F3                             l2800 0395  
                           l3280 02B4                             l2810 03AC                             l3194 018B  
                           l2556 06F7                             l2660 0F5E                             l2724 07FB  
                           l2716 07E8                             l2740 0E30                             l3292 02D5  
                           l3268 0283                             l2670 0F66                             l2654 0F53  
                           l2750 0E51                             l2822 03D3                             l3294 02DA  
                           l3286 02C9                             l2672 0F74                             l2920 054C  
                           l2816 03B2                             l2840 0429                             l3296 02DF  
                           l2850 0D47                             l2682 0F95                             l2746 0E46  
                           l2738 0E22                             l2762 0DEC                             l2764 0DFA  
                           l2772 0E13                             l2836 03E6                             l2828 03E2  
                           l2854 0D4C                             l2686 0F9D                             l2678 0F8A  
                           l2918 0517                             l2838 035F                    ?_LoadMenuItem 0070  
                           l2848 0D45                             l2928 0561                             l2768 0E08  
                           l2960 04BC                             l2784 0D6C                             l2890 07B1  
                           l2874 0788                             l2882 0796                             l2698 07BF  
                           l2794 037F                             l2982 05E1                             l2966 04D3  
                           l2888 0754                             l2988 05F4                             STR_1 0620  
                   __CFG_WDTE$ON 0000                             STR_2 0669                             STR_3 0634  
                           STR_4 0669                             STR_5 065B                             STR_6 0645  
                           STR_7 0642                             STR_8 064F                             STR_9 067E  
                           u3025 0DEF                             u3115 03C9                             u3045 0E00  
                           u3055 0E09                             u3255 056E                             u2705 0F2D  
                           u3610 013A                             u2635 0700                             u3620 013B  
                           u2645 070C                             u2805 0F75                             u3470 00C5  
                           u2655 0726                             u2815 0F81                             u3480 00C6  
                           u2825 0F8B                             u2905 07E0                             u2675 0EF6  
                           u2915 07E9                             u2695 0F11                             u2785 0F69  
                           u2955 0E25                             u3907 01F3                             u2885 07CF  
                           u3917 028B                             u2975 0E31                             u3927 02E7  
                           u2985 0E3D                             u3937 034E                             u3947 0688  
                           u2995 0E47                             _WREN 0C62                   ??_eeprom_write 0075  
        ?_extract_REG_ID_RQT_CMD 0075                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           _main 0031                             _mode 00E4               __size_of_LCDGotoXY 0026  
                           _pmsg 00E5                             btemp 007E                    __CFG_BOREN$ON 0000  
                           ltemp 007E                             start 0012                             ttemp 007E  
                           wtemp 007E                    __CFG_MCLRE$ON 0000                            ??_ISR 0070  
                          ?_main 0070                  __end_of___awdiv 0FA2                            _EEADR 010D  
                          STR_10 0679                            STR_11 0665                     main@byte_526 00D6  
                          STR_12 066A                            STR_13 066F                            STR_14 0674  
                          STR_15 0669                  __end_of___awmod 0800                            _CARRY 0018  
                   LCDInit@style 002C                  ___awdiv@divisor 0020                  __end_of___lwdiv 0E56  
                __end_of___lwmod 0E18                  ___awdiv@counter 0024                            _PORTC 0007  
                          _TRISC 0087                  __end_of_dum_msg 04E7                  __end_of_dpowers 0620  
                 ??_LoadMenuItem 0020   __end_of_extract_REG_ID_RQT_CMD 0CAC                            main@i 00CC  
                          pclath 000A                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                            ttemp0 007E  
                          ttemp1 0081                            ttemp2 0084                            ttemp3 0087  
                          ttemp4 007F                            status 0003                            wtemp0 007E  
                          wtemp1 0080                            wtemp2 0082                            wtemp3 0084  
                          wtemp4 0086                            wtemp5 0088                            wtemp6 007F  
                __end_of_sprintf 0430                 __end_of_ConnInit 0C8B                  __initialization 0015  
                   __end_of_main 0359                      dum_msg@pmsg 01B2                 __end_of_MenuDown 0C6E  
               __end_of_MenuInit 0EF0                        ??_ADCInit 0074               __size_of_ClearMenu 0031  
                         ??_main 00C0                __end_of_LCDGotoXY 0D61                    LCDByte@isdata 0023  
                      ??_LCDByte 0024                        ??_LCDInit 002A                 __end_of_ValueDec 0CF5  
               __end_of_ValueInc 0D20                 __end_of_ShowMenu 1000                           _ADRESH 001E  
                         _ADRESL 009E                    main@count_541 00C5                    main@count_550 00C8  
                  main@count_544 00C6                    main@count_553 00C9                           _EEDATA 010C  
                  main@count_547 00C7                    main@count_556 00CA                           _EECON1 018C  
                         _EECON2 018D                 ___awdiv@dividend 0022                           _IOInit 0E56  
                 __CFG_PWRTE$OFF 0000                           _MenuUp 0C6E                   _LCDWriteString 0751  
           __size_of_eeprom_read 001B                        ??___awdiv 0074                        ??___awmod 0074  
               __end_of_dum_conn 0606                           _g_menu 00A0                        ??___lwdiv 0074  
                      ??___lwmod 0075                           _memcpy 0D61             __size_of_LCDBusyLoop 0068  
               ___awdiv@quotient 0026                  ___awmod@divisor 0020             __end_of_eeprom_write 0DB3  
                ___awmod@counter 0024                        ??_dum_msg 0044                    ?_SaveMenuItem 0070  
           __size_of_LCDSetStyle 000A                     LCDWriteInt@i 0036                     LCDWriteInt@j 0034  
                         saved_w 007E                        ??_sprintf 003B                __end_of_ClearMenu 0DE4  
           __size_of_LCDWriteInt 00A1          __end_of__initialization 002D                  eeprom_read@addr 0075  
         __end_of_LCDWriteString 07B3                        LCDByte@hn 0026                        LCDByte@ln 0027  
                 __pcstackCOMMON 0070                     __pidataBANK1 0C8B             __end_of_LoadMenuItem 0CE2  
                   dum_msg@count 01B0                   ??_SaveMenuItem 0021                eeprom_write@value 0074  
                      ?_ConnInit 0070                       __pbssBANK1 00A0                          ?_IOInit 0070  
                      ?_MenuDown 0070                        ?_MenuInit 0070                  ?_LCDWriteString 002A  
                        ?_MenuUp 0070                        ?_ValueDec 0070                        ?_ValueInc 0070  
                     __pmaintext 0031                        ?_ShowMenu 0070                       __pintentry 0004  
                        ?_memcpy 0020                          _ADCInit 0CF5                 SaveMenuItem@item 0023  
                 ClearMenu@count 0030                          _LCDByte 0EF0                          _LCDInit 0681  
                     ??_ConnInit 0023                       __stringtab 0606                 LCDSetStyle@style 002A  
                      ?_dum_conn 0070                       ??_MenuDown 0074                       ??_MenuInit 0023  
                __size_of_IOInit 0046                       ??_ValueDec 0024                  __size_of_MenuUp 000D  
                     ??_ValueInc 0024                       ??_ShowMenu 0038            __size_of_eeprom_write 002A  
                        ___cgram 00D7                          ___awdiv 0F47                          ___awmod 07B3  
                        ___lwdiv 0E18                          ___lwmod 0DE4                  __size_of_memcpy 0028  
                      _ANSELbits 0188                          __ptext1 0C9B                          __ptext2 0D61  
                        __ptext3 0430                          __ptext4 0588                          __ptext5 0359  
                        __ptext6 0DE4                          __ptext7 0E18                          __ptext8 0D09  
                        __ptext9 0CE2                     __size_of_ISR 000B                          _dum_msg 0430  
                        _dpowers 0616                 ___awmod@dividend 0022                        _LCDGotoXY 0D3B  
                        _submode 00E6                          _sprintf 0359                          clrloop0 0C45  
                        main@low 00D4                          main@rqt 00CB                          main@rsp 00C4  
           end_of_initialization 002D                       ??_dum_conn 0044                          memcpy@d 0023  
                        memcpy@n 0021                          memcpy@s 0024                     _eeprom_write 0D89  
           __end_of_SaveMenuItem 0CCF            __size_of_LoadMenuItem 0013                LCDWriteString@msg 002A  
                      _TRISAbits 0085                        _TRISBbits 0086                        _TRISCbits 0087  
                     ?_LCDGotoXY 002A                    dum_conn@count 006D                    dum_conn@pconn 006F  
                   _LoadMenuItem 0CCF                       LCDInit@__i 002D                    ??_eeprom_read 0074  
                     LCDGotoXY@x 002C                       LCDGotoXY@y 002A                   __end_of_IOInit 0E9C  
               LoadMenuItem@item 0022                        _ClearMenu 0DB3                    ??_LCDBusyLoop 0074  
                 __end_of_MenuUp 0C7B                    ??_LCDSetStyle 0076                   __end_of_memcpy 0D89  
       ??_extract_REG_ID_RQT_CMD 0026              start_initialization 0015                      __end_of_ISR 0C61  
                  ??_LCDWriteInt 002D                 ??_LCDWriteString 002C                    ShowMenu@count 003C  
              __size_of_ConnInit 0010                         ??_IOInit 0074         __CFG_FOSC$INTRC_NOCLKOUT 0000  
              __size_of_MenuDown 000D                __size_of_MenuInit 0054                       ?_ClearMenu 0070  
                       ??_MenuUp 0074                        ShowMenu@i 003D              __end_of_eeprom_read 0D3B  
                     init_fetch0 0CAC                __size_of_ValueDec 0013                __size_of_ValueInc 0017  
                    __pdataBANK1 00D7                __size_of_ShowMenu 005E                         ??_memcpy 0074  
                       ?_ADCInit 0070              __end_of_LCDBusyLoop 0751                         ?_LCDByte 0023  
                       ?_LCDInit 0070                      __pbssCOMMON 0076                         LCDByte@c 0028  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00C0  
                  __pcstackBANK3 0190                      ??_LCDGotoXY 002B              __end_of_LCDSetStyle 0C56  
          __size_of_SaveMenuItem 0012                 eeprom_write@addr 0020       extract_REG_ID_RQT_CMD@pmsg 0027  
     extract_REG_ID_RQT_CMD@prqt 0075                 LCDWriteInt@F1646 00DF                      sprintf@flag 003F  
                    sprintf@prec 0040              __end_of_LCDWriteInt 0588                __size_of_dum_conn 007E  
               ___lwdiv@dividend 0022                         ?___awdiv 0020                         ?___awmod 0020  
                       ?___lwdiv 0020                         ?___lwmod 0027                        __pstrings 0606  
                       ?_dum_msg 0070                     _SaveMenuItem 0CBD  __size_of_extract_REG_ID_RQT_CMD 0011  
                LCDBusyLoop@busy 0020                  LCDBusyLoop@temp 0021                 ___lwdiv@quotient 0025  
                       ?_sprintf 002C                interrupt_function 0004                        clear_ram0 0C44  
                    _eeprom_read 0D20                      ??_ClearMenu 002F                      _LCDBusyLoop 06E9  
               LCDWriteString@cc 002E                 __size_of_ADCInit 0014                       _ADCON0bits 001F  
                    __stringbase 0615                       _ADCON1bits 009F                        main@i_552 00CF  
                      main@i_546 00CD                        main@i_555 00D0                        main@i_549 00CE  
                    _LCDSetStyle 0C4C                        main@i_558 00D1                        main@count 00D3  
               __size_of_LCDByte 0057                 __size_of_LCDInit 0068                         _ConnInit 0C7B  
                    _LCDWriteInt 04E7                        dum_conn@i 006E                        dum_conn@s 004D  
                       _MenuDown 0C61                         _MenuInit 0E9C           _extract_REG_ID_RQT_CMD 0C9B  
                       _ValueDec 0CE2                         _ValueInc 0D09                         _ShowMenu 0FA2  
               __size_of___awdiv 005B                 __size_of___awmod 004D                LCDBusyLoop@status 0022  
               __size_of___lwdiv 003E                 __size_of___lwmod 0034               __end_of__stringtab 0616  
                     _ANSELHbits 0189                       sprintf@val 0041                 __size_of_dum_msg 00B7  
                ___lwdiv@divisor 0020                  ___lwdiv@counter 0024                         __ptext10 0CBD  
                       __ptext11 0D89                         __ptext20 0681                         __ptext12 0FA2  
                       __ptext21 0E56                         __ptext13 04E7                         __ptext30 0CF5  
                       __ptext22 0C7B                         __ptext14 07B3                         __ptext31 0C56  
                       __ptext23 0CCF                         __ptext15 0F47                         __ptext24 0D20  
                       __ptext16 0C6E                         __ptext25 0DB3                         __ptext17 0E9C  
                       __ptext26 0751                         __ptext18 0C61                         __ptext27 0D3B  
                       __ptext19 0C4C                         __ptext28 0EF0                         __ptext29 06E9  
              __CFG_BOR4V$BOR21V 0000                 __size_of_sprintf 00D7                         _dum_conn 0588  
                  __size_of_main 0328                         main@byte 00D5                         main@revc 00C3  
                       main@smsg 00D2                         dum_msg@i 01B1                         dum_msg@s 0190  
                     ClearMenu@i 0031                         memcpy@d1 0025                         memcpy@s1 0020  
                       init_ram0 0CB0                         intlevel1 0000                        sprintf@ap 003E  
                      sprintf@sp 002C                 ___lwmod@dividend 0029                   LCDWriteInt@val 002A  
                 LCDWriteInt@str 002F                        stringcode 0610                         sprintf@c 0043  
                       sprintf@f 002E                  ___lwmod@divisor 0027                  ___lwmod@counter 002B  
                       stringdir 0610                         stringtab 0606                      _server_conn 0076  
            LCDWriteString@count 002D                    ?_eeprom_write 0074                     ?_eeprom_read 0070  
        __size_of_LCDWriteString 0062  
