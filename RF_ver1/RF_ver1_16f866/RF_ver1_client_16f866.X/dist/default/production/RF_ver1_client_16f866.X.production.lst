

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jun 25 16:03:53 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     	;# 
    35  0001                     	;# 
    36  0002                     	;# 
    37  0003                     	;# 
    38  0004                     	;# 
    39  0005                     	;# 
    40  0006                     	;# 
    41  0007                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  000E                     	;# 
    49  000F                     	;# 
    50  0010                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0013                     	;# 
    54  0014                     	;# 
    55  0015                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  0018                     	;# 
    60  0019                     	;# 
    61  001A                     	;# 
    62  001B                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001D                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  0081                     	;# 
    69  0085                     	;# 
    70  0086                     	;# 
    71  0087                     	;# 
    72  0089                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  008F                     	;# 
    77  0090                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0093                     	;# 
    82  0093                     	;# 
    83  0094                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  0105                     	;# 
    96  0107                     	;# 
    97  0108                     	;# 
    98  0109                     	;# 
    99  010C                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  0185                     	;# 
   105  0187                     	;# 
   106  0188                     	;# 
   107  0189                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008F                     	;# 
   153  0090                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  0105                     	;# 
   172  0107                     	;# 
   173  0108                     	;# 
   174  0109                     	;# 
   175  010C                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0185                     	;# 
   181  0187                     	;# 
   182  0188                     	;# 
   183  0189                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  008F                     	;# 
   229  0090                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0094                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009A                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  0105                     	;# 
   248  0107                     	;# 
   249  0108                     	;# 
   250  0109                     	;# 
   251  010C                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  0185                     	;# 
   257  0187                     	;# 
   258  0188                     	;# 
   259  0189                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  008F                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  0105                     	;# 
   324  0107                     	;# 
   325  0108                     	;# 
   326  0109                     	;# 
   327  010C                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  0185                     	;# 
   333  0187                     	;# 
   334  0188                     	;# 
   335  0189                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338  0000                     	;# 
   339  0001                     	;# 
   340  0002                     	;# 
   341  0003                     	;# 
   342  0004                     	;# 
   343  0005                     	;# 
   344  0006                     	;# 
   345  0007                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000D                     	;# 
   351  000E                     	;# 
   352  000E                     	;# 
   353  000F                     	;# 
   354  0010                     	;# 
   355  0011                     	;# 
   356  0012                     	;# 
   357  0013                     	;# 
   358  0014                     	;# 
   359  0015                     	;# 
   360  0015                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001B                     	;# 
   368  001C                     	;# 
   369  001D                     	;# 
   370  001E                     	;# 
   371  001F                     	;# 
   372  0081                     	;# 
   373  0085                     	;# 
   374  0086                     	;# 
   375  0087                     	;# 
   376  0089                     	;# 
   377  008C                     	;# 
   378  008D                     	;# 
   379  008E                     	;# 
   380  008F                     	;# 
   381  0090                     	;# 
   382  0091                     	;# 
   383  0092                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0093                     	;# 
   387  0094                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009C                     	;# 
   396  009D                     	;# 
   397  009E                     	;# 
   398  009F                     	;# 
   399  0105                     	;# 
   400  0107                     	;# 
   401  0108                     	;# 
   402  0109                     	;# 
   403  010C                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  010F                     	;# 
   408  0185                     	;# 
   409  0187                     	;# 
   410  0188                     	;# 
   411  0189                     	;# 
   412  018C                     	;# 
   413  018D                     	;# 
   414                           
   415                           	psect	idataCOMMON
   416  05B0                     __pidataCOMMON:	
   417                           
   418                           ;initializer for _mode
   419  05B0  3401               	retlw	1
   420                           
   421                           ;initializer for _submode
   422  05B1  3401               	retlw	1
   423                           
   424                           	psect	idataBANK0
   425  058F                     __pidataBANK0:	
   426                           
   427                           ;initializer for ___cgram
   428  058F  340C               	retlw	12
   429  0590  3412               	retlw	18
   430  0591  3412               	retlw	18
   431  0592  340C               	retlw	12
   432  0593  3400               	retlw	0
   433  0594  3400               	retlw	0
   434  0595  3400               	retlw	0
   435  0596  3400               	retlw	0
   436                           
   437                           ;initializer for LCDWriteInt@F1646
   438  0597  34F0               	retlw	240
   439  0598  34F0               	retlw	240
   440  0599  34F0               	retlw	240
   441  059A  34F0               	retlw	240
   442  059B  34F0               	retlw	240
   443                           
   444                           ;initializer for _pmsg
   445  059C  344A               	retlw	low (_msg| 0)
   446  001F                     _ADCON0bits	set	31
   447  001E                     _ADRESH	set	30
   448  0007                     _PORTC	set	7
   449  0018                     _CARRY	set	24
   450  005F                     _GIE	set	95
   451  0028                     _RA0	set	40
   452  0029                     _RA1	set	41
   453  002A                     _RA2	set	42
   454  002B                     _RA3	set	43
   455  002E                     _RA6	set	46
   456  002F                     _RA7	set	47
   457  0039                     _RC1	set	57
   458  003A                     _RC2	set	58
   459  003B                     _RC3	set	59
   460  009F                     _ADCON1bits	set	159
   461  009E                     _ADRESL	set	158
   462  0085                     _TRISAbits	set	133
   463  0086                     _TRISBbits	set	134
   464  0087                     _TRISC	set	135
   465  0087                     _TRISCbits	set	135
   466  010D                     _EEADR	set	269
   467  010C                     _EEDATA	set	268
   468  0189                     _ANSELHbits	set	393
   469  0188                     _ANSELbits	set	392
   470  018C                     _EECON1	set	396
   471  018D                     _EECON2	set	397
   472  0C60                     _RD	set	3168
   473  0C61                     _WR	set	3169
   474  0C62                     _WREN	set	3170
   475                           
   476                           	psect	strings
   477  0500                     __pstrings:	
   478  0500                     stringtab:	
   479  0500                     __stringtab:	
   480  0500                     stringcode:	
   481                           ;	String table - string pointers are 1 byte each
   482                           
   483  0500                     stringdir:	
   484  0500  3005               	movlw	high stringdir
   485  0501  008A               	movwf	10
   486  0502  0804               	movf	4,w
   487  0503  0A84               	incf	4,f
   488  0504  0782               	addwf	2,f
   489  0505                     __stringbase:	
   490  0505  3400               	retlw	0
   491  0506                     __end_of__stringtab:	
   492  0506                     STR_3:	
   493  0506  3449               	retlw	73	;'I'
   494  0507  3444               	retlw	68	;'D'
   495  0508  3431               	retlw	49	;'1'
   496  0509  343A               	retlw	58	;':'
   497  050A  3400               	retlw	0
   498  050B                     STR_4:	
   499  050B  3449               	retlw	73	;'I'
   500  050C  3444               	retlw	68	;'D'
   501  050D  3432               	retlw	50	;'2'
   502  050E  343A               	retlw	58	;':'
   503  050F  3400               	retlw	0
   504  0510                     STR_5:	
   505  0510  3449               	retlw	73	;'I'
   506  0511  3444               	retlw	68	;'D'
   507  0512  3433               	retlw	51	;'3'
   508  0513  343A               	retlw	58	;':'
   509  0514  3400               	retlw	0
   510  0515                     STR_6:	
   511  0515  3449               	retlw	73	;'I'
   512  0516  3444               	retlw	68	;'D'
   513  0517  3434               	retlw	52	;'4'
   514  0518  343A               	retlw	58	;':'
   515  0519  3400               	retlw	0
   516  051A                     STR_2:	
   517  051A  3452               	retlw	82	;'R'
   518  051B  3443               	retlw	67	;'C'
   519  051C  3456               	retlw	86	;'V'
   520  051D  343A               	retlw	58	;':'
   521  051E  3400               	retlw	0
   522  050A                     
   523                           ; #config settings
   524  0000                     
   525                           	psect	cinit
   526  0015                     start_initialization:	
   527  0015                     __initialization:	
   528                           
   529                           ; Clear objects allocated to BANK0
   530  0015  1383               	bcf	3,7	;select IRP bank0
   531  0016  3041               	movlw	low __pbssBANK0
   532  0017  0084               	movwf	4
   533  0018  3061               	movlw	low (__pbssBANK0+32)
   534  0019  120A  118A  25A8  120A  118A  	fcall	clear_ram0
   535                           
   536                           ; Initialize objects allocated to BANK0
   537  001E  306F               	movlw	low (__pdataBANK0+14)
   538  001F  00FD               	movwf	btemp+-1
   539  0020  3005               	movlw	high __pidataBANK0
   540  0021  00FE               	movwf	btemp
   541  0022  308F               	movlw	low __pidataBANK0
   542  0023  00FF               	movwf	btemp+1
   543  0024  3061               	movlw	low __pdataBANK0
   544  0025  0084               	movwf	4
   545  0026  120A  118A  2582  120A  118A  	fcall	init_ram0
   546                           
   547                           ; Initialize objects allocated to COMMON
   548  002B  120A  118A  25B0  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   549  0030  00F8               	movwf	__pdataCOMMON& (0+127)
   550  0031  120A  118A  25B1   	fcall	__pidataCOMMON+1	;fetch initializer
   551  0034  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   552  0035                     end_of_initialization:	
   553                           ;End of C runtime variable initialization code
   554                           
   555  0035                     __end_of__initialization:	
   556  0035  0183               	clrf	3
   557  0036  120A  118A  2839   	ljmp	_main	;jump to C main() function
   558                           
   559                           	psect	dataCOMMON
   560  0078                     __pdataCOMMON:	
   561  0078                     _mode:	
   562  0078                     	ds	1
   563  0079                     _submode:	
   564  0079                     	ds	1
   565                           
   566                           	psect	bssBANK0
   567  0041                     __pbssBANK0:	
   568  0041                     _g_menu:	
   569  0041                     	ds	9
   570  004A                     _msg:	
   571  004A                     	ds	23
   572                           
   573                           	psect	dataBANK0
   574  0061                     __pdataBANK0:	
   575  0061                     ___cgram:	
   576  0061                     	ds	8
   577  0069                     LCDWriteInt@F1646:	
   578  0069                     	ds	5
   579  006E                     _pmsg:	
   580  006E                     	ds	1
   581                           
   582                           	psect	clrtext
   583  05A8                     clear_ram0:	
   584                           ;	Called with FSR containing the base address, and
   585                           ;	W with the last address+1
   586                           
   587  05A8  0064               	clrwdt	;clear the watchdog before getting into this loop
   588  05A9                     clrloop0:	
   589  05A9  0180               	clrf	0	;clear RAM location pointed to by FSR
   590  05AA  0A84               	incf	4,f	;increment pointer
   591  05AB  0604               	xorwf	4,w	;XOR with final address
   592  05AC  1903               	btfsc	3,2	;have we reached the end yet?
   593  05AD  3400               	retlw	0	;all done for this memory range, return
   594  05AE  0604               	xorwf	4,w	;XOR again to restore value
   595  05AF  2DA9               	goto	clrloop0	;do the next byte
   596                           
   597                           	psect	inittext
   598  057E                     init_fetch0:	
   599                           ;	Called with low address in FSR and high address in W
   600                           
   601  057E  087E               	movf	126,w
   602  057F  008A               	movwf	10
   603  0580  087F               	movf	127,w
   604  0581  0082               	movwf	2
   605  0582                     init_ram0:	
   606                           ;Called with:
   607                           ;	high address of idata address in btemp 
   608                           ;	low address of idata address in btemp+1 
   609                           ;	low address of data in FSR
   610                           ;	high address + 1 of data in btemp-1
   611                           
   612  0582  257E  120A  118A   	fcall	init_fetch0
   613  0585  0080               	movwf	0
   614  0586  0A84               	incf	4,f
   615  0587  0804               	movf	4,w
   616  0588  067D               	xorwf	125,w
   617  0589  1903               	btfsc	3,2
   618  058A  3400               	retlw	0
   619  058B  0AFF               	incf	127,f
   620  058C  1903               	btfsc	3,2
   621  058D  0AFE               	incf	126,f
   622  058E  2D82               	goto	init_ram0
   623                           
   624                           	psect	cstackCOMMON
   625  0070                     __pcstackCOMMON:	
   626  0070                     ?_LCDInit:	
   627  0070                     ?_MenuInit:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_LCDWriteString:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_LCDBusyLoop:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_LoadMenuItem:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_eeprom_read:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_ADCInit:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_crc_verify:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_IOInit:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_ISR:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ??_ISR:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_main:	
   658                           ; 1 bytes @ 0x0
   659                           
   660                           
   661                           ; 1 bytes @ 0x0
   662  0070                     	ds	4
   663  0074                     ??_LCDBusyLoop:	
   664  0074                     ??_eeprom_read:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0074                     ??_ADCInit:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0074                     ??_IOInit:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     ?_crc_calculate:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     ?___awdiv:	
   677                           ; 2 bytes @ 0x4
   678                           
   679  0074                     ?___awmod:	
   680                           ; 2 bytes @ 0x4
   681                           
   682  0074                     ___awdiv@divisor:	
   683                           ; 2 bytes @ 0x4
   684                           
   685  0074                     ___awmod@divisor:	
   686                           ; 2 bytes @ 0x4
   687                           
   688                           
   689                           ; 2 bytes @ 0x4
   690  0074                     	ds	1
   691  0075                     eeprom_read@addr:	
   692                           
   693                           ; 1 bytes @ 0x5
   694  0075                     	ds	1
   695  0076                     ?_LCDByte:	
   696  0076                     ??_LoadMenuItem:	
   697                           ; 1 bytes @ 0x6
   698                           
   699  0076                     ??_crc_verify:	
   700                           ; 1 bytes @ 0x6
   701                           
   702  0076                     LCDByte@isdata:	
   703                           ; 1 bytes @ 0x6
   704                           
   705  0076                     ___awdiv@dividend:	
   706                           ; 1 bytes @ 0x6
   707                           
   708  0076                     ___awmod@dividend:	
   709                           ; 2 bytes @ 0x6
   710                           
   711                           
   712                           ; 2 bytes @ 0x6
   713  0076                     	ds	1
   714  0077                     ??_LCDGotoXY:	
   715  0077                     ??_LCDWriteString:	
   716                           ; 1 bytes @ 0x7
   717                           
   718                           
   719                           ; 1 bytes @ 0x7
   720  0077                     	ds	1
   721                           
   722                           	psect	cstackBANK0
   723  0020                     __pcstackBANK0:	
   724  0020                     ??_crc_calculate:	
   725  0020                     ??___awdiv:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0020                     ??___awmod:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0020                     LCDBusyLoop@busy:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0020                     LoadMenuItem@item:	
   735                           ; 1 bytes @ 0x0
   736                           
   737                           
   738                           ; 1 bytes @ 0x0
   739  0020                     	ds	1
   740  0021                     ??_MenuInit:	
   741  0021                     LCDBusyLoop@temp:	
   742                           ; 1 bytes @ 0x1
   743                           
   744  0021                     ___awdiv@counter:	
   745                           ; 1 bytes @ 0x1
   746                           
   747  0021                     ___awmod@counter:	
   748                           ; 1 bytes @ 0x1
   749                           
   750                           
   751                           ; 1 bytes @ 0x1
   752  0021                     	ds	1
   753  0022                     LCDBusyLoop@status:	
   754  0022                     ___awdiv@sign:	
   755                           ; 1 bytes @ 0x2
   756                           
   757  0022                     ___awmod@sign:	
   758                           ; 1 bytes @ 0x2
   759                           
   760                           
   761                           ; 1 bytes @ 0x2
   762  0022                     	ds	1
   763  0023                     ??_LCDByte:	
   764  0023                     crc_calculate@crc:	
   765                           ; 1 bytes @ 0x3
   766                           
   767  0023                     ___awdiv@quotient:	
   768                           ; 2 bytes @ 0x3
   769                           
   770                           
   771                           ; 2 bytes @ 0x3
   772  0023                     	ds	2
   773  0025                     crc_calculate@i:	
   774  0025                     LCDByte@hn:	
   775                           ; 1 bytes @ 0x5
   776                           
   777                           
   778                           ; 1 bytes @ 0x5
   779  0025                     	ds	1
   780  0026                     crc_calculate@pmsg:	
   781  0026                     LCDByte@ln:	
   782                           ; 1 bytes @ 0x6
   783                           
   784                           
   785                           ; 1 bytes @ 0x6
   786  0026                     	ds	1
   787  0027                     crc_verify@pmsg:	
   788  0027                     LCDByte@c:	
   789                           ; 1 bytes @ 0x7
   790                           
   791                           
   792                           ; 1 bytes @ 0x7
   793  0027                     	ds	1
   794  0028                     LCDByte@temp:	
   795                           
   796                           ; 1 bytes @ 0x8
   797  0028                     	ds	1
   798  0029                     ??_LCDInit:	
   799  0029                     ?_LCDGotoXY:	
   800                           ; 1 bytes @ 0x9
   801                           
   802  0029                     ?_LCDWriteInt:	
   803                           ; 1 bytes @ 0x9
   804                           
   805  0029                     LCDWriteString@count:	
   806                           ; 1 bytes @ 0x9
   807                           
   808  0029                     LCDGotoXY@y:	
   809                           ; 1 bytes @ 0x9
   810                           
   811  0029                     LCDWriteInt@val:	
   812                           ; 1 bytes @ 0x9
   813                           
   814                           
   815                           ; 2 bytes @ 0x9
   816  0029                     	ds	1
   817  002A                     LCDWriteString@cc:	
   818  002A                     LCDGotoXY@x:	
   819                           ; 1 bytes @ 0xA
   820                           
   821                           
   822                           ; 1 bytes @ 0xA
   823  002A                     	ds	1
   824  002B                     LCDInit@style:	
   825  002B                     LCDWriteString@msg:	
   826                           ; 1 bytes @ 0xB
   827                           
   828  002B                     LCDWriteInt@field_length:	
   829                           ; 1 bytes @ 0xB
   830                           
   831                           
   832                           ; 1 bytes @ 0xB
   833  002B                     	ds	1
   834  002C                     ??_LCDWriteInt:	
   835  002C                     LCDInit@__i:	
   836                           ; 1 bytes @ 0xC
   837                           
   838                           
   839                           ; 1 bytes @ 0xC
   840  002C                     	ds	2
   841  002E                     LCDWriteInt@str:	
   842                           
   843                           ; 5 bytes @ 0xE
   844  002E                     	ds	5
   845  0033                     LCDWriteInt@j:	
   846                           
   847                           ; 2 bytes @ 0x13
   848  0033                     	ds	2
   849  0035                     LCDWriteInt@i:	
   850                           
   851                           ; 2 bytes @ 0x15
   852  0035                     	ds	2
   853  0037                     ??_main:	
   854                           
   855                           ; 1 bytes @ 0x17
   856  0037                     	ds	3
   857  003A                     main@revc:	
   858                           
   859                           ; 1 bytes @ 0x1A
   860  003A                     	ds	1
   861  003B                     main@count_374:	
   862                           
   863                           ; 1 bytes @ 0x1B
   864  003B                     	ds	1
   865  003C                     main@smsg:	
   866                           
   867                           ; 1 bytes @ 0x1C
   868  003C                     	ds	1
   869  003D                     main@i:	
   870                           
   871                           ; 1 bytes @ 0x1D
   872  003D                     	ds	1
   873  003E                     main@count:	
   874                           
   875                           ; 1 bytes @ 0x1E
   876  003E                     	ds	1
   877  003F                     main@low:	
   878                           
   879                           ; 1 bytes @ 0x1F
   880  003F                     	ds	1
   881  0040                     main@byte:	
   882                           
   883                           ; 1 bytes @ 0x20
   884  0040                     	ds	1
   885                           
   886                           	psect	maintext
   887  0039                     __pmaintext:	
   888 ;;
   889 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   890 ;;
   891 ;; *************** function _main *****************
   892 ;; Defined at:
   893 ;;		line 161 in file "do_am.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  byte            1   32[BANK0 ] PTR struct .
   898 ;;		 -> msg(23), 
   899 ;;  i               1   29[BANK0 ] char 
   900 ;;  count           1   27[BANK0 ] char 
   901 ;;  low             1   31[BANK0 ] unsigned char 
   902 ;;  count           1   30[BANK0 ] unsigned char 
   903 ;;  smsg            1   28[BANK0 ] PTR unsigned char 
   904 ;;		 -> msg(23), 
   905 ;;  revc            1   26[BANK0 ] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : B00/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         0       7       0       0       0
   917 ;;      Temps:          0       3       0       0       0
   918 ;;      Totals:         0      10       0       0       0
   919 ;;Total ram usage:       10 bytes
   920 ;; Hardware stack levels required when called:    4
   921 ;; This function calls:
   922 ;;		_ADCInit
   923 ;;		_IOInit
   924 ;;		_LCDByte
   925 ;;		_LCDGotoXY
   926 ;;		_LCDInit
   927 ;;		_LCDWriteInt
   928 ;;		_LCDWriteString
   929 ;;		_MenuInit
   930 ;;		_crc_verify
   931 ;; This function is called by:
   932 ;;		Startup code after reset
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _main
   938  0039                     _main:	
   939                           
   940                           ;do_am.c: 164: LCDInit(0B00000000);
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   944  0039  3000               	movlw	0
   945  003A  120A  118A  228F  120A  118A  	fcall	_LCDInit
   946                           
   947                           ;do_am.c: 167: ADCInit();
   948  003F  120A  118A  2557  120A  118A  	fcall	_ADCInit
   949                           
   950                           ;do_am.c: 170: IOInit();
   951  0044  120A  118A  244D  120A  118A  	fcall	_IOInit
   952                           
   953                           ;do_am.c: 172: MenuInit();
   954  0049  120A  118A  2493  120A  118A  	fcall	_MenuInit
   955                           
   956                           ;do_am.c: 178: (LCDByte(0b00000001,0));
   957  004E  01F6               	clrf	LCDByte@isdata
   958  004F  3001               	movlw	1
   959  0050  120A  118A  23A9  120A  118A  	fcall	_LCDByte
   960                           
   961                           ;do_am.c: 180: uint8_t revc = 0;
   962  0055  1283               	bcf	3,5	;RP0=0, select bank0
   963  0056  1303               	bcf	3,6	;RP1=0, select bank0
   964  0057  01BA               	clrf	main@revc
   965  0058                     l2125:	
   966                           ;do_am.c: 181: while(1)
   967                           
   968                           
   969                           ;do_am.c: 182: {
   970                           ;do_am.c: 186: {uint8_t *smsg = (uint8_t *)&msg; { uint8_t count = 0; uint8_t low = 1; w
      +                          hile(1) { if(RA6 == 0) { { BITbits_t *byte = (BITbits_t *)&smsg[count]; if(low == 1) { b
      +                          yte->B0 = RA0; byte->B1 = RA1; byte->B2 = RA2; byte->B3 = RA3; } else { byte->B4 = RA0; 
      +                          b
   971  0058  304A               	movlw	(low (_msg| 0))& (0+255)
   972  0059  1283               	bcf	3,5	;RP0=0, select bank0
   973  005A  1303               	bcf	3,6	;RP1=0, select bank0
   974  005B  00B7               	movwf	??_main
   975  005C  0837               	movf	??_main,w
   976  005D  00BC               	movwf	main@smsg
   977  005E  01BE               	clrf	main@count
   978  005F  01BF               	clrf	main@low
   979  0060  0ABF               	incf	main@low,f
   980  0061                     l2131:	
   981  0061  1B05               	btfsc	5,6	;volatile
   982  0062  2861               	goto	l2131
   983  0063  083E               	movf	main@count,w
   984  0064  073C               	addwf	main@smsg,w
   985  0065  00B7               	movwf	??_main
   986  0066  0837               	movf	??_main,w
   987  0067  00C0               	movwf	main@byte
   988  0068  033F               	decf	main@low,w
   989  0069  1D03               	btfss	3,2
   990  006A  288A               	goto	l2137
   991  006B  0840               	movf	main@byte,w
   992  006C  0084               	movwf	4
   993  006D  1383               	bcf	3,7	;select IRP bank0
   994  006E  1000               	bcf	0,0
   995  006F  1805               	btfsc	5,0	;volatile
   996  0070  1400               	bsf	0,0
   997  0071  1283               	bcf	3,5	;RP0=0, select bank0
   998  0072  1303               	bcf	3,6	;RP1=0, select bank0
   999  0073  0840               	movf	main@byte,w
  1000  0074  0084               	movwf	4
  1001  0075  1383               	bcf	3,7	;select IRP bank0
  1002  0076  1080               	bcf	0,1
  1003  0077  1885               	btfsc	5,1	;volatile
  1004  0078  1480               	bsf	0,1
  1005  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1006  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1007  007B  0840               	movf	main@byte,w
  1008  007C  0084               	movwf	4
  1009  007D  1383               	bcf	3,7	;select IRP bank0
  1010  007E  1100               	bcf	0,2
  1011  007F  1905               	btfsc	5,2	;volatile
  1012  0080  1500               	bsf	0,2
  1013  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0083  0840               	movf	main@byte,w
  1016  0084  0084               	movwf	4
  1017  0085  1383               	bcf	3,7	;select IRP bank0
  1018  0086  1180               	bcf	0,3
  1019  0087  1985               	btfsc	5,3	;volatile
  1020  0088  1580               	bsf	0,3
  1021  0089  28AA               	goto	l2139
  1022  008A                     l2137:	
  1023  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1024  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1025  008C  0840               	movf	main@byte,w
  1026  008D  0084               	movwf	4
  1027  008E  1383               	bcf	3,7	;select IRP bank0
  1028  008F  1200               	bcf	0,4
  1029  0090  1805               	btfsc	5,0	;volatile
  1030  0091  1600               	bsf	0,4
  1031  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0094  0840               	movf	main@byte,w
  1034  0095  0084               	movwf	4
  1035  0096  1383               	bcf	3,7	;select IRP bank0
  1036  0097  1280               	bcf	0,5
  1037  0098  1885               	btfsc	5,1	;volatile
  1038  0099  1680               	bsf	0,5
  1039  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1040  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1041  009C  0840               	movf	main@byte,w
  1042  009D  0084               	movwf	4
  1043  009E  1383               	bcf	3,7	;select IRP bank0
  1044  009F  1300               	bcf	0,6
  1045  00A0  1905               	btfsc	5,2	;volatile
  1046  00A1  1700               	bsf	0,6
  1047  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1048  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1049  00A4  0840               	movf	main@byte,w
  1050  00A5  0084               	movwf	4
  1051  00A6  1383               	bcf	3,7	;select IRP bank0
  1052  00A7  1380               	bcf	0,7
  1053  00A8  1985               	btfsc	5,3	;volatile
  1054  00A9  1780               	bsf	0,7
  1055  00AA                     l2139:	
  1056  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1057  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1058  00AC  033F               	decf	main@low,w
  1059  00AD  1903               	btfsc	3,2
  1060  00AE  28B1               	goto	u1950
  1061  00AF  3001               	movlw	1
  1062  00B0  28B2               	goto	u1960
  1063  00B1                     u1950:	
  1064  00B1  3000               	movlw	0
  1065  00B2                     u1960:	
  1066  00B2  00B7               	movwf	??_main
  1067  00B3  0837               	movf	??_main,w
  1068  00B4  00BF               	movwf	main@low
  1069  00B5  033F               	decf	main@low,w
  1070  00B6  1D03               	btfss	3,2
  1071  00B7  2861               	goto	l2131
  1072  00B8  3001               	movlw	1
  1073  00B9  00B7               	movwf	??_main
  1074  00BA  0837               	movf	??_main,w
  1075  00BB  07BE               	addwf	main@count,f
  1076  00BC  083C               	movf	main@smsg,w
  1077  00BD  0084               	movwf	4
  1078  00BE  1383               	bcf	3,7	;select IRP bank0
  1079  00BF  0800               	movf	0,w
  1080  00C0  063E               	xorwf	main@count,w
  1081  00C1  1D03               	skipz
  1082  00C2  2861               	goto	l2131
  1083                           
  1084                           ;do_am.c: 187: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString(""); for(int8_t i = coun
      +                          t + 0; i < 16; i++) { (LCDByte(' ',1)); } };}; {{ LCDGotoXY(0,1); LCDWriteString("RCV:")
      +                          ;};}; {LCDWriteInt(crc_verify(pmsg), 3);};
  1085  00C3  01A9               	clrf	LCDGotoXY@y
  1086  00C4  0AA9               	incf	LCDGotoXY@y,f
  1087  00C5  3000               	movlw	0
  1088  00C6  120A  118A  24D1  120A  118A  	fcall	_LCDGotoXY
  1089  00CB  3005               	movlw	(low (((STR_3+4)-__stringbase)| (0+32768)))& (0+255)
  1090  00CC  120A  118A  22F3  120A  118A  	fcall	_LCDWriteString
  1091  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1092  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1093  00D3  00B7               	movwf	??_main
  1094  00D4  0837               	movf	??_main,w
  1095  00D5  00BB               	movwf	main@count_374
  1096  00D6  083B               	movf	main@count_374,w
  1097  00D7  00B7               	movwf	??_main
  1098  00D8  0837               	movf	??_main,w
  1099  00D9  00BD               	movwf	main@i
  1100  00DA  083D               	movf	main@i,w
  1101  00DB  3A80               	xorlw	128
  1102  00DC  3E70               	addlw	-144
  1103  00DD  1803               	btfsc	3,0
  1104  00DE  28F2               	goto	l2165
  1105  00DF                     l2159:	
  1106  00DF  01F6               	clrf	LCDByte@isdata
  1107  00E0  0AF6               	incf	LCDByte@isdata,f
  1108  00E1  3020               	movlw	32
  1109  00E2  120A  118A  23A9  120A  118A  	fcall	_LCDByte
  1110  00E7  3001               	movlw	1
  1111  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1112  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1113  00EA  00B7               	movwf	??_main
  1114  00EB  0837               	movf	??_main,w
  1115  00EC  07BD               	addwf	main@i,f
  1116  00ED  083D               	movf	main@i,w
  1117  00EE  3A80               	xorlw	128
  1118  00EF  3E70               	addlw	-144
  1119  00F0  1C03               	skipc
  1120  00F1  28DF               	goto	l2159
  1121  00F2                     l2165:	
  1122  00F2  01A9               	clrf	LCDGotoXY@y
  1123  00F3  0AA9               	incf	LCDGotoXY@y,f
  1124  00F4  3000               	movlw	0
  1125  00F5  120A  118A  24D1  120A  118A  	fcall	_LCDGotoXY
  1126  00FA  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1127  00FB  120A  118A  22F3  120A  118A  	fcall	_LCDWriteString
  1128  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0102  086E               	movf	_pmsg,w
  1131  0103  120A  118A  251F  120A  118A  	fcall	_crc_verify
  1132  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1134  010A  00B7               	movwf	??_main
  1135  010B  01B8               	clrf	??_main+1
  1136  010C  0837               	movf	??_main,w
  1137  010D  00A9               	movwf	LCDWriteInt@val
  1138  010E  0838               	movf	??_main+1,w
  1139  010F  00AA               	movwf	LCDWriteInt@val+1
  1140  0110  3003               	movlw	3
  1141  0111  00B9               	movwf	??_main+2
  1142  0112  0839               	movf	??_main+2,w
  1143  0113  00AB               	movwf	LCDWriteInt@field_length
  1144  0114  120A  118A  211A  120A  118A  	fcall	_LCDWriteInt
  1145  0119  2858               	goto	l2125
  1146  011A                     __end_of_main:	
  1147                           
  1148                           	psect	text1
  1149  051F                     __ptext1:	
  1150 ;; *************** function _crc_verify *****************
  1151 ;; Defined at:
  1152 ;;		line 56 in file "msg.h"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  pmsg            1    wreg     PTR struct .
  1155 ;;		 -> msg(23), 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  pmsg            1    7[BANK0 ] PTR struct .
  1158 ;;		 -> msg(23), 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      unsigned char 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       1       0       0       0
  1170 ;;      Temps:          2       0       0       0       0
  1171 ;;      Totals:         2       1       0       0       0
  1172 ;;Total ram usage:        3 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    2
  1175 ;; This function calls:
  1176 ;;		_crc_calculate
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _crc_verify
  1184  051F                     _crc_verify:	
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _crc_verify: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1188                           ;crc_verify@pmsg stored from wreg
  1189  051F  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0520  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0521  00A7               	movwf	crc_verify@pmsg
  1192                           
  1193                           ;msg.h: 58: return ((crc_calculate(pmsg) == pmsg->crc) ? 1 : 0);
  1194  0522  0A27               	incf	crc_verify@pmsg,w
  1195  0523  0084               	movwf	4
  1196  0524  1383               	bcf	3,7	;select IRP bank0
  1197  0525  0800               	movf	0,w
  1198  0526  00F6               	movwf	??_crc_verify
  1199  0527  0A84               	incf	4,f
  1200  0528  0800               	movf	0,w
  1201  0529  00F7               	movwf	??_crc_verify+1
  1202  052A  0827               	movf	crc_verify@pmsg,w
  1203  052B  120A  118A  21B9  120A  118A  	fcall	_crc_calculate
  1204  0530  0877               	movf	??_crc_verify+1,w
  1205  0531  0675               	xorwf	?_crc_calculate+1,w
  1206  0532  1D03               	skipz
  1207  0533  2D36               	goto	u1705
  1208  0534  0876               	movf	??_crc_verify,w
  1209  0535  0674               	xorwf	?_crc_calculate,w
  1210  0536                     u1705:	
  1211  0536  1D03               	btfss	3,2
  1212  0537  2D3A               	goto	u1700
  1213  0538  3001               	movlw	1
  1214  0539  0008               	return
  1215  053A                     u1700:	
  1216  053A  3000               	movlw	0
  1217  053B  0008               	return
  1218  053C                     __end_of_crc_verify:	
  1219                           
  1220                           	psect	text2
  1221  01B9                     __ptext2:	
  1222 ;; *************** function _crc_calculate *****************
  1223 ;; Defined at:
  1224 ;;		line 40 in file "msg.h"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  pmsg            1    wreg     PTR struct .
  1227 ;;		 -> msg(23), 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  pmsg            1    6[BANK0 ] PTR struct .
  1230 ;;		 -> msg(23), 
  1231 ;;  i               1    5[BANK0 ] unsigned char 
  1232 ;;  crc             2    3[BANK0 ] unsigned int 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  2    4[COMMON] unsigned int 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         2       0       0       0       0
  1243 ;;      Locals:         0       4       0       0       0
  1244 ;;      Temps:          0       3       0       0       0
  1245 ;;      Totals:         2       7       0       0       0
  1246 ;;Total ram usage:        9 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_crc_verify
  1253 ;;		_compose
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _crc_calculate
  1259  01B9                     _crc_calculate:	
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in _crc_calculate: [wreg-fsr0h+status,2+status,0]
  1263                           ;crc_calculate@pmsg stored from wreg
  1264  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1265  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1266  01BB  00A6               	movwf	crc_calculate@pmsg
  1267                           
  1268                           ;msg.h: 42: uint16_t crc;
  1269                           ;msg.h: 43: crc = (uint8_t)pmsg->msglen;
  1270  01BC  0826               	movf	crc_calculate@pmsg,w
  1271  01BD  0084               	movwf	4
  1272  01BE  1383               	bcf	3,7	;select IRP bank0
  1273  01BF  0800               	movf	0,w
  1274  01C0  00A0               	movwf	??_crc_calculate
  1275  01C1  01A1               	clrf	??_crc_calculate+1
  1276  01C2  0820               	movf	??_crc_calculate,w
  1277  01C3  00A3               	movwf	crc_calculate@crc
  1278  01C4  0821               	movf	??_crc_calculate+1,w
  1279  01C5  00A4               	movwf	crc_calculate@crc+1
  1280                           
  1281                           ;msg.h: 44: crc += (uint8_t)pmsg->from;
  1282  01C6  0826               	movf	crc_calculate@pmsg,w
  1283  01C7  3E03               	addlw	3
  1284  01C8  0084               	movwf	4
  1285  01C9  0800               	movf	0,w
  1286  01CA  00A0               	movwf	??_crc_calculate
  1287  01CB  01A1               	clrf	??_crc_calculate+1
  1288  01CC  0820               	movf	??_crc_calculate,w
  1289  01CD  07A3               	addwf	crc_calculate@crc,f
  1290  01CE  1803               	skipnc
  1291  01CF  0AA4               	incf	crc_calculate@crc+1,f
  1292  01D0  0821               	movf	??_crc_calculate+1,w
  1293  01D1  07A4               	addwf	crc_calculate@crc+1,f
  1294                           
  1295                           ;msg.h: 45: crc += (uint8_t)pmsg->to;
  1296  01D2  0826               	movf	crc_calculate@pmsg,w
  1297  01D3  3E04               	addlw	4
  1298  01D4  0084               	movwf	4
  1299  01D5  0800               	movf	0,w
  1300  01D6  00A0               	movwf	??_crc_calculate
  1301  01D7  01A1               	clrf	??_crc_calculate+1
  1302  01D8  0820               	movf	??_crc_calculate,w
  1303  01D9  07A3               	addwf	crc_calculate@crc,f
  1304  01DA  1803               	skipnc
  1305  01DB  0AA4               	incf	crc_calculate@crc+1,f
  1306  01DC  0821               	movf	??_crc_calculate+1,w
  1307  01DD  07A4               	addwf	crc_calculate@crc+1,f
  1308                           
  1309                           ;msg.h: 46: crc += (uint8_t)pmsg->msgid;
  1310  01DE  0826               	movf	crc_calculate@pmsg,w
  1311  01DF  3E05               	addlw	5
  1312  01E0  0084               	movwf	4
  1313  01E1  0800               	movf	0,w
  1314  01E2  00A0               	movwf	??_crc_calculate
  1315  01E3  01A1               	clrf	??_crc_calculate+1
  1316  01E4  0820               	movf	??_crc_calculate,w
  1317  01E5  07A3               	addwf	crc_calculate@crc,f
  1318  01E6  1803               	skipnc
  1319  01E7  0AA4               	incf	crc_calculate@crc+1,f
  1320  01E8  0821               	movf	??_crc_calculate+1,w
  1321  01E9  07A4               	addwf	crc_calculate@crc+1,f
  1322                           
  1323                           ;msg.h: 47: crc += (uint8_t)pmsg->cmd;
  1324  01EA  0826               	movf	crc_calculate@pmsg,w
  1325  01EB  3E06               	addlw	6
  1326  01EC  0084               	movwf	4
  1327  01ED  0800               	movf	0,w
  1328  01EE  00A0               	movwf	??_crc_calculate
  1329  01EF  01A1               	clrf	??_crc_calculate+1
  1330  01F0  0820               	movf	??_crc_calculate,w
  1331  01F1  07A3               	addwf	crc_calculate@crc,f
  1332  01F2  1803               	skipnc
  1333  01F3  0AA4               	incf	crc_calculate@crc+1,f
  1334  01F4  0821               	movf	??_crc_calculate+1,w
  1335  01F5  07A4               	addwf	crc_calculate@crc+1,f
  1336                           
  1337                           ;msg.h: 49: for(uint8_t i = 0; i < pmsg->msglen - 7; i++)
  1338  01F6  01A5               	clrf	crc_calculate@i
  1339  01F7                     l1823:	
  1340  01F7  0826               	movf	crc_calculate@pmsg,w
  1341  01F8  0084               	movwf	4
  1342  01F9  0800               	movf	0,w
  1343  01FA  3EF9               	addlw	249
  1344  01FB  00A0               	movwf	??_crc_calculate
  1345  01FC  30FF               	movlw	255
  1346  01FD  1803               	skipnc
  1347  01FE  3000               	movlw	0
  1348  01FF  00A1               	movwf	??_crc_calculate+1
  1349  0200  0821               	movf	??_crc_calculate+1,w
  1350  0201  3A80               	xorlw	128
  1351  0202  3C80               	sublw	128
  1352  0203  1D03               	skipz
  1353  0204  2A07               	goto	u1465
  1354  0205  0820               	movf	??_crc_calculate,w
  1355  0206  0225               	subwf	crc_calculate@i,w
  1356  0207                     u1465:	
  1357  0207  1803               	btfsc	3,0
  1358  0208  2A20               	goto	l1825
  1359                           
  1360                           ;msg.h: 50: {
  1361                           ;msg.h: 51: crc += (uint8_t)pmsg->data[i];
  1362  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1363  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1364  020B  0825               	movf	crc_calculate@i,w
  1365  020C  3E07               	addlw	7
  1366  020D  0726               	addwf	crc_calculate@pmsg,w
  1367  020E  00A0               	movwf	??_crc_calculate
  1368  020F  0820               	movf	??_crc_calculate,w
  1369  0210  0084               	movwf	4
  1370  0211  1383               	bcf	3,7	;select IRP bank0
  1371  0212  0800               	movf	0,w
  1372  0213  00A1               	movwf	??_crc_calculate+1
  1373  0214  01A2               	clrf	??_crc_calculate+2
  1374  0215  0821               	movf	??_crc_calculate+1,w
  1375  0216  07A3               	addwf	crc_calculate@crc,f
  1376  0217  1803               	skipnc
  1377  0218  0AA4               	incf	crc_calculate@crc+1,f
  1378  0219  0822               	movf	??_crc_calculate+2,w
  1379  021A  07A4               	addwf	crc_calculate@crc+1,f
  1380  021B  3001               	movlw	1
  1381  021C  00A0               	movwf	??_crc_calculate
  1382  021D  0820               	movf	??_crc_calculate,w
  1383  021E  07A5               	addwf	crc_calculate@i,f
  1384  021F  29F7               	goto	l1823
  1385  0220                     l1825:	
  1386                           
  1387                           ;msg.h: 52: }
  1388                           ;msg.h: 54: return crc;
  1389  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0222  0824               	movf	crc_calculate@crc+1,w
  1392  0223  00F5               	movwf	?_crc_calculate+1
  1393  0224  0823               	movf	crc_calculate@crc,w
  1394  0225  00F4               	movwf	?_crc_calculate
  1395  0226  0008               	return
  1396  0227                     __end_of_crc_calculate:	
  1397                           
  1398                           	psect	text3
  1399  0493                     __ptext3:	
  1400 ;; *************** function _MenuInit *****************
  1401 ;; Defined at:
  1402 ;;		line 7 in file "menu.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0
  1418 ;;      Temps:          0       1       0       0       0
  1419 ;;      Totals:         0       1       0       0       0
  1420 ;;Total ram usage:        1 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    3
  1423 ;; This function calls:
  1424 ;;		_LoadMenuItem
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _MenuInit
  1432  0493                     _MenuInit:	
  1433                           
  1434                           ;menu.c: 9: g_menu.items[0].name = "ID1:";
  1435                           
  1436                           ;incstack = 0
  1437                           ; Regs used in _MenuInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1438  0493  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1439  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1441  0496  00A1               	movwf	??_MenuInit
  1442  0497  0821               	movf	??_MenuInit,w
  1443  0498  00C2               	movwf	low ((_g_menu| 0+1))
  1444                           
  1445                           ;menu.c: 10: g_menu.items[0].value = LoadMenuItem(0);
  1446  0499  3000               	movlw	0
  1447  049A  120A  118A  256B  120A  118A  	fcall	_LoadMenuItem
  1448  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1449  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1450  04A1  00A1               	movwf	??_MenuInit
  1451  04A2  0821               	movf	??_MenuInit,w
  1452  04A3  00C1               	movwf	_g_menu
  1453                           
  1454                           ;menu.c: 12: g_menu.items[1].name = "ID2:";
  1455  04A4  3006               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1456  04A5  00A1               	movwf	??_MenuInit
  1457  04A6  0821               	movf	??_MenuInit,w
  1458  04A7  00C4               	movwf	low ((_g_menu| 0+3))
  1459                           
  1460                           ;menu.c: 13: g_menu.items[1].value = LoadMenuItem(1);
  1461  04A8  3001               	movlw	1
  1462  04A9  120A  118A  256B  120A  118A  	fcall	_LoadMenuItem
  1463  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1464  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1465  04B0  00A1               	movwf	??_MenuInit
  1466  04B1  0821               	movf	??_MenuInit,w
  1467  04B2  00C3               	movwf	_g_menu+2
  1468                           
  1469                           ;menu.c: 15: g_menu.items[2].name = "ID3:";
  1470  04B3  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1471  04B4  00A1               	movwf	??_MenuInit
  1472  04B5  0821               	movf	??_MenuInit,w
  1473  04B6  00C6               	movwf	low ((_g_menu| 0+5))
  1474                           
  1475                           ;menu.c: 16: g_menu.items[2].value = LoadMenuItem(2);
  1476  04B7  3002               	movlw	2
  1477  04B8  120A  118A  256B  120A  118A  	fcall	_LoadMenuItem
  1478  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1479  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1480  04BF  00A1               	movwf	??_MenuInit
  1481  04C0  0821               	movf	??_MenuInit,w
  1482  04C1  00C5               	movwf	_g_menu+4
  1483                           
  1484                           ;menu.c: 18: g_menu.items[3].name = "ID4:";
  1485  04C2  3010               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1486  04C3  00A1               	movwf	??_MenuInit
  1487  04C4  0821               	movf	??_MenuInit,w
  1488  04C5  00C8               	movwf	low ((_g_menu| 0+7))
  1489                           
  1490                           ;menu.c: 19: g_menu.items[3].value = LoadMenuItem(3);
  1491  04C6  3003               	movlw	3
  1492  04C7  120A  118A  256B   	fcall	_LoadMenuItem
  1493  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1494  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1495  04CC  00A1               	movwf	??_MenuInit
  1496  04CD  0821               	movf	??_MenuInit,w
  1497  04CE  00C7               	movwf	_g_menu+6
  1498                           
  1499                           ;menu.c: 21: g_menu.index = 0;
  1500  04CF  01C9               	clrf	_g_menu+8
  1501  04D0  0008               	return
  1502  04D1                     __end_of_MenuInit:	
  1503                           
  1504                           	psect	text4
  1505  056B                     __ptext4:	
  1506 ;; *************** function _LoadMenuItem *****************
  1507 ;; Defined at:
  1508 ;;		line 36 in file "menu.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  item            1    wreg     unsigned char 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  item            1    0[BANK0 ] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      unsigned char 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       0       0       0       0
  1523 ;;      Locals:         0       1       0       0       0
  1524 ;;      Temps:          2       0       0       0       0
  1525 ;;      Totals:         2       1       0       0       0
  1526 ;;Total ram usage:        3 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    2
  1529 ;; This function calls:
  1530 ;;		_eeprom_read
  1531 ;; This function is called by:
  1532 ;;		_MenuInit
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function _LoadMenuItem
  1538  056B                     _LoadMenuItem:	
  1539                           
  1540                           ;incstack = 0
  1541                           ; Regs used in _LoadMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1542                           ;LoadMenuItem@item stored from wreg
  1543  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1544  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1545  056D  00A0               	movwf	LoadMenuItem@item
  1546                           
  1547                           ;menu.c: 38: g_menu.items[item].value = eeprom_read(item);
  1548  056E  0820               	movf	LoadMenuItem@item,w
  1549  056F  120A  118A  253C   	fcall	_eeprom_read
  1550  0572  00F6               	movwf	??_LoadMenuItem
  1551  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0575  0820               	movf	LoadMenuItem@item,w
  1554  0576  00F7               	movwf	??_LoadMenuItem+1
  1555  0577  0777               	addwf	??_LoadMenuItem+1,w
  1556  0578  3E41               	addlw	(low (_g_menu| 0))& (0+255)
  1557  0579  0084               	movwf	4
  1558  057A  0876               	movf	??_LoadMenuItem,w
  1559  057B  1383               	bcf	3,7	;select IRP bank0
  1560  057C  0080               	movwf	0
  1561  057D  0008               	return
  1562  057E                     __end_of_LoadMenuItem:	
  1563                           
  1564                           	psect	text5
  1565  053C                     __ptext5:	
  1566 ;; *************** function _eeprom_read *****************
  1567 ;; Defined at:
  1568 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  addr            1    wreg     unsigned char 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  addr            1    5[COMMON] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      unsigned char 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         0       0       0       0       0
  1583 ;;      Locals:         1       0       0       0       0
  1584 ;;      Temps:          1       0       0       0       0
  1585 ;;      Totals:         2       0       0       0       0
  1586 ;;Total ram usage:        2 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_LoadMenuItem
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _eeprom_read
  1598  053C                     _eeprom_read:	
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  1602                           ;eeprom_read@addr stored from wreg
  1603  053C  00F5               	movwf	eeprom_read@addr
  1604  053D                     l243:	
  1605  053D  0064               	clrwdt	;# 
  1606  053E  1683               	bsf	3,5	;RP0=1, select bank3
  1607  053F  1703               	bsf	3,6	;RP1=1, select bank3
  1608  0540  188C               	btfsc	12,1	;volsfr
  1609  0541  2D3D               	goto	l243
  1610  0542  0875               	movf	eeprom_read@addr,w
  1611  0543  1283               	bcf	3,5	;RP0=0, select bank2
  1612  0544  1703               	bsf	3,6	;RP1=1, select bank2
  1613  0545  008D               	movwf	13	;volatile
  1614  0546  303F               	movlw	63
  1615  0547  00F4               	movwf	??_eeprom_read
  1616  0548  0874               	movf	??_eeprom_read,w
  1617  0549  1683               	bsf	3,5	;RP0=1, select bank3
  1618  054A  1703               	bsf	3,6	;RP1=1, select bank3
  1619  054B  058C               	andwf	12,f	;volsfr
  1620  054C  140C               	bsf	12,0	;volsfr
  1621  054D  1003               	clrc
  1622  054E  180C               	btfsc	12,0	;volsfr
  1623  054F  1403               	setc
  1624  0550  3000               	movlw	0
  1625  0551  1803               	skipnc
  1626  0552  3001               	movlw	1
  1627  0553  1283               	bcf	3,5	;RP0=0, select bank2
  1628  0554  1703               	bsf	3,6	;RP1=1, select bank2
  1629  0555  080C               	movf	12,w	;volatile
  1630  0556  0008               	return
  1631  0557                     __end_of_eeprom_read:	
  1632                           
  1633                           	psect	text6
  1634  02F3                     __ptext6:	
  1635 ;; *************** function _LCDWriteString *****************
  1636 ;; Defined at:
  1637 ;;		line 283 in file "lcd_hd44780_pic16.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  msg             1    wreg     PTR const unsigned char 
  1640 ;;		 -> STR_7(1), STR_6(5), STR_5(5), STR_4(5), 
  1641 ;;		 -> STR_3(5), STR_2(5), STR_1(1), 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  msg             1   11[BANK0 ] PTR const unsigned char 
  1644 ;;		 -> STR_7(1), STR_6(5), STR_5(5), STR_4(5), 
  1645 ;;		 -> STR_3(5), STR_2(5), STR_1(1), 
  1646 ;;  cc              1   10[BANK0 ] char 
  1647 ;;  count           1    9[BANK0 ] char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      char 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         0       3       0       0       0
  1659 ;;      Temps:          1       0       0       0       0
  1660 ;;      Totals:         1       3       0       0       0
  1661 ;;Total ram usage:        4 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    3
  1664 ;; This function calls:
  1665 ;;		_LCDByte
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;;		_ShowMenu
  1669 ;;		_ClearMenu
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           
  1674                           ;psect for function _LCDWriteString
  1675  02F3                     _LCDWriteString:	
  1676                           
  1677                           ;incstack = 0
  1678                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1679                           ;LCDWriteString@msg stored from wreg
  1680  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1681  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1682  02F5  00AB               	movwf	LCDWriteString@msg
  1683                           
  1684                           ;lcd_hd44780_pic16.c: 285: int8_t count = 0;
  1685  02F6  01A9               	clrf	LCDWriteString@count
  1686  02F7                     l2055:	
  1687                           ;lcd_hd44780_pic16.c: 286: while(*msg!='\0')
  1688                           
  1689  02F7  082B               	movf	LCDWriteString@msg,w
  1690  02F8  0084               	movwf	4
  1691  02F9  120A  118A  2500  120A  118A  	fcall	stringdir
  1692  02FE  3A00               	xorlw	0
  1693  02FF  1903               	btfsc	3,2
  1694  0300  2B4C               	goto	l2057
  1695                           
  1696                           ;lcd_hd44780_pic16.c: 287: {
  1697                           ;lcd_hd44780_pic16.c: 289: if(*msg=='%')
  1698  0301  082B               	movf	LCDWriteString@msg,w
  1699  0302  0084               	movwf	4
  1700  0303  120A  118A  2500  120A  118A  	fcall	stringdir
  1701  0308  3A25               	xorlw	37
  1702  0309  1D03               	skipz
  1703  030A  2B33               	goto	l2049
  1704                           
  1705                           ;lcd_hd44780_pic16.c: 290: {
  1706                           ;lcd_hd44780_pic16.c: 291: msg++;
  1707  030B  3001               	movlw	1
  1708  030C  00F7               	movwf	??_LCDWriteString
  1709  030D  0877               	movf	??_LCDWriteString,w
  1710  030E  07AB               	addwf	LCDWriteString@msg,f
  1711                           
  1712                           ;lcd_hd44780_pic16.c: 292: int8_t cc=*msg-'0';
  1713  030F  082B               	movf	LCDWriteString@msg,w
  1714  0310  0084               	movwf	4
  1715  0311  120A  118A  2500  120A  118A  	fcall	stringdir
  1716  0316  3ED0               	addlw	-48
  1717  0317  00F7               	movwf	??_LCDWriteString
  1718  0318  0877               	movf	??_LCDWriteString,w
  1719  0319  00AA               	movwf	LCDWriteString@cc
  1720                           
  1721                           ;lcd_hd44780_pic16.c: 294: if(cc>=0 && cc<=7)
  1722  031A  1BAA               	btfsc	LCDWriteString@cc,7
  1723  031B  2B25               	goto	l2041
  1724  031C  082A               	movf	LCDWriteString@cc,w
  1725  031D  3A80               	xorlw	128
  1726  031E  3E78               	addlw	-136
  1727  031F  1803               	skipnc
  1728  0320  2B25               	goto	l2041
  1729                           
  1730                           ;lcd_hd44780_pic16.c: 295: {
  1731                           ;lcd_hd44780_pic16.c: 296: (LCDByte(cc,1));
  1732  0321  01F6               	clrf	LCDByte@isdata
  1733  0322  0AF6               	incf	LCDByte@isdata,f
  1734  0323  082A               	movf	LCDWriteString@cc,w
  1735  0324  2B3C               	goto	L1
  1736  0325                     l2041:	
  1737                           ;lcd_hd44780_pic16.c: 298: }
  1738                           
  1739                           ;lcd_hd44780_pic16.c: 297: count++;
  1740                           
  1741                           
  1742                           ;lcd_hd44780_pic16.c: 299: else
  1743                           ;lcd_hd44780_pic16.c: 300: {
  1744                           ;lcd_hd44780_pic16.c: 301: (LCDByte('%',1));
  1745  0325  01F6               	clrf	LCDByte@isdata
  1746  0326  0AF6               	incf	LCDByte@isdata,f
  1747  0327  3025               	movlw	37
  1748  0328  120A  118A  23A9  120A  118A  	fcall	_LCDByte
  1749                           
  1750                           ;lcd_hd44780_pic16.c: 302: count++;
  1751  032D  3001               	movlw	1
  1752  032E  00F7               	movwf	??_LCDWriteString
  1753  032F  0877               	movf	??_LCDWriteString,w
  1754  0330  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0331  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0332  07A9               	addwf	LCDWriteString@count,f
  1757  0333                     l2049:	
  1758                           ;lcd_hd44780_pic16.c: 305: }
  1759                           ;lcd_hd44780_pic16.c: 306: }
  1760                           
  1761                           ;lcd_hd44780_pic16.c: 304: count++;
  1762                           
  1763                           ;lcd_hd44780_pic16.c: 303: (LCDByte(*msg,1));
  1764                           
  1765                           
  1766                           ;lcd_hd44780_pic16.c: 307: else
  1767                           ;lcd_hd44780_pic16.c: 308: {
  1768                           ;lcd_hd44780_pic16.c: 309: (LCDByte(*msg,1));
  1769  0333  01F6               	clrf	LCDByte@isdata
  1770  0334  0AF6               	incf	LCDByte@isdata,f
  1771  0335  082B               	movf	LCDWriteString@msg,w
  1772  0336  0084               	movwf	4
  1773  0337  120A  118A  2500  120A  118A  	fcall	stringdir
  1774  033C                     L1:	
  1775  033C  120A  118A  23A9  120A  118A  	fcall	_LCDByte
  1776                           
  1777                           ;lcd_hd44780_pic16.c: 310: count++;
  1778  0341  3001               	movlw	1
  1779  0342  00F7               	movwf	??_LCDWriteString
  1780  0343  0877               	movf	??_LCDWriteString,w
  1781  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0346  07A9               	addwf	LCDWriteString@count,f
  1784                           
  1785                           ;lcd_hd44780_pic16.c: 311: }
  1786                           ;lcd_hd44780_pic16.c: 312: msg++;
  1787  0347  3001               	movlw	1
  1788  0348  00F7               	movwf	??_LCDWriteString
  1789  0349  0877               	movf	??_LCDWriteString,w
  1790  034A  07AB               	addwf	LCDWriteString@msg,f
  1791  034B  2AF7               	goto	l2055
  1792  034C                     l2057:	
  1793                           
  1794                           ;lcd_hd44780_pic16.c: 313: }
  1795                           ;lcd_hd44780_pic16.c: 315: return count;
  1796  034C  0829               	movf	LCDWriteString@count,w
  1797  034D  0008               	return
  1798  034E                     __end_of_LCDWriteString:	
  1799                           
  1800                           	psect	text7
  1801  011A                     __ptext7:	
  1802 ;; *************** function _LCDWriteInt *****************
  1803 ;; Defined at:
  1804 ;;		line 328 in file "lcd_hd44780_pic16.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  val             2    9[BANK0 ] int 
  1807 ;;  field_length    1   11[BANK0 ] char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  str             5   14[BANK0 ] unsigned char [5]
  1810 ;;  i               2   21[BANK0 ] int 
  1811 ;;  j               2   19[BANK0 ] int 
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      char 
  1814 ;; Registers used:
  1815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1821 ;;      Params:         0       3       0       0       0
  1822 ;;      Locals:         0       9       0       0       0
  1823 ;;      Temps:          0       2       0       0       0
  1824 ;;      Totals:         0      14       0       0       0
  1825 ;;Total ram usage:       14 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    3
  1828 ;; This function calls:
  1829 ;;		_LCDByte
  1830 ;;		___awdiv
  1831 ;;		___awmod
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;;		_ShowMenu
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           
  1839                           ;psect for function _LCDWriteInt
  1840  011A                     _LCDWriteInt:	
  1841                           
  1842                           ;lcd_hd44780_pic16.c: 330: char str[5]={-16,-16,-16,-16,-16};
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1846  011A  302E               	movlw	LCDWriteInt@str& (0+255)
  1847  011B  0084               	movwf	4
  1848  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1849  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1850  011E  0869               	movf	LCDWriteInt@F1646,w
  1851  011F  1383               	bcf	3,7	;select IRP bank0
  1852  0120  0080               	movwf	0
  1853  0121  0A84               	incf	4,f
  1854  0122  086A               	movf	LCDWriteInt@F1646+1,w
  1855  0123  0080               	movwf	0
  1856  0124  0A84               	incf	4,f
  1857  0125  086B               	movf	LCDWriteInt@F1646+2,w
  1858  0126  0080               	movwf	0
  1859  0127  0A84               	incf	4,f
  1860  0128  086C               	movf	LCDWriteInt@F1646+3,w
  1861  0129  0080               	movwf	0
  1862  012A  0A84               	incf	4,f
  1863  012B  086D               	movf	LCDWriteInt@F1646+4,w
  1864  012C  0080               	movwf	0
  1865                           
  1866                           ;lcd_hd44780_pic16.c: 331: int i=4,j=0;
  1867  012D  3004               	movlw	4
  1868  012E  00B5               	movwf	LCDWriteInt@i
  1869  012F  3000               	movlw	0
  1870  0130  00B6               	movwf	LCDWriteInt@i+1
  1871  0131  01B3               	clrf	LCDWriteInt@j
  1872  0132  01B4               	clrf	LCDWriteInt@j+1
  1873                           
  1874                           ;lcd_hd44780_pic16.c: 333: if(val == 0)
  1875  0133  0829               	movf	LCDWriteInt@val,w
  1876  0134  042A               	iorwf	LCDWriteInt@val+1,w
  1877  0135  1903               	btfsc	3,2
  1878                           
  1879                           ;lcd_hd44780_pic16.c: 334: {
  1880                           ;lcd_hd44780_pic16.c: 335: str[4] = 0;
  1881  0136  01B2               	clrf	LCDWriteInt@str+4
  1882                           
  1883                           ;lcd_hd44780_pic16.c: 336: }
  1884                           ;lcd_hd44780_pic16.c: 338: if(val<0)
  1885  0137  1FAA               	btfss	LCDWriteInt@val+1,7
  1886  0138  2948               	goto	l2083
  1887                           
  1888                           ;lcd_hd44780_pic16.c: 339: {
  1889                           ;lcd_hd44780_pic16.c: 340: (LCDByte('-',1));
  1890  0139  01F6               	clrf	LCDByte@isdata
  1891  013A  0AF6               	incf	LCDByte@isdata,f
  1892  013B  302D               	movlw	45
  1893  013C  120A  118A  23A9  120A  118A  	fcall	_LCDByte
  1894                           
  1895                           ;lcd_hd44780_pic16.c: 341: val=val*-1;
  1896  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0143  09A9               	comf	LCDWriteInt@val,f
  1899  0144  09AA               	comf	LCDWriteInt@val+1,f
  1900  0145  0AA9               	incf	LCDWriteInt@val,f
  1901  0146  1903               	skipnz
  1902  0147  0AAA               	incf	LCDWriteInt@val+1,f
  1903  0148                     l2083:	
  1904                           ;lcd_hd44780_pic16.c: 342: }
  1905                           ;lcd_hd44780_pic16.c: 344: while(val)
  1906                           
  1907  0148  0829               	movf	LCDWriteInt@val,w
  1908  0149  042A               	iorwf	LCDWriteInt@val+1,w
  1909  014A  1903               	btfsc	3,2
  1910  014B  297D               	goto	l2085
  1911                           
  1912                           ;lcd_hd44780_pic16.c: 345: {
  1913                           ;lcd_hd44780_pic16.c: 346: str[i]=val%10;
  1914  014C  300A               	movlw	10
  1915  014D  00F4               	movwf	___awmod@divisor
  1916  014E  3000               	movlw	0
  1917  014F  00F5               	movwf	___awmod@divisor+1
  1918  0150  082A               	movf	LCDWriteInt@val+1,w
  1919  0151  00F7               	movwf	___awmod@dividend+1
  1920  0152  0829               	movf	LCDWriteInt@val,w
  1921  0153  00F6               	movwf	___awmod@dividend
  1922  0154  120A  118A  2400  120A  118A  	fcall	___awmod
  1923  0159  0874               	movf	?___awmod,w
  1924  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1925  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1926  015C  00AC               	movwf	??_LCDWriteInt
  1927  015D  0835               	movf	LCDWriteInt@i,w
  1928  015E  3E2E               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1929  015F  0084               	movwf	4
  1930  0160  082C               	movf	??_LCDWriteInt,w
  1931  0161  1383               	bcf	3,7	;select IRP bank0
  1932  0162  0080               	movwf	0
  1933                           
  1934                           ;lcd_hd44780_pic16.c: 347: val=val/10;
  1935  0163  300A               	movlw	10
  1936  0164  00F4               	movwf	___awdiv@divisor
  1937  0165  3000               	movlw	0
  1938  0166  00F5               	movwf	___awdiv@divisor+1
  1939  0167  082A               	movf	LCDWriteInt@val+1,w
  1940  0168  00F7               	movwf	___awdiv@dividend+1
  1941  0169  0829               	movf	LCDWriteInt@val,w
  1942  016A  00F6               	movwf	___awdiv@dividend
  1943  016B  120A  118A  234E  120A  118A  	fcall	___awdiv
  1944  0170  0875               	movf	?___awdiv+1,w
  1945  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0173  00AA               	movwf	LCDWriteInt@val+1
  1948  0174  0874               	movf	?___awdiv,w
  1949  0175  00A9               	movwf	LCDWriteInt@val
  1950                           
  1951                           ;lcd_hd44780_pic16.c: 348: i--;
  1952  0176  30FF               	movlw	255
  1953  0177  07B5               	addwf	LCDWriteInt@i,f
  1954  0178  1803               	skipnc
  1955  0179  0AB6               	incf	LCDWriteInt@i+1,f
  1956  017A  30FF               	movlw	255
  1957  017B  07B6               	addwf	LCDWriteInt@i+1,f
  1958  017C  2948               	goto	l2083
  1959  017D                     l2085:	
  1960                           
  1961                           ;lcd_hd44780_pic16.c: 349: }
  1962                           ;lcd_hd44780_pic16.c: 350: if(field_length==-1)
  1963  017D  0A2B               	incf	LCDWriteInt@field_length,w
  1964  017E  1903               	btfsc	3,2
  1965  017F  2992               	goto	l2093
  1966                           
  1967                           ;lcd_hd44780_pic16.c: 352: else
  1968                           ;lcd_hd44780_pic16.c: 353: j=5-field_length;
  1969                           
  1970                           ;lcd_hd44780_pic16.c: 351: while(str[j]==-16) j++;
  1971  0180  082B               	movf	LCDWriteInt@field_length,w
  1972  0181  00AC               	movwf	??_LCDWriteInt
  1973  0182  01AD               	clrf	??_LCDWriteInt+1
  1974  0183  1BAC               	btfsc	??_LCDWriteInt,7
  1975  0184  03AD               	decf	??_LCDWriteInt+1,f
  1976  0185  09AC               	comf	??_LCDWriteInt,f
  1977  0186  09AD               	comf	??_LCDWriteInt+1,f
  1978  0187  0AAC               	incf	??_LCDWriteInt,f
  1979  0188  1903               	skipnz
  1980  0189  0AAD               	incf	??_LCDWriteInt+1,f
  1981  018A  082C               	movf	??_LCDWriteInt,w
  1982  018B  3E05               	addlw	5
  1983  018C  00B3               	movwf	LCDWriteInt@j
  1984  018D  082D               	movf	??_LCDWriteInt+1,w
  1985  018E  1803               	skipnc
  1986  018F  3E01               	addlw	1
  1987  0190  3E00               	addlw	0
  1988  0191  00B4               	movwf	LCDWriteInt@j+1
  1989  0192                     l2093:	
  1990                           
  1991                           ;lcd_hd44780_pic16.c: 356: for(i=j;i<5;i++)
  1992  0192  0834               	movf	LCDWriteInt@j+1,w
  1993  0193  00B6               	movwf	LCDWriteInt@i+1
  1994  0194  0833               	movf	LCDWriteInt@j,w
  1995  0195  00B5               	movwf	LCDWriteInt@i
  1996  0196                     L2:	
  1997  0196  0836               	movf	LCDWriteInt@i+1,w
  1998  0197  3A80               	xorlw	128
  1999  0198  00FF               	movwf	127
  2000  0199  3080               	movlw	128
  2001  019A  027F               	subwf	127,w
  2002  019B  1D03               	skipz
  2003  019C  299F               	goto	u1835
  2004  019D  3005               	movlw	5
  2005  019E  0235               	subwf	LCDWriteInt@i,w
  2006  019F                     u1835:	
  2007  019F  1803               	btfsc	3,0
  2008  01A0  0008               	return
  2009                           
  2010                           ;lcd_hd44780_pic16.c: 357: {
  2011                           ;lcd_hd44780_pic16.c: 358: (LCDByte(48+str[i],1));
  2012  01A1  01F6               	clrf	LCDByte@isdata
  2013  01A2  0AF6               	incf	LCDByte@isdata,f
  2014  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2015  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2016  01A5  0835               	movf	LCDWriteInt@i,w
  2017  01A6  3E2E               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2018  01A7  0084               	movwf	4
  2019  01A8  1383               	bcf	3,7	;select IRP bank0
  2020  01A9  0800               	movf	0,w
  2021  01AA  3E30               	addlw	48
  2022  01AB  120A  118A  23A9  120A  118A  	fcall	_LCDByte
  2023  01B0  3001               	movlw	1
  2024  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2025  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2026  01B3  07B5               	addwf	LCDWriteInt@i,f
  2027  01B4  1803               	skipnc
  2028  01B5  0AB6               	incf	LCDWriteInt@i+1,f
  2029  01B6  3000               	movlw	0
  2030  01B7  07B6               	addwf	LCDWriteInt@i+1,f
  2031  01B8  2996               	goto	L2
  2032  01B9                     __end_of_LCDWriteInt:	
  2033                           ;lcd_hd44780_pic16.c: 359: }
  2034                           ;lcd_hd44780_pic16.c: 360: return field_length;
  2035                           ;	Return value of _LCDWriteInt is never used
  2036                           
  2037                           
  2038                           	psect	text8
  2039  0400                     __ptext8:	
  2040 ;; *************** function ___awmod *****************
  2041 ;; Defined at:
  2042 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  divisor         2    4[COMMON] int 
  2045 ;;  dividend        2    6[COMMON] int 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  sign            1    2[BANK0 ] unsigned char 
  2048 ;;  counter         1    1[BANK0 ] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    4[COMMON] int 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         4       0       0       0       0
  2059 ;;      Locals:         0       2       0       0       0
  2060 ;;      Temps:          0       1       0       0       0
  2061 ;;      Totals:         4       3       0       0       0
  2062 ;;Total ram usage:        7 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    1
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_LCDWriteInt
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function ___awmod
  2074  0400                     ___awmod:	
  2075                           
  2076                           ;incstack = 0
  2077                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2078  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0402  01A2               	clrf	___awmod@sign
  2081  0403  1FF7               	btfss	___awmod@dividend+1,7
  2082  0404  2C0C               	goto	l1913
  2083  0405  09F6               	comf	___awmod@dividend,f
  2084  0406  09F7               	comf	___awmod@dividend+1,f
  2085  0407  0AF6               	incf	___awmod@dividend,f
  2086  0408  1903               	skipnz
  2087  0409  0AF7               	incf	___awmod@dividend+1,f
  2088  040A  01A2               	clrf	___awmod@sign
  2089  040B  0AA2               	incf	___awmod@sign,f
  2090  040C                     l1913:	
  2091  040C  1FF5               	btfss	___awmod@divisor+1,7
  2092  040D  2C13               	goto	l1917
  2093  040E  09F4               	comf	___awmod@divisor,f
  2094  040F  09F5               	comf	___awmod@divisor+1,f
  2095  0410  0AF4               	incf	___awmod@divisor,f
  2096  0411  1903               	skipnz
  2097  0412  0AF5               	incf	___awmod@divisor+1,f
  2098  0413                     l1917:	
  2099  0413  0874               	movf	___awmod@divisor,w
  2100  0414  0475               	iorwf	___awmod@divisor+1,w
  2101  0415  1903               	btfsc	3,2
  2102  0416  2C40               	goto	l1935
  2103  0417  01A1               	clrf	___awmod@counter
  2104  0418  0AA1               	incf	___awmod@counter,f
  2105  0419                     l1925:	
  2106  0419  1BF5               	btfsc	___awmod@divisor+1,7
  2107  041A  2C27               	goto	l1927
  2108  041B  3001               	movlw	1
  2109  041C                     u1645:	
  2110  041C  1003               	clrc
  2111  041D  0DF4               	rlf	___awmod@divisor,f
  2112  041E  0DF5               	rlf	___awmod@divisor+1,f
  2113  041F  3EFF               	addlw	-1
  2114  0420  1D03               	skipz
  2115  0421  2C1C               	goto	u1645
  2116  0422  3001               	movlw	1
  2117  0423  00A0               	movwf	??___awmod
  2118  0424  0820               	movf	??___awmod,w
  2119  0425  07A1               	addwf	___awmod@counter,f
  2120  0426  2C19               	goto	l1925
  2121  0427                     l1927:	
  2122  0427  0875               	movf	___awmod@divisor+1,w
  2123  0428  0277               	subwf	___awmod@dividend+1,w
  2124  0429  1D03               	skipz
  2125  042A  2C2D               	goto	u1665
  2126  042B  0874               	movf	___awmod@divisor,w
  2127  042C  0276               	subwf	___awmod@dividend,w
  2128  042D                     u1665:	
  2129  042D  1C03               	skipc
  2130  042E  2C35               	goto	l1931
  2131  042F  0874               	movf	___awmod@divisor,w
  2132  0430  02F6               	subwf	___awmod@dividend,f
  2133  0431  0875               	movf	___awmod@divisor+1,w
  2134  0432  1C03               	skipc
  2135  0433  03F7               	decf	___awmod@dividend+1,f
  2136  0434  02F7               	subwf	___awmod@dividend+1,f
  2137  0435                     l1931:	
  2138  0435  3001               	movlw	1
  2139  0436                     u1675:	
  2140  0436  1003               	clrc
  2141  0437  0CF5               	rrf	___awmod@divisor+1,f
  2142  0438  0CF4               	rrf	___awmod@divisor,f
  2143  0439  3EFF               	addlw	-1
  2144  043A  1D03               	skipz
  2145  043B  2C36               	goto	u1675
  2146  043C  3001               	movlw	1
  2147  043D  02A1               	subwf	___awmod@counter,f
  2148  043E  1D03               	btfss	3,2
  2149  043F  2C27               	goto	l1927
  2150  0440                     l1935:	
  2151  0440  0822               	movf	___awmod@sign,w
  2152  0441  1903               	btfsc	3,2
  2153  0442  2C48               	goto	l1939
  2154  0443  09F6               	comf	___awmod@dividend,f
  2155  0444  09F7               	comf	___awmod@dividend+1,f
  2156  0445  0AF6               	incf	___awmod@dividend,f
  2157  0446  1903               	skipnz
  2158  0447  0AF7               	incf	___awmod@dividend+1,f
  2159  0448                     l1939:	
  2160  0448  0877               	movf	___awmod@dividend+1,w
  2161  0449  00F5               	movwf	?___awmod+1
  2162  044A  0876               	movf	___awmod@dividend,w
  2163  044B  00F4               	movwf	?___awmod
  2164  044C  0008               	return
  2165  044D                     __end_of___awmod:	
  2166                           
  2167                           	psect	text9
  2168  034E                     __ptext9:	
  2169 ;; *************** function ___awdiv *****************
  2170 ;; Defined at:
  2171 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  divisor         2    4[COMMON] int 
  2174 ;;  dividend        2    6[COMMON] int 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  quotient        2    3[BANK0 ] int 
  2177 ;;  sign            1    2[BANK0 ] unsigned char 
  2178 ;;  counter         1    1[BANK0 ] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2    4[COMMON] int 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         4       0       0       0       0
  2189 ;;      Locals:         0       4       0       0       0
  2190 ;;      Temps:          0       1       0       0       0
  2191 ;;      Totals:         4       5       0       0       0
  2192 ;;Total ram usage:        9 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    1
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_LCDWriteInt
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           
  2203                           ;psect for function ___awdiv
  2204  034E                     ___awdiv:	
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2208  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2209  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0350  01A2               	clrf	___awdiv@sign
  2211  0351  1FF5               	btfss	___awdiv@divisor+1,7
  2212  0352  2B5A               	goto	l1869
  2213  0353  09F4               	comf	___awdiv@divisor,f
  2214  0354  09F5               	comf	___awdiv@divisor+1,f
  2215  0355  0AF4               	incf	___awdiv@divisor,f
  2216  0356  1903               	skipnz
  2217  0357  0AF5               	incf	___awdiv@divisor+1,f
  2218  0358  01A2               	clrf	___awdiv@sign
  2219  0359  0AA2               	incf	___awdiv@sign,f
  2220  035A                     l1869:	
  2221  035A  1FF7               	btfss	___awdiv@dividend+1,7
  2222  035B  2B65               	goto	l1875
  2223  035C  09F6               	comf	___awdiv@dividend,f
  2224  035D  09F7               	comf	___awdiv@dividend+1,f
  2225  035E  0AF6               	incf	___awdiv@dividend,f
  2226  035F  1903               	skipnz
  2227  0360  0AF7               	incf	___awdiv@dividend+1,f
  2228  0361  3001               	movlw	1
  2229  0362  00A0               	movwf	??___awdiv
  2230  0363  0820               	movf	??___awdiv,w
  2231  0364  06A2               	xorwf	___awdiv@sign,f
  2232  0365                     l1875:	
  2233  0365  01A3               	clrf	___awdiv@quotient
  2234  0366  01A4               	clrf	___awdiv@quotient+1
  2235  0367  0874               	movf	___awdiv@divisor,w
  2236  0368  0475               	iorwf	___awdiv@divisor+1,w
  2237  0369  1903               	btfsc	3,2
  2238  036A  2B9C               	goto	l1897
  2239  036B  01A1               	clrf	___awdiv@counter
  2240  036C  0AA1               	incf	___awdiv@counter,f
  2241  036D                     l1885:	
  2242  036D  1BF5               	btfsc	___awdiv@divisor+1,7
  2243  036E  2B7B               	goto	l1887
  2244  036F  3001               	movlw	1
  2245  0370                     u1545:	
  2246  0370  1003               	clrc
  2247  0371  0DF4               	rlf	___awdiv@divisor,f
  2248  0372  0DF5               	rlf	___awdiv@divisor+1,f
  2249  0373  3EFF               	addlw	-1
  2250  0374  1D03               	skipz
  2251  0375  2B70               	goto	u1545
  2252  0376  3001               	movlw	1
  2253  0377  00A0               	movwf	??___awdiv
  2254  0378  0820               	movf	??___awdiv,w
  2255  0379  07A1               	addwf	___awdiv@counter,f
  2256  037A  2B6D               	goto	l1885
  2257  037B                     l1887:	
  2258  037B  3001               	movlw	1
  2259  037C                     u1565:	
  2260  037C  1003               	clrc
  2261  037D  0DA3               	rlf	___awdiv@quotient,f
  2262  037E  0DA4               	rlf	___awdiv@quotient+1,f
  2263  037F  3EFF               	addlw	-1
  2264  0380  1D03               	skipz
  2265  0381  2B7C               	goto	u1565
  2266  0382  0875               	movf	___awdiv@divisor+1,w
  2267  0383  0277               	subwf	___awdiv@dividend+1,w
  2268  0384  1D03               	skipz
  2269  0385  2B88               	goto	u1575
  2270  0386  0874               	movf	___awdiv@divisor,w
  2271  0387  0276               	subwf	___awdiv@dividend,w
  2272  0388                     u1575:	
  2273  0388  1C03               	skipc
  2274  0389  2B91               	goto	l1893
  2275  038A  0874               	movf	___awdiv@divisor,w
  2276  038B  02F6               	subwf	___awdiv@dividend,f
  2277  038C  0875               	movf	___awdiv@divisor+1,w
  2278  038D  1C03               	skipc
  2279  038E  03F7               	decf	___awdiv@dividend+1,f
  2280  038F  02F7               	subwf	___awdiv@dividend+1,f
  2281  0390  1423               	bsf	___awdiv@quotient,0
  2282  0391                     l1893:	
  2283  0391  3001               	movlw	1
  2284  0392                     u1585:	
  2285  0392  1003               	clrc
  2286  0393  0CF5               	rrf	___awdiv@divisor+1,f
  2287  0394  0CF4               	rrf	___awdiv@divisor,f
  2288  0395  3EFF               	addlw	-1
  2289  0396  1D03               	skipz
  2290  0397  2B92               	goto	u1585
  2291  0398  3001               	movlw	1
  2292  0399  02A1               	subwf	___awdiv@counter,f
  2293  039A  1D03               	btfss	3,2
  2294  039B  2B7B               	goto	l1887
  2295  039C                     l1897:	
  2296  039C  0822               	movf	___awdiv@sign,w
  2297  039D  1903               	btfsc	3,2
  2298  039E  2BA4               	goto	l1901
  2299  039F  09A3               	comf	___awdiv@quotient,f
  2300  03A0  09A4               	comf	___awdiv@quotient+1,f
  2301  03A1  0AA3               	incf	___awdiv@quotient,f
  2302  03A2  1903               	skipnz
  2303  03A3  0AA4               	incf	___awdiv@quotient+1,f
  2304  03A4                     l1901:	
  2305  03A4  0824               	movf	___awdiv@quotient+1,w
  2306  03A5  00F5               	movwf	?___awdiv+1
  2307  03A6  0823               	movf	___awdiv@quotient,w
  2308  03A7  00F4               	movwf	?___awdiv
  2309  03A8  0008               	return
  2310  03A9                     __end_of___awdiv:	
  2311                           
  2312                           	psect	text10
  2313  028F                     __ptext10:	
  2314 ;; *************** function _LCDInit *****************
  2315 ;; Defined at:
  2316 ;;		line 211 in file "lcd_hd44780_pic16.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  style           1    wreg     unsigned char 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  style           1   11[BANK0 ] unsigned char 
  2321 ;;  __i             1   12[BANK0 ] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       0       0       0       0
  2332 ;;      Locals:         0       2       0       0       0
  2333 ;;      Temps:          0       2       0       0       0
  2334 ;;      Totals:         0       4       0       0       0
  2335 ;;Total ram usage:        4 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    3
  2338 ;; This function calls:
  2339 ;;		_LCDBusyLoop
  2340 ;;		_LCDByte
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           
  2347                           ;psect for function _LCDInit
  2348  028F                     _LCDInit:	
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2352                           ;LCDInit@style stored from wreg
  2353  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0290  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0291  00AB               	movwf	LCDInit@style
  2356                           
  2357                           ;lcd_hd44780_pic16.c: 213: _delay((unsigned long)((30)*(20000000/4000.0)));
  2358  0292  30C3               	movlw	195
  2359  0293  00AA               	movwf	??_LCDInit+1
  2360  0294  30CD               	movlw	205
  2361  0295  00A9               	movwf	??_LCDInit
  2362  0296                     u2077:	
  2363  0296  0BA9               	decfsz	??_LCDInit,f
  2364  0297  2A96               	goto	u2077
  2365  0298  0BAA               	decfsz	??_LCDInit+1,f
  2366  0299  2A96               	goto	u2077
  2367                           
  2368                           ;lcd_hd44780_pic16.c: 216: TRISC&=(~(0x0F<<4));
  2369  029A  300F               	movlw	15
  2370  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2371  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2372  029D  00A9               	movwf	??_LCDInit
  2373  029E  0829               	movf	??_LCDInit,w
  2374  029F  1683               	bsf	3,5	;RP0=1, select bank1
  2375  02A0  1303               	bcf	3,6	;RP1=0, select bank1
  2376  02A1  0587               	andwf	7,f	;volatile
  2377                           
  2378                           ;lcd_hd44780_pic16.c: 218: TRISCbits.TRISC3=0;
  2379  02A2  1187               	bcf	7,3	;volatile
  2380                           
  2381                           ;lcd_hd44780_pic16.c: 219: TRISCbits.TRISC1=0;
  2382  02A3  1087               	bcf	7,1	;volatile
  2383                           
  2384                           ;lcd_hd44780_pic16.c: 220: TRISCbits.TRISC2=0;
  2385  02A4  1107               	bcf	7,2	;volatile
  2386                           
  2387                           ;lcd_hd44780_pic16.c: 222: PORTC&=(~(0x0F<<4));
  2388  02A5  300F               	movlw	15
  2389  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2390  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2391  02A8  00A9               	movwf	??_LCDInit
  2392  02A9  0829               	movf	??_LCDInit,w
  2393  02AA  0587               	andwf	7,f	;volatile
  2394                           
  2395                           ;lcd_hd44780_pic16.c: 224: (RC3=0);
  2396  02AB  1187               	bcf	7,3	;volatile
  2397                           
  2398                           ;lcd_hd44780_pic16.c: 225: (RC2=0);
  2399  02AC  1107               	bcf	7,2	;volatile
  2400                           
  2401                           ;lcd_hd44780_pic16.c: 226: (RC1=0);
  2402  02AD  1087               	bcf	7,1	;volatile
  2403                           
  2404                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2405  02AE  2AAF               	nop2	;2 cycle nop
  2406                           
  2407                           ;lcd_hd44780_pic16.c: 231: (RC3=1);
  2408  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2409  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2410  02B1  1587               	bsf	7,3	;volatile
  2411                           
  2412                           ;lcd_hd44780_pic16.c: 232: PORTC|=((0b00000010)<<4);
  2413  02B2  1687               	bsf	7,5	;volatile
  2414                           
  2415                           ;lcd_hd44780_pic16.c: 233: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2416  02B3  2AB4               	nop2	;2 cycle nop
  2417  02B4  2AB5               	nop2	;2 cycle nop
  2418  02B5  0000               	nop
  2419                           
  2420                           ;lcd_hd44780_pic16.c: 234: (RC3=0);
  2421  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2422  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2423  02B8  1187               	bcf	7,3	;volatile
  2424                           
  2425                           ;lcd_hd44780_pic16.c: 235: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2426  02B9  2ABA               	nop2	;2 cycle nop
  2427  02BA  2ABB               	nop2	;2 cycle nop
  2428  02BB  0000               	nop
  2429                           
  2430                           ;lcd_hd44780_pic16.c: 238: LCDBusyLoop();
  2431  02BC  120A  118A  2227  120A  118A  	fcall	_LCDBusyLoop
  2432                           
  2433                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b00101000,0));
  2434  02C1  01F6               	clrf	LCDByte@isdata
  2435  02C2  3028               	movlw	40
  2436  02C3  120A  118A  23A9  120A  118A  	fcall	_LCDByte
  2437                           
  2438                           ;lcd_hd44780_pic16.c: 244: (LCDByte(0b00001100|style,0));
  2439  02C8  01F6               	clrf	LCDByte@isdata
  2440  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2441  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2442  02CB  082B               	movf	LCDInit@style,w
  2443  02CC  380C               	iorlw	12
  2444  02CD  120A  118A  23A9  120A  118A  	fcall	_LCDByte
  2445                           
  2446                           ;lcd_hd44780_pic16.c: 247: (LCDByte(0b01000000,0));
  2447  02D2  01F6               	clrf	LCDByte@isdata
  2448  02D3  3040               	movlw	64
  2449  02D4  120A  118A  23A9  120A  118A  	fcall	_LCDByte
  2450                           
  2451                           ;lcd_hd44780_pic16.c: 249: uint8_t __i;
  2452                           ;lcd_hd44780_pic16.c: 250: for(__i=0;__i<sizeof(__cgram);__i++)
  2453  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2454  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2455  02DB  01AC               	clrf	LCDInit@__i
  2456  02DC                     L3:	
  2457  02DC  3008               	movlw	8
  2458  02DD  022C               	subwf	LCDInit@__i,w
  2459  02DE  1803               	btfsc	3,0
  2460  02DF  0008               	return
  2461                           
  2462                           ;lcd_hd44780_pic16.c: 251: (LCDByte(__cgram[__i],1));
  2463  02E0  01F6               	clrf	LCDByte@isdata
  2464  02E1  0AF6               	incf	LCDByte@isdata,f
  2465  02E2  082C               	movf	LCDInit@__i,w
  2466  02E3  3E61               	addlw	(low (___cgram| 0))& (0+255)
  2467  02E4  0084               	movwf	4
  2468  02E5  1383               	bcf	3,7	;select IRP bank0
  2469  02E6  0800               	movf	0,w
  2470  02E7  120A  118A  23A9  120A  118A  	fcall	_LCDByte
  2471  02EC  3001               	movlw	1
  2472  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2473  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2474  02EF  00A9               	movwf	??_LCDInit
  2475  02F0  0829               	movf	??_LCDInit,w
  2476  02F1  07AC               	addwf	LCDInit@__i,f
  2477  02F2  2ADC               	goto	L3
  2478  02F3                     __end_of_LCDInit:	
  2479                           
  2480                           	psect	text11
  2481  04D1                     __ptext11:	
  2482 ;; *************** function _LCDGotoXY *****************
  2483 ;; Defined at:
  2484 ;;		line 367 in file "lcd_hd44780_pic16.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  x               1    wreg     unsigned char 
  2487 ;;  y               1    9[BANK0 ] unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  x               1   10[BANK0 ] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2499 ;;      Params:         0       1       0       0       0
  2500 ;;      Locals:         0       1       0       0       0
  2501 ;;      Temps:          1       0       0       0       0
  2502 ;;      Totals:         1       2       0       0       0
  2503 ;;Total ram usage:        3 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    3
  2506 ;; This function calls:
  2507 ;;		_LCDByte
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;;		_ShowMenu
  2511 ;;		_ClearMenu
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           
  2516                           ;psect for function _LCDGotoXY
  2517  04D1                     _LCDGotoXY:	
  2518                           
  2519                           ;incstack = 0
  2520                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2521                           ;LCDGotoXY@x stored from wreg
  2522  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2523  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2524  04D3  00AA               	movwf	LCDGotoXY@x
  2525                           
  2526                           ;lcd_hd44780_pic16.c: 369: if(x>=20) return;
  2527  04D4  3014               	movlw	20
  2528  04D5  022A               	subwf	LCDGotoXY@x,w
  2529  04D6  1803               	btfsc	3,0
  2530  04D7  0008               	return
  2531  04D8  2CE2               	goto	l2021
  2532  04D9                     l172:	
  2533                           ;lcd_hd44780_pic16.c: 377: case 1:
  2534                           
  2535                           ;lcd_hd44780_pic16.c: 376: break;
  2536                           
  2537                           ;lcd_hd44780_pic16.c: 374: {
  2538                           ;lcd_hd44780_pic16.c: 375: case 0:
  2539                           
  2540                           ;lcd_hd44780_pic16.c: 373: switch(y)
  2541                           
  2542                           
  2543                           ;lcd_hd44780_pic16.c: 378: x|=0b01000000;
  2544  04D9  172A               	bsf	LCDGotoXY@x,6
  2545                           
  2546                           ;lcd_hd44780_pic16.c: 379: break;
  2547  04DA  2CF0               	goto	l171
  2548  04DB                     l2015:	
  2549                           ;lcd_hd44780_pic16.c: 380: case 2:
  2550                           
  2551                           
  2552                           ;lcd_hd44780_pic16.c: 381: x+=0x14;
  2553  04DB  3014               	movlw	20
  2554  04DC  2CDE               	goto	L4
  2555  04DD                     l2017:	
  2556                           ;lcd_hd44780_pic16.c: 383: case 3:
  2557                           
  2558                           ;lcd_hd44780_pic16.c: 382: break;
  2559                           
  2560                           
  2561                           ;lcd_hd44780_pic16.c: 384: x+=0x54;
  2562  04DD  3054               	movlw	84
  2563  04DE                     L4:	
  2564  04DE  00F7               	movwf	??_LCDGotoXY
  2565  04DF  0877               	movf	??_LCDGotoXY,w
  2566  04E0  07AA               	addwf	LCDGotoXY@x,f
  2567                           
  2568                           ;lcd_hd44780_pic16.c: 386: }
  2569                           
  2570                           ;lcd_hd44780_pic16.c: 385: break;
  2571  04E1  2CF0               	goto	l171
  2572  04E2                     l2021:	
  2573  04E2  0829               	movf	LCDGotoXY@y,w
  2574                           
  2575                           ; Switch size 1, requested type "space"
  2576                           ; Number of cases is 4, Range of values is 0 to 3
  2577                           ; switch strategies available:
  2578                           ; Name         Instructions Cycles
  2579                           ; simple_byte           13     7 (average)
  2580                           ; direct_byte           20     8 (fixed)
  2581                           ; jumptable            260     6 (fixed)
  2582                           ;	Chosen strategy is simple_byte
  2583  04E3  3A00               	xorlw	0	; case 0
  2584  04E4  1903               	skipnz
  2585  04E5  2CF0               	goto	l171
  2586  04E6  3A01               	xorlw	1	; case 1
  2587  04E7  1903               	skipnz
  2588  04E8  2CD9               	goto	l172
  2589  04E9  3A03               	xorlw	3	; case 2
  2590  04EA  1903               	skipnz
  2591  04EB  2CDB               	goto	l2015
  2592  04EC  3A01               	xorlw	1	; case 3
  2593  04ED  1903               	skipnz
  2594  04EE  2CDD               	goto	l2017
  2595  04EF  2CF0               	goto	l171
  2596  04F0                     l171:	
  2597                           
  2598                           ;lcd_hd44780_pic16.c: 408: x|=0b10000000;
  2599  04F0  17AA               	bsf	LCDGotoXY@x,7
  2600                           
  2601                           ;lcd_hd44780_pic16.c: 409: (LCDByte(x,0));
  2602  04F1  01F6               	clrf	LCDByte@isdata
  2603  04F2  082A               	movf	LCDGotoXY@x,w
  2604  04F3  120A  118A  23A9   	fcall	_LCDByte
  2605  04F6  0008               	return
  2606  04F7                     __end_of_LCDGotoXY:	
  2607                           
  2608                           	psect	text12
  2609  03A9                     __ptext12:	
  2610 ;; *************** function _LCDByte *****************
  2611 ;; Defined at:
  2612 ;;		line 80 in file "lcd_hd44780_pic16.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  c               1    wreg     unsigned char 
  2615 ;;  isdata          1    6[COMMON] unsigned char 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  c               1    7[BANK0 ] unsigned char 
  2618 ;;  temp            1    8[BANK0 ] unsigned char 
  2619 ;;  ln              1    6[BANK0 ] unsigned char 
  2620 ;;  hn              1    5[BANK0 ] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  1    wreg      void 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0, pclath, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2630 ;;      Params:         1       0       0       0       0
  2631 ;;      Locals:         0       4       0       0       0
  2632 ;;      Temps:          0       2       0       0       0
  2633 ;;      Totals:         1       6       0       0       0
  2634 ;;Total ram usage:        7 bytes
  2635 ;; Hardware stack levels used:    1
  2636 ;; Hardware stack levels required when called:    2
  2637 ;; This function calls:
  2638 ;;		_LCDBusyLoop
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;;		_LCDInit
  2642 ;;		_LCDWriteString
  2643 ;;		_LCDWriteInt
  2644 ;;		_LCDGotoXY
  2645 ;;		_LCDSetStyle
  2646 ;;		_ShowMenu
  2647 ;;		_ClearMenu
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           
  2652                           ;psect for function _LCDByte
  2653  03A9                     _LCDByte:	
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2657                           ;LCDByte@c stored from wreg
  2658  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2659  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2660  03AB  00A7               	movwf	LCDByte@c
  2661                           
  2662                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  2663                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  2664                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  2665  03AC  0827               	movf	LCDByte@c,w
  2666  03AD  00A3               	movwf	??_LCDByte
  2667  03AE  3004               	movlw	4
  2668  03AF                     u1475:	
  2669  03AF  1003               	clrc
  2670  03B0  0CA3               	rrf	??_LCDByte,f
  2671  03B1  3EFF               	addlw	-1
  2672  03B2  1D03               	skipz
  2673  03B3  2BAF               	goto	u1475
  2674  03B4  0823               	movf	??_LCDByte,w
  2675  03B5  00A4               	movwf	??_LCDByte+1
  2676  03B6  0824               	movf	??_LCDByte+1,w
  2677  03B7  00A5               	movwf	LCDByte@hn
  2678                           
  2679                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  2680  03B8  0827               	movf	LCDByte@c,w
  2681  03B9  390F               	andlw	15
  2682  03BA  00A3               	movwf	??_LCDByte
  2683  03BB  0823               	movf	??_LCDByte,w
  2684  03BC  00A6               	movwf	LCDByte@ln
  2685                           
  2686                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  2687  03BD  0876               	movf	LCDByte@isdata,w
  2688  03BE  1D03               	btfss	3,2
  2689  03BF  2BC2               	goto	l122
  2690                           
  2691                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  2692  03C0  1087               	bcf	7,1	;volatile
  2693  03C1  2BC3               	goto	l123
  2694  03C2                     l122:	
  2695                           
  2696                           ;lcd_hd44780_pic16.c: 97: else
  2697                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  2698  03C2  1487               	bsf	7,1	;volatile
  2699  03C3                     l123:	
  2700                           
  2701                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2702  03C3  2BC4               	nop2	;2 cycle nop
  2703                           
  2704                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  2705  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2706  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2707  03C6  1587               	bsf	7,3	;volatile
  2708                           
  2709                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  2710  03C7  0825               	movf	LCDByte@hn,w
  2711  03C8  00A3               	movwf	??_LCDByte
  2712  03C9  3004               	movlw	4
  2713  03CA                     u1495:	
  2714  03CA  1003               	clrc
  2715  03CB  0DA3               	rlf	??_LCDByte,f
  2716  03CC  3EFF               	addlw	-1
  2717  03CD  1D03               	skipz
  2718  03CE  2BCA               	goto	u1495
  2719  03CF  0807               	movf	7,w	;volatile
  2720  03D0  390F               	andlw	15
  2721  03D1  0423               	iorwf	??_LCDByte,w
  2722  03D2  00A4               	movwf	??_LCDByte+1
  2723  03D3  0824               	movf	??_LCDByte+1,w
  2724  03D4  00A8               	movwf	LCDByte@temp
  2725                           
  2726                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  2727  03D5  0828               	movf	LCDByte@temp,w
  2728  03D6  0087               	movwf	7	;volatile
  2729                           
  2730                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2731  03D7  2BD8               	nop2	;2 cycle nop
  2732  03D8  2BD9               	nop2	;2 cycle nop
  2733  03D9  0000               	nop
  2734                           
  2735                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  2736  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2737  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2738  03DC  1187               	bcf	7,3	;volatile
  2739                           
  2740                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2741  03DD  2BDE               	nop2	;2 cycle nop
  2742  03DE  2BDF               	nop2	;2 cycle nop
  2743  03DF  0000               	nop
  2744                           
  2745                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  2746  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2747  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2748  03E2  1587               	bsf	7,3	;volatile
  2749                           
  2750                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  2751  03E3  0826               	movf	LCDByte@ln,w
  2752  03E4  00A3               	movwf	??_LCDByte
  2753  03E5  3004               	movlw	4
  2754  03E6                     u1505:	
  2755  03E6  1003               	clrc
  2756  03E7  0DA3               	rlf	??_LCDByte,f
  2757  03E8  3EFF               	addlw	-1
  2758  03E9  1D03               	skipz
  2759  03EA  2BE6               	goto	u1505
  2760  03EB  0807               	movf	7,w	;volatile
  2761  03EC  390F               	andlw	15
  2762  03ED  0423               	iorwf	??_LCDByte,w
  2763  03EE  00A4               	movwf	??_LCDByte+1
  2764  03EF  0824               	movf	??_LCDByte+1,w
  2765  03F0  00A8               	movwf	LCDByte@temp
  2766                           
  2767                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  2768  03F1  0828               	movf	LCDByte@temp,w
  2769  03F2  0087               	movwf	7	;volatile
  2770                           
  2771                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2772  03F3  2BF4               	nop2	;2 cycle nop
  2773  03F4  2BF5               	nop2	;2 cycle nop
  2774  03F5  0000               	nop
  2775                           
  2776                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  2777  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2778  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2779  03F8  1187               	bcf	7,3	;volatile
  2780                           
  2781                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2782  03F9  2BFA               	nop2	;2 cycle nop
  2783  03FA  2BFB               	nop2	;2 cycle nop
  2784  03FB  0000               	nop
  2785                           
  2786                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  2787  03FC  120A  118A  2227   	fcall	_LCDBusyLoop
  2788  03FF  0008               	return
  2789  0400                     __end_of_LCDByte:	
  2790                           
  2791                           	psect	text13
  2792  0227                     __ptext13:	
  2793 ;; *************** function _LCDBusyLoop *****************
  2794 ;; Defined at:
  2795 ;;		line 135 in file "lcd_hd44780_pic16.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  status          1    2[BANK0 ] unsigned char 
  2800 ;;  temp            1    1[BANK0 ] unsigned char 
  2801 ;;  busy            1    0[BANK0 ] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2811 ;;      Params:         0       0       0       0       0
  2812 ;;      Locals:         0       3       0       0       0
  2813 ;;      Temps:          2       0       0       0       0
  2814 ;;      Totals:         2       3       0       0       0
  2815 ;;Total ram usage:        5 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_LCDByte
  2822 ;;		_LCDInit
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _LCDBusyLoop
  2828  0227                     _LCDBusyLoop:	
  2829                           
  2830                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  2831                           
  2832                           ;incstack = 0
  2833                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2834  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0229  01A2               	clrf	LCDBusyLoop@status
  2837                           
  2838                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  2839  022A  30F0               	movlw	240
  2840  022B  00F4               	movwf	??_LCDBusyLoop
  2841  022C  0874               	movf	??_LCDBusyLoop,w
  2842  022D  1683               	bsf	3,5	;RP0=1, select bank1
  2843  022E  1303               	bcf	3,6	;RP1=0, select bank1
  2844  022F  0487               	iorwf	7,f	;volatile
  2845                           
  2846                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  2847  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2848  0231  1303               	bcf	3,6	;RP1=0, select bank0
  2849  0232  1507               	bsf	7,2	;volatile
  2850                           
  2851                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  2852  0233  1087               	bcf	7,1	;volatile
  2853                           
  2854                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2855  0234  2A35               	nop2	;2 cycle nop
  2856  0235                     l1767:	
  2857                           ;lcd_hd44780_pic16.c: 153: do
  2858                           
  2859                           
  2860                           ;lcd_hd44780_pic16.c: 154: {
  2861                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  2862  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0237  1587               	bsf	7,3	;volatile
  2865                           
  2866                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2867  0238  2A39               	nop2	;2 cycle nop
  2868                           
  2869                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  2870  0239  1283               	bcf	3,5	;RP0=0, select bank0
  2871  023A  1303               	bcf	3,6	;RP1=0, select bank0
  2872  023B  0807               	movf	7,w	;volatile
  2873  023C  00F4               	movwf	??_LCDBusyLoop
  2874  023D  3004               	movlw	4
  2875  023E                     u1415:	
  2876  023E  1003               	clrc
  2877  023F  0CF4               	rrf	??_LCDBusyLoop,f
  2878  0240  3EFF               	addlw	-1
  2879  0241  1D03               	skipz
  2880  0242  2A3E               	goto	u1415
  2881  0243  0874               	movf	??_LCDBusyLoop,w
  2882  0244  00F5               	movwf	??_LCDBusyLoop+1
  2883  0245  0875               	movf	??_LCDBusyLoop+1,w
  2884  0246  00A2               	movwf	LCDBusyLoop@status
  2885                           
  2886                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  2887  0247  0822               	movf	LCDBusyLoop@status,w
  2888  0248  00F4               	movwf	??_LCDBusyLoop
  2889  0249  3003               	movlw	3
  2890  024A                     u1425:	
  2891  024A  1003               	clrc
  2892  024B  0DF4               	rlf	??_LCDBusyLoop,f
  2893  024C  3EFF               	addlw	-1
  2894  024D  1D03               	skipz
  2895  024E  2A4A               	goto	u1425
  2896  024F  1003               	clrc
  2897  0250  0D74               	rlf	??_LCDBusyLoop,w
  2898  0251  00F5               	movwf	??_LCDBusyLoop+1
  2899  0252  0875               	movf	??_LCDBusyLoop+1,w
  2900  0253  00A2               	movwf	LCDBusyLoop@status
  2901                           
  2902                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2903  0254  2A55               	nop2	;2 cycle nop
  2904                           
  2905                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  2906  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0257  1187               	bcf	7,3	;volatile
  2909                           
  2910                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2911  0258  2A59               	nop2	;2 cycle nop
  2912  0259  2A5A               	nop2	;2 cycle nop
  2913  025A  0000               	nop
  2914                           
  2915                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  2916  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2917  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2918  025D  1587               	bsf	7,3	;volatile
  2919                           
  2920                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2921  025E  2A5F               	nop2	;2 cycle nop
  2922                           
  2923                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  2924  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0261  0807               	movf	7,w	;volatile
  2927  0262  00F4               	movwf	??_LCDBusyLoop
  2928  0263  3004               	movlw	4
  2929  0264                     u1435:	
  2930  0264  1003               	clrc
  2931  0265  0CF4               	rrf	??_LCDBusyLoop,f
  2932  0266  3EFF               	addlw	-1
  2933  0267  1D03               	skipz
  2934  0268  2A64               	goto	u1435
  2935  0269  0874               	movf	??_LCDBusyLoop,w
  2936  026A  00F5               	movwf	??_LCDBusyLoop+1
  2937  026B  0875               	movf	??_LCDBusyLoop+1,w
  2938  026C  00A1               	movwf	LCDBusyLoop@temp
  2939                           
  2940                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  2941  026D  300F               	movlw	15
  2942  026E  00F4               	movwf	??_LCDBusyLoop
  2943  026F  0874               	movf	??_LCDBusyLoop,w
  2944  0270  05A1               	andwf	LCDBusyLoop@temp,f
  2945                           
  2946                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  2947  0271  0822               	movf	LCDBusyLoop@status,w
  2948  0272  0421               	iorwf	LCDBusyLoop@temp,w
  2949  0273  00F4               	movwf	??_LCDBusyLoop
  2950  0274  0874               	movf	??_LCDBusyLoop,w
  2951  0275  00A2               	movwf	LCDBusyLoop@status
  2952                           
  2953                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  2954  0276  0822               	movf	LCDBusyLoop@status,w
  2955  0277  3980               	andlw	128
  2956  0278  00F4               	movwf	??_LCDBusyLoop
  2957  0279  0874               	movf	??_LCDBusyLoop,w
  2958  027A  00A0               	movwf	LCDBusyLoop@busy
  2959                           
  2960                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2961  027B  2A7C               	nop2	;2 cycle nop
  2962                           
  2963                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  2964  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2965  027D  1303               	bcf	3,6	;RP1=0, select bank0
  2966  027E  1187               	bcf	7,3	;volatile
  2967                           
  2968                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2969  027F  2A80               	nop2	;2 cycle nop
  2970  0280  2A81               	nop2	;2 cycle nop
  2971  0281  0000               	nop
  2972                           
  2973                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  2974  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0283  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0284  0820               	movf	LCDBusyLoop@busy,w
  2977  0285  1D03               	btfss	3,2
  2978  0286  2A35               	goto	l1767
  2979                           
  2980                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  2981  0287  1107               	bcf	7,2	;volatile
  2982                           
  2983                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  2984  0288  300F               	movlw	15
  2985  0289  00F4               	movwf	??_LCDBusyLoop
  2986  028A  0874               	movf	??_LCDBusyLoop,w
  2987  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2988  028C  1303               	bcf	3,6	;RP1=0, select bank1
  2989  028D  0587               	andwf	7,f	;volatile
  2990  028E  0008               	return
  2991  028F                     __end_of_LCDBusyLoop:	
  2992                           
  2993                           	psect	text14
  2994  044D                     __ptext14:	
  2995 ;; *************** function _IOInit *****************
  2996 ;; Defined at:
  2997 ;;		line 114 in file "do_am.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		None
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0
  3014 ;;      Totals:         0       0       0       0       0
  3015 ;;Total ram usage:        0 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    1
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _IOInit
  3027  044D                     _IOInit:	
  3028                           
  3029                           ;do_am.c: 117: (TRISAbits.TRISA6 = 1);
  3030                           
  3031                           ;incstack = 0
  3032                           ; Regs used in _IOInit: []
  3033  044D  1683               	bsf	3,5	;RP0=1, select bank1
  3034  044E  1303               	bcf	3,6	;RP1=0, select bank1
  3035  044F  1705               	bsf	5,6	;volatile
  3036                           
  3037                           ;do_am.c: 120: (TRISAbits.TRISA0 = 1);
  3038  0450  1405               	bsf	5,0	;volatile
  3039                           
  3040                           ;do_am.c: 121: ANSELbits.ANS0 = 0;
  3041  0451  1683               	bsf	3,5	;RP0=1, select bank3
  3042  0452  1703               	bsf	3,6	;RP1=1, select bank3
  3043  0453  1008               	bcf	8,0	;volatile
  3044                           
  3045                           ;do_am.c: 123: (TRISAbits.TRISA1 = 1);
  3046  0454  1683               	bsf	3,5	;RP0=1, select bank1
  3047  0455  1303               	bcf	3,6	;RP1=0, select bank1
  3048  0456  1485               	bsf	5,1	;volatile
  3049                           
  3050                           ;do_am.c: 124: ANSELbits.ANS1 = 0;
  3051  0457  1683               	bsf	3,5	;RP0=1, select bank3
  3052  0458  1703               	bsf	3,6	;RP1=1, select bank3
  3053  0459  1088               	bcf	8,1	;volatile
  3054                           
  3055                           ;do_am.c: 125: (TRISAbits.TRISA2 = 1);
  3056  045A  1683               	bsf	3,5	;RP0=1, select bank1
  3057  045B  1303               	bcf	3,6	;RP1=0, select bank1
  3058  045C  1505               	bsf	5,2	;volatile
  3059                           
  3060                           ;do_am.c: 126: ANSELbits.ANS2 = 0;
  3061  045D  1683               	bsf	3,5	;RP0=1, select bank3
  3062  045E  1703               	bsf	3,6	;RP1=1, select bank3
  3063  045F  1108               	bcf	8,2	;volatile
  3064                           
  3065                           ;do_am.c: 127: (TRISAbits.TRISA3 = 1);
  3066  0460  1683               	bsf	3,5	;RP0=1, select bank1
  3067  0461  1303               	bcf	3,6	;RP1=0, select bank1
  3068  0462  1585               	bsf	5,3	;volatile
  3069                           
  3070                           ;do_am.c: 128: ANSELbits.ANS3 = 0;
  3071  0463  1683               	bsf	3,5	;RP0=1, select bank3
  3072  0464  1703               	bsf	3,6	;RP1=1, select bank3
  3073  0465  1188               	bcf	8,3	;volatile
  3074                           
  3075                           ;do_am.c: 130: (TRISAbits.TRISA7 = 0);
  3076  0466  1683               	bsf	3,5	;RP0=1, select bank1
  3077  0467  1303               	bcf	3,6	;RP1=0, select bank1
  3078  0468  1385               	bcf	5,7	;volatile
  3079                           
  3080                           ;do_am.c: 132: (TRISBbits.TRISB0 = 0);
  3081  0469  1006               	bcf	6,0	;volatile
  3082                           
  3083                           ;do_am.c: 133: ANSELHbits.ANS12 = 0;
  3084  046A  1683               	bsf	3,5	;RP0=1, select bank3
  3085  046B  1703               	bsf	3,6	;RP1=1, select bank3
  3086  046C  1209               	bcf	9,4	;volatile
  3087                           
  3088                           ;do_am.c: 135: (TRISBbits.TRISB1 = 0);
  3089  046D  1683               	bsf	3,5	;RP0=1, select bank1
  3090  046E  1303               	bcf	3,6	;RP1=0, select bank1
  3091  046F  1086               	bcf	6,1	;volatile
  3092                           
  3093                           ;do_am.c: 136: ANSELHbits.ANS10 = 0;
  3094  0470  1683               	bsf	3,5	;RP0=1, select bank3
  3095  0471  1703               	bsf	3,6	;RP1=1, select bank3
  3096  0472  1109               	bcf	9,2	;volatile
  3097                           
  3098                           ;do_am.c: 138: (TRISBbits.TRISB2 = 0);
  3099  0473  1683               	bsf	3,5	;RP0=1, select bank1
  3100  0474  1303               	bcf	3,6	;RP1=0, select bank1
  3101  0475  1106               	bcf	6,2	;volatile
  3102                           
  3103                           ;do_am.c: 139: ANSELHbits.ANS8 = 0;
  3104  0476  1683               	bsf	3,5	;RP0=1, select bank3
  3105  0477  1703               	bsf	3,6	;RP1=1, select bank3
  3106  0478  1009               	bcf	9,0	;volatile
  3107                           
  3108                           ;do_am.c: 141: (TRISBbits.TRISB3 = 0);
  3109  0479  1683               	bsf	3,5	;RP0=1, select bank1
  3110  047A  1303               	bcf	3,6	;RP1=0, select bank1
  3111  047B  1186               	bcf	6,3	;volatile
  3112                           
  3113                           ;do_am.c: 142: ANSELHbits.ANS9 = 0;
  3114  047C  1683               	bsf	3,5	;RP0=1, select bank3
  3115  047D  1703               	bsf	3,6	;RP1=1, select bank3
  3116  047E  1089               	bcf	9,1	;volatile
  3117                           
  3118                           ;do_am.c: 144: RA7 = 1;
  3119  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3120  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3121  0481  1785               	bsf	5,7	;volatile
  3122                           
  3123                           ;do_am.c: 147: (TRISBbits.TRISB4 = 1);
  3124  0482  1683               	bsf	3,5	;RP0=1, select bank1
  3125  0483  1303               	bcf	3,6	;RP1=0, select bank1
  3126  0484  1606               	bsf	6,4	;volatile
  3127                           
  3128                           ;do_am.c: 148: ANSELHbits.ANS11 = 0;
  3129  0485  1683               	bsf	3,5	;RP0=1, select bank3
  3130  0486  1703               	bsf	3,6	;RP1=1, select bank3
  3131  0487  1189               	bcf	9,3	;volatile
  3132                           
  3133                           ;do_am.c: 150: (TRISBbits.TRISB6 = 1);
  3134  0488  1683               	bsf	3,5	;RP0=1, select bank1
  3135  0489  1303               	bcf	3,6	;RP1=0, select bank1
  3136  048A  1706               	bsf	6,6	;volatile
  3137                           
  3138                           ;do_am.c: 152: (TRISBbits.TRISB5 = 1);
  3139  048B  1686               	bsf	6,5	;volatile
  3140                           
  3141                           ;do_am.c: 153: ANSELHbits.ANS13 = 0;
  3142  048C  1683               	bsf	3,5	;RP0=1, select bank3
  3143  048D  1703               	bsf	3,6	;RP1=1, select bank3
  3144  048E  1289               	bcf	9,5	;volatile
  3145                           
  3146                           ;do_am.c: 155: (TRISBbits.TRISB7 = 1);
  3147  048F  1683               	bsf	3,5	;RP0=1, select bank1
  3148  0490  1303               	bcf	3,6	;RP1=0, select bank1
  3149  0491  1786               	bsf	6,7	;volatile
  3150  0492  0008               	return
  3151  0493                     __end_of_IOInit:	
  3152                           
  3153                           	psect	text15
  3154  0557                     __ptext15:	
  3155 ;; *************** function _ADCInit *****************
  3156 ;; Defined at:
  3157 ;;		line 7 in file "adc_pic16.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0
  3174 ;;      Totals:         0       0       0       0       0
  3175 ;;Total ram usage:        0 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_main
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _ADCInit
  3187  0557                     _ADCInit:	
  3188                           
  3189                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  3193  0557  1683               	bsf	3,5	;RP0=1, select bank1
  3194  0558  1303               	bcf	3,6	;RP1=0, select bank1
  3195  0559  1686               	bsf	6,5	;volatile
  3196                           
  3197                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  3198  055A  1683               	bsf	3,5	;RP0=1, select bank3
  3199  055B  1703               	bsf	3,6	;RP1=1, select bank3
  3200  055C  1689               	bsf	9,5	;volatile
  3201                           
  3202                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  3203  055D  1683               	bsf	3,5	;RP0=1, select bank1
  3204  055E  1303               	bcf	3,6	;RP1=0, select bank1
  3205  055F  121F               	bcf	31,4	;volatile
  3206                           
  3207                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  3208  0560  30C0               	movlw	192
  3209  0561  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0562  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0563  049F               	iorwf	31,f	;volatile
  3212                           
  3213                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  3214  0564  1683               	bsf	3,5	;RP0=1, select bank1
  3215  0565  1303               	bcf	3,6	;RP1=0, select bank1
  3216  0566  179F               	bsf	31,7	;volatile
  3217                           
  3218                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  3219  0567  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0568  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0569  141F               	bsf	31,0	;volatile
  3222  056A  0008               	return
  3223  056B                     __end_of_ADCInit:	
  3224                           
  3225                           	psect	text16
  3226  059D                     __ptext16:	
  3227 ;; *************** function _ISR *****************
  3228 ;; Defined at:
  3229 ;;		line 158 in file "do_am.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		None
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0
  3245 ;;      Temps:          4       0       0       0       0
  3246 ;;      Totals:         4       0       0       0       0
  3247 ;;Total ram usage:        4 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		Interrupt level 1
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _ISR
  3258  059D                     _ISR:	
  3259  059D  0873               	movf	??_ISR+3,w
  3260  059E  00FF               	movwf	127
  3261  059F  0872               	movf	??_ISR+2,w
  3262  05A0  008A               	movwf	10
  3263  05A1  0871               	movf	??_ISR+1,w
  3264  05A2  0084               	movwf	4
  3265  05A3  0E70               	swapf	??_ISR^(0+-128),w
  3266  05A4  0083               	movwf	3
  3267  05A5  0EFE               	swapf	126,f
  3268  05A6  0E7E               	swapf	126,w
  3269  05A7  0009               	retfie
  3270  05A8                     __end_of_ISR:	
  3271  007E                     btemp	set	126	;btemp
  3272  007E                     wtemp	set	126
  3273  007E                     wtemp0	set	126
  3274  0080                     wtemp1	set	128
  3275  0082                     wtemp2	set	130
  3276  0084                     wtemp3	set	132
  3277  0086                     wtemp4	set	134
  3278  0088                     wtemp5	set	136
  3279  007F                     wtemp6	set	127
  3280  007E                     ttemp	set	126
  3281  007E                     ttemp0	set	126
  3282  0081                     ttemp1	set	129
  3283  0084                     ttemp2	set	132
  3284  0087                     ttemp3	set	135
  3285  007F                     ttemp4	set	127
  3286  007E                     ltemp	set	126
  3287  007E                     ltemp0	set	126
  3288  0082                     ltemp1	set	130
  3289  0086                     ltemp2	set	134
  3290  0080                     ltemp3	set	128
  3291                           
  3292                           	psect	intentry
  3293  0004                     __pintentry:	
  3294                           ;incstack = 0
  3295                           ; Regs used in _ISR: []
  3296                           
  3297  0004                     interrupt_function:	
  3298  007E                     saved_w	set	btemp
  3299  0004  00FE               	movwf	btemp
  3300  0005  0E03               	swapf	3,w
  3301  0006  00F0               	movwf	??_ISR
  3302  0007  0804               	movf	4,w
  3303  0008  00F1               	movwf	??_ISR+1
  3304  0009  080A               	movf	10,w
  3305  000A  00F2               	movwf	??_ISR+2
  3306  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3307  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3308  000D  087F               	movf	btemp+1,w
  3309  000E  00F3               	movwf	??_ISR+3
  3310  000F  120A  118A  2D9D   	ljmp	_ISR


Data Sizes:
    Strings     25
    Constant    0
    Data        16
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     33      79
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S454$name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    g_menu.items.name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_7(CODE[1]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[1]), 

    main@byte	PTR struct . size(1) Largest target is 23
		 -> msg(BANK0[23]), 

    main@smsg	PTR unsigned char  size(1) Largest target is 23
		 -> msg(BANK0[23]), 

    pmsg	PTR struct . size(1) Largest target is 23
		 -> msg(BANK0[23]), 

    sp__memcpy	PTR void  size(1) Largest target is 0

    crc_verify@pmsg	PTR struct . size(1) Largest target is 23
		 -> msg(BANK0[23]), 

    crc_calculate@pmsg	PTR struct . size(1) Largest target is 23
		 -> msg(BANK0[23]), 


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDWriteString
    _main->_crc_verify
    _crc_verify->_crc_calculate
    _MenuInit->_LoadMenuItem
    _LoadMenuItem->_eeprom_read
    _LCDWriteString->_LCDByte
    _LCDWriteInt->___awdiv
    _LCDWriteInt->___awmod
    _LCDWriteInt->_crc_verify
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCDWriteInt
    _crc_verify->_crc_calculate
    _MenuInit->_LoadMenuItem
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   12637
                                             23 BANK0     10    10      0
                            _ADCInit
                             _IOInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                           _MenuInit
                         _crc_verify
 ---------------------------------------------------------------------------------
 (1) _crc_verify                                           3     3      0     495
                                              6 COMMON     2     2      0
                                              7 BANK0      1     1      0
                      _crc_calculate
 ---------------------------------------------------------------------------------
 (2) _crc_calculate                                        9     7      2     400
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _MenuInit                                             1     1      0      93
                                              1 BANK0      1     1      0
                       _LoadMenuItem
 ---------------------------------------------------------------------------------
 (2) _LoadMenuItem                                         3     3      0      93
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     4      0    2072
                                              7 COMMON     1     1      0
                                              9 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    3679
                                              9 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
                         _crc_verify (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                              4 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     599
                                              4 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1943
                                              9 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    2127
                                              7 COMMON     1     1      0
                                              9 BANK0      2     1      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1637
                                              6 COMMON     1     0      1
                                              3 BANK0      6     6      0
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     176
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _IOInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _IOInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
     _crc_verify (ARG)
       _crc_calculate
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _MenuInit
     _LoadMenuItem
       _eeprom_read
   _crc_verify
     _crc_calculate

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      59      12        0.0%
ABS                  0      0      59       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jun 25 16:03:53 2016

            ?_LCDBusyLoop 0070                __CFG_CP$ON 0000                         pc 0002  
                      _RD 0C60               __CFG_CPD$ON 0000                        _WR 0C61  
            ___awdiv@sign 0022                        fsr 0004               __CFG_LVP$ON 0000  
                     l122 03C2                       l123 03C3                       l171 04F0  
                     l243 053D                       l172 04D9                       _GIE 005F  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
                     _RA3 002B                       _RC1 0039                       _RC2 003A  
                     _RA6 002E                       _RC3 003B                       _RA7 002F  
                     _ISR 059D                       _msg 004A                       fsr0 0004  
         __end_of_ADCInit 056B                       indf 0000              ___awmod@sign 0022  
            __CFG_IESO$ON 0000   LCDWriteInt@field_length 002B           __end_of_LCDByte 0400  
         __end_of_LCDInit 02F3              ?_LCDWriteInt 0029                      ?_ISR 0070  
             LCDByte@temp 0028                      l2021 04E2                      l2015 04DB  
                    l2017 04DD                      l2041 0325                      l2131 0061  
                    l2125 0058                      l2055 02F7                      l2057 034C  
                    l2049 0333                      l2137 008A                      l2083 0148  
                    l2139 00AA                      l2093 0192                      l2085 017D  
                    l2165 00F2                      l2159 00DF                      l1901 03A4  
                    l1823 01F7                      l1913 040C                      l1825 0220  
                    l1931 0435                      l1925 0419                      l1917 0413  
                    l1767 0235                      l1927 0427                      l1935 0440  
                    l1875 0365                      l1939 0448                      l1893 0391  
                    l1885 036D                      l1869 035A             ?_LoadMenuItem 0070  
                    l1887 037B                      l1897 039C                      STR_1 050A  
            __CFG_WDTE$ON 0000                      STR_2 051A                      STR_3 0506  
                    STR_4 050B                      STR_5 0510                      STR_6 0515  
                    u1415 023E                      u1425 024A                      u1505 03E6  
                    u1435 0264                      u1700 053A                      u2077 0296  
                    u1545 0370                      u1465 0207                      u1705 0536  
                    u1475 03AF                      u1565 037C                      u1645 041C  
                    u1495 03CA                      u1575 0388                      u1585 0392  
                    u1665 042D                      u1675 0436                      u1835 019F  
                    u1950 00B1                      u1960 00B2                      _WREN 0C62  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0039  
                    _mode 0078        __size_of_LCDGotoXY 0026                      _pmsg 006E  
                    btemp 007E             __CFG_BOREN$ON 0000                      ltemp 007E  
                    start 0012                      ttemp 007E                      wtemp 007E  
           __CFG_MCLRE$ON 0000                     ??_ISR 0070                     ?_main 0070  
         __end_of___awdiv 03A9                     _EEADR 010D           __end_of___awmod 044D  
                   _CARRY 0018              LCDInit@style 002B           ___awdiv@divisor 0074  
         ___awdiv@counter 0021                     _PORTC 0007                     _TRISC 0087  
          ??_LoadMenuItem 0076                     main@i 003D                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 0015  
            __end_of_main 011A          __end_of_MenuInit 04D1                 ??_ADCInit 0074  
                  ??_main 0037         __end_of_LCDGotoXY 04F7             LCDByte@isdata 0076  
               ??_LCDByte 0023                 ??_LCDInit 0029                    _ADRESH 001E  
                  _ADRESL 009E             main@count_374 003B                    _EEDATA 010C  
                  _EECON1 018C                    _EECON2 018D          ___awdiv@dividend 0076  
                  _IOInit 044D            __CFG_PWRTE$OFF 0000            _LCDWriteString 02F3  
    __size_of_eeprom_read 001B                 ??___awdiv 0020                 ??___awmod 0020  
                  _g_menu 0041      __size_of_LCDBusyLoop 0068          ___awdiv@quotient 0023  
         ___awmod@divisor 0074           ___awmod@counter 0021              __pdataCOMMON 0078  
            LCDWriteInt@i 0035              LCDWriteInt@j 0033                    saved_w 007E  
    __size_of_LCDWriteInt 009F   __end_of__initialization 0035           eeprom_read@addr 0075  
  __end_of_LCDWriteString 034E                 LCDByte@hn 0025                 LCDByte@ln 0026  
          __pcstackCOMMON 0070              __pidataBANK0 058F          crc_calculate@crc 0023  
    __end_of_LoadMenuItem 057E     __end_of_crc_calculate 0227                __pbssBANK0 0041  
                 ?_IOInit 0070                 ?_MenuInit 0070           ?_LCDWriteString 0070  
              __pmaintext 0039                __pintentry 0004                   _ADCInit 0557  
              _crc_verify 051F                   _LCDByte 03A9                   _LCDInit 028F  
              __stringtab 0500                ??_MenuInit 0021           __size_of_IOInit 0046  
                 ___cgram 0061                   ___awdiv 034E                   ___awmod 0400  
               _ANSELbits 0188                   __ptext1 051F                   __ptext2 01B9  
                 __ptext3 0493                   __ptext4 056B                   __ptext5 053C  
                 __ptext6 02F3                   __ptext7 011A                   __ptext8 0400  
                 __ptext9 034E              __size_of_ISR 000B          ___awmod@dividend 0076  
               _LCDGotoXY 04D1                   _submode 0079                   clrloop0 05A9  
                 main@low 003F      end_of_initialization 0035     __size_of_LoadMenuItem 0013  
             ?_crc_verify 0070         LCDWriteString@msg 002B                 _TRISAbits 0085  
               _TRISBbits 0086                 _TRISCbits 0087                ?_LCDGotoXY 0029  
            _LoadMenuItem 056B                LCDInit@__i 002C             ??_eeprom_read 0074  
              LCDGotoXY@x 002A                LCDGotoXY@y 0029            __end_of_IOInit 0493  
        LoadMenuItem@item 0020             ??_LCDBusyLoop 0074         crc_calculate@pmsg 0026  
           __pidataCOMMON 05B0       start_initialization 0015               __end_of_ISR 05A8  
          crc_calculate@i 0025             ??_LCDWriteInt 002C          ??_LCDWriteString 0077  
                ??_IOInit 0074  __CFG_FOSC$INTRC_NOCLKOUT 0000       __size_of_crc_verify 001D  
       __size_of_MenuInit 003E       __end_of_eeprom_read 0557                init_fetch0 057E  
             __pdataBANK0 0061                  ?_ADCInit 0070       __end_of_LCDBusyLoop 028F  
                ?_LCDByte 0076                  ?_LCDInit 0070                  LCDByte@c 0027  
               ___latbits 0002             __pcstackBANK0 0020               ??_LCDGotoXY 0077  
        LCDWriteInt@F1646 0069       __end_of_LCDWriteInt 01B9    __size_of_crc_calculate 006E  
                ?___awdiv 0074                  ?___awmod 0074                 __pstrings 0500  
         LCDBusyLoop@busy 0020           LCDBusyLoop@temp 0021         interrupt_function 0004  
               clear_ram0 05A8               _eeprom_read 053C               _LCDBusyLoop 0227  
        LCDWriteString@cc 002A          __size_of_ADCInit 0014                _ADCON0bits 001F  
             __stringbase 0505                _ADCON1bits 009F              ??_crc_verify 0076  
           _crc_calculate 01B9                 main@count 003E          __size_of_LCDByte 0057  
        __size_of_LCDInit 0064               _LCDWriteInt 011A                  _MenuInit 0493  
      __end_of_crc_verify 053C          __size_of___awdiv 005B          __size_of___awmod 004D  
       LCDBusyLoop@status 0022        __end_of__stringtab 0506            ?_crc_calculate 0074  
              _ANSELHbits 0189                  __ptext10 028F                  __ptext11 04D1  
                __ptext12 03A9                  __ptext13 0227                  __ptext14 044D  
                __ptext15 0557                  __ptext16 059D         __CFG_BOR4V$BOR21V 0000  
           __size_of_main 00E1                  main@byte 0040                  main@revc 003A  
                main@smsg 003C                  init_ram0 0582                  intlevel1 0000  
          LCDWriteInt@val 0029            LCDWriteInt@str 002E                 stringcode 0500  
          crc_verify@pmsg 0027           ??_crc_calculate 0020                  stringdir 0500  
                stringtab 0500       LCDWriteString@count 0029              ?_eeprom_read 0070  
 __size_of_LCDWriteString 005B  
