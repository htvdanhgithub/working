

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jun 22 00:00:48 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  0086                     	;# 
    70  0087                     	;# 
    71  0089                     	;# 
    72  008C                     	;# 
    73  008D                     	;# 
    74  008E                     	;# 
    75  008F                     	;# 
    76  0090                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0093                     	;# 
    81  0093                     	;# 
    82  0094                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  0105                     	;# 
    95  0107                     	;# 
    96  0108                     	;# 
    97  0109                     	;# 
    98  010C                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  0185                     	;# 
   104  0187                     	;# 
   105  0188                     	;# 
   106  0189                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  008F                     	;# 
   152  0090                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  0105                     	;# 
   171  0107                     	;# 
   172  0108                     	;# 
   173  0109                     	;# 
   174  010C                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  0185                     	;# 
   180  0187                     	;# 
   181  0188                     	;# 
   182  0189                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009E                     	;# 
   245  009F                     	;# 
   246  0105                     	;# 
   247  0107                     	;# 
   248  0108                     	;# 
   249  0109                     	;# 
   250  010C                     	;# 
   251  010C                     	;# 
   252  010D                     	;# 
   253  010E                     	;# 
   254  010F                     	;# 
   255  0185                     	;# 
   256  0187                     	;# 
   257  0188                     	;# 
   258  0189                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0089                     	;# 
   300  008C                     	;# 
   301  008D                     	;# 
   302  008E                     	;# 
   303  008F                     	;# 
   304  0090                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0093                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0094                     	;# 
   311  0095                     	;# 
   312  0096                     	;# 
   313  0097                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009A                     	;# 
   317  009B                     	;# 
   318  009C                     	;# 
   319  009D                     	;# 
   320  009E                     	;# 
   321  009F                     	;# 
   322  0105                     	;# 
   323  0107                     	;# 
   324  0108                     	;# 
   325  0109                     	;# 
   326  010C                     	;# 
   327  010C                     	;# 
   328  010D                     	;# 
   329  010E                     	;# 
   330  010F                     	;# 
   331  0185                     	;# 
   332  0187                     	;# 
   333  0188                     	;# 
   334  0189                     	;# 
   335  018C                     	;# 
   336  018D                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0009                     	;# 
   346  000A                     	;# 
   347  000B                     	;# 
   348  000C                     	;# 
   349  000D                     	;# 
   350  000E                     	;# 
   351  000E                     	;# 
   352  000F                     	;# 
   353  0010                     	;# 
   354  0011                     	;# 
   355  0012                     	;# 
   356  0013                     	;# 
   357  0014                     	;# 
   358  0015                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0017                     	;# 
   362  0018                     	;# 
   363  0019                     	;# 
   364  001A                     	;# 
   365  001B                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  001D                     	;# 
   369  001E                     	;# 
   370  001F                     	;# 
   371  0081                     	;# 
   372  0085                     	;# 
   373  0086                     	;# 
   374  0087                     	;# 
   375  0089                     	;# 
   376  008C                     	;# 
   377  008D                     	;# 
   378  008E                     	;# 
   379  008F                     	;# 
   380  0090                     	;# 
   381  0091                     	;# 
   382  0092                     	;# 
   383  0093                     	;# 
   384  0093                     	;# 
   385  0093                     	;# 
   386  0094                     	;# 
   387  0095                     	;# 
   388  0096                     	;# 
   389  0097                     	;# 
   390  0098                     	;# 
   391  0099                     	;# 
   392  009A                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  009F                     	;# 
   398  0105                     	;# 
   399  0107                     	;# 
   400  0108                     	;# 
   401  0109                     	;# 
   402  010C                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  0185                     	;# 
   408  0187                     	;# 
   409  0188                     	;# 
   410  0189                     	;# 
   411  018C                     	;# 
   412  018D                     	;# 
   413                           
   414                           	psect	idataCOMMON
   415  0629                     __pidataCOMMON:	
   416                           
   417                           ;initializer for _mode
   418  0629  3401               	retlw	1
   419                           
   420                           ;initializer for _submode
   421  062A  3401               	retlw	1
   422                           
   423                           	psect	idataBANK0
   424  0608                     __pidataBANK0:	
   425                           
   426                           ;initializer for ___cgram
   427  0608  340C               	retlw	12
   428  0609  3412               	retlw	18
   429  060A  3412               	retlw	18
   430  060B  340C               	retlw	12
   431  060C  3400               	retlw	0
   432  060D  3400               	retlw	0
   433  060E  3400               	retlw	0
   434  060F  3400               	retlw	0
   435                           
   436                           ;initializer for LCDWriteInt@F1646
   437  0610  34F0               	retlw	240
   438  0611  34F0               	retlw	240
   439  0612  34F0               	retlw	240
   440  0613  34F0               	retlw	240
   441  0614  34F0               	retlw	240
   442                           
   443                           ;initializer for _pmsg
   444  0615  3429               	retlw	low (_msg| 0)
   445  001F                     _ADCON0bits	set	31
   446  001E                     _ADRESH	set	30
   447  0007                     _PORTC	set	7
   448  0018                     _CARRY	set	24
   449  005F                     _GIE	set	95
   450  0028                     _RA0	set	40
   451  0029                     _RA1	set	41
   452  002A                     _RA2	set	42
   453  002B                     _RA3	set	43
   454  002E                     _RA6	set	46
   455  002F                     _RA7	set	47
   456  0039                     _RC1	set	57
   457  003A                     _RC2	set	58
   458  003B                     _RC3	set	59
   459  009F                     _ADCON1bits	set	159
   460  009E                     _ADRESL	set	158
   461  0085                     _TRISAbits	set	133
   462  0086                     _TRISBbits	set	134
   463  0087                     _TRISC	set	135
   464  0087                     _TRISCbits	set	135
   465  010D                     _EEADR	set	269
   466  010C                     _EEDATA	set	268
   467  0189                     _ANSELHbits	set	393
   468  0188                     _ANSELbits	set	392
   469  018C                     _EECON1	set	396
   470  018D                     _EECON2	set	397
   471  0C60                     _RD	set	3168
   472  0C61                     _WR	set	3169
   473  0C62                     _WREN	set	3170
   474                           
   475                           	psect	strings
   476  0567                     __pstrings:	
   477  0567                     stringtab:	
   478  0567                     __stringtab:	
   479  0567                     stringcode:	
   480                           ;	String table - string pointers are 1 byte each
   481                           
   482  0567                     stringdir:	
   483  0567  3005               	movlw	high stringdir
   484  0568  008A               	movwf	10
   485  0569  0804               	movf	4,w
   486  056A  0A84               	incf	4,f
   487  056B  0782               	addwf	2,f
   488  056C                     __stringbase:	
   489  056C  3400               	retlw	0
   490  056D                     __end_of__stringtab:	
   491  056D                     STR_2:	
   492  056D  3453               	retlw	83	;'S'
   493  056E  3474               	retlw	116	;'t'
   494  056F  3461               	retlw	97	;'a'
   495  0570  3472               	retlw	114	;'r'
   496  0571  3474               	retlw	116	;'t'
   497  0572  342E               	retlw	46	;'.'
   498  0573  342E               	retlw	46	;'.'
   499  0574  342E               	retlw	46	;'.'
   500  0575  3400               	retlw	0
   501  0576                     STR_5:	
   502  0576  3449               	retlw	73	;'I'
   503  0577  3444               	retlw	68	;'D'
   504  0578  3431               	retlw	49	;'1'
   505  0579  343A               	retlw	58	;':'
   506  057A  3400               	retlw	0
   507  057B                     STR_6:	
   508  057B  3449               	retlw	73	;'I'
   509  057C  3444               	retlw	68	;'D'
   510  057D  3432               	retlw	50	;'2'
   511  057E  343A               	retlw	58	;':'
   512  057F  3400               	retlw	0
   513  0580                     STR_7:	
   514  0580  3449               	retlw	73	;'I'
   515  0581  3444               	retlw	68	;'D'
   516  0582  3433               	retlw	51	;'3'
   517  0583  343A               	retlw	58	;':'
   518  0584  3400               	retlw	0
   519  0585                     STR_8:	
   520  0585  3449               	retlw	73	;'I'
   521  0586  3444               	retlw	68	;'D'
   522  0587  3434               	retlw	52	;'4'
   523  0588  343A               	retlw	58	;':'
   524  0589  3400               	retlw	0
   525  058A                     STR_4:	
   526  058A  3452               	retlw	82	;'R'
   527  058B  3443               	retlw	67	;'C'
   528  058C  3456               	retlw	86	;'V'
   529  058D  343A               	retlw	58	;':'
   530  058E  3400               	retlw	0
   531  0575                     
   532                           ; #config settings
   533  0000                     
   534                           	psect	cinit
   535  0015                     start_initialization:	
   536  0015                     __initialization:	
   537                           
   538                           ; Clear objects allocated to BANK0
   539  0015  1383               	bcf	3,7	;select IRP bank0
   540  0016  3020               	movlw	low __pbssBANK0
   541  0017  0084               	movwf	4
   542  0018  303E               	movlw	low (__pbssBANK0+30)
   543  0019  120A  118A  2621  120A  118A  	fcall	clear_ram0
   544                           
   545                           ; Initialize objects allocated to BANK0
   546  001E  3066               	movlw	low (__pdataBANK0+14)
   547  001F  00FD               	movwf	btemp+-1
   548  0020  3006               	movlw	high __pidataBANK0
   549  0021  00FE               	movwf	btemp
   550  0022  3008               	movlw	low __pidataBANK0
   551  0023  00FF               	movwf	btemp+1
   552  0024  3058               	movlw	low __pdataBANK0
   553  0025  0084               	movwf	4
   554  0026  120A  118A  25FB  120A  118A  	fcall	init_ram0
   555                           
   556                           ; Initialize objects allocated to COMMON
   557  002B  120A  118A  2629  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   558  0030  00F8               	movwf	__pdataCOMMON& (0+127)
   559  0031  120A  118A  262A   	fcall	__pidataCOMMON+1	;fetch initializer
   560  0034  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   561  0035                     end_of_initialization:	
   562                           ;End of C runtime variable initialization code
   563                           
   564  0035                     __end_of__initialization:	
   565  0035  0183               	clrf	3
   566  0036  120A  118A  2839   	ljmp	_main	;jump to C main() function
   567                           
   568                           	psect	dataCOMMON
   569  0078                     __pdataCOMMON:	
   570  0078                     _mode:	
   571  0078                     	ds	1
   572  0079                     _submode:	
   573  0079                     	ds	1
   574                           
   575                           	psect	bssBANK0
   576  0020                     __pbssBANK0:	
   577  0020                     _g_menu:	
   578  0020                     	ds	9
   579  0029                     _msg:	
   580  0029                     	ds	21
   581                           
   582                           	psect	dataBANK0
   583  0058                     __pdataBANK0:	
   584  0058                     ___cgram:	
   585  0058                     	ds	8
   586  0060                     LCDWriteInt@F1646:	
   587  0060                     	ds	5
   588  0065                     _pmsg:	
   589  0065                     	ds	1
   590                           
   591                           	psect	clrtext
   592  0621                     clear_ram0:	
   593                           ;	Called with FSR containing the base address, and
   594                           ;	W with the last address+1
   595                           
   596  0621  0064               	clrwdt	;clear the watchdog before getting into this loop
   597  0622                     clrloop0:	
   598  0622  0180               	clrf	0	;clear RAM location pointed to by FSR
   599  0623  0A84               	incf	4,f	;increment pointer
   600  0624  0604               	xorwf	4,w	;XOR with final address
   601  0625  1903               	btfsc	3,2	;have we reached the end yet?
   602  0626  3400               	retlw	0	;all done for this memory range, return
   603  0627  0604               	xorwf	4,w	;XOR again to restore value
   604  0628  2E22               	goto	clrloop0	;do the next byte
   605                           
   606                           	psect	inittext
   607  05F7                     init_fetch0:	
   608                           ;	Called with low address in FSR and high address in W
   609                           
   610  05F7  087E               	movf	126,w
   611  05F8  008A               	movwf	10
   612  05F9  087F               	movf	127,w
   613  05FA  0082               	movwf	2
   614  05FB                     init_ram0:	
   615                           ;Called with:
   616                           ;	high address of idata address in btemp 
   617                           ;	low address of idata address in btemp+1 
   618                           ;	low address of data in FSR
   619                           ;	high address + 1 of data in btemp-1
   620                           
   621  05FB  25F7  120A  118A   	fcall	init_fetch0
   622  05FE  0080               	movwf	0
   623  05FF  0A84               	incf	4,f
   624  0600  0804               	movf	4,w
   625  0601  067D               	xorwf	125,w
   626  0602  1903               	btfsc	3,2
   627  0603  3400               	retlw	0
   628  0604  0AFF               	incf	127,f
   629  0605  1903               	btfsc	3,2
   630  0606  0AFE               	incf	126,f
   631  0607  2DFB               	goto	init_ram0
   632                           
   633                           	psect	cstackBANK1
   634  00A0                     __pcstackBANK1:	
   635  00A0                     main@count:	
   636                           
   637                           ; 1 bytes @ 0x0
   638  00A0                     	ds	1
   639  00A1                     main@count_333:	
   640                           
   641                           ; 1 bytes @ 0x1
   642  00A1                     	ds	1
   643  00A2                     main@count_381:	
   644                           
   645                           ; 1 bytes @ 0x2
   646  00A2                     	ds	1
   647  00A3                     main@i:	
   648                           
   649                           ; 1 bytes @ 0x3
   650  00A3                     	ds	1
   651  00A4                     main@i_383:	
   652                           
   653                           ; 1 bytes @ 0x4
   654  00A4                     	ds	1
   655  00A5                     main@i_362:	
   656                           
   657                           ; 1 bytes @ 0x5
   658  00A5                     	ds	1
   659  00A6                     main@s:	
   660                           
   661                           ; 1 bytes @ 0x6
   662  00A6                     	ds	1
   663  00A7                     main@byte:	
   664                           
   665                           ; 1 bytes @ 0x7
   666  00A7                     	ds	1
   667  00A8                     main@byte_353:	
   668                           
   669                           ; 1 bytes @ 0x8
   670  00A8                     	ds	1
   671  00A9                     main@byte_363:	
   672                           
   673                           ; 1 bytes @ 0x9
   674  00A9                     	ds	1
   675  00AA                     main@byte_372:	
   676                           
   677                           ; 1 bytes @ 0xA
   678  00AA                     	ds	1
   679                           
   680                           	psect	cstackCOMMON
   681  0070                     __pcstackCOMMON:	
   682  0070                     ?_LCDInit:	
   683  0070                     ?_MenuInit:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_LCDWriteString:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_LCDBusyLoop:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_LoadMenuItem:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_eeprom_read:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_ADCInit:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_IOInit:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_ISR:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ??_ISR:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_main:	
   711                           ; 1 bytes @ 0x0
   712                           
   713                           
   714                           ; 1 bytes @ 0x0
   715  0070                     	ds	4
   716  0074                     ??_LCDBusyLoop:	
   717  0074                     ??_eeprom_read:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     ??_ADCInit:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     ??_IOInit:	
   724                           ; 1 bytes @ 0x4
   725                           
   726  0074                     ?___awdiv:	
   727                           ; 1 bytes @ 0x4
   728                           
   729  0074                     ?___awmod:	
   730                           ; 2 bytes @ 0x4
   731                           
   732  0074                     ___awdiv@divisor:	
   733                           ; 2 bytes @ 0x4
   734                           
   735  0074                     ___awmod@divisor:	
   736                           ; 2 bytes @ 0x4
   737                           
   738                           
   739                           ; 2 bytes @ 0x4
   740  0074                     	ds	1
   741  0075                     eeprom_read@addr:	
   742                           
   743                           ; 1 bytes @ 0x5
   744  0075                     	ds	1
   745  0076                     ?_LCDByte:	
   746  0076                     ??_LoadMenuItem:	
   747                           ; 1 bytes @ 0x6
   748                           
   749  0076                     LCDByte@isdata:	
   750                           ; 1 bytes @ 0x6
   751                           
   752  0076                     ___awdiv@dividend:	
   753                           ; 1 bytes @ 0x6
   754                           
   755  0076                     ___awmod@dividend:	
   756                           ; 2 bytes @ 0x6
   757                           
   758                           
   759                           ; 2 bytes @ 0x6
   760  0076                     	ds	1
   761  0077                     ??_LCDGotoXY:	
   762  0077                     ??_LCDWriteString:	
   763                           ; 1 bytes @ 0x7
   764                           
   765                           
   766                           ; 1 bytes @ 0x7
   767  0077                     	ds	1
   768                           
   769                           	psect	cstackBANK0
   770  003E                     __pcstackBANK0:	
   771  003E                     ??___awdiv:	
   772  003E                     ??___awmod:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  003E                     LCDBusyLoop@busy:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  003E                     LoadMenuItem@item:	
   779                           ; 1 bytes @ 0x0
   780                           
   781                           
   782                           ; 1 bytes @ 0x0
   783  003E                     	ds	1
   784  003F                     ??_MenuInit:	
   785  003F                     LCDBusyLoop@temp:	
   786                           ; 1 bytes @ 0x1
   787                           
   788  003F                     ___awdiv@counter:	
   789                           ; 1 bytes @ 0x1
   790                           
   791  003F                     ___awmod@counter:	
   792                           ; 1 bytes @ 0x1
   793                           
   794                           
   795                           ; 1 bytes @ 0x1
   796  003F                     	ds	1
   797  0040                     LCDBusyLoop@status:	
   798  0040                     ___awdiv@sign:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0040                     ___awmod@sign:	
   802                           ; 1 bytes @ 0x2
   803                           
   804                           
   805                           ; 1 bytes @ 0x2
   806  0040                     	ds	1
   807  0041                     ??_LCDByte:	
   808  0041                     ___awdiv@quotient:	
   809                           ; 1 bytes @ 0x3
   810                           
   811                           
   812                           ; 2 bytes @ 0x3
   813  0041                     	ds	2
   814  0043                     LCDByte@hn:	
   815                           
   816                           ; 1 bytes @ 0x5
   817  0043                     	ds	1
   818  0044                     LCDByte@ln:	
   819                           
   820                           ; 1 bytes @ 0x6
   821  0044                     	ds	1
   822  0045                     LCDByte@c:	
   823                           
   824                           ; 1 bytes @ 0x7
   825  0045                     	ds	1
   826  0046                     LCDByte@temp:	
   827                           
   828                           ; 1 bytes @ 0x8
   829  0046                     	ds	1
   830  0047                     ??_LCDInit:	
   831  0047                     ?_LCDGotoXY:	
   832                           ; 1 bytes @ 0x9
   833                           
   834  0047                     ?_LCDWriteInt:	
   835                           ; 1 bytes @ 0x9
   836                           
   837  0047                     LCDWriteString@count:	
   838                           ; 1 bytes @ 0x9
   839                           
   840  0047                     LCDGotoXY@y:	
   841                           ; 1 bytes @ 0x9
   842                           
   843  0047                     LCDWriteInt@val:	
   844                           ; 1 bytes @ 0x9
   845                           
   846                           
   847                           ; 2 bytes @ 0x9
   848  0047                     	ds	1
   849  0048                     LCDWriteString@cc:	
   850  0048                     LCDGotoXY@x:	
   851                           ; 1 bytes @ 0xA
   852                           
   853                           
   854                           ; 1 bytes @ 0xA
   855  0048                     	ds	1
   856  0049                     LCDInit@style:	
   857  0049                     LCDWriteString@msg:	
   858                           ; 1 bytes @ 0xB
   859                           
   860  0049                     LCDWriteInt@field_length:	
   861                           ; 1 bytes @ 0xB
   862                           
   863                           
   864                           ; 1 bytes @ 0xB
   865  0049                     	ds	1
   866  004A                     ??_LCDWriteInt:	
   867  004A                     LCDInit@__i:	
   868                           ; 1 bytes @ 0xC
   869                           
   870                           
   871                           ; 1 bytes @ 0xC
   872  004A                     	ds	2
   873  004C                     LCDWriteInt@str:	
   874                           
   875                           ; 5 bytes @ 0xE
   876  004C                     	ds	5
   877  0051                     LCDWriteInt@j:	
   878                           
   879                           ; 2 bytes @ 0x13
   880  0051                     	ds	2
   881  0053                     LCDWriteInt@i:	
   882                           
   883                           ; 2 bytes @ 0x15
   884  0053                     	ds	2
   885  0055                     ??_main:	
   886                           
   887                           ; 1 bytes @ 0x17
   888  0055                     	ds	3
   889                           
   890                           	psect	maintext
   891  0039                     __pmaintext:	
   892 ;;
   893 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   894 ;;
   895 ;; *************** function _main *****************
   896 ;; Defined at:
   897 ;;		line 180 in file "do_am.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  byte            1   10[BANK1 ] PTR struct .
   902 ;;		 -> msg(21), 
   903 ;;  byte            1    9[BANK1 ] PTR struct .
   904 ;;		 -> msg(21), 
   905 ;;  byte            1    8[BANK1 ] PTR struct .
   906 ;;		 -> msg(21), 
   907 ;;  byte            1    7[BANK1 ] PTR struct .
   908 ;;		 -> msg(21), 
   909 ;;  i               1    4[BANK1 ] char 
   910 ;;  i               1    5[BANK1 ] unsigned char 
   911 ;;  i               1    3[BANK1 ] char 
   912 ;;  count           1    2[BANK1 ] char 
   913 ;;  count           1    1[BANK1 ] char 
   914 ;;  s               1    6[BANK1 ] PTR unsigned char 
   915 ;;		 -> msg(21), 
   916 ;;  count           1    0[BANK1 ] unsigned char 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : B00/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       0      11       0       0
   928 ;;      Temps:          0       3       0       0       0
   929 ;;      Totals:         0       3      11       0       0
   930 ;;Total ram usage:       14 bytes
   931 ;; Hardware stack levels required when called:    4
   932 ;; This function calls:
   933 ;;		_ADCInit
   934 ;;		_IOInit
   935 ;;		_LCDByte
   936 ;;		_LCDGotoXY
   937 ;;		_LCDInit
   938 ;;		_LCDWriteInt
   939 ;;		_LCDWriteString
   940 ;;		_MenuInit
   941 ;; This function is called by:
   942 ;;		Startup code after reset
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _main
   948  0039                     _main:	
   949                           
   950                           ;do_am.c: 183: LCDInit(0B00000000);
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   954  0039  3000               	movlw	0
   955  003A  120A  118A  2325  120A  118A  	fcall	_LCDInit
   956                           
   957                           ;do_am.c: 186: ADCInit();
   958  003F  120A  118A  25D0  120A  118A  	fcall	_ADCInit
   959                           
   960                           ;do_am.c: 189: IOInit();
   961  0044  120A  118A  24E3  120A  118A  	fcall	_IOInit
   962                           
   963                           ;do_am.c: 191: MenuInit();
   964  0049  120A  118A  2529  120A  118A  	fcall	_MenuInit
   965                           
   966                           ;do_am.c: 197: (LCDByte(0b00000001,0));
   967  004E  01F6               	clrf	LCDByte@isdata
   968  004F  3001               	movlw	1
   969  0050  120A  118A  243F  120A  118A  	fcall	_LCDByte
   970                           
   971                           ;do_am.c: 198: uint8_t count = 0;
   972  0055  1683               	bsf	3,5	;RP0=1, select bank1
   973  0056  1303               	bcf	3,6	;RP1=0, select bank1
   974  0057  01A0               	clrf	main@count^(0+128)
   975  0058                     l2145:	
   976                           ;do_am.c: 199: while(1)
   977                           
   978                           
   979                           ;do_am.c: 200: {
   980                           ;do_am.c: 208: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString(""); for(int8_t i = coun
      +                          t + 0; i < 16; i++) { (LCDByte(' ',1)); } };}; {{ LCDGotoXY(0,1); LCDWriteString("Start.
      +                          ..");};};
   981  0058  1283               	bcf	3,5	;RP0=0, select bank0
   982  0059  1303               	bcf	3,6	;RP1=0, select bank0
   983  005A  01C7               	clrf	LCDGotoXY@y
   984  005B  0AC7               	incf	LCDGotoXY@y,f
   985  005C  3000               	movlw	0
   986  005D  120A  118A  258F  120A  118A  	fcall	_LCDGotoXY
   987  0062  3009               	movlw	(low (((STR_2+8)-__stringbase)| (0+32768)))& (0+255)
   988  0063  120A  118A  2389  120A  118A  	fcall	_LCDWriteString
   989  0068  1283               	bcf	3,5	;RP0=0, select bank0
   990  0069  1303               	bcf	3,6	;RP1=0, select bank0
   991  006A  00D5               	movwf	??_main
   992  006B  0855               	movf	??_main,w
   993  006C  1683               	bsf	3,5	;RP0=1, select bank1
   994  006D  1303               	bcf	3,6	;RP1=0, select bank1
   995  006E  00A1               	movwf	main@count_333^(0+128)
   996  006F  0821               	movf	main@count_333^(0+128),w
   997  0070  1283               	bcf	3,5	;RP0=0, select bank0
   998  0071  1303               	bcf	3,6	;RP1=0, select bank0
   999  0072  00D5               	movwf	??_main
  1000  0073  0855               	movf	??_main,w
  1001  0074  1683               	bsf	3,5	;RP0=1, select bank1
  1002  0075  1303               	bcf	3,6	;RP1=0, select bank1
  1003  0076  00A3               	movwf	main@i^(0+128)
  1004  0077  0823               	movf	main@i^(0+128),w
  1005  0078  3A80               	xorlw	128
  1006  0079  3E70               	addlw	-144
  1007  007A  1803               	btfsc	3,0
  1008  007B  2891               	goto	l2161
  1009  007C                     l2155:	
  1010  007C  01F6               	clrf	LCDByte@isdata
  1011  007D  0AF6               	incf	LCDByte@isdata,f
  1012  007E  3020               	movlw	32
  1013  007F  120A  118A  243F  120A  118A  	fcall	_LCDByte
  1014  0084  3001               	movlw	1
  1015  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0087  00D5               	movwf	??_main
  1018  0088  0855               	movf	??_main,w
  1019  0089  1683               	bsf	3,5	;RP0=1, select bank1
  1020  008A  1303               	bcf	3,6	;RP1=0, select bank1
  1021  008B  07A3               	addwf	main@i^(0+128),f
  1022  008C  0823               	movf	main@i^(0+128),w
  1023  008D  3A80               	xorlw	128
  1024  008E  3E70               	addlw	-144
  1025  008F  1C03               	skipc
  1026  0090  287C               	goto	l2155
  1027  0091                     l2161:	
  1028  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0093  01C7               	clrf	LCDGotoXY@y
  1031  0094  0AC7               	incf	LCDGotoXY@y,f
  1032  0095  3000               	movlw	0
  1033  0096  120A  118A  258F  120A  118A  	fcall	_LCDGotoXY
  1034  009B  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1035  009C  120A  118A  2389  120A  118A  	fcall	_LCDWriteString
  1036                           
  1037                           ;do_am.c: 209: {uint8_t *s = (uint8_t *)pmsg; { { while(1) { if(RA6 == 0) { { BITbits_t 
      +                          *byte = (BITbits_t *)&s[0]; if(1 == 1) { byte->B0 = RA0; byte->B1 = RA1; byte->B2 = RA2;
      +                           byte->B3 = RA3; } else { byte->B4 = RA0; byte->B5 = RA1; byte->B6 = RA2; byte->B7 = RA3
      +                          ;
  1038  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1039  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1040  00A3  0865               	movf	_pmsg,w
  1041  00A4  00D5               	movwf	??_main
  1042  00A5  0855               	movf	??_main,w
  1043  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1044  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1045  00A8  00A6               	movwf	main@s^(0+128)
  1046  00A9  28B4               	goto	l2165
  1047  00AA                     l2179:	
  1048  00AA  3007               	movlw	7
  1049  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1050  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1051  00AD  00D6               	movwf	??_main+1
  1052  00AE  307D               	movlw	125
  1053  00AF  00D5               	movwf	??_main
  1054  00B0                     u2737:	
  1055  00B0  0BD5               	decfsz	??_main,f
  1056  00B1  28B0               	goto	u2737
  1057  00B2  0BD6               	decfsz	??_main+1,f
  1058  00B3  28B0               	goto	u2737
  1059  00B4                     l2165:	
  1060  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1061  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1062  00B6  1B05               	btfsc	5,6	;volatile
  1063  00B7  28AA               	goto	l2179
  1064  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  1065  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  1066  00BA  0826               	movf	main@s^(0+128),w
  1067  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1068  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1069  00BD  00D5               	movwf	??_main
  1070  00BE  0855               	movf	??_main,w
  1071  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1072  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1073  00C1  00A7               	movwf	main@byte^(0+128)
  1074  00C2  0827               	movf	main@byte^(0+128),w
  1075  00C3  0084               	movwf	4
  1076  00C4  1383               	bcf	3,7	;select IRP bank0
  1077  00C5  1000               	bcf	0,0
  1078  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1079  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1080  00C8  1805               	btfsc	5,0	;volatile
  1081  00C9  1400               	bsf	0,0
  1082  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1083  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1084  00CC  0827               	movf	main@byte^(0+128),w
  1085  00CD  0084               	movwf	4
  1086  00CE  1383               	bcf	3,7	;select IRP bank0
  1087  00CF  1080               	bcf	0,1
  1088  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1089  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1090  00D2  1885               	btfsc	5,1	;volatile
  1091  00D3  1480               	bsf	0,1
  1092  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1093  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1094  00D6  0827               	movf	main@byte^(0+128),w
  1095  00D7  0084               	movwf	4
  1096  00D8  1383               	bcf	3,7	;select IRP bank0
  1097  00D9  1100               	bcf	0,2
  1098  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1099  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1100  00DC  1905               	btfsc	5,2	;volatile
  1101  00DD  1500               	bsf	0,2
  1102  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  1103  00DF  1303               	bcf	3,6	;RP1=0, select bank1
  1104  00E0  0827               	movf	main@byte^(0+128),w
  1105  00E1  0084               	movwf	4
  1106  00E2  1383               	bcf	3,7	;select IRP bank0
  1107  00E3  1180               	bcf	0,3
  1108  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1109  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1110  00E6  1985               	btfsc	5,3	;volatile
  1111  00E7  1580               	bsf	0,3
  1112  00E8  28F3               	goto	l90
  1113  00E9                     l2187:	
  1114  00E9  3007               	movlw	7
  1115  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1116  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1117  00EC  00D6               	movwf	??_main+1
  1118  00ED  307D               	movlw	125
  1119  00EE  00D5               	movwf	??_main
  1120  00EF                     u2747:	
  1121  00EF  0BD5               	decfsz	??_main,f
  1122  00F0  28EF               	goto	u2747
  1123  00F1  0BD6               	decfsz	??_main+1,f
  1124  00F2  28EF               	goto	u2747
  1125  00F3                     l90:	
  1126  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1127  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1128  00F5  1B05               	btfsc	5,6	;volatile
  1129  00F6  28E9               	goto	l2187
  1130  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  1131  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  1132  00F9  0826               	movf	main@s^(0+128),w
  1133  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1134  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1135  00FC  00D5               	movwf	??_main
  1136  00FD  0855               	movf	??_main,w
  1137  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  1138  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  1139  0100  00A8               	movwf	main@byte_353^(0+128)
  1140  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1141  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1142  0103  0828               	movf	main@byte_353^(0+128),w
  1143  0104  0084               	movwf	4
  1144  0105  1383               	bcf	3,7	;select IRP bank0
  1145  0106  1200               	bcf	0,4
  1146  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1148  0109  1805               	btfsc	5,0	;volatile
  1149  010A  1600               	bsf	0,4
  1150  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1151  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1152  010D  0828               	movf	main@byte_353^(0+128),w
  1153  010E  0084               	movwf	4
  1154  010F  1383               	bcf	3,7	;select IRP bank0
  1155  0110  1280               	bcf	0,5
  1156  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0113  1885               	btfsc	5,1	;volatile
  1159  0114  1680               	bsf	0,5
  1160  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1161  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1162  0117  0828               	movf	main@byte_353^(0+128),w
  1163  0118  0084               	movwf	4
  1164  0119  1383               	bcf	3,7	;select IRP bank0
  1165  011A  1300               	bcf	0,6
  1166  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1167  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1168  011D  1905               	btfsc	5,2	;volatile
  1169  011E  1700               	bsf	0,6
  1170  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1171  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1172  0121  0828               	movf	main@byte_353^(0+128),w
  1173  0122  0084               	movwf	4
  1174  0123  1383               	bcf	3,7	;select IRP bank0
  1175  0124  1380               	bcf	0,7
  1176  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0127  1985               	btfsc	5,3	;volatile
  1179  0128  1780               	bsf	0,7
  1180  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1181  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1182  012B  01A5               	clrf	main@i_362^(0+128)
  1183  012C  0AA5               	incf	main@i_362^(0+128),f
  1184  012D                     l2213:	
  1185  012D  0826               	movf	main@s^(0+128),w
  1186  012E  0084               	movwf	4
  1187  012F  1383               	bcf	3,7	;select IRP bank0
  1188  0130  0800               	movf	0,w
  1189  0131  0225               	subwf	main@i_362^(0+128),w
  1190  0132  1803               	btfsc	3,0
  1191  0133  29BF               	goto	l2215
  1192  0134  293F               	goto	l98
  1193  0135                     l2201:	
  1194  0135  3007               	movlw	7
  1195  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0138  00D6               	movwf	??_main+1
  1198  0139  307D               	movlw	125
  1199  013A  00D5               	movwf	??_main
  1200  013B                     u2757:	
  1201  013B  0BD5               	decfsz	??_main,f
  1202  013C  293B               	goto	u2757
  1203  013D  0BD6               	decfsz	??_main+1,f
  1204  013E  293B               	goto	u2757
  1205  013F                     l98:	
  1206  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0141  1B05               	btfsc	5,6	;volatile
  1209  0142  2935               	goto	l2201
  1210  0143  1683               	bsf	3,5	;RP0=1, select bank1
  1211  0144  1303               	bcf	3,6	;RP1=0, select bank1
  1212  0145  0825               	movf	main@i_362^(0+128),w
  1213  0146  0726               	addwf	main@s^(0+128),w
  1214  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0149  00D5               	movwf	??_main
  1217  014A  0855               	movf	??_main,w
  1218  014B  1683               	bsf	3,5	;RP0=1, select bank1
  1219  014C  1303               	bcf	3,6	;RP1=0, select bank1
  1220  014D  00A9               	movwf	main@byte_363^(0+128)
  1221  014E  0829               	movf	main@byte_363^(0+128),w
  1222  014F  0084               	movwf	4
  1223  0150  1383               	bcf	3,7	;select IRP bank0
  1224  0151  1000               	bcf	0,0
  1225  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0154  1805               	btfsc	5,0	;volatile
  1228  0155  1400               	bsf	0,0
  1229  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1230  0157  1303               	bcf	3,6	;RP1=0, select bank1
  1231  0158  0829               	movf	main@byte_363^(0+128),w
  1232  0159  0084               	movwf	4
  1233  015A  1383               	bcf	3,7	;select IRP bank0
  1234  015B  1080               	bcf	0,1
  1235  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1236  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1237  015E  1885               	btfsc	5,1	;volatile
  1238  015F  1480               	bsf	0,1
  1239  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1240  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1241  0162  0829               	movf	main@byte_363^(0+128),w
  1242  0163  0084               	movwf	4
  1243  0164  1383               	bcf	3,7	;select IRP bank0
  1244  0165  1100               	bcf	0,2
  1245  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0168  1905               	btfsc	5,2	;volatile
  1248  0169  1500               	bsf	0,2
  1249  016A  1683               	bsf	3,5	;RP0=1, select bank1
  1250  016B  1303               	bcf	3,6	;RP1=0, select bank1
  1251  016C  0829               	movf	main@byte_363^(0+128),w
  1252  016D  0084               	movwf	4
  1253  016E  1383               	bcf	3,7	;select IRP bank0
  1254  016F  1180               	bcf	0,3
  1255  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0172  1985               	btfsc	5,3	;volatile
  1258  0173  1580               	bsf	0,3
  1259  0174  297F               	goto	l104
  1260  0175                     l2209:	
  1261  0175  3007               	movlw	7
  1262  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0178  00D6               	movwf	??_main+1
  1265  0179  307D               	movlw	125
  1266  017A  00D5               	movwf	??_main
  1267  017B                     u2767:	
  1268  017B  0BD5               	decfsz	??_main,f
  1269  017C  297B               	goto	u2767
  1270  017D  0BD6               	decfsz	??_main+1,f
  1271  017E  297B               	goto	u2767
  1272  017F                     l104:	
  1273  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0181  1B05               	btfsc	5,6	;volatile
  1276  0182  2975               	goto	l2209
  1277  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1278  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1279  0185  0825               	movf	main@i_362^(0+128),w
  1280  0186  0726               	addwf	main@s^(0+128),w
  1281  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0189  00D5               	movwf	??_main
  1284  018A  0855               	movf	??_main,w
  1285  018B  1683               	bsf	3,5	;RP0=1, select bank1
  1286  018C  1303               	bcf	3,6	;RP1=0, select bank1
  1287  018D  00AA               	movwf	main@byte_372^(0+128)
  1288  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1289  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1290  0190  082A               	movf	main@byte_372^(0+128),w
  1291  0191  0084               	movwf	4
  1292  0192  1383               	bcf	3,7	;select IRP bank0
  1293  0193  1200               	bcf	0,4
  1294  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0196  1805               	btfsc	5,0	;volatile
  1297  0197  1600               	bsf	0,4
  1298  0198  1683               	bsf	3,5	;RP0=1, select bank1
  1299  0199  1303               	bcf	3,6	;RP1=0, select bank1
  1300  019A  082A               	movf	main@byte_372^(0+128),w
  1301  019B  0084               	movwf	4
  1302  019C  1383               	bcf	3,7	;select IRP bank0
  1303  019D  1280               	bcf	0,5
  1304  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1305  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1306  01A0  1885               	btfsc	5,1	;volatile
  1307  01A1  1680               	bsf	0,5
  1308  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1309  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  1310  01A4  082A               	movf	main@byte_372^(0+128),w
  1311  01A5  0084               	movwf	4
  1312  01A6  1383               	bcf	3,7	;select IRP bank0
  1313  01A7  1300               	bcf	0,6
  1314  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1315  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1316  01AA  1905               	btfsc	5,2	;volatile
  1317  01AB  1700               	bsf	0,6
  1318  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1319  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1320  01AE  082A               	movf	main@byte_372^(0+128),w
  1321  01AF  0084               	movwf	4
  1322  01B0  1383               	bcf	3,7	;select IRP bank0
  1323  01B1  1380               	bcf	0,7
  1324  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1325  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1326  01B4  1985               	btfsc	5,3	;volatile
  1327  01B5  1780               	bsf	0,7
  1328  01B6  3001               	movlw	1
  1329  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1330  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1331  01B9  00D5               	movwf	??_main
  1332  01BA  0855               	movf	??_main,w
  1333  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1334  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1335  01BD  07A5               	addwf	main@i_362^(0+128),f
  1336  01BE  292D               	goto	l2213
  1337  01BF                     l2215:	
  1338                           
  1339                           ;do_am.c: 210: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString(""); for(int8_t i = coun
      +                          t + 0; i < 16; i++) { (LCDByte(' ',1)); } };}; {{ LCDGotoXY(0,1); LCDWriteString("RCV:")
      +                          ;};}; {LCDWriteInt(pmsg->msglen, 3);};
  1340  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1341  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1342  01C1  01C7               	clrf	LCDGotoXY@y
  1343  01C2  0AC7               	incf	LCDGotoXY@y,f
  1344  01C3  3000               	movlw	0
  1345  01C4  120A  118A  258F  120A  118A  	fcall	_LCDGotoXY
  1346  01C9  3009               	movlw	(low (((STR_2+8)-__stringbase)| (0+32768)))& (0+255)
  1347  01CA  120A  118A  2389  120A  118A  	fcall	_LCDWriteString
  1348  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1349  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1350  01D1  00D5               	movwf	??_main
  1351  01D2  0855               	movf	??_main,w
  1352  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1353  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1354  01D5  00A2               	movwf	main@count_381^(0+128)
  1355  01D6  0822               	movf	main@count_381^(0+128),w
  1356  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1357  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1358  01D9  00D5               	movwf	??_main
  1359  01DA  0855               	movf	??_main,w
  1360  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  1361  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  1362  01DD  00A4               	movwf	main@i_383^(0+128)
  1363  01DE  0824               	movf	main@i_383^(0+128),w
  1364  01DF  3A80               	xorlw	128
  1365  01E0  3E70               	addlw	-144
  1366  01E1  1803               	btfsc	3,0
  1367  01E2  29F8               	goto	l2229
  1368  01E3                     l2223:	
  1369  01E3  01F6               	clrf	LCDByte@isdata
  1370  01E4  0AF6               	incf	LCDByte@isdata,f
  1371  01E5  3020               	movlw	32
  1372  01E6  120A  118A  243F  120A  118A  	fcall	_LCDByte
  1373  01EB  3001               	movlw	1
  1374  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1375  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1376  01EE  00D5               	movwf	??_main
  1377  01EF  0855               	movf	??_main,w
  1378  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  1379  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  1380  01F2  07A4               	addwf	main@i_383^(0+128),f
  1381  01F3  0824               	movf	main@i_383^(0+128),w
  1382  01F4  3A80               	xorlw	128
  1383  01F5  3E70               	addlw	-144
  1384  01F6  1C03               	skipc
  1385  01F7  29E3               	goto	l2223
  1386  01F8                     l2229:	
  1387  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1388  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1389  01FA  01C7               	clrf	LCDGotoXY@y
  1390  01FB  0AC7               	incf	LCDGotoXY@y,f
  1391  01FC  3000               	movlw	0
  1392  01FD  120A  118A  258F  120A  118A  	fcall	_LCDGotoXY
  1393  0202  301E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1394  0203  120A  118A  2389  120A  118A  	fcall	_LCDWriteString
  1395  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1397  020A  0865               	movf	_pmsg,w
  1398  020B  0084               	movwf	4
  1399  020C  1383               	bcf	3,7	;select IRP bank0
  1400  020D  0800               	movf	0,w
  1401  020E  00D5               	movwf	??_main
  1402  020F  01D6               	clrf	??_main+1
  1403  0210  0855               	movf	??_main,w
  1404  0211  00C7               	movwf	LCDWriteInt@val
  1405  0212  0856               	movf	??_main+1,w
  1406  0213  00C8               	movwf	LCDWriteInt@val+1
  1407  0214  3003               	movlw	3
  1408  0215  00D7               	movwf	??_main+2
  1409  0216  0857               	movf	??_main+2,w
  1410  0217  00C9               	movwf	LCDWriteInt@field_length
  1411  0218  120A  118A  221E  120A  118A  	fcall	_LCDWriteInt
  1412  021D  2858               	goto	l2145
  1413  021E                     __end_of_main:	
  1414                           
  1415                           	psect	text1
  1416  0529                     __ptext1:	
  1417 ;; *************** function _MenuInit *****************
  1418 ;; Defined at:
  1419 ;;		line 7 in file "menu.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1433 ;;      Params:         0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0
  1435 ;;      Temps:          0       1       0       0       0
  1436 ;;      Totals:         0       1       0       0       0
  1437 ;;Total ram usage:        1 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    3
  1440 ;; This function calls:
  1441 ;;		_LoadMenuItem
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _MenuInit
  1449  0529                     _MenuInit:	
  1450                           
  1451                           ;menu.c: 9: g_menu.items[0].name = "ID1:";
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _MenuInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1455  0529  300A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1456  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1457  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1458  052C  00BF               	movwf	??_MenuInit
  1459  052D  083F               	movf	??_MenuInit,w
  1460  052E  00A1               	movwf	low ((_g_menu| 0+1))
  1461                           
  1462                           ;menu.c: 10: g_menu.items[0].value = LoadMenuItem(0);
  1463  052F  3000               	movlw	0
  1464  0530  120A  118A  25E4  120A  118A  	fcall	_LoadMenuItem
  1465  0535  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0536  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0537  00BF               	movwf	??_MenuInit
  1468  0538  083F               	movf	??_MenuInit,w
  1469  0539  00A0               	movwf	_g_menu
  1470                           
  1471                           ;menu.c: 12: g_menu.items[1].name = "ID2:";
  1472  053A  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1473  053B  00BF               	movwf	??_MenuInit
  1474  053C  083F               	movf	??_MenuInit,w
  1475  053D  00A3               	movwf	low ((_g_menu| 0+3))
  1476                           
  1477                           ;menu.c: 13: g_menu.items[1].value = LoadMenuItem(1);
  1478  053E  3001               	movlw	1
  1479  053F  120A  118A  25E4  120A  118A  	fcall	_LoadMenuItem
  1480  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0546  00BF               	movwf	??_MenuInit
  1483  0547  083F               	movf	??_MenuInit,w
  1484  0548  00A2               	movwf	_g_menu+2
  1485                           
  1486                           ;menu.c: 15: g_menu.items[2].name = "ID3:";
  1487  0549  3014               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1488  054A  00BF               	movwf	??_MenuInit
  1489  054B  083F               	movf	??_MenuInit,w
  1490  054C  00A5               	movwf	low ((_g_menu| 0+5))
  1491                           
  1492                           ;menu.c: 16: g_menu.items[2].value = LoadMenuItem(2);
  1493  054D  3002               	movlw	2
  1494  054E  120A  118A  25E4  120A  118A  	fcall	_LoadMenuItem
  1495  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1496  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1497  0555  00BF               	movwf	??_MenuInit
  1498  0556  083F               	movf	??_MenuInit,w
  1499  0557  00A4               	movwf	_g_menu+4
  1500                           
  1501                           ;menu.c: 18: g_menu.items[3].name = "ID4:";
  1502  0558  3019               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1503  0559  00BF               	movwf	??_MenuInit
  1504  055A  083F               	movf	??_MenuInit,w
  1505  055B  00A7               	movwf	low ((_g_menu| 0+7))
  1506                           
  1507                           ;menu.c: 19: g_menu.items[3].value = LoadMenuItem(3);
  1508  055C  3003               	movlw	3
  1509  055D  120A  118A  25E4   	fcall	_LoadMenuItem
  1510  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0562  00BF               	movwf	??_MenuInit
  1513  0563  083F               	movf	??_MenuInit,w
  1514  0564  00A6               	movwf	_g_menu+6
  1515                           
  1516                           ;menu.c: 21: g_menu.index = 0;
  1517  0565  01A8               	clrf	_g_menu+8
  1518  0566  0008               	return
  1519  0567                     __end_of_MenuInit:	
  1520                           
  1521                           	psect	text2
  1522  05E4                     __ptext2:	
  1523 ;; *************** function _LoadMenuItem *****************
  1524 ;; Defined at:
  1525 ;;		line 36 in file "menu.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  item            1    wreg     unsigned char 
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;  item            1    0[BANK0 ] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      unsigned char 
  1532 ;; Registers used:
  1533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1539 ;;      Params:         0       0       0       0       0
  1540 ;;      Locals:         0       1       0       0       0
  1541 ;;      Temps:          2       0       0       0       0
  1542 ;;      Totals:         2       1       0       0       0
  1543 ;;Total ram usage:        3 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    2
  1546 ;; This function calls:
  1547 ;;		_eeprom_read
  1548 ;; This function is called by:
  1549 ;;		_MenuInit
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _LoadMenuItem
  1555  05E4                     _LoadMenuItem:	
  1556                           
  1557                           ;incstack = 0
  1558                           ; Regs used in _LoadMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1559                           ;LoadMenuItem@item stored from wreg
  1560  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1561  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1562  05E6  00BE               	movwf	LoadMenuItem@item
  1563                           
  1564                           ;menu.c: 38: g_menu.items[item].value = eeprom_read(item);
  1565  05E7  083E               	movf	LoadMenuItem@item,w
  1566  05E8  120A  118A  25B5   	fcall	_eeprom_read
  1567  05EB  00F6               	movwf	??_LoadMenuItem
  1568  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1569  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1570  05EE  083E               	movf	LoadMenuItem@item,w
  1571  05EF  00F7               	movwf	??_LoadMenuItem+1
  1572  05F0  0777               	addwf	??_LoadMenuItem+1,w
  1573  05F1  3E20               	addlw	(low (_g_menu| 0))& (0+255)
  1574  05F2  0084               	movwf	4
  1575  05F3  0876               	movf	??_LoadMenuItem,w
  1576  05F4  1383               	bcf	3,7	;select IRP bank0
  1577  05F5  0080               	movwf	0
  1578  05F6  0008               	return
  1579  05F7                     __end_of_LoadMenuItem:	
  1580                           
  1581                           	psect	text3
  1582  05B5                     __ptext3:	
  1583 ;; *************** function _eeprom_read *****************
  1584 ;; Defined at:
  1585 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  addr            1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  addr            1    5[COMMON] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      unsigned char 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         1       0       0       0       0
  1601 ;;      Temps:          1       0       0       0       0
  1602 ;;      Totals:         2       0       0       0       0
  1603 ;;Total ram usage:        2 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_LoadMenuItem
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function _eeprom_read
  1615  05B5                     _eeprom_read:	
  1616                           
  1617                           ;incstack = 0
  1618                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  1619                           ;eeprom_read@addr stored from wreg
  1620  05B5  00F5               	movwf	eeprom_read@addr
  1621  05B6                     l257:	
  1622  05B6  0064               	clrwdt	;# 
  1623  05B7  1683               	bsf	3,5	;RP0=1, select bank3
  1624  05B8  1703               	bsf	3,6	;RP1=1, select bank3
  1625  05B9  188C               	btfsc	12,1	;volsfr
  1626  05BA  2DB6               	goto	l257
  1627  05BB  0875               	movf	eeprom_read@addr,w
  1628  05BC  1283               	bcf	3,5	;RP0=0, select bank2
  1629  05BD  1703               	bsf	3,6	;RP1=1, select bank2
  1630  05BE  008D               	movwf	13	;volatile
  1631  05BF  303F               	movlw	63
  1632  05C0  00F4               	movwf	??_eeprom_read
  1633  05C1  0874               	movf	??_eeprom_read,w
  1634  05C2  1683               	bsf	3,5	;RP0=1, select bank3
  1635  05C3  1703               	bsf	3,6	;RP1=1, select bank3
  1636  05C4  058C               	andwf	12,f	;volsfr
  1637  05C5  140C               	bsf	12,0	;volsfr
  1638  05C6  1003               	clrc
  1639  05C7  180C               	btfsc	12,0	;volsfr
  1640  05C8  1403               	setc
  1641  05C9  3000               	movlw	0
  1642  05CA  1803               	skipnc
  1643  05CB  3001               	movlw	1
  1644  05CC  1283               	bcf	3,5	;RP0=0, select bank2
  1645  05CD  1703               	bsf	3,6	;RP1=1, select bank2
  1646  05CE  080C               	movf	12,w	;volatile
  1647  05CF  0008               	return
  1648  05D0                     __end_of_eeprom_read:	
  1649                           
  1650                           	psect	text4
  1651  0389                     __ptext4:	
  1652 ;; *************** function _LCDWriteString *****************
  1653 ;; Defined at:
  1654 ;;		line 283 in file "lcd_hd44780_pic16.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  msg             1    wreg     PTR const unsigned char 
  1657 ;;		 -> STR_9(1), STR_8(5), STR_7(5), STR_6(5), 
  1658 ;;		 -> STR_5(5), STR_4(5), STR_3(1), STR_2(9), 
  1659 ;;		 -> STR_1(1), 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  msg             1   11[BANK0 ] PTR const unsigned char 
  1662 ;;		 -> STR_9(1), STR_8(5), STR_7(5), STR_6(5), 
  1663 ;;		 -> STR_5(5), STR_4(5), STR_3(1), STR_2(9), 
  1664 ;;		 -> STR_1(1), 
  1665 ;;  cc              1   10[BANK0 ] char 
  1666 ;;  count           1    9[BANK0 ] char 
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      char 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1676 ;;      Params:         0       0       0       0       0
  1677 ;;      Locals:         0       3       0       0       0
  1678 ;;      Temps:          1       0       0       0       0
  1679 ;;      Totals:         1       3       0       0       0
  1680 ;;Total ram usage:        4 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    3
  1683 ;; This function calls:
  1684 ;;		_LCDByte
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;;		_ShowMenu
  1688 ;;		_ClearMenu
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function _LCDWriteString
  1694  0389                     _LCDWriteString:	
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1698                           ;LCDWriteString@msg stored from wreg
  1699  0389  1283               	bcf	3,5	;RP0=0, select bank0
  1700  038A  1303               	bcf	3,6	;RP1=0, select bank0
  1701  038B  00C9               	movwf	LCDWriteString@msg
  1702                           
  1703                           ;lcd_hd44780_pic16.c: 285: int8_t count = 0;
  1704  038C  01C7               	clrf	LCDWriteString@count
  1705  038D                     l2081:	
  1706                           ;lcd_hd44780_pic16.c: 286: while(*msg!='\0')
  1707                           
  1708  038D  0849               	movf	LCDWriteString@msg,w
  1709  038E  0084               	movwf	4
  1710  038F  120A  118A  2567  120A  118A  	fcall	stringdir
  1711  0394  3A00               	xorlw	0
  1712  0395  1903               	btfsc	3,2
  1713  0396  2BE2               	goto	l2083
  1714                           
  1715                           ;lcd_hd44780_pic16.c: 287: {
  1716                           ;lcd_hd44780_pic16.c: 289: if(*msg=='%')
  1717  0397  0849               	movf	LCDWriteString@msg,w
  1718  0398  0084               	movwf	4
  1719  0399  120A  118A  2567  120A  118A  	fcall	stringdir
  1720  039E  3A25               	xorlw	37
  1721  039F  1D03               	skipz
  1722  03A0  2BC9               	goto	l2075
  1723                           
  1724                           ;lcd_hd44780_pic16.c: 290: {
  1725                           ;lcd_hd44780_pic16.c: 291: msg++;
  1726  03A1  3001               	movlw	1
  1727  03A2  00F7               	movwf	??_LCDWriteString
  1728  03A3  0877               	movf	??_LCDWriteString,w
  1729  03A4  07C9               	addwf	LCDWriteString@msg,f
  1730                           
  1731                           ;lcd_hd44780_pic16.c: 292: int8_t cc=*msg-'0';
  1732  03A5  0849               	movf	LCDWriteString@msg,w
  1733  03A6  0084               	movwf	4
  1734  03A7  120A  118A  2567  120A  118A  	fcall	stringdir
  1735  03AC  3ED0               	addlw	-48
  1736  03AD  00F7               	movwf	??_LCDWriteString
  1737  03AE  0877               	movf	??_LCDWriteString,w
  1738  03AF  00C8               	movwf	LCDWriteString@cc
  1739                           
  1740                           ;lcd_hd44780_pic16.c: 294: if(cc>=0 && cc<=7)
  1741  03B0  1BC8               	btfsc	LCDWriteString@cc,7
  1742  03B1  2BBB               	goto	l2067
  1743  03B2  0848               	movf	LCDWriteString@cc,w
  1744  03B3  3A80               	xorlw	128
  1745  03B4  3E78               	addlw	-136
  1746  03B5  1803               	skipnc
  1747  03B6  2BBB               	goto	l2067
  1748                           
  1749                           ;lcd_hd44780_pic16.c: 295: {
  1750                           ;lcd_hd44780_pic16.c: 296: (LCDByte(cc,1));
  1751  03B7  01F6               	clrf	LCDByte@isdata
  1752  03B8  0AF6               	incf	LCDByte@isdata,f
  1753  03B9  0848               	movf	LCDWriteString@cc,w
  1754  03BA  2BD2               	goto	L1
  1755  03BB                     l2067:	
  1756                           ;lcd_hd44780_pic16.c: 298: }
  1757                           
  1758                           ;lcd_hd44780_pic16.c: 297: count++;
  1759                           
  1760                           
  1761                           ;lcd_hd44780_pic16.c: 299: else
  1762                           ;lcd_hd44780_pic16.c: 300: {
  1763                           ;lcd_hd44780_pic16.c: 301: (LCDByte('%',1));
  1764  03BB  01F6               	clrf	LCDByte@isdata
  1765  03BC  0AF6               	incf	LCDByte@isdata,f
  1766  03BD  3025               	movlw	37
  1767  03BE  120A  118A  243F  120A  118A  	fcall	_LCDByte
  1768                           
  1769                           ;lcd_hd44780_pic16.c: 302: count++;
  1770  03C3  3001               	movlw	1
  1771  03C4  00F7               	movwf	??_LCDWriteString
  1772  03C5  0877               	movf	??_LCDWriteString,w
  1773  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  1774  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  1775  03C8  07C7               	addwf	LCDWriteString@count,f
  1776  03C9                     l2075:	
  1777                           ;lcd_hd44780_pic16.c: 305: }
  1778                           ;lcd_hd44780_pic16.c: 306: }
  1779                           
  1780                           ;lcd_hd44780_pic16.c: 304: count++;
  1781                           
  1782                           ;lcd_hd44780_pic16.c: 303: (LCDByte(*msg,1));
  1783                           
  1784                           
  1785                           ;lcd_hd44780_pic16.c: 307: else
  1786                           ;lcd_hd44780_pic16.c: 308: {
  1787                           ;lcd_hd44780_pic16.c: 309: (LCDByte(*msg,1));
  1788  03C9  01F6               	clrf	LCDByte@isdata
  1789  03CA  0AF6               	incf	LCDByte@isdata,f
  1790  03CB  0849               	movf	LCDWriteString@msg,w
  1791  03CC  0084               	movwf	4
  1792  03CD  120A  118A  2567  120A  118A  	fcall	stringdir
  1793  03D2                     L1:	
  1794  03D2  120A  118A  243F  120A  118A  	fcall	_LCDByte
  1795                           
  1796                           ;lcd_hd44780_pic16.c: 310: count++;
  1797  03D7  3001               	movlw	1
  1798  03D8  00F7               	movwf	??_LCDWriteString
  1799  03D9  0877               	movf	??_LCDWriteString,w
  1800  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1801  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1802  03DC  07C7               	addwf	LCDWriteString@count,f
  1803                           
  1804                           ;lcd_hd44780_pic16.c: 311: }
  1805                           ;lcd_hd44780_pic16.c: 312: msg++;
  1806  03DD  3001               	movlw	1
  1807  03DE  00F7               	movwf	??_LCDWriteString
  1808  03DF  0877               	movf	??_LCDWriteString,w
  1809  03E0  07C9               	addwf	LCDWriteString@msg,f
  1810  03E1  2B8D               	goto	l2081
  1811  03E2                     l2083:	
  1812                           
  1813                           ;lcd_hd44780_pic16.c: 313: }
  1814                           ;lcd_hd44780_pic16.c: 315: return count;
  1815  03E2  0847               	movf	LCDWriteString@count,w
  1816  03E3  0008               	return
  1817  03E4                     __end_of_LCDWriteString:	
  1818                           
  1819                           	psect	text5
  1820  021E                     __ptext5:	
  1821 ;; *************** function _LCDWriteInt *****************
  1822 ;; Defined at:
  1823 ;;		line 328 in file "lcd_hd44780_pic16.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  val             2    9[BANK0 ] int 
  1826 ;;  field_length    1   11[BANK0 ] char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  str             5   14[BANK0 ] unsigned char [5]
  1829 ;;  i               2   21[BANK0 ] int 
  1830 ;;  j               2   19[BANK0 ] int 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      char 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1840 ;;      Params:         0       3       0       0       0
  1841 ;;      Locals:         0       9       0       0       0
  1842 ;;      Temps:          0       2       0       0       0
  1843 ;;      Totals:         0      14       0       0       0
  1844 ;;Total ram usage:       14 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    3
  1847 ;; This function calls:
  1848 ;;		_LCDByte
  1849 ;;		___awdiv
  1850 ;;		___awmod
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;;		_ShowMenu
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function _LCDWriteInt
  1859  021E                     _LCDWriteInt:	
  1860                           
  1861                           ;lcd_hd44780_pic16.c: 330: char str[5]={-16,-16,-16,-16,-16};
  1862                           
  1863                           ;incstack = 0
  1864                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1865  021E  304C               	movlw	LCDWriteInt@str& (0+255)
  1866  021F  0084               	movwf	4
  1867  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0222  0860               	movf	LCDWriteInt@F1646,w
  1870  0223  1383               	bcf	3,7	;select IRP bank0
  1871  0224  0080               	movwf	0
  1872  0225  0A84               	incf	4,f
  1873  0226  0861               	movf	LCDWriteInt@F1646+1,w
  1874  0227  0080               	movwf	0
  1875  0228  0A84               	incf	4,f
  1876  0229  0862               	movf	LCDWriteInt@F1646+2,w
  1877  022A  0080               	movwf	0
  1878  022B  0A84               	incf	4,f
  1879  022C  0863               	movf	LCDWriteInt@F1646+3,w
  1880  022D  0080               	movwf	0
  1881  022E  0A84               	incf	4,f
  1882  022F  0864               	movf	LCDWriteInt@F1646+4,w
  1883  0230  0080               	movwf	0
  1884                           
  1885                           ;lcd_hd44780_pic16.c: 331: int i=4,j=0;
  1886  0231  3004               	movlw	4
  1887  0232  00D3               	movwf	LCDWriteInt@i
  1888  0233  3000               	movlw	0
  1889  0234  00D4               	movwf	LCDWriteInt@i+1
  1890  0235  01D1               	clrf	LCDWriteInt@j
  1891  0236  01D2               	clrf	LCDWriteInt@j+1
  1892                           
  1893                           ;lcd_hd44780_pic16.c: 333: if(val == 0)
  1894  0237  0847               	movf	LCDWriteInt@val,w
  1895  0238  0448               	iorwf	LCDWriteInt@val+1,w
  1896  0239  1903               	btfsc	3,2
  1897                           
  1898                           ;lcd_hd44780_pic16.c: 334: {
  1899                           ;lcd_hd44780_pic16.c: 335: str[4] = 0;
  1900  023A  01D0               	clrf	LCDWriteInt@str+4
  1901                           
  1902                           ;lcd_hd44780_pic16.c: 336: }
  1903                           ;lcd_hd44780_pic16.c: 338: if(val<0)
  1904  023B  1FC8               	btfss	LCDWriteInt@val+1,7
  1905  023C  2A4C               	goto	l2109
  1906                           
  1907                           ;lcd_hd44780_pic16.c: 339: {
  1908                           ;lcd_hd44780_pic16.c: 340: (LCDByte('-',1));
  1909  023D  01F6               	clrf	LCDByte@isdata
  1910  023E  0AF6               	incf	LCDByte@isdata,f
  1911  023F  302D               	movlw	45
  1912  0240  120A  118A  243F  120A  118A  	fcall	_LCDByte
  1913                           
  1914                           ;lcd_hd44780_pic16.c: 341: val=val*-1;
  1915  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0247  09C7               	comf	LCDWriteInt@val,f
  1918  0248  09C8               	comf	LCDWriteInt@val+1,f
  1919  0249  0AC7               	incf	LCDWriteInt@val,f
  1920  024A  1903               	skipnz
  1921  024B  0AC8               	incf	LCDWriteInt@val+1,f
  1922  024C                     l2109:	
  1923                           ;lcd_hd44780_pic16.c: 342: }
  1924                           ;lcd_hd44780_pic16.c: 344: while(val)
  1925                           
  1926  024C  0847               	movf	LCDWriteInt@val,w
  1927  024D  0448               	iorwf	LCDWriteInt@val+1,w
  1928  024E  1903               	btfsc	3,2
  1929  024F  2A81               	goto	l2111
  1930                           
  1931                           ;lcd_hd44780_pic16.c: 345: {
  1932                           ;lcd_hd44780_pic16.c: 346: str[i]=val%10;
  1933  0250  300A               	movlw	10
  1934  0251  00F4               	movwf	___awmod@divisor
  1935  0252  3000               	movlw	0
  1936  0253  00F5               	movwf	___awmod@divisor+1
  1937  0254  0848               	movf	LCDWriteInt@val+1,w
  1938  0255  00F7               	movwf	___awmod@dividend+1
  1939  0256  0847               	movf	LCDWriteInt@val,w
  1940  0257  00F6               	movwf	___awmod@dividend
  1941  0258  120A  118A  2496  120A  118A  	fcall	___awmod
  1942  025D  0874               	movf	?___awmod,w
  1943  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1944  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0260  00CA               	movwf	??_LCDWriteInt
  1946  0261  0853               	movf	LCDWriteInt@i,w
  1947  0262  3E4C               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1948  0263  0084               	movwf	4
  1949  0264  084A               	movf	??_LCDWriteInt,w
  1950  0265  1383               	bcf	3,7	;select IRP bank0
  1951  0266  0080               	movwf	0
  1952                           
  1953                           ;lcd_hd44780_pic16.c: 347: val=val/10;
  1954  0267  300A               	movlw	10
  1955  0268  00F4               	movwf	___awdiv@divisor
  1956  0269  3000               	movlw	0
  1957  026A  00F5               	movwf	___awdiv@divisor+1
  1958  026B  0848               	movf	LCDWriteInt@val+1,w
  1959  026C  00F7               	movwf	___awdiv@dividend+1
  1960  026D  0847               	movf	LCDWriteInt@val,w
  1961  026E  00F6               	movwf	___awdiv@dividend
  1962  026F  120A  118A  23E4  120A  118A  	fcall	___awdiv
  1963  0274  0875               	movf	?___awdiv+1,w
  1964  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1966  0277  00C8               	movwf	LCDWriteInt@val+1
  1967  0278  0874               	movf	?___awdiv,w
  1968  0279  00C7               	movwf	LCDWriteInt@val
  1969                           
  1970                           ;lcd_hd44780_pic16.c: 348: i--;
  1971  027A  30FF               	movlw	255
  1972  027B  07D3               	addwf	LCDWriteInt@i,f
  1973  027C  1803               	skipnc
  1974  027D  0AD4               	incf	LCDWriteInt@i+1,f
  1975  027E  30FF               	movlw	255
  1976  027F  07D4               	addwf	LCDWriteInt@i+1,f
  1977  0280  2A4C               	goto	l2109
  1978  0281                     l2111:	
  1979                           
  1980                           ;lcd_hd44780_pic16.c: 349: }
  1981                           ;lcd_hd44780_pic16.c: 350: if(field_length==-1)
  1982  0281  0A49               	incf	LCDWriteInt@field_length,w
  1983  0282  1903               	btfsc	3,2
  1984  0283  2A96               	goto	l2119
  1985                           
  1986                           ;lcd_hd44780_pic16.c: 352: else
  1987                           ;lcd_hd44780_pic16.c: 353: j=5-field_length;
  1988                           
  1989                           ;lcd_hd44780_pic16.c: 351: while(str[j]==-16) j++;
  1990  0284  0849               	movf	LCDWriteInt@field_length,w
  1991  0285  00CA               	movwf	??_LCDWriteInt
  1992  0286  01CB               	clrf	??_LCDWriteInt+1
  1993  0287  1BCA               	btfsc	??_LCDWriteInt,7
  1994  0288  03CB               	decf	??_LCDWriteInt+1,f
  1995  0289  09CA               	comf	??_LCDWriteInt,f
  1996  028A  09CB               	comf	??_LCDWriteInt+1,f
  1997  028B  0ACA               	incf	??_LCDWriteInt,f
  1998  028C  1903               	skipnz
  1999  028D  0ACB               	incf	??_LCDWriteInt+1,f
  2000  028E  084A               	movf	??_LCDWriteInt,w
  2001  028F  3E05               	addlw	5
  2002  0290  00D1               	movwf	LCDWriteInt@j
  2003  0291  084B               	movf	??_LCDWriteInt+1,w
  2004  0292  1803               	skipnc
  2005  0293  3E01               	addlw	1
  2006  0294  3E00               	addlw	0
  2007  0295  00D2               	movwf	LCDWriteInt@j+1
  2008  0296                     l2119:	
  2009                           
  2010                           ;lcd_hd44780_pic16.c: 356: for(i=j;i<5;i++)
  2011  0296  0852               	movf	LCDWriteInt@j+1,w
  2012  0297  00D4               	movwf	LCDWriteInt@i+1
  2013  0298  0851               	movf	LCDWriteInt@j,w
  2014  0299  00D3               	movwf	LCDWriteInt@i
  2015  029A                     L2:	
  2016  029A  0854               	movf	LCDWriteInt@i+1,w
  2017  029B  3A80               	xorlw	128
  2018  029C  00FF               	movwf	127
  2019  029D  3080               	movlw	128
  2020  029E  027F               	subwf	127,w
  2021  029F  1D03               	skipz
  2022  02A0  2AA3               	goto	u2245
  2023  02A1  3005               	movlw	5
  2024  02A2  0253               	subwf	LCDWriteInt@i,w
  2025  02A3                     u2245:	
  2026  02A3  1803               	btfsc	3,0
  2027  02A4  0008               	return
  2028                           
  2029                           ;lcd_hd44780_pic16.c: 357: {
  2030                           ;lcd_hd44780_pic16.c: 358: (LCDByte(48+str[i],1));
  2031  02A5  01F6               	clrf	LCDByte@isdata
  2032  02A6  0AF6               	incf	LCDByte@isdata,f
  2033  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2034  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2035  02A9  0853               	movf	LCDWriteInt@i,w
  2036  02AA  3E4C               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2037  02AB  0084               	movwf	4
  2038  02AC  1383               	bcf	3,7	;select IRP bank0
  2039  02AD  0800               	movf	0,w
  2040  02AE  3E30               	addlw	48
  2041  02AF  120A  118A  243F  120A  118A  	fcall	_LCDByte
  2042  02B4  3001               	movlw	1
  2043  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2044  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2045  02B7  07D3               	addwf	LCDWriteInt@i,f
  2046  02B8  1803               	skipnc
  2047  02B9  0AD4               	incf	LCDWriteInt@i+1,f
  2048  02BA  3000               	movlw	0
  2049  02BB  07D4               	addwf	LCDWriteInt@i+1,f
  2050  02BC  2A9A               	goto	L2
  2051  02BD                     __end_of_LCDWriteInt:	
  2052                           ;lcd_hd44780_pic16.c: 359: }
  2053                           ;lcd_hd44780_pic16.c: 360: return field_length;
  2054                           ;	Return value of _LCDWriteInt is never used
  2055                           
  2056                           
  2057                           	psect	text6
  2058  0496                     __ptext6:	
  2059 ;; *************** function ___awmod *****************
  2060 ;; Defined at:
  2061 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  divisor         2    4[COMMON] int 
  2064 ;;  dividend        2    6[COMMON] int 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  sign            1    2[BANK0 ] unsigned char 
  2067 ;;  counter         1    1[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  2    4[COMMON] int 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         4       0       0       0       0
  2078 ;;      Locals:         0       2       0       0       0
  2079 ;;      Temps:          0       1       0       0       0
  2080 ;;      Totals:         4       3       0       0       0
  2081 ;;Total ram usage:        7 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_LCDWriteInt
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function ___awmod
  2093  0496                     ___awmod:	
  2094                           
  2095                           ;incstack = 0
  2096                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2097  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0498  01C0               	clrf	___awmod@sign
  2100  0499  1FF7               	btfss	___awmod@dividend+1,7
  2101  049A  2CA2               	goto	l1933
  2102  049B  09F6               	comf	___awmod@dividend,f
  2103  049C  09F7               	comf	___awmod@dividend+1,f
  2104  049D  0AF6               	incf	___awmod@dividend,f
  2105  049E  1903               	skipnz
  2106  049F  0AF7               	incf	___awmod@dividend+1,f
  2107  04A0  01C0               	clrf	___awmod@sign
  2108  04A1  0AC0               	incf	___awmod@sign,f
  2109  04A2                     l1933:	
  2110  04A2  1FF5               	btfss	___awmod@divisor+1,7
  2111  04A3  2CA9               	goto	l1937
  2112  04A4  09F4               	comf	___awmod@divisor,f
  2113  04A5  09F5               	comf	___awmod@divisor+1,f
  2114  04A6  0AF4               	incf	___awmod@divisor,f
  2115  04A7  1903               	skipnz
  2116  04A8  0AF5               	incf	___awmod@divisor+1,f
  2117  04A9                     l1937:	
  2118  04A9  0874               	movf	___awmod@divisor,w
  2119  04AA  0475               	iorwf	___awmod@divisor+1,w
  2120  04AB  1903               	btfsc	3,2
  2121  04AC  2CD6               	goto	l1955
  2122  04AD  01BF               	clrf	___awmod@counter
  2123  04AE  0ABF               	incf	___awmod@counter,f
  2124  04AF                     l1945:	
  2125  04AF  1BF5               	btfsc	___awmod@divisor+1,7
  2126  04B0  2CBD               	goto	l1947
  2127  04B1  3001               	movlw	1
  2128  04B2                     u2075:	
  2129  04B2  1003               	clrc
  2130  04B3  0DF4               	rlf	___awmod@divisor,f
  2131  04B4  0DF5               	rlf	___awmod@divisor+1,f
  2132  04B5  3EFF               	addlw	-1
  2133  04B6  1D03               	skipz
  2134  04B7  2CB2               	goto	u2075
  2135  04B8  3001               	movlw	1
  2136  04B9  00BE               	movwf	??___awmod
  2137  04BA  083E               	movf	??___awmod,w
  2138  04BB  07BF               	addwf	___awmod@counter,f
  2139  04BC  2CAF               	goto	l1945
  2140  04BD                     l1947:	
  2141  04BD  0875               	movf	___awmod@divisor+1,w
  2142  04BE  0277               	subwf	___awmod@dividend+1,w
  2143  04BF  1D03               	skipz
  2144  04C0  2CC3               	goto	u2095
  2145  04C1  0874               	movf	___awmod@divisor,w
  2146  04C2  0276               	subwf	___awmod@dividend,w
  2147  04C3                     u2095:	
  2148  04C3  1C03               	skipc
  2149  04C4  2CCB               	goto	l1951
  2150  04C5  0874               	movf	___awmod@divisor,w
  2151  04C6  02F6               	subwf	___awmod@dividend,f
  2152  04C7  0875               	movf	___awmod@divisor+1,w
  2153  04C8  1C03               	skipc
  2154  04C9  03F7               	decf	___awmod@dividend+1,f
  2155  04CA  02F7               	subwf	___awmod@dividend+1,f
  2156  04CB                     l1951:	
  2157  04CB  3001               	movlw	1
  2158  04CC                     u2105:	
  2159  04CC  1003               	clrc
  2160  04CD  0CF5               	rrf	___awmod@divisor+1,f
  2161  04CE  0CF4               	rrf	___awmod@divisor,f
  2162  04CF  3EFF               	addlw	-1
  2163  04D0  1D03               	skipz
  2164  04D1  2CCC               	goto	u2105
  2165  04D2  3001               	movlw	1
  2166  04D3  02BF               	subwf	___awmod@counter,f
  2167  04D4  1D03               	btfss	3,2
  2168  04D5  2CBD               	goto	l1947
  2169  04D6                     l1955:	
  2170  04D6  0840               	movf	___awmod@sign,w
  2171  04D7  1903               	btfsc	3,2
  2172  04D8  2CDE               	goto	l1959
  2173  04D9  09F6               	comf	___awmod@dividend,f
  2174  04DA  09F7               	comf	___awmod@dividend+1,f
  2175  04DB  0AF6               	incf	___awmod@dividend,f
  2176  04DC  1903               	skipnz
  2177  04DD  0AF7               	incf	___awmod@dividend+1,f
  2178  04DE                     l1959:	
  2179  04DE  0877               	movf	___awmod@dividend+1,w
  2180  04DF  00F5               	movwf	?___awmod+1
  2181  04E0  0876               	movf	___awmod@dividend,w
  2182  04E1  00F4               	movwf	?___awmod
  2183  04E2  0008               	return
  2184  04E3                     __end_of___awmod:	
  2185                           
  2186                           	psect	text7
  2187  03E4                     __ptext7:	
  2188 ;; *************** function ___awdiv *****************
  2189 ;; Defined at:
  2190 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  divisor         2    4[COMMON] int 
  2193 ;;  dividend        2    6[COMMON] int 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  quotient        2    3[BANK0 ] int 
  2196 ;;  sign            1    2[BANK0 ] unsigned char 
  2197 ;;  counter         1    1[BANK0 ] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  2    4[COMMON] int 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2207 ;;      Params:         4       0       0       0       0
  2208 ;;      Locals:         0       4       0       0       0
  2209 ;;      Temps:          0       1       0       0       0
  2210 ;;      Totals:         4       5       0       0       0
  2211 ;;Total ram usage:        9 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_LCDWriteInt
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           
  2222                           ;psect for function ___awdiv
  2223  03E4                     ___awdiv:	
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2227  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2228  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2229  03E6  01C0               	clrf	___awdiv@sign
  2230  03E7  1FF5               	btfss	___awdiv@divisor+1,7
  2231  03E8  2BF0               	goto	l1889
  2232  03E9  09F4               	comf	___awdiv@divisor,f
  2233  03EA  09F5               	comf	___awdiv@divisor+1,f
  2234  03EB  0AF4               	incf	___awdiv@divisor,f
  2235  03EC  1903               	skipnz
  2236  03ED  0AF5               	incf	___awdiv@divisor+1,f
  2237  03EE  01C0               	clrf	___awdiv@sign
  2238  03EF  0AC0               	incf	___awdiv@sign,f
  2239  03F0                     l1889:	
  2240  03F0  1FF7               	btfss	___awdiv@dividend+1,7
  2241  03F1  2BFB               	goto	l1895
  2242  03F2  09F6               	comf	___awdiv@dividend,f
  2243  03F3  09F7               	comf	___awdiv@dividend+1,f
  2244  03F4  0AF6               	incf	___awdiv@dividend,f
  2245  03F5  1903               	skipnz
  2246  03F6  0AF7               	incf	___awdiv@dividend+1,f
  2247  03F7  3001               	movlw	1
  2248  03F8  00BE               	movwf	??___awdiv
  2249  03F9  083E               	movf	??___awdiv,w
  2250  03FA  06C0               	xorwf	___awdiv@sign,f
  2251  03FB                     l1895:	
  2252  03FB  01C1               	clrf	___awdiv@quotient
  2253  03FC  01C2               	clrf	___awdiv@quotient+1
  2254  03FD  0874               	movf	___awdiv@divisor,w
  2255  03FE  0475               	iorwf	___awdiv@divisor+1,w
  2256  03FF  1903               	btfsc	3,2
  2257  0400  2C32               	goto	l1917
  2258  0401  01BF               	clrf	___awdiv@counter
  2259  0402  0ABF               	incf	___awdiv@counter,f
  2260  0403                     l1905:	
  2261  0403  1BF5               	btfsc	___awdiv@divisor+1,7
  2262  0404  2C11               	goto	l1907
  2263  0405  3001               	movlw	1
  2264  0406                     u1975:	
  2265  0406  1003               	clrc
  2266  0407  0DF4               	rlf	___awdiv@divisor,f
  2267  0408  0DF5               	rlf	___awdiv@divisor+1,f
  2268  0409  3EFF               	addlw	-1
  2269  040A  1D03               	skipz
  2270  040B  2C06               	goto	u1975
  2271  040C  3001               	movlw	1
  2272  040D  00BE               	movwf	??___awdiv
  2273  040E  083E               	movf	??___awdiv,w
  2274  040F  07BF               	addwf	___awdiv@counter,f
  2275  0410  2C03               	goto	l1905
  2276  0411                     l1907:	
  2277  0411  3001               	movlw	1
  2278  0412                     u1995:	
  2279  0412  1003               	clrc
  2280  0413  0DC1               	rlf	___awdiv@quotient,f
  2281  0414  0DC2               	rlf	___awdiv@quotient+1,f
  2282  0415  3EFF               	addlw	-1
  2283  0416  1D03               	skipz
  2284  0417  2C12               	goto	u1995
  2285  0418  0875               	movf	___awdiv@divisor+1,w
  2286  0419  0277               	subwf	___awdiv@dividend+1,w
  2287  041A  1D03               	skipz
  2288  041B  2C1E               	goto	u2005
  2289  041C  0874               	movf	___awdiv@divisor,w
  2290  041D  0276               	subwf	___awdiv@dividend,w
  2291  041E                     u2005:	
  2292  041E  1C03               	skipc
  2293  041F  2C27               	goto	l1913
  2294  0420  0874               	movf	___awdiv@divisor,w
  2295  0421  02F6               	subwf	___awdiv@dividend,f
  2296  0422  0875               	movf	___awdiv@divisor+1,w
  2297  0423  1C03               	skipc
  2298  0424  03F7               	decf	___awdiv@dividend+1,f
  2299  0425  02F7               	subwf	___awdiv@dividend+1,f
  2300  0426  1441               	bsf	___awdiv@quotient,0
  2301  0427                     l1913:	
  2302  0427  3001               	movlw	1
  2303  0428                     u2015:	
  2304  0428  1003               	clrc
  2305  0429  0CF5               	rrf	___awdiv@divisor+1,f
  2306  042A  0CF4               	rrf	___awdiv@divisor,f
  2307  042B  3EFF               	addlw	-1
  2308  042C  1D03               	skipz
  2309  042D  2C28               	goto	u2015
  2310  042E  3001               	movlw	1
  2311  042F  02BF               	subwf	___awdiv@counter,f
  2312  0430  1D03               	btfss	3,2
  2313  0431  2C11               	goto	l1907
  2314  0432                     l1917:	
  2315  0432  0840               	movf	___awdiv@sign,w
  2316  0433  1903               	btfsc	3,2
  2317  0434  2C3A               	goto	l1921
  2318  0435  09C1               	comf	___awdiv@quotient,f
  2319  0436  09C2               	comf	___awdiv@quotient+1,f
  2320  0437  0AC1               	incf	___awdiv@quotient,f
  2321  0438  1903               	skipnz
  2322  0439  0AC2               	incf	___awdiv@quotient+1,f
  2323  043A                     l1921:	
  2324  043A  0842               	movf	___awdiv@quotient+1,w
  2325  043B  00F5               	movwf	?___awdiv+1
  2326  043C  0841               	movf	___awdiv@quotient,w
  2327  043D  00F4               	movwf	?___awdiv
  2328  043E  0008               	return
  2329  043F                     __end_of___awdiv:	
  2330                           
  2331                           	psect	text8
  2332  0325                     __ptext8:	
  2333 ;; *************** function _LCDInit *****************
  2334 ;; Defined at:
  2335 ;;		line 211 in file "lcd_hd44780_pic16.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  style           1    wreg     unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  style           1   11[BANK0 ] unsigned char 
  2340 ;;  __i             1   12[BANK0 ] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2350 ;;      Params:         0       0       0       0       0
  2351 ;;      Locals:         0       2       0       0       0
  2352 ;;      Temps:          0       2       0       0       0
  2353 ;;      Totals:         0       4       0       0       0
  2354 ;;Total ram usage:        4 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    3
  2357 ;; This function calls:
  2358 ;;		_LCDBusyLoop
  2359 ;;		_LCDByte
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _LCDInit
  2367  0325                     _LCDInit:	
  2368                           
  2369                           ;incstack = 0
  2370                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2371                           ;LCDInit@style stored from wreg
  2372  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0327  00C9               	movwf	LCDInit@style
  2375                           
  2376                           ;lcd_hd44780_pic16.c: 213: _delay((unsigned long)((30)*(20000000/4000.0)));
  2377  0328  30C3               	movlw	195
  2378  0329  00C8               	movwf	??_LCDInit+1
  2379  032A  30CD               	movlw	205
  2380  032B  00C7               	movwf	??_LCDInit
  2381  032C                     u2777:	
  2382  032C  0BC7               	decfsz	??_LCDInit,f
  2383  032D  2B2C               	goto	u2777
  2384  032E  0BC8               	decfsz	??_LCDInit+1,f
  2385  032F  2B2C               	goto	u2777
  2386                           
  2387                           ;lcd_hd44780_pic16.c: 216: TRISC&=(~(0x0F<<4));
  2388  0330  300F               	movlw	15
  2389  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0333  00C7               	movwf	??_LCDInit
  2392  0334  0847               	movf	??_LCDInit,w
  2393  0335  1683               	bsf	3,5	;RP0=1, select bank1
  2394  0336  1303               	bcf	3,6	;RP1=0, select bank1
  2395  0337  0587               	andwf	7,f	;volatile
  2396                           
  2397                           ;lcd_hd44780_pic16.c: 218: TRISCbits.TRISC3=0;
  2398  0338  1187               	bcf	7,3	;volatile
  2399                           
  2400                           ;lcd_hd44780_pic16.c: 219: TRISCbits.TRISC1=0;
  2401  0339  1087               	bcf	7,1	;volatile
  2402                           
  2403                           ;lcd_hd44780_pic16.c: 220: TRISCbits.TRISC2=0;
  2404  033A  1107               	bcf	7,2	;volatile
  2405                           
  2406                           ;lcd_hd44780_pic16.c: 222: PORTC&=(~(0x0F<<4));
  2407  033B  300F               	movlw	15
  2408  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2409  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2410  033E  00C7               	movwf	??_LCDInit
  2411  033F  0847               	movf	??_LCDInit,w
  2412  0340  0587               	andwf	7,f	;volatile
  2413                           
  2414                           ;lcd_hd44780_pic16.c: 224: (RC3=0);
  2415  0341  1187               	bcf	7,3	;volatile
  2416                           
  2417                           ;lcd_hd44780_pic16.c: 225: (RC2=0);
  2418  0342  1107               	bcf	7,2	;volatile
  2419                           
  2420                           ;lcd_hd44780_pic16.c: 226: (RC1=0);
  2421  0343  1087               	bcf	7,1	;volatile
  2422                           
  2423                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2424  0344  2B45               	nop2	;2 cycle nop
  2425                           
  2426                           ;lcd_hd44780_pic16.c: 231: (RC3=1);
  2427  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0347  1587               	bsf	7,3	;volatile
  2430                           
  2431                           ;lcd_hd44780_pic16.c: 232: PORTC|=((0b00000010)<<4);
  2432  0348  1687               	bsf	7,5	;volatile
  2433                           
  2434                           ;lcd_hd44780_pic16.c: 233: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2435  0349  2B4A               	nop2	;2 cycle nop
  2436  034A  2B4B               	nop2	;2 cycle nop
  2437  034B  0000               	nop
  2438                           
  2439                           ;lcd_hd44780_pic16.c: 234: (RC3=0);
  2440  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2441  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2442  034E  1187               	bcf	7,3	;volatile
  2443                           
  2444                           ;lcd_hd44780_pic16.c: 235: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2445  034F  2B50               	nop2	;2 cycle nop
  2446  0350  2B51               	nop2	;2 cycle nop
  2447  0351  0000               	nop
  2448                           
  2449                           ;lcd_hd44780_pic16.c: 238: LCDBusyLoop();
  2450  0352  120A  118A  22BD  120A  118A  	fcall	_LCDBusyLoop
  2451                           
  2452                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b00101000,0));
  2453  0357  01F6               	clrf	LCDByte@isdata
  2454  0358  3028               	movlw	40
  2455  0359  120A  118A  243F  120A  118A  	fcall	_LCDByte
  2456                           
  2457                           ;lcd_hd44780_pic16.c: 244: (LCDByte(0b00001100|style,0));
  2458  035E  01F6               	clrf	LCDByte@isdata
  2459  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0361  0849               	movf	LCDInit@style,w
  2462  0362  380C               	iorlw	12
  2463  0363  120A  118A  243F  120A  118A  	fcall	_LCDByte
  2464                           
  2465                           ;lcd_hd44780_pic16.c: 247: (LCDByte(0b01000000,0));
  2466  0368  01F6               	clrf	LCDByte@isdata
  2467  0369  3040               	movlw	64
  2468  036A  120A  118A  243F  120A  118A  	fcall	_LCDByte
  2469                           
  2470                           ;lcd_hd44780_pic16.c: 249: uint8_t __i;
  2471                           ;lcd_hd44780_pic16.c: 250: for(__i=0;__i<sizeof(__cgram);__i++)
  2472  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2473  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2474  0371  01CA               	clrf	LCDInit@__i
  2475  0372                     L3:	
  2476  0372  3008               	movlw	8
  2477  0373  024A               	subwf	LCDInit@__i,w
  2478  0374  1803               	btfsc	3,0
  2479  0375  0008               	return
  2480                           
  2481                           ;lcd_hd44780_pic16.c: 251: (LCDByte(__cgram[__i],1));
  2482  0376  01F6               	clrf	LCDByte@isdata
  2483  0377  0AF6               	incf	LCDByte@isdata,f
  2484  0378  084A               	movf	LCDInit@__i,w
  2485  0379  3E58               	addlw	(low (___cgram| 0))& (0+255)
  2486  037A  0084               	movwf	4
  2487  037B  1383               	bcf	3,7	;select IRP bank0
  2488  037C  0800               	movf	0,w
  2489  037D  120A  118A  243F  120A  118A  	fcall	_LCDByte
  2490  0382  3001               	movlw	1
  2491  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2492  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2493  0385  00C7               	movwf	??_LCDInit
  2494  0386  0847               	movf	??_LCDInit,w
  2495  0387  07CA               	addwf	LCDInit@__i,f
  2496  0388  2B72               	goto	L3
  2497  0389                     __end_of_LCDInit:	
  2498                           
  2499                           	psect	text9
  2500  058F                     __ptext9:	
  2501 ;; *************** function _LCDGotoXY *****************
  2502 ;; Defined at:
  2503 ;;		line 367 in file "lcd_hd44780_pic16.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  x               1    wreg     unsigned char 
  2506 ;;  y               1    9[BANK0 ] unsigned char 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  x               1   10[BANK0 ] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2518 ;;      Params:         0       1       0       0       0
  2519 ;;      Locals:         0       1       0       0       0
  2520 ;;      Temps:          1       0       0       0       0
  2521 ;;      Totals:         1       2       0       0       0
  2522 ;;Total ram usage:        3 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    3
  2525 ;; This function calls:
  2526 ;;		_LCDByte
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;;		_ShowMenu
  2530 ;;		_ClearMenu
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _LCDGotoXY
  2536  058F                     _LCDGotoXY:	
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2540                           ;LCDGotoXY@x stored from wreg
  2541  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0591  00C8               	movwf	LCDGotoXY@x
  2544                           
  2545                           ;lcd_hd44780_pic16.c: 369: if(x>=20) return;
  2546  0592  3014               	movlw	20
  2547  0593  0248               	subwf	LCDGotoXY@x,w
  2548  0594  1803               	btfsc	3,0
  2549  0595  0008               	return
  2550  0596  2DA0               	goto	l2047
  2551  0597                     l186:	
  2552                           ;lcd_hd44780_pic16.c: 377: case 1:
  2553                           
  2554                           ;lcd_hd44780_pic16.c: 376: break;
  2555                           
  2556                           ;lcd_hd44780_pic16.c: 374: {
  2557                           ;lcd_hd44780_pic16.c: 375: case 0:
  2558                           
  2559                           ;lcd_hd44780_pic16.c: 373: switch(y)
  2560                           
  2561                           
  2562                           ;lcd_hd44780_pic16.c: 378: x|=0b01000000;
  2563  0597  1748               	bsf	LCDGotoXY@x,6
  2564                           
  2565                           ;lcd_hd44780_pic16.c: 379: break;
  2566  0598  2DAE               	goto	l185
  2567  0599                     l2041:	
  2568                           ;lcd_hd44780_pic16.c: 380: case 2:
  2569                           
  2570                           
  2571                           ;lcd_hd44780_pic16.c: 381: x+=0x14;
  2572  0599  3014               	movlw	20
  2573  059A  2D9C               	goto	L4
  2574  059B                     l2043:	
  2575                           ;lcd_hd44780_pic16.c: 383: case 3:
  2576                           
  2577                           ;lcd_hd44780_pic16.c: 382: break;
  2578                           
  2579                           
  2580                           ;lcd_hd44780_pic16.c: 384: x+=0x54;
  2581  059B  3054               	movlw	84
  2582  059C                     L4:	
  2583  059C  00F7               	movwf	??_LCDGotoXY
  2584  059D  0877               	movf	??_LCDGotoXY,w
  2585  059E  07C8               	addwf	LCDGotoXY@x,f
  2586                           
  2587                           ;lcd_hd44780_pic16.c: 386: }
  2588                           
  2589                           ;lcd_hd44780_pic16.c: 385: break;
  2590  059F  2DAE               	goto	l185
  2591  05A0                     l2047:	
  2592  05A0  0847               	movf	LCDGotoXY@y,w
  2593                           
  2594                           ; Switch size 1, requested type "space"
  2595                           ; Number of cases is 4, Range of values is 0 to 3
  2596                           ; switch strategies available:
  2597                           ; Name         Instructions Cycles
  2598                           ; simple_byte           13     7 (average)
  2599                           ; direct_byte           20     8 (fixed)
  2600                           ; jumptable            260     6 (fixed)
  2601                           ;	Chosen strategy is simple_byte
  2602  05A1  3A00               	xorlw	0	; case 0
  2603  05A2  1903               	skipnz
  2604  05A3  2DAE               	goto	l185
  2605  05A4  3A01               	xorlw	1	; case 1
  2606  05A5  1903               	skipnz
  2607  05A6  2D97               	goto	l186
  2608  05A7  3A03               	xorlw	3	; case 2
  2609  05A8  1903               	skipnz
  2610  05A9  2D99               	goto	l2041
  2611  05AA  3A01               	xorlw	1	; case 3
  2612  05AB  1903               	skipnz
  2613  05AC  2D9B               	goto	l2043
  2614  05AD  2DAE               	goto	l185
  2615  05AE                     l185:	
  2616                           
  2617                           ;lcd_hd44780_pic16.c: 408: x|=0b10000000;
  2618  05AE  17C8               	bsf	LCDGotoXY@x,7
  2619                           
  2620                           ;lcd_hd44780_pic16.c: 409: (LCDByte(x,0));
  2621  05AF  01F6               	clrf	LCDByte@isdata
  2622  05B0  0848               	movf	LCDGotoXY@x,w
  2623  05B1  120A  118A  243F   	fcall	_LCDByte
  2624  05B4  0008               	return
  2625  05B5                     __end_of_LCDGotoXY:	
  2626                           
  2627                           	psect	text10
  2628  043F                     __ptext10:	
  2629 ;; *************** function _LCDByte *****************
  2630 ;; Defined at:
  2631 ;;		line 80 in file "lcd_hd44780_pic16.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  c               1    wreg     unsigned char 
  2634 ;;  isdata          1    6[COMMON] unsigned char 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  c               1    7[BANK0 ] unsigned char 
  2637 ;;  temp            1    8[BANK0 ] unsigned char 
  2638 ;;  ln              1    6[BANK0 ] unsigned char 
  2639 ;;  hn              1    5[BANK0 ] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         1       0       0       0       0
  2650 ;;      Locals:         0       4       0       0       0
  2651 ;;      Temps:          0       2       0       0       0
  2652 ;;      Totals:         1       6       0       0       0
  2653 ;;Total ram usage:        7 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    2
  2656 ;; This function calls:
  2657 ;;		_LCDBusyLoop
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;;		_LCDInit
  2661 ;;		_LCDWriteString
  2662 ;;		_LCDWriteInt
  2663 ;;		_LCDGotoXY
  2664 ;;		_LCDSetStyle
  2665 ;;		_ShowMenu
  2666 ;;		_ClearMenu
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _LCDByte
  2672  043F                     _LCDByte:	
  2673                           
  2674                           ;incstack = 0
  2675                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2676                           ;LCDByte@c stored from wreg
  2677  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0441  00C5               	movwf	LCDByte@c
  2680                           
  2681                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  2682                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  2683                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  2684  0442  0845               	movf	LCDByte@c,w
  2685  0443  00C1               	movwf	??_LCDByte
  2686  0444  3004               	movlw	4
  2687  0445                     u1905:	
  2688  0445  1003               	clrc
  2689  0446  0CC1               	rrf	??_LCDByte,f
  2690  0447  3EFF               	addlw	-1
  2691  0448  1D03               	skipz
  2692  0449  2C45               	goto	u1905
  2693  044A  0841               	movf	??_LCDByte,w
  2694  044B  00C2               	movwf	??_LCDByte+1
  2695  044C  0842               	movf	??_LCDByte+1,w
  2696  044D  00C3               	movwf	LCDByte@hn
  2697                           
  2698                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  2699  044E  0845               	movf	LCDByte@c,w
  2700  044F  390F               	andlw	15
  2701  0450  00C1               	movwf	??_LCDByte
  2702  0451  0841               	movf	??_LCDByte,w
  2703  0452  00C4               	movwf	LCDByte@ln
  2704                           
  2705                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  2706  0453  0876               	movf	LCDByte@isdata,w
  2707  0454  1D03               	btfss	3,2
  2708  0455  2C58               	goto	l136
  2709                           
  2710                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  2711  0456  1087               	bcf	7,1	;volatile
  2712  0457  2C59               	goto	l137
  2713  0458                     l136:	
  2714                           
  2715                           ;lcd_hd44780_pic16.c: 97: else
  2716                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  2717  0458  1487               	bsf	7,1	;volatile
  2718  0459                     l137:	
  2719                           
  2720                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2721  0459  2C5A               	nop2	;2 cycle nop
  2722                           
  2723                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  2724  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2725  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2726  045C  1587               	bsf	7,3	;volatile
  2727                           
  2728                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  2729  045D  0843               	movf	LCDByte@hn,w
  2730  045E  00C1               	movwf	??_LCDByte
  2731  045F  3004               	movlw	4
  2732  0460                     u1925:	
  2733  0460  1003               	clrc
  2734  0461  0DC1               	rlf	??_LCDByte,f
  2735  0462  3EFF               	addlw	-1
  2736  0463  1D03               	skipz
  2737  0464  2C60               	goto	u1925
  2738  0465  0807               	movf	7,w	;volatile
  2739  0466  390F               	andlw	15
  2740  0467  0441               	iorwf	??_LCDByte,w
  2741  0468  00C2               	movwf	??_LCDByte+1
  2742  0469  0842               	movf	??_LCDByte+1,w
  2743  046A  00C6               	movwf	LCDByte@temp
  2744                           
  2745                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  2746  046B  0846               	movf	LCDByte@temp,w
  2747  046C  0087               	movwf	7	;volatile
  2748                           
  2749                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2750  046D  2C6E               	nop2	;2 cycle nop
  2751  046E  2C6F               	nop2	;2 cycle nop
  2752  046F  0000               	nop
  2753                           
  2754                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  2755  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0471  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0472  1187               	bcf	7,3	;volatile
  2758                           
  2759                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2760  0473  2C74               	nop2	;2 cycle nop
  2761  0474  2C75               	nop2	;2 cycle nop
  2762  0475  0000               	nop
  2763                           
  2764                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  2765  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0478  1587               	bsf	7,3	;volatile
  2768                           
  2769                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  2770  0479  0844               	movf	LCDByte@ln,w
  2771  047A  00C1               	movwf	??_LCDByte
  2772  047B  3004               	movlw	4
  2773  047C                     u1935:	
  2774  047C  1003               	clrc
  2775  047D  0DC1               	rlf	??_LCDByte,f
  2776  047E  3EFF               	addlw	-1
  2777  047F  1D03               	skipz
  2778  0480  2C7C               	goto	u1935
  2779  0481  0807               	movf	7,w	;volatile
  2780  0482  390F               	andlw	15
  2781  0483  0441               	iorwf	??_LCDByte,w
  2782  0484  00C2               	movwf	??_LCDByte+1
  2783  0485  0842               	movf	??_LCDByte+1,w
  2784  0486  00C6               	movwf	LCDByte@temp
  2785                           
  2786                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  2787  0487  0846               	movf	LCDByte@temp,w
  2788  0488  0087               	movwf	7	;volatile
  2789                           
  2790                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2791  0489  2C8A               	nop2	;2 cycle nop
  2792  048A  2C8B               	nop2	;2 cycle nop
  2793  048B  0000               	nop
  2794                           
  2795                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  2796  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2797  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2798  048E  1187               	bcf	7,3	;volatile
  2799                           
  2800                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2801  048F  2C90               	nop2	;2 cycle nop
  2802  0490  2C91               	nop2	;2 cycle nop
  2803  0491  0000               	nop
  2804                           
  2805                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  2806  0492  120A  118A  22BD   	fcall	_LCDBusyLoop
  2807  0495  0008               	return
  2808  0496                     __end_of_LCDByte:	
  2809                           
  2810                           	psect	text11
  2811  02BD                     __ptext11:	
  2812 ;; *************** function _LCDBusyLoop *****************
  2813 ;; Defined at:
  2814 ;;		line 135 in file "lcd_hd44780_pic16.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  status          1    2[BANK0 ] unsigned char 
  2819 ;;  temp            1    1[BANK0 ] unsigned char 
  2820 ;;  busy            1    0[BANK0 ] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         0       0       0       0       0
  2831 ;;      Locals:         0       3       0       0       0
  2832 ;;      Temps:          2       0       0       0       0
  2833 ;;      Totals:         2       3       0       0       0
  2834 ;;Total ram usage:        5 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    1
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_LCDByte
  2841 ;;		_LCDInit
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function _LCDBusyLoop
  2847  02BD                     _LCDBusyLoop:	
  2848                           
  2849                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2853  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  2854  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  2855  02BF  01C0               	clrf	LCDBusyLoop@status
  2856                           
  2857                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  2858  02C0  30F0               	movlw	240
  2859  02C1  00F4               	movwf	??_LCDBusyLoop
  2860  02C2  0874               	movf	??_LCDBusyLoop,w
  2861  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2862  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  2863  02C5  0487               	iorwf	7,f	;volatile
  2864                           
  2865                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  2866  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2867  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2868  02C8  1507               	bsf	7,2	;volatile
  2869                           
  2870                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  2871  02C9  1087               	bcf	7,1	;volatile
  2872                           
  2873                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2874  02CA  2ACB               	nop2	;2 cycle nop
  2875  02CB                     l1809:	
  2876                           ;lcd_hd44780_pic16.c: 153: do
  2877                           
  2878                           
  2879                           ;lcd_hd44780_pic16.c: 154: {
  2880                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  2881  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2882  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2883  02CD  1587               	bsf	7,3	;volatile
  2884                           
  2885                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2886  02CE  2ACF               	nop2	;2 cycle nop
  2887                           
  2888                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  2889  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2890  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2891  02D1  0807               	movf	7,w	;volatile
  2892  02D2  00F4               	movwf	??_LCDBusyLoop
  2893  02D3  3004               	movlw	4
  2894  02D4                     u1855:	
  2895  02D4  1003               	clrc
  2896  02D5  0CF4               	rrf	??_LCDBusyLoop,f
  2897  02D6  3EFF               	addlw	-1
  2898  02D7  1D03               	skipz
  2899  02D8  2AD4               	goto	u1855
  2900  02D9  0874               	movf	??_LCDBusyLoop,w
  2901  02DA  00F5               	movwf	??_LCDBusyLoop+1
  2902  02DB  0875               	movf	??_LCDBusyLoop+1,w
  2903  02DC  00C0               	movwf	LCDBusyLoop@status
  2904                           
  2905                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  2906  02DD  0840               	movf	LCDBusyLoop@status,w
  2907  02DE  00F4               	movwf	??_LCDBusyLoop
  2908  02DF  3003               	movlw	3
  2909  02E0                     u1865:	
  2910  02E0  1003               	clrc
  2911  02E1  0DF4               	rlf	??_LCDBusyLoop,f
  2912  02E2  3EFF               	addlw	-1
  2913  02E3  1D03               	skipz
  2914  02E4  2AE0               	goto	u1865
  2915  02E5  1003               	clrc
  2916  02E6  0D74               	rlf	??_LCDBusyLoop,w
  2917  02E7  00F5               	movwf	??_LCDBusyLoop+1
  2918  02E8  0875               	movf	??_LCDBusyLoop+1,w
  2919  02E9  00C0               	movwf	LCDBusyLoop@status
  2920                           
  2921                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2922  02EA  2AEB               	nop2	;2 cycle nop
  2923                           
  2924                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  2925  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  2926  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  2927  02ED  1187               	bcf	7,3	;volatile
  2928                           
  2929                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2930  02EE  2AEF               	nop2	;2 cycle nop
  2931  02EF  2AF0               	nop2	;2 cycle nop
  2932  02F0  0000               	nop
  2933                           
  2934                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  2935  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2936  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2937  02F3  1587               	bsf	7,3	;volatile
  2938                           
  2939                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2940  02F4  2AF5               	nop2	;2 cycle nop
  2941                           
  2942                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  2943  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2944  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2945  02F7  0807               	movf	7,w	;volatile
  2946  02F8  00F4               	movwf	??_LCDBusyLoop
  2947  02F9  3004               	movlw	4
  2948  02FA                     u1875:	
  2949  02FA  1003               	clrc
  2950  02FB  0CF4               	rrf	??_LCDBusyLoop,f
  2951  02FC  3EFF               	addlw	-1
  2952  02FD  1D03               	skipz
  2953  02FE  2AFA               	goto	u1875
  2954  02FF  0874               	movf	??_LCDBusyLoop,w
  2955  0300  00F5               	movwf	??_LCDBusyLoop+1
  2956  0301  0875               	movf	??_LCDBusyLoop+1,w
  2957  0302  00BF               	movwf	LCDBusyLoop@temp
  2958                           
  2959                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  2960  0303  300F               	movlw	15
  2961  0304  00F4               	movwf	??_LCDBusyLoop
  2962  0305  0874               	movf	??_LCDBusyLoop,w
  2963  0306  05BF               	andwf	LCDBusyLoop@temp,f
  2964                           
  2965                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  2966  0307  0840               	movf	LCDBusyLoop@status,w
  2967  0308  043F               	iorwf	LCDBusyLoop@temp,w
  2968  0309  00F4               	movwf	??_LCDBusyLoop
  2969  030A  0874               	movf	??_LCDBusyLoop,w
  2970  030B  00C0               	movwf	LCDBusyLoop@status
  2971                           
  2972                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  2973  030C  0840               	movf	LCDBusyLoop@status,w
  2974  030D  3980               	andlw	128
  2975  030E  00F4               	movwf	??_LCDBusyLoop
  2976  030F  0874               	movf	??_LCDBusyLoop,w
  2977  0310  00BE               	movwf	LCDBusyLoop@busy
  2978                           
  2979                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2980  0311  2B12               	nop2	;2 cycle nop
  2981                           
  2982                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  2983  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0314  1187               	bcf	7,3	;volatile
  2986                           
  2987                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2988  0315  2B16               	nop2	;2 cycle nop
  2989  0316  2B17               	nop2	;2 cycle nop
  2990  0317  0000               	nop
  2991                           
  2992                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  2993  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2995  031A  083E               	movf	LCDBusyLoop@busy,w
  2996  031B  1D03               	btfss	3,2
  2997  031C  2ACB               	goto	l1809
  2998                           
  2999                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  3000  031D  1107               	bcf	7,2	;volatile
  3001                           
  3002                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  3003  031E  300F               	movlw	15
  3004  031F  00F4               	movwf	??_LCDBusyLoop
  3005  0320  0874               	movf	??_LCDBusyLoop,w
  3006  0321  1683               	bsf	3,5	;RP0=1, select bank1
  3007  0322  1303               	bcf	3,6	;RP1=0, select bank1
  3008  0323  0587               	andwf	7,f	;volatile
  3009  0324  0008               	return
  3010  0325                     __end_of_LCDBusyLoop:	
  3011                           
  3012                           	psect	text12
  3013  04E3                     __ptext12:	
  3014 ;; *************** function _IOInit *****************
  3015 ;; Defined at:
  3016 ;;		line 114 in file "do_am.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		None
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         0       0       0       0       0
  3031 ;;      Locals:         0       0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0
  3033 ;;      Totals:         0       0       0       0       0
  3034 ;;Total ram usage:        0 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function _IOInit
  3046  04E3                     _IOInit:	
  3047                           
  3048                           ;do_am.c: 117: (TRISAbits.TRISA6 = 1);
  3049                           
  3050                           ;incstack = 0
  3051                           ; Regs used in _IOInit: []
  3052  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  3053  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  3054  04E5  1705               	bsf	5,6	;volatile
  3055                           
  3056                           ;do_am.c: 120: (TRISAbits.TRISA0 = 1);
  3057  04E6  1405               	bsf	5,0	;volatile
  3058                           
  3059                           ;do_am.c: 121: ANSELbits.ANS0 = 0;
  3060  04E7  1683               	bsf	3,5	;RP0=1, select bank3
  3061  04E8  1703               	bsf	3,6	;RP1=1, select bank3
  3062  04E9  1008               	bcf	8,0	;volatile
  3063                           
  3064                           ;do_am.c: 123: (TRISAbits.TRISA1 = 1);
  3065  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  3066  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  3067  04EC  1485               	bsf	5,1	;volatile
  3068                           
  3069                           ;do_am.c: 124: ANSELbits.ANS1 = 0;
  3070  04ED  1683               	bsf	3,5	;RP0=1, select bank3
  3071  04EE  1703               	bsf	3,6	;RP1=1, select bank3
  3072  04EF  1088               	bcf	8,1	;volatile
  3073                           
  3074                           ;do_am.c: 125: (TRISAbits.TRISA2 = 1);
  3075  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  3076  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  3077  04F2  1505               	bsf	5,2	;volatile
  3078                           
  3079                           ;do_am.c: 126: ANSELbits.ANS2 = 0;
  3080  04F3  1683               	bsf	3,5	;RP0=1, select bank3
  3081  04F4  1703               	bsf	3,6	;RP1=1, select bank3
  3082  04F5  1108               	bcf	8,2	;volatile
  3083                           
  3084                           ;do_am.c: 127: (TRISAbits.TRISA3 = 1);
  3085  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  3086  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  3087  04F8  1585               	bsf	5,3	;volatile
  3088                           
  3089                           ;do_am.c: 128: ANSELbits.ANS3 = 0;
  3090  04F9  1683               	bsf	3,5	;RP0=1, select bank3
  3091  04FA  1703               	bsf	3,6	;RP1=1, select bank3
  3092  04FB  1188               	bcf	8,3	;volatile
  3093                           
  3094                           ;do_am.c: 130: (TRISAbits.TRISA7 = 0);
  3095  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  3096  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  3097  04FE  1385               	bcf	5,7	;volatile
  3098                           
  3099                           ;do_am.c: 132: (TRISBbits.TRISB0 = 0);
  3100  04FF  1006               	bcf	6,0	;volatile
  3101                           
  3102                           ;do_am.c: 133: ANSELHbits.ANS12 = 0;
  3103  0500  1683               	bsf	3,5	;RP0=1, select bank3
  3104  0501  1703               	bsf	3,6	;RP1=1, select bank3
  3105  0502  1209               	bcf	9,4	;volatile
  3106                           
  3107                           ;do_am.c: 135: (TRISBbits.TRISB1 = 0);
  3108  0503  1683               	bsf	3,5	;RP0=1, select bank1
  3109  0504  1303               	bcf	3,6	;RP1=0, select bank1
  3110  0505  1086               	bcf	6,1	;volatile
  3111                           
  3112                           ;do_am.c: 136: ANSELHbits.ANS10 = 0;
  3113  0506  1683               	bsf	3,5	;RP0=1, select bank3
  3114  0507  1703               	bsf	3,6	;RP1=1, select bank3
  3115  0508  1109               	bcf	9,2	;volatile
  3116                           
  3117                           ;do_am.c: 138: (TRISBbits.TRISB2 = 0);
  3118  0509  1683               	bsf	3,5	;RP0=1, select bank1
  3119  050A  1303               	bcf	3,6	;RP1=0, select bank1
  3120  050B  1106               	bcf	6,2	;volatile
  3121                           
  3122                           ;do_am.c: 139: ANSELHbits.ANS8 = 0;
  3123  050C  1683               	bsf	3,5	;RP0=1, select bank3
  3124  050D  1703               	bsf	3,6	;RP1=1, select bank3
  3125  050E  1009               	bcf	9,0	;volatile
  3126                           
  3127                           ;do_am.c: 141: (TRISBbits.TRISB3 = 0);
  3128  050F  1683               	bsf	3,5	;RP0=1, select bank1
  3129  0510  1303               	bcf	3,6	;RP1=0, select bank1
  3130  0511  1186               	bcf	6,3	;volatile
  3131                           
  3132                           ;do_am.c: 142: ANSELHbits.ANS9 = 0;
  3133  0512  1683               	bsf	3,5	;RP0=1, select bank3
  3134  0513  1703               	bsf	3,6	;RP1=1, select bank3
  3135  0514  1089               	bcf	9,1	;volatile
  3136                           
  3137                           ;do_am.c: 144: RA7 = 1;
  3138  0515  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0516  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0517  1785               	bsf	5,7	;volatile
  3141                           
  3142                           ;do_am.c: 147: (TRISBbits.TRISB4 = 1);
  3143  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0519  1303               	bcf	3,6	;RP1=0, select bank1
  3145  051A  1606               	bsf	6,4	;volatile
  3146                           
  3147                           ;do_am.c: 148: ANSELHbits.ANS11 = 0;
  3148  051B  1683               	bsf	3,5	;RP0=1, select bank3
  3149  051C  1703               	bsf	3,6	;RP1=1, select bank3
  3150  051D  1189               	bcf	9,3	;volatile
  3151                           
  3152                           ;do_am.c: 150: (TRISBbits.TRISB6 = 1);
  3153  051E  1683               	bsf	3,5	;RP0=1, select bank1
  3154  051F  1303               	bcf	3,6	;RP1=0, select bank1
  3155  0520  1706               	bsf	6,6	;volatile
  3156                           
  3157                           ;do_am.c: 152: (TRISBbits.TRISB5 = 1);
  3158  0521  1686               	bsf	6,5	;volatile
  3159                           
  3160                           ;do_am.c: 153: ANSELHbits.ANS13 = 0;
  3161  0522  1683               	bsf	3,5	;RP0=1, select bank3
  3162  0523  1703               	bsf	3,6	;RP1=1, select bank3
  3163  0524  1289               	bcf	9,5	;volatile
  3164                           
  3165                           ;do_am.c: 155: (TRISBbits.TRISB7 = 1);
  3166  0525  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0526  1303               	bcf	3,6	;RP1=0, select bank1
  3168  0527  1786               	bsf	6,7	;volatile
  3169  0528  0008               	return
  3170  0529                     __end_of_IOInit:	
  3171                           
  3172                           	psect	text13
  3173  05D0                     __ptext13:	
  3174 ;; *************** function _ADCInit *****************
  3175 ;; Defined at:
  3176 ;;		line 7 in file "adc_pic16.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3190 ;;      Params:         0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    1
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           
  3205                           ;psect for function _ADCInit
  3206  05D0                     _ADCInit:	
  3207                           
  3208                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  3209                           
  3210                           ;incstack = 0
  3211                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  3212  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  3213  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  3214  05D2  1686               	bsf	6,5	;volatile
  3215                           
  3216                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  3217  05D3  1683               	bsf	3,5	;RP0=1, select bank3
  3218  05D4  1703               	bsf	3,6	;RP1=1, select bank3
  3219  05D5  1689               	bsf	9,5	;volatile
  3220                           
  3221                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  3222  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  3223  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  3224  05D8  121F               	bcf	31,4	;volatile
  3225                           
  3226                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  3227  05D9  30C0               	movlw	192
  3228  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3229  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3230  05DC  049F               	iorwf	31,f	;volatile
  3231                           
  3232                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  3233  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  3234  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  3235  05DF  179F               	bsf	31,7	;volatile
  3236                           
  3237                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  3238  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3239  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  3240  05E2  141F               	bsf	31,0	;volatile
  3241  05E3  0008               	return
  3242  05E4                     __end_of_ADCInit:	
  3243                           
  3244                           	psect	text14
  3245  0616                     __ptext14:	
  3246 ;; *************** function _ISR *****************
  3247 ;; Defined at:
  3248 ;;		line 177 in file "do_am.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		None
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3262 ;;      Params:         0       0       0       0       0
  3263 ;;      Locals:         0       0       0       0       0
  3264 ;;      Temps:          4       0       0       0       0
  3265 ;;      Totals:         4       0       0       0       0
  3266 ;;Total ram usage:        4 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		Interrupt level 1
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           
  3276                           ;psect for function _ISR
  3277  0616                     _ISR:	
  3278  0616  0873               	movf	??_ISR+3,w
  3279  0617  00FF               	movwf	127
  3280  0618  0872               	movf	??_ISR+2,w
  3281  0619  008A               	movwf	10
  3282  061A  0871               	movf	??_ISR+1,w
  3283  061B  0084               	movwf	4
  3284  061C  0E70               	swapf	??_ISR^(0+-128),w
  3285  061D  0083               	movwf	3
  3286  061E  0EFE               	swapf	126,f
  3287  061F  0E7E               	swapf	126,w
  3288  0620  0009               	retfie
  3289  0621                     __end_of_ISR:	
  3290  007E                     btemp	set	126	;btemp
  3291  007E                     wtemp	set	126
  3292  007E                     wtemp0	set	126
  3293  0080                     wtemp1	set	128
  3294  0082                     wtemp2	set	130
  3295  0084                     wtemp3	set	132
  3296  0086                     wtemp4	set	134
  3297  0088                     wtemp5	set	136
  3298  007F                     wtemp6	set	127
  3299  007E                     ttemp	set	126
  3300  007E                     ttemp0	set	126
  3301  0081                     ttemp1	set	129
  3302  0084                     ttemp2	set	132
  3303  0087                     ttemp3	set	135
  3304  007F                     ttemp4	set	127
  3305  007E                     ltemp	set	126
  3306  007E                     ltemp0	set	126
  3307  0082                     ltemp1	set	130
  3308  0086                     ltemp2	set	134
  3309  0080                     ltemp3	set	128
  3310                           
  3311                           	psect	intentry
  3312  0004                     __pintentry:	
  3313                           ;incstack = 0
  3314                           ; Regs used in _ISR: []
  3315                           
  3316  0004                     interrupt_function:	
  3317  007E                     saved_w	set	btemp
  3318  0004  00FE               	movwf	btemp
  3319  0005  0E03               	swapf	3,w
  3320  0006  00F0               	movwf	??_ISR
  3321  0007  0804               	movf	4,w
  3322  0008  00F1               	movwf	??_ISR+1
  3323  0009  080A               	movf	10,w
  3324  000A  00F2               	movwf	??_ISR+2
  3325  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3326  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3327  000D  087F               	movf	btemp+1,w
  3328  000E  00F3               	movwf	??_ISR+3
  3329  000F  120A  118A  2E16   	ljmp	_ISR


Data Sizes:
    Strings     34
    Constant    0
    Data        16
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     26      70
    BANK1            80     11      11
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S466$name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 

    g_menu.items.name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_9(CODE[1]), STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[1]), STR_2(CODE[9]), 
		 -> STR_1(CODE[1]), 

    main@byte_372	PTR struct . size(1) Largest target is 21
		 -> msg(BANK0[21]), 

    main@byte_363	PTR struct . size(1) Largest target is 21
		 -> msg(BANK0[21]), 

    main@byte_353	PTR struct . size(1) Largest target is 21
		 -> msg(BANK0[21]), 

    main@byte	PTR struct . size(1) Largest target is 21
		 -> msg(BANK0[21]), 

    main@s	PTR unsigned char  size(1) Largest target is 21
		 -> msg(BANK0[21]), 

    pmsg	PTR struct . size(1) Largest target is 21
		 -> msg(BANK0[21]), 

    sp__memcpy	PTR void  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_LCDGotoXY
    _main->_LCDWriteString
    _MenuInit->_LoadMenuItem
    _LoadMenuItem->_eeprom_read
    _LCDWriteString->_LCDByte
    _LCDWriteInt->___awdiv
    _LCDWriteInt->___awmod
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCDWriteInt
    _MenuInit->_LoadMenuItem
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   13624
                                             23 BANK0      3     3      0
                                              0 BANK1     11    11      0
                            _ADCInit
                             _IOInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                           _MenuInit
 ---------------------------------------------------------------------------------
 (1) _MenuInit                                             1     1      0      93
                                              1 BANK0      1     1      0
                       _LoadMenuItem
 ---------------------------------------------------------------------------------
 (2) _LoadMenuItem                                         3     3      0      93
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     4      0    2215
                                              7 COMMON     1     1      0
                                              9 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    3756
                                              9 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                              4 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     599
                                              4 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    2020
                                              9 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    2358
                                              7 COMMON     1     1      0
                                              9 BANK0      2     1      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1714
                                              6 COMMON     1     0      1
                                              3 BANK0      6     6      0
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     176
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _IOInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _IOInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _MenuInit
     _LoadMenuItem
       _eeprom_read

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      B       B       7       13.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jun 22 00:00:48 2016

            ?_LCDBusyLoop 0070                __CFG_CP$ON 0000                         pc 0002  
                      l90 00F3                        l98 013F                        _RD 0C60  
             __CFG_CPD$ON 0000                        _WR 0C61              ___awdiv@sign 0040  
                      fsr 0004               __CFG_LVP$ON 0000                       l104 017F  
                     l136 0458                       l137 0459                       l185 05AE  
                     l257 05B6                       l186 0597                       _GIE 005F  
                     _RA0 0028                       _RA1 0029                       _RA2 002A  
                     _RA3 002B                       _RC1 0039                       _RC2 003A  
                     _RA6 002E                       _RC3 003B                       _RA7 002F  
                     _ISR 0616                       _msg 0029                       fsr0 0004  
         __end_of_ADCInit 05E4                       indf 0000              ___awmod@sign 0040  
            __CFG_IESO$ON 0000   LCDWriteInt@field_length 0049           __end_of_LCDByte 0496  
         __end_of_LCDInit 0389              ?_LCDWriteInt 0047                      ?_ISR 0070  
             LCDByte@temp 0046                      l2111 0281                      l2041 0599  
                    l2201 0135                      l2043 059B                      l2109 024C  
                    l2213 012D                      l2047 05A0                      l2119 0296  
                    l2223 01E3                      l2215 01BF                      l2081 038D  
                    l2209 0175                      l2161 0091                      l2145 0058  
                    l2083 03E2                      l2067 03BB                      l2075 03C9  
                    l2155 007C                      l2229 01F8                      l2165 00B4  
                    l2187 00E9                      l2179 00AA                      l1809 02CB  
                    l1921 043A                      l1913 0427                      l1905 0403  
                    l1907 0411                      l1917 0432                      l1933 04A2  
                    l1951 04CB                      l1945 04AF                      l1937 04A9  
                    l1947 04BD                      l1955 04D6             ?_LoadMenuItem 0070  
                    l1895 03FB                      l1959 04DE                      l1889 03F0  
                    STR_1 0575              __CFG_WDTE$ON 0000                      STR_2 056D  
                    STR_3 0575                      STR_4 058A                      STR_5 0576  
                    STR_6 057B                      STR_7 0580                      STR_8 0585  
                    u2005 041E                      u2015 0428                      u2105 04CC  
                    u2075 04B2                      u2245 02A3                      u2095 04C3  
                    u1905 0445                      u1925 0460                      u1855 02D4  
                    u1935 047C                      u1865 02E0                      u2737 00B0  
                    u1875 02FA                      u2747 00EF                      u2757 013B  
                    u1975 0406                      u2767 017B                      u2777 032C  
                    u1995 0412                      _WREN 0C62              __CFG_WRT$OFF 0000  
           __CFG_FCMEN$ON 0000                      _main 0039                      _mode 0078  
      __size_of_LCDGotoXY 0026                      _pmsg 0065                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0012  
                    ttemp 007E                      wtemp 007E             __CFG_MCLRE$ON 0000  
                   ??_ISR 0070                     ?_main 0070           __end_of___awdiv 043F  
                   _EEADR 010D              main@byte_353 00A8              main@byte_363 00A9  
            main@byte_372 00AA           __end_of___awmod 04E3                     _CARRY 0018  
            LCDInit@style 0049           ___awdiv@divisor 0074           ___awdiv@counter 003F  
                   _PORTC 0007                     _TRISC 0087            ??_LoadMenuItem 0076  
                   main@i 00A3                     main@s 00A6                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 0015  
            __end_of_main 021E          __end_of_MenuInit 0567                 ??_ADCInit 0074  
                  ??_main 0055         __end_of_LCDGotoXY 05B5             LCDByte@isdata 0076  
               ??_LCDByte 0041                 ??_LCDInit 0047             main@count_333 00A1  
                  _ADRESH 001E                    _ADRESL 009E             main@count_381 00A2  
                  _EEDATA 010C                    _EECON1 018C                    _EECON2 018D  
        ___awdiv@dividend 0076                    _IOInit 04E3            __CFG_PWRTE$OFF 0000  
          _LCDWriteString 0389      __size_of_eeprom_read 001B                 ??___awdiv 003E  
               ??___awmod 003E                    _g_menu 0020      __size_of_LCDBusyLoop 0068  
        ___awdiv@quotient 0041           ___awmod@divisor 0074           ___awmod@counter 003F  
            __pdataCOMMON 0078              LCDWriteInt@i 0053              LCDWriteInt@j 0051  
                  saved_w 007E      __size_of_LCDWriteInt 009F   __end_of__initialization 0035  
         eeprom_read@addr 0075    __end_of_LCDWriteString 03E4                 LCDByte@hn 0043  
               LCDByte@ln 0044            __pcstackCOMMON 0070              __pidataBANK0 0608  
    __end_of_LoadMenuItem 05F7                __pbssBANK0 0020                   ?_IOInit 0070  
               ?_MenuInit 0070           ?_LCDWriteString 0070                __pmaintext 0039  
              __pintentry 0004                   _ADCInit 05D0                   _LCDByte 043F  
                 _LCDInit 0325                __stringtab 0567                ??_MenuInit 003F  
         __size_of_IOInit 0046                   ___cgram 0058                   ___awdiv 03E4  
                 ___awmod 0496                 _ANSELbits 0188                   __ptext1 0529  
                 __ptext2 05E4                   __ptext3 05B5                   __ptext4 0389  
                 __ptext5 021E                   __ptext6 0496                   __ptext7 03E4  
                 __ptext8 0325                   __ptext9 058F              __size_of_ISR 000B  
        ___awmod@dividend 0076                 _LCDGotoXY 058F                   _submode 0079  
                 clrloop0 0622      end_of_initialization 0035     __size_of_LoadMenuItem 0013  
       LCDWriteString@msg 0049                 _TRISAbits 0085                 _TRISBbits 0086  
               _TRISCbits 0087                ?_LCDGotoXY 0047              _LoadMenuItem 05E4  
              LCDInit@__i 004A             ??_eeprom_read 0074                LCDGotoXY@x 0048  
              LCDGotoXY@y 0047            __end_of_IOInit 0529          LoadMenuItem@item 003E  
           ??_LCDBusyLoop 0074             __pidataCOMMON 0629       start_initialization 0015  
             __end_of_ISR 0621             ??_LCDWriteInt 004A          ??_LCDWriteString 0077  
                ??_IOInit 0074  __CFG_FOSC$INTRC_NOCLKOUT 0000         __size_of_MenuInit 003E  
     __end_of_eeprom_read 05D0                init_fetch0 05F7               __pdataBANK0 0058  
                ?_ADCInit 0070       __end_of_LCDBusyLoop 0325                  ?_LCDByte 0076  
                ?_LCDInit 0070                  LCDByte@c 0045                 ___latbits 0002  
           __pcstackBANK0 003E             __pcstackBANK1 00A0               ??_LCDGotoXY 0077  
        LCDWriteInt@F1646 0060       __end_of_LCDWriteInt 02BD                  ?___awdiv 0074  
                ?___awmod 0074                 __pstrings 0567           LCDBusyLoop@busy 003E  
         LCDBusyLoop@temp 003F         interrupt_function 0004                 clear_ram0 0621  
             _eeprom_read 05B5               _LCDBusyLoop 02BD          LCDWriteString@cc 0048  
        __size_of_ADCInit 0014                _ADCON0bits 001F               __stringbase 056C  
              _ADCON1bits 009F                 main@i_362 00A5                 main@i_383 00A4  
               main@count 00A0          __size_of_LCDByte 0057          __size_of_LCDInit 0064  
             _LCDWriteInt 021E                  _MenuInit 0529          __size_of___awdiv 005B  
        __size_of___awmod 004D         LCDBusyLoop@status 0040        __end_of__stringtab 056D  
              _ANSELHbits 0189                  __ptext10 043F                  __ptext11 02BD  
                __ptext12 04E3                  __ptext13 05D0                  __ptext14 0616  
       __CFG_BOR4V$BOR21V 0000             __size_of_main 01E5                  main@byte 00A7  
                init_ram0 05FB                  intlevel1 0000            LCDWriteInt@val 0047  
          LCDWriteInt@str 004C                 stringcode 0567                  stringdir 0567  
                stringtab 0567       LCDWriteString@count 0047              ?_eeprom_read 0070  
 __size_of_LCDWriteString 005B  
