

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Jun 19 20:20:35 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	strings,global,class=STRING,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0009                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  0089                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  008F                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0093                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  0105                     	;# 
   105  0107                     	;# 
   106  0108                     	;# 
   107  0109                     	;# 
   108  010C                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0185                     	;# 
   114  0187                     	;# 
   115  0188                     	;# 
   116  0189                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  008F                     	;# 
   162  0090                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0093                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0097                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  0105                     	;# 
   181  0107                     	;# 
   182  0108                     	;# 
   183  0109                     	;# 
   184  010C                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0185                     	;# 
   190  0187                     	;# 
   191  0188                     	;# 
   192  0189                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  008F                     	;# 
   238  0090                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0093                     	;# 
   243  0093                     	;# 
   244  0094                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  0105                     	;# 
   257  0107                     	;# 
   258  0108                     	;# 
   259  0109                     	;# 
   260  010C                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  010F                     	;# 
   265  0185                     	;# 
   266  0187                     	;# 
   267  0188                     	;# 
   268  0189                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  000E                     	;# 
   286  000F                     	;# 
   287  0010                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0014                     	;# 
   292  0015                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  001D                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  0081                     	;# 
   306  0085                     	;# 
   307  0086                     	;# 
   308  0087                     	;# 
   309  0089                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  008F                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0093                     	;# 
   318  0093                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0095                     	;# 
   322  0096                     	;# 
   323  0097                     	;# 
   324  0098                     	;# 
   325  0099                     	;# 
   326  009A                     	;# 
   327  009B                     	;# 
   328  009C                     	;# 
   329  009D                     	;# 
   330  009E                     	;# 
   331  009F                     	;# 
   332  0105                     	;# 
   333  0107                     	;# 
   334  0108                     	;# 
   335  0109                     	;# 
   336  010C                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  0185                     	;# 
   342  0187                     	;# 
   343  0188                     	;# 
   344  0189                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347  0000                     	;# 
   348  0001                     	;# 
   349  0002                     	;# 
   350  0003                     	;# 
   351  0004                     	;# 
   352  0005                     	;# 
   353  0006                     	;# 
   354  0007                     	;# 
   355  0009                     	;# 
   356  000A                     	;# 
   357  000B                     	;# 
   358  000C                     	;# 
   359  000D                     	;# 
   360  000E                     	;# 
   361  000E                     	;# 
   362  000F                     	;# 
   363  0010                     	;# 
   364  0011                     	;# 
   365  0012                     	;# 
   366  0013                     	;# 
   367  0014                     	;# 
   368  0015                     	;# 
   369  0015                     	;# 
   370  0016                     	;# 
   371  0017                     	;# 
   372  0018                     	;# 
   373  0019                     	;# 
   374  001A                     	;# 
   375  001B                     	;# 
   376  001B                     	;# 
   377  001C                     	;# 
   378  001D                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  0081                     	;# 
   382  0085                     	;# 
   383  0086                     	;# 
   384  0087                     	;# 
   385  0089                     	;# 
   386  008C                     	;# 
   387  008D                     	;# 
   388  008E                     	;# 
   389  008F                     	;# 
   390  0090                     	;# 
   391  0091                     	;# 
   392  0092                     	;# 
   393  0093                     	;# 
   394  0093                     	;# 
   395  0093                     	;# 
   396  0094                     	;# 
   397  0095                     	;# 
   398  0096                     	;# 
   399  0097                     	;# 
   400  0098                     	;# 
   401  0099                     	;# 
   402  009A                     	;# 
   403  009B                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009E                     	;# 
   407  009F                     	;# 
   408  0105                     	;# 
   409  0107                     	;# 
   410  0108                     	;# 
   411  0109                     	;# 
   412  010C                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  0185                     	;# 
   418  0187                     	;# 
   419  0188                     	;# 
   420  0189                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423                           
   424                           	psect	idataCOMMON
   425  07E7                     __pidataCOMMON:	
   426                           
   427                           ;initializer for _phMsg
   428  07E7  34A0               	retlw	low (_msg| 0)
   429                           
   430                           ;initializer for _tuneUpTempDir
   431  07E8  3401               	retlw	1
   432                           
   433                           	psect	idataBANK0
   434  079A                     __pidataBANK0:	
   435                           
   436                           ;initializer for ___cgram
   437  079A  340C               	retlw	12
   438  079B  3412               	retlw	18
   439  079C  3412               	retlw	18
   440  079D  340C               	retlw	12
   441  079E  3400               	retlw	0
   442  079F  3400               	retlw	0
   443  07A0  3400               	retlw	0
   444  07A1  3400               	retlw	0
   445                           
   446                           ;initializer for LCDWriteInt@F1646
   447  07A2  34F0               	retlw	240
   448  07A3  34F0               	retlw	240
   449  07A4  34F0               	retlw	240
   450  07A5  34F0               	retlw	240
   451  07A6  34F0               	retlw	240
   452                           
   453                           ;initializer for _mode
   454  07A7  3401               	retlw	1
   455                           
   456                           ;initializer for _submode
   457  07A8  3401               	retlw	1
   458                           
   459                           	psect	idataBANK1
   460  0706                     __pidataBANK1:	
   461                           
   462                           ;initializer for _msg
   463  0706  3461               	retlw	97
   464  0707  3461               	retlw	97
   465  0708  3461               	retlw	97
   466  0709  3461               	retlw	97
   467  070A  3461               	retlw	97
   468  070B  3400               	retlw	0
   469  070C  3400               	retlw	0
   470  070D  3400               	retlw	0
   471  070E  3400               	retlw	0
   472  070F  3400               	retlw	0
   473  0710  3400               	retlw	0
   474  0711  3400               	retlw	0
   475  0712  3400               	retlw	0
   476  0713  3400               	retlw	0
   477  0714  3400               	retlw	0
   478  0715  3400               	retlw	0
   479  0716  3400               	retlw	0
   480  0717  3400               	retlw	0
   481  0718  3400               	retlw	0
   482  0719  3400               	retlw	0
   483  071A  3400               	retlw	0
   484  071B  3400               	retlw	0
   485  071C  3400               	retlw	0
   486  071D  3400               	retlw	0
   487  071E  3400               	retlw	0
   488  071F  3400               	retlw	0
   489  0720  3400               	retlw	0
   490  0721  3400               	retlw	0
   491  0722  3400               	retlw	0
   492  0723  3400               	retlw	0
   493  0724  3400               	retlw	0
   494  0725  3400               	retlw	0
   495  001F                     _ADCON0bits	set	31
   496  001E                     _ADRESH	set	30
   497  0007                     _PORTC	set	7
   498  0018                     _CARRY	set	24
   499  005F                     _GIE	set	95
   500  002E                     _RA6	set	46
   501  002F                     _RA7	set	47
   502  0034                     _RB4	set	52
   503  0035                     _RB5	set	53
   504  0036                     _RB6	set	54
   505  0037                     _RB7	set	55
   506  0039                     _RC1	set	57
   507  003A                     _RC2	set	58
   508  003B                     _RC3	set	59
   509  009F                     _ADCON1bits	set	159
   510  009E                     _ADRESL	set	158
   511  0085                     _TRISAbits	set	133
   512  0086                     _TRISBbits	set	134
   513  0087                     _TRISC	set	135
   514  0087                     _TRISCbits	set	135
   515  010D                     _EEADR	set	269
   516  010C                     _EEDATA	set	268
   517  0189                     _ANSELHbits	set	393
   518  0188                     _ANSELbits	set	392
   519  018C                     _EECON1	set	396
   520  018D                     _EECON2	set	397
   521  0C60                     _RD	set	3168
   522  0C61                     _WR	set	3169
   523  0C62                     _WREN	set	3170
   524                           
   525                           	psect	strings
   526  0400                     __pstrings:	
   527  0400                     stringtab:	
   528  0400                     __stringtab:	
   529  0400                     stringcode:	
   530                           ;	String table - string pointers are 1 byte each
   531                           
   532  0400                     stringdir:	
   533  0400  3004               	movlw	high stringdir
   534  0401  008A               	movwf	10
   535  0402  0804               	movf	4,w
   536  0403  0A84               	incf	4,f
   537  0404  0782               	addwf	2,f
   538  0405                     __stringbase:	
   539  0405  3400               	retlw	0
   540  0406                     __end_of__stringtab:	
   541  0406                     STR_9:	
   542  0406  344E               	retlw	78	;'N'
   543  0407  344F               	retlw	79	;'O'
   544  0408  3454               	retlw	84	;'T'
   545  0409  3445               	retlw	69	;'E'
   546  040A  3444               	retlw	68	;'D'
   547  040B  3449               	retlw	73	;'I'
   548  040C  3454               	retlw	84	;'T'
   549  040D  3420               	retlw	32	;' '
   550  040E  344D               	retlw	77	;'M'
   551  040F  344F               	retlw	79	;'O'
   552  0410  3444               	retlw	68	;'D'
   553  0411  3445               	retlw	69	;'E'
   554  0412  3400               	retlw	0
   555  0413                     STR_10:	
   556  0413  344E               	retlw	78	;'N'
   557  0414  344F               	retlw	79	;'O'
   558  0415  3452               	retlw	82	;'R'
   559  0416  344D               	retlw	77	;'M'
   560  0417  3441               	retlw	65	;'A'
   561  0418  344C               	retlw	76	;'L'
   562  0419  3420               	retlw	32	;' '
   563  041A  344D               	retlw	77	;'M'
   564  041B  344F               	retlw	79	;'O'
   565  041C  3444               	retlw	68	;'D'
   566  041D  3445               	retlw	69	;'E'
   567  041E  3400               	retlw	0
   568  041F                     STR_7:	
   569  041F  344D               	retlw	77	;'M'
   570  0420  3445               	retlw	69	;'E'
   571  0421  344E               	retlw	78	;'N'
   572  0422  3455               	retlw	85	;'U'
   573  0423  3420               	retlw	32	;' '
   574  0424  344D               	retlw	77	;'M'
   575  0425  344F               	retlw	79	;'O'
   576  0426  3444               	retlw	68	;'D'
   577  0427  3445               	retlw	69	;'E'
   578  0428  3400               	retlw	0
   579  0429                     STR_13:	
   580  0429  3449               	retlw	73	;'I'
   581  042A  3444               	retlw	68	;'D'
   582  042B  3431               	retlw	49	;'1'
   583  042C  343A               	retlw	58	;':'
   584  042D  3400               	retlw	0
   585  042E                     STR_14:	
   586  042E  3449               	retlw	73	;'I'
   587  042F  3444               	retlw	68	;'D'
   588  0430  3432               	retlw	50	;'2'
   589  0431  343A               	retlw	58	;':'
   590  0432  3400               	retlw	0
   591  0433                     STR_15:	
   592  0433  3449               	retlw	73	;'I'
   593  0434  3444               	retlw	68	;'D'
   594  0435  3433               	retlw	51	;'3'
   595  0436  343A               	retlw	58	;':'
   596  0437  3400               	retlw	0
   597  0438                     STR_16:	
   598  0438  3449               	retlw	73	;'I'
   599  0439  3444               	retlw	68	;'D'
   600  043A  3434               	retlw	52	;'4'
   601  043B  343A               	retlw	58	;':'
   602  043C  3400               	retlw	0
   603  043D                     STR_1:	
   604  043D  3443               	retlw	67	;'C'
   605  043E  3475               	retlw	117	;'u'
   606  043F  3472               	retlw	114	;'r'
   607  0440  343A               	retlw	58	;':'
   608  0441  3400               	retlw	0
   609  0442                     STR_4:	
   610  0442  344D               	retlw	77	;'M'
   611  0443  3461               	retlw	97	;'a'
   612  0444  3478               	retlw	120	;'x'
   613  0445  343A               	retlw	58	;':'
   614  0446  3400               	retlw	0
   615  0447                     STR_12:	
   616  0447  3444               	retlw	68	;'D'
   617  0448  344F               	retlw	79	;'O'
   618  0449  3457               	retlw	87	;'W'
   619  044A  344E               	retlw	78	;'N'
   620  044B  3400               	retlw	0
   621  044C                     STR_3:	
   622  044C  3457               	retlw	87	;'W'
   623  044D  3461               	retlw	97	;'a'
   624  044E  343A               	retlw	58	;':'
   625  044F  3400               	retlw	0
   626  0450                     STR_2:	
   627  0450  3425               	retlw	37	;'%'
   628  0451  3430               	retlw	48	;'0'
   629  0452  3443               	retlw	67	;'C'
   630  0453  3400               	retlw	0
   631  0454                     STR_6:	
   632  0454  344F               	retlw	79	;'O'
   633  0455  3446               	retlw	70	;'F'
   634  0456  3446               	retlw	70	;'F'
   635  0457  3400               	retlw	0
   636  0458                     STR_11:	
   637  0458  3455               	retlw	85	;'U'
   638  0459  3450               	retlw	80	;'P'
   639  045A  3400               	retlw	0
   640  042D                     
   641                           ; #config settings
   642  0000                     
   643                           	psect	cinit
   644  0015                     start_initialization:	
   645  0015                     __initialization:	
   646                           
   647                           ; Clear objects allocated to COMMON
   648  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   649                           
   650                           ; Clear objects allocated to BANK0
   651  0016  01DB               	clrf	__pbssBANK0& (0+127)
   652  0017  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   653  0018  01DD               	clrf	(__pbssBANK0+2)& (0+127)
   654  0019  01DE               	clrf	(__pbssBANK0+3)& (0+127)
   655  001A  01DF               	clrf	(__pbssBANK0+4)& (0+127)
   656  001B  01E0               	clrf	(__pbssBANK0+5)& (0+127)
   657  001C  01E1               	clrf	(__pbssBANK0+6)& (0+127)
   658  001D  01E2               	clrf	(__pbssBANK0+7)& (0+127)
   659  001E  01E3               	clrf	(__pbssBANK0+8)& (0+127)
   660                           
   661                           ; Initialize objects allocated to BANK1
   662  001F  1383               	bcf	3,7	;select IRP bank0
   663  0020  30C0               	movlw	low (__pdataBANK1+32)
   664  0021  00FD               	movwf	btemp+-1
   665  0022  3007               	movlw	high __pidataBANK1
   666  0023  00FE               	movwf	btemp
   667  0024  3006               	movlw	low __pidataBANK1
   668  0025  00FF               	movwf	btemp+1
   669  0026  30A0               	movlw	low __pdataBANK1
   670  0027  0084               	movwf	4
   671  0028  120A  118A  276B  120A  118A  	fcall	init_ram0
   672                           
   673                           ; Initialize objects allocated to BANK0
   674  002D  305B               	movlw	low (__pdataBANK0+15)
   675  002E  00FD               	movwf	btemp+-1
   676  002F  3007               	movlw	high __pidataBANK0
   677  0030  00FE               	movwf	btemp
   678  0031  309A               	movlw	low __pidataBANK0
   679  0032  00FF               	movwf	btemp+1
   680  0033  304C               	movlw	low __pdataBANK0
   681  0034  0084               	movwf	4
   682  0035  120A  118A  276B  120A  118A  	fcall	init_ram0
   683                           
   684                           ; Initialize objects allocated to COMMON
   685  003A  120A  118A  27E7  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   686  003F  00F7               	movwf	__pdataCOMMON& (0+127)
   687  0040  120A  118A  27E8   	fcall	__pidataCOMMON+1	;fetch initializer
   688  0043  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   689  0044                     end_of_initialization:	
   690                           ;End of C runtime variable initialization code
   691                           
   692  0044                     __end_of__initialization:	
   693  0044  0183               	clrf	3
   694  0045  120A  118A  2848   	ljmp	_main	;jump to C main() function
   695                           
   696                           	psect	bssCOMMON
   697  0079                     __pbssCOMMON:	
   698  0079                     _count:	
   699  0079                     	ds	1
   700                           
   701                           	psect	dataCOMMON
   702  0077                     __pdataCOMMON:	
   703  0077                     _phMsg:	
   704  0077                     	ds	1
   705  0078                     _tuneUpTempDir:	
   706  0078                     	ds	1
   707                           
   708                           	psect	bssBANK0
   709  005B                     __pbssBANK0:	
   710  005B                     _g_menu:	
   711  005B                     	ds	9
   712                           
   713                           	psect	dataBANK0
   714  004C                     __pdataBANK0:	
   715  004C                     ___cgram:	
   716  004C                     	ds	8
   717  0054                     LCDWriteInt@F1646:	
   718  0054                     	ds	5
   719  0059                     _mode:	
   720  0059                     	ds	1
   721  005A                     _submode:	
   722  005A                     	ds	1
   723                           
   724                           	psect	dataBANK1
   725  00A0                     __pdataBANK1:	
   726  00A0                     _msg:	
   727  00A0                     	ds	32
   728                           
   729                           	psect	inittext
   730  0767                     init_fetch0:	
   731                           ;	Called with low address in FSR and high address in W
   732                           
   733  0767  087E               	movf	126,w
   734  0768  008A               	movwf	10
   735  0769  087F               	movf	127,w
   736  076A  0082               	movwf	2
   737  076B                     init_ram0:	
   738                           ;Called with:
   739                           ;	high address of idata address in btemp 
   740                           ;	low address of idata address in btemp+1 
   741                           ;	low address of data in FSR
   742                           ;	high address + 1 of data in btemp-1
   743                           
   744  076B  2767  120A  118A   	fcall	init_fetch0
   745  076E  0080               	movwf	0
   746  076F  0A84               	incf	4,f
   747  0770  0804               	movf	4,w
   748  0771  067D               	xorwf	125,w
   749  0772  1903               	btfsc	3,2
   750  0773  3400               	retlw	0
   751  0774  0AFF               	incf	127,f
   752  0775  1903               	btfsc	3,2
   753  0776  0AFE               	incf	126,f
   754  0777  2F6B               	goto	init_ram0
   755                           
   756                           	psect	cstackCOMMON
   757  0070                     __pcstackCOMMON:	
   758  0070                     ?_LCDInit:	
   759  0070                     ?_MenuInit:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_LCDWriteString:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_ShowMenu:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_LCDSetStyle:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_ClearMenu:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_ValueInc:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_MenuUp:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_MenuDown:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_LCDBusyLoop:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_LoadMenuItem:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_eeprom_read:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_ADCInit:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_IOInit:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_ISR:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ??_ISR:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_main:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_SaveMenuItem:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_ValueDec:	
   811                           ; 1 bytes @ 0x0
   812                           
   813                           
   814                           ; 2 bytes @ 0x0
   815  0070                     	ds	4
   816  0074                     ??_MenuUp:	
   817  0074                     ??_MenuDown:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0074                     ??_LCDBusyLoop:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0074                     ?_eeprom_write:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0074                     ??_eeprom_read:	
   827                           ; 1 bytes @ 0x4
   828                           
   829  0074                     ??_ADCInit:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0074                     ??_IOInit:	
   833                           ; 1 bytes @ 0x4
   834                           
   835  0074                     ??___awdiv:	
   836                           ; 1 bytes @ 0x4
   837                           
   838  0074                     ??___awmod:	
   839                           ; 1 bytes @ 0x4
   840                           
   841  0074                     eeprom_write@value:	
   842                           ; 1 bytes @ 0x4
   843                           
   844                           
   845                           ; 1 bytes @ 0x4
   846  0074                     	ds	1
   847  0075                     ??_eeprom_write:	
   848  0075                     eeprom_read@addr:	
   849                           ; 1 bytes @ 0x5
   850                           
   851  0075                     ___awmod@counter:	
   852                           ; 1 bytes @ 0x5
   853                           
   854                           
   855                           ; 1 bytes @ 0x5
   856  0075                     	ds	1
   857  0076                     ?_LCDByte:	
   858  0076                     LCDByte@isdata:	
   859                           ; 1 bytes @ 0x6
   860                           
   861  0076                     LoadMenuItem@item:	
   862                           ; 1 bytes @ 0x6
   863                           
   864  0076                     eeprom_write@addr:	
   865                           ; 1 bytes @ 0x6
   866                           
   867  0076                     ___awmod@sign:	
   868                           ; 1 bytes @ 0x6
   869                           
   870                           
   871                           ; 1 bytes @ 0x6
   872  0076                     	ds	1
   873  0077                     ??_LCDSetStyle:	
   874                           
   875                           	psect	cstackBANK0
   876  0020                     __pcstackBANK0:	
   877                           ; 1 bytes @ 0x7
   878                           
   879  0020                     ??_LoadMenuItem:	
   880  0020                     ??_SaveMenuItem:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0020                     ?___awdiv:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0020                     ?___awmod:	
   887                           ; 2 bytes @ 0x0
   888                           
   889  0020                     LCDBusyLoop@busy:	
   890                           ; 2 bytes @ 0x0
   891                           
   892  0020                     ___awdiv@divisor:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0020                     ___awmod@divisor:	
   896                           ; 2 bytes @ 0x0
   897                           
   898                           
   899                           ; 2 bytes @ 0x0
   900  0020                     	ds	1
   901  0021                     LCDBusyLoop@temp:	
   902                           
   903                           ; 1 bytes @ 0x1
   904  0021                     	ds	1
   905  0022                     ??_MenuInit:	
   906  0022                     LCDBusyLoop@status:	
   907                           ; 1 bytes @ 0x2
   908                           
   909  0022                     SaveMenuItem@item:	
   910                           ; 1 bytes @ 0x2
   911                           
   912  0022                     ___awdiv@dividend:	
   913                           ; 1 bytes @ 0x2
   914                           
   915  0022                     ___awmod@dividend:	
   916                           ; 2 bytes @ 0x2
   917                           
   918                           
   919                           ; 2 bytes @ 0x2
   920  0022                     	ds	1
   921  0023                     ??_LCDByte:	
   922  0023                     ??_ValueInc:	
   923                           ; 1 bytes @ 0x3
   924                           
   925  0023                     ??_ValueDec:	
   926                           ; 1 bytes @ 0x3
   927                           
   928                           
   929                           ; 1 bytes @ 0x3
   930  0023                     	ds	1
   931  0024                     ___awdiv@counter:	
   932                           
   933                           ; 1 bytes @ 0x4
   934  0024                     	ds	1
   935  0025                     LCDByte@hn:	
   936  0025                     ___awdiv@sign:	
   937                           ; 1 bytes @ 0x5
   938                           
   939                           
   940                           ; 1 bytes @ 0x5
   941  0025                     	ds	1
   942  0026                     LCDByte@ln:	
   943  0026                     ___awdiv@quotient:	
   944                           ; 1 bytes @ 0x6
   945                           
   946                           
   947                           ; 2 bytes @ 0x6
   948  0026                     	ds	1
   949  0027                     LCDByte@c:	
   950                           
   951                           ; 1 bytes @ 0x7
   952  0027                     	ds	1
   953  0028                     LCDByte@temp:	
   954                           
   955                           ; 1 bytes @ 0x8
   956  0028                     	ds	1
   957  0029                     ??_LCDInit:	
   958  0029                     ?_LCDGotoXY:	
   959                           ; 1 bytes @ 0x9
   960                           
   961  0029                     ??_LCDWriteString:	
   962                           ; 1 bytes @ 0x9
   963                           
   964  0029                     ?_LCDWriteInt:	
   965                           ; 1 bytes @ 0x9
   966                           
   967  0029                     LCDSetStyle@style:	
   968                           ; 1 bytes @ 0x9
   969                           
   970  0029                     LCDGotoXY@y:	
   971                           ; 1 bytes @ 0x9
   972                           
   973  0029                     LCDWriteInt@val:	
   974                           ; 1 bytes @ 0x9
   975                           
   976                           
   977                           ; 2 bytes @ 0x9
   978  0029                     	ds	1
   979  002A                     ??_LCDGotoXY:	
   980  002A                     LCDWriteString@count:	
   981                           ; 1 bytes @ 0xA
   982                           
   983                           
   984                           ; 1 bytes @ 0xA
   985  002A                     	ds	1
   986  002B                     LCDInit@style:	
   987  002B                     LCDWriteString@cc:	
   988                           ; 1 bytes @ 0xB
   989                           
   990  002B                     LCDWriteInt@field_length:	
   991                           ; 1 bytes @ 0xB
   992                           
   993  002B                     LCDGotoXY@x:	
   994                           ; 1 bytes @ 0xB
   995                           
   996                           
   997                           ; 1 bytes @ 0xB
   998  002B                     	ds	1
   999  002C                     ??_LCDWriteInt:	
  1000  002C                     LCDInit@__i:	
  1001                           ; 1 bytes @ 0xC
  1002                           
  1003  002C                     LCDWriteString@msg:	
  1004                           ; 1 bytes @ 0xC
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0xC
  1008  002C                     	ds	1
  1009  002D                     ??_ClearMenu:	
  1010                           
  1011                           ; 1 bytes @ 0xD
  1012  002D                     	ds	1
  1013  002E                     ClearMenu@count:	
  1014  002E                     LCDWriteInt@str:	
  1015                           ; 1 bytes @ 0xE
  1016                           
  1017                           
  1018                           ; 5 bytes @ 0xE
  1019  002E                     	ds	1
  1020  002F                     ClearMenu@i:	
  1021                           
  1022                           ; 1 bytes @ 0xF
  1023  002F                     	ds	4
  1024  0033                     LCDWriteInt@j:	
  1025                           
  1026                           ; 2 bytes @ 0x13
  1027  0033                     	ds	2
  1028  0035                     LCDWriteInt@i:	
  1029                           
  1030                           ; 2 bytes @ 0x15
  1031  0035                     	ds	2
  1032  0037                     ??_ShowMenu:	
  1033                           
  1034                           ; 1 bytes @ 0x17
  1035  0037                     	ds	4
  1036  003B                     ShowMenu@count:	
  1037                           
  1038                           ; 1 bytes @ 0x1B
  1039  003B                     	ds	1
  1040  003C                     ShowMenu@i:	
  1041                           
  1042                           ; 1 bytes @ 0x1C
  1043  003C                     	ds	1
  1044  003D                     ??_main:	
  1045                           
  1046                           ; 1 bytes @ 0x1D
  1047  003D                     	ds	3
  1048  0040                     main@count:	
  1049                           
  1050                           ; 1 bytes @ 0x20
  1051  0040                     	ds	1
  1052  0041                     main@count_331:	
  1053                           
  1054                           ; 1 bytes @ 0x21
  1055  0041                     	ds	1
  1056  0042                     main@count_334:	
  1057                           
  1058                           ; 1 bytes @ 0x22
  1059  0042                     	ds	1
  1060  0043                     main@count_337:	
  1061                           
  1062                           ; 1 bytes @ 0x23
  1063  0043                     	ds	1
  1064  0044                     main@count_340:	
  1065                           
  1066                           ; 1 bytes @ 0x24
  1067  0044                     	ds	1
  1068  0045                     main@count_343:	
  1069                           
  1070                           ; 1 bytes @ 0x25
  1071  0045                     	ds	1
  1072  0046                     main@i:	
  1073                           
  1074                           ; 1 bytes @ 0x26
  1075  0046                     	ds	1
  1076  0047                     main@i_333:	
  1077                           
  1078                           ; 1 bytes @ 0x27
  1079  0047                     	ds	1
  1080  0048                     main@i_336:	
  1081                           
  1082                           ; 1 bytes @ 0x28
  1083  0048                     	ds	1
  1084  0049                     main@i_339:	
  1085                           
  1086                           ; 1 bytes @ 0x29
  1087  0049                     	ds	1
  1088  004A                     main@i_342:	
  1089                           
  1090                           ; 1 bytes @ 0x2A
  1091  004A                     	ds	1
  1092  004B                     main@i_345:	
  1093                           
  1094                           ; 1 bytes @ 0x2B
  1095  004B                     	ds	1
  1096                           
  1097                           	psect	maintext
  1098  0048                     __pmaintext:	
  1099 ;;
  1100 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1101 ;;
  1102 ;; *************** function _main *****************
  1103 ;; Defined at:
  1104 ;;		line 180 in file "do_am.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  i               1   41[BANK0 ] char 
  1109 ;;  i               1   40[BANK0 ] char 
  1110 ;;  count           1   35[BANK0 ] char 
  1111 ;;  count           1   34[BANK0 ] char 
  1112 ;;  i               1   39[BANK0 ] char 
  1113 ;;  i               1   38[BANK0 ] char 
  1114 ;;  i               1   43[BANK0 ] char 
  1115 ;;  i               1   42[BANK0 ] char 
  1116 ;;  count           1   33[BANK0 ] char 
  1117 ;;  count           1   32[BANK0 ] char 
  1118 ;;  count           1   37[BANK0 ] char 
  1119 ;;  count           1   36[BANK0 ] char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : B00/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1129 ;;      Params:         0       0       0       0       0
  1130 ;;      Locals:         0      12       0       0       0
  1131 ;;      Temps:          0       3       0       0       0
  1132 ;;      Totals:         0      15       0       0       0
  1133 ;;Total ram usage:       15 bytes
  1134 ;; Hardware stack levels required when called:    5
  1135 ;; This function calls:
  1136 ;;		_ADCInit
  1137 ;;		_ClearMenu
  1138 ;;		_IOInit
  1139 ;;		_LCDByte
  1140 ;;		_LCDGotoXY
  1141 ;;		_LCDInit
  1142 ;;		_LCDSetStyle
  1143 ;;		_LCDWriteString
  1144 ;;		_MenuDown
  1145 ;;		_MenuInit
  1146 ;;		_MenuUp
  1147 ;;		_ShowMenu
  1148 ;;		_ValueDec
  1149 ;;		_ValueInc
  1150 ;; This function is called by:
  1151 ;;		Startup code after reset
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           
  1156                           ;psect for function _main
  1157  0048                     _main:	
  1158                           
  1159                           ;do_am.c: 183: LCDInit(0B00000000);
  1160                           
  1161                           ;incstack = 0
  1162                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1163  0048  3000               	movlw	0
  1164  0049  120A  118A  2389  120A  118A  	fcall	_LCDInit
  1165                           
  1166                           ;do_am.c: 186: ADCInit();
  1167  004E  120A  118A  2741  120A  118A  	fcall	_ADCInit
  1168                           
  1169                           ;do_am.c: 189: IOInit();
  1170  0053  120A  118A  260A  120A  118A  	fcall	_IOInit
  1171                           
  1172                           ;do_am.c: 191: MenuInit();
  1173  0058  120A  118A  2650  120A  118A  	fcall	_MenuInit
  1174                           
  1175                           ;do_am.c: 197: (LCDByte(0b00000001,0));
  1176  005D  01F6               	clrf	LCDByte@isdata
  1177  005E  3001               	movlw	1
  1178  005F  120A  118A  2511  120A  118A  	fcall	_LCDByte
  1179                           
  1180                           ;do_am.c: 199: { LCDGotoXY(0,0); LCDWriteString("Cur:");};
  1181  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0066  01A9               	clrf	LCDGotoXY@y
  1184  0067  3000               	movlw	0
  1185  0068  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1186  006D  3038               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1187  006E  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1188                           
  1189                           ;do_am.c: 201: { LCDGotoXY(7,0); LCDWriteString("%0C");};
  1190  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0075  01A9               	clrf	LCDGotoXY@y
  1193  0076  3007               	movlw	7
  1194  0077  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1195  007C  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1196  007D  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1197                           
  1198                           ;do_am.c: 203: { LCDGotoXY(10,0); LCDWriteString("Wa:");};
  1199  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0084  01A9               	clrf	LCDGotoXY@y
  1202  0085  300A               	movlw	10
  1203  0086  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1204  008B  3047               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1205  008C  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1206                           
  1207                           ;do_am.c: 205: { LCDGotoXY(0,1); LCDWriteString("Max:");};
  1208  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0093  01A9               	clrf	LCDGotoXY@y
  1211  0094  0AA9               	incf	LCDGotoXY@y,f
  1212  0095  3000               	movlw	0
  1213  0096  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1214  009B  303D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1215  009C  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1216                           
  1217                           ;do_am.c: 207: { LCDGotoXY(7,1); LCDWriteString("%0C");};
  1218  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1219  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1220  00A3  01A9               	clrf	LCDGotoXY@y
  1221  00A4  0AA9               	incf	LCDGotoXY@y,f
  1222  00A5  3007               	movlw	7
  1223  00A6  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1224  00AB  304B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1225  00AC  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1226                           
  1227                           ;do_am.c: 209: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1228  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1229  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1230  00B3  01A9               	clrf	LCDGotoXY@y
  1231  00B4  300D               	movlw	13
  1232  00B5  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1233  00BA  304F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1234  00BB  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1235  00C0  2A21               	goto	l2377
  1236  00C1                     l2381:	
  1237                           ;do_am.c: 214: {
  1238                           ;do_am.c: 221: }
  1239                           
  1240                           
  1241                           ;do_am.c: 224: {
  1242                           ;do_am.c: 225: if(mode == NORMAL)
  1243  00C1  0359               	decf	_mode,w
  1244  00C2  1D03               	btfss	3,2
  1245  00C3  28FA               	goto	l2401
  1246                           
  1247                           ;do_am.c: 226: {
  1248                           ;do_am.c: 227: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString("MENU MODE"); for(int8_t
      +                           i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};
  1249  00C4  01A9               	clrf	LCDGotoXY@y
  1250  00C5  0AA9               	incf	LCDGotoXY@y,f
  1251  00C6  3000               	movlw	0
  1252  00C7  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1253  00CC  301A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1254  00CD  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1255  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1256  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1257  00D4  00BD               	movwf	??_main
  1258  00D5  083D               	movf	??_main,w
  1259  00D6  00C0               	movwf	main@count
  1260  00D7  0840               	movf	main@count,w
  1261  00D8  00BD               	movwf	??_main
  1262  00D9  083D               	movf	??_main,w
  1263  00DA  00C6               	movwf	main@i
  1264  00DB  0846               	movf	main@i,w
  1265  00DC  3A80               	xorlw	128
  1266  00DD  3E70               	addlw	-144
  1267  00DE  1803               	btfsc	3,0
  1268  00DF  28F3               	goto	l2397
  1269  00E0                     l2391:	
  1270  00E0  01F6               	clrf	LCDByte@isdata
  1271  00E1  0AF6               	incf	LCDByte@isdata,f
  1272  00E2  3020               	movlw	32
  1273  00E3  120A  118A  2511  120A  118A  	fcall	_LCDByte
  1274  00E8  3001               	movlw	1
  1275  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1276  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1277  00EB  00BD               	movwf	??_main
  1278  00EC  083D               	movf	??_main,w
  1279  00ED  07C6               	addwf	main@i,f
  1280  00EE  0846               	movf	main@i,w
  1281  00EF  3A80               	xorlw	128
  1282  00F0  3E70               	addlw	-144
  1283  00F1  1C03               	skipc
  1284  00F2  28E0               	goto	l2391
  1285  00F3                     l2397:	
  1286                           
  1287                           ;do_am.c: 228: mode = MENU;
  1288  00F3  01D9               	clrf	_mode
  1289                           
  1290                           ;do_am.c: 229: ShowMenu();
  1291  00F4  120A  118A  2568  120A  118A  	fcall	_ShowMenu
  1292                           
  1293                           ;do_am.c: 230: }
  1294  00F9  2937               	goto	l2421
  1295  00FA                     l2401:	
  1296                           
  1297                           ;do_am.c: 231: else
  1298                           ;do_am.c: 232: {
  1299                           ;do_am.c: 233: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString("EDIT MODE"); for(int8_t
      +                           i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};
  1300  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1301  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1302  00FC  01A9               	clrf	LCDGotoXY@y
  1303  00FD  0AA9               	incf	LCDGotoXY@y,f
  1304  00FE  3000               	movlw	0
  1305  00FF  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1306  0104  3004               	movlw	(low (((STR_9+3)-__stringbase)| (0+32768)))& (0+255)
  1307  0105  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1308  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1309  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1310  010C  00BD               	movwf	??_main
  1311  010D  083D               	movf	??_main,w
  1312  010E  00C1               	movwf	main@count_331
  1313  010F  0841               	movf	main@count_331,w
  1314  0110  00BD               	movwf	??_main
  1315  0111  083D               	movf	??_main,w
  1316  0112  00C7               	movwf	main@i_333
  1317  0113  0847               	movf	main@i_333,w
  1318  0114  3A80               	xorlw	128
  1319  0115  3E70               	addlw	-144
  1320  0116  1803               	btfsc	3,0
  1321  0117  292B               	goto	l2415
  1322  0118                     l2409:	
  1323  0118  01F6               	clrf	LCDByte@isdata
  1324  0119  0AF6               	incf	LCDByte@isdata,f
  1325  011A  3020               	movlw	32
  1326  011B  120A  118A  2511  120A  118A  	fcall	_LCDByte
  1327  0120  3001               	movlw	1
  1328  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0123  00BD               	movwf	??_main
  1331  0124  083D               	movf	??_main,w
  1332  0125  07C7               	addwf	main@i_333,f
  1333  0126  0847               	movf	main@i_333,w
  1334  0127  3A80               	xorlw	128
  1335  0128  3E70               	addlw	-144
  1336  0129  1C03               	skipc
  1337  012A  2918               	goto	l2409
  1338  012B                     l2415:	
  1339                           
  1340                           ;do_am.c: 234: submode = EDIT;
  1341  012B  01DA               	clrf	_submode
  1342                           
  1343                           ;do_am.c: 235: ShowMenu();
  1344  012C  120A  118A  2568  120A  118A  	fcall	_ShowMenu
  1345                           
  1346                           ;do_am.c: 236: LCDSetStyle(0B00000001);
  1347  0131  3001               	movlw	1
  1348  0132  120A  118A  27DD  120A  118A  	fcall	_LCDSetStyle
  1349  0137                     l2421:	
  1350                           
  1351                           ;do_am.c: 237: }
  1352                           ;do_am.c: 239: _delay((unsigned long)((200)*(20000000/4000.0)));
  1353  0137  3006               	movlw	6
  1354  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1356  013A  00BF               	movwf	??_main+2
  1357  013B  3013               	movlw	19
  1358  013C  00BE               	movwf	??_main+1
  1359  013D  30B1               	movlw	177
  1360  013E  00BD               	movwf	??_main
  1361  013F                     u2277:	
  1362  013F  0BBD               	decfsz	??_main,f
  1363  0140  293F               	goto	u2277
  1364  0141  0BBE               	decfsz	??_main+1,f
  1365  0142  293F               	goto	u2277
  1366  0143  0BBF               	decfsz	??_main+2,f
  1367  0144  293F               	goto	u2277
  1368  0145  2946               	nop2
  1369                           
  1370                           ;do_am.c: 240: }
  1371  0146  2A21               	goto	l2377
  1372  0147                     l2423:	
  1373                           
  1374                           ;do_am.c: 243: {
  1375                           ;do_am.c: 244: if(mode == MENU)
  1376  0147  0859               	movf	_mode,w
  1377  0148  1D03               	btfss	3,2
  1378  0149  29BD               	goto	l2459
  1379                           
  1380                           ;do_am.c: 245: {
  1381                           ;do_am.c: 246: if(submode == EDIT)
  1382  014A  085A               	movf	_submode,w
  1383  014B  1D03               	btfss	3,2
  1384  014C  2985               	goto	l2443
  1385                           
  1386                           ;do_am.c: 247: {
  1387                           ;do_am.c: 248: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString("NOTEDIT MODE"); for(int
      +                          8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};
  1388  014D  01A9               	clrf	LCDGotoXY@y
  1389  014E  0AA9               	incf	LCDGotoXY@y,f
  1390  014F  3000               	movlw	0
  1391  0150  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1392  0155  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1393  0156  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1394  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1395  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1396  015D  00BD               	movwf	??_main
  1397  015E  083D               	movf	??_main,w
  1398  015F  00C2               	movwf	main@count_334
  1399  0160  0842               	movf	main@count_334,w
  1400  0161  00BD               	movwf	??_main
  1401  0162  083D               	movf	??_main,w
  1402  0163  00C8               	movwf	main@i_336
  1403  0164  0848               	movf	main@i_336,w
  1404  0165  3A80               	xorlw	128
  1405  0166  3E70               	addlw	-144
  1406  0167  1803               	btfsc	3,0
  1407  0168  297C               	goto	l107
  1408  0169                     l2435:	
  1409  0169  01F6               	clrf	LCDByte@isdata
  1410  016A  0AF6               	incf	LCDByte@isdata,f
  1411  016B  3020               	movlw	32
  1412  016C  120A  118A  2511  120A  118A  	fcall	_LCDByte
  1413  0171  3001               	movlw	1
  1414  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0174  00BD               	movwf	??_main
  1417  0175  083D               	movf	??_main,w
  1418  0176  07C8               	addwf	main@i_336,f
  1419  0177  0848               	movf	main@i_336,w
  1420  0178  3A80               	xorlw	128
  1421  0179  3E70               	addlw	-144
  1422  017A  1C03               	skipc
  1423  017B  2969               	goto	l2435
  1424  017C                     l107:	
  1425                           
  1426                           ;do_am.c: 249: submode = NOTEDIT;
  1427  017C  01DA               	clrf	_submode
  1428  017D  0ADA               	incf	_submode,f
  1429                           
  1430                           ;do_am.c: 250: LCDSetStyle(0B00000000);
  1431  017E  3000               	movlw	0
  1432  017F  120A  118A  27DD  120A  118A  	fcall	_LCDSetStyle
  1433                           
  1434                           ;do_am.c: 251: }
  1435  0184  29BD               	goto	l2459
  1436  0185                     l2443:	
  1437                           
  1438                           ;do_am.c: 252: else
  1439                           ;do_am.c: 253: {
  1440                           ;do_am.c: 254: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString("NORMAL MODE"); for(int8
      +                          _t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};
  1441  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0187  01A9               	clrf	LCDGotoXY@y
  1444  0188  0AA9               	incf	LCDGotoXY@y,f
  1445  0189  3000               	movlw	0
  1446  018A  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1447  018F  300E               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1448  0190  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1449  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0197  00BD               	movwf	??_main
  1452  0198  083D               	movf	??_main,w
  1453  0199  00C3               	movwf	main@count_337
  1454  019A  0843               	movf	main@count_337,w
  1455  019B  00BD               	movwf	??_main
  1456  019C  083D               	movf	??_main,w
  1457  019D  00C9               	movwf	main@i_339
  1458  019E  0849               	movf	main@i_339,w
  1459  019F  3A80               	xorlw	128
  1460  01A0  3E70               	addlw	-144
  1461  01A1  1803               	btfsc	3,0
  1462  01A2  29B6               	goto	l110
  1463  01A3                     l2451:	
  1464  01A3  01F6               	clrf	LCDByte@isdata
  1465  01A4  0AF6               	incf	LCDByte@isdata,f
  1466  01A5  3020               	movlw	32
  1467  01A6  120A  118A  2511  120A  118A  	fcall	_LCDByte
  1468  01AB  3001               	movlw	1
  1469  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1470  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1471  01AE  00BD               	movwf	??_main
  1472  01AF  083D               	movf	??_main,w
  1473  01B0  07C9               	addwf	main@i_339,f
  1474  01B1  0849               	movf	main@i_339,w
  1475  01B2  3A80               	xorlw	128
  1476  01B3  3E70               	addlw	-144
  1477  01B4  1C03               	skipc
  1478  01B5  29A3               	goto	l2451
  1479  01B6                     l110:	
  1480                           
  1481                           ;do_am.c: 255: mode = NORMAL;
  1482  01B6  01D9               	clrf	_mode
  1483  01B7  0AD9               	incf	_mode,f
  1484                           
  1485                           ;do_am.c: 256: ClearMenu();
  1486  01B8  120A  118A  268E  120A  118A  	fcall	_ClearMenu
  1487  01BD                     l2459:	
  1488                           
  1489                           ;do_am.c: 257: }
  1490                           ;do_am.c: 258: }
  1491                           ;do_am.c: 260: _delay((unsigned long)((200)*(20000000/4000.0)));
  1492  01BD  3006               	movlw	6
  1493  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1494  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1495  01C0  00BF               	movwf	??_main+2
  1496  01C1  3013               	movlw	19
  1497  01C2  00BE               	movwf	??_main+1
  1498  01C3  30B1               	movlw	177
  1499  01C4  00BD               	movwf	??_main
  1500  01C5                     u2287:	
  1501  01C5  0BBD               	decfsz	??_main,f
  1502  01C6  29C5               	goto	u2287
  1503  01C7  0BBE               	decfsz	??_main+1,f
  1504  01C8  29C5               	goto	u2287
  1505  01C9  0BBF               	decfsz	??_main+2,f
  1506  01CA  29C5               	goto	u2287
  1507  01CB  29CC               	nop2
  1508                           
  1509                           ;do_am.c: 261: }
  1510  01CC  2A21               	goto	l2377
  1511  01CD                     l2461:	
  1512                           
  1513                           ;do_am.c: 264: {
  1514                           ;do_am.c: 265: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString("UP"); for(int8_t i = co
      +                          unt + 0; i < 16; i++) { (LCDByte(' ',1)); } };};
  1515  01CD  01A9               	clrf	LCDGotoXY@y
  1516  01CE  0AA9               	incf	LCDGotoXY@y,f
  1517  01CF  3000               	movlw	0
  1518  01D0  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1519  01D5  3053               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1520  01D6  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1521  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1522  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1523  01DD  00BD               	movwf	??_main
  1524  01DE  083D               	movf	??_main,w
  1525  01DF  00C4               	movwf	main@count_340
  1526  01E0  0844               	movf	main@count_340,w
  1527  01E1  00BD               	movwf	??_main
  1528  01E2  083D               	movf	??_main,w
  1529  01E3  00CA               	movwf	main@i_342
  1530  01E4  084A               	movf	main@i_342,w
  1531  01E5  3A80               	xorlw	128
  1532  01E6  3E70               	addlw	-144
  1533  01E7  1803               	btfsc	3,0
  1534  01E8  29FC               	goto	l2475
  1535  01E9                     l2469:	
  1536  01E9  01F6               	clrf	LCDByte@isdata
  1537  01EA  0AF6               	incf	LCDByte@isdata,f
  1538  01EB  3020               	movlw	32
  1539  01EC  120A  118A  2511  120A  118A  	fcall	_LCDByte
  1540  01F1  3001               	movlw	1
  1541  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1542  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1543  01F4  00BD               	movwf	??_main
  1544  01F5  083D               	movf	??_main,w
  1545  01F6  07CA               	addwf	main@i_342,f
  1546  01F7  084A               	movf	main@i_342,w
  1547  01F8  3A80               	xorlw	128
  1548  01F9  3E70               	addlw	-144
  1549  01FA  1C03               	skipc
  1550  01FB  29E9               	goto	l2469
  1551  01FC                     l2475:	
  1552                           
  1553                           ;do_am.c: 266: if(mode == MENU)
  1554  01FC  0859               	movf	_mode,w
  1555  01FD  1D03               	btfss	3,2
  1556  01FE  2A12               	goto	l2485
  1557                           
  1558                           ;do_am.c: 267: {
  1559                           ;do_am.c: 268: if(submode == EDIT)
  1560  01FF  085A               	movf	_submode,w
  1561  0200  1D03               	btfss	3,2
  1562  0201  2A08               	goto	l2481
  1563                           
  1564                           ;do_am.c: 269: {
  1565                           ;do_am.c: 270: ValueInc();
  1566  0202  120A  118A  2778  120A  118A  	fcall	_ValueInc
  1567                           
  1568                           ;do_am.c: 271: }
  1569  0207  2A0D               	goto	l2483
  1570  0208                     l2481:	
  1571                           
  1572                           ;do_am.c: 272: else
  1573                           ;do_am.c: 273: {
  1574                           ;do_am.c: 274: MenuUp();
  1575  0208  120A  118A  27B8  120A  118A  	fcall	_MenuUp
  1576  020D                     l2483:	
  1577                           
  1578                           ;do_am.c: 275: }
  1579                           ;do_am.c: 276: ShowMenu();
  1580  020D  120A  118A  2568  120A  118A  	fcall	_ShowMenu
  1581  0212                     l2485:	
  1582                           
  1583                           ;do_am.c: 277: }
  1584                           ;do_am.c: 278: _delay((unsigned long)((200)*(20000000/4000.0)));
  1585  0212  3006               	movlw	6
  1586  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0215  00BF               	movwf	??_main+2
  1589  0216  3013               	movlw	19
  1590  0217  00BE               	movwf	??_main+1
  1591  0218  30B1               	movlw	177
  1592  0219  00BD               	movwf	??_main
  1593  021A                     u2297:	
  1594  021A  0BBD               	decfsz	??_main,f
  1595  021B  2A1A               	goto	u2297
  1596  021C  0BBE               	decfsz	??_main+1,f
  1597  021D  2A1A               	goto	u2297
  1598  021E  0BBF               	decfsz	??_main+2,f
  1599  021F  2A1A               	goto	u2297
  1600  0220  2A21               	nop2
  1601  0221                     l2377:	
  1602                           ;do_am.c: 211: while(1)
  1603                           
  1604                           ;do_am.c: 279: }
  1605                           
  1606                           
  1607                           ;do_am.c: 212: {
  1608                           ;do_am.c: 213: if(RA6 == 0)
  1609  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0223  1F05               	btfss	5,6	;volatile
  1612  0224  2A21               	goto	l2377
  1613                           
  1614                           ;do_am.c: 222: else
  1615                           ;do_am.c: 223: if(RB4 == 0)
  1616  0225  1E06               	btfss	6,4	;volatile
  1617  0226  28C1               	goto	l2381
  1618                           
  1619                           ;do_am.c: 241: else
  1620                           ;do_am.c: 242: if(RB6 == 0)
  1621  0227  1F06               	btfss	6,6	;volatile
  1622  0228  2947               	goto	l2423
  1623                           
  1624                           ;do_am.c: 262: else
  1625                           ;do_am.c: 263: if(RB5 == 0)
  1626  0229  1E86               	btfss	6,5	;volatile
  1627  022A  29CD               	goto	l2461
  1628                           
  1629                           ;do_am.c: 280: else
  1630                           ;do_am.c: 281: if(RB7 == 0)
  1631  022B  1B86               	btfsc	6,7	;volatile
  1632  022C  2A21               	goto	l2377
  1633                           
  1634                           ;do_am.c: 282: {
  1635                           ;do_am.c: 283: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString("DOWN"); for(int8_t i = 
      +                          count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};
  1636  022D  01A9               	clrf	LCDGotoXY@y
  1637  022E  0AA9               	incf	LCDGotoXY@y,f
  1638  022F  3000               	movlw	0
  1639  0230  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  1640  0235  3042               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1641  0236  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  1642  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1643  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1644  023D  00BD               	movwf	??_main
  1645  023E  083D               	movf	??_main,w
  1646  023F  00C5               	movwf	main@count_343
  1647  0240  0845               	movf	main@count_343,w
  1648  0241  00BD               	movwf	??_main
  1649  0242  083D               	movf	??_main,w
  1650  0243  00CB               	movwf	main@i_345
  1651  0244  084B               	movf	main@i_345,w
  1652  0245  3A80               	xorlw	128
  1653  0246  3E70               	addlw	-144
  1654  0247  1803               	btfsc	3,0
  1655  0248  2A5C               	goto	l2501
  1656  0249                     l2495:	
  1657  0249  01F6               	clrf	LCDByte@isdata
  1658  024A  0AF6               	incf	LCDByte@isdata,f
  1659  024B  3020               	movlw	32
  1660  024C  120A  118A  2511  120A  118A  	fcall	_LCDByte
  1661  0251  3001               	movlw	1
  1662  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0254  00BD               	movwf	??_main
  1665  0255  083D               	movf	??_main,w
  1666  0256  07CB               	addwf	main@i_345,f
  1667  0257  084B               	movf	main@i_345,w
  1668  0258  3A80               	xorlw	128
  1669  0259  3E70               	addlw	-144
  1670  025A  1C03               	skipc
  1671  025B  2A49               	goto	l2495
  1672  025C                     l2501:	
  1673                           
  1674                           ;do_am.c: 284: if(mode == MENU)
  1675  025C  0859               	movf	_mode,w
  1676  025D  1D03               	btfss	3,2
  1677  025E  2A72               	goto	l2511
  1678                           
  1679                           ;do_am.c: 285: {
  1680                           ;do_am.c: 286: if(submode == EDIT)
  1681  025F  085A               	movf	_submode,w
  1682  0260  1D03               	btfss	3,2
  1683  0261  2A68               	goto	l2507
  1684                           
  1685                           ;do_am.c: 287: {
  1686                           ;do_am.c: 288: ValueDec();
  1687  0262  120A  118A  27A9  120A  118A  	fcall	_ValueDec
  1688                           
  1689                           ;do_am.c: 289: }
  1690  0267  2A6D               	goto	l2509
  1691  0268                     l2507:	
  1692                           
  1693                           ;do_am.c: 290: else
  1694                           ;do_am.c: 291: {
  1695                           ;do_am.c: 292: MenuDown();
  1696  0268  120A  118A  27C5  120A  118A  	fcall	_MenuDown
  1697  026D                     l2509:	
  1698                           
  1699                           ;do_am.c: 293: }
  1700                           ;do_am.c: 294: ShowMenu();
  1701  026D  120A  118A  2568  120A  118A  	fcall	_ShowMenu
  1702  0272                     l2511:	
  1703                           
  1704                           ;do_am.c: 295: }
  1705                           ;do_am.c: 296: _delay((unsigned long)((200)*(20000000/4000.0)));
  1706  0272  3006               	movlw	6
  1707  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0275  00BF               	movwf	??_main+2
  1710  0276  3013               	movlw	19
  1711  0277  00BE               	movwf	??_main+1
  1712  0278  30B1               	movlw	177
  1713  0279  00BD               	movwf	??_main
  1714  027A                     u2307:	
  1715  027A  0BBD               	decfsz	??_main,f
  1716  027B  2A7A               	goto	u2307
  1717  027C  0BBE               	decfsz	??_main+1,f
  1718  027D  2A7A               	goto	u2307
  1719  027E  0BBF               	decfsz	??_main+2,f
  1720  027F  2A7A               	goto	u2307
  1721  0280  2A81               	nop2
  1722  0281  2A21               	goto	l2377
  1723  0282                     __end_of_main:	
  1724                           
  1725                           	psect	text1
  1726  0778                     __ptext1:	
  1727 ;; *************** function _ValueInc *****************
  1728 ;; Defined at:
  1729 ;;		line 62 in file "menu.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0
  1745 ;;      Temps:          0       2       0       0       0
  1746 ;;      Totals:         0       2       0       0       0
  1747 ;;Total ram usage:        2 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    3
  1750 ;; This function calls:
  1751 ;;		_SaveMenuItem
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _ValueInc
  1759  0778                     _ValueInc:	
  1760                           
  1761                           ;menu.c: 64: g_menu.items[g_menu.index].value++;
  1762                           
  1763                           ;incstack = 0
  1764                           ; Regs used in _ValueInc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1765  0778  3001               	movlw	1
  1766  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1767  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1768  077B  00A3               	movwf	??_ValueInc
  1769  077C  0863               	movf	_g_menu+8,w
  1770  077D  00A4               	movwf	??_ValueInc+1
  1771  077E  0724               	addwf	??_ValueInc+1,w
  1772  077F  3E5B               	addlw	(low (_g_menu| 0))& (0+255)
  1773  0780  0084               	movwf	4
  1774  0781  0823               	movf	??_ValueInc,w
  1775  0782  1383               	bcf	3,7	;select IRP bank0
  1776  0783  0780               	addwf	0,f
  1777                           
  1778                           ;menu.c: 65: SaveMenuItem(g_menu.index);
  1779  0784  0863               	movf	_g_menu+8,w
  1780  0785  120A  118A  2755   	fcall	_SaveMenuItem
  1781  0788  0008               	return
  1782  0789                     __end_of_ValueInc:	
  1783                           
  1784                           	psect	text2
  1785  07A9                     __ptext2:	
  1786 ;; *************** function _ValueDec *****************
  1787 ;; Defined at:
  1788 ;;		line 67 in file "menu.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2   69[None  ] int 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1802 ;;      Params:         0       0       0       0       0
  1803 ;;      Locals:         0       0       0       0       0
  1804 ;;      Temps:          0       1       0       0       0
  1805 ;;      Totals:         0       1       0       0       0
  1806 ;;Total ram usage:        1 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    3
  1809 ;; This function calls:
  1810 ;;		_SaveMenuItem
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function _ValueDec
  1818  07A9                     _ValueDec:	
  1819                           
  1820                           ;menu.c: 69: g_menu.items[g_menu.index].value--;
  1821                           
  1822                           ;incstack = 0
  1823                           ; Regs used in _ValueDec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1824  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1825  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1826  07AB  0863               	movf	_g_menu+8,w
  1827  07AC  00A3               	movwf	??_ValueDec
  1828  07AD  0723               	addwf	??_ValueDec,w
  1829  07AE  3E5B               	addlw	(low (_g_menu| 0))& (0+255)
  1830  07AF  0084               	movwf	4
  1831  07B0  3001               	movlw	1
  1832  07B1  1383               	bcf	3,7	;select IRP bank0
  1833  07B2  0280               	subwf	0,f
  1834                           
  1835                           ;menu.c: 70: SaveMenuItem(g_menu.index);
  1836  07B3  0863               	movf	_g_menu+8,w
  1837  07B4  120A  118A  2755   	fcall	_SaveMenuItem
  1838  07B7  0008               	return
  1839  07B8                     __end_of_ValueDec:	
  1840                           
  1841                           	psect	text3
  1842  0755                     __ptext3:	
  1843 ;; *************** function _SaveMenuItem *****************
  1844 ;; Defined at:
  1845 ;;		line 32 in file "menu.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  item            1    wreg     unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  item            1    2[BANK0 ] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1859 ;;      Params:         0       0       0       0       0
  1860 ;;      Locals:         0       1       0       0       0
  1861 ;;      Temps:          0       2       0       0       0
  1862 ;;      Totals:         0       3       0       0       0
  1863 ;;Total ram usage:        3 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    2
  1866 ;; This function calls:
  1867 ;;		_eeprom_write
  1868 ;; This function is called by:
  1869 ;;		_ValueInc
  1870 ;;		_ValueDec
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           
  1875                           ;psect for function _SaveMenuItem
  1876  0755                     _SaveMenuItem:	
  1877                           
  1878                           ;incstack = 0
  1879                           ; Regs used in _SaveMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1880                           ;SaveMenuItem@item stored from wreg
  1881  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0757  00A2               	movwf	SaveMenuItem@item
  1884                           
  1885                           ;menu.c: 34: eeprom_write(item, g_menu.items[item].value);
  1886  0758  0822               	movf	SaveMenuItem@item,w
  1887  0759  00A0               	movwf	??_SaveMenuItem
  1888  075A  0720               	addwf	??_SaveMenuItem,w
  1889  075B  3E5B               	addlw	(low (_g_menu| 0))& (0+255)
  1890  075C  0084               	movwf	4
  1891  075D  1383               	bcf	3,7	;select IRP bank0
  1892  075E  0800               	movf	0,w
  1893  075F  00A1               	movwf	??_SaveMenuItem+1
  1894  0760  0821               	movf	??_SaveMenuItem+1,w
  1895  0761  00F4               	movwf	eeprom_write@value
  1896  0762  0822               	movf	SaveMenuItem@item,w
  1897  0763  120A  118A  26BA   	fcall	_eeprom_write
  1898  0766  0008               	return
  1899  0767                     __end_of_SaveMenuItem:	
  1900                           
  1901                           	psect	text4
  1902  06BA                     __ptext4:	
  1903 ;; *************** function _eeprom_write *****************
  1904 ;; Defined at:
  1905 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eewrite.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  addr            1    wreg     unsigned char 
  1908 ;;  value           1    4[COMMON] unsigned char 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  addr            1    6[COMMON] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         1       0       0       0       0
  1921 ;;      Locals:         1       0       0       0       0
  1922 ;;      Temps:          1       0       0       0       0
  1923 ;;      Totals:         3       0       0       0       0
  1924 ;;Total ram usage:        3 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_SaveMenuItem
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _eeprom_write
  1936  06BA                     _eeprom_write:	
  1937                           
  1938                           ;incstack = 0
  1939                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1940                           ;eeprom_write@addr stored from wreg
  1941  06BA  00F6               	movwf	eeprom_write@addr
  1942  06BB                     l291:	
  1943  06BB  1683               	bsf	3,5	;RP0=1, select bank3
  1944  06BC  1703               	bsf	3,6	;RP1=1, select bank3
  1945  06BD  188C               	btfsc	12,1	;volsfr
  1946  06BE  2EBB               	goto	l291
  1947  06BF  0876               	movf	eeprom_write@addr,w
  1948  06C0  1283               	bcf	3,5	;RP0=0, select bank2
  1949  06C1  1703               	bsf	3,6	;RP1=1, select bank2
  1950  06C2  008D               	movwf	13	;volatile
  1951  06C3  0874               	movf	eeprom_write@value,w
  1952  06C4  008C               	movwf	12	;volatile
  1953  06C5  303F               	movlw	63
  1954  06C6  00F5               	movwf	??_eeprom_write
  1955  06C7  0875               	movf	??_eeprom_write,w
  1956  06C8  1683               	bsf	3,5	;RP0=1, select bank3
  1957  06C9  1703               	bsf	3,6	;RP1=1, select bank3
  1958  06CA  058C               	andwf	12,f	;volsfr
  1959  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1960  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1961  06CD  1003               	bcf	3,0	;volatile
  1962  06CE  1B8B               	btfsc	11,7	;volatile
  1963  06CF  1403               	bsf	3,0	;volatile
  1964  06D0  138B               	bcf	11,7	;volatile
  1965  06D1  1683               	bsf	3,5	;RP0=1, select bank3
  1966  06D2  1703               	bsf	3,6	;RP1=1, select bank3
  1967  06D3  150C               	bsf	12,2	;volsfr
  1968  06D4  3055               	movlw	85
  1969  06D5  008D               	movwf	13	;volsfr
  1970  06D6  30AA               	movlw	170
  1971  06D7  008D               	movwf	13	;volsfr
  1972  06D8  148C               	bsf	12,1	;volsfr
  1973  06D9  110C               	bcf	12,2	;volsfr
  1974  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1975  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1976  06DC  1C03               	btfss	3,0	;volatile
  1977  06DD  0008               	return
  1978  06DE  178B               	bsf	11,7	;volatile
  1979  06DF  0008               	return
  1980  06E0                     __end_of_eeprom_write:	
  1981                           
  1982                           	psect	text5
  1983  0568                     __ptext5:	
  1984 ;; *************** function _ShowMenu *****************
  1985 ;; Defined at:
  1986 ;;		line 23 in file "menu.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  i               1   28[BANK0 ] char 
  1991 ;;  count           1   27[BANK0 ] char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       0       0       0       0
  2002 ;;      Locals:         0       2       0       0       0
  2003 ;;      Temps:          0       4       0       0       0
  2004 ;;      Totals:         0       6       0       0       0
  2005 ;;Total ram usage:        6 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    4
  2008 ;; This function calls:
  2009 ;;		_LCDByte
  2010 ;;		_LCDGotoXY
  2011 ;;		_LCDWriteInt
  2012 ;;		_LCDWriteString
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _ShowMenu
  2020  0568                     _ShowMenu:	
  2021                           
  2022                           ;menu.c: 25: { LCDGotoXY(0,0); int8_t count = LCDWriteString(g_menu.items[g_menu.index].
      +                          name); for(int8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _ShowMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2026  0568  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0569  1303               	bcf	3,6	;RP1=0, select bank0
  2028  056A  01A9               	clrf	LCDGotoXY@y
  2029  056B  3000               	movlw	0
  2030  056C  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  2031  0571  1403               	setc
  2032  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0574  0D63               	rlf	_g_menu+8,w
  2035  0575  3E5B               	addlw	(low (_g_menu| 0))& (0+255)
  2036  0576  0084               	movwf	4
  2037  0577  1383               	bcf	3,7	;select IRP bank0
  2038  0578  0800               	movf	0,w
  2039  0579  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  2040  057E  1283               	bcf	3,5	;RP0=0, select bank0
  2041  057F  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0580  00B7               	movwf	??_ShowMenu
  2043  0581  0837               	movf	??_ShowMenu,w
  2044  0582  00BB               	movwf	ShowMenu@count
  2045  0583  083B               	movf	ShowMenu@count,w
  2046  0584  00B7               	movwf	??_ShowMenu
  2047  0585  0837               	movf	??_ShowMenu,w
  2048  0586  00BC               	movwf	ShowMenu@i
  2049  0587  083C               	movf	ShowMenu@i,w
  2050  0588  3A80               	xorlw	128
  2051  0589  3E70               	addlw	-144
  2052  058A  1803               	btfsc	3,0
  2053  058B  2D9F               	goto	l2315
  2054  058C                     l2309:	
  2055  058C  01F6               	clrf	LCDByte@isdata
  2056  058D  0AF6               	incf	LCDByte@isdata,f
  2057  058E  3020               	movlw	32
  2058  058F  120A  118A  2511  120A  118A  	fcall	_LCDByte
  2059  0594  3001               	movlw	1
  2060  0595  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0596  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0597  00B7               	movwf	??_ShowMenu
  2063  0598  0837               	movf	??_ShowMenu,w
  2064  0599  07BC               	addwf	ShowMenu@i,f
  2065  059A  083C               	movf	ShowMenu@i,w
  2066  059B  3A80               	xorlw	128
  2067  059C  3E70               	addlw	-144
  2068  059D  1C03               	skipc
  2069  059E  2D8C               	goto	l2309
  2070  059F                     l2315:	
  2071                           
  2072                           ;menu.c: 26: { LCDGotoXY(4,0); LCDWriteInt(g_menu.items[g_menu.index].value,3);};
  2073  059F  01A9               	clrf	LCDGotoXY@y
  2074  05A0  3004               	movlw	4
  2075  05A1  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  2076  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2077  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2078  05A8  0863               	movf	_g_menu+8,w
  2079  05A9  00B7               	movwf	??_ShowMenu
  2080  05AA  0737               	addwf	??_ShowMenu,w
  2081  05AB  3E5B               	addlw	(low (_g_menu| 0))& (0+255)
  2082  05AC  0084               	movwf	4
  2083  05AD  1383               	bcf	3,7	;select IRP bank0
  2084  05AE  0800               	movf	0,w
  2085  05AF  00B8               	movwf	??_ShowMenu+1
  2086  05B0  01B9               	clrf	??_ShowMenu+2
  2087  05B1  0838               	movf	??_ShowMenu+1,w
  2088  05B2  00A9               	movwf	LCDWriteInt@val
  2089  05B3  0839               	movf	??_ShowMenu+2,w
  2090  05B4  00AA               	movwf	LCDWriteInt@val+1
  2091  05B5  3003               	movlw	3
  2092  05B6  00BA               	movwf	??_ShowMenu+3
  2093  05B7  083A               	movf	??_ShowMenu+3,w
  2094  05B8  00AB               	movwf	LCDWriteInt@field_length
  2095  05B9  120A  118A  2282   	fcall	_LCDWriteInt
  2096  05BC  0008               	return
  2097  05BD                     __end_of_ShowMenu:	
  2098                           
  2099                           	psect	text6
  2100  0282                     __ptext6:	
  2101 ;; *************** function _LCDWriteInt *****************
  2102 ;; Defined at:
  2103 ;;		line 328 in file "lcd_hd44780_pic16.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  val             2    9[BANK0 ] int 
  2106 ;;  field_length    1   11[BANK0 ] char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  str             5   14[BANK0 ] unsigned char [5]
  2109 ;;  i               2   21[BANK0 ] int 
  2110 ;;  j               2   19[BANK0 ] int 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      char 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2120 ;;      Params:         0       3       0       0       0
  2121 ;;      Locals:         0       9       0       0       0
  2122 ;;      Temps:          0       2       0       0       0
  2123 ;;      Totals:         0      14       0       0       0
  2124 ;;Total ram usage:       14 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    3
  2127 ;; This function calls:
  2128 ;;		_LCDByte
  2129 ;;		___awdiv
  2130 ;;		___awmod
  2131 ;; This function is called by:
  2132 ;;		_ShowMenu
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _LCDWriteInt
  2138  0282                     _LCDWriteInt:	
  2139                           
  2140                           ;lcd_hd44780_pic16.c: 330: char str[5]={-16,-16,-16,-16,-16};
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2144  0282  302E               	movlw	LCDWriteInt@str& (0+255)
  2145  0283  0084               	movwf	4
  2146  0284  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0285  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0286  0854               	movf	LCDWriteInt@F1646,w
  2149  0287  1383               	bcf	3,7	;select IRP bank0
  2150  0288  0080               	movwf	0
  2151  0289  0A84               	incf	4,f
  2152  028A  0855               	movf	LCDWriteInt@F1646+1,w
  2153  028B  0080               	movwf	0
  2154  028C  0A84               	incf	4,f
  2155  028D  0856               	movf	LCDWriteInt@F1646+2,w
  2156  028E  0080               	movwf	0
  2157  028F  0A84               	incf	4,f
  2158  0290  0857               	movf	LCDWriteInt@F1646+3,w
  2159  0291  0080               	movwf	0
  2160  0292  0A84               	incf	4,f
  2161  0293  0858               	movf	LCDWriteInt@F1646+4,w
  2162  0294  0080               	movwf	0
  2163                           
  2164                           ;lcd_hd44780_pic16.c: 331: int i=4,j=0;
  2165  0295  3004               	movlw	4
  2166  0296  00B5               	movwf	LCDWriteInt@i
  2167  0297  3000               	movlw	0
  2168  0298  00B6               	movwf	LCDWriteInt@i+1
  2169  0299  01B3               	clrf	LCDWriteInt@j
  2170  029A  01B4               	clrf	LCDWriteInt@j+1
  2171                           
  2172                           ;lcd_hd44780_pic16.c: 333: if(val == 0)
  2173  029B  0829               	movf	LCDWriteInt@val,w
  2174  029C  042A               	iorwf	LCDWriteInt@val+1,w
  2175  029D  1903               	btfsc	3,2
  2176                           
  2177                           ;lcd_hd44780_pic16.c: 334: {
  2178                           ;lcd_hd44780_pic16.c: 335: str[4] = 0;
  2179  029E  01B2               	clrf	LCDWriteInt@str+4
  2180                           
  2181                           ;lcd_hd44780_pic16.c: 336: }
  2182                           ;lcd_hd44780_pic16.c: 338: if(val<0)
  2183  029F  1FAA               	btfss	LCDWriteInt@val+1,7
  2184  02A0  2AB0               	goto	l2211
  2185                           
  2186                           ;lcd_hd44780_pic16.c: 339: {
  2187                           ;lcd_hd44780_pic16.c: 340: (LCDByte('-',1));
  2188  02A1  01F6               	clrf	LCDByte@isdata
  2189  02A2  0AF6               	incf	LCDByte@isdata,f
  2190  02A3  302D               	movlw	45
  2191  02A4  120A  118A  2511  120A  118A  	fcall	_LCDByte
  2192                           
  2193                           ;lcd_hd44780_pic16.c: 341: val=val*-1;
  2194  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2195  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2196  02AB  09A9               	comf	LCDWriteInt@val,f
  2197  02AC  09AA               	comf	LCDWriteInt@val+1,f
  2198  02AD  0AA9               	incf	LCDWriteInt@val,f
  2199  02AE  1903               	skipnz
  2200  02AF  0AAA               	incf	LCDWriteInt@val+1,f
  2201  02B0                     l2211:	
  2202                           ;lcd_hd44780_pic16.c: 342: }
  2203                           ;lcd_hd44780_pic16.c: 344: while(val)
  2204                           
  2205  02B0  0829               	movf	LCDWriteInt@val,w
  2206  02B1  042A               	iorwf	LCDWriteInt@val+1,w
  2207  02B2  1903               	btfsc	3,2
  2208  02B3  2AE5               	goto	l2213
  2209                           
  2210                           ;lcd_hd44780_pic16.c: 345: {
  2211                           ;lcd_hd44780_pic16.c: 346: str[i]=val%10;
  2212  02B4  300A               	movlw	10
  2213  02B5  00A0               	movwf	___awmod@divisor
  2214  02B6  3000               	movlw	0
  2215  02B7  00A1               	movwf	___awmod@divisor+1
  2216  02B8  082A               	movf	LCDWriteInt@val+1,w
  2217  02B9  00A3               	movwf	___awmod@dividend+1
  2218  02BA  0829               	movf	LCDWriteInt@val,w
  2219  02BB  00A2               	movwf	___awmod@dividend
  2220  02BC  120A  118A  25BD  120A  118A  	fcall	___awmod
  2221  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2222  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2223  02C3  0820               	movf	?___awmod,w
  2224  02C4  00AC               	movwf	??_LCDWriteInt
  2225  02C5  0835               	movf	LCDWriteInt@i,w
  2226  02C6  3E2E               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2227  02C7  0084               	movwf	4
  2228  02C8  082C               	movf	??_LCDWriteInt,w
  2229  02C9  1383               	bcf	3,7	;select IRP bank0
  2230  02CA  0080               	movwf	0
  2231                           
  2232                           ;lcd_hd44780_pic16.c: 347: val=val/10;
  2233  02CB  300A               	movlw	10
  2234  02CC  00A0               	movwf	___awdiv@divisor
  2235  02CD  3000               	movlw	0
  2236  02CE  00A1               	movwf	___awdiv@divisor+1
  2237  02CF  082A               	movf	LCDWriteInt@val+1,w
  2238  02D0  00A3               	movwf	___awdiv@dividend+1
  2239  02D1  0829               	movf	LCDWriteInt@val,w
  2240  02D2  00A2               	movwf	___awdiv@dividend
  2241  02D3  120A  118A  245B  120A  118A  	fcall	___awdiv
  2242  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2243  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2244  02DA  0821               	movf	?___awdiv+1,w
  2245  02DB  00AA               	movwf	LCDWriteInt@val+1
  2246  02DC  0820               	movf	?___awdiv,w
  2247  02DD  00A9               	movwf	LCDWriteInt@val
  2248                           
  2249                           ;lcd_hd44780_pic16.c: 348: i--;
  2250  02DE  30FF               	movlw	255
  2251  02DF  07B5               	addwf	LCDWriteInt@i,f
  2252  02E0  1803               	skipnc
  2253  02E1  0AB6               	incf	LCDWriteInt@i+1,f
  2254  02E2  30FF               	movlw	255
  2255  02E3  07B6               	addwf	LCDWriteInt@i+1,f
  2256  02E4  2AB0               	goto	l2211
  2257  02E5                     l2213:	
  2258                           
  2259                           ;lcd_hd44780_pic16.c: 349: }
  2260                           ;lcd_hd44780_pic16.c: 350: if(field_length==-1)
  2261  02E5  0A2B               	incf	LCDWriteInt@field_length,w
  2262  02E6  1903               	btfsc	3,2
  2263  02E7  2AFA               	goto	l2221
  2264                           
  2265                           ;lcd_hd44780_pic16.c: 352: else
  2266                           ;lcd_hd44780_pic16.c: 353: j=5-field_length;
  2267                           
  2268                           ;lcd_hd44780_pic16.c: 351: while(str[j]==-16) j++;
  2269  02E8  082B               	movf	LCDWriteInt@field_length,w
  2270  02E9  00AC               	movwf	??_LCDWriteInt
  2271  02EA  01AD               	clrf	??_LCDWriteInt+1
  2272  02EB  1BAC               	btfsc	??_LCDWriteInt,7
  2273  02EC  03AD               	decf	??_LCDWriteInt+1,f
  2274  02ED  09AC               	comf	??_LCDWriteInt,f
  2275  02EE  09AD               	comf	??_LCDWriteInt+1,f
  2276  02EF  0AAC               	incf	??_LCDWriteInt,f
  2277  02F0  1903               	skipnz
  2278  02F1  0AAD               	incf	??_LCDWriteInt+1,f
  2279  02F2  082C               	movf	??_LCDWriteInt,w
  2280  02F3  3E05               	addlw	5
  2281  02F4  00B3               	movwf	LCDWriteInt@j
  2282  02F5  082D               	movf	??_LCDWriteInt+1,w
  2283  02F6  1803               	skipnc
  2284  02F7  3E01               	addlw	1
  2285  02F8  3E00               	addlw	0
  2286  02F9  00B4               	movwf	LCDWriteInt@j+1
  2287  02FA                     l2221:	
  2288                           
  2289                           ;lcd_hd44780_pic16.c: 356: for(i=j;i<5;i++)
  2290  02FA  0834               	movf	LCDWriteInt@j+1,w
  2291  02FB  00B6               	movwf	LCDWriteInt@i+1
  2292  02FC  0833               	movf	LCDWriteInt@j,w
  2293  02FD  00B5               	movwf	LCDWriteInt@i
  2294  02FE                     L1:	
  2295  02FE  0836               	movf	LCDWriteInt@i+1,w
  2296  02FF  3A80               	xorlw	128
  2297  0300  00FF               	movwf	127
  2298  0301  3080               	movlw	128
  2299  0302  027F               	subwf	127,w
  2300  0303  1D03               	skipz
  2301  0304  2B07               	goto	u1935
  2302  0305  3005               	movlw	5
  2303  0306  0235               	subwf	LCDWriteInt@i,w
  2304  0307                     u1935:	
  2305  0307  1803               	btfsc	3,0
  2306  0308  0008               	return
  2307                           
  2308                           ;lcd_hd44780_pic16.c: 357: {
  2309                           ;lcd_hd44780_pic16.c: 358: (LCDByte(48+str[i],1));
  2310  0309  01F6               	clrf	LCDByte@isdata
  2311  030A  0AF6               	incf	LCDByte@isdata,f
  2312  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2313  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2314  030D  0835               	movf	LCDWriteInt@i,w
  2315  030E  3E2E               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2316  030F  0084               	movwf	4
  2317  0310  1383               	bcf	3,7	;select IRP bank0
  2318  0311  0800               	movf	0,w
  2319  0312  3E30               	addlw	48
  2320  0313  120A  118A  2511  120A  118A  	fcall	_LCDByte
  2321  0318  3001               	movlw	1
  2322  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2323  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2324  031B  07B5               	addwf	LCDWriteInt@i,f
  2325  031C  1803               	skipnc
  2326  031D  0AB6               	incf	LCDWriteInt@i+1,f
  2327  031E  3000               	movlw	0
  2328  031F  07B6               	addwf	LCDWriteInt@i+1,f
  2329  0320  2AFE               	goto	L1
  2330  0321                     __end_of_LCDWriteInt:	
  2331                           ;lcd_hd44780_pic16.c: 359: }
  2332                           ;lcd_hd44780_pic16.c: 360: return field_length;
  2333                           ;	Return value of _LCDWriteInt is never used
  2334                           
  2335                           
  2336                           	psect	text7
  2337  05BD                     __ptext7:	
  2338 ;; *************** function ___awmod *****************
  2339 ;; Defined at:
  2340 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  divisor         2    0[BANK0 ] int 
  2343 ;;  dividend        2    2[BANK0 ] int 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  sign            1    6[COMMON] unsigned char 
  2346 ;;  counter         1    5[COMMON] unsigned char 
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  2    0[BANK0 ] int 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2356 ;;      Params:         0       4       0       0       0
  2357 ;;      Locals:         2       0       0       0       0
  2358 ;;      Temps:          1       0       0       0       0
  2359 ;;      Totals:         3       4       0       0       0
  2360 ;;Total ram usage:        7 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_LCDWriteInt
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           
  2371                           ;psect for function ___awmod
  2372  05BD                     ___awmod:	
  2373                           
  2374                           ;incstack = 0
  2375                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2376  05BD  01F6               	clrf	___awmod@sign
  2377  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2378  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2379  05C0  1FA3               	btfss	___awmod@dividend+1,7
  2380  05C1  2DC9               	goto	l2109
  2381  05C2  09A2               	comf	___awmod@dividend,f
  2382  05C3  09A3               	comf	___awmod@dividend+1,f
  2383  05C4  0AA2               	incf	___awmod@dividend,f
  2384  05C5  1903               	skipnz
  2385  05C6  0AA3               	incf	___awmod@dividend+1,f
  2386  05C7  01F6               	clrf	___awmod@sign
  2387  05C8  0AF6               	incf	___awmod@sign,f
  2388  05C9                     l2109:	
  2389  05C9  1FA1               	btfss	___awmod@divisor+1,7
  2390  05CA  2DD0               	goto	l2113
  2391  05CB  09A0               	comf	___awmod@divisor,f
  2392  05CC  09A1               	comf	___awmod@divisor+1,f
  2393  05CD  0AA0               	incf	___awmod@divisor,f
  2394  05CE  1903               	skipnz
  2395  05CF  0AA1               	incf	___awmod@divisor+1,f
  2396  05D0                     l2113:	
  2397  05D0  0820               	movf	___awmod@divisor,w
  2398  05D1  0421               	iorwf	___awmod@divisor+1,w
  2399  05D2  1903               	btfsc	3,2
  2400  05D3  2DFD               	goto	l2131
  2401  05D4  01F5               	clrf	___awmod@counter
  2402  05D5  0AF5               	incf	___awmod@counter,f
  2403  05D6                     l2121:	
  2404  05D6  1BA1               	btfsc	___awmod@divisor+1,7
  2405  05D7  2DE4               	goto	l2123
  2406  05D8  3001               	movlw	1
  2407  05D9                     u1785:	
  2408  05D9  1003               	clrc
  2409  05DA  0DA0               	rlf	___awmod@divisor,f
  2410  05DB  0DA1               	rlf	___awmod@divisor+1,f
  2411  05DC  3EFF               	addlw	-1
  2412  05DD  1D03               	skipz
  2413  05DE  2DD9               	goto	u1785
  2414  05DF  3001               	movlw	1
  2415  05E0  00F4               	movwf	??___awmod
  2416  05E1  0874               	movf	??___awmod,w
  2417  05E2  07F5               	addwf	___awmod@counter,f
  2418  05E3  2DD6               	goto	l2121
  2419  05E4                     l2123:	
  2420  05E4  0821               	movf	___awmod@divisor+1,w
  2421  05E5  0223               	subwf	___awmod@dividend+1,w
  2422  05E6  1D03               	skipz
  2423  05E7  2DEA               	goto	u1805
  2424  05E8  0820               	movf	___awmod@divisor,w
  2425  05E9  0222               	subwf	___awmod@dividend,w
  2426  05EA                     u1805:	
  2427  05EA  1C03               	skipc
  2428  05EB  2DF2               	goto	l2127
  2429  05EC  0820               	movf	___awmod@divisor,w
  2430  05ED  02A2               	subwf	___awmod@dividend,f
  2431  05EE  0821               	movf	___awmod@divisor+1,w
  2432  05EF  1C03               	skipc
  2433  05F0  03A3               	decf	___awmod@dividend+1,f
  2434  05F1  02A3               	subwf	___awmod@dividend+1,f
  2435  05F2                     l2127:	
  2436  05F2  3001               	movlw	1
  2437  05F3                     u1815:	
  2438  05F3  1003               	clrc
  2439  05F4  0CA1               	rrf	___awmod@divisor+1,f
  2440  05F5  0CA0               	rrf	___awmod@divisor,f
  2441  05F6  3EFF               	addlw	-1
  2442  05F7  1D03               	skipz
  2443  05F8  2DF3               	goto	u1815
  2444  05F9  3001               	movlw	1
  2445  05FA  02F5               	subwf	___awmod@counter,f
  2446  05FB  1D03               	btfss	3,2
  2447  05FC  2DE4               	goto	l2123
  2448  05FD                     l2131:	
  2449  05FD  0876               	movf	___awmod@sign,w
  2450  05FE  1903               	btfsc	3,2
  2451  05FF  2E05               	goto	l2135
  2452  0600  09A2               	comf	___awmod@dividend,f
  2453  0601  09A3               	comf	___awmod@dividend+1,f
  2454  0602  0AA2               	incf	___awmod@dividend,f
  2455  0603  1903               	skipnz
  2456  0604  0AA3               	incf	___awmod@dividend+1,f
  2457  0605                     l2135:	
  2458  0605  0823               	movf	___awmod@dividend+1,w
  2459  0606  00A1               	movwf	?___awmod+1
  2460  0607  0822               	movf	___awmod@dividend,w
  2461  0608  00A0               	movwf	?___awmod
  2462  0609  0008               	return
  2463  060A                     __end_of___awmod:	
  2464                           
  2465                           	psect	text8
  2466  045B                     __ptext8:	
  2467 ;; *************** function ___awdiv *****************
  2468 ;; Defined at:
  2469 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  divisor         2    0[BANK0 ] int 
  2472 ;;  dividend        2    2[BANK0 ] int 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  quotient        2    6[BANK0 ] int 
  2475 ;;  sign            1    5[BANK0 ] unsigned char 
  2476 ;;  counter         1    4[BANK0 ] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  2    0[BANK0 ] int 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         0       4       0       0       0
  2487 ;;      Locals:         0       4       0       0       0
  2488 ;;      Temps:          1       0       0       0       0
  2489 ;;      Totals:         1       8       0       0       0
  2490 ;;Total ram usage:        9 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    1
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_LCDWriteInt
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           
  2501                           ;psect for function ___awdiv
  2502  045B                     ___awdiv:	
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2506  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2507  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2508  045D  01A5               	clrf	___awdiv@sign
  2509  045E  1FA1               	btfss	___awdiv@divisor+1,7
  2510  045F  2C67               	goto	l2065
  2511  0460  09A0               	comf	___awdiv@divisor,f
  2512  0461  09A1               	comf	___awdiv@divisor+1,f
  2513  0462  0AA0               	incf	___awdiv@divisor,f
  2514  0463  1903               	skipnz
  2515  0464  0AA1               	incf	___awdiv@divisor+1,f
  2516  0465  01A5               	clrf	___awdiv@sign
  2517  0466  0AA5               	incf	___awdiv@sign,f
  2518  0467                     l2065:	
  2519  0467  1FA3               	btfss	___awdiv@dividend+1,7
  2520  0468  2C72               	goto	l2071
  2521  0469  09A2               	comf	___awdiv@dividend,f
  2522  046A  09A3               	comf	___awdiv@dividend+1,f
  2523  046B  0AA2               	incf	___awdiv@dividend,f
  2524  046C  1903               	skipnz
  2525  046D  0AA3               	incf	___awdiv@dividend+1,f
  2526  046E  3001               	movlw	1
  2527  046F  00F4               	movwf	??___awdiv
  2528  0470  0874               	movf	??___awdiv,w
  2529  0471  06A5               	xorwf	___awdiv@sign,f
  2530  0472                     l2071:	
  2531  0472  01A6               	clrf	___awdiv@quotient
  2532  0473  01A7               	clrf	___awdiv@quotient+1
  2533  0474  0820               	movf	___awdiv@divisor,w
  2534  0475  0421               	iorwf	___awdiv@divisor+1,w
  2535  0476  1903               	btfsc	3,2
  2536  0477  2CA9               	goto	l2093
  2537  0478  01A4               	clrf	___awdiv@counter
  2538  0479  0AA4               	incf	___awdiv@counter,f
  2539  047A                     l2081:	
  2540  047A  1BA1               	btfsc	___awdiv@divisor+1,7
  2541  047B  2C88               	goto	l2083
  2542  047C  3001               	movlw	1
  2543  047D                     u1685:	
  2544  047D  1003               	clrc
  2545  047E  0DA0               	rlf	___awdiv@divisor,f
  2546  047F  0DA1               	rlf	___awdiv@divisor+1,f
  2547  0480  3EFF               	addlw	-1
  2548  0481  1D03               	skipz
  2549  0482  2C7D               	goto	u1685
  2550  0483  3001               	movlw	1
  2551  0484  00F4               	movwf	??___awdiv
  2552  0485  0874               	movf	??___awdiv,w
  2553  0486  07A4               	addwf	___awdiv@counter,f
  2554  0487  2C7A               	goto	l2081
  2555  0488                     l2083:	
  2556  0488  3001               	movlw	1
  2557  0489                     u1705:	
  2558  0489  1003               	clrc
  2559  048A  0DA6               	rlf	___awdiv@quotient,f
  2560  048B  0DA7               	rlf	___awdiv@quotient+1,f
  2561  048C  3EFF               	addlw	-1
  2562  048D  1D03               	skipz
  2563  048E  2C89               	goto	u1705
  2564  048F  0821               	movf	___awdiv@divisor+1,w
  2565  0490  0223               	subwf	___awdiv@dividend+1,w
  2566  0491  1D03               	skipz
  2567  0492  2C95               	goto	u1715
  2568  0493  0820               	movf	___awdiv@divisor,w
  2569  0494  0222               	subwf	___awdiv@dividend,w
  2570  0495                     u1715:	
  2571  0495  1C03               	skipc
  2572  0496  2C9E               	goto	l2089
  2573  0497  0820               	movf	___awdiv@divisor,w
  2574  0498  02A2               	subwf	___awdiv@dividend,f
  2575  0499  0821               	movf	___awdiv@divisor+1,w
  2576  049A  1C03               	skipc
  2577  049B  03A3               	decf	___awdiv@dividend+1,f
  2578  049C  02A3               	subwf	___awdiv@dividend+1,f
  2579  049D  1426               	bsf	___awdiv@quotient,0
  2580  049E                     l2089:	
  2581  049E  3001               	movlw	1
  2582  049F                     u1725:	
  2583  049F  1003               	clrc
  2584  04A0  0CA1               	rrf	___awdiv@divisor+1,f
  2585  04A1  0CA0               	rrf	___awdiv@divisor,f
  2586  04A2  3EFF               	addlw	-1
  2587  04A3  1D03               	skipz
  2588  04A4  2C9F               	goto	u1725
  2589  04A5  3001               	movlw	1
  2590  04A6  02A4               	subwf	___awdiv@counter,f
  2591  04A7  1D03               	btfss	3,2
  2592  04A8  2C88               	goto	l2083
  2593  04A9                     l2093:	
  2594  04A9  0825               	movf	___awdiv@sign,w
  2595  04AA  1903               	btfsc	3,2
  2596  04AB  2CB1               	goto	l2097
  2597  04AC  09A6               	comf	___awdiv@quotient,f
  2598  04AD  09A7               	comf	___awdiv@quotient+1,f
  2599  04AE  0AA6               	incf	___awdiv@quotient,f
  2600  04AF  1903               	skipnz
  2601  04B0  0AA7               	incf	___awdiv@quotient+1,f
  2602  04B1                     l2097:	
  2603  04B1  0827               	movf	___awdiv@quotient+1,w
  2604  04B2  00A1               	movwf	?___awdiv+1
  2605  04B3  0826               	movf	___awdiv@quotient,w
  2606  04B4  00A0               	movwf	?___awdiv
  2607  04B5  0008               	return
  2608  04B6                     __end_of___awdiv:	
  2609                           
  2610                           	psect	text9
  2611  07B8                     __ptext9:	
  2612 ;; *************** function _MenuUp *****************
  2613 ;; Defined at:
  2614 ;;		line 40 in file "menu.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0
  2630 ;;      Temps:          1       0       0       0       0
  2631 ;;      Totals:         1       0       0       0       0
  2632 ;;Total ram usage:        1 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _MenuUp
  2644  07B8                     _MenuUp:	
  2645                           
  2646                           ;menu.c: 42: if(g_menu.index == 0)
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _MenuUp: [wreg+status,2+status,0]
  2650  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2651  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2652  07BA  0863               	movf	_g_menu+8,w
  2653  07BB  1D03               	btfss	3,2
  2654  07BC  2FC2               	goto	l1765
  2655                           
  2656                           ;menu.c: 43: {
  2657                           ;menu.c: 44: g_menu.index = 4 - 1;
  2658  07BD  3003               	movlw	3
  2659  07BE  00F4               	movwf	??_MenuUp
  2660  07BF  0874               	movf	??_MenuUp,w
  2661  07C0  00E3               	movwf	_g_menu+8
  2662                           
  2663                           ;menu.c: 45: }
  2664  07C1  0008               	return
  2665  07C2                     l1765:	
  2666                           
  2667                           ;menu.c: 46: else
  2668                           ;menu.c: 47: {
  2669                           ;menu.c: 48: g_menu.index--;
  2670  07C2  3001               	movlw	1
  2671  07C3  02E3               	subwf	_g_menu+8,f
  2672  07C4  0008               	return
  2673  07C5                     __end_of_MenuUp:	
  2674                           
  2675                           	psect	text10
  2676  0650                     __ptext10:	
  2677 ;; *************** function _MenuInit *****************
  2678 ;; Defined at:
  2679 ;;		line 7 in file "menu.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2693 ;;      Params:         0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0
  2695 ;;      Temps:          0       1       0       0       0
  2696 ;;      Totals:         0       1       0       0       0
  2697 ;;Total ram usage:        1 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    3
  2700 ;; This function calls:
  2701 ;;		_LoadMenuItem
  2702 ;; This function is called by:
  2703 ;;		_main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _MenuInit
  2709  0650                     _MenuInit:	
  2710                           
  2711                           ;menu.c: 9: g_menu.items[0].name = "ID1:";
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _MenuInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2715  0650  3024               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2716  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0653  00A2               	movwf	??_MenuInit
  2719  0654  0822               	movf	??_MenuInit,w
  2720  0655  00DC               	movwf	low ((_g_menu| 0+1))
  2721                           
  2722                           ;menu.c: 10: g_menu.items[0].value = LoadMenuItem(0);
  2723  0656  3000               	movlw	0
  2724  0657  120A  118A  2789  120A  118A  	fcall	_LoadMenuItem
  2725  065C  1283               	bcf	3,5	;RP0=0, select bank0
  2726  065D  1303               	bcf	3,6	;RP1=0, select bank0
  2727  065E  00A2               	movwf	??_MenuInit
  2728  065F  0822               	movf	??_MenuInit,w
  2729  0660  00DB               	movwf	_g_menu
  2730                           
  2731                           ;menu.c: 12: g_menu.items[1].name = "ID2:";
  2732  0661  3029               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2733  0662  00A2               	movwf	??_MenuInit
  2734  0663  0822               	movf	??_MenuInit,w
  2735  0664  00DE               	movwf	low ((_g_menu| 0+3))
  2736                           
  2737                           ;menu.c: 13: g_menu.items[1].value = LoadMenuItem(1);
  2738  0665  3001               	movlw	1
  2739  0666  120A  118A  2789  120A  118A  	fcall	_LoadMenuItem
  2740  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2741  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2742  066D  00A2               	movwf	??_MenuInit
  2743  066E  0822               	movf	??_MenuInit,w
  2744  066F  00DD               	movwf	_g_menu+2
  2745                           
  2746                           ;menu.c: 15: g_menu.items[2].name = "ID3:";
  2747  0670  302E               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2748  0671  00A2               	movwf	??_MenuInit
  2749  0672  0822               	movf	??_MenuInit,w
  2750  0673  00E0               	movwf	low ((_g_menu| 0+5))
  2751                           
  2752                           ;menu.c: 16: g_menu.items[2].value = LoadMenuItem(2);
  2753  0674  3002               	movlw	2
  2754  0675  120A  118A  2789  120A  118A  	fcall	_LoadMenuItem
  2755  067A  1283               	bcf	3,5	;RP0=0, select bank0
  2756  067B  1303               	bcf	3,6	;RP1=0, select bank0
  2757  067C  00A2               	movwf	??_MenuInit
  2758  067D  0822               	movf	??_MenuInit,w
  2759  067E  00DF               	movwf	_g_menu+4
  2760                           
  2761                           ;menu.c: 18: g_menu.items[3].name = "ID4:";
  2762  067F  3033               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2763  0680  00A2               	movwf	??_MenuInit
  2764  0681  0822               	movf	??_MenuInit,w
  2765  0682  00E2               	movwf	low ((_g_menu| 0+7))
  2766                           
  2767                           ;menu.c: 19: g_menu.items[3].value = LoadMenuItem(3);
  2768  0683  3003               	movlw	3
  2769  0684  120A  118A  2789   	fcall	_LoadMenuItem
  2770  0687  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0688  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0689  00A2               	movwf	??_MenuInit
  2773  068A  0822               	movf	??_MenuInit,w
  2774  068B  00E1               	movwf	_g_menu+6
  2775                           
  2776                           ;menu.c: 21: g_menu.index = 0;
  2777  068C  01E3               	clrf	_g_menu+8
  2778  068D  0008               	return
  2779  068E                     __end_of_MenuInit:	
  2780                           
  2781                           	psect	text11
  2782  0789                     __ptext11:	
  2783 ;; *************** function _LoadMenuItem *****************
  2784 ;; Defined at:
  2785 ;;		line 36 in file "menu.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  item            1    wreg     unsigned char 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  item            1    6[COMMON] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      unsigned char 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2799 ;;      Params:         0       0       0       0       0
  2800 ;;      Locals:         1       0       0       0       0
  2801 ;;      Temps:          0       2       0       0       0
  2802 ;;      Totals:         1       2       0       0       0
  2803 ;;Total ram usage:        3 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    2
  2806 ;; This function calls:
  2807 ;;		_eeprom_read
  2808 ;; This function is called by:
  2809 ;;		_MenuInit
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _LoadMenuItem
  2815  0789                     _LoadMenuItem:	
  2816                           
  2817                           ;incstack = 0
  2818                           ; Regs used in _LoadMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2819                           ;LoadMenuItem@item stored from wreg
  2820  0789  00F6               	movwf	LoadMenuItem@item
  2821                           
  2822                           ;menu.c: 38: g_menu.items[item].value = eeprom_read(item);
  2823  078A  0876               	movf	LoadMenuItem@item,w
  2824  078B  120A  118A  2726   	fcall	_eeprom_read
  2825  078E  1283               	bcf	3,5	;RP0=0, select bank0
  2826  078F  1303               	bcf	3,6	;RP1=0, select bank0
  2827  0790  00A0               	movwf	??_LoadMenuItem
  2828  0791  0876               	movf	LoadMenuItem@item,w
  2829  0792  00A1               	movwf	??_LoadMenuItem+1
  2830  0793  0721               	addwf	??_LoadMenuItem+1,w
  2831  0794  3E5B               	addlw	(low (_g_menu| 0))& (0+255)
  2832  0795  0084               	movwf	4
  2833  0796  0820               	movf	??_LoadMenuItem,w
  2834  0797  1383               	bcf	3,7	;select IRP bank0
  2835  0798  0080               	movwf	0
  2836  0799  0008               	return
  2837  079A                     __end_of_LoadMenuItem:	
  2838                           
  2839                           	psect	text12
  2840  0726                     __ptext12:	
  2841 ;; *************** function _eeprom_read *****************
  2842 ;; Defined at:
  2843 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  addr            1    wreg     unsigned char 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  addr            1    5[COMMON] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      unsigned char 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         0       0       0       0       0
  2858 ;;      Locals:         1       0       0       0       0
  2859 ;;      Temps:          1       0       0       0       0
  2860 ;;      Totals:         2       0       0       0       0
  2861 ;;Total ram usage:        2 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    1
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_LoadMenuItem
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _eeprom_read
  2873  0726                     _eeprom_read:	
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  2877                           ;eeprom_read@addr stored from wreg
  2878  0726  00F5               	movwf	eeprom_read@addr
  2879  0727                     l269:	
  2880  0727  0064               	clrwdt	;# 
  2881  0728  1683               	bsf	3,5	;RP0=1, select bank3
  2882  0729  1703               	bsf	3,6	;RP1=1, select bank3
  2883  072A  188C               	btfsc	12,1	;volsfr
  2884  072B  2F27               	goto	l269
  2885  072C  0875               	movf	eeprom_read@addr,w
  2886  072D  1283               	bcf	3,5	;RP0=0, select bank2
  2887  072E  1703               	bsf	3,6	;RP1=1, select bank2
  2888  072F  008D               	movwf	13	;volatile
  2889  0730  303F               	movlw	63
  2890  0731  00F4               	movwf	??_eeprom_read
  2891  0732  0874               	movf	??_eeprom_read,w
  2892  0733  1683               	bsf	3,5	;RP0=1, select bank3
  2893  0734  1703               	bsf	3,6	;RP1=1, select bank3
  2894  0735  058C               	andwf	12,f	;volsfr
  2895  0736  140C               	bsf	12,0	;volsfr
  2896  0737  1003               	clrc
  2897  0738  180C               	btfsc	12,0	;volsfr
  2898  0739  1403               	setc
  2899  073A  3000               	movlw	0
  2900  073B  1803               	skipnc
  2901  073C  3001               	movlw	1
  2902  073D  1283               	bcf	3,5	;RP0=0, select bank2
  2903  073E  1703               	bsf	3,6	;RP1=1, select bank2
  2904  073F  080C               	movf	12,w	;volatile
  2905  0740  0008               	return
  2906  0741                     __end_of_eeprom_read:	
  2907                           
  2908                           	psect	text13
  2909  07C5                     __ptext13:	
  2910 ;; *************** function _MenuDown *****************
  2911 ;; Defined at:
  2912 ;;		line 51 in file "menu.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2926 ;;      Params:         0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0
  2928 ;;      Temps:          1       0       0       0       0
  2929 ;;      Totals:         1       0       0       0       0
  2930 ;;Total ram usage:        1 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           
  2941                           ;psect for function _MenuDown
  2942  07C5                     _MenuDown:	
  2943                           
  2944                           ;menu.c: 53: if(g_menu.index == 4 - 1)
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in _MenuDown: [wreg+status,2+status,0]
  2948  07C5  3003               	movlw	3
  2949  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  2950  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  2951  07C8  0663               	xorwf	_g_menu+8,w
  2952  07C9  1D03               	btfss	3,2
  2953  07CA  2FCD               	goto	l1775
  2954                           
  2955                           ;menu.c: 54: {
  2956                           ;menu.c: 55: g_menu.index = 0;
  2957  07CB  01E3               	clrf	_g_menu+8
  2958                           
  2959                           ;menu.c: 56: }
  2960  07CC  0008               	return
  2961  07CD                     l1775:	
  2962                           
  2963                           ;menu.c: 57: else
  2964                           ;menu.c: 58: {
  2965                           ;menu.c: 59: g_menu.index++;
  2966  07CD  3001               	movlw	1
  2967  07CE  00F4               	movwf	??_MenuDown
  2968  07CF  0874               	movf	??_MenuDown,w
  2969  07D0  07E3               	addwf	_g_menu+8,f
  2970  07D1  0008               	return
  2971  07D2                     __end_of_MenuDown:	
  2972                           
  2973                           	psect	text14
  2974  07DD                     __ptext14:	
  2975 ;; *************** function _LCDSetStyle *****************
  2976 ;; Defined at:
  2977 ;;		line 207 in file "lcd_hd44780_pic16.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  style           1    wreg     unsigned char 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  style           1    9[BANK0 ] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, status,2, status,0, pclath, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2991 ;;      Params:         0       0       0       0       0
  2992 ;;      Locals:         0       1       0       0       0
  2993 ;;      Temps:          0       0       0       0       0
  2994 ;;      Totals:         0       1       0       0       0
  2995 ;;Total ram usage:        1 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    3
  2998 ;; This function calls:
  2999 ;;		_LCDByte
  3000 ;; This function is called by:
  3001 ;;		_main
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           
  3006                           ;psect for function _LCDSetStyle
  3007  07DD                     _LCDSetStyle:	
  3008                           
  3009                           ;incstack = 0
  3010                           ; Regs used in _LCDSetStyle: [wreg+status,2+status,0+pclath+cstack]
  3011                           ;LCDSetStyle@style stored from wreg
  3012  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  3013  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  3014  07DF  00A9               	movwf	LCDSetStyle@style
  3015                           
  3016                           ;lcd_hd44780_pic16.c: 209: (LCDByte(0b00001100|style,0));
  3017  07E0  01F6               	clrf	LCDByte@isdata
  3018  07E1  0829               	movf	LCDSetStyle@style,w
  3019  07E2  380C               	iorlw	12
  3020  07E3  120A  118A  2511   	fcall	_LCDByte
  3021  07E6  0008               	return
  3022  07E7                     __end_of_LCDSetStyle:	
  3023                           
  3024                           	psect	text15
  3025  0389                     __ptext15:	
  3026 ;; *************** function _LCDInit *****************
  3027 ;; Defined at:
  3028 ;;		line 211 in file "lcd_hd44780_pic16.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  style           1    wreg     unsigned char 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  style           1   11[BANK0 ] unsigned char 
  3033 ;;  __i             1   12[BANK0 ] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         0       0       0       0       0
  3044 ;;      Locals:         0       2       0       0       0
  3045 ;;      Temps:          0       2       0       0       0
  3046 ;;      Totals:         0       4       0       0       0
  3047 ;;Total ram usage:        4 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    3
  3050 ;; This function calls:
  3051 ;;		_LCDBusyLoop
  3052 ;;		_LCDByte
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _LCDInit
  3060  0389                     _LCDInit:	
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3064                           ;LCDInit@style stored from wreg
  3065  0389  1283               	bcf	3,5	;RP0=0, select bank0
  3066  038A  1303               	bcf	3,6	;RP1=0, select bank0
  3067  038B  00AB               	movwf	LCDInit@style
  3068                           
  3069                           ;lcd_hd44780_pic16.c: 213: _delay((unsigned long)((30)*(20000000/4000.0)));
  3070  038C  30C3               	movlw	195
  3071  038D  00AA               	movwf	??_LCDInit+1
  3072  038E  30CD               	movlw	205
  3073  038F  00A9               	movwf	??_LCDInit
  3074  0390                     u2317:	
  3075  0390  0BA9               	decfsz	??_LCDInit,f
  3076  0391  2B90               	goto	u2317
  3077  0392  0BAA               	decfsz	??_LCDInit+1,f
  3078  0393  2B90               	goto	u2317
  3079                           
  3080                           ;lcd_hd44780_pic16.c: 216: TRISC&=(~(0x0F<<4));
  3081  0394  300F               	movlw	15
  3082  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0397  00A9               	movwf	??_LCDInit
  3085  0398  0829               	movf	??_LCDInit,w
  3086  0399  1683               	bsf	3,5	;RP0=1, select bank1
  3087  039A  1303               	bcf	3,6	;RP1=0, select bank1
  3088  039B  0587               	andwf	7,f	;volatile
  3089                           
  3090                           ;lcd_hd44780_pic16.c: 218: TRISCbits.TRISC3=0;
  3091  039C  1187               	bcf	7,3	;volatile
  3092                           
  3093                           ;lcd_hd44780_pic16.c: 219: TRISCbits.TRISC1=0;
  3094  039D  1087               	bcf	7,1	;volatile
  3095                           
  3096                           ;lcd_hd44780_pic16.c: 220: TRISCbits.TRISC2=0;
  3097  039E  1107               	bcf	7,2	;volatile
  3098                           
  3099                           ;lcd_hd44780_pic16.c: 222: PORTC&=(~(0x0F<<4));
  3100  039F  300F               	movlw	15
  3101  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  3102  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  3103  03A2  00A9               	movwf	??_LCDInit
  3104  03A3  0829               	movf	??_LCDInit,w
  3105  03A4  0587               	andwf	7,f	;volatile
  3106                           
  3107                           ;lcd_hd44780_pic16.c: 224: (RC3=0);
  3108  03A5  1187               	bcf	7,3	;volatile
  3109                           
  3110                           ;lcd_hd44780_pic16.c: 225: (RC2=0);
  3111  03A6  1107               	bcf	7,2	;volatile
  3112                           
  3113                           ;lcd_hd44780_pic16.c: 226: (RC1=0);
  3114  03A7  1087               	bcf	7,1	;volatile
  3115                           
  3116                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3117  03A8  2BA9               	nop2	;2 cycle nop
  3118                           
  3119                           ;lcd_hd44780_pic16.c: 231: (RC3=1);
  3120  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  3121  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  3122  03AB  1587               	bsf	7,3	;volatile
  3123                           
  3124                           ;lcd_hd44780_pic16.c: 232: PORTC|=((0b00000010)<<4);
  3125  03AC  1687               	bsf	7,5	;volatile
  3126                           
  3127                           ;lcd_hd44780_pic16.c: 233: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3128  03AD  2BAE               	nop2	;2 cycle nop
  3129  03AE  2BAF               	nop2	;2 cycle nop
  3130  03AF  0000               	nop
  3131                           
  3132                           ;lcd_hd44780_pic16.c: 234: (RC3=0);
  3133  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  3134  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  3135  03B2  1187               	bcf	7,3	;volatile
  3136                           
  3137                           ;lcd_hd44780_pic16.c: 235: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3138  03B3  2BB4               	nop2	;2 cycle nop
  3139  03B4  2BB5               	nop2	;2 cycle nop
  3140  03B5  0000               	nop
  3141                           
  3142                           ;lcd_hd44780_pic16.c: 238: LCDBusyLoop();
  3143  03B6  120A  118A  2321  120A  118A  	fcall	_LCDBusyLoop
  3144                           
  3145                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b00101000,0));
  3146  03BB  01F6               	clrf	LCDByte@isdata
  3147  03BC  3028               	movlw	40
  3148  03BD  120A  118A  2511  120A  118A  	fcall	_LCDByte
  3149                           
  3150                           ;lcd_hd44780_pic16.c: 244: (LCDByte(0b00001100|style,0));
  3151  03C2  01F6               	clrf	LCDByte@isdata
  3152  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3153  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3154  03C5  082B               	movf	LCDInit@style,w
  3155  03C6  380C               	iorlw	12
  3156  03C7  120A  118A  2511  120A  118A  	fcall	_LCDByte
  3157                           
  3158                           ;lcd_hd44780_pic16.c: 247: (LCDByte(0b01000000,0));
  3159  03CC  01F6               	clrf	LCDByte@isdata
  3160  03CD  3040               	movlw	64
  3161  03CE  120A  118A  2511  120A  118A  	fcall	_LCDByte
  3162                           
  3163                           ;lcd_hd44780_pic16.c: 249: uint8_t __i;
  3164                           ;lcd_hd44780_pic16.c: 250: for(__i=0;__i<sizeof(__cgram);__i++)
  3165  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3166  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3167  03D5  01AC               	clrf	LCDInit@__i
  3168  03D6                     L2:	
  3169  03D6  3008               	movlw	8
  3170  03D7  022C               	subwf	LCDInit@__i,w
  3171  03D8  1803               	btfsc	3,0
  3172  03D9  0008               	return
  3173                           
  3174                           ;lcd_hd44780_pic16.c: 251: (LCDByte(__cgram[__i],1));
  3175  03DA  01F6               	clrf	LCDByte@isdata
  3176  03DB  0AF6               	incf	LCDByte@isdata,f
  3177  03DC  082C               	movf	LCDInit@__i,w
  3178  03DD  3E4C               	addlw	(low (___cgram| 0))& (0+255)
  3179  03DE  0084               	movwf	4
  3180  03DF  1383               	bcf	3,7	;select IRP bank0
  3181  03E0  0800               	movf	0,w
  3182  03E1  120A  118A  2511  120A  118A  	fcall	_LCDByte
  3183  03E6  3001               	movlw	1
  3184  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  3185  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  3186  03E9  00A9               	movwf	??_LCDInit
  3187  03EA  0829               	movf	??_LCDInit,w
  3188  03EB  07AC               	addwf	LCDInit@__i,f
  3189  03EC  2BD6               	goto	L2
  3190  03ED                     __end_of_LCDInit:	
  3191                           
  3192                           	psect	text16
  3193  060A                     __ptext16:	
  3194 ;; *************** function _IOInit *****************
  3195 ;; Defined at:
  3196 ;;		line 114 in file "do_am.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		None
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         0       0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0
  3213 ;;      Totals:         0       0       0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_main
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function _IOInit
  3226  060A                     _IOInit:	
  3227                           
  3228                           ;do_am.c: 117: (TRISAbits.TRISA6 = 1);
  3229                           
  3230                           ;incstack = 0
  3231                           ; Regs used in _IOInit: []
  3232  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3233  060B  1303               	bcf	3,6	;RP1=0, select bank1
  3234  060C  1705               	bsf	5,6	;volatile
  3235                           
  3236                           ;do_am.c: 120: (TRISAbits.TRISA0 = 1);
  3237  060D  1405               	bsf	5,0	;volatile
  3238                           
  3239                           ;do_am.c: 121: ANSELbits.ANS0 = 0;
  3240  060E  1683               	bsf	3,5	;RP0=1, select bank3
  3241  060F  1703               	bsf	3,6	;RP1=1, select bank3
  3242  0610  1008               	bcf	8,0	;volatile
  3243                           
  3244                           ;do_am.c: 123: (TRISAbits.TRISA1 = 1);
  3245  0611  1683               	bsf	3,5	;RP0=1, select bank1
  3246  0612  1303               	bcf	3,6	;RP1=0, select bank1
  3247  0613  1485               	bsf	5,1	;volatile
  3248                           
  3249                           ;do_am.c: 124: ANSELbits.ANS1 = 0;
  3250  0614  1683               	bsf	3,5	;RP0=1, select bank3
  3251  0615  1703               	bsf	3,6	;RP1=1, select bank3
  3252  0616  1088               	bcf	8,1	;volatile
  3253                           
  3254                           ;do_am.c: 125: (TRISAbits.TRISA2 = 1);
  3255  0617  1683               	bsf	3,5	;RP0=1, select bank1
  3256  0618  1303               	bcf	3,6	;RP1=0, select bank1
  3257  0619  1505               	bsf	5,2	;volatile
  3258                           
  3259                           ;do_am.c: 126: ANSELbits.ANS2 = 0;
  3260  061A  1683               	bsf	3,5	;RP0=1, select bank3
  3261  061B  1703               	bsf	3,6	;RP1=1, select bank3
  3262  061C  1108               	bcf	8,2	;volatile
  3263                           
  3264                           ;do_am.c: 127: (TRISAbits.TRISA3 = 1);
  3265  061D  1683               	bsf	3,5	;RP0=1, select bank1
  3266  061E  1303               	bcf	3,6	;RP1=0, select bank1
  3267  061F  1585               	bsf	5,3	;volatile
  3268                           
  3269                           ;do_am.c: 128: ANSELbits.ANS3 = 0;
  3270  0620  1683               	bsf	3,5	;RP0=1, select bank3
  3271  0621  1703               	bsf	3,6	;RP1=1, select bank3
  3272  0622  1188               	bcf	8,3	;volatile
  3273                           
  3274                           ;do_am.c: 130: (TRISAbits.TRISA7 = 0);
  3275  0623  1683               	bsf	3,5	;RP0=1, select bank1
  3276  0624  1303               	bcf	3,6	;RP1=0, select bank1
  3277  0625  1385               	bcf	5,7	;volatile
  3278                           
  3279                           ;do_am.c: 132: (TRISBbits.TRISB0 = 0);
  3280  0626  1006               	bcf	6,0	;volatile
  3281                           
  3282                           ;do_am.c: 133: ANSELHbits.ANS12 = 0;
  3283  0627  1683               	bsf	3,5	;RP0=1, select bank3
  3284  0628  1703               	bsf	3,6	;RP1=1, select bank3
  3285  0629  1209               	bcf	9,4	;volatile
  3286                           
  3287                           ;do_am.c: 135: (TRISBbits.TRISB1 = 0);
  3288  062A  1683               	bsf	3,5	;RP0=1, select bank1
  3289  062B  1303               	bcf	3,6	;RP1=0, select bank1
  3290  062C  1086               	bcf	6,1	;volatile
  3291                           
  3292                           ;do_am.c: 136: ANSELHbits.ANS10 = 0;
  3293  062D  1683               	bsf	3,5	;RP0=1, select bank3
  3294  062E  1703               	bsf	3,6	;RP1=1, select bank3
  3295  062F  1109               	bcf	9,2	;volatile
  3296                           
  3297                           ;do_am.c: 138: (TRISBbits.TRISB2 = 0);
  3298  0630  1683               	bsf	3,5	;RP0=1, select bank1
  3299  0631  1303               	bcf	3,6	;RP1=0, select bank1
  3300  0632  1106               	bcf	6,2	;volatile
  3301                           
  3302                           ;do_am.c: 139: ANSELHbits.ANS8 = 0;
  3303  0633  1683               	bsf	3,5	;RP0=1, select bank3
  3304  0634  1703               	bsf	3,6	;RP1=1, select bank3
  3305  0635  1009               	bcf	9,0	;volatile
  3306                           
  3307                           ;do_am.c: 141: (TRISBbits.TRISB3 = 0);
  3308  0636  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0637  1303               	bcf	3,6	;RP1=0, select bank1
  3310  0638  1186               	bcf	6,3	;volatile
  3311                           
  3312                           ;do_am.c: 142: ANSELHbits.ANS9 = 0;
  3313  0639  1683               	bsf	3,5	;RP0=1, select bank3
  3314  063A  1703               	bsf	3,6	;RP1=1, select bank3
  3315  063B  1089               	bcf	9,1	;volatile
  3316                           
  3317                           ;do_am.c: 144: RA7 = 1;
  3318  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3319  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3320  063E  1785               	bsf	5,7	;volatile
  3321                           
  3322                           ;do_am.c: 147: (TRISBbits.TRISB4 = 1);
  3323  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3324  0640  1303               	bcf	3,6	;RP1=0, select bank1
  3325  0641  1606               	bsf	6,4	;volatile
  3326                           
  3327                           ;do_am.c: 148: ANSELHbits.ANS11 = 0;
  3328  0642  1683               	bsf	3,5	;RP0=1, select bank3
  3329  0643  1703               	bsf	3,6	;RP1=1, select bank3
  3330  0644  1189               	bcf	9,3	;volatile
  3331                           
  3332                           ;do_am.c: 150: (TRISBbits.TRISB6 = 1);
  3333  0645  1683               	bsf	3,5	;RP0=1, select bank1
  3334  0646  1303               	bcf	3,6	;RP1=0, select bank1
  3335  0647  1706               	bsf	6,6	;volatile
  3336                           
  3337                           ;do_am.c: 152: (TRISBbits.TRISB5 = 1);
  3338  0648  1686               	bsf	6,5	;volatile
  3339                           
  3340                           ;do_am.c: 153: ANSELHbits.ANS13 = 0;
  3341  0649  1683               	bsf	3,5	;RP0=1, select bank3
  3342  064A  1703               	bsf	3,6	;RP1=1, select bank3
  3343  064B  1289               	bcf	9,5	;volatile
  3344                           
  3345                           ;do_am.c: 155: (TRISBbits.TRISB7 = 1);
  3346  064C  1683               	bsf	3,5	;RP0=1, select bank1
  3347  064D  1303               	bcf	3,6	;RP1=0, select bank1
  3348  064E  1786               	bsf	6,7	;volatile
  3349  064F  0008               	return
  3350  0650                     __end_of_IOInit:	
  3351                           
  3352                           	psect	text17
  3353  068E                     __ptext17:	
  3354 ;; *************** function _ClearMenu *****************
  3355 ;; Defined at:
  3356 ;;		line 28 in file "menu.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  i               1   15[BANK0 ] char 
  3361 ;;  count           1   14[BANK0 ] char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3371 ;;      Params:         0       0       0       0       0
  3372 ;;      Locals:         0       2       0       0       0
  3373 ;;      Temps:          0       1       0       0       0
  3374 ;;      Totals:         0       3       0       0       0
  3375 ;;Total ram usage:        3 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    4
  3378 ;; This function calls:
  3379 ;;		_LCDByte
  3380 ;;		_LCDGotoXY
  3381 ;;		_LCDWriteString
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function _ClearMenu
  3389  068E                     _ClearMenu:	
  3390                           
  3391                           ;menu.c: 30: { LCDGotoXY(0,0); int8_t count = LCDWriteString(""); for(int8_t i = count +
      +                           0; i < 16; i++) { (LCDByte(' ',1)); } };
  3392                           
  3393                           ;incstack = 0
  3394                           ; Regs used in _ClearMenu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3395  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3396  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3397  0690  01A9               	clrf	LCDGotoXY@y
  3398  0691  3000               	movlw	0
  3399  0692  120A  118A  26E0  120A  118A  	fcall	_LCDGotoXY
  3400  0697  3028               	movlw	(low (((STR_13+4)-__stringbase)| (0+32768)))& (0+255)
  3401  0698  120A  118A  24B6  120A  118A  	fcall	_LCDWriteString
  3402  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3403  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3404  069F  00AD               	movwf	??_ClearMenu
  3405  06A0  082D               	movf	??_ClearMenu,w
  3406  06A1  00AE               	movwf	ClearMenu@count
  3407  06A2  082E               	movf	ClearMenu@count,w
  3408  06A3  00AD               	movwf	??_ClearMenu
  3409  06A4  082D               	movf	??_ClearMenu,w
  3410  06A5  00AF               	movwf	ClearMenu@i
  3411  06A6                     L3:	
  3412  06A6  082F               	movf	ClearMenu@i,w
  3413  06A7  3A80               	xorlw	128
  3414  06A8  3E70               	addlw	-144
  3415  06A9  1803               	btfsc	3,0
  3416  06AA  0008               	return
  3417  06AB  01F6               	clrf	LCDByte@isdata
  3418  06AC  0AF6               	incf	LCDByte@isdata,f
  3419  06AD  3020               	movlw	32
  3420  06AE  120A  118A  2511  120A  118A  	fcall	_LCDByte
  3421  06B3  3001               	movlw	1
  3422  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3423  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  3424  06B6  00AD               	movwf	??_ClearMenu
  3425  06B7  082D               	movf	??_ClearMenu,w
  3426  06B8  07AF               	addwf	ClearMenu@i,f
  3427  06B9  2EA6               	goto	L3
  3428  06BA                     __end_of_ClearMenu:	
  3429                           
  3430                           	psect	text18
  3431  04B6                     __ptext18:	
  3432 ;; *************** function _LCDWriteString *****************
  3433 ;; Defined at:
  3434 ;;		line 283 in file "lcd_hd44780_pic16.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  msg             1    wreg     PTR const unsigned char 
  3437 ;;		 -> STR_17(1), STR_16(5), STR_15(5), STR_14(5), 
  3438 ;;		 -> STR_13(5), STR_12(5), STR_11(3), STR_10(12), 
  3439 ;;		 -> STR_9(13), STR_8(10), STR_7(10), STR_6(4), 
  3440 ;;		 -> STR_5(4), STR_4(5), STR_3(4), STR_2(4), 
  3441 ;;		 -> STR_1(5), 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  msg             1   12[BANK0 ] PTR const unsigned char 
  3444 ;;		 -> STR_17(1), STR_16(5), STR_15(5), STR_14(5), 
  3445 ;;		 -> STR_13(5), STR_12(5), STR_11(3), STR_10(12), 
  3446 ;;		 -> STR_9(13), STR_8(10), STR_7(10), STR_6(4), 
  3447 ;;		 -> STR_5(4), STR_4(5), STR_3(4), STR_2(4), 
  3448 ;;		 -> STR_1(5), 
  3449 ;;  cc              1   11[BANK0 ] char 
  3450 ;;  count           1   10[BANK0 ] char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      char 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       0       0       0       0
  3461 ;;      Locals:         0       3       0       0       0
  3462 ;;      Temps:          0       1       0       0       0
  3463 ;;      Totals:         0       4       0       0       0
  3464 ;;Total ram usage:        4 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    3
  3467 ;; This function calls:
  3468 ;;		_LCDByte
  3469 ;; This function is called by:
  3470 ;;		_main
  3471 ;;		_ShowMenu
  3472 ;;		_ClearMenu
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function _LCDWriteString
  3478  04B6                     _LCDWriteString:	
  3479                           
  3480                           ;incstack = 0
  3481                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3482                           ;LCDWriteString@msg stored from wreg
  3483  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3484  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3485  04B8  00AC               	movwf	LCDWriteString@msg
  3486                           
  3487                           ;lcd_hd44780_pic16.c: 285: int8_t count = 0;
  3488  04B9  01AA               	clrf	LCDWriteString@count
  3489  04BA                     l2183:	
  3490                           ;lcd_hd44780_pic16.c: 286: while(*msg!='\0')
  3491                           
  3492  04BA  082C               	movf	LCDWriteString@msg,w
  3493  04BB  0084               	movwf	4
  3494  04BC  120A  118A  2400  120A  118A  	fcall	stringdir
  3495  04C1  3A00               	xorlw	0
  3496  04C2  1903               	btfsc	3,2
  3497  04C3  2D0F               	goto	l2185
  3498                           
  3499                           ;lcd_hd44780_pic16.c: 287: {
  3500                           ;lcd_hd44780_pic16.c: 289: if(*msg=='%')
  3501  04C4  082C               	movf	LCDWriteString@msg,w
  3502  04C5  0084               	movwf	4
  3503  04C6  120A  118A  2400  120A  118A  	fcall	stringdir
  3504  04CB  3A25               	xorlw	37
  3505  04CC  1D03               	skipz
  3506  04CD  2CF6               	goto	l2177
  3507                           
  3508                           ;lcd_hd44780_pic16.c: 290: {
  3509                           ;lcd_hd44780_pic16.c: 291: msg++;
  3510  04CE  3001               	movlw	1
  3511  04CF  00A9               	movwf	??_LCDWriteString
  3512  04D0  0829               	movf	??_LCDWriteString,w
  3513  04D1  07AC               	addwf	LCDWriteString@msg,f
  3514                           
  3515                           ;lcd_hd44780_pic16.c: 292: int8_t cc=*msg-'0';
  3516  04D2  082C               	movf	LCDWriteString@msg,w
  3517  04D3  0084               	movwf	4
  3518  04D4  120A  118A  2400  120A  118A  	fcall	stringdir
  3519  04D9  3ED0               	addlw	-48
  3520  04DA  00A9               	movwf	??_LCDWriteString
  3521  04DB  0829               	movf	??_LCDWriteString,w
  3522  04DC  00AB               	movwf	LCDWriteString@cc
  3523                           
  3524                           ;lcd_hd44780_pic16.c: 294: if(cc>=0 && cc<=7)
  3525  04DD  1BAB               	btfsc	LCDWriteString@cc,7
  3526  04DE  2CE8               	goto	l2169
  3527  04DF  082B               	movf	LCDWriteString@cc,w
  3528  04E0  3A80               	xorlw	128
  3529  04E1  3E78               	addlw	-136
  3530  04E2  1803               	skipnc
  3531  04E3  2CE8               	goto	l2169
  3532                           
  3533                           ;lcd_hd44780_pic16.c: 295: {
  3534                           ;lcd_hd44780_pic16.c: 296: (LCDByte(cc,1));
  3535  04E4  01F6               	clrf	LCDByte@isdata
  3536  04E5  0AF6               	incf	LCDByte@isdata,f
  3537  04E6  082B               	movf	LCDWriteString@cc,w
  3538  04E7  2CFF               	goto	L4
  3539  04E8                     l2169:	
  3540                           ;lcd_hd44780_pic16.c: 298: }
  3541                           
  3542                           ;lcd_hd44780_pic16.c: 297: count++;
  3543                           
  3544                           
  3545                           ;lcd_hd44780_pic16.c: 299: else
  3546                           ;lcd_hd44780_pic16.c: 300: {
  3547                           ;lcd_hd44780_pic16.c: 301: (LCDByte('%',1));
  3548  04E8  01F6               	clrf	LCDByte@isdata
  3549  04E9  0AF6               	incf	LCDByte@isdata,f
  3550  04EA  3025               	movlw	37
  3551  04EB  120A  118A  2511  120A  118A  	fcall	_LCDByte
  3552                           
  3553                           ;lcd_hd44780_pic16.c: 302: count++;
  3554  04F0  3001               	movlw	1
  3555  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  3556  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  3557  04F3  00A9               	movwf	??_LCDWriteString
  3558  04F4  0829               	movf	??_LCDWriteString,w
  3559  04F5  07AA               	addwf	LCDWriteString@count,f
  3560  04F6                     l2177:	
  3561                           ;lcd_hd44780_pic16.c: 305: }
  3562                           ;lcd_hd44780_pic16.c: 306: }
  3563                           
  3564                           ;lcd_hd44780_pic16.c: 304: count++;
  3565                           
  3566                           ;lcd_hd44780_pic16.c: 303: (LCDByte(*msg,1));
  3567                           
  3568                           
  3569                           ;lcd_hd44780_pic16.c: 307: else
  3570                           ;lcd_hd44780_pic16.c: 308: {
  3571                           ;lcd_hd44780_pic16.c: 309: (LCDByte(*msg,1));
  3572  04F6  01F6               	clrf	LCDByte@isdata
  3573  04F7  0AF6               	incf	LCDByte@isdata,f
  3574  04F8  082C               	movf	LCDWriteString@msg,w
  3575  04F9  0084               	movwf	4
  3576  04FA  120A  118A  2400  120A  118A  	fcall	stringdir
  3577  04FF                     L4:	
  3578  04FF  120A  118A  2511  120A  118A  	fcall	_LCDByte
  3579                           
  3580                           ;lcd_hd44780_pic16.c: 310: count++;
  3581  0504  3001               	movlw	1
  3582  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0507  00A9               	movwf	??_LCDWriteString
  3585  0508  0829               	movf	??_LCDWriteString,w
  3586  0509  07AA               	addwf	LCDWriteString@count,f
  3587                           
  3588                           ;lcd_hd44780_pic16.c: 311: }
  3589                           ;lcd_hd44780_pic16.c: 312: msg++;
  3590  050A  3001               	movlw	1
  3591  050B  00A9               	movwf	??_LCDWriteString
  3592  050C  0829               	movf	??_LCDWriteString,w
  3593  050D  07AC               	addwf	LCDWriteString@msg,f
  3594  050E  2CBA               	goto	l2183
  3595  050F                     l2185:	
  3596                           
  3597                           ;lcd_hd44780_pic16.c: 313: }
  3598                           ;lcd_hd44780_pic16.c: 315: return count;
  3599  050F  082A               	movf	LCDWriteString@count,w
  3600  0510  0008               	return
  3601  0511                     __end_of_LCDWriteString:	
  3602                           
  3603                           	psect	text19
  3604  06E0                     __ptext19:	
  3605 ;; *************** function _LCDGotoXY *****************
  3606 ;; Defined at:
  3607 ;;		line 367 in file "lcd_hd44780_pic16.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  x               1    wreg     unsigned char 
  3610 ;;  y               1    9[BANK0 ] unsigned char 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  x               1   11[BANK0 ] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3622 ;;      Params:         0       1       0       0       0
  3623 ;;      Locals:         0       1       0       0       0
  3624 ;;      Temps:          0       1       0       0       0
  3625 ;;      Totals:         0       3       0       0       0
  3626 ;;Total ram usage:        3 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    3
  3629 ;; This function calls:
  3630 ;;		_LCDByte
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;;		_ShowMenu
  3634 ;;		_ClearMenu
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           
  3639                           ;psect for function _LCDGotoXY
  3640  06E0                     _LCDGotoXY:	
  3641                           
  3642                           ;incstack = 0
  3643                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3644                           ;LCDGotoXY@x stored from wreg
  3645  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  3646  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  3647  06E2  00AB               	movwf	LCDGotoXY@x
  3648                           
  3649                           ;lcd_hd44780_pic16.c: 369: if(x>=20) return;
  3650  06E3  3014               	movlw	20
  3651  06E4  022B               	subwf	LCDGotoXY@x,w
  3652  06E5  1803               	btfsc	3,0
  3653  06E6  0008               	return
  3654  06E7  2EF1               	goto	l2149
  3655  06E8                     l198:	
  3656                           ;lcd_hd44780_pic16.c: 377: case 1:
  3657                           
  3658                           ;lcd_hd44780_pic16.c: 376: break;
  3659                           
  3660                           ;lcd_hd44780_pic16.c: 374: {
  3661                           ;lcd_hd44780_pic16.c: 375: case 0:
  3662                           
  3663                           ;lcd_hd44780_pic16.c: 373: switch(y)
  3664                           
  3665                           
  3666                           ;lcd_hd44780_pic16.c: 378: x|=0b01000000;
  3667  06E8  172B               	bsf	LCDGotoXY@x,6
  3668                           
  3669                           ;lcd_hd44780_pic16.c: 379: break;
  3670  06E9  2EFF               	goto	l197
  3671  06EA                     l2143:	
  3672                           ;lcd_hd44780_pic16.c: 380: case 2:
  3673                           
  3674                           
  3675                           ;lcd_hd44780_pic16.c: 381: x+=0x14;
  3676  06EA  3014               	movlw	20
  3677  06EB  2EED               	goto	L5
  3678  06EC                     l2145:	
  3679                           ;lcd_hd44780_pic16.c: 383: case 3:
  3680                           
  3681                           ;lcd_hd44780_pic16.c: 382: break;
  3682                           
  3683                           
  3684                           ;lcd_hd44780_pic16.c: 384: x+=0x54;
  3685  06EC  3054               	movlw	84
  3686  06ED                     L5:	
  3687  06ED  00AA               	movwf	??_LCDGotoXY
  3688  06EE  082A               	movf	??_LCDGotoXY,w
  3689  06EF  07AB               	addwf	LCDGotoXY@x,f
  3690                           
  3691                           ;lcd_hd44780_pic16.c: 386: }
  3692                           
  3693                           ;lcd_hd44780_pic16.c: 385: break;
  3694  06F0  2EFF               	goto	l197
  3695  06F1                     l2149:	
  3696  06F1  0829               	movf	LCDGotoXY@y,w
  3697                           
  3698                           ; Switch size 1, requested type "space"
  3699                           ; Number of cases is 4, Range of values is 0 to 3
  3700                           ; switch strategies available:
  3701                           ; Name         Instructions Cycles
  3702                           ; simple_byte           13     7 (average)
  3703                           ; direct_byte           20     8 (fixed)
  3704                           ; jumptable            260     6 (fixed)
  3705                           ;	Chosen strategy is simple_byte
  3706  06F2  3A00               	xorlw	0	; case 0
  3707  06F3  1903               	skipnz
  3708  06F4  2EFF               	goto	l197
  3709  06F5  3A01               	xorlw	1	; case 1
  3710  06F6  1903               	skipnz
  3711  06F7  2EE8               	goto	l198
  3712  06F8  3A03               	xorlw	3	; case 2
  3713  06F9  1903               	skipnz
  3714  06FA  2EEA               	goto	l2143
  3715  06FB  3A01               	xorlw	1	; case 3
  3716  06FC  1903               	skipnz
  3717  06FD  2EEC               	goto	l2145
  3718  06FE  2EFF               	goto	l197
  3719  06FF                     l197:	
  3720                           
  3721                           ;lcd_hd44780_pic16.c: 408: x|=0b10000000;
  3722  06FF  17AB               	bsf	LCDGotoXY@x,7
  3723                           
  3724                           ;lcd_hd44780_pic16.c: 409: (LCDByte(x,0));
  3725  0700  01F6               	clrf	LCDByte@isdata
  3726  0701  082B               	movf	LCDGotoXY@x,w
  3727  0702  120A  118A  2511   	fcall	_LCDByte
  3728  0705  0008               	return
  3729  0706                     __end_of_LCDGotoXY:	
  3730                           
  3731                           	psect	text20
  3732  0511                     __ptext20:	
  3733 ;; *************** function _LCDByte *****************
  3734 ;; Defined at:
  3735 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  c               1    wreg     unsigned char 
  3738 ;;  isdata          1    6[COMMON] unsigned char 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  c               1    7[BANK0 ] unsigned char 
  3741 ;;  temp            1    8[BANK0 ] unsigned char 
  3742 ;;  ln              1    6[BANK0 ] unsigned char 
  3743 ;;  hn              1    5[BANK0 ] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2, status,0, pclath, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3753 ;;      Params:         1       0       0       0       0
  3754 ;;      Locals:         0       4       0       0       0
  3755 ;;      Temps:          0       2       0       0       0
  3756 ;;      Totals:         1       6       0       0       0
  3757 ;;Total ram usage:        7 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    2
  3760 ;; This function calls:
  3761 ;;		_LCDBusyLoop
  3762 ;; This function is called by:
  3763 ;;		_main
  3764 ;;		_LCDSetStyle
  3765 ;;		_LCDInit
  3766 ;;		_LCDWriteString
  3767 ;;		_LCDWriteInt
  3768 ;;		_LCDGotoXY
  3769 ;;		_ShowMenu
  3770 ;;		_ClearMenu
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           
  3775                           ;psect for function _LCDByte
  3776  0511                     _LCDByte:	
  3777                           
  3778                           ;incstack = 0
  3779                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3780                           ;LCDByte@c stored from wreg
  3781  0511  1283               	bcf	3,5	;RP0=0, select bank0
  3782  0512  1303               	bcf	3,6	;RP1=0, select bank0
  3783  0513  00A7               	movwf	LCDByte@c
  3784                           
  3785                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3786                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3787                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3788  0514  0827               	movf	LCDByte@c,w
  3789  0515  00A3               	movwf	??_LCDByte
  3790  0516  3004               	movlw	4
  3791  0517                     u1585:	
  3792  0517  1003               	clrc
  3793  0518  0CA3               	rrf	??_LCDByte,f
  3794  0519  3EFF               	addlw	-1
  3795  051A  1D03               	skipz
  3796  051B  2D17               	goto	u1585
  3797  051C  0823               	movf	??_LCDByte,w
  3798  051D  00A4               	movwf	??_LCDByte+1
  3799  051E  0824               	movf	??_LCDByte+1,w
  3800  051F  00A5               	movwf	LCDByte@hn
  3801                           
  3802                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3803  0520  0827               	movf	LCDByte@c,w
  3804  0521  390F               	andlw	15
  3805  0522  00A3               	movwf	??_LCDByte
  3806  0523  0823               	movf	??_LCDByte,w
  3807  0524  00A6               	movwf	LCDByte@ln
  3808                           
  3809                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3810  0525  0876               	movf	LCDByte@isdata,w
  3811  0526  1D03               	btfss	3,2
  3812  0527  2D2A               	goto	l148
  3813                           
  3814                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  3815  0528  1087               	bcf	7,1	;volatile
  3816  0529  2D2B               	goto	l149
  3817  052A                     l148:	
  3818                           
  3819                           ;lcd_hd44780_pic16.c: 97: else
  3820                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  3821  052A  1487               	bsf	7,1	;volatile
  3822  052B                     l149:	
  3823                           
  3824                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3825  052B  2D2C               	nop2	;2 cycle nop
  3826                           
  3827                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  3828  052C  1283               	bcf	3,5	;RP0=0, select bank0
  3829  052D  1303               	bcf	3,6	;RP1=0, select bank0
  3830  052E  1587               	bsf	7,3	;volatile
  3831                           
  3832                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  3833  052F  0825               	movf	LCDByte@hn,w
  3834  0530  00A3               	movwf	??_LCDByte
  3835  0531  3004               	movlw	4
  3836  0532                     u1605:	
  3837  0532  1003               	clrc
  3838  0533  0DA3               	rlf	??_LCDByte,f
  3839  0534  3EFF               	addlw	-1
  3840  0535  1D03               	skipz
  3841  0536  2D32               	goto	u1605
  3842  0537  0807               	movf	7,w	;volatile
  3843  0538  390F               	andlw	15
  3844  0539  0423               	iorwf	??_LCDByte,w
  3845  053A  00A4               	movwf	??_LCDByte+1
  3846  053B  0824               	movf	??_LCDByte+1,w
  3847  053C  00A8               	movwf	LCDByte@temp
  3848                           
  3849                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3850  053D  0828               	movf	LCDByte@temp,w
  3851  053E  0087               	movwf	7	;volatile
  3852                           
  3853                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3854  053F  2D40               	nop2	;2 cycle nop
  3855  0540  2D41               	nop2	;2 cycle nop
  3856  0541  0000               	nop
  3857                           
  3858                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  3859  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3860  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3861  0544  1187               	bcf	7,3	;volatile
  3862                           
  3863                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3864  0545  2D46               	nop2	;2 cycle nop
  3865  0546  2D47               	nop2	;2 cycle nop
  3866  0547  0000               	nop
  3867                           
  3868                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  3869  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3870  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3871  054A  1587               	bsf	7,3	;volatile
  3872                           
  3873                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  3874  054B  0826               	movf	LCDByte@ln,w
  3875  054C  00A3               	movwf	??_LCDByte
  3876  054D  3004               	movlw	4
  3877  054E                     u1615:	
  3878  054E  1003               	clrc
  3879  054F  0DA3               	rlf	??_LCDByte,f
  3880  0550  3EFF               	addlw	-1
  3881  0551  1D03               	skipz
  3882  0552  2D4E               	goto	u1615
  3883  0553  0807               	movf	7,w	;volatile
  3884  0554  390F               	andlw	15
  3885  0555  0423               	iorwf	??_LCDByte,w
  3886  0556  00A4               	movwf	??_LCDByte+1
  3887  0557  0824               	movf	??_LCDByte+1,w
  3888  0558  00A8               	movwf	LCDByte@temp
  3889                           
  3890                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3891  0559  0828               	movf	LCDByte@temp,w
  3892  055A  0087               	movwf	7	;volatile
  3893                           
  3894                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3895  055B  2D5C               	nop2	;2 cycle nop
  3896  055C  2D5D               	nop2	;2 cycle nop
  3897  055D  0000               	nop
  3898                           
  3899                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  3900  055E  1283               	bcf	3,5	;RP0=0, select bank0
  3901  055F  1303               	bcf	3,6	;RP1=0, select bank0
  3902  0560  1187               	bcf	7,3	;volatile
  3903                           
  3904                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3905  0561  2D62               	nop2	;2 cycle nop
  3906  0562  2D63               	nop2	;2 cycle nop
  3907  0563  0000               	nop
  3908                           
  3909                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3910  0564  120A  118A  2321   	fcall	_LCDBusyLoop
  3911  0567  0008               	return
  3912  0568                     __end_of_LCDByte:	
  3913                           
  3914                           	psect	text21
  3915  0321                     __ptext21:	
  3916 ;; *************** function _LCDBusyLoop *****************
  3917 ;; Defined at:
  3918 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  status          1    2[BANK0 ] unsigned char 
  3923 ;;  temp            1    1[BANK0 ] unsigned char 
  3924 ;;  busy            1    0[BANK0 ] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         0       0       0       0       0
  3935 ;;      Locals:         0       3       0       0       0
  3936 ;;      Temps:          2       0       0       0       0
  3937 ;;      Totals:         2       3       0       0       0
  3938 ;;Total ram usage:        5 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    1
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_LCDByte
  3945 ;;		_LCDInit
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           
  3950                           ;psect for function _LCDBusyLoop
  3951  0321                     _LCDBusyLoop:	
  3952                           
  3953                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  3954                           
  3955                           ;incstack = 0
  3956                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  3957  0321  1283               	bcf	3,5	;RP0=0, select bank0
  3958  0322  1303               	bcf	3,6	;RP1=0, select bank0
  3959  0323  01A2               	clrf	LCDBusyLoop@status
  3960                           
  3961                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  3962  0324  30F0               	movlw	240
  3963  0325  00F4               	movwf	??_LCDBusyLoop
  3964  0326  0874               	movf	??_LCDBusyLoop,w
  3965  0327  1683               	bsf	3,5	;RP0=1, select bank1
  3966  0328  1303               	bcf	3,6	;RP1=0, select bank1
  3967  0329  0487               	iorwf	7,f	;volatile
  3968                           
  3969                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  3970  032A  1283               	bcf	3,5	;RP0=0, select bank0
  3971  032B  1303               	bcf	3,6	;RP1=0, select bank0
  3972  032C  1507               	bsf	7,2	;volatile
  3973                           
  3974                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  3975  032D  1087               	bcf	7,1	;volatile
  3976                           
  3977                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3978  032E  2B2F               	nop2	;2 cycle nop
  3979  032F                     l1971:	
  3980                           ;lcd_hd44780_pic16.c: 153: do
  3981                           
  3982                           
  3983                           ;lcd_hd44780_pic16.c: 154: {
  3984                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  3985  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0331  1587               	bsf	7,3	;volatile
  3988                           
  3989                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3990  0332  2B33               	nop2	;2 cycle nop
  3991                           
  3992                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  3993  0333  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0334  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0335  0807               	movf	7,w	;volatile
  3996  0336  00F4               	movwf	??_LCDBusyLoop
  3997  0337  3004               	movlw	4
  3998  0338                     u1545:	
  3999  0338  1003               	clrc
  4000  0339  0CF4               	rrf	??_LCDBusyLoop,f
  4001  033A  3EFF               	addlw	-1
  4002  033B  1D03               	skipz
  4003  033C  2B38               	goto	u1545
  4004  033D  0874               	movf	??_LCDBusyLoop,w
  4005  033E  00F5               	movwf	??_LCDBusyLoop+1
  4006  033F  0875               	movf	??_LCDBusyLoop+1,w
  4007  0340  00A2               	movwf	LCDBusyLoop@status
  4008                           
  4009                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4010  0341  0822               	movf	LCDBusyLoop@status,w
  4011  0342  00F4               	movwf	??_LCDBusyLoop
  4012  0343  3003               	movlw	3
  4013  0344                     u1555:	
  4014  0344  1003               	clrc
  4015  0345  0DF4               	rlf	??_LCDBusyLoop,f
  4016  0346  3EFF               	addlw	-1
  4017  0347  1D03               	skipz
  4018  0348  2B44               	goto	u1555
  4019  0349  1003               	clrc
  4020  034A  0D74               	rlf	??_LCDBusyLoop,w
  4021  034B  00F5               	movwf	??_LCDBusyLoop+1
  4022  034C  0875               	movf	??_LCDBusyLoop+1,w
  4023  034D  00A2               	movwf	LCDBusyLoop@status
  4024                           
  4025                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4026  034E  2B4F               	nop2	;2 cycle nop
  4027                           
  4028                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  4029  034F  1283               	bcf	3,5	;RP0=0, select bank0
  4030  0350  1303               	bcf	3,6	;RP1=0, select bank0
  4031  0351  1187               	bcf	7,3	;volatile
  4032                           
  4033                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4034  0352  2B53               	nop2	;2 cycle nop
  4035  0353  2B54               	nop2	;2 cycle nop
  4036  0354  0000               	nop
  4037                           
  4038                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  4039  0355  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0356  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0357  1587               	bsf	7,3	;volatile
  4042                           
  4043                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4044  0358  2B59               	nop2	;2 cycle nop
  4045                           
  4046                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  4047  0359  1283               	bcf	3,5	;RP0=0, select bank0
  4048  035A  1303               	bcf	3,6	;RP1=0, select bank0
  4049  035B  0807               	movf	7,w	;volatile
  4050  035C  00F4               	movwf	??_LCDBusyLoop
  4051  035D  3004               	movlw	4
  4052  035E                     u1565:	
  4053  035E  1003               	clrc
  4054  035F  0CF4               	rrf	??_LCDBusyLoop,f
  4055  0360  3EFF               	addlw	-1
  4056  0361  1D03               	skipz
  4057  0362  2B5E               	goto	u1565
  4058  0363  0874               	movf	??_LCDBusyLoop,w
  4059  0364  00F5               	movwf	??_LCDBusyLoop+1
  4060  0365  0875               	movf	??_LCDBusyLoop+1,w
  4061  0366  00A1               	movwf	LCDBusyLoop@temp
  4062                           
  4063                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  4064  0367  300F               	movlw	15
  4065  0368  00F4               	movwf	??_LCDBusyLoop
  4066  0369  0874               	movf	??_LCDBusyLoop,w
  4067  036A  05A1               	andwf	LCDBusyLoop@temp,f
  4068                           
  4069                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  4070  036B  0822               	movf	LCDBusyLoop@status,w
  4071  036C  0421               	iorwf	LCDBusyLoop@temp,w
  4072  036D  00F4               	movwf	??_LCDBusyLoop
  4073  036E  0874               	movf	??_LCDBusyLoop,w
  4074  036F  00A2               	movwf	LCDBusyLoop@status
  4075                           
  4076                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  4077  0370  0822               	movf	LCDBusyLoop@status,w
  4078  0371  3980               	andlw	128
  4079  0372  00F4               	movwf	??_LCDBusyLoop
  4080  0373  0874               	movf	??_LCDBusyLoop,w
  4081  0374  00A0               	movwf	LCDBusyLoop@busy
  4082                           
  4083                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4084  0375  2B76               	nop2	;2 cycle nop
  4085                           
  4086                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  4087  0376  1283               	bcf	3,5	;RP0=0, select bank0
  4088  0377  1303               	bcf	3,6	;RP1=0, select bank0
  4089  0378  1187               	bcf	7,3	;volatile
  4090                           
  4091                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4092  0379  2B7A               	nop2	;2 cycle nop
  4093  037A  2B7B               	nop2	;2 cycle nop
  4094  037B  0000               	nop
  4095                           
  4096                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  4097  037C  1283               	bcf	3,5	;RP0=0, select bank0
  4098  037D  1303               	bcf	3,6	;RP1=0, select bank0
  4099  037E  0820               	movf	LCDBusyLoop@busy,w
  4100  037F  1D03               	btfss	3,2
  4101  0380  2B2F               	goto	l1971
  4102                           
  4103                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  4104  0381  1107               	bcf	7,2	;volatile
  4105                           
  4106                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  4107  0382  300F               	movlw	15
  4108  0383  00F4               	movwf	??_LCDBusyLoop
  4109  0384  0874               	movf	??_LCDBusyLoop,w
  4110  0385  1683               	bsf	3,5	;RP0=1, select bank1
  4111  0386  1303               	bcf	3,6	;RP1=0, select bank1
  4112  0387  0587               	andwf	7,f	;volatile
  4113  0388  0008               	return
  4114  0389                     __end_of_LCDBusyLoop:	
  4115                           
  4116                           	psect	text22
  4117  0741                     __ptext22:	
  4118 ;; *************** function _ADCInit *****************
  4119 ;; Defined at:
  4120 ;;		line 7 in file "adc_pic16.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;		None
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  1    wreg      void 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4134 ;;      Params:         0       0       0       0       0
  4135 ;;      Locals:         0       0       0       0       0
  4136 ;;      Temps:          0       0       0       0       0
  4137 ;;      Totals:         0       0       0       0       0
  4138 ;;Total ram usage:        0 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    1
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_main
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           
  4149                           ;psect for function _ADCInit
  4150  0741                     _ADCInit:	
  4151                           
  4152                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  4153                           
  4154                           ;incstack = 0
  4155                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  4156  0741  1683               	bsf	3,5	;RP0=1, select bank1
  4157  0742  1303               	bcf	3,6	;RP1=0, select bank1
  4158  0743  1686               	bsf	6,5	;volatile
  4159                           
  4160                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  4161  0744  1683               	bsf	3,5	;RP0=1, select bank3
  4162  0745  1703               	bsf	3,6	;RP1=1, select bank3
  4163  0746  1689               	bsf	9,5	;volatile
  4164                           
  4165                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  4166  0747  1683               	bsf	3,5	;RP0=1, select bank1
  4167  0748  1303               	bcf	3,6	;RP1=0, select bank1
  4168  0749  121F               	bcf	31,4	;volatile
  4169                           
  4170                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  4171  074A  30C0               	movlw	192
  4172  074B  1283               	bcf	3,5	;RP0=0, select bank0
  4173  074C  1303               	bcf	3,6	;RP1=0, select bank0
  4174  074D  049F               	iorwf	31,f	;volatile
  4175                           
  4176                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  4177  074E  1683               	bsf	3,5	;RP0=1, select bank1
  4178  074F  1303               	bcf	3,6	;RP1=0, select bank1
  4179  0750  179F               	bsf	31,7	;volatile
  4180                           
  4181                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  4182  0751  1283               	bcf	3,5	;RP0=0, select bank0
  4183  0752  1303               	bcf	3,6	;RP1=0, select bank0
  4184  0753  141F               	bsf	31,0	;volatile
  4185  0754  0008               	return
  4186  0755                     __end_of_ADCInit:	
  4187                           
  4188                           	psect	text23
  4189  07D2                     __ptext23:	
  4190 ;; *************** function _ISR *****************
  4191 ;; Defined at:
  4192 ;;		line 177 in file "do_am.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;		None
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		None
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4206 ;;      Params:         0       0       0       0       0
  4207 ;;      Locals:         0       0       0       0       0
  4208 ;;      Temps:          4       0       0       0       0
  4209 ;;      Totals:         4       0       0       0       0
  4210 ;;Total ram usage:        4 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		Interrupt level 1
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _ISR
  4221  07D2                     _ISR:	
  4222  07D2  0873               	movf	??_ISR+3,w
  4223  07D3  00FF               	movwf	127
  4224  07D4  0872               	movf	??_ISR+2,w
  4225  07D5  008A               	movwf	10
  4226  07D6  0871               	movf	??_ISR+1,w
  4227  07D7  0084               	movwf	4
  4228  07D8  0E70               	swapf	??_ISR^(0+-128),w
  4229  07D9  0083               	movwf	3
  4230  07DA  0EFE               	swapf	126,f
  4231  07DB  0E7E               	swapf	126,w
  4232  07DC  0009               	retfie
  4233  07DD                     __end_of_ISR:	
  4234  007E                     btemp	set	126	;btemp
  4235  007E                     wtemp	set	126
  4236  007E                     wtemp0	set	126
  4237  0080                     wtemp1	set	128
  4238  0082                     wtemp2	set	130
  4239  0084                     wtemp3	set	132
  4240  0086                     wtemp4	set	134
  4241  0088                     wtemp5	set	136
  4242  007F                     wtemp6	set	127
  4243  007E                     ttemp	set	126
  4244  007E                     ttemp0	set	126
  4245  0081                     ttemp1	set	129
  4246  0084                     ttemp2	set	132
  4247  0087                     ttemp3	set	135
  4248  007F                     ttemp4	set	127
  4249  007E                     ltemp	set	126
  4250  007E                     ltemp0	set	126
  4251  0082                     ltemp1	set	130
  4252  0086                     ltemp2	set	134
  4253  0080                     ltemp3	set	128
  4254                           
  4255                           	psect	intentry
  4256  0004                     __pintentry:	
  4257                           ;incstack = 0
  4258                           ; Regs used in _ISR: []
  4259                           
  4260  0004                     interrupt_function:	
  4261  007E                     saved_w	set	btemp
  4262  0004  00FE               	movwf	btemp
  4263  0005  0E03               	swapf	3,w
  4264  0006  00F0               	movwf	??_ISR
  4265  0007  0804               	movf	4,w
  4266  0008  00F1               	movwf	??_ISR+1
  4267  0009  080A               	movf	10,w
  4268  000A  00F2               	movwf	??_ISR+2
  4269  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4270  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4271  000D  087F               	movf	btemp+1,w
  4272  000E  00F3               	movwf	??_ISR+3
  4273  000F  120A  118A  2FD2   	ljmp	_ISR


Data Sizes:
    Strings     85
    Constant    0
    Data        49
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     44      68
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S421$name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[5]), STR_13(CODE[5]), 

    g_menu.items.name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[5]), STR_13(CODE[5]), 

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_17(CODE[1]), STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[5]), 
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[3]), STR_10(CODE[12]), 
		 -> STR_9(CODE[13]), STR_8(CODE[10]), STR_7(CODE[10]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[5]), 

    phMsg	PTR struct . size(1) Largest target is 32
		 -> msg(BANK1[32]), 


Critical Paths under _main in COMMON

    _main->_LCDByte
    _SaveMenuItem->_eeprom_write
    _ShowMenu->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDWriteInt->___awmod
    _MenuInit->_LoadMenuItem
    _LoadMenuItem->_eeprom_read
    _LCDSetStyle->_LCDByte
    _LCDInit->_LCDByte
    _ClearMenu->_LCDByte
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ShowMenu
    _ValueInc->_SaveMenuItem
    _ValueDec->_SaveMenuItem
    _ShowMenu->_LCDWriteInt
    _LCDWriteInt->_LCDByte
    _MenuInit->_LoadMenuItem
    _LCDSetStyle->_LCDByte
    _LCDInit->_LCDByte
    _ClearMenu->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   33866
                                             29 BANK0     15    15      0
                            _ADCInit
                          _ClearMenu
                             _IOInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDSetStyle
                     _LCDWriteString
                           _MenuDown
                           _MenuInit
                             _MenuUp
                           _ShowMenu
                           _ValueDec
                           _ValueInc
 ---------------------------------------------------------------------------------
 (1) _ValueInc                                             2     2      0     201
                                              3 BANK0      2     2      0
                       _SaveMenuItem
 ---------------------------------------------------------------------------------
 (1) _ValueDec                                             1     1      0     201
                                              3 BANK0      1     1      0
                       _SaveMenuItem
 ---------------------------------------------------------------------------------
 (2) _SaveMenuItem                                         3     3      0     201
                                              0 BANK0      3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     139
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _ShowMenu                                             6     6      0   12103
                                             23 BANK0      6     6      0
                            _LCDByte
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    3910
                                              9 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     587
                                              4 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     599
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _MenuUp                                               1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MenuInit                                             1     1      0      84
                                              2 BANK0      1     1      0
                       _LoadMenuItem
 ---------------------------------------------------------------------------------
 (2) _LoadMenuItem                                         3     3      0      84
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MenuDown                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDSetStyle                                          1     1      0    2053
                                              9 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    2328
                                              9 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _IOInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearMenu                                            3     3      0    8193
                                             13 BANK0      3     3      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       4     4      0    2787
                                              9 BANK0      4     4      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    3282
                                              9 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1    2022
                                              6 COMMON     1     0      1
                                              3 BANK0      6     6      0
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (4) _LCDBusyLoop                                          5     5      0     176
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _ClearMenu
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _IOInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDSetStyle
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _MenuDown
   _MenuInit
     _LoadMenuItem
       _eeprom_read
   _MenuUp
   _ShowMenu
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _ValueDec
     _SaveMenuItem
       _eeprom_write
   _ValueInc
     _SaveMenuItem
       _eeprom_write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      20       7       40.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6E      12        0.0%
ABS                  0      0      6E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Jun 19 20:20:35 2016

            ?_LCDBusyLoop 0070                __CFG_CP$ON 0000                         pc 0002  
                      _RD 0C60               __CFG_CPD$ON 0000                        _WR 0C61  
            ___awdiv@sign 0025                        fsr 0004              ?_LCDSetStyle 0070  
             __CFG_LVP$ON 0000                       l110 01B6                       l107 017C  
                     l148 052A                       l149 052B                       l291 06BB  
                     l197 06FF                       l269 0727                       l198 06E8  
                     _GIE 005F                       _RC1 0039                       _RC2 003A  
                     _RB4 0034                       _RA6 002E                       _RC3 003B  
                     _RB5 0035                       _RA7 002F                       _RB6 0036  
                     _RB7 0037                       _ISR 07D2                       _msg 00A0  
                     fsr0 0004           __end_of_ADCInit 0755                       indf 0000  
            ___awmod@sign 0076              __CFG_IESO$ON 0000   LCDWriteInt@field_length 002B  
         __end_of_LCDByte 0568           __end_of_LCDInit 03ED              ?_LCDWriteInt 0029  
                    ?_ISR 0070               LCDByte@temp 0028                      l2121 05D6  
                    l2113 05D0                      l2123 05E4                      l2131 05FD  
                    l2211 02B0                      l2109 05C9                      l2221 02FA  
                    l2213 02E5                      l2143 06EA                      l2071 0472  
                    l2135 0605                      l2127 05F2                      l2145 06EC  
                    l2081 047A                      l2065 0467                      l2401 00FA  
                    l2083 0488                      l2315 059F                      l2149 06F1  
                    l2093 04A9                      l2309 058C                      l2501 025C  
                    l2421 0137                      l2183 04BA                      l2511 0272  
                    l2423 0147                      l2415 012B                      l2185 050F  
                    l2169 04E8                      l2177 04F6                      l2097 04B1  
                    l2089 049E                      l2409 0118                      l2507 0268  
                    l2451 01A3                      l2435 0169                      l2443 0185  
                    l2509 026D                      l2461 01CD                      l2381 00C1  
                    l2391 00E0                      l2481 0208                      l2377 0221  
                    l2483 020D                      l2475 01FC                      l2459 01BD  
                    l1765 07C2                      l2485 0212                      l2469 01E9  
                    l2397 00F3                      l1775 07CD                      l2495 0249  
                    l1971 032F             ?_LoadMenuItem 0070                      STR_1 043D  
            __CFG_WDTE$ON 0000                      STR_2 0450                      STR_3 044C  
                    STR_4 0442                      STR_5 0450                      STR_6 0454  
                    STR_7 041F                      STR_8 0409                      STR_9 0406  
                    u2307 027A                      u1605 0532                      u2317 0390  
                    u1615 054E                      u1545 0338                      u1705 0489  
                    u1555 0344                      u1715 0495                      u1565 035E  
                    u1725 049F                      u1805 05EA                      u2277 013F  
                    u1815 05F3                      u2287 01C5                      u1585 0517  
                    u2297 021A                      u1685 047D                      u1935 0307  
                    u1785 05D9                      _WREN 0C62            ??_eeprom_write 0075  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0048  
                    _mode 0059        __size_of_LCDGotoXY 0026                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0012  
                    ttemp 007E                      wtemp 007E             __CFG_MCLRE$ON 0000  
                   ??_ISR 0070                     ?_main 0070           __end_of___awdiv 04B6  
                   _EEADR 010D                     STR_10 0413                     STR_11 0458  
                   STR_12 0447                     STR_13 0429                     STR_14 042E  
                   STR_15 0433                     STR_16 0438                     STR_17 042D  
         __end_of___awmod 060A                     _CARRY 0018              LCDInit@style 002B  
         ___awdiv@divisor 0020           ___awdiv@counter 0024                     _PORTC 0007  
                   _TRISC 0087                     _phMsg 0077                     _count 0079  
          ??_LoadMenuItem 0020                     main@i 0046                     pclath 000A  
                   ltemp0 007E                     ltemp1 0082                     ltemp2 0086  
                   ltemp3 0080                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 0015  
            __end_of_main 0282          __end_of_MenuDown 07D2          __end_of_MenuInit 068E  
               ??_ADCInit 0074        __size_of_ClearMenu 002C                    ??_main 003D  
       __end_of_LCDGotoXY 0706             LCDByte@isdata 0076                 ??_LCDByte 0023  
               ??_LCDInit 0029          __end_of_ValueDec 07B8          __end_of_ValueInc 0789  
        __end_of_ShowMenu 05BD             main@count_331 0041             main@count_340 0044  
           main@count_334 0042                    _ADRESH 001E             main@count_343 0045  
           main@count_337 0043                    _ADRESL 009E                    _EEDATA 010C  
                  _EECON1 018C                    _EECON2 018D          ___awdiv@dividend 0022  
                  _IOInit 060A             _tuneUpTempDir 0078            __CFG_PWRTE$OFF 0000  
                  _MenuUp 07B8            _LCDWriteString 04B6      __size_of_eeprom_read 001B  
               ??___awdiv 0074                 ??___awmod 0074                    _g_menu 005B  
    __size_of_LCDBusyLoop 0068          ___awdiv@quotient 0026           ___awmod@divisor 0020  
    __end_of_eeprom_write 06E0           ___awmod@counter 0075             ?_SaveMenuItem 0070  
            __pdataCOMMON 0077      __size_of_LCDSetStyle 000A              LCDWriteInt@i 0035  
            LCDWriteInt@j 0033                    saved_w 007E         __end_of_ClearMenu 06BA  
    __size_of_LCDWriteInt 009F   __end_of__initialization 0044           eeprom_read@addr 0075  
  __end_of_LCDWriteString 0511                 LCDByte@hn 0025                 LCDByte@ln 0026  
          __pcstackCOMMON 0070              __pidataBANK0 079A              __pidataBANK1 0706  
    __end_of_LoadMenuItem 079A            ??_SaveMenuItem 0020         eeprom_write@value 0074  
              __pbssBANK0 005B                   ?_IOInit 0070                 ?_MenuDown 0070  
               ?_MenuInit 0070           ?_LCDWriteString 0070                   ?_MenuUp 0070  
               ?_ValueDec 0070                 ?_ValueInc 0070                __pmaintext 0048  
               ?_ShowMenu 0070                __pintentry 0004                   _ADCInit 0741  
        SaveMenuItem@item 0022            ClearMenu@count 002E                   _LCDByte 0511  
                 _LCDInit 0389                __stringtab 0400          LCDSetStyle@style 0029  
              ??_MenuDown 0074                ??_MenuInit 0022           __size_of_IOInit 0046  
              ??_ValueDec 0023           __size_of_MenuUp 000D                ??_ValueInc 0023  
              ??_ShowMenu 0037     __size_of_eeprom_write 0026                   ___cgram 004C  
                 ___awdiv 045B                   ___awmod 05BD                 _ANSELbits 0188  
                 __ptext1 0778                   __ptext2 07A9                   __ptext3 0755  
                 __ptext4 06BA                   __ptext5 0568                   __ptext6 0282  
                 __ptext7 05BD                   __ptext8 045B                   __ptext9 07B8  
            __size_of_ISR 000B          ___awmod@dividend 0022                 _LCDGotoXY 06E0  
                 _submode 005A      end_of_initialization 0044              _eeprom_write 06BA  
    __end_of_SaveMenuItem 0767     __size_of_LoadMenuItem 0011         LCDWriteString@msg 002C  
               _TRISAbits 0085                 _TRISBbits 0086                 _TRISCbits 0087  
              ?_LCDGotoXY 0029              _LoadMenuItem 0789                LCDInit@__i 002C  
           ??_eeprom_read 0074                LCDGotoXY@x 002B                LCDGotoXY@y 0029  
          __end_of_IOInit 0650          LoadMenuItem@item 0076                 _ClearMenu 068E  
           ??_LCDBusyLoop 0074            __end_of_MenuUp 07C5             __pidataCOMMON 07E7  
           ??_LCDSetStyle 0077       start_initialization 0015               __end_of_ISR 07DD  
           ??_LCDWriteInt 002C          ??_LCDWriteString 0029             ShowMenu@count 003B  
                ??_IOInit 0074  __CFG_FOSC$INTRC_NOCLKOUT 0000         __size_of_MenuDown 000D  
       __size_of_MenuInit 003E                ?_ClearMenu 0070                  ??_MenuUp 0074  
               ShowMenu@i 003C       __end_of_eeprom_read 0741                init_fetch0 0767  
       __size_of_ValueDec 000F         __size_of_ValueInc 0011               __pdataBANK0 004C  
             __pdataBANK1 00A0         __size_of_ShowMenu 0055                  ?_ADCInit 0070  
     __end_of_LCDBusyLoop 0389                  ?_LCDByte 0076                  ?_LCDInit 0070  
             __pbssCOMMON 0079                  LCDByte@c 0027                 ___latbits 0002  
           __pcstackBANK0 0020               ??_LCDGotoXY 002A       __end_of_LCDSetStyle 07E7  
   __size_of_SaveMenuItem 0012          eeprom_write@addr 0076          LCDWriteInt@F1646 0054  
     __end_of_LCDWriteInt 0321                  ?___awdiv 0020                  ?___awmod 0020  
               __pstrings 0400              _SaveMenuItem 0755           LCDBusyLoop@busy 0020  
         LCDBusyLoop@temp 0021         interrupt_function 0004               _eeprom_read 0726  
             ??_ClearMenu 002D               _LCDBusyLoop 0321          LCDWriteString@cc 002B  
        __size_of_ADCInit 0014                _ADCON0bits 001F               __stringbase 0405  
              _ADCON1bits 009F                 main@i_333 0047                 main@i_342 004A  
               main@i_336 0048                 main@i_345 004B                 main@i_339 0049  
             _LCDSetStyle 07DD                 main@count 0040          __size_of_LCDByte 0057  
        __size_of_LCDInit 0064               _LCDWriteInt 0282                  _MenuDown 07C5  
                _MenuInit 0650                  _ValueDec 07A9                  _ValueInc 0778  
                _ShowMenu 0568          __size_of___awdiv 005B          __size_of___awmod 004D  
       LCDBusyLoop@status 0022        __end_of__stringtab 0406                _ANSELHbits 0189  
                __ptext10 0650                  __ptext11 0789                  __ptext20 0511  
                __ptext12 0726                  __ptext21 0321                  __ptext13 07C5  
                __ptext22 0741                  __ptext14 07DD                  __ptext23 07D2  
                __ptext15 0389                  __ptext16 060A                  __ptext17 068E  
                __ptext18 04B6                  __ptext19 06E0         __CFG_BOR4V$BOR21V 0000  
           __size_of_main 023A                ClearMenu@i 002F                  init_ram0 076B  
                intlevel1 0000            LCDWriteInt@val 0029            LCDWriteInt@str 002E  
               stringcode 0400                  stringdir 0400                  stringtab 0400  
     LCDWriteString@count 002A             ?_eeprom_write 0074              ?_eeprom_read 0070  
 __size_of_LCDWriteString 005B  
