

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jun 18 16:00:42 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     	;# 
    35  0001                     	;# 
    36  0002                     	;# 
    37  0003                     	;# 
    38  0004                     	;# 
    39  0005                     	;# 
    40  0006                     	;# 
    41  0007                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  000E                     	;# 
    49  000F                     	;# 
    50  0010                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0013                     	;# 
    54  0014                     	;# 
    55  0015                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  0018                     	;# 
    60  0019                     	;# 
    61  001A                     	;# 
    62  001B                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001D                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  0081                     	;# 
    69  0085                     	;# 
    70  0086                     	;# 
    71  0087                     	;# 
    72  0089                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  008F                     	;# 
    77  0090                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0093                     	;# 
    82  0093                     	;# 
    83  0094                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  0105                     	;# 
    96  0107                     	;# 
    97  0108                     	;# 
    98  0109                     	;# 
    99  010C                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  0185                     	;# 
   105  0187                     	;# 
   106  0188                     	;# 
   107  0189                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  008F                     	;# 
   153  0090                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0097                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009A                     	;# 
   166  009B                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  0105                     	;# 
   172  0107                     	;# 
   173  0108                     	;# 
   174  0109                     	;# 
   175  010C                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0185                     	;# 
   181  0187                     	;# 
   182  0188                     	;# 
   183  0189                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  008F                     	;# 
   229  0090                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0094                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009A                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  0105                     	;# 
   248  0107                     	;# 
   249  0108                     	;# 
   250  0109                     	;# 
   251  010C                     	;# 
   252  010C                     	;# 
   253  010D                     	;# 
   254  010E                     	;# 
   255  010F                     	;# 
   256  0185                     	;# 
   257  0187                     	;# 
   258  0188                     	;# 
   259  0189                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0000                     	;# 
   263  0001                     	;# 
   264  0002                     	;# 
   265  0003                     	;# 
   266  0004                     	;# 
   267  0005                     	;# 
   268  0006                     	;# 
   269  0007                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  008F                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0095                     	;# 
   313  0096                     	;# 
   314  0097                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009A                     	;# 
   318  009B                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  0105                     	;# 
   324  0107                     	;# 
   325  0108                     	;# 
   326  0109                     	;# 
   327  010C                     	;# 
   328  010C                     	;# 
   329  010D                     	;# 
   330  010E                     	;# 
   331  010F                     	;# 
   332  0185                     	;# 
   333  0187                     	;# 
   334  0188                     	;# 
   335  0189                     	;# 
   336  018C                     	;# 
   337  018D                     	;# 
   338                           
   339                           	psect	idataBANK0
   340  07B5                     __pidataBANK0:	
   341                           
   342                           ;initializer for ___cgram
   343  07B5  340C               	retlw	12
   344  07B6  3412               	retlw	18
   345  07B7  3412               	retlw	18
   346  07B8  340C               	retlw	12
   347  07B9  3400               	retlw	0
   348  07BA  3400               	retlw	0
   349  07BB  3400               	retlw	0
   350  07BC  3400               	retlw	0
   351                           
   352                           ;initializer for LCDWriteInt@F1632
   353  07BD  34F0               	retlw	240
   354  07BE  34F0               	retlw	240
   355  07BF  34F0               	retlw	240
   356  07C0  34F0               	retlw	240
   357  07C1  34F0               	retlw	240
   358                           
   359                           ;initializer for _tuneUpTempDir
   360  07C2  3401               	retlw	1
   361  001F                     _ADCON0bits	set	31
   362  001E                     _ADRESH	set	30
   363  000B                     _INTCONbits	set	11
   364  0007                     _PORTC	set	7
   365  0028                     _RA0	set	40
   366  0029                     _RA1	set	41
   367  002A                     _RA2	set	42
   368  002B                     _RA3	set	43
   369  002E                     _RA6	set	46
   370  0039                     _RC1	set	57
   371  003A                     _RC2	set	58
   372  003B                     _RC3	set	59
   373  009F                     _ADCON1bits	set	159
   374  009E                     _ADRESL	set	158
   375  0096                     _IOCBbits	set	150
   376  0085                     _TRISAbits	set	133
   377  0086                     _TRISBbits	set	134
   378  0087                     _TRISC	set	135
   379  0087                     _TRISCbits	set	135
   380  0189                     _ANSELHbits	set	393
   381  0188                     _ANSELbits	set	392
   382                           
   383                           	psect	strings
   384  0717                     __pstrings:	
   385  0717                     stringtab:	
   386  0717                     __stringtab:	
   387  0717                     stringcode:	
   388                           ;	String table - string pointers are 1 byte each
   389                           
   390  0717                     stringdir:	
   391  0717  3007               	movlw	high stringdir
   392  0718  008A               	movwf	10
   393  0719  0804               	movf	4,w
   394  071A  0A84               	incf	4,f
   395  071B  0782               	addwf	2,f
   396  071C                     __stringbase:	
   397  071C  3400               	retlw	0
   398  071D                     __end_of__stringtab:	
   399  071D                     STR_1:	
   400  071D  3454               	retlw	84	;'T'
   401  071E  3468               	retlw	104	;'h'
   402  071F  3465               	retlw	101	;'e'
   403  0720  3472               	retlw	114	;'r'
   404  0721  346D               	retlw	109	;'m'
   405  0722  346F               	retlw	111	;'o'
   406  0723  346D               	retlw	109	;'m'
   407  0724  3465               	retlw	101	;'e'
   408  0725  3474               	retlw	116	;'t'
   409  0726  3465               	retlw	101	;'e'
   410  0727  3472               	retlw	114	;'r'
   411  0728  3420               	retlw	32	;' '
   412  0729  3473               	retlw	115	;'s'
   413  072A  3465               	retlw	101	;'e'
   414  072B  3474               	retlw	116	;'t'
   415  072C  343A               	retlw	58	;':'
   416  072D  3400               	retlw	0
   417  072E                     STR_3:	
   418  072E  3443               	retlw	67	;'C'
   419  072F  3475               	retlw	117	;'u'
   420  0730  3472               	retlw	114	;'r'
   421  0731  343A               	retlw	58	;':'
   422  0732  3400               	retlw	0
   423  0733                     STR_6:	
   424  0733  344D               	retlw	77	;'M'
   425  0734  3461               	retlw	97	;'a'
   426  0735  3478               	retlw	120	;'x'
   427  0736  343A               	retlw	58	;':'
   428  0737  3400               	retlw	0
   429  0738                     STR_5:	
   430  0738  3457               	retlw	87	;'W'
   431  0739  3461               	retlw	97	;'a'
   432  073A  343A               	retlw	58	;':'
   433  073B  3400               	retlw	0
   434  073C                     STR_2:	
   435  073C  3425               	retlw	37	;'%'
   436  073D  3430               	retlw	48	;'0'
   437  073E  3443               	retlw	67	;'C'
   438  073F  3400               	retlw	0
   439  0740                     STR_8:	
   440  0740  344F               	retlw	79	;'O'
   441  0741  3446               	retlw	70	;'F'
   442  0742  3446               	retlw	70	;'F'
   443  0743  3400               	retlw	0
   444  073C                     
   445                           ; #config settings
   446  0000                     
   447                           	psect	cinit
   448  0015                     start_initialization:	
   449  0015                     __initialization:	
   450                           
   451                           ; Clear objects allocated to BANK0
   452  0015  01D2               	clrf	__pbssBANK0& (0+127)
   453  0016  01D3               	clrf	(__pbssBANK0+1)& (0+127)
   454  0017  01D4               	clrf	(__pbssBANK0+2)& (0+127)
   455  0018  01D5               	clrf	(__pbssBANK0+3)& (0+127)
   456                           
   457                           ; Initialize objects allocated to BANK0
   458  0019  1383               	bcf	3,7	;select IRP bank0
   459  001A  3052               	movlw	low (__pdataBANK0+14)
   460  001B  00FD               	movwf	btemp+-1
   461  001C  3007               	movlw	high __pidataBANK0
   462  001D  00FE               	movwf	btemp
   463  001E  30B5               	movlw	low __pidataBANK0
   464  001F  00FF               	movwf	btemp+1
   465  0020  3044               	movlw	low __pdataBANK0
   466  0021  0084               	movwf	4
   467  0022  120A  118A  27A8   	fcall	init_ram0
   468  0025                     end_of_initialization:	
   469                           ;End of C runtime variable initialization code
   470                           
   471  0025                     __end_of__initialization:	
   472  0025  0183               	clrf	3
   473  0026  120A  118A  2829   	ljmp	_main	;jump to C main() function
   474                           
   475                           	psect	bssBANK0
   476  0052                     __pbssBANK0:	
   477  0052                     _curTemp:	
   478  0052                     	ds	2
   479  0054                     _tuneUpTemp:	
   480  0054                     	ds	2
   481                           
   482                           	psect	dataBANK0
   483  0044                     __pdataBANK0:	
   484  0044                     ___cgram:	
   485  0044                     	ds	8
   486  004C                     LCDWriteInt@F1632:	
   487  004C                     	ds	5
   488  0051                     _tuneUpTempDir:	
   489  0051                     	ds	1
   490                           
   491                           	psect	inittext
   492  07A4                     init_fetch0:	
   493                           ;	Called with low address in FSR and high address in W
   494                           
   495  07A4  087E               	movf	126,w
   496  07A5  008A               	movwf	10
   497  07A6  087F               	movf	127,w
   498  07A7  0082               	movwf	2
   499  07A8                     init_ram0:	
   500                           ;Called with:
   501                           ;	high address of idata address in btemp 
   502                           ;	low address of idata address in btemp+1 
   503                           ;	low address of data in FSR
   504                           ;	high address + 1 of data in btemp-1
   505                           
   506  07A8  27A4  120A  118A   	fcall	init_fetch0
   507  07AB  0080               	movwf	0
   508  07AC  0A84               	incf	4,f
   509  07AD  0804               	movf	4,w
   510  07AE  067D               	xorwf	125,w
   511  07AF  1903               	btfsc	3,2
   512  07B0  3400               	retlw	0
   513  07B1  0AFF               	incf	127,f
   514  07B2  1903               	btfsc	3,2
   515  07B3  0AFE               	incf	126,f
   516  07B4  2FA8               	goto	init_ram0
   517                           
   518                           	psect	cstackBANK1
   519  00A0                     __pcstackBANK1:	
   520  00A0                     LCDWriteInt@str:	
   521                           
   522                           ; 5 bytes @ 0x0
   523  00A0                     	ds	5
   524  00A5                     LCDWriteInt@j:	
   525                           
   526                           ; 2 bytes @ 0x5
   527  00A5                     	ds	2
   528  00A7                     LCDWriteInt@i:	
   529                           
   530                           ; 2 bytes @ 0x7
   531  00A7                     	ds	2
   532  00A9                     ??_main:	
   533                           
   534                           ; 1 bytes @ 0x9
   535  00A9                     	ds	14
   536                           
   537                           	psect	cstackCOMMON
   538  0070                     __pcstackCOMMON:	
   539  0070                     ?_LCDWriteString:	
   540  0070                     ?_LCDInit:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_LCDBusyLoop:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_ADCInit:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_TuneButtonInit:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_ISR:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?i1_LCDBusyLoop:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ??i1_LCDBusyLoop:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?i1_LCDWriteString:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?i1___awdiv:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?i1___awmod:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     i1___awdiv@divisor:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0070                     i1___awmod@divisor:	
   577                           ; 2 bytes @ 0x0
   578                           
   579                           
   580                           ; 2 bytes @ 0x0
   581  0070                     	ds	2
   582  0072                     i1LCDBusyLoop@busy:	
   583  0072                     i1___awdiv@dividend:	
   584                           ; 1 bytes @ 0x2
   585                           
   586  0072                     i1___awmod@dividend:	
   587                           ; 2 bytes @ 0x2
   588                           
   589                           
   590                           ; 2 bytes @ 0x2
   591  0072                     	ds	1
   592  0073                     i1LCDBusyLoop@temp:	
   593                           
   594                           ; 1 bytes @ 0x3
   595  0073                     	ds	1
   596  0074                     ??i1___awdiv:	
   597  0074                     ??i1___awmod:	
   598                           ; 1 bytes @ 0x4
   599                           
   600  0074                     i1LCDBusyLoop@status:	
   601                           ; 1 bytes @ 0x4
   602                           
   603                           
   604                           ; 1 bytes @ 0x4
   605  0074                     	ds	1
   606  0075                     ?i1_LCDByte:	
   607  0075                     i1LCDByte@isdata:	
   608                           ; 1 bytes @ 0x5
   609                           
   610  0075                     i1___awdiv@counter:	
   611                           ; 1 bytes @ 0x5
   612                           
   613  0075                     i1___awmod@counter:	
   614                           ; 1 bytes @ 0x5
   615                           
   616                           
   617                           ; 1 bytes @ 0x5
   618  0075                     	ds	1
   619  0076                     ??i1_LCDByte:	
   620  0076                     i1___awdiv@sign:	
   621                           ; 1 bytes @ 0x6
   622                           
   623  0076                     i1___awmod@sign:	
   624                           ; 1 bytes @ 0x6
   625                           
   626                           
   627                           ; 1 bytes @ 0x6
   628  0076                     	ds	1
   629  0077                     i1___awdiv@quotient:	
   630                           
   631                           ; 2 bytes @ 0x7
   632  0077                     	ds	1
   633  0078                     i1LCDByte@c:	
   634                           
   635                           ; 1 bytes @ 0x8
   636  0078                     	ds	1
   637  0079                     i1LCDByte@hn:	
   638                           
   639                           ; 1 bytes @ 0x9
   640  0079                     	ds	1
   641  007A                     i1LCDByte@ln:	
   642                           
   643                           ; 1 bytes @ 0xA
   644  007A                     	ds	1
   645  007B                     i1LCDByte@temp:	
   646                           
   647                           ; 1 bytes @ 0xB
   648  007B                     	ds	1
   649  007C                     ??i1_LCDWriteString:	
   650  007C                     ??i1_LCDWriteInt:	
   651                           ; 1 bytes @ 0xC
   652                           
   653  007C                     ?i1_LCDGotoXY:	
   654                           ; 1 bytes @ 0xC
   655                           
   656  007C                     i1LCDGotoXY@y:	
   657                           ; 1 bytes @ 0xC
   658                           
   659                           
   660                           ; 1 bytes @ 0xC
   661  007C                     	ds	1
   662  007D                     ??i1_LCDGotoXY:	
   663                           
   664                           ; 1 bytes @ 0xD
   665  007D                     	ds	1
   666                           
   667                           	psect	cstackBANK0
   668  0020                     __pcstackBANK0:	
   669  0020                     ?i1_LCDWriteInt:	
   670  0020                     i1LCDWriteString@msg:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0020                     i1LCDGotoXY@x:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0020                     i1LCDWriteInt@val:	
   677                           ; 1 bytes @ 0x0
   678                           
   679                           
   680                           ; 2 bytes @ 0x0
   681  0020                     	ds	1
   682  0021                     i1LCDWriteString@cc:	
   683                           
   684                           ; 1 bytes @ 0x1
   685  0021                     	ds	1
   686  0022                     i1LCDWriteInt@field_length:	
   687                           
   688                           ; 1 bytes @ 0x2
   689  0022                     	ds	1
   690  0023                     i1LCDWriteInt@str:	
   691                           
   692                           ; 5 bytes @ 0x3
   693  0023                     	ds	5
   694  0028                     i1LCDWriteInt@j:	
   695                           
   696                           ; 2 bytes @ 0x8
   697  0028                     	ds	2
   698  002A                     i1LCDWriteInt@i:	
   699                           
   700                           ; 2 bytes @ 0xA
   701  002A                     	ds	2
   702  002C                     ??_ISR:	
   703                           
   704                           ; 1 bytes @ 0xC
   705  002C                     	ds	7
   706  0033                     ??_LCDBusyLoop:	
   707  0033                     ??_ADCInit:	
   708                           ; 1 bytes @ 0x13
   709                           
   710  0033                     ??_TuneButtonInit:	
   711                           ; 1 bytes @ 0x13
   712                           
   713  0033                     ?___awdiv:	
   714                           ; 1 bytes @ 0x13
   715                           
   716  0033                     ?___awmod:	
   717                           ; 2 bytes @ 0x13
   718                           
   719  0033                     ___awdiv@divisor:	
   720                           ; 2 bytes @ 0x13
   721                           
   722  0033                     ___awmod@divisor:	
   723                           ; 2 bytes @ 0x13
   724                           
   725                           
   726                           ; 2 bytes @ 0x13
   727  0033                     	ds	2
   728  0035                     LCDBusyLoop@busy:	
   729  0035                     ___awdiv@dividend:	
   730                           ; 1 bytes @ 0x15
   731                           
   732  0035                     ___awmod@dividend:	
   733                           ; 2 bytes @ 0x15
   734                           
   735                           
   736                           ; 2 bytes @ 0x15
   737  0035                     	ds	1
   738  0036                     LCDBusyLoop@temp:	
   739                           
   740                           ; 1 bytes @ 0x16
   741  0036                     	ds	1
   742  0037                     ??___awdiv:	
   743  0037                     ??___awmod:	
   744                           ; 1 bytes @ 0x17
   745                           
   746  0037                     LCDBusyLoop@status:	
   747                           ; 1 bytes @ 0x17
   748                           
   749                           
   750                           ; 1 bytes @ 0x17
   751  0037                     	ds	1
   752  0038                     ?_LCDByte:	
   753  0038                     LCDByte@isdata:	
   754                           ; 1 bytes @ 0x18
   755                           
   756  0038                     ___awdiv@counter:	
   757                           ; 1 bytes @ 0x18
   758                           
   759  0038                     ___awmod@counter:	
   760                           ; 1 bytes @ 0x18
   761                           
   762                           
   763                           ; 1 bytes @ 0x18
   764  0038                     	ds	1
   765  0039                     ??_LCDByte:	
   766  0039                     ___awdiv@sign:	
   767                           ; 1 bytes @ 0x19
   768                           
   769  0039                     ___awmod@sign:	
   770                           ; 1 bytes @ 0x19
   771                           
   772                           
   773                           ; 1 bytes @ 0x19
   774  0039                     	ds	1
   775  003A                     ___awdiv@quotient:	
   776                           
   777                           ; 2 bytes @ 0x1A
   778  003A                     	ds	1
   779  003B                     LCDByte@hn:	
   780                           
   781                           ; 1 bytes @ 0x1B
   782  003B                     	ds	1
   783  003C                     LCDByte@ln:	
   784                           
   785                           ; 1 bytes @ 0x1C
   786  003C                     	ds	1
   787  003D                     LCDByte@c:	
   788                           
   789                           ; 1 bytes @ 0x1D
   790  003D                     	ds	1
   791  003E                     LCDByte@temp:	
   792                           
   793                           ; 1 bytes @ 0x1E
   794  003E                     	ds	1
   795  003F                     ?_LCDGotoXY:	
   796  003F                     ??_LCDWriteString:	
   797                           ; 1 bytes @ 0x1F
   798                           
   799  003F                     ?_LCDWriteInt:	
   800                           ; 1 bytes @ 0x1F
   801                           
   802  003F                     ??_LCDInit:	
   803                           ; 1 bytes @ 0x1F
   804                           
   805  003F                     LCDGotoXY@y:	
   806                           ; 1 bytes @ 0x1F
   807                           
   808  003F                     LCDWriteInt@val:	
   809                           ; 1 bytes @ 0x1F
   810                           
   811                           
   812                           ; 2 bytes @ 0x1F
   813  003F                     	ds	1
   814  0040                     ??_LCDGotoXY:	
   815  0040                     LCDWriteString@cc:	
   816                           ; 1 bytes @ 0x20
   817                           
   818                           
   819                           ; 1 bytes @ 0x20
   820  0040                     	ds	1
   821  0041                     LCDInit@style:	
   822  0041                     LCDWriteString@msg:	
   823                           ; 1 bytes @ 0x21
   824                           
   825  0041                     LCDWriteInt@field_length:	
   826                           ; 1 bytes @ 0x21
   827                           
   828  0041                     LCDGotoXY@x:	
   829                           ; 1 bytes @ 0x21
   830                           
   831                           
   832                           ; 1 bytes @ 0x21
   833  0041                     	ds	1
   834  0042                     ??_LCDWriteInt:	
   835  0042                     LCDInit@__i:	
   836                           ; 1 bytes @ 0x22
   837                           
   838                           
   839                           ; 1 bytes @ 0x22
   840  0042                     	ds	2
   841                           
   842                           	psect	maintext
   843  0029                     __pmaintext:	
   844 ;;
   845 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
   846 ;;
   847 ;; *************** function _main *****************
   848 ;; Defined at:
   849 ;;		line 185 in file "do_am.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : B00/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0
   865 ;;      Temps:          0       0      14       0       0
   866 ;;      Totals:         0       0      14       0       0
   867 ;;Total ram usage:       14 bytes
   868 ;; Hardware stack levels required when called:    7
   869 ;; This function calls:
   870 ;;		_ADCInit
   871 ;;		_LCDByte
   872 ;;		_LCDGotoXY
   873 ;;		_LCDInit
   874 ;;		_LCDWriteInt
   875 ;;		_LCDWriteString
   876 ;;		_TuneButtonInit
   877 ;; This function is called by:
   878 ;;		Startup code after reset
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _main
   884  0029                     _main:	
   885                           
   886                           ;do_am.c: 188: LCDInit(0B00000000);
   887                           
   888                           ;incstack = 0
   889                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   890  0029  3000               	movlw	0
   891  002A  120A  118A  230B  120A  118A  	fcall	_LCDInit
   892                           
   893                           ;do_am.c: 191: ADCInit();
   894  002F  120A  118A  2790  120A  118A  	fcall	_ADCInit
   895                           
   896                           ;do_am.c: 194: TuneButtonInit();
   897  0034  120A  118A  26DF  120A  118A  	fcall	_TuneButtonInit
   898                           
   899                           ;do_am.c: 200: (LCDByte(0b00000001,0));
   900  0039  1283               	bcf	3,5	;RP0=0, select bank0
   901  003A  1303               	bcf	3,6	;RP1=0, select bank0
   902  003B  01B8               	clrf	LCDByte@isdata
   903  003C  3001               	movlw	1
   904  003D  120A  118A  254E  120A  118A  	fcall	_LCDByte
   905                           
   906                           ;do_am.c: 202: { LCDGotoXY(0,0); LCDWriteString("Cur:");};
   907  0042  1283               	bcf	3,5	;RP0=0, select bank0
   908  0043  1303               	bcf	3,6	;RP1=0, select bank0
   909  0044  01BF               	clrf	LCDGotoXY@y
   910  0045  3000               	movlw	0
   911  0046  120A  118A  2744  120A  118A  	fcall	_LCDGotoXY
   912  004B  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   913  004C  120A  118A  25A5  120A  118A  	fcall	_LCDWriteString
   914                           
   915                           ;do_am.c: 204: { LCDGotoXY(7,0); LCDWriteString("%0C");};
   916  0051  1283               	bcf	3,5	;RP0=0, select bank0
   917  0052  1303               	bcf	3,6	;RP1=0, select bank0
   918  0053  01BF               	clrf	LCDGotoXY@y
   919  0054  3007               	movlw	7
   920  0055  120A  118A  2744  120A  118A  	fcall	_LCDGotoXY
   921  005A  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   922  005B  120A  118A  25A5  120A  118A  	fcall	_LCDWriteString
   923                           
   924                           ;do_am.c: 206: { LCDGotoXY(10,0); LCDWriteString("Wa:");};
   925  0060  1283               	bcf	3,5	;RP0=0, select bank0
   926  0061  1303               	bcf	3,6	;RP1=0, select bank0
   927  0062  01BF               	clrf	LCDGotoXY@y
   928  0063  300A               	movlw	10
   929  0064  120A  118A  2744  120A  118A  	fcall	_LCDGotoXY
   930  0069  301C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   931  006A  120A  118A  25A5  120A  118A  	fcall	_LCDWriteString
   932                           
   933                           ;do_am.c: 208: { LCDGotoXY(0,1); LCDWriteString("Max:");};
   934  006F  1283               	bcf	3,5	;RP0=0, select bank0
   935  0070  1303               	bcf	3,6	;RP1=0, select bank0
   936  0071  01BF               	clrf	LCDGotoXY@y
   937  0072  0ABF               	incf	LCDGotoXY@y,f
   938  0073  3000               	movlw	0
   939  0074  120A  118A  2744  120A  118A  	fcall	_LCDGotoXY
   940  0079  3017               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   941  007A  120A  118A  25A5  120A  118A  	fcall	_LCDWriteString
   942                           
   943                           ;do_am.c: 210: { LCDGotoXY(7,1); LCDWriteString("%0C");};
   944  007F  1283               	bcf	3,5	;RP0=0, select bank0
   945  0080  1303               	bcf	3,6	;RP1=0, select bank0
   946  0081  01BF               	clrf	LCDGotoXY@y
   947  0082  0ABF               	incf	LCDGotoXY@y,f
   948  0083  3007               	movlw	7
   949  0084  120A  118A  2744  120A  118A  	fcall	_LCDGotoXY
   950  0089  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   951  008A  120A  118A  25A5  120A  118A  	fcall	_LCDWriteString
   952                           
   953                           ;do_am.c: 212: { LCDGotoXY(13,0); LCDWriteString("OFF");};
   954  008F  1283               	bcf	3,5	;RP0=0, select bank0
   955  0090  1303               	bcf	3,6	;RP1=0, select bank0
   956  0091  01BF               	clrf	LCDGotoXY@y
   957  0092  300D               	movlw	13
   958  0093  120A  118A  2744  120A  118A  	fcall	_LCDGotoXY
   959  0098  3024               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   960  0099  120A  118A  25A5  120A  118A  	fcall	_LCDWriteString
   961                           
   962                           ;do_am.c: 214: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
   963  009E  1283               	bcf	3,5	;RP0=0, select bank0
   964  009F  1303               	bcf	3,6	;RP1=0, select bank0
   965  00A0  01BF               	clrf	LCDGotoXY@y
   966  00A1  0ABF               	incf	LCDGotoXY@y,f
   967  00A2  3004               	movlw	4
   968  00A3  120A  118A  2744  120A  118A  	fcall	_LCDGotoXY
   969  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   970  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   971  00AA  0855               	movf	_tuneUpTemp+1,w
   972  00AB  00C0               	movwf	LCDWriteInt@val+1
   973  00AC  0854               	movf	_tuneUpTemp,w
   974  00AD  00BF               	movwf	LCDWriteInt@val
   975  00AE  3003               	movlw	3
   976  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   977  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   978  00B1  00A9               	movwf	??_main^(0+128)
   979  00B2  0829               	movf	??_main^(0+128),w
   980  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   981  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   982  00B5  00C1               	movwf	LCDWriteInt@field_length
   983  00B6  120A  118A  2145  120A  118A  	fcall	_LCDWriteInt
   984                           
   985                           ;do_am.c: 215: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
   986  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   987  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   988  00BD  01BF               	clrf	LCDGotoXY@y
   989  00BE  3004               	movlw	4
   990  00BF  120A  118A  2744  120A  118A  	fcall	_LCDGotoXY
   991  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   992  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   993  00C6  0853               	movf	_curTemp+1,w
   994  00C7  00C0               	movwf	LCDWriteInt@val+1
   995  00C8  0852               	movf	_curTemp,w
   996  00C9                     L1:	
   997  00C9  00BF               	movwf	LCDWriteInt@val
   998  00CA  3003               	movlw	3
   999  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  1000  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  1001  00CD  00A9               	movwf	??_main^(0+128)
  1002  00CE  0829               	movf	??_main^(0+128),w
  1003  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1004  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1005  00D1  00C1               	movwf	LCDWriteInt@field_length
  1006  00D2  120A  118A  2145  120A  118A  	fcall	_LCDWriteInt
  1007  00D7                     l2465:	
  1008                           ;do_am.c: 216: while(1)
  1009                           
  1010                           
  1011                           ;do_am.c: 217: {
  1012                           ;do_am.c: 232: if(RA6 == 0)
  1013  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1014  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1015  00D9  1B05               	btfsc	5,6	;volatile
  1016  00DA  28D7               	goto	l2465
  1017                           
  1018                           ;do_am.c: 233: {
  1019                           ;do_am.c: 239: tuneUpTemp = (RA0 | (RA1 << 1) | (RA2 << 2) | (RA3 << 3));
  1020  00DB  1003               	clrc
  1021  00DC  1985               	btfsc	5,3	;volatile
  1022  00DD  1403               	setc
  1023  00DE  3000               	movlw	0
  1024  00DF  1803               	skipnc
  1025  00E0  3001               	movlw	1
  1026  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1027  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1028  00E3  00A9               	movwf	??_main^(0+128)
  1029  00E4  01AA               	clrf	(??_main^(0+128)+1)
  1030  00E5  1003               	clrc
  1031  00E6  0DA9               	rlf	??_main^(0+128),f
  1032  00E7  0DAA               	rlf	(??_main^(0+128)+1),f
  1033  00E8  1003               	clrc
  1034  00E9  0DA9               	rlf	??_main^(0+128),f
  1035  00EA  0DAA               	rlf	(??_main^(0+128)+1),f
  1036  00EB  1003               	clrc
  1037  00EC  0DA9               	rlf	??_main^(0+128),f
  1038  00ED  0DAA               	rlf	(??_main^(0+128)+1),f
  1039  00EE  1003               	clrc
  1040  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1041  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1042  00F1  1905               	btfsc	5,2	;volatile
  1043  00F2  1403               	setc
  1044  00F3  3000               	movlw	0
  1045  00F4  1803               	skipnc
  1046  00F5  3001               	movlw	1
  1047  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1048  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  1049  00F8  00AB               	movwf	(??_main+2)^(0+128)
  1050  00F9  01AC               	clrf	((??_main+2)^(0+128)+1)
  1051  00FA  1003               	clrc
  1052  00FB  0DAB               	rlf	(??_main+2)^(0+128),f
  1053  00FC  0DAC               	rlf	((??_main+2)^(0+128)+1),f
  1054  00FD  1003               	clrc
  1055  00FE  0DAB               	rlf	(??_main+2)^(0+128),f
  1056  00FF  0DAC               	rlf	((??_main+2)^(0+128)+1),f
  1057  0100  1003               	clrc
  1058  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1060  0103  1885               	btfsc	5,1	;volatile
  1061  0104  1403               	setc
  1062  0105  3000               	movlw	0
  1063  0106  1803               	skipnc
  1064  0107  3001               	movlw	1
  1065  0108  1683               	bsf	3,5	;RP0=1, select bank1
  1066  0109  1303               	bcf	3,6	;RP1=0, select bank1
  1067  010A  00AD               	movwf	(??_main+4)^(0+128)
  1068  010B  01AE               	clrf	((??_main+4)^(0+128)+1)
  1069  010C  1003               	clrc
  1070  010D  0DAD               	rlf	(??_main+4)^(0+128),f
  1071  010E  0DAE               	rlf	((??_main+4)^(0+128)+1),f
  1072  010F  1003               	clrc
  1073  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0112  1805               	btfsc	5,0	;volatile
  1076  0113  1403               	setc
  1077  0114  3000               	movlw	0
  1078  0115  1803               	skipnc
  1079  0116  3001               	movlw	1
  1080  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1081  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1082  0119  00AF               	movwf	(??_main+6)^(0+128)
  1083  011A  01B0               	clrf	((??_main+6)^(0+128)+1)
  1084  011B  082D               	movf	(??_main+4)^(0+128),w
  1085  011C  042F               	iorwf	(??_main+6)^(0+128),w
  1086  011D  00B1               	movwf	(??_main+8)^(0+128)
  1087  011E  082E               	movf	(??_main+5)^(0+128),w
  1088  011F  0430               	iorwf	(??_main+7)^(0+128),w
  1089  0120  00B2               	movwf	(??_main+9)^(0+128)
  1090  0121  082B               	movf	(??_main+2)^(0+128),w
  1091  0122  0431               	iorwf	(??_main+8)^(0+128),w
  1092  0123  00B3               	movwf	(??_main+10)^(0+128)
  1093  0124  082C               	movf	(??_main+3)^(0+128),w
  1094  0125  0432               	iorwf	(??_main+9)^(0+128),w
  1095  0126  00B4               	movwf	(??_main+11)^(0+128)
  1096  0127  0829               	movf	??_main^(0+128),w
  1097  0128  0433               	iorwf	(??_main+10)^(0+128),w
  1098  0129  00B5               	movwf	(??_main+12)^(0+128)
  1099  012A  082A               	movf	(??_main+1)^(0+128),w
  1100  012B  0434               	iorwf	(??_main+11)^(0+128),w
  1101  012C  00B6               	movwf	(??_main+13)^(0+128)
  1102  012D  0835               	movf	(??_main+12)^(0+128),w
  1103  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1104  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0130  00D4               	movwf	_tuneUpTemp
  1106  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1107  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1108  0133  0836               	movf	(??_main+13)^(0+128),w
  1109  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0136  00D5               	movwf	_tuneUpTemp+1
  1112                           
  1113                           ;do_am.c: 246: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1114  0137  01BF               	clrf	LCDGotoXY@y
  1115  0138  0ABF               	incf	LCDGotoXY@y,f
  1116  0139  3004               	movlw	4
  1117  013A  120A  118A  2744  120A  118A  	fcall	_LCDGotoXY
  1118  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0141  0855               	movf	_tuneUpTemp+1,w
  1121  0142  00C0               	movwf	LCDWriteInt@val+1
  1122  0143  0854               	movf	_tuneUpTemp,w
  1123  0144  28C9               	goto	L1
  1124  0145                     __end_of_main:	
  1125                           
  1126                           	psect	text1
  1127  06DF                     __ptext1:	
  1128 ;; *************** function _TuneButtonInit *****************
  1129 ;; Defined at:
  1130 ;;		line 104 in file "do_am.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		None
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    4
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _TuneButtonInit
  1160  06DF                     _TuneButtonInit:	
  1161                           
  1162                           ;do_am.c: 107: (TRISAbits.TRISA6 = 1);
  1163                           
  1164                           ;incstack = 0
  1165                           ; Regs used in _TuneButtonInit: []
  1166  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  1167  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  1168  06E1  1705               	bsf	5,6	;volatile
  1169                           
  1170                           ;do_am.c: 108: ANSELHbits.ANS11 = 0;
  1171  06E2  1683               	bsf	3,5	;RP0=1, select bank3
  1172  06E3  1703               	bsf	3,6	;RP1=1, select bank3
  1173  06E4  1189               	bcf	9,3	;volatile
  1174                           
  1175                           ;do_am.c: 110: (TRISAbits.TRISA0 = 1);
  1176  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  1177  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  1178  06E7  1405               	bsf	5,0	;volatile
  1179                           
  1180                           ;do_am.c: 111: ANSELbits.ANS0 = 0;
  1181  06E8  1683               	bsf	3,5	;RP0=1, select bank3
  1182  06E9  1703               	bsf	3,6	;RP1=1, select bank3
  1183  06EA  1008               	bcf	8,0	;volatile
  1184                           
  1185                           ;do_am.c: 113: (TRISAbits.TRISA1 = 1);
  1186  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  1187  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  1188  06ED  1485               	bsf	5,1	;volatile
  1189                           
  1190                           ;do_am.c: 114: ANSELbits.ANS1 = 0;
  1191  06EE  1683               	bsf	3,5	;RP0=1, select bank3
  1192  06EF  1703               	bsf	3,6	;RP1=1, select bank3
  1193  06F0  1088               	bcf	8,1	;volatile
  1194                           
  1195                           ;do_am.c: 115: (TRISAbits.TRISA2 = 1);
  1196  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  1197  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  1198  06F3  1505               	bsf	5,2	;volatile
  1199                           
  1200                           ;do_am.c: 116: ANSELbits.ANS2 = 0;
  1201  06F4  1683               	bsf	3,5	;RP0=1, select bank3
  1202  06F5  1703               	bsf	3,6	;RP1=1, select bank3
  1203  06F6  1108               	bcf	8,2	;volatile
  1204                           
  1205                           ;do_am.c: 117: (TRISAbits.TRISA3 = 1);
  1206  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  1207  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  1208  06F9  1585               	bsf	5,3	;volatile
  1209                           
  1210                           ;do_am.c: 118: ANSELbits.ANS3 = 0;
  1211  06FA  1683               	bsf	3,5	;RP0=1, select bank3
  1212  06FB  1703               	bsf	3,6	;RP1=1, select bank3
  1213  06FC  1188               	bcf	8,3	;volatile
  1214                           
  1215                           ;do_am.c: 120: (TRISAbits.TRISA7 = 0);
  1216  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  1217  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  1218  06FF  1385               	bcf	5,7	;volatile
  1219                           
  1220                           ;do_am.c: 122: (TRISBbits.TRISB0 = 0);
  1221  0700  1006               	bcf	6,0	;volatile
  1222                           
  1223                           ;do_am.c: 123: ANSELHbits.ANS12 = 0;
  1224  0701  1683               	bsf	3,5	;RP0=1, select bank3
  1225  0702  1703               	bsf	3,6	;RP1=1, select bank3
  1226  0703  1209               	bcf	9,4	;volatile
  1227                           
  1228                           ;do_am.c: 125: (TRISBbits.TRISB1 = 0);
  1229  0704  1683               	bsf	3,5	;RP0=1, select bank1
  1230  0705  1303               	bcf	3,6	;RP1=0, select bank1
  1231  0706  1086               	bcf	6,1	;volatile
  1232                           
  1233                           ;do_am.c: 126: ANSELHbits.ANS10 = 0;
  1234  0707  1683               	bsf	3,5	;RP0=1, select bank3
  1235  0708  1703               	bsf	3,6	;RP1=1, select bank3
  1236  0709  1109               	bcf	9,2	;volatile
  1237                           
  1238                           ;do_am.c: 128: (TRISBbits.TRISB2 = 0);
  1239  070A  1683               	bsf	3,5	;RP0=1, select bank1
  1240  070B  1303               	bcf	3,6	;RP1=0, select bank1
  1241  070C  1106               	bcf	6,2	;volatile
  1242                           
  1243                           ;do_am.c: 129: ANSELHbits.ANS8 = 0;
  1244  070D  1683               	bsf	3,5	;RP0=1, select bank3
  1245  070E  1703               	bsf	3,6	;RP1=1, select bank3
  1246  070F  1009               	bcf	9,0	;volatile
  1247                           
  1248                           ;do_am.c: 131: (TRISBbits.TRISB3 = 0);
  1249  0710  1683               	bsf	3,5	;RP0=1, select bank1
  1250  0711  1303               	bcf	3,6	;RP1=0, select bank1
  1251  0712  1186               	bcf	6,3	;volatile
  1252                           
  1253                           ;do_am.c: 132: ANSELHbits.ANS9 = 0;
  1254  0713  1683               	bsf	3,5	;RP0=1, select bank3
  1255  0714  1703               	bsf	3,6	;RP1=1, select bank3
  1256  0715  1089               	bcf	9,1	;volatile
  1257  0716  0008               	return
  1258  0717                     __end_of_TuneButtonInit:	
  1259                           
  1260                           	psect	text2
  1261  05A5                     __ptext2:	
  1262 ;; *************** function _LCDWriteString *****************
  1263 ;; Defined at:
  1264 ;;		line 279 in file "lcd_hd44780_pic16.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  msg             1    wreg     PTR const unsigned char 
  1267 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(4), 
  1268 ;;		 -> STR_4(4), STR_3(5), STR_2(4), STR_1(17), 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  msg             1   33[BANK0 ] PTR const unsigned char 
  1271 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(4), 
  1272 ;;		 -> STR_4(4), STR_3(5), STR_2(4), STR_1(17), 
  1273 ;;  cc              1   32[BANK0 ] char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         0       0       0       0       0
  1284 ;;      Locals:         0       2       0       0       0
  1285 ;;      Temps:          0       1       0       0       0
  1286 ;;      Totals:         0       3       0       0       0
  1287 ;;Total ram usage:        3 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    6
  1290 ;; This function calls:
  1291 ;;		_LCDByte
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           
  1298                           ;psect for function _LCDWriteString
  1299  05A5                     _LCDWriteString:	
  1300                           
  1301                           ;incstack = 0
  1302                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1303                           ;LCDWriteString@msg stored from wreg
  1304  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1305  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1306  05A7  00C1               	movwf	LCDWriteString@msg
  1307  05A8                     l2219:	
  1308                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  1309                           
  1310  05A8  0841               	movf	LCDWriteString@msg,w
  1311  05A9  0084               	movwf	4
  1312  05AA  120A  118A  2717  120A  118A  	fcall	stringdir
  1313  05AF  3A00               	xorlw	0
  1314  05B0  1903               	btfsc	3,2
  1315  05B1  0008               	return
  1316                           
  1317                           ;lcd_hd44780_pic16.c: 282: {
  1318                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  1319  05B2  0841               	movf	LCDWriteString@msg,w
  1320  05B3  0084               	movwf	4
  1321  05B4  120A  118A  2717  120A  118A  	fcall	stringdir
  1322  05B9  3A25               	xorlw	37
  1323  05BA  1D03               	skipz
  1324  05BB  2DE0               	goto	l2215
  1325                           
  1326                           ;lcd_hd44780_pic16.c: 285: {
  1327                           ;lcd_hd44780_pic16.c: 286: msg++;
  1328  05BC  3001               	movlw	1
  1329  05BD  00BF               	movwf	??_LCDWriteString
  1330  05BE  083F               	movf	??_LCDWriteString,w
  1331  05BF  07C1               	addwf	LCDWriteString@msg,f
  1332                           
  1333                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  1334  05C0  0841               	movf	LCDWriteString@msg,w
  1335  05C1  0084               	movwf	4
  1336  05C2  120A  118A  2717  120A  118A  	fcall	stringdir
  1337  05C7  3ED0               	addlw	-48
  1338  05C8  00BF               	movwf	??_LCDWriteString
  1339  05C9  083F               	movf	??_LCDWriteString,w
  1340  05CA  00C0               	movwf	LCDWriteString@cc
  1341                           
  1342                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  1343  05CB  1BC0               	btfsc	LCDWriteString@cc,7
  1344  05CC  2DD6               	goto	l2211
  1345  05CD  0840               	movf	LCDWriteString@cc,w
  1346  05CE  3A80               	xorlw	128
  1347  05CF  3E78               	addlw	-136
  1348  05D0  1803               	skipnc
  1349  05D1  2DD6               	goto	l2211
  1350                           
  1351                           ;lcd_hd44780_pic16.c: 290: {
  1352                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  1353  05D2  01B8               	clrf	LCDByte@isdata
  1354  05D3  0AB8               	incf	LCDByte@isdata,f
  1355  05D4  0840               	movf	LCDWriteString@cc,w
  1356  05D5  2DEB               	goto	L2
  1357  05D6                     l2211:	
  1358                           ;lcd_hd44780_pic16.c: 292: }
  1359                           
  1360                           
  1361                           ;lcd_hd44780_pic16.c: 293: else
  1362                           ;lcd_hd44780_pic16.c: 294: {
  1363                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  1364  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1365  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1366  05D8  01B8               	clrf	LCDByte@isdata
  1367  05D9  0AB8               	incf	LCDByte@isdata,f
  1368  05DA  3025               	movlw	37
  1369  05DB  120A  118A  254E  120A  118A  	fcall	_LCDByte
  1370  05E0                     l2215:	
  1371                           ;lcd_hd44780_pic16.c: 297: }
  1372                           ;lcd_hd44780_pic16.c: 298: }
  1373                           
  1374                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  1375                           
  1376                           
  1377                           ;lcd_hd44780_pic16.c: 299: else
  1378                           ;lcd_hd44780_pic16.c: 300: {
  1379                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  1380  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1381  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1382  05E2  01B8               	clrf	LCDByte@isdata
  1383  05E3  0AB8               	incf	LCDByte@isdata,f
  1384  05E4  0841               	movf	LCDWriteString@msg,w
  1385  05E5  0084               	movwf	4
  1386  05E6  120A  118A  2717  120A  118A  	fcall	stringdir
  1387  05EB                     L2:	
  1388  05EB  120A  118A  254E  120A  118A  	fcall	_LCDByte
  1389                           
  1390                           ;lcd_hd44780_pic16.c: 302: }
  1391                           ;lcd_hd44780_pic16.c: 303: msg++;
  1392  05F0  3001               	movlw	1
  1393  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1394  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1395  05F3  00BF               	movwf	??_LCDWriteString
  1396  05F4  083F               	movf	??_LCDWriteString,w
  1397  05F5  07C1               	addwf	LCDWriteString@msg,f
  1398  05F6  2DA8               	goto	l2219
  1399  05F7                     __end_of_LCDWriteString:	
  1400                           
  1401                           	psect	text3
  1402  0145                     __ptext3:	
  1403 ;; *************** function _LCDWriteInt *****************
  1404 ;; Defined at:
  1405 ;;		line 317 in file "lcd_hd44780_pic16.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  val             2   31[BANK0 ] int 
  1408 ;;  field_length    1   33[BANK0 ] char 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  str             5    0[BANK1 ] unsigned char [5]
  1411 ;;  i               2    7[BANK1 ] int 
  1412 ;;  j               2    5[BANK1 ] int 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1422 ;;      Params:         0       3       0       0       0
  1423 ;;      Locals:         0       0       9       0       0
  1424 ;;      Temps:          0       2       0       0       0
  1425 ;;      Totals:         0       5       9       0       0
  1426 ;;Total ram usage:       14 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    6
  1429 ;; This function calls:
  1430 ;;		_LCDByte
  1431 ;;		___awdiv
  1432 ;;		___awmod
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function _LCDWriteInt
  1440  0145                     _LCDWriteInt:	
  1441                           
  1442                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  1443                           
  1444                           ;incstack = 0
  1445                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1446  0145  30A0               	movlw	LCDWriteInt@str& (0+255)
  1447  0146  0084               	movwf	4
  1448  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0149  084C               	movf	LCDWriteInt@F1632,w
  1451  014A  1383               	bcf	3,7	;select IRP bank1
  1452  014B  0080               	movwf	0
  1453  014C  0A84               	incf	4,f
  1454  014D  084D               	movf	LCDWriteInt@F1632+1,w
  1455  014E  0080               	movwf	0
  1456  014F  0A84               	incf	4,f
  1457  0150  084E               	movf	LCDWriteInt@F1632+2,w
  1458  0151  0080               	movwf	0
  1459  0152  0A84               	incf	4,f
  1460  0153  084F               	movf	LCDWriteInt@F1632+3,w
  1461  0154  0080               	movwf	0
  1462  0155  0A84               	incf	4,f
  1463  0156  0850               	movf	LCDWriteInt@F1632+4,w
  1464  0157  0080               	movwf	0
  1465                           
  1466                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  1467  0158  3004               	movlw	4
  1468  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1469  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1470  015B  00A7               	movwf	LCDWriteInt@i^(0+128)
  1471  015C  3000               	movlw	0
  1472  015D  00A8               	movwf	(LCDWriteInt@i^(0+128)+1)
  1473  015E  01A5               	clrf	LCDWriteInt@j^(0+128)
  1474  015F  01A6               	clrf	(LCDWriteInt@j+1)^(0+128)
  1475                           
  1476                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  1477  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0162  083F               	movf	LCDWriteInt@val,w
  1480  0163  0440               	iorwf	LCDWriteInt@val+1,w
  1481  0164  1D03               	btfss	3,2
  1482  0165  2969               	goto	l2231
  1483                           
  1484                           ;lcd_hd44780_pic16.c: 323: {
  1485                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  1486  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1487  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1488  0168  01A4               	clrf	(LCDWriteInt@str^(0+128)+4)
  1489  0169                     l2231:	
  1490                           
  1491                           ;lcd_hd44780_pic16.c: 325: }
  1492                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  1493  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1494  016A  1FC0               	btfss	LCDWriteInt@val+1,7
  1495  016B  297B               	goto	l2243
  1496                           
  1497                           ;lcd_hd44780_pic16.c: 328: {
  1498                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  1499  016C  01B8               	clrf	LCDByte@isdata
  1500  016D  0AB8               	incf	LCDByte@isdata,f
  1501  016E  302D               	movlw	45
  1502  016F  120A  118A  254E  120A  118A  	fcall	_LCDByte
  1503                           
  1504                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  1505  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1506  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1507  0176  09BF               	comf	LCDWriteInt@val,f
  1508  0177  09C0               	comf	LCDWriteInt@val+1,f
  1509  0178  0ABF               	incf	LCDWriteInt@val,f
  1510  0179  1903               	skipnz
  1511  017A  0AC0               	incf	LCDWriteInt@val+1,f
  1512  017B                     l2243:	
  1513                           ;lcd_hd44780_pic16.c: 331: }
  1514                           ;lcd_hd44780_pic16.c: 333: while(val)
  1515                           
  1516  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1517  017C  083F               	movf	LCDWriteInt@val,w
  1518  017D  0440               	iorwf	LCDWriteInt@val+1,w
  1519  017E  1903               	btfsc	3,2
  1520  017F  29B7               	goto	l2245
  1521                           
  1522                           ;lcd_hd44780_pic16.c: 334: {
  1523                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  1524  0180  300A               	movlw	10
  1525  0181  00B3               	movwf	___awmod@divisor
  1526  0182  3000               	movlw	0
  1527  0183  00B4               	movwf	___awmod@divisor+1
  1528  0184  0840               	movf	LCDWriteInt@val+1,w
  1529  0185  00B6               	movwf	___awmod@dividend+1
  1530  0186  083F               	movf	LCDWriteInt@val,w
  1531  0187  00B5               	movwf	___awmod@dividend
  1532  0188  120A  118A  2647  120A  118A  	fcall	___awmod
  1533  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1534  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1535  018F  0833               	movf	?___awmod,w
  1536  0190  00C2               	movwf	??_LCDWriteInt
  1537  0191  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0192  1303               	bcf	3,6	;RP1=0, select bank1
  1539  0193  0827               	movf	LCDWriteInt@i^(0+128),w
  1540  0194  3EA0               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1541  0195  0084               	movwf	4
  1542  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0198  0842               	movf	??_LCDWriteInt,w
  1545  0199  1383               	bcf	3,7	;select IRP bank1
  1546  019A  0080               	movwf	0
  1547                           
  1548                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  1549  019B  300A               	movlw	10
  1550  019C  00B3               	movwf	___awdiv@divisor
  1551  019D  3000               	movlw	0
  1552  019E  00B4               	movwf	___awdiv@divisor+1
  1553  019F  0840               	movf	LCDWriteInt@val+1,w
  1554  01A0  00B6               	movwf	___awdiv@dividend+1
  1555  01A1  083F               	movf	LCDWriteInt@val,w
  1556  01A2  00B5               	movwf	___awdiv@dividend
  1557  01A3  120A  118A  2441  120A  118A  	fcall	___awdiv
  1558  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1559  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1560  01AA  0834               	movf	?___awdiv+1,w
  1561  01AB  00C0               	movwf	LCDWriteInt@val+1
  1562  01AC  0833               	movf	?___awdiv,w
  1563  01AD  00BF               	movwf	LCDWriteInt@val
  1564                           
  1565                           ;lcd_hd44780_pic16.c: 337: i--;
  1566  01AE  30FF               	movlw	255
  1567  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1568  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1569  01B1  07A7               	addwf	LCDWriteInt@i^(0+128),f
  1570  01B2  1803               	skipnc
  1571  01B3  0AA8               	incf	(LCDWriteInt@i+1)^(0+128),f
  1572  01B4  30FF               	movlw	255
  1573  01B5  07A8               	addwf	(LCDWriteInt@i+1)^(0+128),f
  1574  01B6  297B               	goto	l2243
  1575  01B7                     l2245:	
  1576                           
  1577                           ;lcd_hd44780_pic16.c: 338: }
  1578                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  1579  01B7  0A41               	incf	LCDWriteInt@field_length,w
  1580  01B8  1903               	btfsc	3,2
  1581  01B9  29D3               	goto	l2253
  1582                           
  1583                           ;lcd_hd44780_pic16.c: 341: else
  1584                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  1585                           
  1586                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  1587  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1588  01BB  0841               	movf	LCDWriteInt@field_length,w
  1589  01BC  00C2               	movwf	??_LCDWriteInt
  1590  01BD  01C3               	clrf	??_LCDWriteInt+1
  1591  01BE  1BC2               	btfsc	??_LCDWriteInt,7
  1592  01BF  03C3               	decf	??_LCDWriteInt+1,f
  1593  01C0  09C2               	comf	??_LCDWriteInt,f
  1594  01C1  09C3               	comf	??_LCDWriteInt+1,f
  1595  01C2  0AC2               	incf	??_LCDWriteInt,f
  1596  01C3  1903               	skipnz
  1597  01C4  0AC3               	incf	??_LCDWriteInt+1,f
  1598  01C5  0842               	movf	??_LCDWriteInt,w
  1599  01C6  3E05               	addlw	5
  1600  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1601  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  1602  01C9  00A5               	movwf	LCDWriteInt@j^(0+128)
  1603  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1604  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1605  01CC  0843               	movf	??_LCDWriteInt+1,w
  1606  01CD  1803               	skipnc
  1607  01CE  3E01               	addlw	1
  1608  01CF  3E00               	addlw	0
  1609  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  1610  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  1611  01D2  00A6               	movwf	(LCDWriteInt@j+1)^(0+128)
  1612  01D3                     l2253:	
  1613                           
  1614                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  1615  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1616  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1617  01D5  0826               	movf	(LCDWriteInt@j+1)^(0+128),w
  1618  01D6  00A8               	movwf	(LCDWriteInt@i+1)^(0+128)
  1619  01D7  0825               	movf	LCDWriteInt@j^(0+128),w
  1620  01D8  00A7               	movwf	LCDWriteInt@i^(0+128)
  1621  01D9                     L3:	
  1622  01D9  0828               	movf	(LCDWriteInt@i+1)^(0+128),w
  1623  01DA  3A80               	xorlw	128
  1624  01DB  00FF               	movwf	127
  1625  01DC  3080               	movlw	128
  1626  01DD  027F               	subwf	127,w
  1627  01DE  1D03               	skipz
  1628  01DF  29E2               	goto	u2275
  1629  01E0  3005               	movlw	5
  1630  01E1  0227               	subwf	LCDWriteInt@i^(0+128),w
  1631  01E2                     u2275:	
  1632  01E2  1803               	btfsc	3,0
  1633  01E3  0008               	return
  1634                           
  1635                           ;lcd_hd44780_pic16.c: 346: {
  1636                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  1637  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1638  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1639  01E6  01B8               	clrf	LCDByte@isdata
  1640  01E7  0AB8               	incf	LCDByte@isdata,f
  1641  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1642  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1643  01EA  0827               	movf	LCDWriteInt@i^(0+128),w
  1644  01EB  3EA0               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1645  01EC  0084               	movwf	4
  1646  01ED  1383               	bcf	3,7	;select IRP bank1
  1647  01EE  0800               	movf	0,w
  1648  01EF  3E30               	addlw	48
  1649  01F0  120A  118A  254E  120A  118A  	fcall	_LCDByte
  1650  01F5  3001               	movlw	1
  1651  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  1652  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  1653  01F8  07A7               	addwf	LCDWriteInt@i^(0+128),f
  1654  01F9  1803               	skipnc
  1655  01FA  0AA8               	incf	(LCDWriteInt@i+1)^(0+128),f
  1656  01FB  3000               	movlw	0
  1657  01FC  07A8               	addwf	(LCDWriteInt@i+1)^(0+128),f
  1658  01FD  29D9               	goto	L3
  1659  01FE                     __end_of_LCDWriteInt:	
  1660                           
  1661                           	psect	text4
  1662  0647                     __ptext4:	
  1663 ;; *************** function ___awmod *****************
  1664 ;; Defined at:
  1665 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  divisor         2   19[BANK0 ] int 
  1668 ;;  dividend        2   21[BANK0 ] int 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  sign            1   25[BANK0 ] unsigned char 
  1671 ;;  counter         1   24[BANK0 ] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  2   19[BANK0 ] int 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1681 ;;      Params:         0       4       0       0       0
  1682 ;;      Locals:         0       2       0       0       0
  1683 ;;      Temps:          0       1       0       0       0
  1684 ;;      Totals:         0       7       0       0       0
  1685 ;;Total ram usage:        7 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    4
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_LCDWriteInt
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           
  1696                           ;psect for function ___awmod
  1697  0647                     ___awmod:	
  1698                           
  1699                           ;incstack = 0
  1700                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1701  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0648  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0649  01B9               	clrf	___awmod@sign
  1704  064A  1FB6               	btfss	___awmod@dividend+1,7
  1705  064B  2E53               	goto	l2041
  1706  064C  09B5               	comf	___awmod@dividend,f
  1707  064D  09B6               	comf	___awmod@dividend+1,f
  1708  064E  0AB5               	incf	___awmod@dividend,f
  1709  064F  1903               	skipnz
  1710  0650  0AB6               	incf	___awmod@dividend+1,f
  1711  0651  01B9               	clrf	___awmod@sign
  1712  0652  0AB9               	incf	___awmod@sign,f
  1713  0653                     l2041:	
  1714  0653  1FB4               	btfss	___awmod@divisor+1,7
  1715  0654  2E5A               	goto	l2045
  1716  0655  09B3               	comf	___awmod@divisor,f
  1717  0656  09B4               	comf	___awmod@divisor+1,f
  1718  0657  0AB3               	incf	___awmod@divisor,f
  1719  0658  1903               	skipnz
  1720  0659  0AB4               	incf	___awmod@divisor+1,f
  1721  065A                     l2045:	
  1722  065A  0833               	movf	___awmod@divisor,w
  1723  065B  0434               	iorwf	___awmod@divisor+1,w
  1724  065C  1903               	btfsc	3,2
  1725  065D  2E87               	goto	l2063
  1726  065E  01B8               	clrf	___awmod@counter
  1727  065F  0AB8               	incf	___awmod@counter,f
  1728  0660                     l2053:	
  1729  0660  1BB4               	btfsc	___awmod@divisor+1,7
  1730  0661  2E6E               	goto	l2055
  1731  0662  3001               	movlw	1
  1732  0663                     u1895:	
  1733  0663  1003               	clrc
  1734  0664  0DB3               	rlf	___awmod@divisor,f
  1735  0665  0DB4               	rlf	___awmod@divisor+1,f
  1736  0666  3EFF               	addlw	-1
  1737  0667  1D03               	skipz
  1738  0668  2E63               	goto	u1895
  1739  0669  3001               	movlw	1
  1740  066A  00B7               	movwf	??___awmod
  1741  066B  0837               	movf	??___awmod,w
  1742  066C  07B8               	addwf	___awmod@counter,f
  1743  066D  2E60               	goto	l2053
  1744  066E                     l2055:	
  1745  066E  0834               	movf	___awmod@divisor+1,w
  1746  066F  0236               	subwf	___awmod@dividend+1,w
  1747  0670  1D03               	skipz
  1748  0671  2E74               	goto	u1915
  1749  0672  0833               	movf	___awmod@divisor,w
  1750  0673  0235               	subwf	___awmod@dividend,w
  1751  0674                     u1915:	
  1752  0674  1C03               	skipc
  1753  0675  2E7C               	goto	l2059
  1754  0676  0833               	movf	___awmod@divisor,w
  1755  0677  02B5               	subwf	___awmod@dividend,f
  1756  0678  0834               	movf	___awmod@divisor+1,w
  1757  0679  1C03               	skipc
  1758  067A  03B6               	decf	___awmod@dividend+1,f
  1759  067B  02B6               	subwf	___awmod@dividend+1,f
  1760  067C                     l2059:	
  1761  067C  3001               	movlw	1
  1762  067D                     u1925:	
  1763  067D  1003               	clrc
  1764  067E  0CB4               	rrf	___awmod@divisor+1,f
  1765  067F  0CB3               	rrf	___awmod@divisor,f
  1766  0680  3EFF               	addlw	-1
  1767  0681  1D03               	skipz
  1768  0682  2E7D               	goto	u1925
  1769  0683  3001               	movlw	1
  1770  0684  02B8               	subwf	___awmod@counter,f
  1771  0685  1D03               	btfss	3,2
  1772  0686  2E6E               	goto	l2055
  1773  0687                     l2063:	
  1774  0687  0839               	movf	___awmod@sign,w
  1775  0688  1903               	btfsc	3,2
  1776  0689  2E8F               	goto	l2067
  1777  068A  09B5               	comf	___awmod@dividend,f
  1778  068B  09B6               	comf	___awmod@dividend+1,f
  1779  068C  0AB5               	incf	___awmod@dividend,f
  1780  068D  1903               	skipnz
  1781  068E  0AB6               	incf	___awmod@dividend+1,f
  1782  068F                     l2067:	
  1783  068F  0836               	movf	___awmod@dividend+1,w
  1784  0690  00B4               	movwf	?___awmod+1
  1785  0691  0835               	movf	___awmod@dividend,w
  1786  0692  00B3               	movwf	?___awmod
  1787  0693  0008               	return
  1788  0694                     __end_of___awmod:	
  1789                           
  1790                           	psect	text5
  1791  0441                     __ptext5:	
  1792 ;; *************** function ___awdiv *****************
  1793 ;; Defined at:
  1794 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  divisor         2   19[BANK0 ] int 
  1797 ;;  dividend        2   21[BANK0 ] int 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  quotient        2   26[BANK0 ] int 
  1800 ;;  sign            1   25[BANK0 ] unsigned char 
  1801 ;;  counter         1   24[BANK0 ] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  2   19[BANK0 ] int 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1811 ;;      Params:         0       4       0       0       0
  1812 ;;      Locals:         0       4       0       0       0
  1813 ;;      Temps:          0       1       0       0       0
  1814 ;;      Totals:         0       9       0       0       0
  1815 ;;Total ram usage:        9 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    4
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_LCDWriteInt
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function ___awdiv
  1827  0441                     ___awdiv:	
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1831  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1832  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1833  0443  01B9               	clrf	___awdiv@sign
  1834  0444  1FB4               	btfss	___awdiv@divisor+1,7
  1835  0445  2C4D               	goto	l1997
  1836  0446  09B3               	comf	___awdiv@divisor,f
  1837  0447  09B4               	comf	___awdiv@divisor+1,f
  1838  0448  0AB3               	incf	___awdiv@divisor,f
  1839  0449  1903               	skipnz
  1840  044A  0AB4               	incf	___awdiv@divisor+1,f
  1841  044B  01B9               	clrf	___awdiv@sign
  1842  044C  0AB9               	incf	___awdiv@sign,f
  1843  044D                     l1997:	
  1844  044D  1FB6               	btfss	___awdiv@dividend+1,7
  1845  044E  2C58               	goto	l2003
  1846  044F  09B5               	comf	___awdiv@dividend,f
  1847  0450  09B6               	comf	___awdiv@dividend+1,f
  1848  0451  0AB5               	incf	___awdiv@dividend,f
  1849  0452  1903               	skipnz
  1850  0453  0AB6               	incf	___awdiv@dividend+1,f
  1851  0454  3001               	movlw	1
  1852  0455  00B7               	movwf	??___awdiv
  1853  0456  0837               	movf	??___awdiv,w
  1854  0457  06B9               	xorwf	___awdiv@sign,f
  1855  0458                     l2003:	
  1856  0458  01BA               	clrf	___awdiv@quotient
  1857  0459  01BB               	clrf	___awdiv@quotient+1
  1858  045A  0833               	movf	___awdiv@divisor,w
  1859  045B  0434               	iorwf	___awdiv@divisor+1,w
  1860  045C  1903               	btfsc	3,2
  1861  045D  2C8F               	goto	l2025
  1862  045E  01B8               	clrf	___awdiv@counter
  1863  045F  0AB8               	incf	___awdiv@counter,f
  1864  0460                     l2013:	
  1865  0460  1BB4               	btfsc	___awdiv@divisor+1,7
  1866  0461  2C6E               	goto	l2015
  1867  0462  3001               	movlw	1
  1868  0463                     u1795:	
  1869  0463  1003               	clrc
  1870  0464  0DB3               	rlf	___awdiv@divisor,f
  1871  0465  0DB4               	rlf	___awdiv@divisor+1,f
  1872  0466  3EFF               	addlw	-1
  1873  0467  1D03               	skipz
  1874  0468  2C63               	goto	u1795
  1875  0469  3001               	movlw	1
  1876  046A  00B7               	movwf	??___awdiv
  1877  046B  0837               	movf	??___awdiv,w
  1878  046C  07B8               	addwf	___awdiv@counter,f
  1879  046D  2C60               	goto	l2013
  1880  046E                     l2015:	
  1881  046E  3001               	movlw	1
  1882  046F                     u1815:	
  1883  046F  1003               	clrc
  1884  0470  0DBA               	rlf	___awdiv@quotient,f
  1885  0471  0DBB               	rlf	___awdiv@quotient+1,f
  1886  0472  3EFF               	addlw	-1
  1887  0473  1D03               	skipz
  1888  0474  2C6F               	goto	u1815
  1889  0475  0834               	movf	___awdiv@divisor+1,w
  1890  0476  0236               	subwf	___awdiv@dividend+1,w
  1891  0477  1D03               	skipz
  1892  0478  2C7B               	goto	u1825
  1893  0479  0833               	movf	___awdiv@divisor,w
  1894  047A  0235               	subwf	___awdiv@dividend,w
  1895  047B                     u1825:	
  1896  047B  1C03               	skipc
  1897  047C  2C84               	goto	l2021
  1898  047D  0833               	movf	___awdiv@divisor,w
  1899  047E  02B5               	subwf	___awdiv@dividend,f
  1900  047F  0834               	movf	___awdiv@divisor+1,w
  1901  0480  1C03               	skipc
  1902  0481  03B6               	decf	___awdiv@dividend+1,f
  1903  0482  02B6               	subwf	___awdiv@dividend+1,f
  1904  0483  143A               	bsf	___awdiv@quotient,0
  1905  0484                     l2021:	
  1906  0484  3001               	movlw	1
  1907  0485                     u1835:	
  1908  0485  1003               	clrc
  1909  0486  0CB4               	rrf	___awdiv@divisor+1,f
  1910  0487  0CB3               	rrf	___awdiv@divisor,f
  1911  0488  3EFF               	addlw	-1
  1912  0489  1D03               	skipz
  1913  048A  2C85               	goto	u1835
  1914  048B  3001               	movlw	1
  1915  048C  02B8               	subwf	___awdiv@counter,f
  1916  048D  1D03               	btfss	3,2
  1917  048E  2C6E               	goto	l2015
  1918  048F                     l2025:	
  1919  048F  0839               	movf	___awdiv@sign,w
  1920  0490  1903               	btfsc	3,2
  1921  0491  2C97               	goto	l2029
  1922  0492  09BA               	comf	___awdiv@quotient,f
  1923  0493  09BB               	comf	___awdiv@quotient+1,f
  1924  0494  0ABA               	incf	___awdiv@quotient,f
  1925  0495  1903               	skipnz
  1926  0496  0ABB               	incf	___awdiv@quotient+1,f
  1927  0497                     l2029:	
  1928  0497  083B               	movf	___awdiv@quotient+1,w
  1929  0498  00B4               	movwf	?___awdiv+1
  1930  0499  083A               	movf	___awdiv@quotient,w
  1931  049A  00B3               	movwf	?___awdiv
  1932  049B  0008               	return
  1933  049C                     __end_of___awdiv:	
  1934                           
  1935                           	psect	text6
  1936  030B                     __ptext6:	
  1937 ;; *************** function _LCDInit *****************
  1938 ;; Defined at:
  1939 ;;		line 207 in file "lcd_hd44780_pic16.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  style           1    wreg     unsigned char 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  style           1   33[BANK0 ] unsigned char 
  1944 ;;  __i             1   34[BANK0 ] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       0       0       0       0
  1955 ;;      Locals:         0       2       0       0       0
  1956 ;;      Temps:          0       2       0       0       0
  1957 ;;      Totals:         0       4       0       0       0
  1958 ;;Total ram usage:        4 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    6
  1961 ;; This function calls:
  1962 ;;		_LCDBusyLoop
  1963 ;;		_LCDByte
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function _LCDInit
  1971  030B                     _LCDInit:	
  1972                           
  1973                           ;incstack = 0
  1974                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1975                           ;LCDInit@style stored from wreg
  1976  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1977  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1978  030D  00C1               	movwf	LCDInit@style
  1979                           
  1980                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  1981  030E  30C3               	movlw	195
  1982  030F  00C0               	movwf	??_LCDInit+1
  1983  0310  30CD               	movlw	205
  1984  0311  00BF               	movwf	??_LCDInit
  1985  0312                     u2457:	
  1986  0312  0BBF               	decfsz	??_LCDInit,f
  1987  0313  2B12               	goto	u2457
  1988  0314  0BC0               	decfsz	??_LCDInit+1,f
  1989  0315  2B12               	goto	u2457
  1990                           
  1991                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<4));
  1992  0316  300F               	movlw	15
  1993  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0319  00BF               	movwf	??_LCDInit
  1996  031A  083F               	movf	??_LCDInit,w
  1997  031B  1683               	bsf	3,5	;RP0=1, select bank1
  1998  031C  1303               	bcf	3,6	;RP1=0, select bank1
  1999  031D  0587               	andwf	7,f	;volatile
  2000                           
  2001                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC3=0;
  2002  031E  1187               	bcf	7,3	;volatile
  2003                           
  2004                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC1=0;
  2005  031F  1087               	bcf	7,1	;volatile
  2006                           
  2007                           ;lcd_hd44780_pic16.c: 216: TRISCbits.TRISC2=0;
  2008  0320  1107               	bcf	7,2	;volatile
  2009                           
  2010                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<4));
  2011  0321  300F               	movlw	15
  2012  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0324  00BF               	movwf	??_LCDInit
  2015  0325  083F               	movf	??_LCDInit,w
  2016  0326  0587               	andwf	7,f	;volatile
  2017                           
  2018                           ;lcd_hd44780_pic16.c: 220: (RC3=0);
  2019  0327  1187               	bcf	7,3	;volatile
  2020                           
  2021                           ;lcd_hd44780_pic16.c: 221: (RC2=0);
  2022  0328  1107               	bcf	7,2	;volatile
  2023                           
  2024                           ;lcd_hd44780_pic16.c: 222: (RC1=0);
  2025  0329  1087               	bcf	7,1	;volatile
  2026                           
  2027                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2028  032A  2B2B               	nop2	;2 cycle nop
  2029                           
  2030                           ;lcd_hd44780_pic16.c: 227: (RC3=1);
  2031  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2032  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2033  032D  1587               	bsf	7,3	;volatile
  2034                           
  2035                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<4);
  2036  032E  1687               	bsf	7,5	;volatile
  2037                           
  2038                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2039  032F  2B30               	nop2	;2 cycle nop
  2040  0330  2B31               	nop2	;2 cycle nop
  2041  0331  0000               	nop
  2042                           
  2043                           ;lcd_hd44780_pic16.c: 230: (RC3=0);
  2044  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0334  1187               	bcf	7,3	;volatile
  2047                           
  2048                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2049  0335  2B36               	nop2	;2 cycle nop
  2050  0336  2B37               	nop2	;2 cycle nop
  2051  0337  0000               	nop
  2052                           
  2053                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  2054  0338  120A  118A  2373  120A  118A  	fcall	_LCDBusyLoop
  2055                           
  2056                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  2057  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2058  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2059  033F  01B8               	clrf	LCDByte@isdata
  2060  0340  3028               	movlw	40
  2061  0341  120A  118A  254E  120A  118A  	fcall	_LCDByte
  2062                           
  2063                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  2064  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2066  0348  01B8               	clrf	LCDByte@isdata
  2067  0349  0841               	movf	LCDInit@style,w
  2068  034A  380C               	iorlw	12
  2069  034B  120A  118A  254E  120A  118A  	fcall	_LCDByte
  2070                           
  2071                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  2072  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0352  01B8               	clrf	LCDByte@isdata
  2075  0353  3040               	movlw	64
  2076  0354  120A  118A  254E  120A  118A  	fcall	_LCDByte
  2077                           
  2078                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  2079                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  2080  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2081  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2082  035B  01C2               	clrf	LCDInit@__i
  2083  035C                     L4:	
  2084  035C  3008               	movlw	8
  2085  035D  0242               	subwf	LCDInit@__i,w
  2086  035E  1803               	btfsc	3,0
  2087  035F  0008               	return
  2088                           
  2089                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  2090  0360  01B8               	clrf	LCDByte@isdata
  2091  0361  0AB8               	incf	LCDByte@isdata,f
  2092  0362  0842               	movf	LCDInit@__i,w
  2093  0363  3E44               	addlw	(low (___cgram| 0))& (0+255)
  2094  0364  0084               	movwf	4
  2095  0365  1383               	bcf	3,7	;select IRP bank0
  2096  0366  0800               	movf	0,w
  2097  0367  120A  118A  254E  120A  118A  	fcall	_LCDByte
  2098  036C  3001               	movlw	1
  2099  036D  1283               	bcf	3,5	;RP0=0, select bank0
  2100  036E  1303               	bcf	3,6	;RP1=0, select bank0
  2101  036F  00BF               	movwf	??_LCDInit
  2102  0370  083F               	movf	??_LCDInit,w
  2103  0371  07C2               	addwf	LCDInit@__i,f
  2104  0372  2B5C               	goto	L4
  2105  0373                     __end_of_LCDInit:	
  2106                           
  2107                           	psect	text7
  2108  0744                     __ptext7:	
  2109 ;; *************** function _LCDGotoXY *****************
  2110 ;; Defined at:
  2111 ;;		line 355 in file "lcd_hd44780_pic16.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  x               1    wreg     unsigned char 
  2114 ;;  y               1   31[BANK0 ] unsigned char 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  x               1   33[BANK0 ] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2126 ;;      Params:         0       1       0       0       0
  2127 ;;      Locals:         0       1       0       0       0
  2128 ;;      Temps:          0       1       0       0       0
  2129 ;;      Totals:         0       3       0       0       0
  2130 ;;Total ram usage:        3 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    6
  2133 ;; This function calls:
  2134 ;;		_LCDByte
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _LCDGotoXY
  2142  0744                     _LCDGotoXY:	
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2146                           ;LCDGotoXY@x stored from wreg
  2147  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0746  00C1               	movwf	LCDGotoXY@x
  2150                           
  2151                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  2152  0747  3014               	movlw	20
  2153  0748  0241               	subwf	LCDGotoXY@x,w
  2154  0749  1803               	btfsc	3,0
  2155  074A  0008               	return
  2156  074B  2F55               	goto	l2193
  2157  074C                     l148:	
  2158                           ;lcd_hd44780_pic16.c: 365: case 1:
  2159                           
  2160                           ;lcd_hd44780_pic16.c: 364: break;
  2161                           
  2162                           ;lcd_hd44780_pic16.c: 362: {
  2163                           ;lcd_hd44780_pic16.c: 363: case 0:
  2164                           
  2165                           ;lcd_hd44780_pic16.c: 361: switch(y)
  2166                           
  2167                           
  2168                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  2169  074C  1741               	bsf	LCDGotoXY@x,6
  2170                           
  2171                           ;lcd_hd44780_pic16.c: 367: break;
  2172  074D  2F63               	goto	l147
  2173  074E                     l2187:	
  2174                           ;lcd_hd44780_pic16.c: 368: case 2:
  2175                           
  2176                           
  2177                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  2178  074E  3014               	movlw	20
  2179  074F  2F51               	goto	L5
  2180  0750                     l2189:	
  2181                           ;lcd_hd44780_pic16.c: 371: case 3:
  2182                           
  2183                           ;lcd_hd44780_pic16.c: 370: break;
  2184                           
  2185                           
  2186                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  2187  0750  3054               	movlw	84
  2188  0751                     L5:	
  2189  0751  00C0               	movwf	??_LCDGotoXY
  2190  0752  0840               	movf	??_LCDGotoXY,w
  2191  0753  07C1               	addwf	LCDGotoXY@x,f
  2192                           
  2193                           ;lcd_hd44780_pic16.c: 374: }
  2194                           
  2195                           ;lcd_hd44780_pic16.c: 373: break;
  2196  0754  2F63               	goto	l147
  2197  0755                     l2193:	
  2198  0755  083F               	movf	LCDGotoXY@y,w
  2199                           
  2200                           ; Switch size 1, requested type "space"
  2201                           ; Number of cases is 4, Range of values is 0 to 3
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte           13     7 (average)
  2205                           ; direct_byte           20     8 (fixed)
  2206                           ; jumptable            260     6 (fixed)
  2207                           ;	Chosen strategy is simple_byte
  2208  0756  3A00               	xorlw	0	; case 0
  2209  0757  1903               	skipnz
  2210  0758  2F63               	goto	l147
  2211  0759  3A01               	xorlw	1	; case 1
  2212  075A  1903               	skipnz
  2213  075B  2F4C               	goto	l148
  2214  075C  3A03               	xorlw	3	; case 2
  2215  075D  1903               	skipnz
  2216  075E  2F4E               	goto	l2187
  2217  075F  3A01               	xorlw	1	; case 3
  2218  0760  1903               	skipnz
  2219  0761  2F50               	goto	l2189
  2220  0762  2F63               	goto	l147
  2221  0763                     l147:	
  2222                           
  2223                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  2224  0763  17C1               	bsf	LCDGotoXY@x,7
  2225                           
  2226                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  2227  0764  01B8               	clrf	LCDByte@isdata
  2228  0765  0841               	movf	LCDGotoXY@x,w
  2229  0766  120A  118A  254E   	fcall	_LCDByte
  2230  0769  0008               	return
  2231  076A                     __end_of_LCDGotoXY:	
  2232                           
  2233                           	psect	text8
  2234  054E                     __ptext8:	
  2235 ;; *************** function _LCDByte *****************
  2236 ;; Defined at:
  2237 ;;		line 80 in file "lcd_hd44780_pic16.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  c               1    wreg     unsigned char 
  2240 ;;  isdata          1   24[BANK0 ] unsigned char 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  c               1   29[BANK0 ] unsigned char 
  2243 ;;  temp            1   30[BANK0 ] unsigned char 
  2244 ;;  ln              1   28[BANK0 ] unsigned char 
  2245 ;;  hn              1   27[BANK0 ] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0, pclath, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2255 ;;      Params:         0       1       0       0       0
  2256 ;;      Locals:         0       4       0       0       0
  2257 ;;      Temps:          0       2       0       0       0
  2258 ;;      Totals:         0       7       0       0       0
  2259 ;;Total ram usage:        7 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:    5
  2262 ;; This function calls:
  2263 ;;		_LCDBusyLoop
  2264 ;; This function is called by:
  2265 ;;		_main
  2266 ;;		_LCDInit
  2267 ;;		_LCDWriteString
  2268 ;;		_LCDWriteInt
  2269 ;;		_LCDGotoXY
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _LCDByte
  2275  054E                     _LCDByte:	
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2279                           ;LCDByte@c stored from wreg
  2280  054E  1283               	bcf	3,5	;RP0=0, select bank0
  2281  054F  1303               	bcf	3,6	;RP1=0, select bank0
  2282  0550  00BD               	movwf	LCDByte@c
  2283                           
  2284                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  2285                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  2286                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  2287  0551  083D               	movf	LCDByte@c,w
  2288  0552  00B9               	movwf	??_LCDByte
  2289  0553  3004               	movlw	4
  2290  0554                     u1725:	
  2291  0554  1003               	clrc
  2292  0555  0CB9               	rrf	??_LCDByte,f
  2293  0556  3EFF               	addlw	-1
  2294  0557  1D03               	skipz
  2295  0558  2D54               	goto	u1725
  2296  0559  0839               	movf	??_LCDByte,w
  2297  055A  00BA               	movwf	??_LCDByte+1
  2298  055B  083A               	movf	??_LCDByte+1,w
  2299  055C  00BB               	movwf	LCDByte@hn
  2300                           
  2301                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  2302  055D  083D               	movf	LCDByte@c,w
  2303  055E  390F               	andlw	15
  2304  055F  00B9               	movwf	??_LCDByte
  2305  0560  0839               	movf	??_LCDByte,w
  2306  0561  00BC               	movwf	LCDByte@ln
  2307                           
  2308                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  2309  0562  0838               	movf	LCDByte@isdata,w
  2310  0563  1D03               	btfss	3,2
  2311  0564  2D67               	goto	l101
  2312                           
  2313                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  2314  0565  1087               	bcf	7,1	;volatile
  2315  0566  2D68               	goto	l102
  2316  0567                     l101:	
  2317                           
  2318                           ;lcd_hd44780_pic16.c: 97: else
  2319                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  2320  0567  1487               	bsf	7,1	;volatile
  2321  0568                     l102:	
  2322                           
  2323                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2324  0568  2D69               	nop2	;2 cycle nop
  2325                           
  2326                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  2327  0569  1283               	bcf	3,5	;RP0=0, select bank0
  2328  056A  1303               	bcf	3,6	;RP1=0, select bank0
  2329  056B  1587               	bsf	7,3	;volatile
  2330                           
  2331                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  2332  056C  083B               	movf	LCDByte@hn,w
  2333  056D  00B9               	movwf	??_LCDByte
  2334  056E  3004               	movlw	4
  2335  056F                     u1745:	
  2336  056F  1003               	clrc
  2337  0570  0DB9               	rlf	??_LCDByte,f
  2338  0571  3EFF               	addlw	-1
  2339  0572  1D03               	skipz
  2340  0573  2D6F               	goto	u1745
  2341  0574  0807               	movf	7,w	;volatile
  2342  0575  390F               	andlw	15
  2343  0576  0439               	iorwf	??_LCDByte,w
  2344  0577  00BA               	movwf	??_LCDByte+1
  2345  0578  083A               	movf	??_LCDByte+1,w
  2346  0579  00BE               	movwf	LCDByte@temp
  2347                           
  2348                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  2349  057A  083E               	movf	LCDByte@temp,w
  2350  057B  0087               	movwf	7	;volatile
  2351                           
  2352                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2353  057C  2D7D               	nop2	;2 cycle nop
  2354  057D  2D7E               	nop2	;2 cycle nop
  2355  057E  0000               	nop
  2356                           
  2357                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  2358  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0581  1187               	bcf	7,3	;volatile
  2361                           
  2362                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2363  0582  2D83               	nop2	;2 cycle nop
  2364  0583  2D84               	nop2	;2 cycle nop
  2365  0584  0000               	nop
  2366                           
  2367                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  2368  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2369  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2370  0587  1587               	bsf	7,3	;volatile
  2371                           
  2372                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  2373  0588  083C               	movf	LCDByte@ln,w
  2374  0589  00B9               	movwf	??_LCDByte
  2375  058A  3004               	movlw	4
  2376  058B                     u1755:	
  2377  058B  1003               	clrc
  2378  058C  0DB9               	rlf	??_LCDByte,f
  2379  058D  3EFF               	addlw	-1
  2380  058E  1D03               	skipz
  2381  058F  2D8B               	goto	u1755
  2382  0590  0807               	movf	7,w	;volatile
  2383  0591  390F               	andlw	15
  2384  0592  0439               	iorwf	??_LCDByte,w
  2385  0593  00BA               	movwf	??_LCDByte+1
  2386  0594  083A               	movf	??_LCDByte+1,w
  2387  0595  00BE               	movwf	LCDByte@temp
  2388                           
  2389                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  2390  0596  083E               	movf	LCDByte@temp,w
  2391  0597  0087               	movwf	7	;volatile
  2392                           
  2393                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2394  0598  2D99               	nop2	;2 cycle nop
  2395  0599  2D9A               	nop2	;2 cycle nop
  2396  059A  0000               	nop
  2397                           
  2398                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  2399  059B  1283               	bcf	3,5	;RP0=0, select bank0
  2400  059C  1303               	bcf	3,6	;RP1=0, select bank0
  2401  059D  1187               	bcf	7,3	;volatile
  2402                           
  2403                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2404  059E  2D9F               	nop2	;2 cycle nop
  2405  059F  2DA0               	nop2	;2 cycle nop
  2406  05A0  0000               	nop
  2407                           
  2408                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  2409  05A1  120A  118A  2373   	fcall	_LCDBusyLoop
  2410  05A4  0008               	return
  2411  05A5                     __end_of_LCDByte:	
  2412                           
  2413                           	psect	text9
  2414  0373                     __ptext9:	
  2415 ;; *************** function _LCDBusyLoop *****************
  2416 ;; Defined at:
  2417 ;;		line 135 in file "lcd_hd44780_pic16.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  status          1   23[BANK0 ] unsigned char 
  2422 ;;  temp            1   22[BANK0 ] unsigned char 
  2423 ;;  busy            1   21[BANK0 ] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         0       0       0       0       0
  2434 ;;      Locals:         0       3       0       0       0
  2435 ;;      Temps:          0       2       0       0       0
  2436 ;;      Totals:         0       5       0       0       0
  2437 ;;Total ram usage:        5 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    4
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_LCDByte
  2444 ;;		_LCDInit
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _LCDBusyLoop
  2450  0373                     _LCDBusyLoop:	
  2451                           
  2452                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2456  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0375  01B7               	clrf	LCDBusyLoop@status
  2459                           
  2460                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  2461  0376  30F0               	movlw	240
  2462  0377  00B3               	movwf	??_LCDBusyLoop
  2463  0378  0833               	movf	??_LCDBusyLoop,w
  2464  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2465  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2466  037B  0487               	iorwf	7,f	;volatile
  2467                           
  2468                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  2469  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2470  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2471  037E  1507               	bsf	7,2	;volatile
  2472                           
  2473                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  2474  037F  1087               	bcf	7,1	;volatile
  2475                           
  2476                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2477  0380  2B81               	nop2	;2 cycle nop
  2478  0381                     l1877:	
  2479                           ;lcd_hd44780_pic16.c: 153: do
  2480                           
  2481                           
  2482                           ;lcd_hd44780_pic16.c: 154: {
  2483                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  2484  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2485  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2486  0383  1587               	bsf	7,3	;volatile
  2487                           
  2488                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2489  0384  2B85               	nop2	;2 cycle nop
  2490                           
  2491                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  2492  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0387  0807               	movf	7,w	;volatile
  2495  0388  00B3               	movwf	??_LCDBusyLoop
  2496  0389  3004               	movlw	4
  2497  038A                     u1645:	
  2498  038A  1003               	clrc
  2499  038B  0CB3               	rrf	??_LCDBusyLoop,f
  2500  038C  3EFF               	addlw	-1
  2501  038D  1D03               	skipz
  2502  038E  2B8A               	goto	u1645
  2503  038F  0833               	movf	??_LCDBusyLoop,w
  2504  0390  00B4               	movwf	??_LCDBusyLoop+1
  2505  0391  0834               	movf	??_LCDBusyLoop+1,w
  2506  0392  00B7               	movwf	LCDBusyLoop@status
  2507                           
  2508                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  2509  0393  0837               	movf	LCDBusyLoop@status,w
  2510  0394  00B3               	movwf	??_LCDBusyLoop
  2511  0395  3003               	movlw	3
  2512  0396                     u1655:	
  2513  0396  1003               	clrc
  2514  0397  0DB3               	rlf	??_LCDBusyLoop,f
  2515  0398  3EFF               	addlw	-1
  2516  0399  1D03               	skipz
  2517  039A  2B96               	goto	u1655
  2518  039B  1003               	clrc
  2519  039C  0D33               	rlf	??_LCDBusyLoop,w
  2520  039D  00B4               	movwf	??_LCDBusyLoop+1
  2521  039E  0834               	movf	??_LCDBusyLoop+1,w
  2522  039F  00B7               	movwf	LCDBusyLoop@status
  2523                           
  2524                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2525  03A0  2BA1               	nop2	;2 cycle nop
  2526                           
  2527                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  2528  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2529  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2530  03A3  1187               	bcf	7,3	;volatile
  2531                           
  2532                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2533  03A4  2BA5               	nop2	;2 cycle nop
  2534  03A5  2BA6               	nop2	;2 cycle nop
  2535  03A6  0000               	nop
  2536                           
  2537                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  2538  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2539  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2540  03A9  1587               	bsf	7,3	;volatile
  2541                           
  2542                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2543  03AA  2BAB               	nop2	;2 cycle nop
  2544                           
  2545                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  2546  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2547  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2548  03AD  0807               	movf	7,w	;volatile
  2549  03AE  00B3               	movwf	??_LCDBusyLoop
  2550  03AF  3004               	movlw	4
  2551  03B0                     u1665:	
  2552  03B0  1003               	clrc
  2553  03B1  0CB3               	rrf	??_LCDBusyLoop,f
  2554  03B2  3EFF               	addlw	-1
  2555  03B3  1D03               	skipz
  2556  03B4  2BB0               	goto	u1665
  2557  03B5  0833               	movf	??_LCDBusyLoop,w
  2558  03B6  00B4               	movwf	??_LCDBusyLoop+1
  2559  03B7  0834               	movf	??_LCDBusyLoop+1,w
  2560  03B8  00B6               	movwf	LCDBusyLoop@temp
  2561                           
  2562                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  2563  03B9  300F               	movlw	15
  2564  03BA  00B3               	movwf	??_LCDBusyLoop
  2565  03BB  0833               	movf	??_LCDBusyLoop,w
  2566  03BC  05B6               	andwf	LCDBusyLoop@temp,f
  2567                           
  2568                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  2569  03BD  0837               	movf	LCDBusyLoop@status,w
  2570  03BE  0436               	iorwf	LCDBusyLoop@temp,w
  2571  03BF  00B3               	movwf	??_LCDBusyLoop
  2572  03C0  0833               	movf	??_LCDBusyLoop,w
  2573  03C1  00B7               	movwf	LCDBusyLoop@status
  2574                           
  2575                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  2576  03C2  0837               	movf	LCDBusyLoop@status,w
  2577  03C3  3980               	andlw	128
  2578  03C4  00B3               	movwf	??_LCDBusyLoop
  2579  03C5  0833               	movf	??_LCDBusyLoop,w
  2580  03C6  00B5               	movwf	LCDBusyLoop@busy
  2581                           
  2582                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2583  03C7  2BC8               	nop2	;2 cycle nop
  2584                           
  2585                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  2586  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2587  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2588  03CA  1187               	bcf	7,3	;volatile
  2589                           
  2590                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2591  03CB  2BCC               	nop2	;2 cycle nop
  2592  03CC  2BCD               	nop2	;2 cycle nop
  2593  03CD  0000               	nop
  2594                           
  2595                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  2596  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2597  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2598  03D0  0835               	movf	LCDBusyLoop@busy,w
  2599  03D1  1D03               	btfss	3,2
  2600  03D2  2B81               	goto	l1877
  2601                           
  2602                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  2603  03D3  1107               	bcf	7,2	;volatile
  2604                           
  2605                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  2606  03D4  300F               	movlw	15
  2607  03D5  00B3               	movwf	??_LCDBusyLoop
  2608  03D6  0833               	movf	??_LCDBusyLoop,w
  2609  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2610  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2611  03D9  0587               	andwf	7,f	;volatile
  2612  03DA  0008               	return
  2613  03DB                     __end_of_LCDBusyLoop:	
  2614                           
  2615                           	psect	text10
  2616  0790                     __ptext10:	
  2617 ;; *************** function _ADCInit *****************
  2618 ;; Defined at:
  2619 ;;		line 7 in file "adc_pic16.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    4
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _ADCInit
  2649  0790                     _ADCInit:	
  2650                           
  2651                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  2652                           
  2653                           ;incstack = 0
  2654                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  2655  0790  1683               	bsf	3,5	;RP0=1, select bank1
  2656  0791  1303               	bcf	3,6	;RP1=0, select bank1
  2657  0792  1686               	bsf	6,5	;volatile
  2658                           
  2659                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  2660  0793  1683               	bsf	3,5	;RP0=1, select bank3
  2661  0794  1703               	bsf	3,6	;RP1=1, select bank3
  2662  0795  1689               	bsf	9,5	;volatile
  2663                           
  2664                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  2665  0796  1683               	bsf	3,5	;RP0=1, select bank1
  2666  0797  1303               	bcf	3,6	;RP1=0, select bank1
  2667  0798  121F               	bcf	31,4	;volatile
  2668                           
  2669                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  2670  0799  30C0               	movlw	192
  2671  079A  1283               	bcf	3,5	;RP0=0, select bank0
  2672  079B  1303               	bcf	3,6	;RP1=0, select bank0
  2673  079C  049F               	iorwf	31,f	;volatile
  2674                           
  2675                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  2676  079D  1683               	bsf	3,5	;RP0=1, select bank1
  2677  079E  1303               	bcf	3,6	;RP1=0, select bank1
  2678  079F  179F               	bsf	31,7	;volatile
  2679                           
  2680                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  2681  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  2682  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  2683  07A2  141F               	bsf	31,0	;volatile
  2684  07A3  0008               	return
  2685  07A4                     __end_of_ADCInit:	
  2686                           
  2687                           	psect	text11
  2688  029D                     __ptext11:	
  2689 ;; *************** function _ISR *****************
  2690 ;; Defined at:
  2691 ;;		line 154 in file "do_am.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0
  2707 ;;      Temps:          0       7       0       0       0
  2708 ;;      Totals:         0       7       0       0       0
  2709 ;;Total ram usage:        7 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    3
  2712 ;; This function calls:
  2713 ;;		i1_LCDByte
  2714 ;;		i1_LCDGotoXY
  2715 ;;		i1_LCDWriteInt
  2716 ;;		i1_LCDWriteString
  2717 ;; This function is called by:
  2718 ;;		Interrupt level 1
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function _ISR
  2724  029D                     _ISR:	
  2725                           
  2726                           ;do_am.c: 156: if(INTCONbits.RBIF == 1)
  2727  029D  1C0B               	btfss	11,0	;volatile
  2728  029E  2AFB               	goto	i1l2423
  2729                           
  2730                           ;do_am.c: 157: {
  2731                           ;do_am.c: 159: {
  2732                           ;do_am.c: 161: (LCDByte(0b00000001,0));
  2733  029F  01F5               	clrf	i1LCDByte@isdata
  2734  02A0  3001               	movlw	1
  2735  02A1  120A  118A  24F5  120A  118A  	fcall	i1_LCDByte
  2736                           
  2737                           ;do_am.c: 163: { LCDGotoXY(0,0); LCDWriteString("Thermometer set:");};
  2738  02A6  01FC               	clrf	i1LCDGotoXY@y
  2739  02A7  3000               	movlw	0
  2740  02A8  120A  118A  276A  120A  118A  	fcall	i1_LCDGotoXY
  2741  02AD  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2742  02AE  120A  118A  25F7  120A  118A  	fcall	i1_LCDWriteString
  2743                           
  2744                           ;do_am.c: 165: tuneUpTemp++;
  2745  02B3  3001               	movlw	1
  2746  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2747  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2748  02B6  07D4               	addwf	_tuneUpTemp,f
  2749  02B7  1803               	skipnc
  2750  02B8  0AD5               	incf	_tuneUpTemp+1,f
  2751  02B9  3000               	movlw	0
  2752  02BA  07D5               	addwf	_tuneUpTemp+1,f
  2753                           
  2754                           ;do_am.c: 166: if(tuneUpTemp > 150)
  2755  02BB  0855               	movf	_tuneUpTemp+1,w
  2756  02BC  3A80               	xorlw	128
  2757  02BD  00FF               	movwf	127
  2758  02BE  3080               	movlw	128
  2759  02BF  027F               	subwf	127,w
  2760  02C0  1D03               	skipz
  2761  02C1  2AC4               	goto	u243_25
  2762  02C2  3097               	movlw	151
  2763  02C3  0254               	subwf	_tuneUpTemp,w
  2764  02C4                     u243_25:	
  2765  02C4  1C03               	skipc
  2766  02C5  2ACA               	goto	i1l2411
  2767                           
  2768                           ;do_am.c: 167: {
  2769                           ;do_am.c: 168: tuneUpTemp = 0;
  2770  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2771  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2772  02C8  01D4               	clrf	_tuneUpTemp
  2773  02C9  01D5               	clrf	_tuneUpTemp+1
  2774  02CA                     i1l2411:	
  2775                           
  2776                           ;do_am.c: 169: }
  2777                           ;do_am.c: 172: { LCDGotoXY(0,1); LCDWriteInt(tuneUpTemp,3);};
  2778  02CA  01FC               	clrf	i1LCDGotoXY@y
  2779  02CB  0AFC               	incf	i1LCDGotoXY@y,f
  2780  02CC  3000               	movlw	0
  2781  02CD  120A  118A  276A  120A  118A  	fcall	i1_LCDGotoXY
  2782  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2783  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2784  02D4  0855               	movf	_tuneUpTemp+1,w
  2785  02D5  00A1               	movwf	i1LCDWriteInt@val+1
  2786  02D6  0854               	movf	_tuneUpTemp,w
  2787  02D7  00A0               	movwf	i1LCDWriteInt@val
  2788  02D8  3003               	movlw	3
  2789  02D9  00AC               	movwf	??_ISR
  2790  02DA  082C               	movf	??_ISR,w
  2791  02DB  00A2               	movwf	i1LCDWriteInt@field_length
  2792  02DC  120A  118A  21FE  120A  118A  	fcall	i1_LCDWriteInt
  2793                           
  2794                           ;do_am.c: 175: LCDWriteString("%0C");
  2795  02E1  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2796  02E2  120A  118A  25F7  120A  118A  	fcall	i1_LCDWriteString
  2797                           
  2798                           ;do_am.c: 177: _delay((unsigned long)((500)*(20000000/4000.0)));
  2799  02E7  300D               	movlw	13
  2800  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2801  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2802  02EA  00AE               	movwf	??_ISR+2
  2803  02EB  30AF               	movlw	175
  2804  02EC  00AD               	movwf	??_ISR+1
  2805  02ED  30C1               	movlw	193
  2806  02EE  00AC               	movwf	??_ISR
  2807  02EF                     u246_27:	
  2808  02EF  0BAC               	decfsz	??_ISR,f
  2809  02F0  2AEF               	goto	u246_27
  2810  02F1  0BAD               	decfsz	??_ISR+1,f
  2811  02F2  2AEF               	goto	u246_27
  2812  02F3  0BAE               	decfsz	??_ISR+2,f
  2813  02F4  2AEF               	goto	u246_27
  2814  02F5  0000               	nop
  2815                           
  2816                           ;do_am.c: 178: tuneUpTempDir = 1;
  2817  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2818  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2819  02F8  01D1               	clrf	_tuneUpTempDir
  2820  02F9  0AD1               	incf	_tuneUpTempDir,f
  2821                           
  2822                           ;do_am.c: 180: }
  2823                           ;do_am.c: 181: INTCONbits.RBIF = 0;
  2824  02FA  100B               	bcf	11,0	;volatile
  2825  02FB                     i1l2423:	
  2826                           
  2827                           ;do_am.c: 182: }
  2828                           ;do_am.c: 183: IOCBbits.IOCB4 = 0;
  2829  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2830  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2831  02FD  1216               	bcf	22,4	;volatile
  2832  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2833  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0300  0832               	movf	??_ISR+6,w
  2835  0301  00FF               	movwf	127
  2836  0302  0831               	movf	??_ISR+5,w
  2837  0303  008A               	movwf	10
  2838  0304  0830               	movf	??_ISR+4,w
  2839  0305  0084               	movwf	4
  2840  0306  0E2F               	swapf	(??_ISR+3)^0,w
  2841  0307  0083               	movwf	3
  2842  0308  0EFE               	swapf	126,f
  2843  0309  0E7E               	swapf	126,w
  2844  030A  0009               	retfie
  2845  030B                     __end_of_ISR:	
  2846                           
  2847                           	psect	intentry
  2848  0004                     __pintentry:	
  2849                           ;incstack = 0
  2850                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2851                           
  2852  0004                     interrupt_function:	
  2853  007E                     saved_w	set	btemp
  2854  0004  00FE               	movwf	btemp
  2855  0005  0E03               	swapf	3,w
  2856  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0008  00AF               	movwf	??_ISR+3
  2859  0009  0804               	movf	4,w
  2860  000A  00B0               	movwf	??_ISR+4
  2861  000B  080A               	movf	10,w
  2862  000C  00B1               	movwf	??_ISR+5
  2863  000D  087F               	movf	btemp+1,w
  2864  000E  00B2               	movwf	??_ISR+6
  2865  000F  120A  118A  2A9D   	ljmp	_ISR
  2866                           
  2867                           	psect	text12
  2868  05F7                     __ptext12:	
  2869 ;; *************** function i1_LCDWriteString *****************
  2870 ;; Defined at:
  2871 ;;		line 279 in file "lcd_hd44780_pic16.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  msg             1    wreg     PTR const unsigned char 
  2874 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(4), 
  2875 ;;		 -> STR_4(4), STR_3(5), STR_2(4), STR_1(17), 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  msg             1    0[BANK0 ] PTR const unsigned char 
  2878 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(4), 
  2879 ;;		 -> STR_4(4), STR_3(5), STR_2(4), STR_1(17), 
  2880 ;;  LCDWriteStri    1    1[BANK0 ] char 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2890 ;;      Params:         0       0       0       0       0
  2891 ;;      Locals:         0       2       0       0       0
  2892 ;;      Temps:          1       0       0       0       0
  2893 ;;      Totals:         1       2       0       0       0
  2894 ;;Total ram usage:        3 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    2
  2897 ;; This function calls:
  2898 ;;		i1_LCDByte
  2899 ;; This function is called by:
  2900 ;;		_ISR
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function i1_LCDWriteString
  2906  05F7                     i1_LCDWriteString:	
  2907                           
  2908                           ;incstack = 0
  2909                           ; Regs used in i1_LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2910                           ;i1LCDWriteString@msg stored from wreg
  2911  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2912  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2913  05F9  00A0               	movwf	i1LCDWriteString@msg
  2914  05FA                     i1l2337:	
  2915                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  2916                           
  2917  05FA  0820               	movf	i1LCDWriteString@msg,w
  2918  05FB  0084               	movwf	4
  2919  05FC  120A  118A  2717  120A  118A  	fcall	stringdir
  2920  0601  3A00               	xorlw	0
  2921  0602  1903               	btfsc	3,2
  2922  0603  0008               	return
  2923                           
  2924                           ;lcd_hd44780_pic16.c: 282: {
  2925                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  2926  0604  0820               	movf	i1LCDWriteString@msg,w
  2927  0605  0084               	movwf	4
  2928  0606  120A  118A  2717  120A  118A  	fcall	stringdir
  2929  060B  3A25               	xorlw	37
  2930  060C  1D03               	skipz
  2931  060D  2E30               	goto	i1l2333
  2932                           
  2933                           ;lcd_hd44780_pic16.c: 285: {
  2934                           ;lcd_hd44780_pic16.c: 286: msg++;
  2935  060E  3001               	movlw	1
  2936  060F  00FC               	movwf	??i1_LCDWriteString
  2937  0610  087C               	movf	??i1_LCDWriteString,w
  2938  0611  07A0               	addwf	i1LCDWriteString@msg,f
  2939                           
  2940                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  2941  0612  0820               	movf	i1LCDWriteString@msg,w
  2942  0613  0084               	movwf	4
  2943  0614  120A  118A  2717  120A  118A  	fcall	stringdir
  2944  0619  3ED0               	addlw	-48
  2945  061A  00FC               	movwf	??i1_LCDWriteString
  2946  061B  087C               	movf	??i1_LCDWriteString,w
  2947  061C  00A1               	movwf	i1LCDWriteString@cc
  2948                           
  2949                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  2950  061D  1BA1               	btfsc	i1LCDWriteString@cc,7
  2951  061E  2E28               	goto	i1l2329
  2952  061F  0821               	movf	i1LCDWriteString@cc,w
  2953  0620  3A80               	xorlw	128
  2954  0621  3E78               	addlw	-136
  2955  0622  1803               	skipnc
  2956  0623  2E28               	goto	i1l2329
  2957                           
  2958                           ;lcd_hd44780_pic16.c: 290: {
  2959                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  2960  0624  01F5               	clrf	i1LCDByte@isdata
  2961  0625  0AF5               	incf	i1LCDByte@isdata,f
  2962  0626  0821               	movf	i1LCDWriteString@cc,w
  2963  0627  2E3B               	goto	L6
  2964  0628                     i1l2329:	
  2965                           ;lcd_hd44780_pic16.c: 292: }
  2966                           
  2967                           
  2968                           ;lcd_hd44780_pic16.c: 293: else
  2969                           ;lcd_hd44780_pic16.c: 294: {
  2970                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  2971  0628  01F5               	clrf	i1LCDByte@isdata
  2972  0629  0AF5               	incf	i1LCDByte@isdata,f
  2973  062A  3025               	movlw	37
  2974  062B  120A  118A  24F5  120A  118A  	fcall	i1_LCDByte
  2975  0630                     i1l2333:	
  2976                           ;lcd_hd44780_pic16.c: 297: }
  2977                           ;lcd_hd44780_pic16.c: 298: }
  2978                           
  2979                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  2980                           
  2981                           
  2982                           ;lcd_hd44780_pic16.c: 299: else
  2983                           ;lcd_hd44780_pic16.c: 300: {
  2984                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  2985  0630  01F5               	clrf	i1LCDByte@isdata
  2986  0631  0AF5               	incf	i1LCDByte@isdata,f
  2987  0632  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0633  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0634  0820               	movf	i1LCDWriteString@msg,w
  2990  0635  0084               	movwf	4
  2991  0636  120A  118A  2717  120A  118A  	fcall	stringdir
  2992  063B                     L6:	
  2993  063B  120A  118A  24F5  120A  118A  	fcall	i1_LCDByte
  2994                           
  2995                           ;lcd_hd44780_pic16.c: 302: }
  2996                           ;lcd_hd44780_pic16.c: 303: msg++;
  2997  0640  3001               	movlw	1
  2998  0641  00FC               	movwf	??i1_LCDWriteString
  2999  0642  087C               	movf	??i1_LCDWriteString,w
  3000  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0645  07A0               	addwf	i1LCDWriteString@msg,f
  3003  0646  2DFA               	goto	i1l2337
  3004  0647                     __end_ofi1_LCDWriteString:	
  3005                           
  3006                           	psect	text13
  3007  01FE                     __ptext13:	
  3008 ;; *************** function i1_LCDWriteInt *****************
  3009 ;; Defined at:
  3010 ;;		line 317 in file "lcd_hd44780_pic16.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  val             2    0[BANK0 ] int 
  3013 ;;  field_length    1    2[BANK0 ] char 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  3016 ;;  LCDWriteInt     2   10[BANK0 ] int 
  3017 ;;  LCDWriteInt     2    8[BANK0 ] int 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3027 ;;      Params:         0       3       0       0       0
  3028 ;;      Locals:         0       9       0       0       0
  3029 ;;      Temps:          2       0       0       0       0
  3030 ;;      Totals:         2      12       0       0       0
  3031 ;;Total ram usage:       14 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    2
  3034 ;; This function calls:
  3035 ;;		i1_LCDByte
  3036 ;;		i1___awdiv
  3037 ;;		i1___awmod
  3038 ;; This function is called by:
  3039 ;;		_ISR
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           
  3044                           ;psect for function i1_LCDWriteInt
  3045  01FE                     i1_LCDWriteInt:	
  3046                           
  3047                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  3048                           
  3049                           ;incstack = 0
  3050                           ; Regs used in i1_LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3051  01FE  3023               	movlw	i1LCDWriteInt@str& (0+255)
  3052  01FF  0084               	movwf	4
  3053  0200  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0201  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0202  084C               	movf	LCDWriteInt@F1632,w
  3056  0203  1383               	bcf	3,7	;select IRP bank0
  3057  0204  0080               	movwf	0
  3058  0205  0A84               	incf	4,f
  3059  0206  084D               	movf	LCDWriteInt@F1632+1,w
  3060  0207  0080               	movwf	0
  3061  0208  0A84               	incf	4,f
  3062  0209  084E               	movf	LCDWriteInt@F1632+2,w
  3063  020A  0080               	movwf	0
  3064  020B  0A84               	incf	4,f
  3065  020C  084F               	movf	LCDWriteInt@F1632+3,w
  3066  020D  0080               	movwf	0
  3067  020E  0A84               	incf	4,f
  3068  020F  0850               	movf	LCDWriteInt@F1632+4,w
  3069  0210  0080               	movwf	0
  3070                           
  3071                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  3072  0211  3004               	movlw	4
  3073  0212  00AA               	movwf	i1LCDWriteInt@i
  3074  0213  3000               	movlw	0
  3075  0214  00AB               	movwf	i1LCDWriteInt@i+1
  3076  0215  01A8               	clrf	i1LCDWriteInt@j
  3077  0216  01A9               	clrf	i1LCDWriteInt@j+1
  3078                           
  3079                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  3080  0217  0820               	movf	i1LCDWriteInt@val,w
  3081  0218  0421               	iorwf	i1LCDWriteInt@val+1,w
  3082  0219  1903               	btfsc	3,2
  3083                           
  3084                           ;lcd_hd44780_pic16.c: 323: {
  3085                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  3086  021A  01A7               	clrf	i1LCDWriteInt@str+4
  3087                           
  3088                           ;lcd_hd44780_pic16.c: 325: }
  3089                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  3090  021B  1FA1               	btfss	i1LCDWriteInt@val+1,7
  3091  021C  2A2C               	goto	i1l2361
  3092                           
  3093                           ;lcd_hd44780_pic16.c: 328: {
  3094                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  3095  021D  01F5               	clrf	i1LCDByte@isdata
  3096  021E  0AF5               	incf	i1LCDByte@isdata,f
  3097  021F  302D               	movlw	45
  3098  0220  120A  118A  24F5  120A  118A  	fcall	i1_LCDByte
  3099                           
  3100                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  3101  0225  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0226  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0227  09A0               	comf	i1LCDWriteInt@val,f
  3104  0228  09A1               	comf	i1LCDWriteInt@val+1,f
  3105  0229  0AA0               	incf	i1LCDWriteInt@val,f
  3106  022A  1903               	skipnz
  3107  022B  0AA1               	incf	i1LCDWriteInt@val+1,f
  3108  022C                     i1l2361:	
  3109                           ;lcd_hd44780_pic16.c: 331: }
  3110                           ;lcd_hd44780_pic16.c: 333: while(val)
  3111                           
  3112  022C  0820               	movf	i1LCDWriteInt@val,w
  3113  022D  0421               	iorwf	i1LCDWriteInt@val+1,w
  3114  022E  1903               	btfsc	3,2
  3115  022F  2A61               	goto	i1l2363
  3116                           
  3117                           ;lcd_hd44780_pic16.c: 334: {
  3118                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  3119  0230  300A               	movlw	10
  3120  0231  00F0               	movwf	i1___awmod@divisor
  3121  0232  3000               	movlw	0
  3122  0233  00F1               	movwf	i1___awmod@divisor+1
  3123  0234  0821               	movf	i1LCDWriteInt@val+1,w
  3124  0235  00F3               	movwf	i1___awmod@dividend+1
  3125  0236  0820               	movf	i1LCDWriteInt@val,w
  3126  0237  00F2               	movwf	i1___awmod@dividend
  3127  0238  120A  118A  2694  120A  118A  	fcall	i1___awmod
  3128  023D  0870               	movf	?i1___awmod,w
  3129  023E  00FC               	movwf	??i1_LCDWriteInt
  3130  023F  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0240  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0241  082A               	movf	i1LCDWriteInt@i,w
  3133  0242  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  3134  0243  0084               	movwf	4
  3135  0244  087C               	movf	??i1_LCDWriteInt,w
  3136  0245  1383               	bcf	3,7	;select IRP bank0
  3137  0246  0080               	movwf	0
  3138                           
  3139                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  3140  0247  300A               	movlw	10
  3141  0248  00F0               	movwf	i1___awdiv@divisor
  3142  0249  3000               	movlw	0
  3143  024A  00F1               	movwf	i1___awdiv@divisor+1
  3144  024B  0821               	movf	i1LCDWriteInt@val+1,w
  3145  024C  00F3               	movwf	i1___awdiv@dividend+1
  3146  024D  0820               	movf	i1LCDWriteInt@val,w
  3147  024E  00F2               	movwf	i1___awdiv@dividend
  3148  024F  120A  118A  249C  120A  118A  	fcall	i1___awdiv
  3149  0254  0871               	movf	?i1___awdiv+1,w
  3150  0255  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0256  1303               	bcf	3,6	;RP1=0, select bank0
  3152  0257  00A1               	movwf	i1LCDWriteInt@val+1
  3153  0258  0870               	movf	?i1___awdiv,w
  3154  0259  00A0               	movwf	i1LCDWriteInt@val
  3155                           
  3156                           ;lcd_hd44780_pic16.c: 337: i--;
  3157  025A  30FF               	movlw	255
  3158  025B  07AA               	addwf	i1LCDWriteInt@i,f
  3159  025C  1803               	skipnc
  3160  025D  0AAB               	incf	i1LCDWriteInt@i+1,f
  3161  025E  30FF               	movlw	255
  3162  025F  07AB               	addwf	i1LCDWriteInt@i+1,f
  3163  0260  2A2C               	goto	i1l2361
  3164  0261                     i1l2363:	
  3165                           
  3166                           ;lcd_hd44780_pic16.c: 338: }
  3167                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  3168  0261  0A22               	incf	i1LCDWriteInt@field_length,w
  3169  0262  1903               	btfsc	3,2
  3170  0263  2A76               	goto	i1l2371
  3171                           
  3172                           ;lcd_hd44780_pic16.c: 341: else
  3173                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  3174                           
  3175                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  3176  0264  0822               	movf	i1LCDWriteInt@field_length,w
  3177  0265  00FC               	movwf	??i1_LCDWriteInt
  3178  0266  01FD               	clrf	??i1_LCDWriteInt+1
  3179  0267  1BFC               	btfsc	??i1_LCDWriteInt,7
  3180  0268  03FD               	decf	??i1_LCDWriteInt+1,f
  3181  0269  09FC               	comf	??i1_LCDWriteInt,f
  3182  026A  09FD               	comf	??i1_LCDWriteInt+1,f
  3183  026B  0AFC               	incf	??i1_LCDWriteInt,f
  3184  026C  1903               	skipnz
  3185  026D  0AFD               	incf	??i1_LCDWriteInt+1,f
  3186  026E  087C               	movf	??i1_LCDWriteInt,w
  3187  026F  3E05               	addlw	5
  3188  0270  00A8               	movwf	i1LCDWriteInt@j
  3189  0271  087D               	movf	??i1_LCDWriteInt+1,w
  3190  0272  1803               	skipnc
  3191  0273  3E01               	addlw	1
  3192  0274  3E00               	addlw	0
  3193  0275  00A9               	movwf	i1LCDWriteInt@j+1
  3194  0276                     i1l2371:	
  3195                           
  3196                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  3197  0276  0829               	movf	i1LCDWriteInt@j+1,w
  3198  0277  00AB               	movwf	i1LCDWriteInt@i+1
  3199  0278  0828               	movf	i1LCDWriteInt@j,w
  3200  0279  00AA               	movwf	i1LCDWriteInt@i
  3201  027A                     L7:	
  3202  027A  082B               	movf	i1LCDWriteInt@i+1,w
  3203  027B  3A80               	xorlw	128
  3204  027C  00FF               	movwf	127
  3205  027D  3080               	movlw	128
  3206  027E  027F               	subwf	127,w
  3207  027F  1D03               	skipz
  3208  0280  2A83               	goto	u239_25
  3209  0281  3005               	movlw	5
  3210  0282  022A               	subwf	i1LCDWriteInt@i,w
  3211  0283                     u239_25:	
  3212  0283  1803               	btfsc	3,0
  3213  0284  0008               	return
  3214                           
  3215                           ;lcd_hd44780_pic16.c: 346: {
  3216                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  3217  0285  01F5               	clrf	i1LCDByte@isdata
  3218  0286  0AF5               	incf	i1LCDByte@isdata,f
  3219  0287  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0288  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0289  082A               	movf	i1LCDWriteInt@i,w
  3222  028A  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  3223  028B  0084               	movwf	4
  3224  028C  1383               	bcf	3,7	;select IRP bank0
  3225  028D  0800               	movf	0,w
  3226  028E  3E30               	addlw	48
  3227  028F  120A  118A  24F5  120A  118A  	fcall	i1_LCDByte
  3228  0294  3001               	movlw	1
  3229  0295  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0296  1303               	bcf	3,6	;RP1=0, select bank0
  3231  0297  07AA               	addwf	i1LCDWriteInt@i,f
  3232  0298  1803               	skipnc
  3233  0299  0AAB               	incf	i1LCDWriteInt@i+1,f
  3234  029A  3000               	movlw	0
  3235  029B  07AB               	addwf	i1LCDWriteInt@i+1,f
  3236  029C  2A7A               	goto	L7
  3237  029D                     __end_ofi1_LCDWriteInt:	
  3238                           
  3239                           	psect	text14
  3240  0694                     __ptext14:	
  3241 ;; *************** function i1___awmod *****************
  3242 ;; Defined at:
  3243 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  divisor         2    0[COMMON] int 
  3246 ;;  dividend        2    2[COMMON] int 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  __awmod         1    6[COMMON] unsigned char 
  3249 ;;  __awmod         1    5[COMMON] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  2    0[COMMON] int 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3259 ;;      Params:         4       0       0       0       0
  3260 ;;      Locals:         2       0       0       0       0
  3261 ;;      Temps:          1       0       0       0       0
  3262 ;;      Totals:         7       0       0       0       0
  3263 ;;Total ram usage:        7 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		i1_LCDWriteInt
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           
  3273                           ;psect for function i1___awmod
  3274  0694                     i1___awmod:	
  3275                           
  3276                           ;incstack = 0
  3277                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  3278  0694  01F6               	clrf	i1___awmod@sign
  3279  0695  1FF3               	btfss	i1___awmod@dividend+1,7
  3280  0696  2E9E               	goto	i1l2153
  3281  0697  09F2               	comf	i1___awmod@dividend,f
  3282  0698  09F3               	comf	i1___awmod@dividend+1,f
  3283  0699  0AF2               	incf	i1___awmod@dividend,f
  3284  069A  1903               	skipnz
  3285  069B  0AF3               	incf	i1___awmod@dividend+1,f
  3286  069C  01F6               	clrf	i1___awmod@sign
  3287  069D  0AF6               	incf	i1___awmod@sign,f
  3288  069E                     i1l2153:	
  3289  069E  1FF1               	btfss	i1___awmod@divisor+1,7
  3290  069F  2EA5               	goto	i1l2157
  3291  06A0  09F0               	comf	i1___awmod@divisor,f
  3292  06A1  09F1               	comf	i1___awmod@divisor+1,f
  3293  06A2  0AF0               	incf	i1___awmod@divisor,f
  3294  06A3  1903               	skipnz
  3295  06A4  0AF1               	incf	i1___awmod@divisor+1,f
  3296  06A5                     i1l2157:	
  3297  06A5  0870               	movf	i1___awmod@divisor,w
  3298  06A6  0471               	iorwf	i1___awmod@divisor+1,w
  3299  06A7  1903               	btfsc	3,2
  3300  06A8  2ED2               	goto	i1l2175
  3301  06A9  01F5               	clrf	i1___awmod@counter
  3302  06AA  0AF5               	incf	i1___awmod@counter,f
  3303  06AB                     i1l2165:	
  3304  06AB  1BF1               	btfsc	i1___awmod@divisor+1,7
  3305  06AC  2EB9               	goto	i1l2167
  3306  06AD  3001               	movlw	1
  3307  06AE                     u212_25:	
  3308  06AE  1003               	clrc
  3309  06AF  0DF0               	rlf	i1___awmod@divisor,f
  3310  06B0  0DF1               	rlf	i1___awmod@divisor+1,f
  3311  06B1  3EFF               	addlw	-1
  3312  06B2  1D03               	skipz
  3313  06B3  2EAE               	goto	u212_25
  3314  06B4  3001               	movlw	1
  3315  06B5  00F4               	movwf	??i1___awmod
  3316  06B6  0874               	movf	??i1___awmod,w
  3317  06B7  07F5               	addwf	i1___awmod@counter,f
  3318  06B8  2EAB               	goto	i1l2165
  3319  06B9                     i1l2167:	
  3320  06B9  0871               	movf	i1___awmod@divisor+1,w
  3321  06BA  0273               	subwf	i1___awmod@dividend+1,w
  3322  06BB  1D03               	skipz
  3323  06BC  2EBF               	goto	u214_25
  3324  06BD  0870               	movf	i1___awmod@divisor,w
  3325  06BE  0272               	subwf	i1___awmod@dividend,w
  3326  06BF                     u214_25:	
  3327  06BF  1C03               	skipc
  3328  06C0  2EC7               	goto	i1l2171
  3329  06C1  0870               	movf	i1___awmod@divisor,w
  3330  06C2  02F2               	subwf	i1___awmod@dividend,f
  3331  06C3  0871               	movf	i1___awmod@divisor+1,w
  3332  06C4  1C03               	skipc
  3333  06C5  03F3               	decf	i1___awmod@dividend+1,f
  3334  06C6  02F3               	subwf	i1___awmod@dividend+1,f
  3335  06C7                     i1l2171:	
  3336  06C7  3001               	movlw	1
  3337  06C8                     u215_25:	
  3338  06C8  1003               	clrc
  3339  06C9  0CF1               	rrf	i1___awmod@divisor+1,f
  3340  06CA  0CF0               	rrf	i1___awmod@divisor,f
  3341  06CB  3EFF               	addlw	-1
  3342  06CC  1D03               	skipz
  3343  06CD  2EC8               	goto	u215_25
  3344  06CE  3001               	movlw	1
  3345  06CF  02F5               	subwf	i1___awmod@counter,f
  3346  06D0  1D03               	btfss	3,2
  3347  06D1  2EB9               	goto	i1l2167
  3348  06D2                     i1l2175:	
  3349  06D2  0876               	movf	i1___awmod@sign,w
  3350  06D3  1903               	btfsc	3,2
  3351  06D4  2EDA               	goto	i1l2179
  3352  06D5  09F2               	comf	i1___awmod@dividend,f
  3353  06D6  09F3               	comf	i1___awmod@dividend+1,f
  3354  06D7  0AF2               	incf	i1___awmod@dividend,f
  3355  06D8  1903               	skipnz
  3356  06D9  0AF3               	incf	i1___awmod@dividend+1,f
  3357  06DA                     i1l2179:	
  3358  06DA  0873               	movf	i1___awmod@dividend+1,w
  3359  06DB  00F1               	movwf	?i1___awmod+1
  3360  06DC  0872               	movf	i1___awmod@dividend,w
  3361  06DD  00F0               	movwf	?i1___awmod
  3362  06DE  0008               	return
  3363  06DF                     __end_ofi1___awmod:	
  3364                           
  3365                           	psect	text15
  3366  049C                     __ptext15:	
  3367 ;; *************** function i1___awdiv *****************
  3368 ;; Defined at:
  3369 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  divisor         2    0[COMMON] int 
  3372 ;;  dividend        2    2[COMMON] int 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  __awdiv         2    7[COMMON] int 
  3375 ;;  __awdiv         1    6[COMMON] unsigned char 
  3376 ;;  __awdiv         1    5[COMMON] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  2    0[COMMON] int 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         4       0       0       0       0
  3387 ;;      Locals:         4       0       0       0       0
  3388 ;;      Temps:          1       0       0       0       0
  3389 ;;      Totals:         9       0       0       0       0
  3390 ;;Total ram usage:        9 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		i1_LCDWriteInt
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function i1___awdiv
  3401  049C                     i1___awdiv:	
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  3405  049C  01F6               	clrf	i1___awdiv@sign
  3406  049D  1FF1               	btfss	i1___awdiv@divisor+1,7
  3407  049E  2CA6               	goto	i1l2109
  3408  049F  09F0               	comf	i1___awdiv@divisor,f
  3409  04A0  09F1               	comf	i1___awdiv@divisor+1,f
  3410  04A1  0AF0               	incf	i1___awdiv@divisor,f
  3411  04A2  1903               	skipnz
  3412  04A3  0AF1               	incf	i1___awdiv@divisor+1,f
  3413  04A4  01F6               	clrf	i1___awdiv@sign
  3414  04A5  0AF6               	incf	i1___awdiv@sign,f
  3415  04A6                     i1l2109:	
  3416  04A6  1FF3               	btfss	i1___awdiv@dividend+1,7
  3417  04A7  2CB1               	goto	i1l2115
  3418  04A8  09F2               	comf	i1___awdiv@dividend,f
  3419  04A9  09F3               	comf	i1___awdiv@dividend+1,f
  3420  04AA  0AF2               	incf	i1___awdiv@dividend,f
  3421  04AB  1903               	skipnz
  3422  04AC  0AF3               	incf	i1___awdiv@dividend+1,f
  3423  04AD  3001               	movlw	1
  3424  04AE  00F4               	movwf	??i1___awdiv
  3425  04AF  0874               	movf	??i1___awdiv,w
  3426  04B0  06F6               	xorwf	i1___awdiv@sign,f
  3427  04B1                     i1l2115:	
  3428  04B1  01F7               	clrf	i1___awdiv@quotient
  3429  04B2  01F8               	clrf	i1___awdiv@quotient+1
  3430  04B3  0870               	movf	i1___awdiv@divisor,w
  3431  04B4  0471               	iorwf	i1___awdiv@divisor+1,w
  3432  04B5  1903               	btfsc	3,2
  3433  04B6  2CE8               	goto	i1l2137
  3434  04B7  01F5               	clrf	i1___awdiv@counter
  3435  04B8  0AF5               	incf	i1___awdiv@counter,f
  3436  04B9                     i1l2125:	
  3437  04B9  1BF1               	btfsc	i1___awdiv@divisor+1,7
  3438  04BA  2CC7               	goto	i1l2127
  3439  04BB  3001               	movlw	1
  3440  04BC                     u202_25:	
  3441  04BC  1003               	clrc
  3442  04BD  0DF0               	rlf	i1___awdiv@divisor,f
  3443  04BE  0DF1               	rlf	i1___awdiv@divisor+1,f
  3444  04BF  3EFF               	addlw	-1
  3445  04C0  1D03               	skipz
  3446  04C1  2CBC               	goto	u202_25
  3447  04C2  3001               	movlw	1
  3448  04C3  00F4               	movwf	??i1___awdiv
  3449  04C4  0874               	movf	??i1___awdiv,w
  3450  04C5  07F5               	addwf	i1___awdiv@counter,f
  3451  04C6  2CB9               	goto	i1l2125
  3452  04C7                     i1l2127:	
  3453  04C7  3001               	movlw	1
  3454  04C8                     u204_25:	
  3455  04C8  1003               	clrc
  3456  04C9  0DF7               	rlf	i1___awdiv@quotient,f
  3457  04CA  0DF8               	rlf	i1___awdiv@quotient+1,f
  3458  04CB  3EFF               	addlw	-1
  3459  04CC  1D03               	skipz
  3460  04CD  2CC8               	goto	u204_25
  3461  04CE  0871               	movf	i1___awdiv@divisor+1,w
  3462  04CF  0273               	subwf	i1___awdiv@dividend+1,w
  3463  04D0  1D03               	skipz
  3464  04D1  2CD4               	goto	u205_25
  3465  04D2  0870               	movf	i1___awdiv@divisor,w
  3466  04D3  0272               	subwf	i1___awdiv@dividend,w
  3467  04D4                     u205_25:	
  3468  04D4  1C03               	skipc
  3469  04D5  2CDD               	goto	i1l2133
  3470  04D6  0870               	movf	i1___awdiv@divisor,w
  3471  04D7  02F2               	subwf	i1___awdiv@dividend,f
  3472  04D8  0871               	movf	i1___awdiv@divisor+1,w
  3473  04D9  1C03               	skipc
  3474  04DA  03F3               	decf	i1___awdiv@dividend+1,f
  3475  04DB  02F3               	subwf	i1___awdiv@dividend+1,f
  3476  04DC  1477               	bsf	i1___awdiv@quotient,0
  3477  04DD                     i1l2133:	
  3478  04DD  3001               	movlw	1
  3479  04DE                     u206_25:	
  3480  04DE  1003               	clrc
  3481  04DF  0CF1               	rrf	i1___awdiv@divisor+1,f
  3482  04E0  0CF0               	rrf	i1___awdiv@divisor,f
  3483  04E1  3EFF               	addlw	-1
  3484  04E2  1D03               	skipz
  3485  04E3  2CDE               	goto	u206_25
  3486  04E4  3001               	movlw	1
  3487  04E5  02F5               	subwf	i1___awdiv@counter,f
  3488  04E6  1D03               	btfss	3,2
  3489  04E7  2CC7               	goto	i1l2127
  3490  04E8                     i1l2137:	
  3491  04E8  0876               	movf	i1___awdiv@sign,w
  3492  04E9  1903               	btfsc	3,2
  3493  04EA  2CF0               	goto	i1l2141
  3494  04EB  09F7               	comf	i1___awdiv@quotient,f
  3495  04EC  09F8               	comf	i1___awdiv@quotient+1,f
  3496  04ED  0AF7               	incf	i1___awdiv@quotient,f
  3497  04EE  1903               	skipnz
  3498  04EF  0AF8               	incf	i1___awdiv@quotient+1,f
  3499  04F0                     i1l2141:	
  3500  04F0  0878               	movf	i1___awdiv@quotient+1,w
  3501  04F1  00F1               	movwf	?i1___awdiv+1
  3502  04F2  0877               	movf	i1___awdiv@quotient,w
  3503  04F3  00F0               	movwf	?i1___awdiv
  3504  04F4  0008               	return
  3505  04F5                     __end_ofi1___awdiv:	
  3506                           
  3507                           	psect	text16
  3508  076A                     __ptext16:	
  3509 ;; *************** function i1_LCDGotoXY *****************
  3510 ;; Defined at:
  3511 ;;		line 355 in file "lcd_hd44780_pic16.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  x               1    wreg     unsigned char 
  3514 ;;  y               1   12[COMMON] unsigned char 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  x               1    0[BANK0 ] unsigned char 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3526 ;;      Params:         1       0       0       0       0
  3527 ;;      Locals:         0       1       0       0       0
  3528 ;;      Temps:          1       0       0       0       0
  3529 ;;      Totals:         2       1       0       0       0
  3530 ;;Total ram usage:        3 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    2
  3533 ;; This function calls:
  3534 ;;		i1_LCDByte
  3535 ;; This function is called by:
  3536 ;;		_ISR
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function i1_LCDGotoXY
  3542  076A                     i1_LCDGotoXY:	
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3546                           ;i1LCDGotoXY@x stored from wreg
  3547  076A  1283               	bcf	3,5	;RP0=0, select bank0
  3548  076B  1303               	bcf	3,6	;RP1=0, select bank0
  3549  076C  00A0               	movwf	i1LCDGotoXY@x
  3550                           
  3551                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  3552  076D  3014               	movlw	20
  3553  076E  0220               	subwf	i1LCDGotoXY@x,w
  3554  076F  1803               	btfsc	3,0
  3555  0770  0008               	return
  3556  0771  2F7B               	goto	i1l2393
  3557  0772                     i1l148:	
  3558                           ;lcd_hd44780_pic16.c: 365: case 1:
  3559                           
  3560                           ;lcd_hd44780_pic16.c: 364: break;
  3561                           
  3562                           ;lcd_hd44780_pic16.c: 362: {
  3563                           ;lcd_hd44780_pic16.c: 363: case 0:
  3564                           
  3565                           ;lcd_hd44780_pic16.c: 361: switch(y)
  3566                           
  3567                           
  3568                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  3569  0772  1720               	bsf	i1LCDGotoXY@x,6
  3570                           
  3571                           ;lcd_hd44780_pic16.c: 367: break;
  3572  0773  2F89               	goto	i1l147
  3573  0774                     i1l2387:	
  3574                           ;lcd_hd44780_pic16.c: 368: case 2:
  3575                           
  3576                           
  3577                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  3578  0774  3014               	movlw	20
  3579  0775  2F77               	goto	L8
  3580  0776                     i1l2389:	
  3581                           ;lcd_hd44780_pic16.c: 371: case 3:
  3582                           
  3583                           ;lcd_hd44780_pic16.c: 370: break;
  3584                           
  3585                           
  3586                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  3587  0776  3054               	movlw	84
  3588  0777                     L8:	
  3589  0777  00FD               	movwf	??i1_LCDGotoXY
  3590  0778  087D               	movf	??i1_LCDGotoXY,w
  3591  0779  07A0               	addwf	i1LCDGotoXY@x,f
  3592                           
  3593                           ;lcd_hd44780_pic16.c: 374: }
  3594                           
  3595                           ;lcd_hd44780_pic16.c: 373: break;
  3596  077A  2F89               	goto	i1l147
  3597  077B                     i1l2393:	
  3598  077B  087C               	movf	i1LCDGotoXY@y,w
  3599                           
  3600                           ; Switch size 1, requested type "space"
  3601                           ; Number of cases is 4, Range of values is 0 to 3
  3602                           ; switch strategies available:
  3603                           ; Name         Instructions Cycles
  3604                           ; simple_byte           13     7 (average)
  3605                           ; direct_byte           20     8 (fixed)
  3606                           ; jumptable            260     6 (fixed)
  3607                           ;	Chosen strategy is simple_byte
  3608  077C  3A00               	xorlw	0	; case 0
  3609  077D  1903               	skipnz
  3610  077E  2F89               	goto	i1l147
  3611  077F  3A01               	xorlw	1	; case 1
  3612  0780  1903               	skipnz
  3613  0781  2F72               	goto	i1l148
  3614  0782  3A03               	xorlw	3	; case 2
  3615  0783  1903               	skipnz
  3616  0784  2F74               	goto	i1l2387
  3617  0785  3A01               	xorlw	1	; case 3
  3618  0786  1903               	skipnz
  3619  0787  2F76               	goto	i1l2389
  3620  0788  2F89               	goto	i1l147
  3621  0789                     i1l147:	
  3622                           
  3623                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  3624  0789  17A0               	bsf	i1LCDGotoXY@x,7
  3625                           
  3626                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  3627  078A  01F5               	clrf	i1LCDByte@isdata
  3628  078B  0820               	movf	i1LCDGotoXY@x,w
  3629  078C  120A  118A  24F5   	fcall	i1_LCDByte
  3630  078F  0008               	return
  3631  0790                     __end_ofi1_LCDGotoXY:	
  3632                           
  3633                           	psect	text17
  3634  04F5                     __ptext17:	
  3635 ;; *************** function i1_LCDByte *****************
  3636 ;; Defined at:
  3637 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  c               1    wreg     unsigned char 
  3640 ;;  isdata          1    5[COMMON] unsigned char 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  c               1    8[COMMON] unsigned char 
  3643 ;;  LCDByte         1   11[COMMON] unsigned char 
  3644 ;;  LCDByte         1   10[COMMON] unsigned char 
  3645 ;;  LCDByte         1    9[COMMON] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0, pclath, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3655 ;;      Params:         1       0       0       0       0
  3656 ;;      Locals:         4       0       0       0       0
  3657 ;;      Temps:          2       0       0       0       0
  3658 ;;      Totals:         7       0       0       0       0
  3659 ;;Total ram usage:        7 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    1
  3662 ;; This function calls:
  3663 ;;		i1_LCDBusyLoop
  3664 ;; This function is called by:
  3665 ;;		_ISR
  3666 ;;		i1_LCDWriteString
  3667 ;;		i1_LCDWriteInt
  3668 ;;		i1_LCDGotoXY
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           
  3673                           ;psect for function i1_LCDByte
  3674  04F5                     i1_LCDByte:	
  3675                           
  3676                           ;incstack = 0
  3677                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3678                           ;i1LCDByte@c stored from wreg
  3679  04F5  00F8               	movwf	i1LCDByte@c
  3680                           
  3681                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3682                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3683                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3684  04F6  0878               	movf	i1LCDByte@c,w
  3685  04F7  00F6               	movwf	??i1_LCDByte
  3686  04F8  3004               	movlw	4
  3687  04F9                     u195_25:	
  3688  04F9  1003               	clrc
  3689  04FA  0CF6               	rrf	??i1_LCDByte,f
  3690  04FB  3EFF               	addlw	-1
  3691  04FC  1D03               	skipz
  3692  04FD  2CF9               	goto	u195_25
  3693  04FE  0876               	movf	??i1_LCDByte,w
  3694  04FF  00F7               	movwf	??i1_LCDByte+1
  3695  0500  0877               	movf	??i1_LCDByte+1,w
  3696  0501  00F9               	movwf	i1LCDByte@hn
  3697                           
  3698                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3699  0502  0878               	movf	i1LCDByte@c,w
  3700  0503  390F               	andlw	15
  3701  0504  00F6               	movwf	??i1_LCDByte
  3702  0505  0876               	movf	??i1_LCDByte,w
  3703  0506  00FA               	movwf	i1LCDByte@ln
  3704                           
  3705                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3706  0507  0875               	movf	i1LCDByte@isdata,w
  3707  0508  1D03               	btfss	3,2
  3708  0509  2D0E               	goto	i1l101
  3709                           
  3710                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  3711  050A  1283               	bcf	3,5	;RP0=0, select bank0
  3712  050B  1303               	bcf	3,6	;RP1=0, select bank0
  3713  050C  1087               	bcf	7,1	;volatile
  3714  050D  2D11               	goto	i1l102
  3715  050E                     i1l101:	
  3716                           
  3717                           ;lcd_hd44780_pic16.c: 97: else
  3718                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  3719  050E  1283               	bcf	3,5	;RP0=0, select bank0
  3720  050F  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0510  1487               	bsf	7,1	;volatile
  3722  0511                     i1l102:	
  3723                           
  3724                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3725  0511  2D12               	nop2	;2 cycle nop
  3726                           
  3727                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  3728  0512  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0513  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0514  1587               	bsf	7,3	;volatile
  3731                           
  3732                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  3733  0515  0879               	movf	i1LCDByte@hn,w
  3734  0516  00F6               	movwf	??i1_LCDByte
  3735  0517  3004               	movlw	4
  3736  0518                     u197_25:	
  3737  0518  1003               	clrc
  3738  0519  0DF6               	rlf	??i1_LCDByte,f
  3739  051A  3EFF               	addlw	-1
  3740  051B  1D03               	skipz
  3741  051C  2D18               	goto	u197_25
  3742  051D  0807               	movf	7,w	;volatile
  3743  051E  390F               	andlw	15
  3744  051F  0476               	iorwf	??i1_LCDByte,w
  3745  0520  00F7               	movwf	??i1_LCDByte+1
  3746  0521  0877               	movf	??i1_LCDByte+1,w
  3747  0522  00FB               	movwf	i1LCDByte@temp
  3748                           
  3749                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3750  0523  087B               	movf	i1LCDByte@temp,w
  3751  0524  0087               	movwf	7	;volatile
  3752                           
  3753                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3754  0525  2D26               	nop2	;2 cycle nop
  3755  0526  2D27               	nop2	;2 cycle nop
  3756  0527  0000               	nop
  3757                           
  3758                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  3759  0528  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3761  052A  1187               	bcf	7,3	;volatile
  3762                           
  3763                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3764  052B  2D2C               	nop2	;2 cycle nop
  3765  052C  2D2D               	nop2	;2 cycle nop
  3766  052D  0000               	nop
  3767                           
  3768                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  3769  052E  1283               	bcf	3,5	;RP0=0, select bank0
  3770  052F  1303               	bcf	3,6	;RP1=0, select bank0
  3771  0530  1587               	bsf	7,3	;volatile
  3772                           
  3773                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  3774  0531  087A               	movf	i1LCDByte@ln,w
  3775  0532  00F6               	movwf	??i1_LCDByte
  3776  0533  3004               	movlw	4
  3777  0534                     u198_25:	
  3778  0534  1003               	clrc
  3779  0535  0DF6               	rlf	??i1_LCDByte,f
  3780  0536  3EFF               	addlw	-1
  3781  0537  1D03               	skipz
  3782  0538  2D34               	goto	u198_25
  3783  0539  0807               	movf	7,w	;volatile
  3784  053A  390F               	andlw	15
  3785  053B  0476               	iorwf	??i1_LCDByte,w
  3786  053C  00F7               	movwf	??i1_LCDByte+1
  3787  053D  0877               	movf	??i1_LCDByte+1,w
  3788  053E  00FB               	movwf	i1LCDByte@temp
  3789                           
  3790                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3791  053F  087B               	movf	i1LCDByte@temp,w
  3792  0540  0087               	movwf	7	;volatile
  3793                           
  3794                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3795  0541  2D42               	nop2	;2 cycle nop
  3796  0542  2D43               	nop2	;2 cycle nop
  3797  0543  0000               	nop
  3798                           
  3799                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  3800  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3801  0545  1303               	bcf	3,6	;RP1=0, select bank0
  3802  0546  1187               	bcf	7,3	;volatile
  3803                           
  3804                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3805  0547  2D48               	nop2	;2 cycle nop
  3806  0548  2D49               	nop2	;2 cycle nop
  3807  0549  0000               	nop
  3808                           
  3809                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3810  054A  120A  118A  23DB   	fcall	i1_LCDBusyLoop
  3811  054D  0008               	return
  3812  054E                     __end_ofi1_LCDByte:	
  3813                           
  3814                           	psect	text18
  3815  03DB                     __ptext18:	
  3816 ;; *************** function i1_LCDBusyLoop *****************
  3817 ;; Defined at:
  3818 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  3823 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  3824 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3834 ;;      Params:         0       0       0       0       0
  3835 ;;      Locals:         3       0       0       0       0
  3836 ;;      Temps:          2       0       0       0       0
  3837 ;;      Totals:         5       0       0       0       0
  3838 ;;Total ram usage:        5 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		i1_LCDByte
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function i1_LCDBusyLoop
  3849  03DB                     i1_LCDBusyLoop:	
  3850                           
  3851                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  3852                           
  3853                           ;incstack = 0
  3854                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  3855  03DB  01F4               	clrf	i1LCDBusyLoop@status
  3856                           
  3857                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  3858  03DC  30F0               	movlw	240
  3859  03DD  00F0               	movwf	??i1_LCDBusyLoop
  3860  03DE  0870               	movf	??i1_LCDBusyLoop,w
  3861  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  3862  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  3863  03E1  0487               	iorwf	7,f	;volatile
  3864                           
  3865                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  3866  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3867  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3868  03E4  1507               	bsf	7,2	;volatile
  3869                           
  3870                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  3871  03E5  1087               	bcf	7,1	;volatile
  3872                           
  3873                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3874  03E6  2BE7               	nop2	;2 cycle nop
  3875  03E7                     i1l1923:	
  3876                           ;lcd_hd44780_pic16.c: 153: do
  3877                           
  3878                           
  3879                           ;lcd_hd44780_pic16.c: 154: {
  3880                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  3881  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  3882  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  3883  03E9  1587               	bsf	7,3	;volatile
  3884                           
  3885                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3886  03EA  2BEB               	nop2	;2 cycle nop
  3887                           
  3888                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  3889  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3890  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3891  03ED  0807               	movf	7,w	;volatile
  3892  03EE  00F0               	movwf	??i1_LCDBusyLoop
  3893  03EF  3004               	movlw	4
  3894  03F0                     u168_25:	
  3895  03F0  1003               	clrc
  3896  03F1  0CF0               	rrf	??i1_LCDBusyLoop,f
  3897  03F2  3EFF               	addlw	-1
  3898  03F3  1D03               	skipz
  3899  03F4  2BF0               	goto	u168_25
  3900  03F5  0870               	movf	??i1_LCDBusyLoop,w
  3901  03F6  00F1               	movwf	??i1_LCDBusyLoop+1
  3902  03F7  0871               	movf	??i1_LCDBusyLoop+1,w
  3903  03F8  00F4               	movwf	i1LCDBusyLoop@status
  3904                           
  3905                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  3906  03F9  0874               	movf	i1LCDBusyLoop@status,w
  3907  03FA  00F0               	movwf	??i1_LCDBusyLoop
  3908  03FB  3003               	movlw	3
  3909  03FC                     u169_25:	
  3910  03FC  1003               	clrc
  3911  03FD  0DF0               	rlf	??i1_LCDBusyLoop,f
  3912  03FE  3EFF               	addlw	-1
  3913  03FF  1D03               	skipz
  3914  0400  2BFC               	goto	u169_25
  3915  0401  1003               	clrc
  3916  0402  0D70               	rlf	??i1_LCDBusyLoop,w
  3917  0403  00F1               	movwf	??i1_LCDBusyLoop+1
  3918  0404  0871               	movf	??i1_LCDBusyLoop+1,w
  3919  0405  00F4               	movwf	i1LCDBusyLoop@status
  3920                           
  3921                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3922  0406  2C07               	nop2	;2 cycle nop
  3923                           
  3924                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  3925  0407  1283               	bcf	3,5	;RP0=0, select bank0
  3926  0408  1303               	bcf	3,6	;RP1=0, select bank0
  3927  0409  1187               	bcf	7,3	;volatile
  3928                           
  3929                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3930  040A  2C0B               	nop2	;2 cycle nop
  3931  040B  2C0C               	nop2	;2 cycle nop
  3932  040C  0000               	nop
  3933                           
  3934                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  3935  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3936  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3937  040F  1587               	bsf	7,3	;volatile
  3938                           
  3939                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3940  0410  2C11               	nop2	;2 cycle nop
  3941                           
  3942                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  3943  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3944  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3945  0413  0807               	movf	7,w	;volatile
  3946  0414  00F0               	movwf	??i1_LCDBusyLoop
  3947  0415  3004               	movlw	4
  3948  0416                     u170_25:	
  3949  0416  1003               	clrc
  3950  0417  0CF0               	rrf	??i1_LCDBusyLoop,f
  3951  0418  3EFF               	addlw	-1
  3952  0419  1D03               	skipz
  3953  041A  2C16               	goto	u170_25
  3954  041B  0870               	movf	??i1_LCDBusyLoop,w
  3955  041C  00F1               	movwf	??i1_LCDBusyLoop+1
  3956  041D  0871               	movf	??i1_LCDBusyLoop+1,w
  3957  041E  00F3               	movwf	i1LCDBusyLoop@temp
  3958                           
  3959                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  3960  041F  300F               	movlw	15
  3961  0420  00F0               	movwf	??i1_LCDBusyLoop
  3962  0421  0870               	movf	??i1_LCDBusyLoop,w
  3963  0422  05F3               	andwf	i1LCDBusyLoop@temp,f
  3964                           
  3965                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  3966  0423  0874               	movf	i1LCDBusyLoop@status,w
  3967  0424  0473               	iorwf	i1LCDBusyLoop@temp,w
  3968  0425  00F0               	movwf	??i1_LCDBusyLoop
  3969  0426  0870               	movf	??i1_LCDBusyLoop,w
  3970  0427  00F4               	movwf	i1LCDBusyLoop@status
  3971                           
  3972                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  3973  0428  0874               	movf	i1LCDBusyLoop@status,w
  3974  0429  3980               	andlw	128
  3975  042A  00F0               	movwf	??i1_LCDBusyLoop
  3976  042B  0870               	movf	??i1_LCDBusyLoop,w
  3977  042C  00F2               	movwf	i1LCDBusyLoop@busy
  3978                           
  3979                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3980  042D  2C2E               	nop2	;2 cycle nop
  3981                           
  3982                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  3983  042E  1283               	bcf	3,5	;RP0=0, select bank0
  3984  042F  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0430  1187               	bcf	7,3	;volatile
  3986                           
  3987                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3988  0431  2C32               	nop2	;2 cycle nop
  3989  0432  2C33               	nop2	;2 cycle nop
  3990  0433  0000               	nop
  3991                           
  3992                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  3993  0434  0872               	movf	i1LCDBusyLoop@busy,w
  3994  0435  1D03               	btfss	3,2
  3995  0436  2BE7               	goto	i1l1923
  3996                           
  3997                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  3998  0437  1283               	bcf	3,5	;RP0=0, select bank0
  3999  0438  1303               	bcf	3,6	;RP1=0, select bank0
  4000  0439  1107               	bcf	7,2	;volatile
  4001                           
  4002                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  4003  043A  300F               	movlw	15
  4004  043B  00F0               	movwf	??i1_LCDBusyLoop
  4005  043C  0870               	movf	??i1_LCDBusyLoop,w
  4006  043D  1683               	bsf	3,5	;RP0=1, select bank1
  4007  043E  1303               	bcf	3,6	;RP1=0, select bank1
  4008  043F  0587               	andwf	7,f	;volatile
  4009  0440  0008               	return
  4010  0441                     __end_ofi1_LCDBusyLoop:	
  4011  007E                     btemp	set	126	;btemp
  4012  007E                     wtemp	set	126
  4013  007E                     wtemp0	set	126
  4014  0080                     wtemp1	set	128
  4015  0082                     wtemp2	set	130
  4016  0084                     wtemp3	set	132
  4017  0086                     wtemp4	set	134
  4018  0088                     wtemp5	set	136
  4019  007F                     wtemp6	set	127
  4020  007E                     ttemp	set	126
  4021  007E                     ttemp0	set	126
  4022  0081                     ttemp1	set	129
  4023  0084                     ttemp2	set	132
  4024  0087                     ttemp3	set	135
  4025  007F                     ttemp4	set	127
  4026  007E                     ltemp	set	126
  4027  007E                     ltemp0	set	126
  4028  0082                     ltemp1	set	130
  4029  0086                     ltemp2	set	134
  4030  0080                     ltemp3	set	128


Data Sizes:
    Strings     39
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      54
    BANK1            80     23      23
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    i1_LCDWriteString->i1_LCDByte
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _main->_LCDWriteInt

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   10852
                                              9 BANK1     14    14      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                     _TuneButtonInit
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    1892
                                             31 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    3659
                                             31 BANK0      5     2      3
                                              0 BANK1      9     9      0
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     599
                                             19 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1677
                                             31 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    2253
                                             31 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1371
                                             24 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     176
                                             19 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    4786
                                             12 BANK0      7     7      0
                          i1_LCDByte
                        i1_LCDGotoXY
                      i1_LCDWriteInt
                   i1_LCDWriteString
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteString                                     3     3      0     942
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    2299
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     503
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     515
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     860
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     685
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     176
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _TuneButtonInit

 _ISR (ROOT)
   i1_LCDByte
     i1_LCDBusyLoop
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod
   i1_LCDWriteString
     i1_LCDByte
       i1_LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     17      17       7       28.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jun 18 16:00:42 2016

             ?_LCDBusyLoop 0070                 __CFG_CP$ON 0000         ??i1_LCDWriteString 007C  
                        pc 0002                __CFG_CPD$ON 0000               ___awdiv@sign 0039  
                       fsr 0004                __CFG_LVP$ON 0000                        l101 0567  
                      l102 0568                        l147 0763                        l148 074C  
                      _RA0 0028                        _RA1 0029                        _RA2 002A  
                      _RA3 002B                        _RC1 0039                        _RC2 003A  
                      _RA6 002E                        _RC3 003B                        _ISR 029D  
                      fsr0 0004            __end_of_ADCInit 07A4                        indf 0000  
             ___awmod@sign 0039               __CFG_IESO$ON 0000    LCDWriteInt@field_length 0041  
          __end_of_LCDByte 05A5            __end_of_LCDInit 0373               ?_LCDWriteInt 003F  
                     ?_ISR 0070                LCDByte@temp 003E                       l2003 0458  
                     l2021 0484                       l2013 0460                       l2015 046E  
                     l2025 048F                       l2041 0653                       l2211 05D6  
                     l2029 0497                       l2053 0660                       l2045 065A  
                     l2055 066E                       l2063 0687                       l2231 0169  
                     l2215 05E0                       l2067 068F                       l2059 067C  
                     l2243 017B                       l2219 05A8                       l2253 01D3  
                     l2245 01B7                       l2193 0755                       l2187 074E  
                     l2189 0750                       l2465 00D7                       l1877 0381  
                     l1997 044D                       STR_1 071D               __CFG_WDTE$ON 0000  
                     STR_2 073C                       STR_3 072E                       STR_4 073C  
                     STR_5 0738                       STR_6 0733                       STR_7 073C  
                     STR_8 0740                       u2275 01E2                       u1645 038A  
                     u1725 0554                       u1655 0396                       u1815 046F  
                     u1665 03B0                       u1745 056F                       u2457 0312  
                     u1825 047B                       u1755 058B                       u1835 0485  
                     u1915 0674                       u1925 067D                       u1795 0463  
                     u1895 0663               __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000  
                     _main 0029     __end_of_TuneButtonInit 0717         __size_of_LCDGotoXY 0026  
                     btemp 007E              __CFG_BOREN$ON 0000                       ltemp 007E  
                     start 0012                       ttemp 007E                       wtemp 007E  
i1LCDWriteInt@field_length 0022              __CFG_MCLRE$ON 0000                      ??_ISR 002C  
       __size_ofi1_LCDByte 0059               ?i1_LCDGotoXY 007C                      ?_main 0070  
           i1___awdiv@sign 0076            __end_of___awdiv 049C            __end_of___awmod 0694  
             LCDInit@style 0041            ___awdiv@divisor 0033                      i1l101 050E  
                    i1l102 0511                      i1l147 0789                      i1l148 0772  
          ___awdiv@counter 0038                      _PORTC 0007                      _TRISC 0087  
           i1___awmod@sign 0076                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            ?_TuneButtonInit 0070         __size_ofi1___awdiv 0059  
       __size_ofi1___awmod 004B            __initialization 0015               __end_of_main 0145  
                ??_ADCInit 0033                     ??_main 00A9          __end_of_LCDGotoXY 076A  
            LCDByte@isdata 0038                  ??_LCDByte 0039                  ??_LCDInit 003F  
                   _ADRESH 001E                     _ADRESL 009E           ___awdiv@dividend 0035  
        __end_ofi1_LCDByte 054E     __size_ofi1_LCDBusyLoop 0066                     i1l2115 04B1  
                   i1l2141 04F0                     i1l2133 04DD                     i1l2125 04B9  
                   i1l2109 04A6                     i1l2127 04C7                     i1l2137 04E8  
                   i1l2153 069E                     i1l2171 06C7                     i1l2411 02CA  
                   i1l2165 06AB                     i1l2157 06A5                     i1l2333 0630  
                   i1l2167 06B9                     i1l2175 06D2                     i1l2423 02FB  
                   i1l2361 022C                     i1l2329 0628                     i1l2337 05FA  
                   i1l2179 06DA                     i1l2371 0276                     i1l2363 0261  
                   i1l2393 077B                     i1l1923 03E7                     i1l2387 0774  
                   i1l2389 0776                     u202_25 04BC        i1LCDBusyLoop@status 0074  
                   u204_25 04C8                     u212_25 06AE                     u205_25 04D4  
                   u206_25 04DE                     u214_25 06BF                     u215_25 06C8  
                   u170_25 0416                     u243_25 02C4                     u246_27 02EF  
                   u239_25 0283                     u168_25 03F0                     u169_25 03FC  
                   u195_25 04F9                     u197_25 0518                     u198_25 0534  
            _tuneUpTempDir 0051             __CFG_PWRTE$OFF 0000             _LCDWriteString 05A5  
                ??___awdiv 0037                  ??___awmod 0037     __size_ofi1_LCDWriteInt 009F  
     __size_of_LCDBusyLoop 0068           i1LCDWriteInt@val 0020           i1LCDWriteInt@str 0023  
         ___awdiv@quotient 003A            ___awmod@divisor 0033            ___awmod@counter 0038  
        __end_ofi1___awdiv 04F5          __end_ofi1___awmod 06DF               LCDWriteInt@i 00A7  
             LCDWriteInt@j 00A5                     saved_w 007E       __size_of_LCDWriteInt 00B9  
  __end_of__initialization 0025     __end_of_LCDWriteString 05F7                  LCDByte@hn 003B  
                LCDByte@ln 003C             __pcstackCOMMON 0070               __pidataBANK0 07B5  
            i1_LCDBusyLoop 03DB               i1LCDGotoXY@x 0020               i1LCDGotoXY@y 007C  
        i1LCDBusyLoop@busy 0072          i1LCDBusyLoop@temp 0073       __size_ofi1_LCDGotoXY 0026  
__size_ofi1_LCDWriteString 0050             i1LCDWriteInt@i 002A             i1LCDWriteInt@j 0028  
          i1LCDByte@isdata 0075              i1_LCDWriteInt 01FE                 __pbssBANK0 0052  
          ?_LCDWriteString 0070                 __pmaintext 0029             ?i1_LCDBusyLoop 0070  
               __pintentry 0004                    _ADCInit 0790         i1___awdiv@dividend 0072  
                  _LCDByte 054E                    _LCDInit 030B           ??_TuneButtonInit 0033  
           ?i1_LCDWriteInt 0020                 __stringtab 0717         i1___awdiv@quotient 0077  
                  ___cgram 0044                    ___awdiv 0441                    ___awmod 0647  
                _ANSELbits 0188                    __ptext1 06DF                    __ptext2 05A5  
                  __ptext3 0145                    __ptext4 0647                    __ptext5 0441  
                  __ptext6 030B                    __ptext7 0744                    __ptext8 054E  
                  __ptext9 0373                    _curTemp 0052               __size_of_ISR 006E  
         ___awmod@dividend 0035                  _LCDGotoXY 0744       end_of_initialization 0025  
                i1_LCDByte 04F5            ??i1_LCDBusyLoop 0070          LCDWriteString@msg 0041  
         i1_LCDWriteString 05F7                  _TRISAbits 0085                  _TRISBbits 0086  
                _TRISCbits 0087            ??i1_LCDWriteInt 007C                 ?_LCDGotoXY 003F  
                i1___awdiv 049C                  i1___awmod 0694                 LCDInit@__i 0042  
               ?i1_LCDByte 0075                 LCDGotoXY@x 0041                 LCDGotoXY@y 003F  
               _tuneUpTemp 0054              ??_LCDBusyLoop 0033        start_initialization 0015  
              __end_of_ISR 030B                 ?i1___awdiv 0070                 ?i1___awmod 0070  
            ??_LCDWriteInt 0042           ??_LCDWriteString 003F              i1LCDByte@temp 007B  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                 init_fetch0 07A4                __pdataBANK0 0044  
       i1___awmod@dividend 0072                   ?_ADCInit 0070              ??i1_LCDGotoXY 007D  
      __end_of_LCDBusyLoop 03DB                   ?_LCDByte 0038                   ?_LCDInit 0070  
                 LCDByte@c 003D                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0                ??_LCDGotoXY 0040                i1LCDByte@hn 0079  
              i1LCDByte@ln 007A           LCDWriteInt@F1632 004C                ??i1_LCDByte 0076  
      __end_of_LCDWriteInt 01FE                   ?___awdiv 0033                   ?___awmod 0033  
        i1___awdiv@divisor 0070          i1___awdiv@counter 0075                  __pstrings 0717  
      __end_ofi1_LCDGotoXY 0790            LCDBusyLoop@busy 0035                ??i1___awdiv 0074  
              ??i1___awmod 0074            LCDBusyLoop@temp 0036          interrupt_function 0004  
                 _IOCBbits 0096   __end_ofi1_LCDWriteString 0647                _LCDBusyLoop 0373  
         LCDWriteString@cc 0040           __size_of_ADCInit 0014                 _ADCON0bits 001F  
              __stringbase 071C                 _ADCON1bits 009F           __size_of_LCDByte 0057  
         __size_of_LCDInit 0068                _LCDWriteInt 0145    __size_of_TuneButtonInit 0038  
    __end_ofi1_LCDBusyLoop 0441          i1___awmod@divisor 0070          i1___awmod@counter 0075  
         __size_of___awdiv 005B           __size_of___awmod 004D          LCDBusyLoop@status 0037  
       __end_of__stringtab 071D                i1_LCDGotoXY 076A                 i1LCDByte@c 0078  
               _ANSELHbits 0189                   __ptext10 0790                   __ptext11 029D  
                 __ptext12 05F7                   __ptext13 01FE                   __ptext14 0694  
                 __ptext15 049C                   __ptext16 076A                   __ptext17 04F5  
                 __ptext18 03DB          __CFG_BOR4V$BOR21V 0000      __end_ofi1_LCDWriteInt 029D  
            __size_of_main 011C        i1LCDWriteString@msg 0020                 _INTCONbits 000B  
                 init_ram0 07A8                   intlevel1 0000             LCDWriteInt@val 003F  
           LCDWriteInt@str 00A0         i1LCDWriteString@cc 0021                  stringcode 0717  
                 stringdir 0717                   stringtab 0717             _TuneButtonInit 06DF  
        ?i1_LCDWriteString 0070    __size_of_LCDWriteString 0052  
