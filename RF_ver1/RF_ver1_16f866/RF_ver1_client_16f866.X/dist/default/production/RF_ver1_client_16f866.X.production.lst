

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jun 18 19:24:05 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     	;# 
    37  0001                     	;# 
    38  0002                     	;# 
    39  0003                     	;# 
    40  0004                     	;# 
    41  0005                     	;# 
    42  0006                     	;# 
    43  0007                     	;# 
    44  0009                     	;# 
    45  000A                     	;# 
    46  000B                     	;# 
    47  000C                     	;# 
    48  000D                     	;# 
    49  000E                     	;# 
    50  000E                     	;# 
    51  000F                     	;# 
    52  0010                     	;# 
    53  0011                     	;# 
    54  0012                     	;# 
    55  0013                     	;# 
    56  0014                     	;# 
    57  0015                     	;# 
    58  0015                     	;# 
    59  0016                     	;# 
    60  0017                     	;# 
    61  0018                     	;# 
    62  0019                     	;# 
    63  001A                     	;# 
    64  001B                     	;# 
    65  001B                     	;# 
    66  001C                     	;# 
    67  001D                     	;# 
    68  001E                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  0086                     	;# 
    73  0087                     	;# 
    74  0089                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  008E                     	;# 
    78  008F                     	;# 
    79  0090                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0093                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0095                     	;# 
    87  0096                     	;# 
    88  0097                     	;# 
    89  0098                     	;# 
    90  0099                     	;# 
    91  009A                     	;# 
    92  009B                     	;# 
    93  009C                     	;# 
    94  009D                     	;# 
    95  009E                     	;# 
    96  009F                     	;# 
    97  0105                     	;# 
    98  0107                     	;# 
    99  0108                     	;# 
   100  0109                     	;# 
   101  010C                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  0185                     	;# 
   107  0187                     	;# 
   108  0188                     	;# 
   109  0189                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  008F                     	;# 
   155  0090                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0093                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  0105                     	;# 
   174  0107                     	;# 
   175  0108                     	;# 
   176  0109                     	;# 
   177  010C                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  0185                     	;# 
   183  0187                     	;# 
   184  0188                     	;# 
   185  0189                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  001D                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  0089                     	;# 
   227  008C                     	;# 
   228  008D                     	;# 
   229  008E                     	;# 
   230  008F                     	;# 
   231  0090                     	;# 
   232  0091                     	;# 
   233  0092                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0093                     	;# 
   237  0094                     	;# 
   238  0095                     	;# 
   239  0096                     	;# 
   240  0097                     	;# 
   241  0098                     	;# 
   242  0099                     	;# 
   243  009A                     	;# 
   244  009B                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  0105                     	;# 
   250  0107                     	;# 
   251  0108                     	;# 
   252  0109                     	;# 
   253  010C                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  0185                     	;# 
   259  0187                     	;# 
   260  0188                     	;# 
   261  0189                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  000E                     	;# 
   279  000F                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001D                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  0081                     	;# 
   299  0085                     	;# 
   300  0086                     	;# 
   301  0087                     	;# 
   302  0089                     	;# 
   303  008C                     	;# 
   304  008D                     	;# 
   305  008E                     	;# 
   306  008F                     	;# 
   307  0090                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0093                     	;# 
   313  0094                     	;# 
   314  0095                     	;# 
   315  0096                     	;# 
   316  0097                     	;# 
   317  0098                     	;# 
   318  0099                     	;# 
   319  009A                     	;# 
   320  009B                     	;# 
   321  009C                     	;# 
   322  009D                     	;# 
   323  009E                     	;# 
   324  009F                     	;# 
   325  0105                     	;# 
   326  0107                     	;# 
   327  0108                     	;# 
   328  0109                     	;# 
   329  010C                     	;# 
   330  010C                     	;# 
   331  010D                     	;# 
   332  010E                     	;# 
   333  010F                     	;# 
   334  0185                     	;# 
   335  0187                     	;# 
   336  0188                     	;# 
   337  0189                     	;# 
   338  018C                     	;# 
   339  018D                     	;# 
   340                           
   341                           	psect	idataBANK0
   342  0F74                     __pidataBANK0:	
   343                           
   344                           ;initializer for ___cgram
   345  0F74  340C               	retlw	12
   346  0F75  3412               	retlw	18
   347  0F76  3412               	retlw	18
   348  0F77  340C               	retlw	12
   349  0F78  3400               	retlw	0
   350  0F79  3400               	retlw	0
   351  0F7A  3400               	retlw	0
   352  0F7B  3400               	retlw	0
   353                           
   354                           ;initializer for LCDWriteInt@F1642
   355  0F7C  34F0               	retlw	240
   356  0F7D  34F0               	retlw	240
   357  0F7E  34F0               	retlw	240
   358  0F7F  34F0               	retlw	240
   359  0F80  34F0               	retlw	240
   360                           
   361                           ;initializer for _phMsg
   362  0F81  34A0               	retlw	low (_msg| 0)
   363                           
   364                           ;initializer for _tuneUpTempDir
   365  0F82  3401               	retlw	1
   366                           
   367                           	psect	idataBANK1
   368  0F94                     __pidataBANK1:	
   369                           
   370                           ;initializer for _msg
   371  0F94  3461               	retlw	97
   372  0F95  3461               	retlw	97
   373  0F96  3461               	retlw	97
   374  0F97  3461               	retlw	97
   375  0F98  3461               	retlw	97
   376  0F99  3400               	retlw	0
   377  0F9A  3400               	retlw	0
   378  0F9B  3400               	retlw	0
   379  0F9C  3400               	retlw	0
   380  0F9D  3400               	retlw	0
   381  0F9E  3400               	retlw	0
   382  0F9F  3400               	retlw	0
   383  0FA0  3400               	retlw	0
   384  0FA1  3400               	retlw	0
   385  0FA2  3400               	retlw	0
   386  0FA3  3400               	retlw	0
   387  0FA4  3400               	retlw	0
   388  0FA5  3400               	retlw	0
   389  0FA6  3400               	retlw	0
   390  0FA7  3400               	retlw	0
   391  0FA8  3400               	retlw	0
   392  0FA9  3400               	retlw	0
   393  0FAA  3400               	retlw	0
   394  0FAB  3400               	retlw	0
   395  0FAC  3400               	retlw	0
   396  0FAD  3400               	retlw	0
   397  0FAE  3400               	retlw	0
   398  0FAF  3400               	retlw	0
   399  0FB0  3400               	retlw	0
   400  0FB1  3400               	retlw	0
   401  0FB2  3400               	retlw	0
   402  0FB3  3400               	retlw	0
   403  001F                     _ADCON0bits	set	31
   404  001E                     _ADRESH	set	30
   405  000B                     _INTCONbits	set	11
   406  0007                     _PORTC	set	7
   407  0028                     _RA0	set	40
   408  0029                     _RA1	set	41
   409  002A                     _RA2	set	42
   410  002B                     _RA3	set	43
   411  002E                     _RA6	set	46
   412  0039                     _RC1	set	57
   413  003A                     _RC2	set	58
   414  003B                     _RC3	set	59
   415  009F                     _ADCON1bits	set	159
   416  009E                     _ADRESL	set	158
   417  0096                     _IOCBbits	set	150
   418  0085                     _TRISAbits	set	133
   419  0086                     _TRISBbits	set	134
   420  0087                     _TRISC	set	135
   421  0087                     _TRISCbits	set	135
   422  0189                     _ANSELHbits	set	393
   423  0188                     _ANSELbits	set	392
   424                           
   425                           	psect	strings
   426  0800                     __pstrings:	
   427  0800                     stringtab:	
   428  0800                     __stringtab:	
   429                           
   430                           ;	String table - string pointers are 1 byte each
   431  0800  1BFF               	btfsc	btemp+1,7
   432  0801  280A               	ljmp	stringcode
   433  0802  1383               	bcf	3,7
   434  0803  187F               	btfsc	btemp+1,0
   435  0804  1783               	bsf	3,7
   436  0805  0800               	movf	0,w
   437  0806  0A84               	incf	4,f
   438  0807  1903               	skipnz
   439  0808  0AFF               	incf	btemp+1,f
   440  0809  0008               	return
   441  080A                     stringcode:	
   442  080A                     stringdir:	
   443  080A  3008               	movlw	high stringdir
   444  080B  008A               	movwf	10
   445  080C  0804               	movf	4,w
   446  080D  0A84               	incf	4,f
   447  080E  0782               	addwf	2,f
   448  080F                     __stringbase:	
   449  080F  3400               	retlw	0
   450  0810                     __end_of__stringtab:	
   451  0810                     STR_1:	
   452  0810  3454               	retlw	84	;'T'
   453  0811  3468               	retlw	104	;'h'
   454  0812  3465               	retlw	101	;'e'
   455  0813  3472               	retlw	114	;'r'
   456  0814  346D               	retlw	109	;'m'
   457  0815  346F               	retlw	111	;'o'
   458  0816  346D               	retlw	109	;'m'
   459  0817  3465               	retlw	101	;'e'
   460  0818  3474               	retlw	116	;'t'
   461  0819  3465               	retlw	101	;'e'
   462  081A  3472               	retlw	114	;'r'
   463  081B  3420               	retlw	32	;' '
   464  081C  3473               	retlw	115	;'s'
   465  081D  3465               	retlw	101	;'e'
   466  081E  3474               	retlw	116	;'t'
   467  081F  343A               	retlw	58	;':'
   468  0820  3400               	retlw	0
   469  0821                     STR_3:	
   470  0821  3443               	retlw	67	;'C'
   471  0822  3475               	retlw	117	;'u'
   472  0823  3472               	retlw	114	;'r'
   473  0824  343A               	retlw	58	;':'
   474  0825  3400               	retlw	0
   475  0826                     STR_6:	
   476  0826  344D               	retlw	77	;'M'
   477  0827  3461               	retlw	97	;'a'
   478  0828  3478               	retlw	120	;'x'
   479  0829  343A               	retlw	58	;':'
   480  082A  3400               	retlw	0
   481  082B                     STR_5:	
   482  082B  3457               	retlw	87	;'W'
   483  082C  3461               	retlw	97	;'a'
   484  082D  343A               	retlw	58	;':'
   485  082E  3400               	retlw	0
   486  082F                     STR_2:	
   487  082F  3425               	retlw	37	;'%'
   488  0830  3430               	retlw	48	;'0'
   489  0831  3443               	retlw	67	;'C'
   490  0832  3400               	retlw	0
   491  0833                     STR_8:	
   492  0833  344F               	retlw	79	;'O'
   493  0834  3446               	retlw	70	;'F'
   494  0835  3446               	retlw	70	;'F'
   495  0836  3400               	retlw	0
   496  082F                     
   497                           ; #config settings
   498  0000                     
   499                           	psect	cinit
   500  0015                     start_initialization:	
   501  0015                     __initialization:	
   502                           
   503                           ; Clear objects allocated to BANK0
   504  0015  01D9               	clrf	__pbssBANK0& (0+127)
   505  0016  01DA               	clrf	(__pbssBANK0+1)& (0+127)
   506  0017  01DB               	clrf	(__pbssBANK0+2)& (0+127)
   507  0018  01DC               	clrf	(__pbssBANK0+3)& (0+127)
   508                           
   509                           ; Initialize objects allocated to BANK1
   510  0019  1383               	bcf	3,7	;select IRP bank0
   511  001A  30C0               	movlw	low (__pdataBANK1+32)
   512  001B  00FD               	movwf	btemp+-1
   513  001C  300F               	movlw	high __pidataBANK1
   514  001D  00FE               	movwf	btemp
   515  001E  3094               	movlw	low __pidataBANK1
   516  001F  00FF               	movwf	btemp+1
   517  0020  30A0               	movlw	low __pdataBANK1
   518  0021  0084               	movwf	4
   519  0022  120A  158A  2787  120A  118A  	fcall	init_ram0
   520                           
   521                           ; Initialize objects allocated to BANK0
   522  0027  3059               	movlw	low (__pdataBANK0+15)
   523  0028  00FD               	movwf	btemp+-1
   524  0029  300F               	movlw	high __pidataBANK0
   525  002A  00FE               	movwf	btemp
   526  002B  3074               	movlw	low __pidataBANK0
   527  002C  00FF               	movwf	btemp+1
   528  002D  304A               	movlw	low __pdataBANK0
   529  002E  0084               	movwf	4
   530  002F  120A  158A  2787   	fcall	init_ram0
   531  0032                     end_of_initialization:	
   532                           ;End of C runtime variable initialization code
   533                           
   534  0032                     __end_of__initialization:	
   535  0032  0183               	clrf	3
   536  0033  120A  118A  2836   	ljmp	_main	;jump to C main() function
   537                           
   538                           	psect	bssBANK0
   539  0059                     __pbssBANK0:	
   540  0059                     _curTemp:	
   541  0059                     	ds	2
   542  005B                     _count:	
   543  005B                     	ds	1
   544  005C                     _tuneUpTemp:	
   545  005C                     	ds	1
   546                           
   547                           	psect	dataBANK0
   548  004A                     __pdataBANK0:	
   549  004A                     ___cgram:	
   550  004A                     	ds	8
   551  0052                     LCDWriteInt@F1642:	
   552  0052                     	ds	5
   553  0057                     _phMsg:	
   554  0057                     	ds	1
   555  0058                     _tuneUpTempDir:	
   556  0058                     	ds	1
   557                           
   558                           	psect	dataBANK1
   559  00A0                     __pdataBANK1:	
   560  00A0                     _msg:	
   561  00A0                     	ds	32
   562                           
   563                           	psect	inittext
   564  0F83                     init_fetch0:	
   565                           ;	Called with low address in FSR and high address in W
   566                           
   567  0F83  087E               	movf	126,w
   568  0F84  008A               	movwf	10
   569  0F85  087F               	movf	127,w
   570  0F86  0082               	movwf	2
   571  0F87                     init_ram0:	
   572                           ;Called with:
   573                           ;	high address of idata address in btemp 
   574                           ;	low address of idata address in btemp+1 
   575                           ;	low address of data in FSR
   576                           ;	high address + 1 of data in btemp-1
   577                           
   578  0F87  2783  120A  158A   	fcall	init_fetch0
   579  0F8A  0080               	movwf	0
   580  0F8B  0A84               	incf	4,f
   581  0F8C  0804               	movf	4,w
   582  0F8D  067D               	xorwf	125,w
   583  0F8E  1903               	btfsc	3,2
   584  0F8F  3400               	retlw	0
   585  0F90  0AFF               	incf	127,f
   586  0F91  1903               	btfsc	3,2
   587  0F92  0AFE               	incf	126,f
   588  0F93  2F87               	goto	init_ram0
   589                           
   590                           	psect	cstackBANK1
   591  00C0                     __pcstackBANK1:	
   592  00C0                     LCDWriteInt@str:	
   593                           
   594                           ; 5 bytes @ 0x0
   595  00C0                     	ds	5
   596  00C5                     LCDWriteInt@j:	
   597                           
   598                           ; 2 bytes @ 0x5
   599  00C5                     	ds	2
   600  00C7                     LCDWriteInt@i:	
   601                           
   602                           ; 2 bytes @ 0x7
   603  00C7                     	ds	2
   604                           
   605                           	psect	cstackCOMMON
   606  0070                     __pcstackCOMMON:	
   607  0070                     ?_LCDInit:	
   608  0070                     ?_LCDBusyLoop:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_ADCInit:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_TuneButtonInit:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_ISR:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_main:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?i1_LCDBusyLoop:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ??i1_LCDBusyLoop:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?i1___awdiv:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?i1___awmod:	
   633                           ; 2 bytes @ 0x0
   634                           
   635  0070                     i1___awdiv@divisor:	
   636                           ; 2 bytes @ 0x0
   637                           
   638  0070                     i1___awmod@divisor:	
   639                           ; 2 bytes @ 0x0
   640                           
   641                           
   642                           ; 2 bytes @ 0x0
   643  0070                     	ds	2
   644  0072                     i1LCDBusyLoop@busy:	
   645  0072                     i1___awdiv@dividend:	
   646                           ; 1 bytes @ 0x2
   647                           
   648  0072                     i1___awmod@dividend:	
   649                           ; 2 bytes @ 0x2
   650                           
   651                           
   652                           ; 2 bytes @ 0x2
   653  0072                     	ds	1
   654  0073                     i1LCDBusyLoop@temp:	
   655                           
   656                           ; 1 bytes @ 0x3
   657  0073                     	ds	1
   658  0074                     ??i1___awdiv:	
   659  0074                     ??i1___awmod:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     i1LCDBusyLoop@status:	
   663                           ; 1 bytes @ 0x4
   664                           
   665                           
   666                           ; 1 bytes @ 0x4
   667  0074                     	ds	1
   668  0075                     ?i1_LCDByte:	
   669  0075                     i1LCDByte@isdata:	
   670                           ; 1 bytes @ 0x5
   671                           
   672  0075                     i1___awdiv@counter:	
   673                           ; 1 bytes @ 0x5
   674                           
   675  0075                     i1___awmod@counter:	
   676                           ; 1 bytes @ 0x5
   677                           
   678                           
   679                           ; 1 bytes @ 0x5
   680  0075                     	ds	1
   681  0076                     ??i1_LCDByte:	
   682  0076                     i1___awdiv@sign:	
   683                           ; 1 bytes @ 0x6
   684                           
   685  0076                     i1___awmod@sign:	
   686                           ; 1 bytes @ 0x6
   687                           
   688                           
   689                           ; 1 bytes @ 0x6
   690  0076                     	ds	1
   691  0077                     i1___awdiv@quotient:	
   692                           
   693                           ; 2 bytes @ 0x7
   694  0077                     	ds	1
   695  0078                     i1LCDByte@c:	
   696                           
   697                           ; 1 bytes @ 0x8
   698  0078                     	ds	1
   699  0079                     i1LCDByte@hn:	
   700                           
   701                           ; 1 bytes @ 0x9
   702  0079                     	ds	1
   703  007A                     i1LCDByte@ln:	
   704                           
   705                           ; 1 bytes @ 0xA
   706  007A                     	ds	1
   707  007B                     i1LCDByte@temp:	
   708                           
   709                           ; 1 bytes @ 0xB
   710  007B                     	ds	1
   711  007C                     ?i1_LCDWriteString:	
   712  007C                     ??i1_LCDWriteInt:	
   713                           ; 1 bytes @ 0xC
   714                           
   715  007C                     ?i1_LCDGotoXY:	
   716                           ; 1 bytes @ 0xC
   717                           
   718  007C                     i1LCDGotoXY@y:	
   719                           ; 1 bytes @ 0xC
   720                           
   721  007C                     i1LCDWriteString@msg:	
   722                           ; 1 bytes @ 0xC
   723                           
   724                           
   725                           ; 2 bytes @ 0xC
   726  007C                     	ds	1
   727  007D                     ??i1_LCDGotoXY:	
   728                           
   729                           ; 1 bytes @ 0xD
   730  007D                     	ds	1
   731                           
   732                           	psect	cstackBANK0
   733  0020                     __pcstackBANK0:	
   734  0020                     ??i1_LCDWriteString:	
   735  0020                     ?i1_LCDWriteInt:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0020                     i1LCDGotoXY@x:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0020                     i1LCDWriteInt@val:	
   742                           ; 1 bytes @ 0x0
   743                           
   744                           
   745                           ; 2 bytes @ 0x0
   746  0020                     	ds	1
   747  0021                     i1LCDWriteString@cc:	
   748                           
   749                           ; 1 bytes @ 0x1
   750  0021                     	ds	1
   751  0022                     i1LCDWriteInt@field_length:	
   752                           
   753                           ; 1 bytes @ 0x2
   754  0022                     	ds	1
   755  0023                     i1LCDWriteInt@str:	
   756                           
   757                           ; 5 bytes @ 0x3
   758  0023                     	ds	5
   759  0028                     i1LCDWriteInt@j:	
   760                           
   761                           ; 2 bytes @ 0x8
   762  0028                     	ds	2
   763  002A                     i1LCDWriteInt@i:	
   764                           
   765                           ; 2 bytes @ 0xA
   766  002A                     	ds	2
   767  002C                     ??_ISR:	
   768                           
   769                           ; 1 bytes @ 0xC
   770  002C                     	ds	7
   771  0033                     ??_LCDBusyLoop:	
   772  0033                     ??_ADCInit:	
   773                           ; 1 bytes @ 0x13
   774                           
   775  0033                     ??_TuneButtonInit:	
   776                           ; 1 bytes @ 0x13
   777                           
   778  0033                     ?___awdiv:	
   779                           ; 1 bytes @ 0x13
   780                           
   781  0033                     ?___awmod:	
   782                           ; 2 bytes @ 0x13
   783                           
   784  0033                     ___awdiv@divisor:	
   785                           ; 2 bytes @ 0x13
   786                           
   787  0033                     ___awmod@divisor:	
   788                           ; 2 bytes @ 0x13
   789                           
   790                           
   791                           ; 2 bytes @ 0x13
   792  0033                     	ds	2
   793  0035                     LCDBusyLoop@busy:	
   794  0035                     ___awdiv@dividend:	
   795                           ; 1 bytes @ 0x15
   796                           
   797  0035                     ___awmod@dividend:	
   798                           ; 2 bytes @ 0x15
   799                           
   800                           
   801                           ; 2 bytes @ 0x15
   802  0035                     	ds	1
   803  0036                     LCDBusyLoop@temp:	
   804                           
   805                           ; 1 bytes @ 0x16
   806  0036                     	ds	1
   807  0037                     ??___awdiv:	
   808  0037                     ??___awmod:	
   809                           ; 1 bytes @ 0x17
   810                           
   811  0037                     LCDBusyLoop@status:	
   812                           ; 1 bytes @ 0x17
   813                           
   814                           
   815                           ; 1 bytes @ 0x17
   816  0037                     	ds	1
   817  0038                     ?_LCDByte:	
   818  0038                     LCDByte@isdata:	
   819                           ; 1 bytes @ 0x18
   820                           
   821  0038                     ___awdiv@counter:	
   822                           ; 1 bytes @ 0x18
   823                           
   824  0038                     ___awmod@counter:	
   825                           ; 1 bytes @ 0x18
   826                           
   827                           
   828                           ; 1 bytes @ 0x18
   829  0038                     	ds	1
   830  0039                     ??_LCDByte:	
   831  0039                     ___awdiv@sign:	
   832                           ; 1 bytes @ 0x19
   833                           
   834  0039                     ___awmod@sign:	
   835                           ; 1 bytes @ 0x19
   836                           
   837                           
   838                           ; 1 bytes @ 0x19
   839  0039                     	ds	1
   840  003A                     ___awdiv@quotient:	
   841                           
   842                           ; 2 bytes @ 0x1A
   843  003A                     	ds	1
   844  003B                     LCDByte@hn:	
   845                           
   846                           ; 1 bytes @ 0x1B
   847  003B                     	ds	1
   848  003C                     LCDByte@ln:	
   849                           
   850                           ; 1 bytes @ 0x1C
   851  003C                     	ds	1
   852  003D                     LCDByte@c:	
   853                           
   854                           ; 1 bytes @ 0x1D
   855  003D                     	ds	1
   856  003E                     LCDByte@temp:	
   857                           
   858                           ; 1 bytes @ 0x1E
   859  003E                     	ds	1
   860  003F                     ?_LCDGotoXY:	
   861  003F                     ?_LCDWriteString:	
   862                           ; 1 bytes @ 0x1F
   863                           
   864  003F                     ?_LCDWriteInt:	
   865                           ; 1 bytes @ 0x1F
   866                           
   867  003F                     ??_LCDInit:	
   868                           ; 1 bytes @ 0x1F
   869                           
   870  003F                     LCDGotoXY@y:	
   871                           ; 1 bytes @ 0x1F
   872                           
   873  003F                     LCDWriteString@msg:	
   874                           ; 1 bytes @ 0x1F
   875                           
   876  003F                     LCDWriteInt@val:	
   877                           ; 2 bytes @ 0x1F
   878                           
   879                           
   880                           ; 2 bytes @ 0x1F
   881  003F                     	ds	1
   882  0040                     ??_LCDGotoXY:	
   883                           
   884                           ; 1 bytes @ 0x20
   885  0040                     	ds	1
   886  0041                     ??_LCDWriteString:	
   887  0041                     LCDInit@style:	
   888                           ; 1 bytes @ 0x21
   889                           
   890  0041                     LCDWriteInt@field_length:	
   891                           ; 1 bytes @ 0x21
   892                           
   893  0041                     LCDGotoXY@x:	
   894                           ; 1 bytes @ 0x21
   895                           
   896                           
   897                           ; 1 bytes @ 0x21
   898  0041                     	ds	1
   899  0042                     ??_LCDWriteInt:	
   900  0042                     LCDInit@__i:	
   901                           ; 1 bytes @ 0x22
   902                           
   903  0042                     LCDWriteString@cc:	
   904                           ; 1 bytes @ 0x22
   905                           
   906                           
   907                           ; 1 bytes @ 0x22
   908  0042                     	ds	2
   909  0044                     ??_main:	
   910                           
   911                           ; 1 bytes @ 0x24
   912  0044                     	ds	3
   913  0047                     main@t:	
   914                           
   915                           ; 1 bytes @ 0x27
   916  0047                     	ds	1
   917  0048                     main@t_380:	
   918                           
   919                           ; 1 bytes @ 0x28
   920  0048                     	ds	1
   921  0049                     main@index:	
   922                           
   923                           ; 1 bytes @ 0x29
   924  0049                     	ds	1
   925                           
   926                           	psect	maintext
   927  0036                     __pmaintext:	
   928 ;;
   929 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   930 ;;
   931 ;; *************** function _main *****************
   932 ;; Defined at:
   933 ;;		line 188 in file "do_am.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  t               1   40[BANK0 ] unsigned char 
   938 ;;  t               1   39[BANK0 ] unsigned char 
   939 ;;  index           1   41[BANK0 ] unsigned char 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : B00/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       0       0       0       0
   950 ;;      Locals:         0       3       0       0       0
   951 ;;      Temps:          0       3       0       0       0
   952 ;;      Totals:         0       6       0       0       0
   953 ;;Total ram usage:        6 bytes
   954 ;; Hardware stack levels required when called:    7
   955 ;; This function calls:
   956 ;;		_ADCInit
   957 ;;		_LCDByte
   958 ;;		_LCDGotoXY
   959 ;;		_LCDInit
   960 ;;		_LCDWriteInt
   961 ;;		_LCDWriteString
   962 ;;		_TuneButtonInit
   963 ;;		___awdiv
   964 ;; This function is called by:
   965 ;;		Startup code after reset
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _main
   971  0036                     _main:	
   972                           
   973                           ;do_am.c: 191: LCDInit(0B00000000);
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   977  0036  3000               	movlw	0
   978  0037  120A  118A  23CD  120A  118A  	fcall	_LCDInit
   979                           
   980                           ;do_am.c: 194: ADCInit();
   981  003C  120A  118A  27E9  120A  118A  	fcall	_ADCInit
   982                           
   983                           ;do_am.c: 197: TuneButtonInit();
   984  0041  120A  118A  27B1  120A  118A  	fcall	_TuneButtonInit
   985                           
   986                           ;do_am.c: 203: (LCDByte(0b00000001,0));
   987  0046  1283               	bcf	3,5	;RP0=0, select bank0
   988  0047  1303               	bcf	3,6	;RP1=0, select bank0
   989  0048  01B8               	clrf	LCDByte@isdata
   990  0049  3001               	movlw	1
   991  004A  120A  118A  266B  120A  118A  	fcall	_LCDByte
   992                           
   993                           ;do_am.c: 205: { LCDGotoXY(0,0); LCDWriteString("Cur:");};
   994  004F  1283               	bcf	3,5	;RP0=0, select bank0
   995  0050  1303               	bcf	3,6	;RP1=0, select bank0
   996  0051  01BF               	clrf	LCDGotoXY@y
   997  0052  3000               	movlw	0
   998  0053  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
   999  0058  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1000  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1001  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1002  005B  00BF               	movwf	LCDWriteString@msg
  1003  005C  3080               	movlw	128
  1004  005D  00C0               	movwf	LCDWriteString@msg+1
  1005  005E  120A  118A  2503  120A  118A  	fcall	_LCDWriteString
  1006                           
  1007                           ;do_am.c: 207: { LCDGotoXY(7,0); LCDWriteString("%0C");};
  1008  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0065  01BF               	clrf	LCDGotoXY@y
  1011  0066  3007               	movlw	7
  1012  0067  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1013  006C  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1014  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1015  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1016  006F  00BF               	movwf	LCDWriteString@msg
  1017  0070  3080               	movlw	128
  1018  0071  00C0               	movwf	LCDWriteString@msg+1
  1019  0072  120A  118A  2503  120A  118A  	fcall	_LCDWriteString
  1020                           
  1021                           ;do_am.c: 209: { LCDGotoXY(10,0); LCDWriteString("Wa:");};
  1022  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0079  01BF               	clrf	LCDGotoXY@y
  1025  007A  300A               	movlw	10
  1026  007B  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1027  0080  301C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1028  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0083  00BF               	movwf	LCDWriteString@msg
  1031  0084  3080               	movlw	128
  1032  0085  00C0               	movwf	LCDWriteString@msg+1
  1033  0086  120A  118A  2503  120A  118A  	fcall	_LCDWriteString
  1034                           
  1035                           ;do_am.c: 211: { LCDGotoXY(0,1); LCDWriteString("Max:");};
  1036  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1037  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1038  008D  01BF               	clrf	LCDGotoXY@y
  1039  008E  0ABF               	incf	LCDGotoXY@y,f
  1040  008F  3000               	movlw	0
  1041  0090  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1042  0095  3017               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1043  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0098  00BF               	movwf	LCDWriteString@msg
  1046  0099  3080               	movlw	128
  1047  009A  00C0               	movwf	LCDWriteString@msg+1
  1048  009B  120A  118A  2503  120A  118A  	fcall	_LCDWriteString
  1049                           
  1050                           ;do_am.c: 213: { LCDGotoXY(7,1); LCDWriteString("%0C");};
  1051  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1052  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1053  00A2  01BF               	clrf	LCDGotoXY@y
  1054  00A3  0ABF               	incf	LCDGotoXY@y,f
  1055  00A4  3007               	movlw	7
  1056  00A5  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1057  00AA  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1058  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1059  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1060  00AD  00BF               	movwf	LCDWriteString@msg
  1061  00AE  3080               	movlw	128
  1062  00AF  00C0               	movwf	LCDWriteString@msg+1
  1063  00B0  120A  118A  2503  120A  118A  	fcall	_LCDWriteString
  1064                           
  1065                           ;do_am.c: 215: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1066  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1067  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1068  00B7  01BF               	clrf	LCDGotoXY@y
  1069  00B8  300D               	movlw	13
  1070  00B9  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1071  00BE  3024               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1072  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1073  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1074  00C1  00BF               	movwf	LCDWriteString@msg
  1075  00C2  3080               	movlw	128
  1076  00C3  00C0               	movwf	LCDWriteString@msg+1
  1077  00C4  120A  118A  2503  120A  118A  	fcall	_LCDWriteString
  1078                           
  1079                           ;do_am.c: 217: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1080  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1081  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1082  00CB  01BF               	clrf	LCDGotoXY@y
  1083  00CC  0ABF               	incf	LCDGotoXY@y,f
  1084  00CD  3004               	movlw	4
  1085  00CE  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1086  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1087  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1088  00D5  085C               	movf	_tuneUpTemp,w
  1089  00D6  00C4               	movwf	??_main
  1090  00D7  01C5               	clrf	??_main+1
  1091  00D8  0844               	movf	??_main,w
  1092  00D9  00BF               	movwf	LCDWriteInt@val
  1093  00DA  0845               	movf	??_main+1,w
  1094  00DB  00C0               	movwf	LCDWriteInt@val+1
  1095  00DC  3003               	movlw	3
  1096  00DD  00C6               	movwf	??_main+2
  1097  00DE  0846               	movf	??_main+2,w
  1098  00DF  00C1               	movwf	LCDWriteInt@field_length
  1099  00E0  120A  118A  220B  120A  118A  	fcall	_LCDWriteInt
  1100                           
  1101                           ;do_am.c: 218: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1102  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1103  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1104  00E7  01BF               	clrf	LCDGotoXY@y
  1105  00E8  3004               	movlw	4
  1106  00E9  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1107  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1108  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1109  00F0  085A               	movf	_curTemp+1,w
  1110  00F1  00C0               	movwf	LCDWriteInt@val+1
  1111  00F2  0859               	movf	_curTemp,w
  1112  00F3  00BF               	movwf	LCDWriteInt@val
  1113  00F4  3003               	movlw	3
  1114  00F5  00C4               	movwf	??_main
  1115  00F6  0844               	movf	??_main,w
  1116  00F7                     L4:	
  1117  00F7  00C1               	movwf	LCDWriteInt@field_length
  1118  00F8  120A  118A  220B  120A  118A  	fcall	_LCDWriteInt
  1119  00FD                     l2549:	
  1120                           ;do_am.c: 219: while(1)
  1121                           
  1122                           
  1123                           ;do_am.c: 220: {
  1124                           ;do_am.c: 235: if(RA6 == 0)
  1125  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1126  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1127  00FF  1B05               	btfsc	5,6	;volatile
  1128  0100  28FD               	goto	l2549
  1129                           
  1130                           ;do_am.c: 236: {
  1131                           ;do_am.c: 242: tuneUpTemp = (RA0 | (RA1 << 1) | (RA2 << 2) | (RA3 << 3));
  1132  0101  3000               	movlw	0
  1133  0102  1805               	btfsc	5,0	;volatile
  1134  0103  3001               	movlw	1
  1135  0104  1885               	btfsc	5,1	;volatile
  1136  0105  3802               	iorlw	2
  1137  0106  1905               	btfsc	5,2	;volatile
  1138  0107  3804               	iorlw	4
  1139  0108  1985               	btfsc	5,3	;volatile
  1140  0109  3808               	iorlw	8
  1141  010A  00C4               	movwf	??_main
  1142  010B  0844               	movf	??_main,w
  1143  010C  00DC               	movwf	_tuneUpTemp
  1144                           
  1145                           ;do_am.c: 243: { unsigned char index = count/2; if(count % 2 == 0) { { char t; if(1 == 0
      +                          ) { t = tuneUpTemp >> 4; } else { t = tuneUpTemp; } phMsg[index].B0 = t & 0b0001; phMsg[
      +                          index].B1 = (t & 0b0010) >> 1; phMsg[index].B2 = (t & 0b0100) >> 2; phMsg[index].B3 = (t
      +                           
  1146  010D  3002               	movlw	2
  1147  010E  00B3               	movwf	___awdiv@divisor
  1148  010F  3000               	movlw	0
  1149  0110  00B4               	movwf	___awdiv@divisor+1
  1150  0111  085B               	movf	_count,w
  1151  0112  00C4               	movwf	??_main
  1152  0113  01C5               	clrf	??_main+1
  1153  0114  0844               	movf	??_main,w
  1154  0115  00B5               	movwf	___awdiv@dividend
  1155  0116  0845               	movf	??_main+1,w
  1156  0117  00B6               	movwf	___awdiv@dividend+1
  1157  0118  120A  118A  255E  120A  118A  	fcall	___awdiv
  1158  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1159  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1160  011F  0833               	movf	?___awdiv,w
  1161  0120  00C6               	movwf	??_main+2
  1162  0121  0846               	movf	??_main+2,w
  1163  0122  00C9               	movwf	main@index
  1164  0123  1C5B               	btfss	_count,0
  1165  0124  292F               	goto	l2561
  1166  0125  2989               	goto	l2573
  1167  0126                     u2605:	
  1168  0126  1003               	clrc
  1169  0127  0CC4               	rrf	??_main,f
  1170  0128  3EFF               	addlw	-1
  1171  0129  1D03               	skipz
  1172  012A  2926               	goto	u2605
  1173  012B  0844               	movf	??_main,w
  1174  012C  00C5               	movwf	??_main+1
  1175  012D  0845               	movf	??_main+1,w
  1176  012E  2932               	goto	L1
  1177  012F                     l2561:	
  1178  012F  085C               	movf	_tuneUpTemp,w
  1179  0130  00C4               	movwf	??_main
  1180  0131  0844               	movf	??_main,w
  1181  0132                     L1:	
  1182  0132  00C7               	movwf	main@t
  1183  0133  3001               	movlw	1
  1184  0134  0547               	andwf	main@t,w
  1185  0135  00C4               	movwf	??_main
  1186  0136  0849               	movf	main@index,w
  1187  0137  0757               	addwf	_phMsg,w
  1188  0138  00C5               	movwf	??_main+1
  1189  0139  0845               	movf	??_main+1,w
  1190  013A  0084               	movwf	4
  1191  013B  1383               	bcf	3,7	;select IRP bank0
  1192  013C  0800               	movf	0,w
  1193  013D  0644               	xorwf	??_main,w
  1194  013E  39FE               	andlw	-2
  1195  013F  0644               	xorwf	??_main,w
  1196  0140  0080               	movwf	0
  1197  0141  0847               	movf	main@t,w
  1198  0142  00C4               	movwf	??_main
  1199  0143  1003               	clrc
  1200  0144  0C44               	rrf	??_main,w
  1201  0145  3901               	andlw	1
  1202  0146  00C5               	movwf	??_main+1
  1203  0147  0849               	movf	main@index,w
  1204  0148  0757               	addwf	_phMsg,w
  1205  0149  00C6               	movwf	??_main+2
  1206  014A  0846               	movf	??_main+2,w
  1207  014B  0084               	movwf	4
  1208  014C  0DC5               	rlf	??_main+1,f
  1209  014D  0800               	movf	0,w
  1210  014E  0645               	xorwf	??_main+1,w
  1211  014F  39FD               	andlw	-3
  1212  0150  0645               	xorwf	??_main+1,w
  1213  0151  0080               	movwf	0
  1214  0152  0847               	movf	main@t,w
  1215  0153  00C4               	movwf	??_main
  1216  0154  3002               	movlw	2
  1217  0155                     u2615:	
  1218  0155  1003               	clrc
  1219  0156  0CC4               	rrf	??_main,f
  1220  0157  3EFF               	addlw	-1
  1221  0158  1D03               	skipz
  1222  0159  2955               	goto	u2615
  1223  015A  0844               	movf	??_main,w
  1224  015B  3901               	andlw	1
  1225  015C  00C5               	movwf	??_main+1
  1226  015D  0849               	movf	main@index,w
  1227  015E  0757               	addwf	_phMsg,w
  1228  015F  00C6               	movwf	??_main+2
  1229  0160  0846               	movf	??_main+2,w
  1230  0161  0084               	movwf	4
  1231  0162  0DC5               	rlf	??_main+1,f
  1232  0163  0DC5               	rlf	??_main+1,f
  1233  0164  0800               	movf	0,w
  1234  0165  0645               	xorwf	??_main+1,w
  1235  0166  39FB               	andlw	-5
  1236  0167  0645               	xorwf	??_main+1,w
  1237  0168  0080               	movwf	0
  1238  0169  0847               	movf	main@t,w
  1239  016A  00C4               	movwf	??_main
  1240  016B  3003               	movlw	3
  1241  016C                     u2625:	
  1242  016C  1003               	clrc
  1243  016D  0CC4               	rrf	??_main,f
  1244  016E  3EFF               	addlw	-1
  1245  016F  1D03               	skipz
  1246  0170  296C               	goto	u2625
  1247  0171  0844               	movf	??_main,w
  1248  0172  3901               	andlw	1
  1249  0173  00C5               	movwf	??_main+1
  1250  0174  0849               	movf	main@index,w
  1251  0175  0757               	addwf	_phMsg,w
  1252  0176  00C6               	movwf	??_main+2
  1253  0177  0846               	movf	??_main+2,w
  1254  0178  0084               	movwf	4
  1255  0179  0DC5               	rlf	??_main+1,f
  1256  017A  0DC5               	rlf	??_main+1,f
  1257  017B  0DC5               	rlf	??_main+1,f
  1258  017C  0800               	movf	0,w
  1259  017D  0645               	xorwf	??_main+1,w
  1260  017E  39F7               	andlw	-9
  1261  017F  29DB               	goto	L2
  1262  0180                     u2635:	
  1263  0180  1003               	clrc
  1264  0181  0CC4               	rrf	??_main,f
  1265  0182  3EFF               	addlw	-1
  1266  0183  1D03               	skipz
  1267  0184  2980               	goto	u2635
  1268  0185  0844               	movf	??_main,w
  1269  0186  00C5               	movwf	??_main+1
  1270  0187  0845               	movf	??_main+1,w
  1271  0188  298C               	goto	L3
  1272  0189                     l2573:	
  1273  0189  085C               	movf	_tuneUpTemp,w
  1274  018A  00C4               	movwf	??_main
  1275  018B  0844               	movf	??_main,w
  1276  018C                     L3:	
  1277  018C  00C8               	movwf	main@t_380
  1278  018D  0848               	movf	main@t_380,w
  1279  018E  3901               	andlw	1
  1280  018F  00C4               	movwf	??_main
  1281  0190  0849               	movf	main@index,w
  1282  0191  0757               	addwf	_phMsg,w
  1283  0192  00C5               	movwf	??_main+1
  1284  0193  0845               	movf	??_main+1,w
  1285  0194  0084               	movwf	4
  1286  0195  0EC4               	swapf	??_main,f
  1287  0196  1383               	bcf	3,7	;select IRP bank0
  1288  0197  0800               	movf	0,w
  1289  0198  0644               	xorwf	??_main,w
  1290  0199  39EF               	andlw	-17
  1291  019A  0644               	xorwf	??_main,w
  1292  019B  0080               	movwf	0
  1293  019C  0848               	movf	main@t_380,w
  1294  019D  00C4               	movwf	??_main
  1295  019E  1003               	clrc
  1296  019F  0C44               	rrf	??_main,w
  1297  01A0  3901               	andlw	1
  1298  01A1  00C5               	movwf	??_main+1
  1299  01A2  0849               	movf	main@index,w
  1300  01A3  0757               	addwf	_phMsg,w
  1301  01A4  00C6               	movwf	??_main+2
  1302  01A5  0846               	movf	??_main+2,w
  1303  01A6  0084               	movwf	4
  1304  01A7  0EC5               	swapf	??_main+1,f
  1305  01A8  0DC5               	rlf	??_main+1,f
  1306  01A9  0800               	movf	0,w
  1307  01AA  0645               	xorwf	??_main+1,w
  1308  01AB  39DF               	andlw	-33
  1309  01AC  0645               	xorwf	??_main+1,w
  1310  01AD  0080               	movwf	0
  1311  01AE  0848               	movf	main@t_380,w
  1312  01AF  00C4               	movwf	??_main
  1313  01B0  3002               	movlw	2
  1314  01B1                     u2645:	
  1315  01B1  1003               	clrc
  1316  01B2  0CC4               	rrf	??_main,f
  1317  01B3  3EFF               	addlw	-1
  1318  01B4  1D03               	skipz
  1319  01B5  29B1               	goto	u2645
  1320  01B6  0844               	movf	??_main,w
  1321  01B7  3901               	andlw	1
  1322  01B8  00C5               	movwf	??_main+1
  1323  01B9  0849               	movf	main@index,w
  1324  01BA  0757               	addwf	_phMsg,w
  1325  01BB  00C6               	movwf	??_main+2
  1326  01BC  0846               	movf	??_main+2,w
  1327  01BD  0084               	movwf	4
  1328  01BE  0EC5               	swapf	??_main+1,f
  1329  01BF  0DC5               	rlf	??_main+1,f
  1330  01C0  0DC5               	rlf	??_main+1,f
  1331  01C1  0800               	movf	0,w
  1332  01C2  0645               	xorwf	??_main+1,w
  1333  01C3  39BF               	andlw	-65
  1334  01C4  0645               	xorwf	??_main+1,w
  1335  01C5  0080               	movwf	0
  1336  01C6  0848               	movf	main@t_380,w
  1337  01C7  00C4               	movwf	??_main
  1338  01C8  3003               	movlw	3
  1339  01C9                     u2655:	
  1340  01C9  1003               	clrc
  1341  01CA  0CC4               	rrf	??_main,f
  1342  01CB  3EFF               	addlw	-1
  1343  01CC  1D03               	skipz
  1344  01CD  29C9               	goto	u2655
  1345  01CE  0844               	movf	??_main,w
  1346  01CF  3901               	andlw	1
  1347  01D0  00C5               	movwf	??_main+1
  1348  01D1  0849               	movf	main@index,w
  1349  01D2  0757               	addwf	_phMsg,w
  1350  01D3  00C6               	movwf	??_main+2
  1351  01D4  0846               	movf	??_main+2,w
  1352  01D5  0084               	movwf	4
  1353  01D6  0CC5               	rrf	??_main+1,f
  1354  01D7  0CC5               	rrf	??_main+1,f
  1355  01D8  0800               	movf	0,w
  1356  01D9  0645               	xorwf	??_main+1,w
  1357  01DA  397F               	andlw	-129
  1358  01DB                     L2:	
  1359  01DB  0645               	xorwf	??_main+1,w
  1360  01DC  0080               	movwf	0
  1361                           
  1362                           ;do_am.c: 245: count++;
  1363  01DD  3001               	movlw	1
  1364  01DE  00C4               	movwf	??_main
  1365  01DF  0844               	movf	??_main,w
  1366  01E0  07DB               	addwf	_count,f
  1367                           
  1368                           ;do_am.c: 252: { LCDGotoXY(10,1); LCDWriteString(msg);};
  1369  01E1  01BF               	clrf	LCDGotoXY@y
  1370  01E2  0ABF               	incf	LCDGotoXY@y,f
  1371  01E3  300A               	movlw	10
  1372  01E4  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1373  01E9  30A0               	movlw	(low (_msg| 0))& (0+255)
  1374  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1375  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1376  01EC  00BF               	movwf	LCDWriteString@msg
  1377  01ED  3000               	movlw	0
  1378  01EE  00C0               	movwf	LCDWriteString@msg+1
  1379  01EF  120A  118A  2503  120A  118A  	fcall	_LCDWriteString
  1380                           
  1381                           ;do_am.c: 253: { LCDGotoXY(4,1); LCDWriteInt(count,3);};
  1382  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1383  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1384  01F6  01BF               	clrf	LCDGotoXY@y
  1385  01F7  0ABF               	incf	LCDGotoXY@y,f
  1386  01F8  3004               	movlw	4
  1387  01F9  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1388  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1389  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0200  085B               	movf	_count,w
  1391  0201  00C4               	movwf	??_main
  1392  0202  01C5               	clrf	??_main+1
  1393  0203  0844               	movf	??_main,w
  1394  0204  00BF               	movwf	LCDWriteInt@val
  1395  0205  0845               	movf	??_main+1,w
  1396  0206  00C0               	movwf	LCDWriteInt@val+1
  1397  0207  3003               	movlw	3
  1398  0208  00C6               	movwf	??_main+2
  1399  0209  0846               	movf	??_main+2,w
  1400  020A  28F7               	goto	L4
  1401  020B                     __end_of_main:	
  1402                           
  1403                           	psect	text1
  1404  07B1                     __ptext1:	
  1405 ;; *************** function _TuneButtonInit *****************
  1406 ;; Defined at:
  1407 ;;		line 107 in file "do_am.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		None
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0
  1424 ;;      Totals:         0       0       0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    4
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function _TuneButtonInit
  1437  07B1                     _TuneButtonInit:	
  1438                           
  1439                           ;do_am.c: 110: (TRISAbits.TRISA6 = 1);
  1440                           
  1441                           ;incstack = 0
  1442                           ; Regs used in _TuneButtonInit: []
  1443  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  1444  07B2  1303               	bcf	3,6	;RP1=0, select bank1
  1445  07B3  1705               	bsf	5,6	;volatile
  1446                           
  1447                           ;do_am.c: 111: ANSELHbits.ANS11 = 0;
  1448  07B4  1683               	bsf	3,5	;RP0=1, select bank3
  1449  07B5  1703               	bsf	3,6	;RP1=1, select bank3
  1450  07B6  1189               	bcf	9,3	;volatile
  1451                           
  1452                           ;do_am.c: 113: (TRISAbits.TRISA0 = 1);
  1453  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  1454  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  1455  07B9  1405               	bsf	5,0	;volatile
  1456                           
  1457                           ;do_am.c: 114: ANSELbits.ANS0 = 0;
  1458  07BA  1683               	bsf	3,5	;RP0=1, select bank3
  1459  07BB  1703               	bsf	3,6	;RP1=1, select bank3
  1460  07BC  1008               	bcf	8,0	;volatile
  1461                           
  1462                           ;do_am.c: 116: (TRISAbits.TRISA1 = 1);
  1463  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  1464  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  1465  07BF  1485               	bsf	5,1	;volatile
  1466                           
  1467                           ;do_am.c: 117: ANSELbits.ANS1 = 0;
  1468  07C0  1683               	bsf	3,5	;RP0=1, select bank3
  1469  07C1  1703               	bsf	3,6	;RP1=1, select bank3
  1470  07C2  1088               	bcf	8,1	;volatile
  1471                           
  1472                           ;do_am.c: 118: (TRISAbits.TRISA2 = 1);
  1473  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  1474  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  1475  07C5  1505               	bsf	5,2	;volatile
  1476                           
  1477                           ;do_am.c: 119: ANSELbits.ANS2 = 0;
  1478  07C6  1683               	bsf	3,5	;RP0=1, select bank3
  1479  07C7  1703               	bsf	3,6	;RP1=1, select bank3
  1480  07C8  1108               	bcf	8,2	;volatile
  1481                           
  1482                           ;do_am.c: 120: (TRISAbits.TRISA3 = 1);
  1483  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  1484  07CA  1303               	bcf	3,6	;RP1=0, select bank1
  1485  07CB  1585               	bsf	5,3	;volatile
  1486                           
  1487                           ;do_am.c: 121: ANSELbits.ANS3 = 0;
  1488  07CC  1683               	bsf	3,5	;RP0=1, select bank3
  1489  07CD  1703               	bsf	3,6	;RP1=1, select bank3
  1490  07CE  1188               	bcf	8,3	;volatile
  1491                           
  1492                           ;do_am.c: 123: (TRISAbits.TRISA7 = 0);
  1493  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  1494  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  1495  07D1  1385               	bcf	5,7	;volatile
  1496                           
  1497                           ;do_am.c: 125: (TRISBbits.TRISB0 = 0);
  1498  07D2  1006               	bcf	6,0	;volatile
  1499                           
  1500                           ;do_am.c: 126: ANSELHbits.ANS12 = 0;
  1501  07D3  1683               	bsf	3,5	;RP0=1, select bank3
  1502  07D4  1703               	bsf	3,6	;RP1=1, select bank3
  1503  07D5  1209               	bcf	9,4	;volatile
  1504                           
  1505                           ;do_am.c: 128: (TRISBbits.TRISB1 = 0);
  1506  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  1507  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  1508  07D8  1086               	bcf	6,1	;volatile
  1509                           
  1510                           ;do_am.c: 129: ANSELHbits.ANS10 = 0;
  1511  07D9  1683               	bsf	3,5	;RP0=1, select bank3
  1512  07DA  1703               	bsf	3,6	;RP1=1, select bank3
  1513  07DB  1109               	bcf	9,2	;volatile
  1514                           
  1515                           ;do_am.c: 131: (TRISBbits.TRISB2 = 0);
  1516  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  1517  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  1518  07DE  1106               	bcf	6,2	;volatile
  1519                           
  1520                           ;do_am.c: 132: ANSELHbits.ANS8 = 0;
  1521  07DF  1683               	bsf	3,5	;RP0=1, select bank3
  1522  07E0  1703               	bsf	3,6	;RP1=1, select bank3
  1523  07E1  1009               	bcf	9,0	;volatile
  1524                           
  1525                           ;do_am.c: 134: (TRISBbits.TRISB3 = 0);
  1526  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  1527  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  1528  07E4  1186               	bcf	6,3	;volatile
  1529                           
  1530                           ;do_am.c: 135: ANSELHbits.ANS9 = 0;
  1531  07E5  1683               	bsf	3,5	;RP0=1, select bank3
  1532  07E6  1703               	bsf	3,6	;RP1=1, select bank3
  1533  07E7  1089               	bcf	9,1	;volatile
  1534  07E8  0008               	return
  1535  07E9                     __end_of_TuneButtonInit:	
  1536                           
  1537                           	psect	text2
  1538  0503                     __ptext2:	
  1539 ;; *************** function _LCDWriteString *****************
  1540 ;; Defined at:
  1541 ;;		line 279 in file "lcd_hd44780_pic16.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  msg             2   31[BANK0 ] PTR const unsigned char 
  1544 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(4), 
  1545 ;;		 -> STR_4(4), STR_3(5), STR_2(4), STR_1(17), 
  1546 ;;		 -> msg(32), 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  cc              1   34[BANK0 ] char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       2       0       0       0
  1559 ;;      Locals:         0       1       0       0       0
  1560 ;;      Temps:          0       1       0       0       0
  1561 ;;      Totals:         0       4       0       0       0
  1562 ;;Total ram usage:        4 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    6
  1565 ;; This function calls:
  1566 ;;		_LCDByte
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _LCDWriteString
  1574  0503                     _LCDWriteString:	
  1575  0503                     l2303:	
  1576                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  1577                           
  1578                           ;incstack = 0
  1579                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1580                           
  1581  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0505  0840               	movf	LCDWriteString@msg+1,w
  1584  0506  00FF               	movwf	127
  1585  0507  083F               	movf	LCDWriteString@msg,w
  1586  0508  0084               	movwf	4
  1587  0509  120A  158A  2000  120A  118A  	fcall	stringtab
  1588  050E  3A00               	xorlw	0
  1589  050F  1903               	btfsc	3,2
  1590  0510  0008               	return
  1591                           
  1592                           ;lcd_hd44780_pic16.c: 282: {
  1593                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  1594  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0513  0840               	movf	LCDWriteString@msg+1,w
  1597  0514  00FF               	movwf	127
  1598  0515  083F               	movf	LCDWriteString@msg,w
  1599  0516  0084               	movwf	4
  1600  0517  120A  158A  2000  120A  118A  	fcall	stringtab
  1601  051C  3A25               	xorlw	37
  1602  051D  1D03               	skipz
  1603  051E  2D45               	goto	l2299
  1604                           
  1605                           ;lcd_hd44780_pic16.c: 285: {
  1606                           ;lcd_hd44780_pic16.c: 286: msg++;
  1607  051F  3001               	movlw	1
  1608  0520  07BF               	addwf	LCDWriteString@msg,f
  1609  0521  1803               	skipnc
  1610  0522  0AC0               	incf	LCDWriteString@msg+1,f
  1611                           
  1612                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  1613  0523  0840               	movf	LCDWriteString@msg+1,w
  1614  0524  00FF               	movwf	127
  1615  0525  083F               	movf	LCDWriteString@msg,w
  1616  0526  0084               	movwf	4
  1617  0527  120A  158A  2000  120A  118A  	fcall	stringtab
  1618  052C  3ED0               	addlw	-48
  1619  052D  00C1               	movwf	??_LCDWriteString
  1620  052E  0841               	movf	??_LCDWriteString,w
  1621  052F  00C2               	movwf	LCDWriteString@cc
  1622                           
  1623                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  1624  0530  1BC2               	btfsc	LCDWriteString@cc,7
  1625  0531  2D3B               	goto	l2295
  1626  0532  0842               	movf	LCDWriteString@cc,w
  1627  0533  3A80               	xorlw	128
  1628  0534  3E78               	addlw	-136
  1629  0535  1803               	skipnc
  1630  0536  2D3B               	goto	l2295
  1631                           
  1632                           ;lcd_hd44780_pic16.c: 290: {
  1633                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  1634  0537  01B8               	clrf	LCDByte@isdata
  1635  0538  0AB8               	incf	LCDByte@isdata,f
  1636  0539  0842               	movf	LCDWriteString@cc,w
  1637  053A  2D52               	goto	L5
  1638  053B                     l2295:	
  1639                           ;lcd_hd44780_pic16.c: 292: }
  1640                           
  1641                           
  1642                           ;lcd_hd44780_pic16.c: 293: else
  1643                           ;lcd_hd44780_pic16.c: 294: {
  1644                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  1645  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1646  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1647  053D  01B8               	clrf	LCDByte@isdata
  1648  053E  0AB8               	incf	LCDByte@isdata,f
  1649  053F  3025               	movlw	37
  1650  0540  120A  118A  266B  120A  118A  	fcall	_LCDByte
  1651  0545                     l2299:	
  1652                           ;lcd_hd44780_pic16.c: 297: }
  1653                           ;lcd_hd44780_pic16.c: 298: }
  1654                           
  1655                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  1656                           
  1657                           
  1658                           ;lcd_hd44780_pic16.c: 299: else
  1659                           ;lcd_hd44780_pic16.c: 300: {
  1660                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  1661  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0547  01B8               	clrf	LCDByte@isdata
  1664  0548  0AB8               	incf	LCDByte@isdata,f
  1665  0549  0840               	movf	LCDWriteString@msg+1,w
  1666  054A  00FF               	movwf	127
  1667  054B  083F               	movf	LCDWriteString@msg,w
  1668  054C  0084               	movwf	4
  1669  054D  120A  158A  2000  120A  118A  	fcall	stringtab
  1670  0552                     L5:	
  1671  0552  120A  118A  266B  120A  118A  	fcall	_LCDByte
  1672                           
  1673                           ;lcd_hd44780_pic16.c: 302: }
  1674                           ;lcd_hd44780_pic16.c: 303: msg++;
  1675  0557  3001               	movlw	1
  1676  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1678  055A  07BF               	addwf	LCDWriteString@msg,f
  1679  055B  1803               	skipnc
  1680  055C  0AC0               	incf	LCDWriteString@msg+1,f
  1681  055D  2D03               	goto	l2303
  1682  055E                     __end_of_LCDWriteString:	
  1683                           
  1684                           	psect	text3
  1685  020B                     __ptext3:	
  1686 ;; *************** function _LCDWriteInt *****************
  1687 ;; Defined at:
  1688 ;;		line 317 in file "lcd_hd44780_pic16.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  val             2   31[BANK0 ] int 
  1691 ;;  field_length    1   33[BANK0 ] char 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  str             5    0[BANK1 ] unsigned char [5]
  1694 ;;  i               2    7[BANK1 ] int 
  1695 ;;  j               2    5[BANK1 ] int 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         0       3       0       0       0
  1706 ;;      Locals:         0       0       9       0       0
  1707 ;;      Temps:          0       2       0       0       0
  1708 ;;      Totals:         0       5       9       0       0
  1709 ;;Total ram usage:       14 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    6
  1712 ;; This function calls:
  1713 ;;		_LCDByte
  1714 ;;		___awdiv
  1715 ;;		___awmod
  1716 ;; This function is called by:
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           
  1722                           ;psect for function _LCDWriteInt
  1723  020B                     _LCDWriteInt:	
  1724                           
  1725                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  1726                           
  1727                           ;incstack = 0
  1728                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1729  020B  30C0               	movlw	LCDWriteInt@str& (0+255)
  1730  020C  0084               	movwf	4
  1731  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1732  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1733  020F  0852               	movf	LCDWriteInt@F1642,w
  1734  0210  1383               	bcf	3,7	;select IRP bank1
  1735  0211  0080               	movwf	0
  1736  0212  0A84               	incf	4,f
  1737  0213  0853               	movf	LCDWriteInt@F1642+1,w
  1738  0214  0080               	movwf	0
  1739  0215  0A84               	incf	4,f
  1740  0216  0854               	movf	LCDWriteInt@F1642+2,w
  1741  0217  0080               	movwf	0
  1742  0218  0A84               	incf	4,f
  1743  0219  0855               	movf	LCDWriteInt@F1642+3,w
  1744  021A  0080               	movwf	0
  1745  021B  0A84               	incf	4,f
  1746  021C  0856               	movf	LCDWriteInt@F1642+4,w
  1747  021D  0080               	movwf	0
  1748                           
  1749                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  1750  021E  3004               	movlw	4
  1751  021F  1683               	bsf	3,5	;RP0=1, select bank1
  1752  0220  1303               	bcf	3,6	;RP1=0, select bank1
  1753  0221  00C7               	movwf	LCDWriteInt@i^(0+128)
  1754  0222  3000               	movlw	0
  1755  0223  00C8               	movwf	(LCDWriteInt@i^(0+128)+1)
  1756  0224  01C5               	clrf	LCDWriteInt@j^(0+128)
  1757  0225  01C6               	clrf	(LCDWriteInt@j+1)^(0+128)
  1758                           
  1759                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  1760  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0228  083F               	movf	LCDWriteInt@val,w
  1763  0229  0440               	iorwf	LCDWriteInt@val+1,w
  1764  022A  1D03               	btfss	3,2
  1765  022B  2A2F               	goto	l2315
  1766                           
  1767                           ;lcd_hd44780_pic16.c: 323: {
  1768                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  1769  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1770  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1771  022E  01C4               	clrf	(LCDWriteInt@str^(0+128)+4)
  1772  022F                     l2315:	
  1773                           
  1774                           ;lcd_hd44780_pic16.c: 325: }
  1775                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  1776  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1777  0230  1FC0               	btfss	LCDWriteInt@val+1,7
  1778  0231  2A41               	goto	l2327
  1779                           
  1780                           ;lcd_hd44780_pic16.c: 328: {
  1781                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  1782  0232  01B8               	clrf	LCDByte@isdata
  1783  0233  0AB8               	incf	LCDByte@isdata,f
  1784  0234  302D               	movlw	45
  1785  0235  120A  118A  266B  120A  118A  	fcall	_LCDByte
  1786                           
  1787                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  1788  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1789  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1790  023C  09BF               	comf	LCDWriteInt@val,f
  1791  023D  09C0               	comf	LCDWriteInt@val+1,f
  1792  023E  0ABF               	incf	LCDWriteInt@val,f
  1793  023F  1903               	skipnz
  1794  0240  0AC0               	incf	LCDWriteInt@val+1,f
  1795  0241                     l2327:	
  1796                           ;lcd_hd44780_pic16.c: 331: }
  1797                           ;lcd_hd44780_pic16.c: 333: while(val)
  1798                           
  1799  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0242  083F               	movf	LCDWriteInt@val,w
  1801  0243  0440               	iorwf	LCDWriteInt@val+1,w
  1802  0244  1903               	btfsc	3,2
  1803  0245  2A7D               	goto	l2329
  1804                           
  1805                           ;lcd_hd44780_pic16.c: 334: {
  1806                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  1807  0246  300A               	movlw	10
  1808  0247  00B3               	movwf	___awmod@divisor
  1809  0248  3000               	movlw	0
  1810  0249  00B4               	movwf	___awmod@divisor+1
  1811  024A  0840               	movf	LCDWriteInt@val+1,w
  1812  024B  00B6               	movwf	___awmod@dividend+1
  1813  024C  083F               	movf	LCDWriteInt@val,w
  1814  024D  00B5               	movwf	___awmod@dividend
  1815  024E  120A  118A  2719  120A  118A  	fcall	___awmod
  1816  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0255  0833               	movf	?___awmod,w
  1819  0256  00C2               	movwf	??_LCDWriteInt
  1820  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0259  0847               	movf	LCDWriteInt@i^(0+128),w
  1823  025A  3EC0               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1824  025B  0084               	movwf	4
  1825  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1826  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1827  025E  0842               	movf	??_LCDWriteInt,w
  1828  025F  1383               	bcf	3,7	;select IRP bank1
  1829  0260  0080               	movwf	0
  1830                           
  1831                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  1832  0261  300A               	movlw	10
  1833  0262  00B3               	movwf	___awdiv@divisor
  1834  0263  3000               	movlw	0
  1835  0264  00B4               	movwf	___awdiv@divisor+1
  1836  0265  0840               	movf	LCDWriteInt@val+1,w
  1837  0266  00B6               	movwf	___awdiv@dividend+1
  1838  0267  083F               	movf	LCDWriteInt@val,w
  1839  0268  00B5               	movwf	___awdiv@dividend
  1840  0269  120A  118A  255E  120A  118A  	fcall	___awdiv
  1841  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1842  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0270  0834               	movf	?___awdiv+1,w
  1844  0271  00C0               	movwf	LCDWriteInt@val+1
  1845  0272  0833               	movf	?___awdiv,w
  1846  0273  00BF               	movwf	LCDWriteInt@val
  1847                           
  1848                           ;lcd_hd44780_pic16.c: 337: i--;
  1849  0274  30FF               	movlw	255
  1850  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1851  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1852  0277  07C7               	addwf	LCDWriteInt@i^(0+128),f
  1853  0278  1803               	skipnc
  1854  0279  0AC8               	incf	(LCDWriteInt@i+1)^(0+128),f
  1855  027A  30FF               	movlw	255
  1856  027B  07C8               	addwf	(LCDWriteInt@i+1)^(0+128),f
  1857  027C  2A41               	goto	l2327
  1858  027D                     l2329:	
  1859                           
  1860                           ;lcd_hd44780_pic16.c: 338: }
  1861                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  1862  027D  0A41               	incf	LCDWriteInt@field_length,w
  1863  027E  1903               	btfsc	3,2
  1864  027F  2A99               	goto	l2337
  1865                           
  1866                           ;lcd_hd44780_pic16.c: 341: else
  1867                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  1868                           
  1869                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  1870  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0281  0841               	movf	LCDWriteInt@field_length,w
  1872  0282  00C2               	movwf	??_LCDWriteInt
  1873  0283  01C3               	clrf	??_LCDWriteInt+1
  1874  0284  1BC2               	btfsc	??_LCDWriteInt,7
  1875  0285  03C3               	decf	??_LCDWriteInt+1,f
  1876  0286  09C2               	comf	??_LCDWriteInt,f
  1877  0287  09C3               	comf	??_LCDWriteInt+1,f
  1878  0288  0AC2               	incf	??_LCDWriteInt,f
  1879  0289  1903               	skipnz
  1880  028A  0AC3               	incf	??_LCDWriteInt+1,f
  1881  028B  0842               	movf	??_LCDWriteInt,w
  1882  028C  3E05               	addlw	5
  1883  028D  1683               	bsf	3,5	;RP0=1, select bank1
  1884  028E  1303               	bcf	3,6	;RP1=0, select bank1
  1885  028F  00C5               	movwf	LCDWriteInt@j^(0+128)
  1886  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0292  0843               	movf	??_LCDWriteInt+1,w
  1889  0293  1803               	skipnc
  1890  0294  3E01               	addlw	1
  1891  0295  3E00               	addlw	0
  1892  0296  1683               	bsf	3,5	;RP0=1, select bank1
  1893  0297  1303               	bcf	3,6	;RP1=0, select bank1
  1894  0298  00C6               	movwf	(LCDWriteInt@j+1)^(0+128)
  1895  0299                     l2337:	
  1896                           
  1897                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  1898  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1899  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1900  029B  0846               	movf	(LCDWriteInt@j+1)^(0+128),w
  1901  029C  00C8               	movwf	(LCDWriteInt@i+1)^(0+128)
  1902  029D  0845               	movf	LCDWriteInt@j^(0+128),w
  1903  029E  00C7               	movwf	LCDWriteInt@i^(0+128)
  1904  029F                     L6:	
  1905  029F  0848               	movf	(LCDWriteInt@i+1)^(0+128),w
  1906  02A0  3A80               	xorlw	128
  1907  02A1  00FF               	movwf	127
  1908  02A2  3080               	movlw	128
  1909  02A3  027F               	subwf	127,w
  1910  02A4  1D03               	skipz
  1911  02A5  2AA8               	goto	u2415
  1912  02A6  3005               	movlw	5
  1913  02A7  0247               	subwf	LCDWriteInt@i^(0+128),w
  1914  02A8                     u2415:	
  1915  02A8  1803               	btfsc	3,0
  1916  02A9  0008               	return
  1917                           
  1918                           ;lcd_hd44780_pic16.c: 346: {
  1919                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  1920  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1921  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1922  02AC  01B8               	clrf	LCDByte@isdata
  1923  02AD  0AB8               	incf	LCDByte@isdata,f
  1924  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  1925  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  1926  02B0  0847               	movf	LCDWriteInt@i^(0+128),w
  1927  02B1  3EC0               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  1928  02B2  0084               	movwf	4
  1929  02B3  1383               	bcf	3,7	;select IRP bank1
  1930  02B4  0800               	movf	0,w
  1931  02B5  3E30               	addlw	48
  1932  02B6  120A  118A  266B  120A  118A  	fcall	_LCDByte
  1933  02BB  3001               	movlw	1
  1934  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  1935  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  1936  02BE  07C7               	addwf	LCDWriteInt@i^(0+128),f
  1937  02BF  1803               	skipnc
  1938  02C0  0AC8               	incf	(LCDWriteInt@i+1)^(0+128),f
  1939  02C1  3000               	movlw	0
  1940  02C2  07C8               	addwf	(LCDWriteInt@i+1)^(0+128),f
  1941  02C3  2A9F               	goto	L6
  1942  02C4                     __end_of_LCDWriteInt:	
  1943                           
  1944                           	psect	text4
  1945  0719                     __ptext4:	
  1946 ;; *************** function ___awmod *****************
  1947 ;; Defined at:
  1948 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  divisor         2   19[BANK0 ] int 
  1951 ;;  dividend        2   21[BANK0 ] int 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  sign            1   25[BANK0 ] unsigned char 
  1954 ;;  counter         1   24[BANK0 ] unsigned char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  2   19[BANK0 ] int 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1964 ;;      Params:         0       4       0       0       0
  1965 ;;      Locals:         0       2       0       0       0
  1966 ;;      Temps:          0       1       0       0       0
  1967 ;;      Totals:         0       7       0       0       0
  1968 ;;Total ram usage:        7 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    4
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_LCDWriteInt
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function ___awmod
  1980  0719                     ___awmod:	
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1984  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1985  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1986  071B  01B9               	clrf	___awmod@sign
  1987  071C  1FB6               	btfss	___awmod@dividend+1,7
  1988  071D  2F25               	goto	l2125
  1989  071E  09B5               	comf	___awmod@dividend,f
  1990  071F  09B6               	comf	___awmod@dividend+1,f
  1991  0720  0AB5               	incf	___awmod@dividend,f
  1992  0721  1903               	skipnz
  1993  0722  0AB6               	incf	___awmod@dividend+1,f
  1994  0723  01B9               	clrf	___awmod@sign
  1995  0724  0AB9               	incf	___awmod@sign,f
  1996  0725                     l2125:	
  1997  0725  1FB4               	btfss	___awmod@divisor+1,7
  1998  0726  2F2C               	goto	l2129
  1999  0727  09B3               	comf	___awmod@divisor,f
  2000  0728  09B4               	comf	___awmod@divisor+1,f
  2001  0729  0AB3               	incf	___awmod@divisor,f
  2002  072A  1903               	skipnz
  2003  072B  0AB4               	incf	___awmod@divisor+1,f
  2004  072C                     l2129:	
  2005  072C  0833               	movf	___awmod@divisor,w
  2006  072D  0434               	iorwf	___awmod@divisor+1,w
  2007  072E  1903               	btfsc	3,2
  2008  072F  2F59               	goto	l2147
  2009  0730  01B8               	clrf	___awmod@counter
  2010  0731  0AB8               	incf	___awmod@counter,f
  2011  0732                     l2137:	
  2012  0732  1BB4               	btfsc	___awmod@divisor+1,7
  2013  0733  2F40               	goto	l2139
  2014  0734  3001               	movlw	1
  2015  0735                     u2035:	
  2016  0735  1003               	clrc
  2017  0736  0DB3               	rlf	___awmod@divisor,f
  2018  0737  0DB4               	rlf	___awmod@divisor+1,f
  2019  0738  3EFF               	addlw	-1
  2020  0739  1D03               	skipz
  2021  073A  2F35               	goto	u2035
  2022  073B  3001               	movlw	1
  2023  073C  00B7               	movwf	??___awmod
  2024  073D  0837               	movf	??___awmod,w
  2025  073E  07B8               	addwf	___awmod@counter,f
  2026  073F  2F32               	goto	l2137
  2027  0740                     l2139:	
  2028  0740  0834               	movf	___awmod@divisor+1,w
  2029  0741  0236               	subwf	___awmod@dividend+1,w
  2030  0742  1D03               	skipz
  2031  0743  2F46               	goto	u2055
  2032  0744  0833               	movf	___awmod@divisor,w
  2033  0745  0235               	subwf	___awmod@dividend,w
  2034  0746                     u2055:	
  2035  0746  1C03               	skipc
  2036  0747  2F4E               	goto	l2143
  2037  0748  0833               	movf	___awmod@divisor,w
  2038  0749  02B5               	subwf	___awmod@dividend,f
  2039  074A  0834               	movf	___awmod@divisor+1,w
  2040  074B  1C03               	skipc
  2041  074C  03B6               	decf	___awmod@dividend+1,f
  2042  074D  02B6               	subwf	___awmod@dividend+1,f
  2043  074E                     l2143:	
  2044  074E  3001               	movlw	1
  2045  074F                     u2065:	
  2046  074F  1003               	clrc
  2047  0750  0CB4               	rrf	___awmod@divisor+1,f
  2048  0751  0CB3               	rrf	___awmod@divisor,f
  2049  0752  3EFF               	addlw	-1
  2050  0753  1D03               	skipz
  2051  0754  2F4F               	goto	u2065
  2052  0755  3001               	movlw	1
  2053  0756  02B8               	subwf	___awmod@counter,f
  2054  0757  1D03               	btfss	3,2
  2055  0758  2F40               	goto	l2139
  2056  0759                     l2147:	
  2057  0759  0839               	movf	___awmod@sign,w
  2058  075A  1903               	btfsc	3,2
  2059  075B  2F61               	goto	l2151
  2060  075C  09B5               	comf	___awmod@dividend,f
  2061  075D  09B6               	comf	___awmod@dividend+1,f
  2062  075E  0AB5               	incf	___awmod@dividend,f
  2063  075F  1903               	skipnz
  2064  0760  0AB6               	incf	___awmod@dividend+1,f
  2065  0761                     l2151:	
  2066  0761  0836               	movf	___awmod@dividend+1,w
  2067  0762  00B4               	movwf	?___awmod+1
  2068  0763  0835               	movf	___awmod@dividend,w
  2069  0764  00B3               	movwf	?___awmod
  2070  0765  0008               	return
  2071  0766                     __end_of___awmod:	
  2072                           
  2073                           	psect	text5
  2074  055E                     __ptext5:	
  2075 ;; *************** function ___awdiv *****************
  2076 ;; Defined at:
  2077 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  divisor         2   19[BANK0 ] int 
  2080 ;;  dividend        2   21[BANK0 ] int 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  quotient        2   26[BANK0 ] int 
  2083 ;;  sign            1   25[BANK0 ] unsigned char 
  2084 ;;  counter         1   24[BANK0 ] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2   19[BANK0 ] int 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       4       0       0       0
  2095 ;;      Locals:         0       4       0       0       0
  2096 ;;      Temps:          0       1       0       0       0
  2097 ;;      Totals:         0       9       0       0       0
  2098 ;;Total ram usage:        9 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    4
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;;		_LCDWriteInt
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function ___awdiv
  2111  055E                     ___awdiv:	
  2112                           
  2113                           ;incstack = 0
  2114                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2115  055E  1283               	bcf	3,5	;RP0=0, select bank0
  2116  055F  1303               	bcf	3,6	;RP1=0, select bank0
  2117  0560  01B9               	clrf	___awdiv@sign
  2118  0561  1FB4               	btfss	___awdiv@divisor+1,7
  2119  0562  2D6A               	goto	l2081
  2120  0563  09B3               	comf	___awdiv@divisor,f
  2121  0564  09B4               	comf	___awdiv@divisor+1,f
  2122  0565  0AB3               	incf	___awdiv@divisor,f
  2123  0566  1903               	skipnz
  2124  0567  0AB4               	incf	___awdiv@divisor+1,f
  2125  0568  01B9               	clrf	___awdiv@sign
  2126  0569  0AB9               	incf	___awdiv@sign,f
  2127  056A                     l2081:	
  2128  056A  1FB6               	btfss	___awdiv@dividend+1,7
  2129  056B  2D75               	goto	l2087
  2130  056C  09B5               	comf	___awdiv@dividend,f
  2131  056D  09B6               	comf	___awdiv@dividend+1,f
  2132  056E  0AB5               	incf	___awdiv@dividend,f
  2133  056F  1903               	skipnz
  2134  0570  0AB6               	incf	___awdiv@dividend+1,f
  2135  0571  3001               	movlw	1
  2136  0572  00B7               	movwf	??___awdiv
  2137  0573  0837               	movf	??___awdiv,w
  2138  0574  06B9               	xorwf	___awdiv@sign,f
  2139  0575                     l2087:	
  2140  0575  01BA               	clrf	___awdiv@quotient
  2141  0576  01BB               	clrf	___awdiv@quotient+1
  2142  0577  0833               	movf	___awdiv@divisor,w
  2143  0578  0434               	iorwf	___awdiv@divisor+1,w
  2144  0579  1903               	btfsc	3,2
  2145  057A  2DAC               	goto	l2109
  2146  057B  01B8               	clrf	___awdiv@counter
  2147  057C  0AB8               	incf	___awdiv@counter,f
  2148  057D                     l2097:	
  2149  057D  1BB4               	btfsc	___awdiv@divisor+1,7
  2150  057E  2D8B               	goto	l2099
  2151  057F  3001               	movlw	1
  2152  0580                     u1935:	
  2153  0580  1003               	clrc
  2154  0581  0DB3               	rlf	___awdiv@divisor,f
  2155  0582  0DB4               	rlf	___awdiv@divisor+1,f
  2156  0583  3EFF               	addlw	-1
  2157  0584  1D03               	skipz
  2158  0585  2D80               	goto	u1935
  2159  0586  3001               	movlw	1
  2160  0587  00B7               	movwf	??___awdiv
  2161  0588  0837               	movf	??___awdiv,w
  2162  0589  07B8               	addwf	___awdiv@counter,f
  2163  058A  2D7D               	goto	l2097
  2164  058B                     l2099:	
  2165  058B  3001               	movlw	1
  2166  058C                     u1955:	
  2167  058C  1003               	clrc
  2168  058D  0DBA               	rlf	___awdiv@quotient,f
  2169  058E  0DBB               	rlf	___awdiv@quotient+1,f
  2170  058F  3EFF               	addlw	-1
  2171  0590  1D03               	skipz
  2172  0591  2D8C               	goto	u1955
  2173  0592  0834               	movf	___awdiv@divisor+1,w
  2174  0593  0236               	subwf	___awdiv@dividend+1,w
  2175  0594  1D03               	skipz
  2176  0595  2D98               	goto	u1965
  2177  0596  0833               	movf	___awdiv@divisor,w
  2178  0597  0235               	subwf	___awdiv@dividend,w
  2179  0598                     u1965:	
  2180  0598  1C03               	skipc
  2181  0599  2DA1               	goto	l2105
  2182  059A  0833               	movf	___awdiv@divisor,w
  2183  059B  02B5               	subwf	___awdiv@dividend,f
  2184  059C  0834               	movf	___awdiv@divisor+1,w
  2185  059D  1C03               	skipc
  2186  059E  03B6               	decf	___awdiv@dividend+1,f
  2187  059F  02B6               	subwf	___awdiv@dividend+1,f
  2188  05A0  143A               	bsf	___awdiv@quotient,0
  2189  05A1                     l2105:	
  2190  05A1  3001               	movlw	1
  2191  05A2                     u1975:	
  2192  05A2  1003               	clrc
  2193  05A3  0CB4               	rrf	___awdiv@divisor+1,f
  2194  05A4  0CB3               	rrf	___awdiv@divisor,f
  2195  05A5  3EFF               	addlw	-1
  2196  05A6  1D03               	skipz
  2197  05A7  2DA2               	goto	u1975
  2198  05A8  3001               	movlw	1
  2199  05A9  02B8               	subwf	___awdiv@counter,f
  2200  05AA  1D03               	btfss	3,2
  2201  05AB  2D8B               	goto	l2099
  2202  05AC                     l2109:	
  2203  05AC  0839               	movf	___awdiv@sign,w
  2204  05AD  1903               	btfsc	3,2
  2205  05AE  2DB4               	goto	l2113
  2206  05AF  09BA               	comf	___awdiv@quotient,f
  2207  05B0  09BB               	comf	___awdiv@quotient+1,f
  2208  05B1  0ABA               	incf	___awdiv@quotient,f
  2209  05B2  1903               	skipnz
  2210  05B3  0ABB               	incf	___awdiv@quotient+1,f
  2211  05B4                     l2113:	
  2212  05B4  083B               	movf	___awdiv@quotient+1,w
  2213  05B5  00B4               	movwf	?___awdiv+1
  2214  05B6  083A               	movf	___awdiv@quotient,w
  2215  05B7  00B3               	movwf	?___awdiv
  2216  05B8  0008               	return
  2217  05B9                     __end_of___awdiv:	
  2218                           
  2219                           	psect	text6
  2220  03CD                     __ptext6:	
  2221 ;; *************** function _LCDInit *****************
  2222 ;; Defined at:
  2223 ;;		line 207 in file "lcd_hd44780_pic16.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  style           1    wreg     unsigned char 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  style           1   33[BANK0 ] unsigned char 
  2228 ;;  __i             1   34[BANK0 ] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         0       2       0       0       0
  2240 ;;      Temps:          0       2       0       0       0
  2241 ;;      Totals:         0       4       0       0       0
  2242 ;;Total ram usage:        4 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    6
  2245 ;; This function calls:
  2246 ;;		_LCDBusyLoop
  2247 ;;		_LCDByte
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function _LCDInit
  2255  03CD                     _LCDInit:	
  2256                           
  2257                           ;incstack = 0
  2258                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2259                           ;LCDInit@style stored from wreg
  2260  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2261  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2262  03CF  00C1               	movwf	LCDInit@style
  2263                           
  2264                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  2265  03D0  30C3               	movlw	195
  2266  03D1  00C0               	movwf	??_LCDInit+1
  2267  03D2  30CD               	movlw	205
  2268  03D3  00BF               	movwf	??_LCDInit
  2269  03D4                     u2667:	
  2270  03D4  0BBF               	decfsz	??_LCDInit,f
  2271  03D5  2BD4               	goto	u2667
  2272  03D6  0BC0               	decfsz	??_LCDInit+1,f
  2273  03D7  2BD4               	goto	u2667
  2274                           
  2275                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<4));
  2276  03D8  300F               	movlw	15
  2277  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2278  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2279  03DB  00BF               	movwf	??_LCDInit
  2280  03DC  083F               	movf	??_LCDInit,w
  2281  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  2282  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  2283  03DF  0587               	andwf	7,f	;volatile
  2284                           
  2285                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC3=0;
  2286  03E0  1187               	bcf	7,3	;volatile
  2287                           
  2288                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC1=0;
  2289  03E1  1087               	bcf	7,1	;volatile
  2290                           
  2291                           ;lcd_hd44780_pic16.c: 216: TRISCbits.TRISC2=0;
  2292  03E2  1107               	bcf	7,2	;volatile
  2293                           
  2294                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<4));
  2295  03E3  300F               	movlw	15
  2296  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2297  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2298  03E6  00BF               	movwf	??_LCDInit
  2299  03E7  083F               	movf	??_LCDInit,w
  2300  03E8  0587               	andwf	7,f	;volatile
  2301                           
  2302                           ;lcd_hd44780_pic16.c: 220: (RC3=0);
  2303  03E9  1187               	bcf	7,3	;volatile
  2304                           
  2305                           ;lcd_hd44780_pic16.c: 221: (RC2=0);
  2306  03EA  1107               	bcf	7,2	;volatile
  2307                           
  2308                           ;lcd_hd44780_pic16.c: 222: (RC1=0);
  2309  03EB  1087               	bcf	7,1	;volatile
  2310                           
  2311                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2312  03EC  2BED               	nop2	;2 cycle nop
  2313                           
  2314                           ;lcd_hd44780_pic16.c: 227: (RC3=1);
  2315  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2316  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2317  03EF  1587               	bsf	7,3	;volatile
  2318                           
  2319                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<4);
  2320  03F0  1687               	bsf	7,5	;volatile
  2321                           
  2322                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2323  03F1  2BF2               	nop2	;2 cycle nop
  2324  03F2  2BF3               	nop2	;2 cycle nop
  2325  03F3  0000               	nop
  2326                           
  2327                           ;lcd_hd44780_pic16.c: 230: (RC3=0);
  2328  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2329  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2330  03F6  1187               	bcf	7,3	;volatile
  2331                           
  2332                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2333  03F7  2BF8               	nop2	;2 cycle nop
  2334  03F8  2BF9               	nop2	;2 cycle nop
  2335  03F9  0000               	nop
  2336                           
  2337                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  2338  03FA  120A  118A  2435  120A  118A  	fcall	_LCDBusyLoop
  2339                           
  2340                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  2341  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0401  01B8               	clrf	LCDByte@isdata
  2344  0402  3028               	movlw	40
  2345  0403  120A  118A  266B  120A  118A  	fcall	_LCDByte
  2346                           
  2347                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  2348  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2350  040A  01B8               	clrf	LCDByte@isdata
  2351  040B  0841               	movf	LCDInit@style,w
  2352  040C  380C               	iorlw	12
  2353  040D  120A  118A  266B  120A  118A  	fcall	_LCDByte
  2354                           
  2355                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  2356  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0414  01B8               	clrf	LCDByte@isdata
  2359  0415  3040               	movlw	64
  2360  0416  120A  118A  266B  120A  118A  	fcall	_LCDByte
  2361                           
  2362                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  2363                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  2364  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2365  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2366  041D  01C2               	clrf	LCDInit@__i
  2367  041E                     L7:	
  2368  041E  3008               	movlw	8
  2369  041F  0242               	subwf	LCDInit@__i,w
  2370  0420  1803               	btfsc	3,0
  2371  0421  0008               	return
  2372                           
  2373                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  2374  0422  01B8               	clrf	LCDByte@isdata
  2375  0423  0AB8               	incf	LCDByte@isdata,f
  2376  0424  0842               	movf	LCDInit@__i,w
  2377  0425  3E4A               	addlw	(low (___cgram| 0))& (0+255)
  2378  0426  0084               	movwf	4
  2379  0427  1383               	bcf	3,7	;select IRP bank0
  2380  0428  0800               	movf	0,w
  2381  0429  120A  118A  266B  120A  118A  	fcall	_LCDByte
  2382  042E  3001               	movlw	1
  2383  042F  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0430  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0431  00BF               	movwf	??_LCDInit
  2386  0432  083F               	movf	??_LCDInit,w
  2387  0433  07C2               	addwf	LCDInit@__i,f
  2388  0434  2C1E               	goto	L7
  2389  0435                     __end_of_LCDInit:	
  2390                           
  2391                           	psect	text7
  2392  0FDA                     __ptext7:	
  2393 ;; *************** function _LCDGotoXY *****************
  2394 ;; Defined at:
  2395 ;;		line 355 in file "lcd_hd44780_pic16.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  x               1    wreg     unsigned char 
  2398 ;;  y               1   31[BANK0 ] unsigned char 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  x               1   33[BANK0 ] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       1       0       0       0
  2411 ;;      Locals:         0       1       0       0       0
  2412 ;;      Temps:          0       1       0       0       0
  2413 ;;      Totals:         0       3       0       0       0
  2414 ;;Total ram usage:        3 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    6
  2417 ;; This function calls:
  2418 ;;		_LCDByte
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _LCDGotoXY
  2426  0FDA                     _LCDGotoXY:	
  2427                           
  2428                           ;incstack = 0
  2429                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2430                           ;LCDGotoXY@x stored from wreg
  2431  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0FDC  00C1               	movwf	LCDGotoXY@x
  2434                           
  2435                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  2436  0FDD  3014               	movlw	20
  2437  0FDE  0241               	subwf	LCDGotoXY@x,w
  2438  0FDF  1803               	btfsc	3,0
  2439  0FE0  0008               	return
  2440  0FE1  2FEB               	goto	l2277
  2441  0FE2                     l160:	
  2442                           ;lcd_hd44780_pic16.c: 365: case 1:
  2443                           
  2444                           ;lcd_hd44780_pic16.c: 364: break;
  2445                           
  2446                           ;lcd_hd44780_pic16.c: 362: {
  2447                           ;lcd_hd44780_pic16.c: 363: case 0:
  2448                           
  2449                           ;lcd_hd44780_pic16.c: 361: switch(y)
  2450                           
  2451                           
  2452                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  2453  0FE2  1741               	bsf	LCDGotoXY@x,6
  2454                           
  2455                           ;lcd_hd44780_pic16.c: 367: break;
  2456  0FE3  2FF9               	goto	l159
  2457  0FE4                     l2271:	
  2458                           ;lcd_hd44780_pic16.c: 368: case 2:
  2459                           
  2460                           
  2461                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  2462  0FE4  3014               	movlw	20
  2463  0FE5  2FE7               	goto	L8
  2464  0FE6                     l2273:	
  2465                           ;lcd_hd44780_pic16.c: 371: case 3:
  2466                           
  2467                           ;lcd_hd44780_pic16.c: 370: break;
  2468                           
  2469                           
  2470                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  2471  0FE6  3054               	movlw	84
  2472  0FE7                     L8:	
  2473  0FE7  00C0               	movwf	??_LCDGotoXY
  2474  0FE8  0840               	movf	??_LCDGotoXY,w
  2475  0FE9  07C1               	addwf	LCDGotoXY@x,f
  2476                           
  2477                           ;lcd_hd44780_pic16.c: 374: }
  2478                           
  2479                           ;lcd_hd44780_pic16.c: 373: break;
  2480  0FEA  2FF9               	goto	l159
  2481  0FEB                     l2277:	
  2482  0FEB  083F               	movf	LCDGotoXY@y,w
  2483                           
  2484                           ; Switch size 1, requested type "space"
  2485                           ; Number of cases is 4, Range of values is 0 to 3
  2486                           ; switch strategies available:
  2487                           ; Name         Instructions Cycles
  2488                           ; simple_byte           13     7 (average)
  2489                           ; direct_byte           20     8 (fixed)
  2490                           ; jumptable            260     6 (fixed)
  2491                           ;	Chosen strategy is simple_byte
  2492  0FEC  3A00               	xorlw	0	; case 0
  2493  0FED  1903               	skipnz
  2494  0FEE  2FF9               	goto	l159
  2495  0FEF  3A01               	xorlw	1	; case 1
  2496  0FF0  1903               	skipnz
  2497  0FF1  2FE2               	goto	l160
  2498  0FF2  3A03               	xorlw	3	; case 2
  2499  0FF3  1903               	skipnz
  2500  0FF4  2FE4               	goto	l2271
  2501  0FF5  3A01               	xorlw	1	; case 3
  2502  0FF6  1903               	skipnz
  2503  0FF7  2FE6               	goto	l2273
  2504  0FF8  2FF9               	goto	l159
  2505  0FF9                     l159:	
  2506                           
  2507                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  2508  0FF9  17C1               	bsf	LCDGotoXY@x,7
  2509                           
  2510                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  2511  0FFA  01B8               	clrf	LCDByte@isdata
  2512  0FFB  0841               	movf	LCDGotoXY@x,w
  2513  0FFC  120A  118A  266B   	fcall	_LCDByte
  2514  0FFF  0008               	return
  2515  1000                     __end_of_LCDGotoXY:	
  2516                           
  2517                           	psect	text8
  2518  066B                     __ptext8:	
  2519 ;; *************** function _LCDByte *****************
  2520 ;; Defined at:
  2521 ;;		line 80 in file "lcd_hd44780_pic16.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  c               1    wreg     unsigned char 
  2524 ;;  isdata          1   24[BANK0 ] unsigned char 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  c               1   29[BANK0 ] unsigned char 
  2527 ;;  temp            1   30[BANK0 ] unsigned char 
  2528 ;;  ln              1   28[BANK0 ] unsigned char 
  2529 ;;  hn              1   27[BANK0 ] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0, pclath, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2539 ;;      Params:         0       1       0       0       0
  2540 ;;      Locals:         0       4       0       0       0
  2541 ;;      Temps:          0       2       0       0       0
  2542 ;;      Totals:         0       7       0       0       0
  2543 ;;Total ram usage:        7 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    5
  2546 ;; This function calls:
  2547 ;;		_LCDBusyLoop
  2548 ;; This function is called by:
  2549 ;;		_main
  2550 ;;		_LCDInit
  2551 ;;		_LCDWriteString
  2552 ;;		_LCDWriteInt
  2553 ;;		_LCDGotoXY
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           
  2558                           ;psect for function _LCDByte
  2559  066B                     _LCDByte:	
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  2563                           ;LCDByte@c stored from wreg
  2564  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2565  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2566  066D  00BD               	movwf	LCDByte@c
  2567                           
  2568                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  2569                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  2570                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  2571  066E  083D               	movf	LCDByte@c,w
  2572  066F  00B9               	movwf	??_LCDByte
  2573  0670  3004               	movlw	4
  2574  0671                     u1865:	
  2575  0671  1003               	clrc
  2576  0672  0CB9               	rrf	??_LCDByte,f
  2577  0673  3EFF               	addlw	-1
  2578  0674  1D03               	skipz
  2579  0675  2E71               	goto	u1865
  2580  0676  0839               	movf	??_LCDByte,w
  2581  0677  00BA               	movwf	??_LCDByte+1
  2582  0678  083A               	movf	??_LCDByte+1,w
  2583  0679  00BB               	movwf	LCDByte@hn
  2584                           
  2585                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  2586  067A  083D               	movf	LCDByte@c,w
  2587  067B  390F               	andlw	15
  2588  067C  00B9               	movwf	??_LCDByte
  2589  067D  0839               	movf	??_LCDByte,w
  2590  067E  00BC               	movwf	LCDByte@ln
  2591                           
  2592                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  2593  067F  0838               	movf	LCDByte@isdata,w
  2594  0680  1D03               	btfss	3,2
  2595  0681  2E84               	goto	l113
  2596                           
  2597                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  2598  0682  1087               	bcf	7,1	;volatile
  2599  0683  2E85               	goto	l114
  2600  0684                     l113:	
  2601                           
  2602                           ;lcd_hd44780_pic16.c: 97: else
  2603                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  2604  0684  1487               	bsf	7,1	;volatile
  2605  0685                     l114:	
  2606                           
  2607                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2608  0685  2E86               	nop2	;2 cycle nop
  2609                           
  2610                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  2611  0686  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0687  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0688  1587               	bsf	7,3	;volatile
  2614                           
  2615                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  2616  0689  083B               	movf	LCDByte@hn,w
  2617  068A  00B9               	movwf	??_LCDByte
  2618  068B  3004               	movlw	4
  2619  068C                     u1885:	
  2620  068C  1003               	clrc
  2621  068D  0DB9               	rlf	??_LCDByte,f
  2622  068E  3EFF               	addlw	-1
  2623  068F  1D03               	skipz
  2624  0690  2E8C               	goto	u1885
  2625  0691  0807               	movf	7,w	;volatile
  2626  0692  390F               	andlw	15
  2627  0693  0439               	iorwf	??_LCDByte,w
  2628  0694  00BA               	movwf	??_LCDByte+1
  2629  0695  083A               	movf	??_LCDByte+1,w
  2630  0696  00BE               	movwf	LCDByte@temp
  2631                           
  2632                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  2633  0697  083E               	movf	LCDByte@temp,w
  2634  0698  0087               	movwf	7	;volatile
  2635                           
  2636                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2637  0699  2E9A               	nop2	;2 cycle nop
  2638  069A  2E9B               	nop2	;2 cycle nop
  2639  069B  0000               	nop
  2640                           
  2641                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  2642  069C  1283               	bcf	3,5	;RP0=0, select bank0
  2643  069D  1303               	bcf	3,6	;RP1=0, select bank0
  2644  069E  1187               	bcf	7,3	;volatile
  2645                           
  2646                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2647  069F  2EA0               	nop2	;2 cycle nop
  2648  06A0  2EA1               	nop2	;2 cycle nop
  2649  06A1  0000               	nop
  2650                           
  2651                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  2652  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  2653  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  2654  06A4  1587               	bsf	7,3	;volatile
  2655                           
  2656                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  2657  06A5  083C               	movf	LCDByte@ln,w
  2658  06A6  00B9               	movwf	??_LCDByte
  2659  06A7  3004               	movlw	4
  2660  06A8                     u1895:	
  2661  06A8  1003               	clrc
  2662  06A9  0DB9               	rlf	??_LCDByte,f
  2663  06AA  3EFF               	addlw	-1
  2664  06AB  1D03               	skipz
  2665  06AC  2EA8               	goto	u1895
  2666  06AD  0807               	movf	7,w	;volatile
  2667  06AE  390F               	andlw	15
  2668  06AF  0439               	iorwf	??_LCDByte,w
  2669  06B0  00BA               	movwf	??_LCDByte+1
  2670  06B1  083A               	movf	??_LCDByte+1,w
  2671  06B2  00BE               	movwf	LCDByte@temp
  2672                           
  2673                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  2674  06B3  083E               	movf	LCDByte@temp,w
  2675  06B4  0087               	movwf	7	;volatile
  2676                           
  2677                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2678  06B5  2EB6               	nop2	;2 cycle nop
  2679  06B6  2EB7               	nop2	;2 cycle nop
  2680  06B7  0000               	nop
  2681                           
  2682                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  2683  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  2684  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  2685  06BA  1187               	bcf	7,3	;volatile
  2686                           
  2687                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2688  06BB  2EBC               	nop2	;2 cycle nop
  2689  06BC  2EBD               	nop2	;2 cycle nop
  2690  06BD  0000               	nop
  2691                           
  2692                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  2693  06BE  120A  118A  2435   	fcall	_LCDBusyLoop
  2694  06C1  0008               	return
  2695  06C2                     __end_of_LCDByte:	
  2696                           
  2697                           	psect	text9
  2698  0435                     __ptext9:	
  2699 ;; *************** function _LCDBusyLoop *****************
  2700 ;; Defined at:
  2701 ;;		line 135 in file "lcd_hd44780_pic16.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  status          1   23[BANK0 ] unsigned char 
  2706 ;;  temp            1   22[BANK0 ] unsigned char 
  2707 ;;  busy            1   21[BANK0 ] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         0       0       0       0       0
  2718 ;;      Locals:         0       3       0       0       0
  2719 ;;      Temps:          0       2       0       0       0
  2720 ;;      Totals:         0       5       0       0       0
  2721 ;;Total ram usage:        5 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    4
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_LCDByte
  2728 ;;		_LCDInit
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _LCDBusyLoop
  2734  0435                     _LCDBusyLoop:	
  2735                           
  2736                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  2737                           
  2738                           ;incstack = 0
  2739                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  2740  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0437  01B7               	clrf	LCDBusyLoop@status
  2743                           
  2744                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  2745  0438  30F0               	movlw	240
  2746  0439  00B3               	movwf	??_LCDBusyLoop
  2747  043A  0833               	movf	??_LCDBusyLoop,w
  2748  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2749  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2750  043D  0487               	iorwf	7,f	;volatile
  2751                           
  2752                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  2753  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2754  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0440  1507               	bsf	7,2	;volatile
  2756                           
  2757                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  2758  0441  1087               	bcf	7,1	;volatile
  2759                           
  2760                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2761  0442  2C43               	nop2	;2 cycle nop
  2762  0443                     l1961:	
  2763                           ;lcd_hd44780_pic16.c: 153: do
  2764                           
  2765                           
  2766                           ;lcd_hd44780_pic16.c: 154: {
  2767                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  2768  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0445  1587               	bsf	7,3	;volatile
  2771                           
  2772                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2773  0446  2C47               	nop2	;2 cycle nop
  2774                           
  2775                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  2776  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2777  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2778  0449  0807               	movf	7,w	;volatile
  2779  044A  00B3               	movwf	??_LCDBusyLoop
  2780  044B  3004               	movlw	4
  2781  044C                     u1785:	
  2782  044C  1003               	clrc
  2783  044D  0CB3               	rrf	??_LCDBusyLoop,f
  2784  044E  3EFF               	addlw	-1
  2785  044F  1D03               	skipz
  2786  0450  2C4C               	goto	u1785
  2787  0451  0833               	movf	??_LCDBusyLoop,w
  2788  0452  00B4               	movwf	??_LCDBusyLoop+1
  2789  0453  0834               	movf	??_LCDBusyLoop+1,w
  2790  0454  00B7               	movwf	LCDBusyLoop@status
  2791                           
  2792                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  2793  0455  0837               	movf	LCDBusyLoop@status,w
  2794  0456  00B3               	movwf	??_LCDBusyLoop
  2795  0457  3003               	movlw	3
  2796  0458                     u1795:	
  2797  0458  1003               	clrc
  2798  0459  0DB3               	rlf	??_LCDBusyLoop,f
  2799  045A  3EFF               	addlw	-1
  2800  045B  1D03               	skipz
  2801  045C  2C58               	goto	u1795
  2802  045D  1003               	clrc
  2803  045E  0D33               	rlf	??_LCDBusyLoop,w
  2804  045F  00B4               	movwf	??_LCDBusyLoop+1
  2805  0460  0834               	movf	??_LCDBusyLoop+1,w
  2806  0461  00B7               	movwf	LCDBusyLoop@status
  2807                           
  2808                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2809  0462  2C63               	nop2	;2 cycle nop
  2810                           
  2811                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  2812  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2813  0464  1303               	bcf	3,6	;RP1=0, select bank0
  2814  0465  1187               	bcf	7,3	;volatile
  2815                           
  2816                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2817  0466  2C67               	nop2	;2 cycle nop
  2818  0467  2C68               	nop2	;2 cycle nop
  2819  0468  0000               	nop
  2820                           
  2821                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  2822  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2823  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2824  046B  1587               	bsf	7,3	;volatile
  2825                           
  2826                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2827  046C  2C6D               	nop2	;2 cycle nop
  2828                           
  2829                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  2830  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2831  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2832  046F  0807               	movf	7,w	;volatile
  2833  0470  00B3               	movwf	??_LCDBusyLoop
  2834  0471  3004               	movlw	4
  2835  0472                     u1805:	
  2836  0472  1003               	clrc
  2837  0473  0CB3               	rrf	??_LCDBusyLoop,f
  2838  0474  3EFF               	addlw	-1
  2839  0475  1D03               	skipz
  2840  0476  2C72               	goto	u1805
  2841  0477  0833               	movf	??_LCDBusyLoop,w
  2842  0478  00B4               	movwf	??_LCDBusyLoop+1
  2843  0479  0834               	movf	??_LCDBusyLoop+1,w
  2844  047A  00B6               	movwf	LCDBusyLoop@temp
  2845                           
  2846                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  2847  047B  300F               	movlw	15
  2848  047C  00B3               	movwf	??_LCDBusyLoop
  2849  047D  0833               	movf	??_LCDBusyLoop,w
  2850  047E  05B6               	andwf	LCDBusyLoop@temp,f
  2851                           
  2852                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  2853  047F  0837               	movf	LCDBusyLoop@status,w
  2854  0480  0436               	iorwf	LCDBusyLoop@temp,w
  2855  0481  00B3               	movwf	??_LCDBusyLoop
  2856  0482  0833               	movf	??_LCDBusyLoop,w
  2857  0483  00B7               	movwf	LCDBusyLoop@status
  2858                           
  2859                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  2860  0484  0837               	movf	LCDBusyLoop@status,w
  2861  0485  3980               	andlw	128
  2862  0486  00B3               	movwf	??_LCDBusyLoop
  2863  0487  0833               	movf	??_LCDBusyLoop,w
  2864  0488  00B5               	movwf	LCDBusyLoop@busy
  2865                           
  2866                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  2867  0489  2C8A               	nop2	;2 cycle nop
  2868                           
  2869                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  2870  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2871  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2872  048C  1187               	bcf	7,3	;volatile
  2873                           
  2874                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  2875  048D  2C8E               	nop2	;2 cycle nop
  2876  048E  2C8F               	nop2	;2 cycle nop
  2877  048F  0000               	nop
  2878                           
  2879                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  2880  0490  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0491  1303               	bcf	3,6	;RP1=0, select bank0
  2882  0492  0835               	movf	LCDBusyLoop@busy,w
  2883  0493  1D03               	btfss	3,2
  2884  0494  2C43               	goto	l1961
  2885                           
  2886                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  2887  0495  1107               	bcf	7,2	;volatile
  2888                           
  2889                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  2890  0496  300F               	movlw	15
  2891  0497  00B3               	movwf	??_LCDBusyLoop
  2892  0498  0833               	movf	??_LCDBusyLoop,w
  2893  0499  1683               	bsf	3,5	;RP0=1, select bank1
  2894  049A  1303               	bcf	3,6	;RP1=0, select bank1
  2895  049B  0587               	andwf	7,f	;volatile
  2896  049C  0008               	return
  2897  049D                     __end_of_LCDBusyLoop:	
  2898                           
  2899                           	psect	text10
  2900  07E9                     __ptext10:	
  2901 ;; *************** function _ADCInit *****************
  2902 ;; Defined at:
  2903 ;;		line 7 in file "adc_pic16.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         0       0       0       0       0
  2918 ;;      Locals:         0       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0
  2920 ;;      Totals:         0       0       0       0       0
  2921 ;;Total ram usage:        0 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    4
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_main
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           
  2932                           ;psect for function _ADCInit
  2933  07E9                     _ADCInit:	
  2934                           
  2935                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  2936                           
  2937                           ;incstack = 0
  2938                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  2939  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  2940  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  2941  07EB  1686               	bsf	6,5	;volatile
  2942                           
  2943                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  2944  07EC  1683               	bsf	3,5	;RP0=1, select bank3
  2945  07ED  1703               	bsf	3,6	;RP1=1, select bank3
  2946  07EE  1689               	bsf	9,5	;volatile
  2947                           
  2948                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  2949  07EF  1683               	bsf	3,5	;RP0=1, select bank1
  2950  07F0  1303               	bcf	3,6	;RP1=0, select bank1
  2951  07F1  121F               	bcf	31,4	;volatile
  2952                           
  2953                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  2954  07F2  30C0               	movlw	192
  2955  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  2956  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  2957  07F5  049F               	iorwf	31,f	;volatile
  2958                           
  2959                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  2960  07F6  1683               	bsf	3,5	;RP0=1, select bank1
  2961  07F7  1303               	bcf	3,6	;RP1=0, select bank1
  2962  07F8  179F               	bsf	31,7	;volatile
  2963                           
  2964                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  2965  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  2966  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  2967  07FB  141F               	bsf	31,0	;volatile
  2968  07FC  0008               	return
  2969  07FD                     __end_of_ADCInit:	
  2970                           
  2971                           	psect	text11
  2972  0363                     __ptext11:	
  2973 ;; *************** function _ISR *****************
  2974 ;; Defined at:
  2975 ;;		line 157 in file "do_am.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0
  2991 ;;      Temps:          0       7       0       0       0
  2992 ;;      Totals:         0       7       0       0       0
  2993 ;;Total ram usage:        7 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    3
  2996 ;; This function calls:
  2997 ;;		i1_LCDByte
  2998 ;;		i1_LCDGotoXY
  2999 ;;		i1_LCDWriteInt
  3000 ;;		i1_LCDWriteString
  3001 ;; This function is called by:
  3002 ;;		Interrupt level 1
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function _ISR
  3008  0363                     _ISR:	
  3009                           
  3010                           ;do_am.c: 159: if(INTCONbits.RBIF == 1)
  3011  0363  1C0B               	btfss	11,0	;volatile
  3012  0364  2BBD               	goto	i1l2507
  3013                           
  3014                           ;do_am.c: 160: {
  3015                           ;do_am.c: 162: {
  3016                           ;do_am.c: 164: (LCDByte(0b00000001,0));
  3017  0365  01F5               	clrf	i1LCDByte@isdata
  3018  0366  3001               	movlw	1
  3019  0367  120A  118A  2612  120A  118A  	fcall	i1_LCDByte
  3020                           
  3021                           ;do_am.c: 166: { LCDGotoXY(0,0); LCDWriteString("Thermometer set:");};
  3022  036C  01FC               	clrf	i1LCDGotoXY@y
  3023  036D  3000               	movlw	0
  3024  036E  120A  158A  27B4  120A  118A  	fcall	i1_LCDGotoXY
  3025  0373  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3026  0374  00FC               	movwf	i1LCDWriteString@msg
  3027  0375  3080               	movlw	128
  3028  0376  00FD               	movwf	i1LCDWriteString@msg+1
  3029  0377  120A  118A  26C2  120A  118A  	fcall	i1_LCDWriteString
  3030                           
  3031                           ;do_am.c: 168: tuneUpTemp++;
  3032  037C  3001               	movlw	1
  3033  037D  1283               	bcf	3,5	;RP0=0, select bank0
  3034  037E  1303               	bcf	3,6	;RP1=0, select bank0
  3035  037F  00AC               	movwf	??_ISR
  3036  0380  082C               	movf	??_ISR,w
  3037  0381  07DC               	addwf	_tuneUpTemp,f
  3038                           
  3039                           ;do_am.c: 169: if(tuneUpTemp > 150)
  3040  0382  3097               	movlw	151
  3041  0383  025C               	subwf	_tuneUpTemp,w
  3042  0384  1803               	btfsc	3,0
  3043                           
  3044                           ;do_am.c: 170: {
  3045                           ;do_am.c: 171: tuneUpTemp = 0;
  3046  0385  01DC               	clrf	_tuneUpTemp
  3047                           
  3048                           ;do_am.c: 172: }
  3049                           ;do_am.c: 175: { LCDGotoXY(0,1); LCDWriteInt(tuneUpTemp,3);};
  3050  0386  01FC               	clrf	i1LCDGotoXY@y
  3051  0387  0AFC               	incf	i1LCDGotoXY@y,f
  3052  0388  3000               	movlw	0
  3053  0389  120A  158A  27B4  120A  118A  	fcall	i1_LCDGotoXY
  3054  038E  1283               	bcf	3,5	;RP0=0, select bank0
  3055  038F  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0390  085C               	movf	_tuneUpTemp,w
  3057  0391  00AC               	movwf	??_ISR
  3058  0392  01AD               	clrf	??_ISR+1
  3059  0393  082C               	movf	??_ISR,w
  3060  0394  00A0               	movwf	i1LCDWriteInt@val
  3061  0395  082D               	movf	??_ISR+1,w
  3062  0396  00A1               	movwf	i1LCDWriteInt@val+1
  3063  0397  3003               	movlw	3
  3064  0398  00AE               	movwf	??_ISR+2
  3065  0399  082E               	movf	??_ISR+2,w
  3066  039A  00A2               	movwf	i1LCDWriteInt@field_length
  3067  039B  120A  118A  22C4  120A  118A  	fcall	i1_LCDWriteInt
  3068                           
  3069                           ;do_am.c: 178: LCDWriteString("%0C");
  3070  03A0  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3071  03A1  00FC               	movwf	i1LCDWriteString@msg
  3072  03A2  3080               	movlw	128
  3073  03A3  00FD               	movwf	i1LCDWriteString@msg+1
  3074  03A4  120A  118A  26C2  120A  118A  	fcall	i1_LCDWriteString
  3075                           
  3076                           ;do_am.c: 180: _delay((unsigned long)((500)*(20000000/4000.0)));
  3077  03A9  300D               	movlw	13
  3078  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  3079  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  3080  03AC  00AE               	movwf	??_ISR+2
  3081  03AD  30AF               	movlw	175
  3082  03AE  00AD               	movwf	??_ISR+1
  3083  03AF  30C1               	movlw	193
  3084  03B0  00AC               	movwf	??_ISR
  3085  03B1                     u267_27:	
  3086  03B1  0BAC               	decfsz	??_ISR,f
  3087  03B2  2BB1               	goto	u267_27
  3088  03B3  0BAD               	decfsz	??_ISR+1,f
  3089  03B4  2BB1               	goto	u267_27
  3090  03B5  0BAE               	decfsz	??_ISR+2,f
  3091  03B6  2BB1               	goto	u267_27
  3092  03B7  0000               	nop
  3093                           
  3094                           ;do_am.c: 181: tuneUpTempDir = 1;
  3095  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3096  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3097  03BA  01D8               	clrf	_tuneUpTempDir
  3098  03BB  0AD8               	incf	_tuneUpTempDir,f
  3099                           
  3100                           ;do_am.c: 183: }
  3101                           ;do_am.c: 184: INTCONbits.RBIF = 0;
  3102  03BC  100B               	bcf	11,0	;volatile
  3103  03BD                     i1l2507:	
  3104                           
  3105                           ;do_am.c: 185: }
  3106                           ;do_am.c: 186: IOCBbits.IOCB4 = 0;
  3107  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  3108  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  3109  03BF  1216               	bcf	22,4	;volatile
  3110  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  3111  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  3112  03C2  0832               	movf	??_ISR+6,w
  3113  03C3  00FF               	movwf	127
  3114  03C4  0831               	movf	??_ISR+5,w
  3115  03C5  008A               	movwf	10
  3116  03C6  0830               	movf	??_ISR+4,w
  3117  03C7  0084               	movwf	4
  3118  03C8  0E2F               	swapf	(??_ISR+3)^0,w
  3119  03C9  0083               	movwf	3
  3120  03CA  0EFE               	swapf	126,f
  3121  03CB  0E7E               	swapf	126,w
  3122  03CC  0009               	retfie
  3123  03CD                     __end_of_ISR:	
  3124                           
  3125                           	psect	intentry
  3126  0004                     __pintentry:	
  3127                           ;incstack = 0
  3128                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3129                           
  3130  0004                     interrupt_function:	
  3131  007E                     saved_w	set	btemp
  3132  0004  00FE               	movwf	btemp
  3133  0005  0E03               	swapf	3,w
  3134  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0008  00AF               	movwf	??_ISR+3
  3137  0009  0804               	movf	4,w
  3138  000A  00B0               	movwf	??_ISR+4
  3139  000B  080A               	movf	10,w
  3140  000C  00B1               	movwf	??_ISR+5
  3141  000D  087F               	movf	btemp+1,w
  3142  000E  00B2               	movwf	??_ISR+6
  3143  000F  120A  118A  2B63   	ljmp	_ISR
  3144                           
  3145                           	psect	text12
  3146  06C2                     __ptext12:	
  3147 ;; *************** function i1_LCDWriteString *****************
  3148 ;; Defined at:
  3149 ;;		line 279 in file "lcd_hd44780_pic16.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  msg             2   12[COMMON] PTR const unsigned char 
  3152 ;;		 -> STR_8(4), STR_7(4), STR_6(5), STR_5(4), 
  3153 ;;		 -> STR_4(4), STR_3(5), STR_2(4), STR_1(17), 
  3154 ;;		 -> msg(32), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  LCDWriteStri    1    1[BANK0 ] char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         2       0       0       0       0
  3167 ;;      Locals:         0       1       0       0       0
  3168 ;;      Temps:          0       1       0       0       0
  3169 ;;      Totals:         2       2       0       0       0
  3170 ;;Total ram usage:        4 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    2
  3173 ;; This function calls:
  3174 ;;		i1_LCDByte
  3175 ;; This function is called by:
  3176 ;;		_ISR
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function i1_LCDWriteString
  3182  06C2                     i1_LCDWriteString:	
  3183  06C2                     i1l2421:	
  3184                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  3185                           
  3186                           ;incstack = 0
  3187                           ; Regs used in i1_LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3188                           
  3189  06C2  087D               	movf	i1LCDWriteString@msg+1,w
  3190  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  3191  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  3192  06C5  00FF               	movwf	127
  3193  06C6  087C               	movf	i1LCDWriteString@msg,w
  3194  06C7  0084               	movwf	4
  3195  06C8  120A  158A  2000  120A  118A  	fcall	stringtab
  3196  06CD  3A00               	xorlw	0
  3197  06CE  1903               	btfsc	3,2
  3198  06CF  0008               	return
  3199                           
  3200                           ;lcd_hd44780_pic16.c: 282: {
  3201                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  3202  06D0  087D               	movf	i1LCDWriteString@msg+1,w
  3203  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3204  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3205  06D3  00FF               	movwf	127
  3206  06D4  087C               	movf	i1LCDWriteString@msg,w
  3207  06D5  0084               	movwf	4
  3208  06D6  120A  158A  2000  120A  118A  	fcall	stringtab
  3209  06DB  3A25               	xorlw	37
  3210  06DC  1D03               	skipz
  3211  06DD  2F02               	goto	i1l2417
  3212                           
  3213                           ;lcd_hd44780_pic16.c: 285: {
  3214                           ;lcd_hd44780_pic16.c: 286: msg++;
  3215  06DE  3001               	movlw	1
  3216  06DF  07FC               	addwf	i1LCDWriteString@msg,f
  3217  06E0  1803               	skipnc
  3218  06E1  0AFD               	incf	i1LCDWriteString@msg+1,f
  3219                           
  3220                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  3221  06E2  087D               	movf	i1LCDWriteString@msg+1,w
  3222  06E3  00FF               	movwf	127
  3223  06E4  087C               	movf	i1LCDWriteString@msg,w
  3224  06E5  0084               	movwf	4
  3225  06E6  120A  158A  2000  120A  118A  	fcall	stringtab
  3226  06EB  3ED0               	addlw	-48
  3227  06EC  00A0               	movwf	??i1_LCDWriteString
  3228  06ED  0820               	movf	??i1_LCDWriteString,w
  3229  06EE  00A1               	movwf	i1LCDWriteString@cc
  3230                           
  3231                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  3232  06EF  1BA1               	btfsc	i1LCDWriteString@cc,7
  3233  06F0  2EFA               	goto	i1l2413
  3234  06F1  0821               	movf	i1LCDWriteString@cc,w
  3235  06F2  3A80               	xorlw	128
  3236  06F3  3E78               	addlw	-136
  3237  06F4  1803               	skipnc
  3238  06F5  2EFA               	goto	i1l2413
  3239                           
  3240                           ;lcd_hd44780_pic16.c: 290: {
  3241                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  3242  06F6  01F5               	clrf	i1LCDByte@isdata
  3243  06F7  0AF5               	incf	i1LCDByte@isdata,f
  3244  06F8  0821               	movf	i1LCDWriteString@cc,w
  3245  06F9  2F0F               	goto	L9
  3246  06FA                     i1l2413:	
  3247                           ;lcd_hd44780_pic16.c: 292: }
  3248                           
  3249                           
  3250                           ;lcd_hd44780_pic16.c: 293: else
  3251                           ;lcd_hd44780_pic16.c: 294: {
  3252                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  3253  06FA  01F5               	clrf	i1LCDByte@isdata
  3254  06FB  0AF5               	incf	i1LCDByte@isdata,f
  3255  06FC  3025               	movlw	37
  3256  06FD  120A  118A  2612  120A  118A  	fcall	i1_LCDByte
  3257  0702                     i1l2417:	
  3258                           ;lcd_hd44780_pic16.c: 297: }
  3259                           ;lcd_hd44780_pic16.c: 298: }
  3260                           
  3261                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  3262                           
  3263                           
  3264                           ;lcd_hd44780_pic16.c: 299: else
  3265                           ;lcd_hd44780_pic16.c: 300: {
  3266                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  3267  0702  01F5               	clrf	i1LCDByte@isdata
  3268  0703  0AF5               	incf	i1LCDByte@isdata,f
  3269  0704  087D               	movf	i1LCDWriteString@msg+1,w
  3270  0705  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0706  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0707  00FF               	movwf	127
  3273  0708  087C               	movf	i1LCDWriteString@msg,w
  3274  0709  0084               	movwf	4
  3275  070A  120A  158A  2000  120A  118A  	fcall	stringtab
  3276  070F                     L9:	
  3277  070F  120A  118A  2612  120A  118A  	fcall	i1_LCDByte
  3278                           
  3279                           ;lcd_hd44780_pic16.c: 302: }
  3280                           ;lcd_hd44780_pic16.c: 303: msg++;
  3281  0714  3001               	movlw	1
  3282  0715  07FC               	addwf	i1LCDWriteString@msg,f
  3283  0716  1803               	skipnc
  3284  0717  0AFD               	incf	i1LCDWriteString@msg+1,f
  3285  0718  2EC2               	goto	i1l2421
  3286  0719                     __end_ofi1_LCDWriteString:	
  3287                           
  3288                           	psect	text13
  3289  02C4                     __ptext13:	
  3290 ;; *************** function i1_LCDWriteInt *****************
  3291 ;; Defined at:
  3292 ;;		line 317 in file "lcd_hd44780_pic16.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  val             2    0[BANK0 ] int 
  3295 ;;  field_length    1    2[BANK0 ] char 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  3298 ;;  LCDWriteInt     2   10[BANK0 ] int 
  3299 ;;  LCDWriteInt     2    8[BANK0 ] int 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         0       3       0       0       0
  3310 ;;      Locals:         0       9       0       0       0
  3311 ;;      Temps:          2       0       0       0       0
  3312 ;;      Totals:         2      12       0       0       0
  3313 ;;Total ram usage:       14 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    2
  3316 ;; This function calls:
  3317 ;;		i1_LCDByte
  3318 ;;		i1___awdiv
  3319 ;;		i1___awmod
  3320 ;; This function is called by:
  3321 ;;		_ISR
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function i1_LCDWriteInt
  3327  02C4                     i1_LCDWriteInt:	
  3328                           
  3329                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  3330                           
  3331                           ;incstack = 0
  3332                           ; Regs used in i1_LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3333  02C4  3023               	movlw	i1LCDWriteInt@str& (0+255)
  3334  02C5  0084               	movwf	4
  3335  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  3336  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  3337  02C8  0852               	movf	LCDWriteInt@F1642,w
  3338  02C9  1383               	bcf	3,7	;select IRP bank0
  3339  02CA  0080               	movwf	0
  3340  02CB  0A84               	incf	4,f
  3341  02CC  0853               	movf	LCDWriteInt@F1642+1,w
  3342  02CD  0080               	movwf	0
  3343  02CE  0A84               	incf	4,f
  3344  02CF  0854               	movf	LCDWriteInt@F1642+2,w
  3345  02D0  0080               	movwf	0
  3346  02D1  0A84               	incf	4,f
  3347  02D2  0855               	movf	LCDWriteInt@F1642+3,w
  3348  02D3  0080               	movwf	0
  3349  02D4  0A84               	incf	4,f
  3350  02D5  0856               	movf	LCDWriteInt@F1642+4,w
  3351  02D6  0080               	movwf	0
  3352                           
  3353                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  3354  02D7  3004               	movlw	4
  3355  02D8  00AA               	movwf	i1LCDWriteInt@i
  3356  02D9  3000               	movlw	0
  3357  02DA  00AB               	movwf	i1LCDWriteInt@i+1
  3358  02DB  01A8               	clrf	i1LCDWriteInt@j
  3359  02DC  01A9               	clrf	i1LCDWriteInt@j+1
  3360                           
  3361                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  3362  02DD  0820               	movf	i1LCDWriteInt@val,w
  3363  02DE  0421               	iorwf	i1LCDWriteInt@val+1,w
  3364  02DF  1903               	btfsc	3,2
  3365                           
  3366                           ;lcd_hd44780_pic16.c: 323: {
  3367                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  3368  02E0  01A7               	clrf	i1LCDWriteInt@str+4
  3369                           
  3370                           ;lcd_hd44780_pic16.c: 325: }
  3371                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  3372  02E1  1FA1               	btfss	i1LCDWriteInt@val+1,7
  3373  02E2  2AF2               	goto	i1l2445
  3374                           
  3375                           ;lcd_hd44780_pic16.c: 328: {
  3376                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  3377  02E3  01F5               	clrf	i1LCDByte@isdata
  3378  02E4  0AF5               	incf	i1LCDByte@isdata,f
  3379  02E5  302D               	movlw	45
  3380  02E6  120A  118A  2612  120A  118A  	fcall	i1_LCDByte
  3381                           
  3382                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  3383  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  3384  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  3385  02ED  09A0               	comf	i1LCDWriteInt@val,f
  3386  02EE  09A1               	comf	i1LCDWriteInt@val+1,f
  3387  02EF  0AA0               	incf	i1LCDWriteInt@val,f
  3388  02F0  1903               	skipnz
  3389  02F1  0AA1               	incf	i1LCDWriteInt@val+1,f
  3390  02F2                     i1l2445:	
  3391                           ;lcd_hd44780_pic16.c: 331: }
  3392                           ;lcd_hd44780_pic16.c: 333: while(val)
  3393                           
  3394  02F2  0820               	movf	i1LCDWriteInt@val,w
  3395  02F3  0421               	iorwf	i1LCDWriteInt@val+1,w
  3396  02F4  1903               	btfsc	3,2
  3397  02F5  2B27               	goto	i1l2447
  3398                           
  3399                           ;lcd_hd44780_pic16.c: 334: {
  3400                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  3401  02F6  300A               	movlw	10
  3402  02F7  00F0               	movwf	i1___awmod@divisor
  3403  02F8  3000               	movlw	0
  3404  02F9  00F1               	movwf	i1___awmod@divisor+1
  3405  02FA  0821               	movf	i1LCDWriteInt@val+1,w
  3406  02FB  00F3               	movwf	i1___awmod@dividend+1
  3407  02FC  0820               	movf	i1LCDWriteInt@val,w
  3408  02FD  00F2               	movwf	i1___awmod@dividend
  3409  02FE  120A  118A  2766  120A  118A  	fcall	i1___awmod
  3410  0303  0870               	movf	?i1___awmod,w
  3411  0304  00FC               	movwf	??i1_LCDWriteInt
  3412  0305  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0306  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0307  082A               	movf	i1LCDWriteInt@i,w
  3415  0308  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  3416  0309  0084               	movwf	4
  3417  030A  087C               	movf	??i1_LCDWriteInt,w
  3418  030B  1383               	bcf	3,7	;select IRP bank0
  3419  030C  0080               	movwf	0
  3420                           
  3421                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  3422  030D  300A               	movlw	10
  3423  030E  00F0               	movwf	i1___awdiv@divisor
  3424  030F  3000               	movlw	0
  3425  0310  00F1               	movwf	i1___awdiv@divisor+1
  3426  0311  0821               	movf	i1LCDWriteInt@val+1,w
  3427  0312  00F3               	movwf	i1___awdiv@dividend+1
  3428  0313  0820               	movf	i1LCDWriteInt@val,w
  3429  0314  00F2               	movwf	i1___awdiv@dividend
  3430  0315  120A  118A  25B9  120A  118A  	fcall	i1___awdiv
  3431  031A  0871               	movf	?i1___awdiv+1,w
  3432  031B  1283               	bcf	3,5	;RP0=0, select bank0
  3433  031C  1303               	bcf	3,6	;RP1=0, select bank0
  3434  031D  00A1               	movwf	i1LCDWriteInt@val+1
  3435  031E  0870               	movf	?i1___awdiv,w
  3436  031F  00A0               	movwf	i1LCDWriteInt@val
  3437                           
  3438                           ;lcd_hd44780_pic16.c: 337: i--;
  3439  0320  30FF               	movlw	255
  3440  0321  07AA               	addwf	i1LCDWriteInt@i,f
  3441  0322  1803               	skipnc
  3442  0323  0AAB               	incf	i1LCDWriteInt@i+1,f
  3443  0324  30FF               	movlw	255
  3444  0325  07AB               	addwf	i1LCDWriteInt@i+1,f
  3445  0326  2AF2               	goto	i1l2445
  3446  0327                     i1l2447:	
  3447                           
  3448                           ;lcd_hd44780_pic16.c: 338: }
  3449                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  3450  0327  0A22               	incf	i1LCDWriteInt@field_length,w
  3451  0328  1903               	btfsc	3,2
  3452  0329  2B3C               	goto	i1l2455
  3453                           
  3454                           ;lcd_hd44780_pic16.c: 341: else
  3455                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  3456                           
  3457                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  3458  032A  0822               	movf	i1LCDWriteInt@field_length,w
  3459  032B  00FC               	movwf	??i1_LCDWriteInt
  3460  032C  01FD               	clrf	??i1_LCDWriteInt+1
  3461  032D  1BFC               	btfsc	??i1_LCDWriteInt,7
  3462  032E  03FD               	decf	??i1_LCDWriteInt+1,f
  3463  032F  09FC               	comf	??i1_LCDWriteInt,f
  3464  0330  09FD               	comf	??i1_LCDWriteInt+1,f
  3465  0331  0AFC               	incf	??i1_LCDWriteInt,f
  3466  0332  1903               	skipnz
  3467  0333  0AFD               	incf	??i1_LCDWriteInt+1,f
  3468  0334  087C               	movf	??i1_LCDWriteInt,w
  3469  0335  3E05               	addlw	5
  3470  0336  00A8               	movwf	i1LCDWriteInt@j
  3471  0337  087D               	movf	??i1_LCDWriteInt+1,w
  3472  0338  1803               	skipnc
  3473  0339  3E01               	addlw	1
  3474  033A  3E00               	addlw	0
  3475  033B  00A9               	movwf	i1LCDWriteInt@j+1
  3476  033C                     i1l2455:	
  3477                           
  3478                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  3479  033C  0829               	movf	i1LCDWriteInt@j+1,w
  3480  033D  00AB               	movwf	i1LCDWriteInt@i+1
  3481  033E  0828               	movf	i1LCDWriteInt@j,w
  3482  033F  00AA               	movwf	i1LCDWriteInt@i
  3483  0340                     L10:	
  3484  0340  082B               	movf	i1LCDWriteInt@i+1,w
  3485  0341  3A80               	xorlw	128
  3486  0342  00FF               	movwf	127
  3487  0343  3080               	movlw	128
  3488  0344  027F               	subwf	127,w
  3489  0345  1D03               	skipz
  3490  0346  2B49               	goto	u253_25
  3491  0347  3005               	movlw	5
  3492  0348  022A               	subwf	i1LCDWriteInt@i,w
  3493  0349                     u253_25:	
  3494  0349  1803               	btfsc	3,0
  3495  034A  0008               	return
  3496                           
  3497                           ;lcd_hd44780_pic16.c: 346: {
  3498                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  3499  034B  01F5               	clrf	i1LCDByte@isdata
  3500  034C  0AF5               	incf	i1LCDByte@isdata,f
  3501  034D  1283               	bcf	3,5	;RP0=0, select bank0
  3502  034E  1303               	bcf	3,6	;RP1=0, select bank0
  3503  034F  082A               	movf	i1LCDWriteInt@i,w
  3504  0350  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  3505  0351  0084               	movwf	4
  3506  0352  1383               	bcf	3,7	;select IRP bank0
  3507  0353  0800               	movf	0,w
  3508  0354  3E30               	addlw	48
  3509  0355  120A  118A  2612  120A  118A  	fcall	i1_LCDByte
  3510  035A  3001               	movlw	1
  3511  035B  1283               	bcf	3,5	;RP0=0, select bank0
  3512  035C  1303               	bcf	3,6	;RP1=0, select bank0
  3513  035D  07AA               	addwf	i1LCDWriteInt@i,f
  3514  035E  1803               	skipnc
  3515  035F  0AAB               	incf	i1LCDWriteInt@i+1,f
  3516  0360  3000               	movlw	0
  3517  0361  07AB               	addwf	i1LCDWriteInt@i+1,f
  3518  0362  2B40               	goto	L10
  3519  0363                     __end_ofi1_LCDWriteInt:	
  3520                           
  3521                           	psect	text14
  3522  0766                     __ptext14:	
  3523 ;; *************** function i1___awmod *****************
  3524 ;; Defined at:
  3525 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  divisor         2    0[COMMON] int 
  3528 ;;  dividend        2    2[COMMON] int 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  __awmod         1    6[COMMON] unsigned char 
  3531 ;;  __awmod         1    5[COMMON] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  2    0[COMMON] int 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3541 ;;      Params:         4       0       0       0       0
  3542 ;;      Locals:         2       0       0       0       0
  3543 ;;      Temps:          1       0       0       0       0
  3544 ;;      Totals:         7       0       0       0       0
  3545 ;;Total ram usage:        7 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; This function calls:
  3548 ;;		Nothing
  3549 ;; This function is called by:
  3550 ;;		i1_LCDWriteInt
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           
  3555                           ;psect for function i1___awmod
  3556  0766                     i1___awmod:	
  3557                           
  3558                           ;incstack = 0
  3559                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  3560  0766  01F6               	clrf	i1___awmod@sign
  3561  0767  1FF3               	btfss	i1___awmod@dividend+1,7
  3562  0768  2F70               	goto	i1l2237
  3563  0769  09F2               	comf	i1___awmod@dividend,f
  3564  076A  09F3               	comf	i1___awmod@dividend+1,f
  3565  076B  0AF2               	incf	i1___awmod@dividend,f
  3566  076C  1903               	skipnz
  3567  076D  0AF3               	incf	i1___awmod@dividend+1,f
  3568  076E  01F6               	clrf	i1___awmod@sign
  3569  076F  0AF6               	incf	i1___awmod@sign,f
  3570  0770                     i1l2237:	
  3571  0770  1FF1               	btfss	i1___awmod@divisor+1,7
  3572  0771  2F77               	goto	i1l2241
  3573  0772  09F0               	comf	i1___awmod@divisor,f
  3574  0773  09F1               	comf	i1___awmod@divisor+1,f
  3575  0774  0AF0               	incf	i1___awmod@divisor,f
  3576  0775  1903               	skipnz
  3577  0776  0AF1               	incf	i1___awmod@divisor+1,f
  3578  0777                     i1l2241:	
  3579  0777  0870               	movf	i1___awmod@divisor,w
  3580  0778  0471               	iorwf	i1___awmod@divisor+1,w
  3581  0779  1903               	btfsc	3,2
  3582  077A  2FA4               	goto	i1l2259
  3583  077B  01F5               	clrf	i1___awmod@counter
  3584  077C  0AF5               	incf	i1___awmod@counter,f
  3585  077D                     i1l2249:	
  3586  077D  1BF1               	btfsc	i1___awmod@divisor+1,7
  3587  077E  2F8B               	goto	i1l2251
  3588  077F  3001               	movlw	1
  3589  0780                     u226_25:	
  3590  0780  1003               	clrc
  3591  0781  0DF0               	rlf	i1___awmod@divisor,f
  3592  0782  0DF1               	rlf	i1___awmod@divisor+1,f
  3593  0783  3EFF               	addlw	-1
  3594  0784  1D03               	skipz
  3595  0785  2F80               	goto	u226_25
  3596  0786  3001               	movlw	1
  3597  0787  00F4               	movwf	??i1___awmod
  3598  0788  0874               	movf	??i1___awmod,w
  3599  0789  07F5               	addwf	i1___awmod@counter,f
  3600  078A  2F7D               	goto	i1l2249
  3601  078B                     i1l2251:	
  3602  078B  0871               	movf	i1___awmod@divisor+1,w
  3603  078C  0273               	subwf	i1___awmod@dividend+1,w
  3604  078D  1D03               	skipz
  3605  078E  2F91               	goto	u228_25
  3606  078F  0870               	movf	i1___awmod@divisor,w
  3607  0790  0272               	subwf	i1___awmod@dividend,w
  3608  0791                     u228_25:	
  3609  0791  1C03               	skipc
  3610  0792  2F99               	goto	i1l2255
  3611  0793  0870               	movf	i1___awmod@divisor,w
  3612  0794  02F2               	subwf	i1___awmod@dividend,f
  3613  0795  0871               	movf	i1___awmod@divisor+1,w
  3614  0796  1C03               	skipc
  3615  0797  03F3               	decf	i1___awmod@dividend+1,f
  3616  0798  02F3               	subwf	i1___awmod@dividend+1,f
  3617  0799                     i1l2255:	
  3618  0799  3001               	movlw	1
  3619  079A                     u229_25:	
  3620  079A  1003               	clrc
  3621  079B  0CF1               	rrf	i1___awmod@divisor+1,f
  3622  079C  0CF0               	rrf	i1___awmod@divisor,f
  3623  079D  3EFF               	addlw	-1
  3624  079E  1D03               	skipz
  3625  079F  2F9A               	goto	u229_25
  3626  07A0  3001               	movlw	1
  3627  07A1  02F5               	subwf	i1___awmod@counter,f
  3628  07A2  1D03               	btfss	3,2
  3629  07A3  2F8B               	goto	i1l2251
  3630  07A4                     i1l2259:	
  3631  07A4  0876               	movf	i1___awmod@sign,w
  3632  07A5  1903               	btfsc	3,2
  3633  07A6  2FAC               	goto	i1l2263
  3634  07A7  09F2               	comf	i1___awmod@dividend,f
  3635  07A8  09F3               	comf	i1___awmod@dividend+1,f
  3636  07A9  0AF2               	incf	i1___awmod@dividend,f
  3637  07AA  1903               	skipnz
  3638  07AB  0AF3               	incf	i1___awmod@dividend+1,f
  3639  07AC                     i1l2263:	
  3640  07AC  0873               	movf	i1___awmod@dividend+1,w
  3641  07AD  00F1               	movwf	?i1___awmod+1
  3642  07AE  0872               	movf	i1___awmod@dividend,w
  3643  07AF  00F0               	movwf	?i1___awmod
  3644  07B0  0008               	return
  3645  07B1                     __end_ofi1___awmod:	
  3646                           
  3647                           	psect	text15
  3648  05B9                     __ptext15:	
  3649 ;; *************** function i1___awdiv *****************
  3650 ;; Defined at:
  3651 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  divisor         2    0[COMMON] int 
  3654 ;;  dividend        2    2[COMMON] int 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  __awdiv         2    7[COMMON] int 
  3657 ;;  __awdiv         1    6[COMMON] unsigned char 
  3658 ;;  __awdiv         1    5[COMMON] unsigned char 
  3659 ;; Return value:  Size  Location     Type
  3660 ;;                  2    0[COMMON] int 
  3661 ;; Registers used:
  3662 ;;		wreg, status,2, status,0
  3663 ;; Tracked objects:
  3664 ;;		On entry : 0/0
  3665 ;;		On exit  : 0/0
  3666 ;;		Unchanged: 0/0
  3667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3668 ;;      Params:         4       0       0       0       0
  3669 ;;      Locals:         4       0       0       0       0
  3670 ;;      Temps:          1       0       0       0       0
  3671 ;;      Totals:         9       0       0       0       0
  3672 ;;Total ram usage:        9 bytes
  3673 ;; Hardware stack levels used:    1
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		i1_LCDWriteInt
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function i1___awdiv
  3683  05B9                     i1___awdiv:	
  3684                           
  3685                           ;incstack = 0
  3686                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  3687  05B9  01F6               	clrf	i1___awdiv@sign
  3688  05BA  1FF1               	btfss	i1___awdiv@divisor+1,7
  3689  05BB  2DC3               	goto	i1l2193
  3690  05BC  09F0               	comf	i1___awdiv@divisor,f
  3691  05BD  09F1               	comf	i1___awdiv@divisor+1,f
  3692  05BE  0AF0               	incf	i1___awdiv@divisor,f
  3693  05BF  1903               	skipnz
  3694  05C0  0AF1               	incf	i1___awdiv@divisor+1,f
  3695  05C1  01F6               	clrf	i1___awdiv@sign
  3696  05C2  0AF6               	incf	i1___awdiv@sign,f
  3697  05C3                     i1l2193:	
  3698  05C3  1FF3               	btfss	i1___awdiv@dividend+1,7
  3699  05C4  2DCE               	goto	i1l2199
  3700  05C5  09F2               	comf	i1___awdiv@dividend,f
  3701  05C6  09F3               	comf	i1___awdiv@dividend+1,f
  3702  05C7  0AF2               	incf	i1___awdiv@dividend,f
  3703  05C8  1903               	skipnz
  3704  05C9  0AF3               	incf	i1___awdiv@dividend+1,f
  3705  05CA  3001               	movlw	1
  3706  05CB  00F4               	movwf	??i1___awdiv
  3707  05CC  0874               	movf	??i1___awdiv,w
  3708  05CD  06F6               	xorwf	i1___awdiv@sign,f
  3709  05CE                     i1l2199:	
  3710  05CE  01F7               	clrf	i1___awdiv@quotient
  3711  05CF  01F8               	clrf	i1___awdiv@quotient+1
  3712  05D0  0870               	movf	i1___awdiv@divisor,w
  3713  05D1  0471               	iorwf	i1___awdiv@divisor+1,w
  3714  05D2  1903               	btfsc	3,2
  3715  05D3  2E05               	goto	i1l2221
  3716  05D4  01F5               	clrf	i1___awdiv@counter
  3717  05D5  0AF5               	incf	i1___awdiv@counter,f
  3718  05D6                     i1l2209:	
  3719  05D6  1BF1               	btfsc	i1___awdiv@divisor+1,7
  3720  05D7  2DE4               	goto	i1l2211
  3721  05D8  3001               	movlw	1
  3722  05D9                     u216_25:	
  3723  05D9  1003               	clrc
  3724  05DA  0DF0               	rlf	i1___awdiv@divisor,f
  3725  05DB  0DF1               	rlf	i1___awdiv@divisor+1,f
  3726  05DC  3EFF               	addlw	-1
  3727  05DD  1D03               	skipz
  3728  05DE  2DD9               	goto	u216_25
  3729  05DF  3001               	movlw	1
  3730  05E0  00F4               	movwf	??i1___awdiv
  3731  05E1  0874               	movf	??i1___awdiv,w
  3732  05E2  07F5               	addwf	i1___awdiv@counter,f
  3733  05E3  2DD6               	goto	i1l2209
  3734  05E4                     i1l2211:	
  3735  05E4  3001               	movlw	1
  3736  05E5                     u218_25:	
  3737  05E5  1003               	clrc
  3738  05E6  0DF7               	rlf	i1___awdiv@quotient,f
  3739  05E7  0DF8               	rlf	i1___awdiv@quotient+1,f
  3740  05E8  3EFF               	addlw	-1
  3741  05E9  1D03               	skipz
  3742  05EA  2DE5               	goto	u218_25
  3743  05EB  0871               	movf	i1___awdiv@divisor+1,w
  3744  05EC  0273               	subwf	i1___awdiv@dividend+1,w
  3745  05ED  1D03               	skipz
  3746  05EE  2DF1               	goto	u219_25
  3747  05EF  0870               	movf	i1___awdiv@divisor,w
  3748  05F0  0272               	subwf	i1___awdiv@dividend,w
  3749  05F1                     u219_25:	
  3750  05F1  1C03               	skipc
  3751  05F2  2DFA               	goto	i1l2217
  3752  05F3  0870               	movf	i1___awdiv@divisor,w
  3753  05F4  02F2               	subwf	i1___awdiv@dividend,f
  3754  05F5  0871               	movf	i1___awdiv@divisor+1,w
  3755  05F6  1C03               	skipc
  3756  05F7  03F3               	decf	i1___awdiv@dividend+1,f
  3757  05F8  02F3               	subwf	i1___awdiv@dividend+1,f
  3758  05F9  1477               	bsf	i1___awdiv@quotient,0
  3759  05FA                     i1l2217:	
  3760  05FA  3001               	movlw	1
  3761  05FB                     u220_25:	
  3762  05FB  1003               	clrc
  3763  05FC  0CF1               	rrf	i1___awdiv@divisor+1,f
  3764  05FD  0CF0               	rrf	i1___awdiv@divisor,f
  3765  05FE  3EFF               	addlw	-1
  3766  05FF  1D03               	skipz
  3767  0600  2DFB               	goto	u220_25
  3768  0601  3001               	movlw	1
  3769  0602  02F5               	subwf	i1___awdiv@counter,f
  3770  0603  1D03               	btfss	3,2
  3771  0604  2DE4               	goto	i1l2211
  3772  0605                     i1l2221:	
  3773  0605  0876               	movf	i1___awdiv@sign,w
  3774  0606  1903               	btfsc	3,2
  3775  0607  2E0D               	goto	i1l2225
  3776  0608  09F7               	comf	i1___awdiv@quotient,f
  3777  0609  09F8               	comf	i1___awdiv@quotient+1,f
  3778  060A  0AF7               	incf	i1___awdiv@quotient,f
  3779  060B  1903               	skipnz
  3780  060C  0AF8               	incf	i1___awdiv@quotient+1,f
  3781  060D                     i1l2225:	
  3782  060D  0878               	movf	i1___awdiv@quotient+1,w
  3783  060E  00F1               	movwf	?i1___awdiv+1
  3784  060F  0877               	movf	i1___awdiv@quotient,w
  3785  0610  00F0               	movwf	?i1___awdiv
  3786  0611  0008               	return
  3787  0612                     __end_ofi1___awdiv:	
  3788                           
  3789                           	psect	text16
  3790  0FB4                     __ptext16:	
  3791 ;; *************** function i1_LCDGotoXY *****************
  3792 ;; Defined at:
  3793 ;;		line 355 in file "lcd_hd44780_pic16.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  x               1    wreg     unsigned char 
  3796 ;;  y               1   12[COMMON] unsigned char 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  x               1    0[BANK0 ] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3808 ;;      Params:         1       0       0       0       0
  3809 ;;      Locals:         0       1       0       0       0
  3810 ;;      Temps:          1       0       0       0       0
  3811 ;;      Totals:         2       1       0       0       0
  3812 ;;Total ram usage:        3 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    2
  3815 ;; This function calls:
  3816 ;;		i1_LCDByte
  3817 ;; This function is called by:
  3818 ;;		_ISR
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function i1_LCDGotoXY
  3824  0FB4                     i1_LCDGotoXY:	
  3825                           
  3826                           ;incstack = 0
  3827                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3828                           ;i1LCDGotoXY@x stored from wreg
  3829  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0FB6  00A0               	movwf	i1LCDGotoXY@x
  3832                           
  3833                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  3834  0FB7  3014               	movlw	20
  3835  0FB8  0220               	subwf	i1LCDGotoXY@x,w
  3836  0FB9  1803               	btfsc	3,0
  3837  0FBA  0008               	return
  3838  0FBB  2FC5               	goto	i1l2477
  3839  0FBC                     i1l160:	
  3840                           ;lcd_hd44780_pic16.c: 365: case 1:
  3841                           
  3842                           ;lcd_hd44780_pic16.c: 364: break;
  3843                           
  3844                           ;lcd_hd44780_pic16.c: 362: {
  3845                           ;lcd_hd44780_pic16.c: 363: case 0:
  3846                           
  3847                           ;lcd_hd44780_pic16.c: 361: switch(y)
  3848                           
  3849                           
  3850                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  3851  0FBC  1720               	bsf	i1LCDGotoXY@x,6
  3852                           
  3853                           ;lcd_hd44780_pic16.c: 367: break;
  3854  0FBD  2FD3               	goto	i1l159
  3855  0FBE                     i1l2471:	
  3856                           ;lcd_hd44780_pic16.c: 368: case 2:
  3857                           
  3858                           
  3859                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  3860  0FBE  3014               	movlw	20
  3861  0FBF  2FC1               	goto	L11
  3862  0FC0                     i1l2473:	
  3863                           ;lcd_hd44780_pic16.c: 371: case 3:
  3864                           
  3865                           ;lcd_hd44780_pic16.c: 370: break;
  3866                           
  3867                           
  3868                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  3869  0FC0  3054               	movlw	84
  3870  0FC1                     L11:	
  3871  0FC1  00FD               	movwf	??i1_LCDGotoXY
  3872  0FC2  087D               	movf	??i1_LCDGotoXY,w
  3873  0FC3  07A0               	addwf	i1LCDGotoXY@x,f
  3874                           
  3875                           ;lcd_hd44780_pic16.c: 374: }
  3876                           
  3877                           ;lcd_hd44780_pic16.c: 373: break;
  3878  0FC4  2FD3               	goto	i1l159
  3879  0FC5                     i1l2477:	
  3880  0FC5  087C               	movf	i1LCDGotoXY@y,w
  3881                           
  3882                           ; Switch size 1, requested type "space"
  3883                           ; Number of cases is 4, Range of values is 0 to 3
  3884                           ; switch strategies available:
  3885                           ; Name         Instructions Cycles
  3886                           ; simple_byte           13     7 (average)
  3887                           ; direct_byte           20     8 (fixed)
  3888                           ; jumptable            260     6 (fixed)
  3889                           ;	Chosen strategy is simple_byte
  3890  0FC6  3A00               	xorlw	0	; case 0
  3891  0FC7  1903               	skipnz
  3892  0FC8  2FD3               	goto	i1l159
  3893  0FC9  3A01               	xorlw	1	; case 1
  3894  0FCA  1903               	skipnz
  3895  0FCB  2FBC               	goto	i1l160
  3896  0FCC  3A03               	xorlw	3	; case 2
  3897  0FCD  1903               	skipnz
  3898  0FCE  2FBE               	goto	i1l2471
  3899  0FCF  3A01               	xorlw	1	; case 3
  3900  0FD0  1903               	skipnz
  3901  0FD1  2FC0               	goto	i1l2473
  3902  0FD2  2FD3               	goto	i1l159
  3903  0FD3                     i1l159:	
  3904                           
  3905                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  3906  0FD3  17A0               	bsf	i1LCDGotoXY@x,7
  3907                           
  3908                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  3909  0FD4  01F5               	clrf	i1LCDByte@isdata
  3910  0FD5  0820               	movf	i1LCDGotoXY@x,w
  3911  0FD6  120A  118A  2612   	fcall	i1_LCDByte
  3912  0FD9  0008               	return
  3913  0FDA                     __end_ofi1_LCDGotoXY:	
  3914                           
  3915                           	psect	text17
  3916  0612                     __ptext17:	
  3917 ;; *************** function i1_LCDByte *****************
  3918 ;; Defined at:
  3919 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  c               1    wreg     unsigned char 
  3922 ;;  isdata          1    5[COMMON] unsigned char 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  c               1    8[COMMON] unsigned char 
  3925 ;;  LCDByte         1   11[COMMON] unsigned char 
  3926 ;;  LCDByte         1   10[COMMON] unsigned char 
  3927 ;;  LCDByte         1    9[COMMON] unsigned char 
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		wreg, status,2, status,0, pclath, cstack
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3937 ;;      Params:         1       0       0       0       0
  3938 ;;      Locals:         4       0       0       0       0
  3939 ;;      Temps:          2       0       0       0       0
  3940 ;;      Totals:         7       0       0       0       0
  3941 ;;Total ram usage:        7 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; Hardware stack levels required when called:    1
  3944 ;; This function calls:
  3945 ;;		i1_LCDBusyLoop
  3946 ;; This function is called by:
  3947 ;;		_ISR
  3948 ;;		i1_LCDWriteString
  3949 ;;		i1_LCDWriteInt
  3950 ;;		i1_LCDGotoXY
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function i1_LCDByte
  3956  0612                     i1_LCDByte:	
  3957                           
  3958                           ;incstack = 0
  3959                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3960                           ;i1LCDByte@c stored from wreg
  3961  0612  00F8               	movwf	i1LCDByte@c
  3962                           
  3963                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3964                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3965                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3966  0613  0878               	movf	i1LCDByte@c,w
  3967  0614  00F6               	movwf	??i1_LCDByte
  3968  0615  3004               	movlw	4
  3969  0616                     u209_25:	
  3970  0616  1003               	clrc
  3971  0617  0CF6               	rrf	??i1_LCDByte,f
  3972  0618  3EFF               	addlw	-1
  3973  0619  1D03               	skipz
  3974  061A  2E16               	goto	u209_25
  3975  061B  0876               	movf	??i1_LCDByte,w
  3976  061C  00F7               	movwf	??i1_LCDByte+1
  3977  061D  0877               	movf	??i1_LCDByte+1,w
  3978  061E  00F9               	movwf	i1LCDByte@hn
  3979                           
  3980                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3981  061F  0878               	movf	i1LCDByte@c,w
  3982  0620  390F               	andlw	15
  3983  0621  00F6               	movwf	??i1_LCDByte
  3984  0622  0876               	movf	??i1_LCDByte,w
  3985  0623  00FA               	movwf	i1LCDByte@ln
  3986                           
  3987                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3988  0624  0875               	movf	i1LCDByte@isdata,w
  3989  0625  1D03               	btfss	3,2
  3990  0626  2E2B               	goto	i1l113
  3991                           
  3992                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  3993  0627  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0628  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0629  1087               	bcf	7,1	;volatile
  3996  062A  2E2E               	goto	i1l114
  3997  062B                     i1l113:	
  3998                           
  3999                           ;lcd_hd44780_pic16.c: 97: else
  4000                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  4001  062B  1283               	bcf	3,5	;RP0=0, select bank0
  4002  062C  1303               	bcf	3,6	;RP1=0, select bank0
  4003  062D  1487               	bsf	7,1	;volatile
  4004  062E                     i1l114:	
  4005                           
  4006                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4007  062E  2E2F               	nop2	;2 cycle nop
  4008                           
  4009                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  4010  062F  1283               	bcf	3,5	;RP0=0, select bank0
  4011  0630  1303               	bcf	3,6	;RP1=0, select bank0
  4012  0631  1587               	bsf	7,3	;volatile
  4013                           
  4014                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  4015  0632  0879               	movf	i1LCDByte@hn,w
  4016  0633  00F6               	movwf	??i1_LCDByte
  4017  0634  3004               	movlw	4
  4018  0635                     u211_25:	
  4019  0635  1003               	clrc
  4020  0636  0DF6               	rlf	??i1_LCDByte,f
  4021  0637  3EFF               	addlw	-1
  4022  0638  1D03               	skipz
  4023  0639  2E35               	goto	u211_25
  4024  063A  0807               	movf	7,w	;volatile
  4025  063B  390F               	andlw	15
  4026  063C  0476               	iorwf	??i1_LCDByte,w
  4027  063D  00F7               	movwf	??i1_LCDByte+1
  4028  063E  0877               	movf	??i1_LCDByte+1,w
  4029  063F  00FB               	movwf	i1LCDByte@temp
  4030                           
  4031                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  4032  0640  087B               	movf	i1LCDByte@temp,w
  4033  0641  0087               	movwf	7	;volatile
  4034                           
  4035                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4036  0642  2E43               	nop2	;2 cycle nop
  4037  0643  2E44               	nop2	;2 cycle nop
  4038  0644  0000               	nop
  4039                           
  4040                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  4041  0645  1283               	bcf	3,5	;RP0=0, select bank0
  4042  0646  1303               	bcf	3,6	;RP1=0, select bank0
  4043  0647  1187               	bcf	7,3	;volatile
  4044                           
  4045                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4046  0648  2E49               	nop2	;2 cycle nop
  4047  0649  2E4A               	nop2	;2 cycle nop
  4048  064A  0000               	nop
  4049                           
  4050                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  4051  064B  1283               	bcf	3,5	;RP0=0, select bank0
  4052  064C  1303               	bcf	3,6	;RP1=0, select bank0
  4053  064D  1587               	bsf	7,3	;volatile
  4054                           
  4055                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  4056  064E  087A               	movf	i1LCDByte@ln,w
  4057  064F  00F6               	movwf	??i1_LCDByte
  4058  0650  3004               	movlw	4
  4059  0651                     u212_25:	
  4060  0651  1003               	clrc
  4061  0652  0DF6               	rlf	??i1_LCDByte,f
  4062  0653  3EFF               	addlw	-1
  4063  0654  1D03               	skipz
  4064  0655  2E51               	goto	u212_25
  4065  0656  0807               	movf	7,w	;volatile
  4066  0657  390F               	andlw	15
  4067  0658  0476               	iorwf	??i1_LCDByte,w
  4068  0659  00F7               	movwf	??i1_LCDByte+1
  4069  065A  0877               	movf	??i1_LCDByte+1,w
  4070  065B  00FB               	movwf	i1LCDByte@temp
  4071                           
  4072                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  4073  065C  087B               	movf	i1LCDByte@temp,w
  4074  065D  0087               	movwf	7	;volatile
  4075                           
  4076                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4077  065E  2E5F               	nop2	;2 cycle nop
  4078  065F  2E60               	nop2	;2 cycle nop
  4079  0660  0000               	nop
  4080                           
  4081                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  4082  0661  1283               	bcf	3,5	;RP0=0, select bank0
  4083  0662  1303               	bcf	3,6	;RP1=0, select bank0
  4084  0663  1187               	bcf	7,3	;volatile
  4085                           
  4086                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4087  0664  2E65               	nop2	;2 cycle nop
  4088  0665  2E66               	nop2	;2 cycle nop
  4089  0666  0000               	nop
  4090                           
  4091                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  4092  0667  120A  118A  249D   	fcall	i1_LCDBusyLoop
  4093  066A  0008               	return
  4094  066B                     __end_ofi1_LCDByte:	
  4095                           
  4096                           	psect	text18
  4097  049D                     __ptext18:	
  4098 ;; *************** function i1_LCDBusyLoop *****************
  4099 ;; Defined at:
  4100 ;;		line 135 in file "lcd_hd44780_pic16.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  4105 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  4106 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  1    wreg      void 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4116 ;;      Params:         0       0       0       0       0
  4117 ;;      Locals:         3       0       0       0       0
  4118 ;;      Temps:          2       0       0       0       0
  4119 ;;      Totals:         5       0       0       0       0
  4120 ;;Total ram usage:        5 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; This function calls:
  4123 ;;		Nothing
  4124 ;; This function is called by:
  4125 ;;		i1_LCDByte
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function i1_LCDBusyLoop
  4131  049D                     i1_LCDBusyLoop:	
  4132                           
  4133                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  4137  049D  01F4               	clrf	i1LCDBusyLoop@status
  4138                           
  4139                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  4140  049E  30F0               	movlw	240
  4141  049F  00F0               	movwf	??i1_LCDBusyLoop
  4142  04A0  0870               	movf	??i1_LCDBusyLoop,w
  4143  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  4144  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  4145  04A3  0487               	iorwf	7,f	;volatile
  4146                           
  4147                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  4148  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  4149  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  4150  04A6  1507               	bsf	7,2	;volatile
  4151                           
  4152                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  4153  04A7  1087               	bcf	7,1	;volatile
  4154                           
  4155                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4156  04A8  2CA9               	nop2	;2 cycle nop
  4157  04A9                     i1l2007:	
  4158                           ;lcd_hd44780_pic16.c: 153: do
  4159                           
  4160                           
  4161                           ;lcd_hd44780_pic16.c: 154: {
  4162                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  4163  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  4164  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  4165  04AB  1587               	bsf	7,3	;volatile
  4166                           
  4167                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4168  04AC  2CAD               	nop2	;2 cycle nop
  4169                           
  4170                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  4171  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  4172  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  4173  04AF  0807               	movf	7,w	;volatile
  4174  04B0  00F0               	movwf	??i1_LCDBusyLoop
  4175  04B1  3004               	movlw	4
  4176  04B2                     u182_25:	
  4177  04B2  1003               	clrc
  4178  04B3  0CF0               	rrf	??i1_LCDBusyLoop,f
  4179  04B4  3EFF               	addlw	-1
  4180  04B5  1D03               	skipz
  4181  04B6  2CB2               	goto	u182_25
  4182  04B7  0870               	movf	??i1_LCDBusyLoop,w
  4183  04B8  00F1               	movwf	??i1_LCDBusyLoop+1
  4184  04B9  0871               	movf	??i1_LCDBusyLoop+1,w
  4185  04BA  00F4               	movwf	i1LCDBusyLoop@status
  4186                           
  4187                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4188  04BB  0874               	movf	i1LCDBusyLoop@status,w
  4189  04BC  00F0               	movwf	??i1_LCDBusyLoop
  4190  04BD  3003               	movlw	3
  4191  04BE                     u183_25:	
  4192  04BE  1003               	clrc
  4193  04BF  0DF0               	rlf	??i1_LCDBusyLoop,f
  4194  04C0  3EFF               	addlw	-1
  4195  04C1  1D03               	skipz
  4196  04C2  2CBE               	goto	u183_25
  4197  04C3  1003               	clrc
  4198  04C4  0D70               	rlf	??i1_LCDBusyLoop,w
  4199  04C5  00F1               	movwf	??i1_LCDBusyLoop+1
  4200  04C6  0871               	movf	??i1_LCDBusyLoop+1,w
  4201  04C7  00F4               	movwf	i1LCDBusyLoop@status
  4202                           
  4203                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4204  04C8  2CC9               	nop2	;2 cycle nop
  4205                           
  4206                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  4207  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  4208  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  4209  04CB  1187               	bcf	7,3	;volatile
  4210                           
  4211                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4212  04CC  2CCD               	nop2	;2 cycle nop
  4213  04CD  2CCE               	nop2	;2 cycle nop
  4214  04CE  0000               	nop
  4215                           
  4216                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  4217  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  4218  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  4219  04D1  1587               	bsf	7,3	;volatile
  4220                           
  4221                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4222  04D2  2CD3               	nop2	;2 cycle nop
  4223                           
  4224                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  4225  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  4226  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  4227  04D5  0807               	movf	7,w	;volatile
  4228  04D6  00F0               	movwf	??i1_LCDBusyLoop
  4229  04D7  3004               	movlw	4
  4230  04D8                     u184_25:	
  4231  04D8  1003               	clrc
  4232  04D9  0CF0               	rrf	??i1_LCDBusyLoop,f
  4233  04DA  3EFF               	addlw	-1
  4234  04DB  1D03               	skipz
  4235  04DC  2CD8               	goto	u184_25
  4236  04DD  0870               	movf	??i1_LCDBusyLoop,w
  4237  04DE  00F1               	movwf	??i1_LCDBusyLoop+1
  4238  04DF  0871               	movf	??i1_LCDBusyLoop+1,w
  4239  04E0  00F3               	movwf	i1LCDBusyLoop@temp
  4240                           
  4241                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  4242  04E1  300F               	movlw	15
  4243  04E2  00F0               	movwf	??i1_LCDBusyLoop
  4244  04E3  0870               	movf	??i1_LCDBusyLoop,w
  4245  04E4  05F3               	andwf	i1LCDBusyLoop@temp,f
  4246                           
  4247                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  4248  04E5  0874               	movf	i1LCDBusyLoop@status,w
  4249  04E6  0473               	iorwf	i1LCDBusyLoop@temp,w
  4250  04E7  00F0               	movwf	??i1_LCDBusyLoop
  4251  04E8  0870               	movf	??i1_LCDBusyLoop,w
  4252  04E9  00F4               	movwf	i1LCDBusyLoop@status
  4253                           
  4254                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  4255  04EA  0874               	movf	i1LCDBusyLoop@status,w
  4256  04EB  3980               	andlw	128
  4257  04EC  00F0               	movwf	??i1_LCDBusyLoop
  4258  04ED  0870               	movf	??i1_LCDBusyLoop,w
  4259  04EE  00F2               	movwf	i1LCDBusyLoop@busy
  4260                           
  4261                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4262  04EF  2CF0               	nop2	;2 cycle nop
  4263                           
  4264                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  4265  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  4266  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  4267  04F2  1187               	bcf	7,3	;volatile
  4268                           
  4269                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4270  04F3  2CF4               	nop2	;2 cycle nop
  4271  04F4  2CF5               	nop2	;2 cycle nop
  4272  04F5  0000               	nop
  4273                           
  4274                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  4275  04F6  0872               	movf	i1LCDBusyLoop@busy,w
  4276  04F7  1D03               	btfss	3,2
  4277  04F8  2CA9               	goto	i1l2007
  4278                           
  4279                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  4280  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  4281  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  4282  04FB  1107               	bcf	7,2	;volatile
  4283                           
  4284                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  4285  04FC  300F               	movlw	15
  4286  04FD  00F0               	movwf	??i1_LCDBusyLoop
  4287  04FE  0870               	movf	??i1_LCDBusyLoop,w
  4288  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  4289  0500  1303               	bcf	3,6	;RP1=0, select bank1
  4290  0501  0587               	andwf	7,f	;volatile
  4291  0502  0008               	return
  4292  0503                     __end_ofi1_LCDBusyLoop:	
  4293  007E                     btemp	set	126	;btemp
  4294  007E                     wtemp	set	126
  4295  007E                     wtemp0	set	126
  4296  0080                     wtemp1	set	128
  4297  0082                     wtemp2	set	130
  4298  0084                     wtemp3	set	132
  4299  0086                     wtemp4	set	134
  4300  0088                     wtemp5	set	136
  4301  007F                     wtemp6	set	127
  4302  007E                     ttemp	set	126
  4303  007E                     ttemp0	set	126
  4304  0081                     ttemp1	set	129
  4305  0084                     ttemp2	set	132
  4306  0087                     ttemp3	set	135
  4307  007F                     ttemp4	set	127
  4308  007E                     ltemp	set	126
  4309  007E                     ltemp0	set	126
  4310  0082                     ltemp1	set	130
  4311  0086                     ltemp2	set	134
  4312  0080                     ltemp3	set	128


Data Sizes:
    Strings     39
    Constant    0
    Data        47
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      61
    BANK1            80      9      41
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[17]), 
		 -> msg(BANK1[32]), 

    phMsg	PTR struct . size(1) Largest target is 32
		 -> msg(BANK1[32]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    _ISR->i1_LCDWriteString
    i1_LCDWriteString->i1_LCDByte
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _main->_LCDWriteInt

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   12706
                                             36 BANK0      6     6      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                     _TuneButtonInit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    2251
                                             31 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    3813
                                             31 BANK0      5     2      3
                                              0 BANK1      9     9      0
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     753
                                             19 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1677
                                             31 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    2330
                                             31 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1371
                                             24 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     176
                                             19 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    4856
                                             12 BANK0      7     7      0
                          i1_LCDByte
                        i1_LCDGotoXY
                      i1_LCDWriteInt
                   i1_LCDWriteString
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteString                                     4     2      2    1012
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    2299
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     503
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     515
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     860
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     685
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     176
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _TuneButtonInit
   ___awdiv

 _ISR (ROOT)
   i1_LCDByte
     i1_LCDBusyLoop
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod
   i1_LCDWriteString
     i1_LCDByte
       i1_LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      9      29       7       51.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      74      12        0.0%
ABS                  0      0      74       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jun 18 19:24:05 2016

             ?_LCDBusyLoop 0070                 __CFG_CP$ON 0000         ??i1_LCDWriteString 0020  
                        pc 0002                __CFG_CPD$ON 0000               ___awdiv@sign 0039  
                       fsr 0004                __CFG_LVP$ON 0000                        l113 0684  
                      l114 0685                        l160 0FE2                        l159 0FF9  
                      _RA0 0028                        _RA1 0029                        _RA2 002A  
                      _RA3 002B                        _RC1 0039                        _RC2 003A  
                      _RA6 002E                        _RC3 003B                        _ISR 0363  
                      _msg 00A0                        fsr0 0004            __end_of_ADCInit 07FD  
                      indf 0000               ___awmod@sign 0039               __CFG_IESO$ON 0000  
  LCDWriteInt@field_length 0041            __end_of_LCDByte 06C2            __end_of_LCDInit 0435  
             ?_LCDWriteInt 003F                       ?_ISR 0070                LCDByte@temp 003E  
                     l2113 05B4                       l2105 05A1                       l2109 05AC  
                     l2125 0725                       l2151 0761                       l2143 074E  
                     l2303 0503                       l2081 056A                       l2137 0732  
                     l2129 072C                       l2139 0740                       l2147 0759  
                     l2315 022F                       l2271 0FE4                       l2087 0575  
                     l2327 0241                       l2273 0FE6                       l2097 057D  
                     l2337 0299                       l2329 027D                       l2099 058B  
                     l2277 0FEB                       l2295 053B                       l2561 012F  
                     l2299 0545                       l2573 0189                       l2549 00FD  
                     l1961 0443                       STR_1 0810               __CFG_WDTE$ON 0000  
                     STR_2 082F                       STR_3 0821                       STR_4 082F  
                     STR_5 082B                       STR_6 0826                       STR_7 082F  
                     STR_8 0833                       u2035 0735                       u2055 0746  
                     u2065 074F                       u2415 02A8                       u1805 0472  
                     u2605 0126                       u2615 0155                       u2625 016C  
                     u2635 0180                       u2645 01B1                       u1935 0580  
                     u2655 01C9                       u1785 044C                       u1865 0671  
                     u1795 0458                       u2667 03D4                       u1955 058C  
                     u1885 068C                       u1965 0598                       u1895 06A8  
                     u1975 05A2               __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000  
                     _main 0036     __end_of_TuneButtonInit 07E9         __size_of_LCDGotoXY 0026  
                     btemp 007E              __CFG_BOREN$ON 0000                       ltemp 007E  
                     start 0012                       ttemp 007E                       wtemp 007E  
i1LCDWriteInt@field_length 0022              __CFG_MCLRE$ON 0000                      ??_ISR 002C  
       __size_ofi1_LCDByte 0059               ?i1_LCDGotoXY 007C                      ?_main 0070  
           i1___awdiv@sign 0076            __end_of___awdiv 05B9            __end_of___awmod 0766  
             LCDInit@style 0041            ___awdiv@divisor 0033                      i1l113 062B  
                    i1l114 062E                      i1l160 0FBC                      i1l159 0FD3  
          ___awdiv@counter 0038                      _PORTC 0007                      _TRISC 0087  
           i1___awmod@sign 0076                      _phMsg 0057                      _count 005B  
                    main@t 0047                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            ?_TuneButtonInit 0070         __size_ofi1___awdiv 0059  
       __size_ofi1___awmod 004B            __initialization 0015               __end_of_main 020B  
                ??_ADCInit 0033                     ??_main 0044          __end_of_LCDGotoXY 1000  
            LCDByte@isdata 0038                  ??_LCDByte 0039                  ??_LCDInit 003F  
                   _ADRESH 001E                     _ADRESL 009E           ___awdiv@dividend 0035  
        __end_ofi1_LCDByte 066B     __size_ofi1_LCDBusyLoop 0066                     i1l2007 04A9  
                   i1l2211 05E4                     i1l2221 0605                     i1l2225 060D  
                   i1l2217 05FA                     i1l2209 05D6                     i1l2241 0777  
                   i1l2251 078B                     i1l2237 0770                     i1l2413 06FA  
                   i1l2421 06C2                     i1l2263 07AC                     i1l2255 0799  
                   i1l2193 05C3                     i1l2249 077D                     i1l2417 0702  
                   i1l2259 07A4                     i1l2507 03BD                     i1l2445 02F2  
                   i1l2471 0FBE                     i1l2199 05CE                     i1l2455 033C  
                   i1l2447 0327                     i1l2473 0FC0                     i1l2477 0FC5  
                   u211_25 0635        i1LCDBusyLoop@status 0074                     u212_25 0651  
                   u220_25 05FB                     u216_25 05D9                     u209_25 0616  
                   u218_25 05E5                     u226_25 0780                     u219_25 05F1  
                   u228_25 0791                     u229_25 079A                     u253_25 0349  
                   u182_25 04B2                     u183_25 04BE                     u184_25 04D8  
                   u267_27 03B1              _tuneUpTempDir 0058             __CFG_PWRTE$OFF 0000  
           _LCDWriteString 0503                  ??___awdiv 0037                  ??___awmod 0037  
   __size_ofi1_LCDWriteInt 009F       __size_of_LCDBusyLoop 0068           i1LCDWriteInt@val 0020  
         i1LCDWriteInt@str 0023           ___awdiv@quotient 003A            ___awmod@divisor 0033  
          ___awmod@counter 0038          __end_ofi1___awdiv 0612          __end_ofi1___awmod 07B1  
             LCDWriteInt@i 00C7               LCDWriteInt@j 00C5                     saved_w 007E  
     __size_of_LCDWriteInt 00B9    __end_of__initialization 0032     __end_of_LCDWriteString 055E  
                LCDByte@hn 003B                  LCDByte@ln 003C             __pcstackCOMMON 0070  
             __pidataBANK0 0F74               __pidataBANK1 0F94              i1_LCDBusyLoop 049D  
             i1LCDGotoXY@x 0020               i1LCDGotoXY@y 007C          i1LCDBusyLoop@busy 0072  
        i1LCDBusyLoop@temp 0073       __size_ofi1_LCDGotoXY 0026  __size_ofi1_LCDWriteString 0057  
           i1LCDWriteInt@i 002A             i1LCDWriteInt@j 0028            i1LCDByte@isdata 0075  
            i1_LCDWriteInt 02C4                 __pbssBANK0 0059            ?_LCDWriteString 003F  
               __pmaintext 0036             ?i1_LCDBusyLoop 0070                 __pintentry 0004  
                  _ADCInit 07E9         i1___awdiv@dividend 0072                    _LCDByte 066B  
                  _LCDInit 03CD           ??_TuneButtonInit 0033             ?i1_LCDWriteInt 0020  
               __stringtab 0800         i1___awdiv@quotient 0077                    ___cgram 004A  
                  ___awdiv 055E                    ___awmod 0719                  _ANSELbits 0188  
                  __ptext1 07B1                    __ptext2 0503                    __ptext3 020B  
                  __ptext4 0719                    __ptext5 055E                    __ptext6 03CD  
                  __ptext7 0FDA                    __ptext8 066B                    __ptext9 0435  
                  _curTemp 0059               __size_of_ISR 006A           ___awmod@dividend 0035  
                _LCDGotoXY 0FDA       end_of_initialization 0032                  i1_LCDByte 0612  
          ??i1_LCDBusyLoop 0070          LCDWriteString@msg 003F           i1_LCDWriteString 06C2  
                _TRISAbits 0085                  _TRISBbits 0086                  _TRISCbits 0087  
          ??i1_LCDWriteInt 007C                 ?_LCDGotoXY 003F                  i1___awdiv 05B9  
                i1___awmod 0766                 LCDInit@__i 0042                 ?i1_LCDByte 0075  
               LCDGotoXY@x 0041                 LCDGotoXY@y 003F                 _tuneUpTemp 005C  
            ??_LCDBusyLoop 0033        start_initialization 0015                __end_of_ISR 03CD  
               ?i1___awdiv 0070                 ?i1___awmod 0070              ??_LCDWriteInt 0042  
         ??_LCDWriteString 0041              i1LCDByte@temp 007B   __CFG_FOSC$INTRC_NOCLKOUT 0000  
               init_fetch0 0F83                __pdataBANK0 004A                __pdataBANK1 00A0  
       i1___awmod@dividend 0072                   ?_ADCInit 0070              ??i1_LCDGotoXY 007D  
      __end_of_LCDBusyLoop 049D                   ?_LCDByte 0038                   ?_LCDInit 0070  
                 LCDByte@c 003D                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00C0                ??_LCDGotoXY 0040                i1LCDByte@hn 0079  
              i1LCDByte@ln 007A           LCDWriteInt@F1642 0052                ??i1_LCDByte 0076  
      __end_of_LCDWriteInt 02C4                   ?___awdiv 0033                   ?___awmod 0033  
        i1___awdiv@divisor 0070          i1___awdiv@counter 0075                  __pstrings 0800  
      __end_ofi1_LCDGotoXY 0FDA            LCDBusyLoop@busy 0035                ??i1___awdiv 0074  
              ??i1___awmod 0074            LCDBusyLoop@temp 0036          interrupt_function 0004  
                 _IOCBbits 0096   __end_ofi1_LCDWriteString 0719                _LCDBusyLoop 0435  
         LCDWriteString@cc 0042           __size_of_ADCInit 0014                 _ADCON0bits 001F  
              __stringbase 080F                 _ADCON1bits 009F                  main@t_380 0048  
                main@index 0049           __size_of_LCDByte 0057           __size_of_LCDInit 0068  
              _LCDWriteInt 020B    __size_of_TuneButtonInit 0038      __end_ofi1_LCDBusyLoop 0503  
        i1___awmod@divisor 0070          i1___awmod@counter 0075           __size_of___awdiv 005B  
         __size_of___awmod 004D          LCDBusyLoop@status 0037         __end_of__stringtab 0810  
              i1_LCDGotoXY 0FB4                 i1LCDByte@c 0078                 _ANSELHbits 0189  
                 __ptext10 07E9                   __ptext11 0363                   __ptext12 06C2  
                 __ptext13 02C4                   __ptext14 0766                   __ptext15 05B9  
                 __ptext16 0FB4                   __ptext17 0612                   __ptext18 049D  
        __CFG_BOR4V$BOR21V 0000      __end_ofi1_LCDWriteInt 0363              __size_of_main 01D5  
      i1LCDWriteString@msg 007C                 _INTCONbits 000B                   init_ram0 0F87  
                 intlevel1 0000             LCDWriteInt@val 003F             LCDWriteInt@str 00C0  
       i1LCDWriteString@cc 0021                  stringcode 080A                   stringdir 080A  
                 stringtab 0800             _TuneButtonInit 07B1          ?i1_LCDWriteString 007C  
  __size_of_LCDWriteString 005B  
