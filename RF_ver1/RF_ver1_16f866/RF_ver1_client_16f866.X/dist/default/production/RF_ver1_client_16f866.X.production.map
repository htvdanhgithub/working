Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\RF_ver1_client_16f866.X.production.sym \
  --cmf=dist/default/production\RF_ver1_client_16f866.X.production.cmf -z \
  -Q16F886 -oC:\Users\Admin\AppData\Local\Temp\s1vc.2 \
  -Mdist/default/production/RF_ver1_client_16f866.X.production.map -E1 \
  -ver=XC8 -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Admin\AppData\Local\Temp\s1vc.obj \
  dist/default/production\RF_ver1_client_16f866.X.production.obj 

Object code version is 3.11

Machine type is 16F886



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Admin\AppData\Local\Temp\s1vc.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\RF_ver1_client_16f866.X.production.obj
                cinit                                15       15       3E        8       0
                intentry                              4        4        E        8       0
                text25                              F45      F45        A     1E8A       0
                text24                              3C0      3C0       75        8       0
                text23                              76D      76D       35      B7E       0
                text22                              FC8      FC8       14     1F90       0
                text21                              FDC      FDC       24     1FB8       0
                text20                              FB5      FB5       13     1F6A       0
                text19                              F74      F74       10     1EE8       0
                text18                              664      664       4D      B7E       0
                text17                              49D      49D       68        8       0
                text16                              5BF      5BF       57      B7E       0
                text15                              435      435       68        8       0
                text14                              72F      72F       3E      B7E       0
                text13                              7D6      7D6       26      B7E       0
                text12                              505      505       62        8       0
                text11                              6F1      6F1       3E      B7E       0
                text10                              7A2      7A2       34      B7E       0
                text9                               195      195       D7        8       0
                text8                               323      323       9D        8       0
                text7                               26C      26C       B7        8       0
                text6                               F84      F84       10     1F08       0
                text5                               F94      F94       10     1F28       0
                text4                               F59      F59        C     1EB2       0
                text3                               F65      F65        F     1ECA       0
                text2                                53       53      142        8       0
                text1                               616      616       4E      B7E       0
                maintext                            6B1      6B1       40      B7E       0
                cstackBANK0                          20       20       32       20       1
                cstackCOMMON                         70       70        C       70       1
                cstackBANK1                          A0       A0       23       A0       1
                inittext                            FA4      FA4       11     1F48       0
                clrtext                             F35      F35        8     1E6A       0
                bssBANK3                            190      190       37      190       1
                dataBANK1                            E3       E3        8       A0       1
                bssBANK1                             C3       C3       20       A0       1
                dataBANK0                            63       63        A       20       1
                bssBANK0                             52       52       11       20       1
                dataCOMMON                           7D       7D        1       70       1
                bssCOMMON                            7C       7C        1       70       1
                strings                             567      567       58      ACE       0
                idataBANK1                          F3D      F3D        8     1E7A       0
                idataBANK0                          F4F      F4F        A     1E9E       0
                idataCOMMON                         7FC      7FC        1      B7E       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       3E         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text25                              F45      F45        A         0
                text24                              3C0      3C0       75         0
                text23                              76D      76D       35         0
                text22                              FC8      FC8       14         0
                text21                              FDC      FDC       24         0
                text20                              FB5      FB5       13         0
                text19                              F74      F74       10         0
                text18                              664      664       4D         0
                text17                              49D      49D       68         0
                text16                              5BF      5BF       57         0
                text15                              435      435       68         0
                text14                              72F      72F       3E         0
                text13                              7D6      7D6       26         0
                text12                              505      505       62         0
                text11                              6F1      6F1       3E         0
                text10                              7A2      7A2       34         0
                text9                               195      195       D7         0
                text8                               323      323       9D         0
                text7                               26C      26C       B7         0
                text6                               F84      F84       10         0
                text5                               F94      F94       10         0
                text4                               F59      F59        C         0
                text3                               F65      F65        F         0
                text2                                53       53      142         0
                text1                               616      616       4E         0
                maintext                            6B1      6B1       40         0
                inittext                            FA4      FA4       11         0
                clrtext                             F35      F35        8         0
                idataBANK1                          F3D      F3D        8         0
                idataBANK0                          F4F      F4F        A         0
                idataCOMMON                         7FC      7FC        1         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             567      567       58         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1
                dataCOMMON                           7D       7D        1         1
                bssCOMMON                            7C       7C        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       32         1
                dataBANK0                            63       63        A         1
                bssBANK0                             52       52       11         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       23         1
                dataBANK1                            E3       E3        8         1
                bssBANK1                             C3       C3       20         1

        CLASS   BANK2          

        CLASS   BANK3          
                bssBANK3                            190      190       37         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000563  000567         8       0  CODE        2
                cstackBANK0                    000020  00004D  00006D        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  00004B  0000EB        A0       1  BANK1       1
                bssBANK3                       000190  000037  0001C7       190       1  BANK3       1
                strings                        000567  000058  0005BF       ACE       0  STRING      2
                text16                         0005BF  00023E  0007FD       B7E       0  CODE        2
                clrtext                        000F35  000008  000F3D      1E6A       0  CODE        2
                idataBANK1                     000F3D  000008  000F45      1E7A       0  CODE        2
                text25                         000F45  00000A  000F4F      1E8A       0  CODE        2
                idataBANK0                     000F4F  00000A  000F59      1E9E       0  CODE        2
                text4                          000F59  00000C  000F65      1EB2       0  CODE        2
                text3                          000F65  00000F  000F74      1ECA       0  CODE        2
                text19                         000F74  000010  000F84      1EE8       0  CODE        2
                text6                          000F84  000010  000F94      1F08       0  CODE        2
                text5                          000F94  000010  000FA4      1F28       0  CODE        2
                inittext                       000FA4  000011  000FB5      1F48       0  CODE        2
                text20                         000FB5  000013  000FC8      1F6A       0  CODE        2
                text22                         000FC8  000014  000FDC      1F90       0  CODE        2
                text21                         000FDC  000024  001000      1FB8       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006D-006F              3           1
        BANK1            00EB-00EF              5           1
        BANK2            0110-016F             60           1
        BANK3            01C7-01EF             29           1
        CODE             0003-0003              1           2
                         07FD-0F34              3
                         1000-1FFF            800
        CONST            0003-0003              1           2
                         07FD-0F34            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         07FD-0F34            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006D-006F              3           1
                         00EB-00EF              5
                         0110-016F             60
                         01C7-01EF             29
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         07FD-0F34            738
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         07FD-0F34            100
                         1000-1FFF            100

                                  Symbol Table

?___lwdiv                  cstackBANK0  0020
?___lwmod                  cstackBANK0  0028
?_sprintf                  cstackBANK0  002E
ISR@byte                   cstackCOMMON 007B
ISR@value                  cstackCOMMON 007A
LCDBusyLoop@busy           cstackBANK0  0022
LCDBusyLoop@status         cstackBANK0  0024
LCDBusyLoop@temp           cstackBANK0  0023
LCDByte@c                  cstackBANK0  002A
LCDByte@hn                 cstackBANK0  0028
LCDByte@isdata             cstackBANK0  0025
LCDByte@ln                 cstackBANK0  0029
LCDByte@temp               cstackBANK0  002B
LCDGotoXY@x                cstackBANK0  002E
LCDGotoXY@y                cstackBANK0  002C
LCDInit@__i                cstackBANK0  002F
LCDInit@style              cstackBANK0  002E
LCDWriteInt@F1650          dataBANK0    0063
LCDWriteString@cc          cstackBANK0  0030
LCDWriteString@count       cstackBANK0  002F
LCDWriteString@msg         cstackBANK0  002C
LoadMenuItem@item          cstackBANK0  0024
_ADCInit                   text22       0FC8
_ADCON0bits                (abs)        001F
_ADCON1bits                (abs)        009F
_ADRESH                    (abs)        001E
_ADRESL                    (abs)        009E
_ANSELHbits                (abs)        0189
_ANSELbits                 (abs)        0188
_CARRY                     (abs)        0018
_ConnInit                  text19       0F74
_EEADR                     (abs)        010D
_EECON1                    (abs)        018C
_EECON2                    (abs)        018D
_EEDATA                    (abs)        010C
_GIE                       (abs)        005F
_INTCONbits                (abs)        000B
_IOInit                    text18       0664
_ISR                       text23       076D
_LCDBusyLoop               text17       049D
_LCDByte                   text16       05BF
_LCDGotoXY                 text13       07D6
_LCDInit                   text15       0435
_LCDWriteString            text12       0505
_LoadMenuItem              text20       0FB5
_MenuInit                  text14       072F
_OPTION_REGbits            (abs)        0081
_PORTC                     (abs)        0007
_RA0                       (abs)        0028
_RA1                       (abs)        0029
_RA2                       (abs)        002A
_RA3                       (abs)        002B
_RA4                       (abs)        002C
_RA5                       (abs)        002D
_RA6                       (abs)        002E
_RA7                       (abs)        002F
_RB1                       (abs)        0031
_RC1                       (abs)        0039
_RC2                       (abs)        003A
_RC3                       (abs)        003B
_RD                        (abs)        0C60
_TRISAbits                 (abs)        0085
_TRISBbits                 (abs)        0086
_TRISC                     (abs)        0087
_TRISCbits                 (abs)        0087
_WR                        (abs)        0C61
_WREN                      (abs)        0C62
__CFG_BOR4V$BOR21V         (abs)        0000
__CFG_BOREN$ON             (abs)        0000
__CFG_CP$ON                (abs)        0000
__CFG_CPD$ON               (abs)        0000
__CFG_FCMEN$ON             (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT  (abs)        0000
__CFG_IESO$ON              (abs)        0000
__CFG_LVP$ON               (abs)        0000
__CFG_MCLRE$ON             (abs)        0000
__CFG_PWRTE$OFF            (abs)        0000
__CFG_WDTE$ON              (abs)        0000
__CFG_WRT$OFF              (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__HbssBANK1                bssBANK1     0000
__HbssBANK3                bssBANK3     0000
__HbssCOMMON               bssCOMMON    0000
__Hcinit                   cinit        0053
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackBANK1             cstackBANK1  0000
__HcstackCOMMON            cstackCOMMON 0000
__HdataBANK0               dataBANK0    0000
__HdataBANK1               dataBANK1    0000
__HdataCOMMON              dataCOMMON   0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0015
__Hfunctab                 functab      0000
__HidataBANK0              idataBANK0   0000
__HidataBANK1              idataBANK1   0000
__HidataCOMMON             idataCOMMON  0000
__Hidloc                   idloc        0000
__Hinit                    init         0012
__Hinittext                inittext     0000
__Hintentry                intentry     0012
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2009
__Hspace_1                 (abs)        01C7
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__LbssBANK1                bssBANK1     0000
__LbssBANK3                bssBANK3     0000
__LbssCOMMON               bssCOMMON    0000
__Lcinit                   cinit        0015
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackBANK1             cstackBANK1  0000
__LcstackCOMMON            cstackCOMMON 0000
__LdataBANK0               dataBANK0    0000
__LdataBANK1               dataBANK1    0000
__LdataCOMMON              dataCOMMON   0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0012
__Lfunctab                 functab      0000
__LidataBANK0              idataBANK0   0000
__LidataBANK1              idataBANK1   0000
__LidataCOMMON             idataCOMMON  0000
__Lidloc                   idloc        0000
__Linit                    init         0012
__Linittext                inittext     0000
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2009
__S1                       (abs)        01C7
__S2                       (abs)        0000
__S3                       (abs)        0000
___cgram                   dataBANK1    00E3
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lwdiv                   text11       06F1
___lwdiv@counter           cstackBANK0  0027
___lwdiv@dividend          cstackBANK0  0022
___lwdiv@divisor           cstackBANK0  0020
___lwdiv@quotient          cstackBANK0  0025
___lwmod                   text10       07A2
___lwmod@counter           cstackBANK0  002D
___lwmod@dividend          cstackBANK0  002A
___lwmod@divisor           cstackBANK0  0028
___sp                      stack        0000
__end_of_ADCInit           text22       0FDC
__end_of_ConnInit          text19       0F84
__end_of_IOInit            text18       06B1
__end_of_ISR               text23       07A2
__end_of_LCDBusyLoop       text17       0505
__end_of_LCDByte           text16       0616
__end_of_LCDGotoXY         text13       07FC
__end_of_LCDInit           text15       049D
__end_of_LCDWriteString    text12       0567
__end_of_LoadMenuItem      text20       0FC8
__end_of_MenuInit          text14       076D
__end_of___lwdiv           text11       072F
__end_of___lwmod           text10       07D6
__end_of__initialization   cinit        004F
__end_of__stringtab        strings      0577
__end_of_dpowers           strings      0581
__end_of_dump_conn         text8        03C0
__end_of_dump_msg          text7        0323
__end_of_eeprom_read       text21       1000
__end_of_get_distance      text6        0F94
__end_of_get_minus_index   text5        0FA4
__end_of_get_msg           text1        0664
__end_of_get_msg_index     text2        0195
__end_of_get_next_index    text4        0F65
__end_of_get_plus_index    text3        0F74
__end_of_main              maintext     06F1
__end_of_receive_input     text24       0435
__end_of_sprintf           text9        026C
__end_of_start_mark        strings      0585
__end_of_stop_mark         strings      0589
__end_ofi1_get_next_index  text25       0F4F
__initialization           cinit        0015
__pbssBANK0                bssBANK0     0052
__pbssBANK1                bssBANK1     00C3
__pbssBANK3                bssBANK3     0190
__pbssCOMMON               bssCOMMON    007C
__pcstackBANK0             cstackBANK0  0020
__pcstackBANK1             cstackBANK1  00A0
__pcstackCOMMON            cstackCOMMON 0070
__pdataBANK0               dataBANK0    0063
__pdataBANK1               dataBANK1    00E3
__pdataCOMMON              dataCOMMON   007D
__pidataBANK0              idataBANK0   0F4F
__pidataBANK1              idataBANK1   0F3D
__pidataCOMMON             idataCOMMON  07FC
__pintentry                intentry     0004
__pmaintext                maintext     06B1
__pstrings                 strings      0567
__ptext1                   text1        0616
__ptext10                  text10       07A2
__ptext11                  text11       06F1
__ptext12                  text12       0505
__ptext13                  text13       07D6
__ptext14                  text14       072F
__ptext15                  text15       0435
__ptext16                  text16       05BF
__ptext17                  text17       049D
__ptext18                  text18       0664
__ptext19                  text19       0F74
__ptext2                   text2        0053
__ptext20                  text20       0FB5
__ptext21                  text21       0FDC
__ptext22                  text22       0FC8
__ptext23                  text23       076D
__ptext24                  text24       03C0
__ptext25                  text25       0F45
__ptext3                   text3        0F65
__ptext4                   text4        0F59
__ptext5                   text5        0F94
__ptext6                   text6        0F84
__ptext7                   text7        026C
__ptext8                   text8        0323
__ptext9                   text9        0195
__size_of_ADCInit          (abs)        0000
__size_of_ConnInit         (abs)        0000
__size_of_IOInit           (abs)        0000
__size_of_ISR              (abs)        0000
__size_of_LCDBusyLoop      (abs)        0000
__size_of_LCDByte          (abs)        0000
__size_of_LCDGotoXY        (abs)        0000
__size_of_LCDInit          (abs)        0000
__size_of_LCDWriteString   (abs)        0000
__size_of_LoadMenuItem     (abs)        0000
__size_of_MenuInit         (abs)        0000
__size_of___lwdiv          (abs)        0000
__size_of___lwmod          (abs)        0000
__size_of_dump_conn        (abs)        0000
__size_of_dump_msg         (abs)        0000
__size_of_eeprom_read      (abs)        0000
__size_of_get_distance     (abs)        0000
__size_of_get_minus_index  (abs)        0000
__size_of_get_msg          (abs)        0000
__size_of_get_msg_index    (abs)        0000
__size_of_get_next_index   (abs)        0000
__size_of_get_plus_index   (abs)        0000
__size_of_main             (abs)        0000
__size_of_receive_input    (abs)        0000
__size_of_sprintf          (abs)        0000
__size_ofi1_get_next_index (abs)        0000
__stringbase               strings      0576
__stringtab                strings      0567
_buffer_rcv                bssBANK1     00C3
_count_rcv                 bssBANK0     005D
_dpowers                   strings      0577
_dump_conn                 text8        0323
_dump_msg                  text7        026C
_eeprom_read               text21       0FDC
_end_index_rcv             bssCOMMON    007C
_g_menu                    bssBANK0     0052
_get_distance              text6        0F84
_get_minus_index           text5        0F94
_get_msg                   text1        0616
_get_msg_index             text2        0053
_get_next_index            text4        0F59
_get_plus_index            text3        0F65
_low_half_rcv              dataCOMMON   007D
_low_rcv                   dataBANK0    0068
_main                      maintext     06B1
_msg_rcv                   bssBANK3     01B0
_pmsg_rcv                  dataBANK0    006A
_pstr_rcv                  dataBANK0    006B
_receive_input             text24       03C0
_sdebug                    bssBANK3     0190
_server_conn               bssBANK0     005F
_sprintf                   text9        0195
_start_index_rcv           bssBANK0     005E
_start_mark                strings      0581
_stop_mark                 strings      0585
btemp                      (abs)        007E
clear_ram0                 clrtext      0F35
dump_conn@count            cstackBANK1  00C0
dump_conn@i                cstackBANK1  00C1
dump_conn@pconn            cstackBANK1  00C2
dump_conn@s                cstackBANK1  00A0
dump_msg@count             cstackBANK1  00C0
dump_msg@i                 cstackBANK1  00C1
dump_msg@pmsg              cstackBANK1  00C2
dump_msg@s                 cstackBANK1  00A0
eeprom_read@addr           cstackBANK0  0021
end_of_initialization      cinit        004F
get_distance@end_index     cstackBANK0  0020
get_distance@start_index   cstackBANK0  0021
get_minus_index@index      cstackBANK0  0021
get_minus_index@sub        cstackBANK0  0020
get_msg@end_index          cstackBANK0  002E
get_msg@i                  cstackBANK0  002C
get_msg@pmsg               cstackBANK0  002B
get_msg@pstr               cstackBANK0  002A
get_msg@start_index        cstackBANK0  002D
get_msg@temp               cstackBANK0  002F
get_msg_index@end_index    cstackBANK0  0023
get_msg_index@i            cstackBANK0  0027
get_msg_index@start_index  cstackBANK0  0026
get_next_index@index       cstackBANK0  0020
get_plus_index@add         cstackBANK0  0020
get_plus_index@index       cstackBANK0  0022
i1_get_next_index          text25       0F45
i1get_next_index@index     cstackCOMMON 0070
init_fetch0                inittext     0FA4
init_ram0                  inittext     0FA8
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
ltemp                      (abs)        007E
ltemp0                     (abs)        007E
ltemp1                     (abs)        0082
ltemp2                     (abs)        0086
ltemp3                     (abs)        0080
main@count                 cstackBANK0  0051
receive_input@byte1        cstackCOMMON 0073
receive_input@byte2        cstackCOMMON 0074
receive_input@value        cstackCOMMON 0072
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
sprintf@ap                 cstackBANK0  0040
sprintf@c                  cstackBANK0  0045
sprintf@f                  cstackBANK0  0030
sprintf@flag               cstackBANK0  0041
sprintf@prec               cstackBANK0  0042
sprintf@sp                 cstackBANK0  002E
sprintf@val                cstackBANK0  0043
stackhi                    (abs)        0000
stacklo                    (abs)        0000
start                      init         0012
start_initialization       cinit        0015
ttemp                      (abs)        007E
ttemp0                     (abs)        007E
ttemp1                     (abs)        0081
ttemp2                     (abs)        0084
ttemp3                     (abs)        0087
ttemp4                     (abs)        007F
wtemp                      (abs)        007E
wtemp0                     (abs)        007E
wtemp1                     (abs)        0080
wtemp2                     (abs)        0082
wtemp3                     (abs)        0084
wtemp4                     (abs)        0086
wtemp5                     (abs)        0088
wtemp6                     (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 105 in file "do_am.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  count           1   49[BANK0 ] unsigned char 
  value           1    0        unsigned char 
  ret             1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_ADCInit
		_ConnInit
		_IOInit
		_LCDByte
		_LCDInit
		_MenuInit
		_dump_conn
		_dump_msg
		_get_msg
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _get_msg *****************
 Defined at:
		line 103 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> msg_rcv(23), 
 Auto vars:     Size  Location     Type
  pmsg            1   11[BANK0 ] PTR struct .
		 -> msg_rcv(23), 
  temp            1   15[BANK0 ] unsigned char 
  end_index       1   14[BANK0 ] unsigned char 
  start_index     1   13[BANK0 ] unsigned char 
  i               1   12[BANK0 ] unsigned char 
  pstr            1   10[BANK0 ] PTR unsigned char 
		 -> msg_rcv(23), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_get_distance
		_get_msg_index
		_get_next_index
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _get_msg_index *****************
 Defined at:
		line 83 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  start_index     1    wreg     PTR unsigned char 
		 -> get_msg@start_index(1), 
  end_index       1    3[BANK0 ] PTR unsigned char 
		 -> get_msg@end_index(1), 
 Auto vars:     Size  Location     Type
  start_index     1    6[BANK0 ] PTR unsigned char 
		 -> get_msg@start_index(1), 
  i               1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_get_distance
		_get_minus_index
		_get_next_index
		_get_plus_index
 This function is called by:
		_get_msg
 This function uses a non-reentrant model


 *************** function _get_plus_index *****************
 Defined at:
		line 55 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
  add             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  index           1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
 This function uses a non-reentrant model


 *************** function _get_next_index *****************
 Defined at:
		line 30 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  index           1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
		_get_msg
 This function uses a non-reentrant model


 *************** function _get_minus_index *****************
 Defined at:
		line 64 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
  sub             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  index           1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
 This function uses a non-reentrant model


 *************** function _get_distance *****************
 Defined at:
		line 72 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  start_index     1    wreg     unsigned char 
  end_index       1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  start_index     1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
		_get_msg
 This function uses a non-reentrant model


 *************** function _dump_msg *****************
 Defined at:
		line 75 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> msg_rcv(23), 
 Auto vars:     Size  Location     Type
  pmsg            1   34[BANK1 ] PTR struct .
		 -> msg_rcv(23), 
  i               1   33[BANK1 ] char 
  count           1   32[BANK1 ] char 
  s              32    0[BANK1 ] unsigned char [32]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0      35       0       0
      Temps:          0      11       0       0       0
      Totals:         0      11      35       0       0
Total ram usage:       46 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCDByte
		_LCDGotoXY
		_LCDWriteString
		_sprintf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _dump_conn *****************
 Defined at:
		line 33 in file "connection.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> server_conn(4), 
 Auto vars:     Size  Location     Type
  pconn           1   34[BANK1 ] PTR struct .
		 -> server_conn(4), 
  i               1   33[BANK1 ] char 
  count           1   32[BANK1 ] char 
  s              32    0[BANK1 ] unsigned char [32]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0      35       0       0
      Temps:          0       9       0       0       0
      Totals:         0       9      35       0       0
Total ram usage:       44 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCDByte
		_LCDGotoXY
		_LCDWriteString
		_sprintf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              2   14[BANK0 ] PTR unsigned char 
		 -> dump_conn@s(32), dump_msg@s(32), sdebug(32), 
  f               1   16[BANK0 ] PTR const unsigned char 
		 -> STR_13(14), STR_11(20), STR_9(15), STR_7(12), 
		 -> STR_5(9), STR_3(6), STR_1(3), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  val             2   35[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   37[BANK0 ] char 
  prec            1   34[BANK0 ] char 
  flag            1   33[BANK0 ] unsigned char 
  ap              1   32[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2   14[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0      15       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      24       0       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_dump_msg
		_dump_conn
		_debug_1
		_debug_2
		_debug_3
		_debug_4
		_debug_5
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    8[BANK0 ] unsigned int 
  dividend        2   10[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] unsigned int 
  dividend        2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    5[BANK0 ] unsigned int 
  counter         1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _LCDWriteString *****************
 Defined at:
		line 283 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  msg             2   12[BANK0 ] PTR const unsigned char 
		 -> STR_19(1), STR_18(5), STR_17(5), STR_16(5), 
		 -> STR_15(5), STR_14(1), dump_conn@s(32), STR_12(1), 
		 -> dump_msg@s(32), STR_10(1), STR_8(1), STR_6(1), 
		 -> STR_4(1), STR_2(1), sdebug(32), 
 Auto vars:     Size  Location     Type
  cc              1   16[BANK0 ] char 
  count           1   15[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDByte
 This function is called by:
		_dump_msg
		_dump_conn
		_debug_1
		_debug_2
		_debug_3
		_debug_4
		_debug_5
		_ShowMenu
		_ClearMenu
 This function uses a non-reentrant model


 *************** function _LCDGotoXY *****************
 Defined at:
		line 367 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1   12[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  x               1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDByte
 This function is called by:
		_dump_msg
		_dump_conn
		_debug_1
		_debug_2
		_debug_3
		_debug_4
		_debug_5
		_ShowMenu
		_ClearMenu
 This function uses a non-reentrant model


 *************** function _MenuInit *****************
 Defined at:
		line 7 in file "menu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LoadMenuItem
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDInit *****************
 Defined at:
		line 211 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  style           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  style           1   14[BANK0 ] unsigned char 
  __i             1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDBusyLoop
		_LCDByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDByte *****************
 Defined at:
		line 80 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
  isdata          1    5[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  c               1   10[BANK0 ] unsigned char 
  temp            1   11[BANK0 ] unsigned char 
  ln              1    9[BANK0 ] unsigned char 
  hn              1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCDBusyLoop
 This function is called by:
		_dump_msg
		_dump_conn
		_main
		_LCDInit
		_LCDWriteString
		_LCDGotoXY
		_debug_1
		_debug_2
		_debug_3
		_debug_4
		_debug_5
		_LCDSetStyle
		_LCDWriteInt
		_ShowMenu
		_ClearMenu
 This function uses a non-reentrant model


 *************** function _LCDBusyLoop *****************
 Defined at:
		line 135 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    4[BANK0 ] unsigned char 
  temp            1    3[BANK0 ] unsigned char 
  busy            1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_LCDByte
		_LCDInit
 This function uses a non-reentrant model


 *************** function _IOInit *****************
 Defined at:
		line 46 in file "do_am.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ConnInit *****************
 Defined at:
		line 38 in file "do_am.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LoadMenuItem
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LoadMenuItem *****************
 Defined at:
		line 36 in file "menu.c"
 Parameters:    Size  Location     Type
  item            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  item            1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_eeprom_read
 This function is called by:
		_ConnInit
		_MenuInit
 This function uses a non-reentrant model


 *************** function _eeprom_read *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c"
 Parameters:    Size  Location     Type
  addr            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  addr            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_LoadMenuItem
 This function uses a non-reentrant model


 *************** function _ADCInit *****************
 Defined at:
		line 7 in file "adc_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 97 in file "do_am.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  byte            1   11[COMMON] PTR struct .
		 -> ISR@value(1), 
  value           1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_receive_input
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _receive_input *****************
 Defined at:
		line 41 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  value           1    2[COMMON] unsigned char 
  byte2           1    4[COMMON] PTR struct .
		 -> receive_input@value(1), 
  byte1           1    3[COMMON] PTR struct .
		 -> buffer_rcv(32), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_get_next_index
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_get_next_index *****************
 Defined at:
		line 30 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  index           1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_receive_input
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
msg.h
		_get_msg       		CODE           	0616	0000	79
		_dump_msg      		CODE           	026C	0000	184

msg.h estimated size: 263

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c
		_sprintf       		CODE           	0195	0000	216

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c estimated size: 216

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c
		_eeprom_read   		CODE           	0FDC	0000	37

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c estimated size: 37

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c
		___lwdiv       		CODE           	06F1	0000	63

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c estimated size: 63

shared
		__stringtab    		STRING         	0567	0000	17
		_dpowers       		STRING         	0577	0000	11
		i1_get_next_index		CODE           	0F45	0000	11
		_start_mark    		STRING         	0581	0000	5
		__initialization		CODE           	0015	0000	59
		_stop_mark     		STRING         	0585	0000	5

shared estimated size: 108

circle_buffer.h
		_get_distance  		CODE           	0F84	0000	17
		_get_next_index		CODE           	0F59	0000	13
		_get_minus_index		CODE           	0F94	0000	17
		_receive_input 		CODE           	03C0	0000	118
		_get_plus_index		CODE           	0F65	0000	16
		_get_msg_index 		CODE           	0053	0000	323

circle_buffer.h estimated size: 504

lcd_hd44780_pic16.c
		_LCDByte       		CODE           	05BF	0000	88
		_LCDInit       		CODE           	0435	0000	105
		_LCDWriteString		CODE           	0505	0000	99
		_LCDGotoXY     		CODE           	07D6	0000	39
		_LCDBusyLoop   		CODE           	049D	0000	105

lcd_hd44780_pic16.c estimated size: 436

menu.c
		_MenuInit      		CODE           	072F	0000	63
		_LoadMenuItem  		CODE           	0FB5	0000	20

menu.c estimated size: 83

connection.h
		_dump_conn     		CODE           	0323	0000	158

connection.h estimated size: 158

do_am.c
		_IOInit        		CODE           	0664	0000	78
		_ISR           		CODE           	076D	0000	54
		_main          		CODE           	06B1	0000	65
		_ConnInit      		CODE           	0F74	0000	17

do_am.c estimated size: 214

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c
		___lwmod       		CODE           	07A2	0000	53

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c estimated size: 53

adc_pic16.c
		_ADCInit       		CODE           	0FC8	0000	21

adc_pic16.c estimated size: 21

