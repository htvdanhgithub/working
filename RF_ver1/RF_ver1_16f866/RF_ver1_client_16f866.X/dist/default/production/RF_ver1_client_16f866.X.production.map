Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\RF_ver1_client_16f866.X.production.sym \
  --cmf=dist/default/production\RF_ver1_client_16f866.X.production.cmf -z \
  -Q16F886 -oC:\Users\Admin\AppData\Local\Temp\s1s4.2 \
  -Mdist/default/production/RF_ver1_client_16f866.X.production.map -E1 \
  -ver=XC8 -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Admin\AppData\Local\Temp\s1s4.obj \
  dist/default/production\RF_ver1_client_16f866.X.production.obj 

Object code version is 3.11

Machine type is 16F886



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Admin\AppData\Local\Temp\s1s4.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\RF_ver1_client_16f866.X.production.obj
                cinit                                15       15       30        8       0
                intentry                              4        4        E        8       0
                text37                              C8C      C8C        A     1918       0
                text36                              458      458       75        8       0
                text35                              F32      F32       35     1E64       0
                text34                              D17      D17       14     1A2E       0
                text33                              D80      D80       24     1B00       0
                text32                              D04      D04       13     1A08       0
                text31                              D2B      D2B       16     1A56       0
                text30                              FB3      FB3       4D     1F66       0
                text29                              5A1      5A1       68        8       0
                text28                              6C3      6C3       57      D86       0
                text27                              539      539       68        8       0
                text26                              71A      71A       54      D86       0
                text25                              DEE      DEE       26     1BDC       0
                text24                              609      609       62        8       0
                text23                              7C0      7C0       3E      D86       0
                text22                              ECA      ECA       34     1D94       0
                text21                              188      188       D7        8       0
                text20                              31F      31F       9D        8       0
                text19                              CB1      CB1       10     1962       0
                text18                              CC1      CC1       10     1982       0
                text17                              C96      C96        C     192C       0
                text16                              CA2      CA2        F     1944       0
                text15                               45       45      143        8       0
                text14                              F67      F67       4C     1ECE       0
                text13                              3BC      3BC       9C        8       0
                text12                              E14      E14       2B     1C28       0
                text11                              76E      76E       52      D86       0
                text10                              DA4      DA4       25     1B48       0
                text9                               CD1      CD1       11     19A2       0
                text8                               E6A      E6A       2E     1CD4       0
                text7                               25F      25F       C0        8       0
                text6                               4CD      4CD       6C        8       0
                text5                               E3F      E3F       2B     1C7E       0
                text4                               D41      D41       1F     1A82       0
                text3                               EFE      EFE       34     1DFC       0
                text2                               DC9      DC9       25     1B92       0
                text1                               D60      D60       20     1AC0       0
                maintext                            E98      E98       32     1D30       0
                cstackBANK0                          20       20       42       20       1
                cstackCOMMON                         70       70        C       70       1
                cstackBANK1                          A0       A0       23       A0       1
                inittext                            CE2      CE2       11     19C4       0
                clrtext                             C84      C84        8     1908       0
                bssBANK3                            190      190       57      190       1
                dataBANK1                            D4       D4       11       A0       1
                bssBANK1                             C3       C3       11       A0       1
                dataBANK0                            63       63        1       20       1
                bssBANK0                             62       62        1       20       1
                dataCOMMON                           7D       7D        1       70       1
                bssCOMMON                            7C       7C        1       70       1
                strings                             66B      66B       58      CD6       0
                idataBANK1                          CF3      CF3       11     19E6       0
                idataBANK0                          7FF      7FF        1      D86       0
                idataCOMMON                         7FE      7FE        1      D86       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       30         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text37                              C8C      C8C        A         0
                text36                              458      458       75         0
                text35                              F32      F32       35         0
                text34                              D17      D17       14         0
                text33                              D80      D80       24         0
                text32                              D04      D04       13         0
                text31                              D2B      D2B       16         0
                text30                              FB3      FB3       4D         0
                text29                              5A1      5A1       68         0
                text28                              6C3      6C3       57         0
                text27                              539      539       68         0
                text26                              71A      71A       54         0
                text25                              DEE      DEE       26         0
                text24                              609      609       62         0
                text23                              7C0      7C0       3E         0
                text22                              ECA      ECA       34         0
                text21                              188      188       D7         0
                text20                              31F      31F       9D         0
                text19                              CB1      CB1       10         0
                text18                              CC1      CC1       10         0
                text17                              C96      C96        C         0
                text16                              CA2      CA2        F         0
                text15                               45       45      143         0
                text14                              F67      F67       4C         0
                text13                              3BC      3BC       9C         0
                text12                              E14      E14       2B         0
                text11                              76E      76E       52         0
                text10                              DA4      DA4       25         0
                text9                               CD1      CD1       11         0
                text8                               E6A      E6A       2E         0
                text7                               25F      25F       C0         0
                text6                               4CD      4CD       6C         0
                text5                               E3F      E3F       2B         0
                text4                               D41      D41       1F         0
                text3                               EFE      EFE       34         0
                text2                               DC9      DC9       25         0
                text1                               D60      D60       20         0
                maintext                            E98      E98       32         0
                inittext                            CE2      CE2       11         0
                clrtext                             C84      C84        8         0
                idataBANK1                          CF3      CF3       11         0
                idataBANK0                          7FF      7FF        1         0
                idataCOMMON                         7FE      7FE        1         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             66B      66B       58         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1
                dataCOMMON                           7D       7D        1         1
                bssCOMMON                            7C       7C        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       42         1
                dataBANK0                            63       63        1         1
                bssBANK0                             62       62        1         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       23         1
                dataBANK1                            D4       D4       11         1
                bssBANK1                             C3       C3       11         1

        CLASS   BANK2          

        CLASS   BANK3          
                bssBANK3                            190      190       57         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000667  00066B         8       0  CODE        2
                cstackBANK0                    000020  000044  000064        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  000045  0000E5        A0       1  BANK1       1
                bssBANK3                       000190  000057  0001E7       190       1  BANK3       1
                strings                        00066B  000058  0006C3       CD6       0  STRING      2
                text28                         0006C3  00013D  000800       D86       0  CODE        2
                clrtext                        000C84  000008  000C8C      1908       0  CODE        2
                text37                         000C8C  00000A  000C96      1918       0  CODE        2
                text17                         000C96  00000C  000CA2      192C       0  CODE        2
                text16                         000CA2  00000F  000CB1      1944       0  CODE        2
                text19                         000CB1  000010  000CC1      1962       0  CODE        2
                text18                         000CC1  000010  000CD1      1982       0  CODE        2
                text9                          000CD1  000011  000CE2      19A2       0  CODE        2
                inittext                       000CE2  000011  000CF3      19C4       0  CODE        2
                idataBANK1                     000CF3  000011  000D04      19E6       0  CODE        2
                text32                         000D04  000013  000D17      1A08       0  CODE        2
                text34                         000D17  000014  000D2B      1A2E       0  CODE        2
                text31                         000D2B  000016  000D41      1A56       0  CODE        2
                text4                          000D41  00001F  000D60      1A82       0  CODE        2
                text1                          000D60  000020  000D80      1AC0       0  CODE        2
                text33                         000D80  000024  000DA4      1B00       0  CODE        2
                text10                         000DA4  000025  000DC9      1B48       0  CODE        2
                text2                          000DC9  000025  000DEE      1B92       0  CODE        2
                text25                         000DEE  000026  000E14      1BDC       0  CODE        2
                text12                         000E14  00002B  000E3F      1C28       0  CODE        2
                text5                          000E3F  00002B  000E6A      1C7E       0  CODE        2
                text8                          000E6A  00002E  000E98      1CD4       0  CODE        2
                maintext                       000E98  000032  000ECA      1D30       0  CODE        2
                text22                         000ECA  000034  000EFE      1D94       0  CODE        2
                text3                          000EFE  000034  000F32      1DFC       0  CODE        2
                text35                         000F32  000035  000F67      1E64       0  CODE        2
                text14                         000F67  00004C  000FB3      1ECE       0  CODE        2
                text30                         000FB3  00004D  001000      1F66       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0064-006F              C           1
        BANK1            00E5-00EF              B           1
        BANK2            0110-016F             60           1
        BANK3            01E7-01EF              9           1
        CODE             0003-0003              1           2
                         0800-0C83            484
                         1000-1FFF            800
        CONST            0003-0003              1           2
                         0800-0C83            100
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0800-0C83            100
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0064-006F              C           1
                         00E5-00EF              B
                         0110-016F             60
                         01E7-01EF              9
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0800-0C83            484
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         0800-0C83            100
                         1000-1FFF            100

                                  Symbol Table

?___lwdiv                            cstackBANK0  0020
?___lwmod                            cstackBANK0  0028
?_crc_calculate                      cstackBANK0  0020
?_sprintf                            cstackBANK0  002E
ISR@byte                             cstackCOMMON 007B
ISR@value                            cstackCOMMON 007A
LCDBusyLoop@busy                     cstackBANK0  0022
LCDBusyLoop@status                   cstackBANK0  0024
LCDBusyLoop@temp                     cstackBANK0  0023
LCDByte@c                            cstackBANK0  002A
LCDByte@hn                           cstackBANK0  0028
LCDByte@isdata                       cstackBANK0  0025
LCDByte@ln                           cstackBANK0  0029
LCDByte@temp                         cstackBANK0  002B
LCDGotoXY@x                          cstackBANK0  002E
LCDGotoXY@y                          cstackBANK0  002C
LCDInit@__i                          cstackBANK0  002F
LCDInit@style                        cstackBANK0  002E
LCDWriteInt@F1650                    dataBANK1    00DC
LCDWriteString@cc                    cstackBANK0  0030
LCDWriteString@count                 cstackBANK0  002F
LCDWriteString@msg                   cstackBANK0  002C
LoadMenuItem@item                    cstackBANK0  0024
_ADCInit                             text34       0D17
_ADCON0bits                          (abs)        001F
_ADCON1bits                          (abs)        009F
_ADRESH                              (abs)        001E
_ADRESL                              (abs)        009E
_ANSELHbits                          (abs)        0189
_ANSELbits                           (abs)        0188
_CARRY                               (abs)        0018
_ConnInit                            text31       0D2B
_EEADR                               (abs)        010D
_EECON1                              (abs)        018C
_EECON2                              (abs)        018D
_EEDATA                              (abs)        010C
_GIE                                 (abs)        005F
_INTCONbits                          (abs)        000B
_IOInit                              text30       0FB3
_ISR                                 text35       0F32
_LCDBusyLoop                         text29       05A1
_LCDByte                             text28       06C3
_LCDGotoXY                           text25       0DEE
_LCDInit                             text27       0539
_LCDWriteString                      text24       0609
_LoadMenuItem                        text32       0D04
_MenuInit                            text26       071A
_OPTION_REGbits                      (abs)        0081
_PORTC                               (abs)        0007
_RA0                                 (abs)        0028
_RA1                                 (abs)        0029
_RA2                                 (abs)        002A
_RA3                                 (abs)        002B
_RA4                                 (abs)        002C
_RA5                                 (abs)        002D
_RA6                                 (abs)        002E
_RA7                                 (abs)        002F
_RB1                                 (abs)        0031
_RC1                                 (abs)        0039
_RC2                                 (abs)        003A
_RC3                                 (abs)        003B
_RD                                  (abs)        0C60
_TRISAbits                           (abs)        0085
_TRISBbits                           (abs)        0086
_TRISC                               (abs)        0087
_TRISCbits                           (abs)        0087
_WR                                  (abs)        0C61
_WREN                                (abs)        0C62
__CFG_BOR4V$BOR21V                   (abs)        0000
__CFG_BOREN$ON                       (abs)        0000
__CFG_CP$ON                          (abs)        0000
__CFG_CPD$ON                         (abs)        0000
__CFG_FCMEN$ON                       (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT            (abs)        0000
__CFG_IESO$ON                        (abs)        0000
__CFG_LVP$ON                         (abs)        0000
__CFG_MCLRE$ON                       (abs)        0000
__CFG_PWRTE$OFF                      (abs)        0000
__CFG_WDTE$ON                        (abs)        0000
__CFG_WRT$OFF                        (abs)        0000
__Habs1                              abs1         0000
__Hbank0                             bank0        0000
__Hbank1                             bank1        0000
__Hbank2                             bank2        0000
__Hbank3                             bank3        0000
__HbssBANK0                          bssBANK0     0000
__HbssBANK1                          bssBANK1     0000
__HbssBANK3                          bssBANK3     0000
__HbssCOMMON                         bssCOMMON    0000
__Hcinit                             cinit        0045
__Hclrtext                           clrtext      0000
__Hcode                              code         0000
__Hcommon                            common       0000
__Hconfig                            config       2009
__HcstackBANK0                       cstackBANK0  0000
__HcstackBANK1                       cstackBANK1  0000
__HcstackCOMMON                      cstackCOMMON 0000
__HdataBANK0                         dataBANK0    0000
__HdataBANK1                         dataBANK1    0000
__HdataCOMMON                        dataCOMMON   0000
__Heeprom_data                       eeprom_data  0000
__Hend_init                          end_init     0015
__Hfunctab                           functab      0000
__HidataBANK0                        idataBANK0   0000
__HidataBANK1                        idataBANK1   0000
__HidataCOMMON                       idataCOMMON  0000
__Hidloc                             idloc        0000
__Hinit                              init         0012
__Hinittext                          inittext     0000
__Hintentry                          intentry     0012
__Hmaintext                          maintext     0000
__Hpowerup                           powerup      0000
__Hram                               ram          0000
__Hreset_vec                         reset_vec    0003
__Hsfr0                              sfr0         0000
__Hsfr1                              sfr1         0000
__Hsfr2                              sfr2         0000
__Hsfr3                              sfr3         0000
__Hspace_0                           (abs)        2009
__Hspace_1                           (abs)        01E7
__Hspace_2                           (abs)        0000
__Hspace_3                           (abs)        0000
__Hstack                             stack        0000
__Hstrings                           strings      0000
__Htext                              text         0000
__Labs1                              abs1         0000
__Lbank0                             bank0        0000
__Lbank1                             bank1        0000
__Lbank2                             bank2        0000
__Lbank3                             bank3        0000
__LbssBANK0                          bssBANK0     0000
__LbssBANK1                          bssBANK1     0000
__LbssBANK3                          bssBANK3     0000
__LbssCOMMON                         bssCOMMON    0000
__Lcinit                             cinit        0015
__Lclrtext                           clrtext      0000
__Lcode                              code         0000
__Lcommon                            common       0000
__Lconfig                            config       2007
__LcstackBANK0                       cstackBANK0  0000
__LcstackBANK1                       cstackBANK1  0000
__LcstackCOMMON                      cstackCOMMON 0000
__LdataBANK0                         dataBANK0    0000
__LdataBANK1                         dataBANK1    0000
__LdataCOMMON                        dataCOMMON   0000
__Leeprom_data                       eeprom_data  0000
__Lend_init                          end_init     0012
__Lfunctab                           functab      0000
__LidataBANK0                        idataBANK0   0000
__LidataBANK1                        idataBANK1   0000
__LidataCOMMON                       idataCOMMON  0000
__Lidloc                             idloc        0000
__Linit                              init         0012
__Linittext                          inittext     0000
__Lintentry                          intentry     0004
__Lmaintext                          maintext     0000
__Lpowerup                           powerup      0000
__Lram                               ram          0000
__Lreset_vec                         reset_vec    0000
__Lsfr0                              sfr0         0000
__Lsfr1                              sfr1         0000
__Lsfr2                              sfr2         0000
__Lsfr3                              sfr3         0000
__Lspace_0                           (abs)        0000
__Lspace_1                           (abs)        0000
__Lspace_2                           (abs)        0000
__Lspace_3                           (abs)        0000
__Lstack                             stack        0000
__Lstrings                           strings      0000
__Ltext                              text         0000
__S0                                 (abs)        2009
__S1                                 (abs)        01E7
__S2                                 (abs)        0000
__S3                                 (abs)        0000
___cgram                             dataBANK1    00D4
___int_sp                            stack        0000
___latbits                           (abs)        0002
___lwdiv                             text23       07C0
___lwdiv@counter                     cstackBANK0  0025
___lwdiv@dividend                    cstackBANK0  0022
___lwdiv@divisor                     cstackBANK0  0020
___lwdiv@quotient                    cstackBANK0  0026
___lwmod                             text22       0ECA
___lwmod@counter                     cstackBANK0  002D
___lwmod@dividend                    cstackBANK0  002A
___lwmod@divisor                     cstackBANK0  0028
___sp                                stack        0000
__end_of_ADCInit                     text34       0D2B
__end_of_ConnInit                    text31       0D41
__end_of_IOInit                      text30       1000
__end_of_ISR                         text35       0F67
__end_of_LCDBusyLoop                 text29       0609
__end_of_LCDByte                     text28       071A
__end_of_LCDGotoXY                   text25       0E14
__end_of_LCDInit                     text27       05A1
__end_of_LCDWriteString              text24       066B
__end_of_LoadMenuItem                text32       0D17
__end_of_MenuInit                    text26       076E
__end_of___lwdiv                     text23       07FE
__end_of___lwmod                     text22       0EFE
__end_of__initialization             cinit        0041
__end_of__stringtab                  strings      067B
__end_of_compose                     text11       07C0
__end_of_crc_calculate               text13       0458
__end_of_create_HEART_BEAT_RSP_CMD   text8        0E98
__end_of_create_cmd                  text10       0DC9
__end_of_dpowers                     strings      0685
__end_of_dump_conn                   text20       03BC
__end_of_dump_msg                    text7        031F
__end_of_eeprom_read                 text33       0DA4
__end_of_extract_HEART_BEAT_RQT_CMD  text9        0CE2
__end_of_get_distance                text19       0CC1
__end_of_get_minus_index             text18       0CD1
__end_of_get_msg                     text14       0FB3
__end_of_get_msg_index               text15       0188
__end_of_get_next_index              text17       0CA2
__end_of_get_plus_index              text16       0CB1
__end_of_handle_HEART_BEAT_RQT_CMD   text2        0DEE
__end_of_handle_received_cmds        text1        0D80
__end_of_main                        maintext     0ECA
__end_of_memcpy                      text12       0E3F
__end_of_receive_input               text36       04CD
__end_of_send_byte                   text5        0E6A
__end_of_send_half_byte              text6        0539
__end_of_send_msg                    text3        0F32
__end_of_send_string                 text4        0D60
__end_of_sprintf                     text21       025F
__end_of_start_mark                  strings      0689
__end_of_stop_mark                   strings      068D
__end_ofi1_get_next_index            text37       0C96
__initialization                     cinit        0015
__pbssBANK0                          bssBANK0     0062
__pbssBANK1                          bssBANK1     00C3
__pbssBANK3                          bssBANK3     0190
__pbssCOMMON                         bssCOMMON    007C
__pcstackBANK0                       cstackBANK0  0020
__pcstackBANK1                       cstackBANK1  00A0
__pcstackCOMMON                      cstackCOMMON 0070
__pdataBANK0                         dataBANK0    0063
__pdataBANK1                         dataBANK1    00D4
__pdataCOMMON                        dataCOMMON   007D
__pidataBANK0                        idataBANK0   07FF
__pidataBANK1                        idataBANK1   0CF3
__pidataCOMMON                       idataCOMMON  07FE
__pintentry                          intentry     0004
__pmaintext                          maintext     0E98
__pstrings                           strings      066B
__ptext1                             text1        0D60
__ptext10                            text10       0DA4
__ptext11                            text11       076E
__ptext12                            text12       0E14
__ptext13                            text13       03BC
__ptext14                            text14       0F67
__ptext15                            text15       0045
__ptext16                            text16       0CA2
__ptext17                            text17       0C96
__ptext18                            text18       0CC1
__ptext19                            text19       0CB1
__ptext2                             text2        0DC9
__ptext20                            text20       031F
__ptext21                            text21       0188
__ptext22                            text22       0ECA
__ptext23                            text23       07C0
__ptext24                            text24       0609
__ptext25                            text25       0DEE
__ptext26                            text26       071A
__ptext27                            text27       0539
__ptext28                            text28       06C3
__ptext29                            text29       05A1
__ptext3                             text3        0EFE
__ptext30                            text30       0FB3
__ptext31                            text31       0D2B
__ptext32                            text32       0D04
__ptext33                            text33       0D80
__ptext34                            text34       0D17
__ptext35                            text35       0F32
__ptext36                            text36       0458
__ptext37                            text37       0C8C
__ptext4                             text4        0D41
__ptext5                             text5        0E3F
__ptext6                             text6        04CD
__ptext7                             text7        025F
__ptext8                             text8        0E6A
__ptext9                             text9        0CD1
__size_of_ADCInit                    (abs)        0000
__size_of_ConnInit                   (abs)        0000
__size_of_IOInit                     (abs)        0000
__size_of_ISR                        (abs)        0000
__size_of_LCDBusyLoop                (abs)        0000
__size_of_LCDByte                    (abs)        0000
__size_of_LCDGotoXY                  (abs)        0000
__size_of_LCDInit                    (abs)        0000
__size_of_LCDWriteString             (abs)        0000
__size_of_LoadMenuItem               (abs)        0000
__size_of_MenuInit                   (abs)        0000
__size_of___lwdiv                    (abs)        0000
__size_of___lwmod                    (abs)        0000
__size_of_compose                    (abs)        0000
__size_of_crc_calculate              (abs)        0000
__size_of_create_HEART_BEAT_RSP_CMD  (abs)        0000
__size_of_create_cmd                 (abs)        0000
__size_of_dump_conn                  (abs)        0000
__size_of_dump_msg                   (abs)        0000
__size_of_eeprom_read                (abs)        0000
__size_of_extract_HEART_BEAT_RQT_CMD (abs)        0000
__size_of_get_distance               (abs)        0000
__size_of_get_minus_index            (abs)        0000
__size_of_get_msg                    (abs)        0000
__size_of_get_msg_index              (abs)        0000
__size_of_get_next_index             (abs)        0000
__size_of_get_plus_index             (abs)        0000
__size_of_handle_HEART_BEAT_RQT_CMD  (abs)        0000
__size_of_handle_received_cmds       (abs)        0000
__size_of_main                       (abs)        0000
__size_of_memcpy                     (abs)        0000
__size_of_receive_input              (abs)        0000
__size_of_send_byte                  (abs)        0000
__size_of_send_half_byte             (abs)        0000
__size_of_send_msg                   (abs)        0000
__size_of_send_string                (abs)        0000
__size_of_sprintf                    (abs)        0000
__size_ofi1_get_next_index           (abs)        0000
__stringbase                         strings      067A
__stringtab                          strings      066B
_buffer_rcv                          bssBANK3     0190
_compose                             text11       076E
_count_rcv                           bssBANK1     00CE
_crc_calculate                       text13       03BC
_create_HEART_BEAT_RSP_CMD           text8        0E6A
_create_cmd                          text10       0DA4
_dpowers                             strings      067B
_dump_conn                           text20       031F
_dump_msg                            text7        025F
_eeprom_read                         text33       0D80
_end_index_rcv                       bssCOMMON    007C
_extract_HEART_BEAT_RQT_CMD          text9        0CD1
_g_menu                              bssBANK1     00C3
_get_distance                        text19       0CB1
_get_minus_index                     text18       0CC1
_get_msg                             text14       0F67
_get_msg_index                       text15       0045
_get_next_index                      text17       0C96
_get_plus_index                      text16       0CA2
_handle_HEART_BEAT_RQT_CMD           text2        0DC9
_handle_received_cmds                text1        0D60
_low_half_rcv                        dataCOMMON   007D
_low_rcv                             dataBANK1    00E1
_main                                maintext     0E98
_memcpy                              text12       0E14
_msg_rcv                             bssBANK3     01D0
_pmsg_rcv                            dataBANK0    0063
_pstr_rcv                            dataBANK1    00E3
_receive_input                       text36       0458
_sdebug                              bssBANK3     01B0
_send_byte                           text5        0E3F
_send_half_byte                      text6        04CD
_send_msg                            text3        0EFE
_send_string                         text4        0D41
_server_conn                         bssBANK1     00CF
_sprintf                             text21       0188
_start_index_rcv                     bssBANK0     0062
_start_mark                          strings      0685
_stop_mark                           strings      0689
btemp                                (abs)        007E
clear_ram0                           clrtext      0C84
compose@cmd                          cstackBANK0  002C
compose@data                         cstackBANK0  002D
compose@datalen                      cstackBANK0  002E
compose@from                         cstackBANK0  0029
compose@len                          cstackBANK0  0031
compose@msgid                        cstackBANK0  002B
compose@pmsg                         cstackBANK0  0033
compose@to                           cstackBANK0  002A
crc_calculate@crc                    cstackBANK0  0026
crc_calculate@i                      cstackBANK0  0028
crc_calculate@pmsg                   cstackBANK0  0020
create_HEART_BEAT_RSP_CMD@pconn      cstackBANK0  0046
create_HEART_BEAT_RSP_CMD@pmsgi      cstackBANK0  0040
create_HEART_BEAT_RSP_CMD@pmsgo      cstackBANK0  0041
create_HEART_BEAT_RSP_CMD@rqt        cstackBANK0  0048
create_HEART_BEAT_RSP_CMD@rsp        cstackBANK0  0047
create_cmd@cmd_data                  cstackBANK0  0036
create_cmd@cmd_data_len              cstackBANK0  0037
create_cmd@cmd_id                    cstackBANK0  0034
create_cmd@msg_id                    cstackBANK0  0035
create_cmd@pconn                     cstackBANK0  003F
create_cmd@pmsg                      cstackBANK0  0038
dump_conn@count                      cstackBANK1  00C0
dump_conn@i                          cstackBANK1  00C1
dump_conn@pconn                      cstackBANK1  00C2
dump_conn@s                          cstackBANK1  00A0
dump_msg@count                       cstackBANK0  005D
dump_msg@i                           cstackBANK0  005E
dump_msg@pmsg                        cstackBANK0  0046
eeprom_read@addr                     cstackBANK0  0021
end_of_initialization                cinit        0041
extract_HEART_BEAT_RQT_CMD@pmsg      cstackBANK0  002A
extract_HEART_BEAT_RQT_CMD@prqt      cstackBANK0  0029
get_distance@end_index               cstackBANK0  0020
get_distance@start_index             cstackBANK0  0021
get_minus_index@index                cstackBANK0  0021
get_minus_index@sub                  cstackBANK0  0020
get_msg@end_index                    cstackBANK0  002E
get_msg@i                            cstackBANK0  002B
get_msg@pmsg                         cstackBANK0  002C
get_msg@pstr                         cstackBANK0  002A
get_msg@start_index                  cstackBANK0  002D
get_msg@temp                         cstackBANK0  002F
get_msg_index@end_index              cstackBANK0  0023
get_msg_index@i                      cstackBANK0  0027
get_msg_index@start_index            cstackBANK0  0026
get_next_index@index                 cstackBANK0  0020
get_plus_index@add                   cstackBANK0  0020
get_plus_index@index                 cstackBANK0  0022
handle_HEART_BEAT_RQT_CMD@msgo       cstackBANK1  00A1
handle_HEART_BEAT_RQT_CMD@pmsgi      cstackBANK1  00A0
i1_get_next_index                    text37       0C8C
i1get_next_index@index               cstackCOMMON 0070
init_fetch0                          inittext     0CE2
init_ram0                            inittext     0CE6
interrupt_function                   intentry     0004
intlevel0                            functab      0000
intlevel1                            functab      0000
intlevel2                            functab      0000
intlevel3                            functab      0000
intlevel4                            functab      0000
intlevel5                            functab      0000
ltemp                                (abs)        007E
ltemp0                               (abs)        007E
ltemp1                               (abs)        0082
ltemp2                               (abs)        0086
ltemp3                               (abs)        0080
main@count                           cstackBANK0  0061
memcpy@d                             cstackBANK0  0027
memcpy@d1                            cstackBANK0  0028
memcpy@n                             cstackBANK0  0022
memcpy@s                             cstackBANK0  0025
memcpy@s1                            cstackBANK0  0020
receive_input@byte1                  cstackCOMMON 0073
receive_input@byte2                  cstackCOMMON 0074
receive_input@value                  cstackCOMMON 0072
reset_vec                            reset_vec    0000
saved_w                              (abs)        007E
send_byte@c                          cstackBANK0  0026
send_half_byte@byte                  cstackBANK0  0023
send_half_byte@low                   cstackBANK0  0020
send_half_byte@value                 cstackBANK0  0022
send_msg@pmsg                        cstackBANK0  002E
send_msg@s                           cstackBANK0  002D
send_string@i                        cstackBANK0  002B
send_string@len                      cstackBANK0  0029
send_string@str                      cstackBANK0  0027
sprintf@ap                           cstackBANK0  0040
sprintf@c                            cstackBANK0  0045
sprintf@f                            cstackBANK0  0030
sprintf@flag                         cstackBANK0  0041
sprintf@prec                         cstackBANK0  0042
sprintf@sp                           cstackBANK0  002E
sprintf@val                          cstackBANK0  0043
stackhi                              (abs)        0000
stacklo                              (abs)        0000
start                                init         0012
start_initialization                 cinit        0015
ttemp                                (abs)        007E
ttemp0                               (abs)        007E
ttemp1                               (abs)        0081
ttemp2                               (abs)        0084
ttemp3                               (abs)        0087
ttemp4                               (abs)        007F
wtemp                                (abs)        007E
wtemp0                               (abs)        007E
wtemp1                               (abs)        0080
wtemp2                               (abs)        0082
wtemp3                               (abs)        0084
wtemp4                               (abs)        0086
wtemp5                               (abs)        0088
wtemp6                               (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 105 in file "do_am.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  count           1   65[BANK0 ] unsigned char 
  value           1    0        unsigned char 
  ret             1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    9
 This function calls:
		_ADCInit
		_ConnInit
		_IOInit
		_LCDByte
		_LCDInit
		_MenuInit
		_dump_conn
		_handle_received_cmds
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _handle_received_cmds *****************
 Defined at:
		line 34 in file "cmd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_get_msg
		_handle_HEART_BEAT_RQT_CMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _handle_HEART_BEAT_RQT_CMD *****************
 Defined at:
		line 84 in file "heart_beat.h"
 Parameters:    Size  Location     Type
  pmsgi           1    wreg     PTR struct .
		 -> msg_rcv(23), 
 Auto vars:     Size  Location     Type
  pmsgi           1    0[BANK1 ] PTR struct .
		 -> msg_rcv(23), 
  msgo           23    1[BANK1 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0      24       0       0
      Temps:          0       2       0       0       0
      Totals:         0       2      24       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_create_HEART_BEAT_RSP_CMD
		_dump_msg
		_send_msg
 This function is called by:
		_handle_received_cmds
 This function uses a non-reentrant model


 *************** function _send_msg *****************
 Defined at:
		line 29 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), send_REG_ID_RQT_CMD_and_wait@msg(23), 
 Auto vars:     Size  Location     Type
  pmsg            1   14[BANK0 ] PTR struct .
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), send_REG_ID_RQT_CMD_and_wait@msg(23), 
  s               1   13[BANK0 ] PTR unsigned char 
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), send_REG_ID_RQT_CMD_and_wait@msg(23), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_send_string
 This function is called by:
		_handle_HEART_BEAT_RQT_CMD
		_send_REG_ID_RQT_CMD_and_wait
 This function uses a non-reentrant model


 *************** function _send_string *****************
 Defined at:
		line 29 in file "packet.h"
 Parameters:    Size  Location     Type
  str             2    7[BANK0 ] PTR unsigned char 
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), send_REG_ID_RQT_CMD_and_wait@msg(23), stop_mark(4), start_mark(4), 
  len             1    9[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  i               1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_send_byte
 This function is called by:
		_send_msg
 This function uses a non-reentrant model


 *************** function _send_byte *****************
 Defined at:
		line 20 in file "packet.h"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_send_half_byte
 This function is called by:
		_send_string
 This function uses a non-reentrant model


 *************** function _send_half_byte *****************
 Defined at:
		line 14 in file "packet.h"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
  low             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  value           1    2[BANK0 ] unsigned char 
  byte            1    3[BANK0 ] PTR struct .
		 -> send_half_byte@value(1), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_send_byte
 This function uses a non-reentrant model


 *************** function _dump_msg *****************
 Defined at:
		line 75 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            2   38[BANK0 ] PTR struct .
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), msg_rcv(23), 
 Auto vars:     Size  Location     Type
  i               1   62[BANK0 ] char 
  count           1   61[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0      21       0       0       0
      Totals:         0      25       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCDByte
		_LCDGotoXY
		_LCDWriteString
		_sprintf
 This function is called by:
		_handle_HEART_BEAT_RQT_CMD
		_send_REG_ID_RQT_CMD_and_wait
 This function uses a non-reentrant model


 *************** function _create_HEART_BEAT_RSP_CMD *****************
 Defined at:
		line 73 in file "heart_beat.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> server_conn(5), 
  pmsgi           1   32[BANK0 ] PTR struct .
		 -> msg_rcv(23), 
  pmsgo           1   33[BANK0 ] PTR struct .
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), 
 Auto vars:     Size  Location     Type
  pconn           1   38[BANK0 ] PTR struct .
		 -> server_conn(5), 
  rqt             1   40[BANK0 ] struct .
  rsp             1   39[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_create_cmd
		_extract_HEART_BEAT_RQT_CMD
 This function is called by:
		_handle_HEART_BEAT_RQT_CMD
 This function uses a non-reentrant model


 *************** function _extract_HEART_BEAT_RQT_CMD *****************
 Defined at:
		line 68 in file "heart_beat.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR const struct .
		 -> msg_rcv(23), 
  prqt            1    9[BANK0 ] PTR struct .
		 -> create_HEART_BEAT_RSP_CMD@rqt(1), 
 Auto vars:     Size  Location     Type
  pmsg            1   10[BANK0 ] PTR const struct .
		 -> msg_rcv(23), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_memcpy
 This function is called by:
		_create_HEART_BEAT_RSP_CMD
 This function uses a non-reentrant model


 *************** function _create_cmd *****************
 Defined at:
		line 57 in file "cmd.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> server_conn(5), 
  cmd_id          1   20[BANK0 ] unsigned char 
  msg_id          1   21[BANK0 ] unsigned char 
  cmd_data        1   22[BANK0 ] PTR const void 
		 -> create_HEART_BEAT_RSP_CMD@rsp(1), 
  cmd_data_len    1   23[BANK0 ] unsigned char 
  pmsg            1   24[BANK0 ] PTR struct .
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), send_REG_ID_RQT_CMD_and_wait@msg(23), 
 Auto vars:     Size  Location     Type
  pconn           1   31[BANK0 ] PTR struct .
		 -> server_conn(5), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       5       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       6       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_compose
 This function is called by:
		_create_HEART_BEAT_RSP_CMD
		_create_REG_ID_RQT_CMD
 This function uses a non-reentrant model


 *************** function _compose *****************
 Defined at:
		line 57 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), send_REG_ID_RQT_CMD_and_wait@msg(23), 
  from            1    9[BANK0 ] unsigned char 
  to              1   10[BANK0 ] unsigned char 
  msgid           1   11[BANK0 ] unsigned char 
  cmd             1   12[BANK0 ] unsigned char 
  data            1   13[BANK0 ] PTR unsigned char 
		 -> create_HEART_BEAT_RSP_CMD@rsp(1), 
  datalen         1   14[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pmsg            1   19[BANK0 ] PTR struct .
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), send_REG_ID_RQT_CMD_and_wait@msg(23), 
  len             2   17[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0      11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_crc_calculate
		_memcpy
 This function is called by:
		_create_cmd
 This function uses a non-reentrant model


 *************** function _memcpy *****************
 Defined at:
		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memcpy.c"
 Parameters:    Size  Location     Type
  d1              1    wreg     PTR void 
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), create_HEART_BEAT_RSP_CMD@rqt(1), send_REG_ID_RQT_CMD_and_wait@msg(23), 
  s1              2    0[BANK0 ] PTR const void 
		 -> msg_rcv.data(16), create_HEART_BEAT_RSP_CMD@rsp(1), msg_rcv(23), 
  n               2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  d1              1    8[BANK0 ] PTR void 
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), create_HEART_BEAT_RSP_CMD@rqt(1), send_REG_ID_RQT_CMD_and_wait@msg(23), 
  s               2    5[BANK0 ] PTR const unsigned char 
		 -> msg_rcv.data(16), create_HEART_BEAT_RSP_CMD@rsp(1), msg_rcv(23), 
  d               1    7[BANK0 ] PTR unsigned char 
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), create_HEART_BEAT_RSP_CMD@rqt(1), send_REG_ID_RQT_CMD_and_wait@msg(23), 
 Return value:  Size  Location     Type
                  1    wreg      PTR void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_compose
		_extract_HEART_BEAT_RQT_CMD
		_extract_REG_ID_RSP_CMD
 This function uses a non-reentrant model


 *************** function _crc_calculate *****************
 Defined at:
		line 37 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            2    0[BANK0 ] PTR struct .
		 -> handle_HEART_BEAT_RQT_CMD@msgo(23), send_REG_ID_RQT_CMD_and_wait@msg(23), msg_rcv(23), 
 Auto vars:     Size  Location     Type
  i               1    8[BANK0 ] unsigned char 
  crc             2    6[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_compose
		_crc_verify
 This function uses a non-reentrant model


 *************** function _get_msg *****************
 Defined at:
		line 102 in file "msg.h"
 Parameters:    Size  Location     Type
  pmsg            1    wreg     PTR struct .
		 -> msg_rcv(23), 
 Auto vars:     Size  Location     Type
  pmsg            1   12[BANK0 ] PTR struct .
		 -> msg_rcv(23), 
  temp            1   15[BANK0 ] unsigned char 
  end_index       1   14[BANK0 ] unsigned char 
  start_index     1   13[BANK0 ] unsigned char 
  i               1   11[BANK0 ] unsigned char 
  pstr            1   10[BANK0 ] PTR unsigned char 
		 -> msg_rcv(23), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_get_distance
		_get_msg_index
		_get_next_index
 This function is called by:
		_handle_received_cmds
		_send_REG_ID_RQT_CMD_and_wait
 This function uses a non-reentrant model


 *************** function _get_msg_index *****************
 Defined at:
		line 83 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  start_index     1    wreg     PTR unsigned char 
		 -> get_msg@start_index(1), 
  end_index       1    3[BANK0 ] PTR unsigned char 
		 -> get_msg@end_index(1), 
 Auto vars:     Size  Location     Type
  start_index     1    6[BANK0 ] PTR unsigned char 
		 -> get_msg@start_index(1), 
  i               1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_get_distance
		_get_minus_index
		_get_next_index
		_get_plus_index
 This function is called by:
		_get_msg
 This function uses a non-reentrant model


 *************** function _get_plus_index *****************
 Defined at:
		line 55 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
  add             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  index           1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
 This function uses a non-reentrant model


 *************** function _get_next_index *****************
 Defined at:
		line 30 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  index           1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
		_get_msg
 This function uses a non-reentrant model


 *************** function _get_minus_index *****************
 Defined at:
		line 64 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
  sub             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  index           1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
 This function uses a non-reentrant model


 *************** function _get_distance *****************
 Defined at:
		line 72 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  start_index     1    wreg     unsigned char 
  end_index       1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  start_index     1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_get_msg_index
		_get_msg
 This function uses a non-reentrant model


 *************** function _dump_conn *****************
 Defined at:
		line 43 in file "connection.h"
 Parameters:    Size  Location     Type
  pconn           1    wreg     PTR struct .
		 -> server_conn(5), 
 Auto vars:     Size  Location     Type
  pconn           1   34[BANK1 ] PTR struct .
		 -> server_conn(5), 
  i               1   33[BANK1 ] char 
  count           1   32[BANK1 ] char 
  s              32    0[BANK1 ] unsigned char [32]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0      35       0       0
      Temps:          0       9       0       0       0
      Totals:         0       9      35       0       0
Total ram usage:       44 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCDByte
		_LCDGotoXY
		_LCDWriteString
		_sprintf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              2   14[BANK0 ] PTR unsigned char 
		 -> dump_conn@s(32), sdebug(32), 
  f               1   16[BANK0 ] PTR const unsigned char 
		 -> STR_13(14), STR_11(20), STR_9(15), STR_7(12), 
		 -> STR_5(9), STR_3(6), STR_1(3), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  val             2   35[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   37[BANK0 ] char 
  prec            1   34[BANK0 ] char 
  flag            1   33[BANK0 ] unsigned char 
  ap              1   32[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2   14[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0      15       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      24       0       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_dump_msg
		_dump_conn
		_debug_1
		_debug_2
		_debug_3
		_debug_4
		_debug_5
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    8[BANK0 ] unsigned int 
  dividend        2   10[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   13[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK0 ] unsigned int 
  dividend        2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    6[BANK0 ] unsigned int 
  counter         1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _LCDWriteString *****************
 Defined at:
		line 283 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  msg             2   12[BANK0 ] PTR const unsigned char 
		 -> STR_19(1), STR_18(5), STR_17(5), STR_16(5), 
		 -> STR_15(5), STR_14(1), dump_conn@s(32), STR_12(1), 
		 -> STR_10(1), STR_8(1), STR_6(1), STR_4(1), 
		 -> STR_2(1), sdebug(32), 
 Auto vars:     Size  Location     Type
  cc              1   16[BANK0 ] char 
  count           1   15[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDByte
 This function is called by:
		_dump_msg
		_dump_conn
		_debug_1
		_debug_2
		_debug_3
		_debug_4
		_debug_5
		_ShowMenu
		_ClearMenu
 This function uses a non-reentrant model


 *************** function _LCDGotoXY *****************
 Defined at:
		line 367 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1   12[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  x               1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDByte
 This function is called by:
		_dump_msg
		_dump_conn
		_debug_1
		_debug_2
		_debug_3
		_debug_4
		_debug_5
		_ShowMenu
		_ClearMenu
 This function uses a non-reentrant model


 *************** function _MenuInit *****************
 Defined at:
		line 7 in file "menu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LoadMenuItem
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDInit *****************
 Defined at:
		line 211 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  style           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  style           1   14[BANK0 ] unsigned char 
  __i             1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDBusyLoop
		_LCDByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDByte *****************
 Defined at:
		line 80 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
  isdata          1    5[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  c               1   10[BANK0 ] unsigned char 
  temp            1   11[BANK0 ] unsigned char 
  ln              1    9[BANK0 ] unsigned char 
  hn              1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCDBusyLoop
 This function is called by:
		_dump_msg
		_dump_conn
		_main
		_LCDInit
		_LCDWriteString
		_LCDGotoXY
		_debug_1
		_debug_2
		_debug_3
		_debug_4
		_debug_5
		_LCDSetStyle
		_LCDWriteInt
		_ShowMenu
		_ClearMenu
 This function uses a non-reentrant model


 *************** function _LCDBusyLoop *****************
 Defined at:
		line 135 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1    4[BANK0 ] unsigned char 
  temp            1    3[BANK0 ] unsigned char 
  busy            1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_LCDByte
		_LCDInit
 This function uses a non-reentrant model


 *************** function _IOInit *****************
 Defined at:
		line 46 in file "do_am.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ConnInit *****************
 Defined at:
		line 38 in file "do_am.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LoadMenuItem
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LoadMenuItem *****************
 Defined at:
		line 36 in file "menu.c"
 Parameters:    Size  Location     Type
  item            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  item            1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_eeprom_read
 This function is called by:
		_ConnInit
		_MenuInit
 This function uses a non-reentrant model


 *************** function _eeprom_read *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c"
 Parameters:    Size  Location     Type
  addr            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  addr            1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_LoadMenuItem
 This function uses a non-reentrant model


 *************** function _ADCInit *****************
 Defined at:
		line 7 in file "adc_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 97 in file "do_am.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  byte            1   11[COMMON] PTR struct .
		 -> ISR@value(1), 
  value           1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_receive_input
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _receive_input *****************
 Defined at:
		line 41 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  value           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  value           1    2[COMMON] unsigned char 
  byte2           1    4[COMMON] PTR struct .
		 -> receive_input@value(1), 
  byte1           1    3[COMMON] PTR struct .
		 -> buffer_rcv(32), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_get_next_index
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_get_next_index *****************
 Defined at:
		line 30 in file "circle_buffer.h"
 Parameters:    Size  Location     Type
  index           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  index           1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_receive_input
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
heart_beat.h
		_create_HEART_BEAT_RSP_CMD		CODE           	0E6A	0000	47
		_handle_HEART_BEAT_RQT_CMD		CODE           	0DC9	0000	38
		_extract_HEART_BEAT_RQT_CMD		CODE           	0CD1	0000	18

heart_beat.h estimated size: 103

msg.h
		_get_msg       		CODE           	0F67	0000	77
		_send_msg      		CODE           	0EFE	0000	53
		_crc_calculate 		CODE           	03BC	0000	157
		_dump_msg      		CODE           	025F	0000	193
		_compose       		CODE           	076E	0000	83

msg.h estimated size: 563

cmd.h
		_create_cmd    		CODE           	0DA4	0000	38
		_handle_received_cmds		CODE           	0D60	0000	33

cmd.h estimated size: 71

packet.h
		_send_byte     		CODE           	0E3F	0000	44
		_send_string   		CODE           	0D41	0000	32
		_send_half_byte		CODE           	04CD	0000	109

packet.h estimated size: 185

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c
		_sprintf       		CODE           	0188	0000	216

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c estimated size: 216

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c
		_eeprom_read   		CODE           	0D80	0000	37

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c estimated size: 37

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c
		___lwdiv       		CODE           	07C0	0000	63

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c estimated size: 63

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memcpy.c
		_memcpy        		CODE           	0E14	0000	44

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memcpy.c estimated size: 44

shared
		__stringtab    		STRING         	066B	0000	17
		_dpowers       		STRING         	067B	0000	11
		i1_get_next_index		CODE           	0C8C	0000	11
		_start_mark    		STRING         	0685	0000	5
		__initialization		CODE           	0015	0000	45
		_stop_mark     		STRING         	0689	0000	5

shared estimated size: 94

circle_buffer.h
		_get_distance  		CODE           	0CB1	0000	17
		_get_next_index		CODE           	0C96	0000	13
		_get_minus_index		CODE           	0CC1	0000	17
		_receive_input 		CODE           	0458	0000	118
		_get_plus_index		CODE           	0CA2	0000	16
		_get_msg_index 		CODE           	0045	0000	324

circle_buffer.h estimated size: 505

lcd_hd44780_pic16.c
		_LCDByte       		CODE           	06C3	0000	88
		_LCDInit       		CODE           	0539	0000	105
		_LCDWriteString		CODE           	0609	0000	99
		_LCDGotoXY     		CODE           	0DEE	0000	39
		_LCDBusyLoop   		CODE           	05A1	0000	105

lcd_hd44780_pic16.c estimated size: 436

menu.c
		_MenuInit      		CODE           	071A	0000	85
		_LoadMenuItem  		CODE           	0D04	0000	20

menu.c estimated size: 105

connection.h
		_dump_conn     		CODE           	031F	0000	158

connection.h estimated size: 158

do_am.c
		_IOInit        		CODE           	0FB3	0000	78
		_ISR           		CODE           	0F32	0000	54
		_main          		CODE           	0E98	0000	51
		_ConnInit      		CODE           	0D2B	0000	23

do_am.c estimated size: 206

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c
		___lwmod       		CODE           	0ECA	0000	53

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c estimated size: 53

adc_pic16.c
		_ADCInit       		CODE           	0D17	0000	21

adc_pic16.c estimated size: 21

