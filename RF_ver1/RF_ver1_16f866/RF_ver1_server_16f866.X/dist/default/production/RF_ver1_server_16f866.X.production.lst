

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jun 25 17:10:04 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0009                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  0089                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  008F                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0093                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  0105                     	;# 
   105  0107                     	;# 
   106  0108                     	;# 
   107  0109                     	;# 
   108  010C                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0185                     	;# 
   114  0187                     	;# 
   115  0188                     	;# 
   116  0189                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  008F                     	;# 
   162  0090                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0093                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0097                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  0105                     	;# 
   181  0107                     	;# 
   182  0108                     	;# 
   183  0109                     	;# 
   184  010C                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0185                     	;# 
   190  0187                     	;# 
   191  0188                     	;# 
   192  0189                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  008F                     	;# 
   238  0090                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0093                     	;# 
   243  0093                     	;# 
   244  0094                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  0105                     	;# 
   257  0107                     	;# 
   258  0108                     	;# 
   259  0109                     	;# 
   260  010C                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  010F                     	;# 
   265  0185                     	;# 
   266  0187                     	;# 
   267  0188                     	;# 
   268  0189                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  000E                     	;# 
   286  000F                     	;# 
   287  0010                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0014                     	;# 
   292  0015                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  001D                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  0081                     	;# 
   306  0085                     	;# 
   307  0086                     	;# 
   308  0087                     	;# 
   309  0089                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  008F                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0093                     	;# 
   318  0093                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0095                     	;# 
   322  0096                     	;# 
   323  0097                     	;# 
   324  0098                     	;# 
   325  0099                     	;# 
   326  009A                     	;# 
   327  009B                     	;# 
   328  009C                     	;# 
   329  009D                     	;# 
   330  009E                     	;# 
   331  009F                     	;# 
   332  0105                     	;# 
   333  0107                     	;# 
   334  0108                     	;# 
   335  0109                     	;# 
   336  010C                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  0185                     	;# 
   342  0187                     	;# 
   343  0188                     	;# 
   344  0189                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347  0000                     	;# 
   348  0001                     	;# 
   349  0002                     	;# 
   350  0003                     	;# 
   351  0004                     	;# 
   352  0005                     	;# 
   353  0006                     	;# 
   354  0007                     	;# 
   355  0009                     	;# 
   356  000A                     	;# 
   357  000B                     	;# 
   358  000C                     	;# 
   359  000D                     	;# 
   360  000E                     	;# 
   361  000E                     	;# 
   362  000F                     	;# 
   363  0010                     	;# 
   364  0011                     	;# 
   365  0012                     	;# 
   366  0013                     	;# 
   367  0014                     	;# 
   368  0015                     	;# 
   369  0015                     	;# 
   370  0016                     	;# 
   371  0017                     	;# 
   372  0018                     	;# 
   373  0019                     	;# 
   374  001A                     	;# 
   375  001B                     	;# 
   376  001B                     	;# 
   377  001C                     	;# 
   378  001D                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  0081                     	;# 
   382  0085                     	;# 
   383  0086                     	;# 
   384  0087                     	;# 
   385  0089                     	;# 
   386  008C                     	;# 
   387  008D                     	;# 
   388  008E                     	;# 
   389  008F                     	;# 
   390  0090                     	;# 
   391  0091                     	;# 
   392  0092                     	;# 
   393  0093                     	;# 
   394  0093                     	;# 
   395  0093                     	;# 
   396  0094                     	;# 
   397  0095                     	;# 
   398  0096                     	;# 
   399  0097                     	;# 
   400  0098                     	;# 
   401  0099                     	;# 
   402  009A                     	;# 
   403  009B                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009E                     	;# 
   407  009F                     	;# 
   408  0105                     	;# 
   409  0107                     	;# 
   410  0108                     	;# 
   411  0109                     	;# 
   412  010C                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  0185                     	;# 
   418  0187                     	;# 
   419  0188                     	;# 
   420  0189                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423                           
   424                           	psect	idataBANK0
   425  0EFD                     __pidataBANK0:	
   426                           
   427                           ;initializer for ___cgram
   428  0EFD  340C               	retlw	12
   429  0EFE  3412               	retlw	18
   430  0EFF  3412               	retlw	18
   431  0F00  340C               	retlw	12
   432  0F01  3400               	retlw	0
   433  0F02  3400               	retlw	0
   434  0F03  3400               	retlw	0
   435  0F04  3400               	retlw	0
   436                           
   437                           ;initializer for LCDWriteInt@F1646
   438  0F05  34F0               	retlw	240
   439  0F06  34F0               	retlw	240
   440  0F07  34F0               	retlw	240
   441  0F08  34F0               	retlw	240
   442  0F09  34F0               	retlw	240
   443                           
   444                           ;initializer for _mode
   445  0F0A  3401               	retlw	1
   446                           
   447                           ;initializer for _pmsg
   448  0F0B  34A0               	retlw	low (_msg| 0)
   449                           
   450                           ;initializer for _submode
   451  0F0C  3401               	retlw	1
   452  001F                     _ADCON0bits	set	31
   453  001E                     _ADRESH	set	30
   454  0007                     _PORTC	set	7
   455  0018                     _CARRY	set	24
   456  005F                     _GIE	set	95
   457  002D                     _RA5	set	45
   458  002F                     _RA7	set	47
   459  0030                     _RB0	set	48
   460  0031                     _RB1	set	49
   461  0032                     _RB2	set	50
   462  0033                     _RB3	set	51
   463  0034                     _RB4	set	52
   464  0035                     _RB5	set	53
   465  0036                     _RB6	set	54
   466  0037                     _RB7	set	55
   467  0039                     _RC1	set	57
   468  003A                     _RC2	set	58
   469  003B                     _RC3	set	59
   470  009F                     _ADCON1bits	set	159
   471  009E                     _ADRESL	set	158
   472  0085                     _TRISAbits	set	133
   473  0086                     _TRISBbits	set	134
   474  0087                     _TRISC	set	135
   475  0087                     _TRISCbits	set	135
   476  010D                     _EEADR	set	269
   477  010C                     _EEDATA	set	268
   478  0189                     _ANSELHbits	set	393
   479  0188                     _ANSELbits	set	392
   480  018C                     _EECON1	set	396
   481  018D                     _EECON2	set	397
   482  0C60                     _RD	set	3168
   483  0C61                     _WR	set	3169
   484  0C62                     _WREN	set	3170
   485                           
   486                           	psect	strings
   487  0700                     __pstrings:	
   488  0700                     stringtab:	
   489  0700                     __stringtab:	
   490  0700                     stringcode:	
   491                           ;	String table - string pointers are 1 byte each
   492                           
   493  0700                     stringdir:	
   494  0700  3007               	movlw	high stringdir
   495  0701  008A               	movwf	10
   496  0702  0804               	movf	4,w
   497  0703  0A84               	incf	4,f
   498  0704  0782               	addwf	2,f
   499  0705                     __stringbase:	
   500  0705  3400               	retlw	0
   501  0706                     __end_of__stringtab:	
   502  0706                     STR_6:	
   503  0706  344E               	retlw	78	;'N'
   504  0707  344F               	retlw	79	;'O'
   505  0708  3454               	retlw	84	;'T'
   506  0709  3445               	retlw	69	;'E'
   507  070A  3444               	retlw	68	;'D'
   508  070B  3449               	retlw	73	;'I'
   509  070C  3454               	retlw	84	;'T'
   510  070D  3420               	retlw	32	;' '
   511  070E  344D               	retlw	77	;'M'
   512  070F  344F               	retlw	79	;'O'
   513  0710  3444               	retlw	68	;'D'
   514  0711  3445               	retlw	69	;'E'
   515  0712  3400               	retlw	0
   516  0713                     STR_7:	
   517  0713  344E               	retlw	78	;'N'
   518  0714  344F               	retlw	79	;'O'
   519  0715  3452               	retlw	82	;'R'
   520  0716  344D               	retlw	77	;'M'
   521  0717  3441               	retlw	65	;'A'
   522  0718  344C               	retlw	76	;'L'
   523  0719  3420               	retlw	32	;' '
   524  071A  344D               	retlw	77	;'M'
   525  071B  344F               	retlw	79	;'O'
   526  071C  3444               	retlw	68	;'D'
   527  071D  3445               	retlw	69	;'E'
   528  071E  3400               	retlw	0
   529  071F                     STR_4:	
   530  071F  344D               	retlw	77	;'M'
   531  0720  3445               	retlw	69	;'E'
   532  0721  344E               	retlw	78	;'N'
   533  0722  3455               	retlw	85	;'U'
   534  0723  3420               	retlw	32	;' '
   535  0724  344D               	retlw	77	;'M'
   536  0725  344F               	retlw	79	;'O'
   537  0726  3444               	retlw	68	;'D'
   538  0727  3445               	retlw	69	;'E'
   539  0728  3400               	retlw	0
   540  0729                     STR_10:	
   541  0729  3449               	retlw	73	;'I'
   542  072A  3444               	retlw	68	;'D'
   543  072B  3431               	retlw	49	;'1'
   544  072C  343A               	retlw	58	;':'
   545  072D  3400               	retlw	0
   546  072E                     STR_11:	
   547  072E  3449               	retlw	73	;'I'
   548  072F  3444               	retlw	68	;'D'
   549  0730  3432               	retlw	50	;'2'
   550  0731  343A               	retlw	58	;':'
   551  0732  3400               	retlw	0
   552  0733                     STR_12:	
   553  0733  3449               	retlw	73	;'I'
   554  0734  3444               	retlw	68	;'D'
   555  0735  3433               	retlw	51	;'3'
   556  0736  343A               	retlw	58	;':'
   557  0737  3400               	retlw	0
   558  0738                     STR_13:	
   559  0738  3449               	retlw	73	;'I'
   560  0739  3444               	retlw	68	;'D'
   561  073A  3434               	retlw	52	;'4'
   562  073B  343A               	retlw	58	;':'
   563  073C  3400               	retlw	0
   564  073D                     STR_3:	
   565  073D  3453               	retlw	83	;'S'
   566  073E  344E               	retlw	78	;'N'
   567  073F  3444               	retlw	68	;'D'
   568  0740  343A               	retlw	58	;':'
   569  0741  3400               	retlw	0
   570  0742                     STR_9:	
   571  0742  3444               	retlw	68	;'D'
   572  0743  344F               	retlw	79	;'O'
   573  0744  3457               	retlw	87	;'W'
   574  0745  344E               	retlw	78	;'N'
   575  0746  3400               	retlw	0
   576  0747                     STR_1:	
   577  0747  3461               	retlw	97	;'a'
   578  0748  3462               	retlw	98	;'b'
   579  0749  3463               	retlw	99	;'c'
   580  074A  3400               	retlw	0
   581  074B                     STR_8:	
   582  074B  3455               	retlw	85	;'U'
   583  074C  3450               	retlw	80	;'P'
   584  074D  3400               	retlw	0
   585  072D                     
   586                           ; #config settings
   587  0000                     
   588                           	psect	cinit
   589  0015                     start_initialization:	
   590  0015                     __initialization:	
   591                           
   592                           ; Clear objects allocated to BANK0
   593  0015  1383               	bcf	3,7	;select IRP bank0
   594  0016  3064               	movlw	low __pbssBANK0
   595  0017  0084               	movwf	4
   596  0018  306D               	movlw	low (__pbssBANK0+9)
   597  0019  120A  158A  26A7  120A  118A  	fcall	clear_ram0
   598                           
   599                           ; Clear objects allocated to BANK1
   600  001E  30A0               	movlw	low __pbssBANK1
   601  001F  0084               	movwf	4
   602  0020  30B7               	movlw	low (__pbssBANK1+23)
   603  0021  120A  158A  26A7  120A  118A  	fcall	clear_ram0
   604                           
   605                           ; Initialize objects allocated to BANK0
   606  0026  3064               	movlw	low (__pdataBANK0+16)
   607  0027  00FD               	movwf	btemp+-1
   608  0028  300E               	movlw	high __pidataBANK0
   609  0029  00FE               	movwf	btemp
   610  002A  30FD               	movlw	low __pidataBANK0
   611  002B  00FF               	movwf	btemp+1
   612  002C  3054               	movlw	low __pdataBANK0
   613  002D  0084               	movwf	4
   614  002E  120A  158A  2722   	fcall	init_ram0
   615  0031                     end_of_initialization:	
   616                           ;End of C runtime variable initialization code
   617                           
   618  0031                     __end_of__initialization:	
   619  0031  0183               	clrf	3
   620  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   621                           
   622                           	psect	bssBANK0
   623  0064                     __pbssBANK0:	
   624  0064                     _g_menu:	
   625  0064                     	ds	9
   626                           
   627                           	psect	dataBANK0
   628  0054                     __pdataBANK0:	
   629  0054                     ___cgram:	
   630  0054                     	ds	8
   631  005C                     LCDWriteInt@F1646:	
   632  005C                     	ds	5
   633  0061                     _mode:	
   634  0061                     	ds	1
   635  0062                     _pmsg:	
   636  0062                     	ds	1
   637  0063                     _submode:	
   638  0063                     	ds	1
   639                           
   640                           	psect	bssBANK1
   641  00A0                     __pbssBANK1:	
   642  00A0                     _msg:	
   643  00A0                     	ds	23
   644                           
   645                           	psect	clrtext
   646  0EA7                     clear_ram0:	
   647                           ;	Called with FSR containing the base address, and
   648                           ;	W with the last address+1
   649                           
   650  0EA7  0064               	clrwdt	;clear the watchdog before getting into this loop
   651  0EA8                     clrloop0:	
   652  0EA8  0180               	clrf	0	;clear RAM location pointed to by FSR
   653  0EA9  0A84               	incf	4,f	;increment pointer
   654  0EAA  0604               	xorwf	4,w	;XOR with final address
   655  0EAB  1903               	btfsc	3,2	;have we reached the end yet?
   656  0EAC  3400               	retlw	0	;all done for this memory range, return
   657  0EAD  0604               	xorwf	4,w	;XOR again to restore value
   658  0EAE  2EA8               	goto	clrloop0	;do the next byte
   659                           
   660                           	psect	inittext
   661  0F1E                     init_fetch0:	
   662                           ;	Called with low address in FSR and high address in W
   663                           
   664  0F1E  087E               	movf	126,w
   665  0F1F  008A               	movwf	10
   666  0F20  087F               	movf	127,w
   667  0F21  0082               	movwf	2
   668  0F22                     init_ram0:	
   669                           ;Called with:
   670                           ;	high address of idata address in btemp 
   671                           ;	low address of idata address in btemp+1 
   672                           ;	low address of data in FSR
   673                           ;	high address + 1 of data in btemp-1
   674                           
   675  0F22  271E  120A  158A   	fcall	init_fetch0
   676  0F25  0080               	movwf	0
   677  0F26  0A84               	incf	4,f
   678  0F27  0804               	movf	4,w
   679  0F28  067D               	xorwf	125,w
   680  0F29  1903               	btfsc	3,2
   681  0F2A  3400               	retlw	0
   682  0F2B  0AFF               	incf	127,f
   683  0F2C  1903               	btfsc	3,2
   684  0F2D  0AFE               	incf	126,f
   685  0F2E  2F22               	goto	init_ram0
   686                           
   687                           	psect	cstackCOMMON
   688  0070                     __pcstackCOMMON:	
   689  0070                     ?_LCDInit:	
   690  0070                     ?_MenuInit:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_LCDWriteString:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_ShowMenu:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_LCDSetStyle:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_ClearMenu:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_ValueInc:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_MenuUp:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_MenuDown:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_LCDBusyLoop:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_LoadMenuItem:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_eeprom_read:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_ADCInit:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_IOInit:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_ISR:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ??_ISR:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_main:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_SaveMenuItem:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_ValueDec:	
   742                           ; 1 bytes @ 0x0
   743                           
   744                           
   745                           ; 2 bytes @ 0x0
   746  0070                     	ds	4
   747  0074                     ?_memcpy:	
   748  0074                     ??_MenuUp:	
   749                           ; 1 bytes @ 0x4
   750                           
   751  0074                     ??_MenuDown:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     ??_LCDBusyLoop:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     ?_eeprom_write:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0074                     ??_eeprom_read:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     ??_ADCInit:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     ??_IOInit:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     ?_crc_calculate:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     ?___awdiv:	
   773                           ; 2 bytes @ 0x4
   774                           
   775  0074                     ?___awmod:	
   776                           ; 2 bytes @ 0x4
   777                           
   778  0074                     eeprom_write@value:	
   779                           ; 2 bytes @ 0x4
   780                           
   781  0074                     memcpy@s1:	
   782                           ; 1 bytes @ 0x4
   783                           
   784  0074                     ___awdiv@divisor:	
   785                           ; 1 bytes @ 0x4
   786                           
   787  0074                     ___awmod@divisor:	
   788                           ; 2 bytes @ 0x4
   789                           
   790                           
   791                           ; 2 bytes @ 0x4
   792  0074                     	ds	1
   793  0075                     ??_eeprom_write:	
   794  0075                     eeprom_read@addr:	
   795                           ; 1 bytes @ 0x5
   796                           
   797  0075                     memcpy@n:	
   798                           ; 1 bytes @ 0x5
   799                           
   800                           
   801                           ; 2 bytes @ 0x5
   802  0075                     	ds	1
   803  0076                     ??_LoadMenuItem:	
   804  0076                     ??_crc_calculate:	
   805                           ; 1 bytes @ 0x6
   806                           
   807  0076                     LCDBusyLoop@busy:	
   808                           ; 1 bytes @ 0x6
   809                           
   810  0076                     eeprom_write@addr:	
   811                           ; 1 bytes @ 0x6
   812                           
   813  0076                     ___awdiv@dividend:	
   814                           ; 1 bytes @ 0x6
   815                           
   816  0076                     ___awmod@dividend:	
   817                           ; 2 bytes @ 0x6
   818                           
   819                           
   820                           ; 2 bytes @ 0x6
   821  0076                     	ds	1
   822  0077                     ??_memcpy:	
   823  0077                     ??_SaveMenuItem:	
   824                           ; 1 bytes @ 0x7
   825                           
   826  0077                     LCDBusyLoop@temp:	
   827                           ; 1 bytes @ 0x7
   828                           
   829                           
   830                           ; 1 bytes @ 0x7
   831  0077                     	ds	1
   832  0078                     ??___awdiv:	
   833  0078                     ??___awmod:	
   834                           ; 1 bytes @ 0x8
   835                           
   836  0078                     LCDBusyLoop@status:	
   837                           ; 1 bytes @ 0x8
   838                           
   839  0078                     LoadMenuItem@item:	
   840                           ; 1 bytes @ 0x8
   841                           
   842                           
   843                           ; 1 bytes @ 0x8
   844  0078                     	ds	1
   845  0079                     ??_MenuInit:	
   846  0079                     ?_LCDByte:	
   847                           ; 1 bytes @ 0x9
   848                           
   849  0079                     LCDByte@isdata:	
   850                           ; 1 bytes @ 0x9
   851                           
   852  0079                     SaveMenuItem@item:	
   853                           ; 1 bytes @ 0x9
   854                           
   855                           
   856                           ; 1 bytes @ 0x9
   857  0079                     	ds	1
   858  007A                     ??_LCDSetStyle:	
   859                           
   860                           	psect	cstackBANK0
   861  0020                     __pcstackBANK0:	
   862                           ; 1 bytes @ 0xA
   863                           
   864  0020                     ??_LCDByte:	
   865  0020                     ??_ValueInc:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0020                     ??_ValueDec:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0020                     ___awdiv@counter:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0020                     ___awmod@counter:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0020                     memcpy@d1:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0020                     crc_calculate@crc:	
   881                           ; 1 bytes @ 0x0
   882                           
   883                           
   884                           ; 2 bytes @ 0x0
   885  0020                     	ds	1
   886  0021                     ___awdiv@sign:	
   887  0021                     ___awmod@sign:	
   888                           ; 1 bytes @ 0x1
   889                           
   890  0021                     memcpy@d:	
   891                           ; 1 bytes @ 0x1
   892                           
   893                           
   894                           ; 1 bytes @ 0x1
   895  0021                     	ds	1
   896  0022                     crc_calculate@i:	
   897  0022                     LCDByte@hn:	
   898                           ; 1 bytes @ 0x2
   899                           
   900  0022                     memcpy@s:	
   901                           ; 1 bytes @ 0x2
   902                           
   903  0022                     ___awdiv@quotient:	
   904                           ; 1 bytes @ 0x2
   905                           
   906                           
   907                           ; 2 bytes @ 0x2
   908  0022                     	ds	1
   909  0023                     crc_calculate@pmsg:	
   910  0023                     LCDByte@ln:	
   911                           ; 1 bytes @ 0x3
   912                           
   913                           
   914                           ; 1 bytes @ 0x3
   915  0023                     	ds	1
   916  0024                     ?_compose:	
   917  0024                     compose@from:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0024                     LCDByte@c:	
   921                           ; 1 bytes @ 0x4
   922                           
   923                           
   924                           ; 1 bytes @ 0x4
   925  0024                     	ds	1
   926  0025                     compose@to:	
   927  0025                     LCDByte@temp:	
   928                           ; 1 bytes @ 0x5
   929                           
   930                           
   931                           ; 1 bytes @ 0x5
   932  0025                     	ds	1
   933  0026                     ??_LCDInit:	
   934  0026                     ?_LCDGotoXY:	
   935                           ; 1 bytes @ 0x6
   936                           
   937  0026                     ??_LCDWriteString:	
   938                           ; 1 bytes @ 0x6
   939                           
   940  0026                     ?_LCDWriteInt:	
   941                           ; 1 bytes @ 0x6
   942                           
   943  0026                     compose@msgid:	
   944                           ; 1 bytes @ 0x6
   945                           
   946  0026                     LCDSetStyle@style:	
   947                           ; 1 bytes @ 0x6
   948                           
   949  0026                     LCDGotoXY@y:	
   950                           ; 1 bytes @ 0x6
   951                           
   952  0026                     LCDWriteInt@val:	
   953                           ; 1 bytes @ 0x6
   954                           
   955                           
   956                           ; 2 bytes @ 0x6
   957  0026                     	ds	1
   958  0027                     ??_LCDGotoXY:	
   959  0027                     compose@cmd:	
   960                           ; 1 bytes @ 0x7
   961                           
   962  0027                     LCDWriteString@count:	
   963                           ; 1 bytes @ 0x7
   964                           
   965                           
   966                           ; 1 bytes @ 0x7
   967  0027                     	ds	1
   968  0028                     compose@data:	
   969  0028                     LCDInit@style:	
   970                           ; 1 bytes @ 0x8
   971                           
   972  0028                     LCDWriteString@cc:	
   973                           ; 1 bytes @ 0x8
   974                           
   975  0028                     LCDWriteInt@field_length:	
   976                           ; 1 bytes @ 0x8
   977                           
   978  0028                     LCDGotoXY@x:	
   979                           ; 1 bytes @ 0x8
   980                           
   981                           
   982                           ; 1 bytes @ 0x8
   983  0028                     	ds	1
   984  0029                     ??_LCDWriteInt:	
   985  0029                     compose@datalen:	
   986                           ; 1 bytes @ 0x9
   987                           
   988  0029                     LCDInit@__i:	
   989                           ; 1 bytes @ 0x9
   990                           
   991  0029                     LCDWriteString@msg:	
   992                           ; 1 bytes @ 0x9
   993                           
   994                           
   995                           ; 1 bytes @ 0x9
   996  0029                     	ds	1
   997  002A                     ??_ClearMenu:	
   998  002A                     ??_compose:	
   999                           ; 1 bytes @ 0xA
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0xA
  1003  002A                     	ds	1
  1004  002B                     ClearMenu@count:	
  1005  002B                     LCDWriteInt@str:	
  1006                           ; 1 bytes @ 0xB
  1007                           
  1008                           
  1009                           ; 5 bytes @ 0xB
  1010  002B                     	ds	1
  1011  002C                     ClearMenu@i:	
  1012  002C                     compose@len:	
  1013                           ; 1 bytes @ 0xC
  1014                           
  1015                           
  1016                           ; 2 bytes @ 0xC
  1017  002C                     	ds	2
  1018  002E                     compose@pmsg:	
  1019                           
  1020                           ; 1 bytes @ 0xE
  1021  002E                     	ds	2
  1022  0030                     LCDWriteInt@j:	
  1023                           
  1024                           ; 2 bytes @ 0x10
  1025  0030                     	ds	2
  1026  0032                     LCDWriteInt@i:	
  1027                           
  1028                           ; 2 bytes @ 0x12
  1029  0032                     	ds	2
  1030  0034                     ??_ShowMenu:	
  1031                           
  1032                           ; 1 bytes @ 0x14
  1033  0034                     	ds	4
  1034  0038                     ShowMenu@count:	
  1035                           
  1036                           ; 1 bytes @ 0x18
  1037  0038                     	ds	1
  1038  0039                     ShowMenu@i:	
  1039                           
  1040                           ; 1 bytes @ 0x19
  1041  0039                     	ds	1
  1042  003A                     ??_main:	
  1043                           
  1044                           ; 1 bytes @ 0x1A
  1045  003A                     	ds	6
  1046  0040                     main@sendc:	
  1047                           
  1048                           ; 1 bytes @ 0x20
  1049  0040                     	ds	1
  1050  0041                     main@revc:	
  1051                           
  1052                           ; 1 bytes @ 0x21
  1053  0041                     	ds	1
  1054  0042                     main@count:	
  1055                           
  1056                           ; 1 bytes @ 0x22
  1057  0042                     	ds	1
  1058  0043                     main@count_431:	
  1059                           
  1060                           ; 1 bytes @ 0x23
  1061  0043                     	ds	1
  1062  0044                     main@count_434:	
  1063                           
  1064                           ; 1 bytes @ 0x24
  1065  0044                     	ds	1
  1066  0045                     main@count_437:	
  1067                           
  1068                           ; 1 bytes @ 0x25
  1069  0045                     	ds	1
  1070  0046                     main@count_440:	
  1071                           
  1072                           ; 1 bytes @ 0x26
  1073  0046                     	ds	1
  1074  0047                     main@count_443:	
  1075                           
  1076                           ; 1 bytes @ 0x27
  1077  0047                     	ds	1
  1078  0048                     main@count_446:	
  1079                           
  1080                           ; 1 bytes @ 0x28
  1081  0048                     	ds	1
  1082  0049                     main@s:	
  1083                           
  1084                           ; 1 bytes @ 0x29
  1085  0049                     	ds	1
  1086  004A                     main@i_429:	
  1087                           
  1088                           ; 1 bytes @ 0x2A
  1089  004A                     	ds	1
  1090  004B                     main@i_433:	
  1091                           
  1092                           ; 1 bytes @ 0x2B
  1093  004B                     	ds	1
  1094  004C                     main@i_436:	
  1095                           
  1096                           ; 1 bytes @ 0x2C
  1097  004C                     	ds	1
  1098  004D                     main@i_439:	
  1099                           
  1100                           ; 1 bytes @ 0x2D
  1101  004D                     	ds	1
  1102  004E                     main@i_442:	
  1103                           
  1104                           ; 1 bytes @ 0x2E
  1105  004E                     	ds	1
  1106  004F                     main@i_445:	
  1107                           
  1108                           ; 1 bytes @ 0x2F
  1109  004F                     	ds	1
  1110  0050                     main@i_448:	
  1111                           
  1112                           ; 1 bytes @ 0x30
  1113  0050                     	ds	1
  1114  0051                     main@i:	
  1115                           
  1116                           ; 1 bytes @ 0x31
  1117  0051                     	ds	1
  1118  0052                     main@byte:	
  1119                           
  1120                           ; 1 bytes @ 0x32
  1121  0052                     	ds	1
  1122  0053                     main@byte_411:	
  1123                           
  1124                           ; 1 bytes @ 0x33
  1125  0053                     	ds	1
  1126                           
  1127                           	psect	maintext
  1128  0035                     __pmaintext:	
  1129 ;;
  1130 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1131 ;;
  1132 ;; *************** function _main *****************
  1133 ;; Defined at:
  1134 ;;		line 169 in file "do_am.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  byte            1   51[BANK0 ] PTR struct .
  1139 ;;		 -> msg(23), 
  1140 ;;  byte            1   50[BANK0 ] PTR struct .
  1141 ;;		 -> msg(23), 
  1142 ;;  i               1   46[BANK0 ] char 
  1143 ;;  i               1   45[BANK0 ] char 
  1144 ;;  count           1   38[BANK0 ] char 
  1145 ;;  count           1   37[BANK0 ] char 
  1146 ;;  i               1   44[BANK0 ] char 
  1147 ;;  i               1   43[BANK0 ] char 
  1148 ;;  i               1   48[BANK0 ] char 
  1149 ;;  i               1   47[BANK0 ] char 
  1150 ;;  count           1   36[BANK0 ] char 
  1151 ;;  count           1   35[BANK0 ] char 
  1152 ;;  count           1   40[BANK0 ] char 
  1153 ;;  count           1   39[BANK0 ] char 
  1154 ;;  i               1   42[BANK0 ] char 
  1155 ;;  i               1   49[BANK0 ] unsigned char 
  1156 ;;  count           1   34[BANK0 ] char 
  1157 ;;  s               1   41[BANK0 ] PTR unsigned char 
  1158 ;;		 -> msg(23), 
  1159 ;;  revc            1   33[BANK0 ] unsigned char 
  1160 ;;  sendc           1   32[BANK0 ] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : B00/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0      20       0       0       0
  1172 ;;      Temps:          0       6       0       0       0
  1173 ;;      Totals:         0      26       0       0       0
  1174 ;;Total ram usage:       26 bytes
  1175 ;; Hardware stack levels required when called:    5
  1176 ;; This function calls:
  1177 ;;		_ADCInit
  1178 ;;		_ClearMenu
  1179 ;;		_IOInit
  1180 ;;		_LCDByte
  1181 ;;		_LCDGotoXY
  1182 ;;		_LCDInit
  1183 ;;		_LCDSetStyle
  1184 ;;		_LCDWriteInt
  1185 ;;		_LCDWriteString
  1186 ;;		_MenuDown
  1187 ;;		_MenuInit
  1188 ;;		_MenuUp
  1189 ;;		_ShowMenu
  1190 ;;		_ValueDec
  1191 ;;		_ValueInc
  1192 ;;		_compose
  1193 ;; This function is called by:
  1194 ;;		Startup code after reset
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _main
  1200  0035                     _main:	
  1201                           
  1202                           ;do_am.c: 172: LCDInit(0B00000000);
  1203                           
  1204                           ;incstack = 0
  1205                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1206  0035  3000               	movlw	0
  1207  0036  120A  118A  24B0  120A  118A  	fcall	_LCDInit
  1208                           
  1209                           ;do_am.c: 175: ADCInit();
  1210  003B  120A  118A  27E7  120A  118A  	fcall	_ADCInit
  1211                           
  1212                           ;do_am.c: 178: IOInit();
  1213  0040  120A  118A  279B  120A  118A  	fcall	_IOInit
  1214                           
  1215                           ;do_am.c: 180: MenuInit();
  1216  0045  120A  158A  27C2  120A  118A  	fcall	_MenuInit
  1217                           
  1218                           ;do_am.c: 186: (LCDByte(0b00000001,0));
  1219  004A  01F9               	clrf	LCDByte@isdata
  1220  004B  3001               	movlw	1
  1221  004C  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  1222                           
  1223                           ;do_am.c: 188: compose(pmsg, 11, 22, 33, 44, "abc", 3);
  1224  0051  300B               	movlw	11
  1225  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0054  00BA               	movwf	??_main
  1228  0055  083A               	movf	??_main,w
  1229  0056  00A4               	movwf	compose@from
  1230  0057  3016               	movlw	22
  1231  0058  00BB               	movwf	??_main+1
  1232  0059  083B               	movf	??_main+1,w
  1233  005A  00A5               	movwf	compose@to
  1234  005B  3021               	movlw	33
  1235  005C  00BC               	movwf	??_main+2
  1236  005D  083C               	movf	??_main+2,w
  1237  005E  00A6               	movwf	compose@msgid
  1238  005F  302C               	movlw	44
  1239  0060  00BD               	movwf	??_main+3
  1240  0061  083D               	movf	??_main+3,w
  1241  0062  00A7               	movwf	compose@cmd
  1242  0063  3042               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1243  0064  00BE               	movwf	??_main+4
  1244  0065  083E               	movf	??_main+4,w
  1245  0066  00A8               	movwf	compose@data
  1246  0067  3003               	movlw	3
  1247  0068  00BF               	movwf	??_main+5
  1248  0069  083F               	movf	??_main+5,w
  1249  006A  00A9               	movwf	compose@datalen
  1250  006B  0862               	movf	_pmsg,w
  1251  006C  120A  118A  2676  120A  118A  	fcall	_compose
  1252                           
  1253                           ;do_am.c: 189: uint8_t sendc = 0x78;
  1254  0071  3078               	movlw	120
  1255  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0074  00BA               	movwf	??_main
  1258  0075  083A               	movf	??_main,w
  1259  0076  00C0               	movwf	main@sendc
  1260                           
  1261                           ;do_am.c: 190: uint8_t revc = 0;
  1262  0077  01C1               	clrf	main@revc
  1263  0078  2ADC               	goto	l1974
  1264  0079                     l1976:	
  1265                           
  1266                           ;do_am.c: 194: {
  1267                           ;do_am.c: 197: {uint8_t *s = (uint8_t *)pmsg; { for(uint8_t i = 0; i < pmsg->msglen; i++
      +                          ) { { { { BITbits_t *byte = (BITbits_t *)&s[i]; if(1 == 1) { RB0 = byte->B0; RB1 = byte-
      +                          >B1; RB2 = byte->B2; RB3 = byte->B3; } else { RB0 = byte->B4; RB1 = byte->B5; RB2 = byte
      +                          -
  1268  0079  0862               	movf	_pmsg,w
  1269  007A  00BA               	movwf	??_main
  1270  007B  083A               	movf	??_main,w
  1271  007C  00C9               	movwf	main@s
  1272  007D  01D1               	clrf	main@i
  1273  007E                     l2016:	
  1274  007E  0862               	movf	_pmsg,w
  1275  007F  0084               	movwf	4
  1276  0080  1383               	bcf	3,7	;select IRP bank0
  1277  0081  0800               	movf	0,w
  1278  0082  0251               	subwf	main@i,w
  1279  0083  1803               	btfsc	3,0
  1280  0084  291C               	goto	l2018
  1281  0085  0851               	movf	main@i,w
  1282  0086  0749               	addwf	main@s,w
  1283  0087  00BA               	movwf	??_main
  1284  0088  083A               	movf	??_main,w
  1285  0089  00D2               	movwf	main@byte
  1286  008A  0852               	movf	main@byte,w
  1287  008B  0084               	movwf	4
  1288  008C  1383               	bcf	3,7	;select IRP bank0
  1289  008D  1C00               	btfss	0,0
  1290  008E  2893               	goto	u1680
  1291  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1292  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1293  0091  1406               	bsf	6,0	;volatile
  1294  0092  2896               	goto	l1984
  1295  0093                     u1680:	
  1296  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0095  1006               	bcf	6,0	;volatile
  1299  0096                     l1984:	
  1300  0096  0852               	movf	main@byte,w
  1301  0097  0084               	movwf	4
  1302  0098  1383               	bcf	3,7	;select IRP bank0
  1303  0099  1C80               	btfss	0,1
  1304  009A  289F               	goto	u1700
  1305  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1306  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1307  009D  1486               	bsf	6,1	;volatile
  1308  009E  28A2               	goto	l1986
  1309  009F                     u1700:	
  1310  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1311  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1312  00A1  1086               	bcf	6,1	;volatile
  1313  00A2                     l1986:	
  1314  00A2  0852               	movf	main@byte,w
  1315  00A3  0084               	movwf	4
  1316  00A4  1383               	bcf	3,7	;select IRP bank0
  1317  00A5  1D00               	btfss	0,2
  1318  00A6  28AB               	goto	u1720
  1319  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1320  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1321  00A9  1506               	bsf	6,2	;volatile
  1322  00AA  28AE               	goto	l1988
  1323  00AB                     u1720:	
  1324  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1325  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1326  00AD  1106               	bcf	6,2	;volatile
  1327  00AE                     l1988:	
  1328  00AE  0852               	movf	main@byte,w
  1329  00AF  0084               	movwf	4
  1330  00B0  1383               	bcf	3,7	;select IRP bank0
  1331  00B1  1D80               	btfss	0,3
  1332  00B2  28B7               	goto	u1820
  1333  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1334  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1335  00B5  1586               	bsf	6,3	;volatile
  1336  00B6  28BA               	goto	l1992
  1337  00B7                     u1820:	
  1338  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1339  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1340  00B9  1186               	bcf	6,3	;volatile
  1341  00BA                     l1992:	
  1342  00BA  3080               	movlw	128
  1343  00BB  0685               	xorwf	5,f
  1344  00BC  28BD               	nop2	;2 cycle nop
  1345  00BD  28BE               	nop2	;2 cycle nop
  1346  00BE  0000               	nop
  1347  00BF  3080               	movlw	128
  1348  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1349  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1350  00C2  0685               	xorwf	5,f
  1351  00C3  3021               	movlw	33
  1352  00C4  00BB               	movwf	??_main+1
  1353  00C5  3076               	movlw	118
  1354  00C6  00BA               	movwf	??_main
  1355  00C7                     u2287:	
  1356  00C7  0BBA               	decfsz	??_main,f
  1357  00C8  28C7               	goto	u2287
  1358  00C9  0BBB               	decfsz	??_main+1,f
  1359  00CA  28C7               	goto	u2287
  1360  00CB  0000               	nop
  1361  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1362  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1363  00CE  0851               	movf	main@i,w
  1364  00CF  0749               	addwf	main@s,w
  1365  00D0  00BA               	movwf	??_main
  1366  00D1  083A               	movf	??_main,w
  1367  00D2  00D3               	movwf	main@byte_411
  1368  00D3  0853               	movf	main@byte_411,w
  1369  00D4  0084               	movwf	4
  1370  00D5  1383               	bcf	3,7	;select IRP bank0
  1371  00D6  1E00               	btfss	0,4
  1372  00D7  28DC               	goto	u1920
  1373  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1374  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1375  00DA  1406               	bsf	6,0	;volatile
  1376  00DB  28DF               	goto	u1934
  1377  00DC                     u1920:	
  1378  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1379  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1380  00DE  1006               	bcf	6,0	;volatile
  1381  00DF                     u1934:	
  1382  00DF  0853               	movf	main@byte_411,w
  1383  00E0  0084               	movwf	4
  1384  00E1  1383               	bcf	3,7	;select IRP bank0
  1385  00E2  1E80               	btfss	0,5
  1386  00E3  28E8               	goto	u1940
  1387  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1388  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1389  00E6  1486               	bsf	6,1	;volatile
  1390  00E7  28EB               	goto	u1954
  1391  00E8                     u1940:	
  1392  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1393  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1394  00EA  1086               	bcf	6,1	;volatile
  1395  00EB                     u1954:	
  1396  00EB  0853               	movf	main@byte_411,w
  1397  00EC  0084               	movwf	4
  1398  00ED  1383               	bcf	3,7	;select IRP bank0
  1399  00EE  1F00               	btfss	0,6
  1400  00EF  28F4               	goto	u1960
  1401  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1402  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1403  00F2  1506               	bsf	6,2	;volatile
  1404  00F3  28F7               	goto	u1974
  1405  00F4                     u1960:	
  1406  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1407  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1408  00F6  1106               	bcf	6,2	;volatile
  1409  00F7                     u1974:	
  1410  00F7  0853               	movf	main@byte_411,w
  1411  00F8  0084               	movwf	4
  1412  00F9  1383               	bcf	3,7	;select IRP bank0
  1413  00FA  1F80               	btfss	0,7
  1414  00FB  2900               	goto	u1980
  1415  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1416  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1417  00FE  1586               	bsf	6,3	;volatile
  1418  00FF  2903               	goto	l2006
  1419  0100                     u1980:	
  1420  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0102  1186               	bcf	6,3	;volatile
  1423  0103                     l2006:	
  1424  0103  3080               	movlw	128
  1425  0104  0685               	xorwf	5,f
  1426  0105  2906               	nop2	;2 cycle nop
  1427  0106  2907               	nop2	;2 cycle nop
  1428  0107  0000               	nop
  1429  0108  3080               	movlw	128
  1430  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1431  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1432  010B  0685               	xorwf	5,f
  1433  010C  3021               	movlw	33
  1434  010D  00BB               	movwf	??_main+1
  1435  010E  3076               	movlw	118
  1436  010F  00BA               	movwf	??_main
  1437  0110                     u2297:	
  1438  0110  0BBA               	decfsz	??_main,f
  1439  0111  2910               	goto	u2297
  1440  0112  0BBB               	decfsz	??_main+1,f
  1441  0113  2910               	goto	u2297
  1442  0114  0000               	nop
  1443  0115  3001               	movlw	1
  1444  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0118  00BA               	movwf	??_main
  1447  0119  083A               	movf	??_main,w
  1448  011A  07D1               	addwf	main@i,f
  1449  011B  287E               	goto	l2016
  1450  011C                     l2018:	
  1451                           
  1452                           ;do_am.c: 198: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString(""); for(int8_t i = coun
      +                          t + 0; i < 16; i++) { (LCDByte(' ',1)); } };}; {{ LCDGotoXY(0,1); LCDWriteString("SND:")
      +                          ;};}; {LCDWriteInt(pmsg->crc, 3);};
  1453  011C  01A6               	clrf	LCDGotoXY@y
  1454  011D  0AA6               	incf	LCDGotoXY@y,f
  1455  011E  3000               	movlw	0
  1456  011F  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  1457  0124  3028               	movlw	(low (((STR_10+4)-__stringbase)| (0+32768)))& (0+255)
  1458  0125  120A  118A  256F  120A  118A  	fcall	_LCDWriteString
  1459  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1460  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1461  012C  00BA               	movwf	??_main
  1462  012D  083A               	movf	??_main,w
  1463  012E  00C2               	movwf	main@count
  1464  012F  0842               	movf	main@count,w
  1465  0130  00BA               	movwf	??_main
  1466  0131  083A               	movf	??_main,w
  1467  0132  00CA               	movwf	main@i_429
  1468  0133  084A               	movf	main@i_429,w
  1469  0134  3A80               	xorlw	128
  1470  0135  3E70               	addlw	-144
  1471  0136  1803               	btfsc	3,0
  1472  0137  294B               	goto	l2032
  1473  0138                     l2026:	
  1474  0138  01F9               	clrf	LCDByte@isdata
  1475  0139  0AF9               	incf	LCDByte@isdata,f
  1476  013A  3020               	movlw	32
  1477  013B  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  1478  0140  3001               	movlw	1
  1479  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0143  00BA               	movwf	??_main
  1482  0144  083A               	movf	??_main,w
  1483  0145  07CA               	addwf	main@i_429,f
  1484  0146  084A               	movf	main@i_429,w
  1485  0147  3A80               	xorlw	128
  1486  0148  3E70               	addlw	-144
  1487  0149  1C03               	skipc
  1488  014A  2938               	goto	l2026
  1489  014B                     l2032:	
  1490  014B  01A6               	clrf	LCDGotoXY@y
  1491  014C  0AA6               	incf	LCDGotoXY@y,f
  1492  014D  3000               	movlw	0
  1493  014E  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  1494  0153  3038               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1495  0154  120A  118A  256F  120A  118A  	fcall	_LCDWriteString
  1496  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1497  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1498  015B  0A62               	incf	_pmsg,w
  1499  015C  0084               	movwf	4
  1500  015D  1383               	bcf	3,7	;select IRP bank0
  1501  015E  0800               	movf	0,w
  1502  015F  00A6               	movwf	LCDWriteInt@val
  1503  0160  0A84               	incf	4,f
  1504  0161  0800               	movf	0,w
  1505  0162  00A7               	movwf	LCDWriteInt@val+1
  1506  0163  3003               	movlw	3
  1507  0164  00BA               	movwf	??_main
  1508  0165  083A               	movf	??_main,w
  1509  0166  00A8               	movwf	LCDWriteInt@field_length
  1510  0167  120A  118A  233D  120A  118A  	fcall	_LCDWriteInt
  1511                           
  1512                           ;do_am.c: 201: _delay((unsigned long)((200)*(20000000/4000.0)));
  1513  016C  3006               	movlw	6
  1514  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1515  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1516  016F  00BC               	movwf	??_main+2
  1517  0170  3013               	movlw	19
  1518  0171  00BB               	movwf	??_main+1
  1519  0172  30B1               	movlw	177
  1520  0173  00BA               	movwf	??_main
  1521  0174                     u2307:	
  1522  0174  0BBA               	decfsz	??_main,f
  1523  0175  2974               	goto	u2307
  1524  0176  0BBB               	decfsz	??_main+1,f
  1525  0177  2974               	goto	u2307
  1526  0178  0BBC               	decfsz	??_main+2,f
  1527  0179  2974               	goto	u2307
  1528  017A  297B               	nop2
  1529                           
  1530                           ;do_am.c: 202: }
  1531  017B  2ADC               	goto	l1974
  1532  017C                     l2038:	
  1533                           
  1534                           ;do_am.c: 205: {
  1535                           ;do_am.c: 206: if(mode == NORMAL)
  1536  017C  0361               	decf	_mode,w
  1537  017D  1D03               	btfss	3,2
  1538  017E  29B5               	goto	l2058
  1539                           
  1540                           ;do_am.c: 207: {
  1541                           ;do_am.c: 208: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("MENU MODE"); for(int8_
      +                          t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1542  017F  01A6               	clrf	LCDGotoXY@y
  1543  0180  0AA6               	incf	LCDGotoXY@y,f
  1544  0181  3000               	movlw	0
  1545  0182  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  1546  0187  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1547  0188  120A  118A  256F  120A  118A  	fcall	_LCDWriteString
  1548  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1549  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1550  018F  00BA               	movwf	??_main
  1551  0190  083A               	movf	??_main,w
  1552  0191  00C3               	movwf	main@count_431
  1553  0192  0843               	movf	main@count_431,w
  1554  0193  00BA               	movwf	??_main
  1555  0194  083A               	movf	??_main,w
  1556  0195  00CB               	movwf	main@i_433
  1557  0196  084B               	movf	main@i_433,w
  1558  0197  3A80               	xorlw	128
  1559  0198  3E70               	addlw	-144
  1560  0199  1803               	btfsc	3,0
  1561  019A  29AE               	goto	l2054
  1562  019B                     l2048:	
  1563  019B  01F9               	clrf	LCDByte@isdata
  1564  019C  0AF9               	incf	LCDByte@isdata,f
  1565  019D  3020               	movlw	32
  1566  019E  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  1567  01A3  3001               	movlw	1
  1568  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1569  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1570  01A6  00BA               	movwf	??_main
  1571  01A7  083A               	movf	??_main,w
  1572  01A8  07CB               	addwf	main@i_433,f
  1573  01A9  084B               	movf	main@i_433,w
  1574  01AA  3A80               	xorlw	128
  1575  01AB  3E70               	addlw	-144
  1576  01AC  1C03               	skipc
  1577  01AD  299B               	goto	l2048
  1578  01AE                     l2054:	
  1579                           
  1580                           ;do_am.c: 209: mode = MENU;
  1581  01AE  01E1               	clrf	_mode
  1582                           
  1583                           ;do_am.c: 210: ShowMenu();
  1584  01AF  120A  118A  2621  120A  118A  	fcall	_ShowMenu
  1585                           
  1586                           ;do_am.c: 211: }
  1587  01B4  29F2               	goto	l2078
  1588  01B5                     l2058:	
  1589                           
  1590                           ;do_am.c: 212: else
  1591                           ;do_am.c: 213: {
  1592                           ;do_am.c: 214: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("EDIT MODE"); for(int8_
      +                          t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1593  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1594  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1595  01B7  01A6               	clrf	LCDGotoXY@y
  1596  01B8  0AA6               	incf	LCDGotoXY@y,f
  1597  01B9  3000               	movlw	0
  1598  01BA  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  1599  01BF  3004               	movlw	(low (((STR_6+3)-__stringbase)| (0+32768)))& (0+255)
  1600  01C0  120A  118A  256F  120A  118A  	fcall	_LCDWriteString
  1601  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1602  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1603  01C7  00BA               	movwf	??_main
  1604  01C8  083A               	movf	??_main,w
  1605  01C9  00C4               	movwf	main@count_434
  1606  01CA  0844               	movf	main@count_434,w
  1607  01CB  00BA               	movwf	??_main
  1608  01CC  083A               	movf	??_main,w
  1609  01CD  00CC               	movwf	main@i_436
  1610  01CE  084C               	movf	main@i_436,w
  1611  01CF  3A80               	xorlw	128
  1612  01D0  3E70               	addlw	-144
  1613  01D1  1803               	btfsc	3,0
  1614  01D2  29E6               	goto	l2072
  1615  01D3                     l2066:	
  1616  01D3  01F9               	clrf	LCDByte@isdata
  1617  01D4  0AF9               	incf	LCDByte@isdata,f
  1618  01D5  3020               	movlw	32
  1619  01D6  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  1620  01DB  3001               	movlw	1
  1621  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1622  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1623  01DE  00BA               	movwf	??_main
  1624  01DF  083A               	movf	??_main,w
  1625  01E0  07CC               	addwf	main@i_436,f
  1626  01E1  084C               	movf	main@i_436,w
  1627  01E2  3A80               	xorlw	128
  1628  01E3  3E70               	addlw	-144
  1629  01E4  1C03               	skipc
  1630  01E5  29D3               	goto	l2066
  1631  01E6                     l2072:	
  1632                           
  1633                           ;do_am.c: 215: submode = EDIT;
  1634  01E6  01E3               	clrf	_submode
  1635                           
  1636                           ;do_am.c: 216: ShowMenu();
  1637  01E7  120A  118A  2621  120A  118A  	fcall	_ShowMenu
  1638                           
  1639                           ;do_am.c: 217: LCDSetStyle(0B00000001);
  1640  01EC  3001               	movlw	1
  1641  01ED  120A  158A  26AF  120A  118A  	fcall	_LCDSetStyle
  1642  01F2                     l2078:	
  1643                           
  1644                           ;do_am.c: 218: }
  1645                           ;do_am.c: 220: _delay((unsigned long)((200)*(20000000/4000.0)));
  1646  01F2  3006               	movlw	6
  1647  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1648  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1649  01F5  00BC               	movwf	??_main+2
  1650  01F6  3013               	movlw	19
  1651  01F7  00BB               	movwf	??_main+1
  1652  01F8  30B1               	movlw	177
  1653  01F9  00BA               	movwf	??_main
  1654  01FA                     u2317:	
  1655  01FA  0BBA               	decfsz	??_main,f
  1656  01FB  29FA               	goto	u2317
  1657  01FC  0BBB               	decfsz	??_main+1,f
  1658  01FD  29FA               	goto	u2317
  1659  01FE  0BBC               	decfsz	??_main+2,f
  1660  01FF  29FA               	goto	u2317
  1661  0200  2A01               	nop2
  1662                           
  1663                           ;do_am.c: 221: }
  1664  0201  2ADC               	goto	l1974
  1665  0202                     l2080:	
  1666                           
  1667                           ;do_am.c: 224: {
  1668                           ;do_am.c: 225: if(mode == MENU)
  1669  0202  0861               	movf	_mode,w
  1670  0203  1D03               	btfss	3,2
  1671  0204  2A78               	goto	l2116
  1672                           
  1673                           ;do_am.c: 226: {
  1674                           ;do_am.c: 227: if(submode == EDIT)
  1675  0205  0863               	movf	_submode,w
  1676  0206  1D03               	btfss	3,2
  1677  0207  2A40               	goto	l2100
  1678                           
  1679                           ;do_am.c: 228: {
  1680                           ;do_am.c: 229: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("NOTEDIT MODE"); for(in
      +                          t8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1681  0208  01A6               	clrf	LCDGotoXY@y
  1682  0209  0AA6               	incf	LCDGotoXY@y,f
  1683  020A  3000               	movlw	0
  1684  020B  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  1685  0210  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1686  0211  120A  118A  256F  120A  118A  	fcall	_LCDWriteString
  1687  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1688  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0218  00BA               	movwf	??_main
  1690  0219  083A               	movf	??_main,w
  1691  021A  00C5               	movwf	main@count_437
  1692  021B  0845               	movf	main@count_437,w
  1693  021C  00BA               	movwf	??_main
  1694  021D  083A               	movf	??_main,w
  1695  021E  00CD               	movwf	main@i_439
  1696  021F  084D               	movf	main@i_439,w
  1697  0220  3A80               	xorlw	128
  1698  0221  3E70               	addlw	-144
  1699  0222  1803               	btfsc	3,0
  1700  0223  2A37               	goto	l136
  1701  0224                     l2092:	
  1702  0224  01F9               	clrf	LCDByte@isdata
  1703  0225  0AF9               	incf	LCDByte@isdata,f
  1704  0226  3020               	movlw	32
  1705  0227  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  1706  022C  3001               	movlw	1
  1707  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1708  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1709  022F  00BA               	movwf	??_main
  1710  0230  083A               	movf	??_main,w
  1711  0231  07CD               	addwf	main@i_439,f
  1712  0232  084D               	movf	main@i_439,w
  1713  0233  3A80               	xorlw	128
  1714  0234  3E70               	addlw	-144
  1715  0235  1C03               	skipc
  1716  0236  2A24               	goto	l2092
  1717  0237                     l136:	
  1718                           
  1719                           ;do_am.c: 230: submode = NOTEDIT;
  1720  0237  01E3               	clrf	_submode
  1721  0238  0AE3               	incf	_submode,f
  1722                           
  1723                           ;do_am.c: 231: LCDSetStyle(0B00000000);
  1724  0239  3000               	movlw	0
  1725  023A  120A  158A  26AF  120A  118A  	fcall	_LCDSetStyle
  1726                           
  1727                           ;do_am.c: 232: }
  1728  023F  2A78               	goto	l2116
  1729  0240                     l2100:	
  1730                           
  1731                           ;do_am.c: 233: else
  1732                           ;do_am.c: 234: {
  1733                           ;do_am.c: 235: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("NORMAL MODE"); for(int
      +                          8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1734  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0242  01A6               	clrf	LCDGotoXY@y
  1737  0243  0AA6               	incf	LCDGotoXY@y,f
  1738  0244  3000               	movlw	0
  1739  0245  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  1740  024A  300E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1741  024B  120A  118A  256F  120A  118A  	fcall	_LCDWriteString
  1742  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1743  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1744  0252  00BA               	movwf	??_main
  1745  0253  083A               	movf	??_main,w
  1746  0254  00C6               	movwf	main@count_440
  1747  0255  0846               	movf	main@count_440,w
  1748  0256  00BA               	movwf	??_main
  1749  0257  083A               	movf	??_main,w
  1750  0258  00CE               	movwf	main@i_442
  1751  0259  084E               	movf	main@i_442,w
  1752  025A  3A80               	xorlw	128
  1753  025B  3E70               	addlw	-144
  1754  025C  1803               	btfsc	3,0
  1755  025D  2A71               	goto	l139
  1756  025E                     l2108:	
  1757  025E  01F9               	clrf	LCDByte@isdata
  1758  025F  0AF9               	incf	LCDByte@isdata,f
  1759  0260  3020               	movlw	32
  1760  0261  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  1761  0266  3001               	movlw	1
  1762  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0269  00BA               	movwf	??_main
  1765  026A  083A               	movf	??_main,w
  1766  026B  07CE               	addwf	main@i_442,f
  1767  026C  084E               	movf	main@i_442,w
  1768  026D  3A80               	xorlw	128
  1769  026E  3E70               	addlw	-144
  1770  026F  1C03               	skipc
  1771  0270  2A5E               	goto	l2108
  1772  0271                     l139:	
  1773                           
  1774                           ;do_am.c: 236: mode = NORMAL;
  1775  0271  01E1               	clrf	_mode
  1776  0272  0AE1               	incf	_mode,f
  1777                           
  1778                           ;do_am.c: 237: ClearMenu();
  1779  0273  120A  158A  2796  120A  118A  	fcall	_ClearMenu
  1780  0278                     l2116:	
  1781                           
  1782                           ;do_am.c: 238: }
  1783                           ;do_am.c: 239: }
  1784                           ;do_am.c: 241: _delay((unsigned long)((200)*(20000000/4000.0)));
  1785  0278  3006               	movlw	6
  1786  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1787  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1788  027B  00BC               	movwf	??_main+2
  1789  027C  3013               	movlw	19
  1790  027D  00BB               	movwf	??_main+1
  1791  027E  30B1               	movlw	177
  1792  027F  00BA               	movwf	??_main
  1793  0280                     u2327:	
  1794  0280  0BBA               	decfsz	??_main,f
  1795  0281  2A80               	goto	u2327
  1796  0282  0BBB               	decfsz	??_main+1,f
  1797  0283  2A80               	goto	u2327
  1798  0284  0BBC               	decfsz	??_main+2,f
  1799  0285  2A80               	goto	u2327
  1800  0286  2A87               	nop2
  1801                           
  1802                           ;do_am.c: 242: }
  1803  0287  2ADC               	goto	l1974
  1804  0288                     l2118:	
  1805                           
  1806                           ;do_am.c: 245: {
  1807                           ;do_am.c: 246: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("UP"); for(int8_t i = c
      +                          ount + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1808  0288  01A6               	clrf	LCDGotoXY@y
  1809  0289  0AA6               	incf	LCDGotoXY@y,f
  1810  028A  3000               	movlw	0
  1811  028B  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  1812  0290  3046               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1813  0291  120A  118A  256F  120A  118A  	fcall	_LCDWriteString
  1814  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1815  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1816  0298  00BA               	movwf	??_main
  1817  0299  083A               	movf	??_main,w
  1818  029A  00C7               	movwf	main@count_443
  1819  029B  0847               	movf	main@count_443,w
  1820  029C  00BA               	movwf	??_main
  1821  029D  083A               	movf	??_main,w
  1822  029E  00CF               	movwf	main@i_445
  1823  029F  084F               	movf	main@i_445,w
  1824  02A0  3A80               	xorlw	128
  1825  02A1  3E70               	addlw	-144
  1826  02A2  1803               	btfsc	3,0
  1827  02A3  2AB7               	goto	l2132
  1828  02A4                     l2126:	
  1829  02A4  01F9               	clrf	LCDByte@isdata
  1830  02A5  0AF9               	incf	LCDByte@isdata,f
  1831  02A6  3020               	movlw	32
  1832  02A7  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  1833  02AC  3001               	movlw	1
  1834  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1835  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1836  02AF  00BA               	movwf	??_main
  1837  02B0  083A               	movf	??_main,w
  1838  02B1  07CF               	addwf	main@i_445,f
  1839  02B2  084F               	movf	main@i_445,w
  1840  02B3  3A80               	xorlw	128
  1841  02B4  3E70               	addlw	-144
  1842  02B5  1C03               	skipc
  1843  02B6  2AA4               	goto	l2126
  1844  02B7                     l2132:	
  1845                           
  1846                           ;do_am.c: 247: if(mode == MENU)
  1847  02B7  0861               	movf	_mode,w
  1848  02B8  1D03               	btfss	3,2
  1849  02B9  2ACD               	goto	l2142
  1850                           
  1851                           ;do_am.c: 248: {
  1852                           ;do_am.c: 249: if(submode == EDIT)
  1853  02BA  0863               	movf	_submode,w
  1854  02BB  1D03               	btfss	3,2
  1855  02BC  2AC3               	goto	l2138
  1856                           
  1857                           ;do_am.c: 250: {
  1858                           ;do_am.c: 251: ValueInc();
  1859  02BD  120A  158A  270D  120A  118A  	fcall	_ValueInc
  1860                           
  1861                           ;do_am.c: 252: }
  1862  02C2  2AC8               	goto	l2140
  1863  02C3                     l2138:	
  1864                           
  1865                           ;do_am.c: 253: else
  1866                           ;do_am.c: 254: {
  1867                           ;do_am.c: 255: MenuUp();
  1868  02C3  120A  158A  26D1  120A  118A  	fcall	_MenuUp
  1869  02C8                     l2140:	
  1870                           
  1871                           ;do_am.c: 256: }
  1872                           ;do_am.c: 257: ShowMenu();
  1873  02C8  120A  118A  2621  120A  118A  	fcall	_ShowMenu
  1874  02CD                     l2142:	
  1875                           
  1876                           ;do_am.c: 258: }
  1877                           ;do_am.c: 259: _delay((unsigned long)((200)*(20000000/4000.0)));
  1878  02CD  3006               	movlw	6
  1879  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1880  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1881  02D0  00BC               	movwf	??_main+2
  1882  02D1  3013               	movlw	19
  1883  02D2  00BB               	movwf	??_main+1
  1884  02D3  30B1               	movlw	177
  1885  02D4  00BA               	movwf	??_main
  1886  02D5                     u2337:	
  1887  02D5  0BBA               	decfsz	??_main,f
  1888  02D6  2AD5               	goto	u2337
  1889  02D7  0BBB               	decfsz	??_main+1,f
  1890  02D8  2AD5               	goto	u2337
  1891  02D9  0BBC               	decfsz	??_main+2,f
  1892  02DA  2AD5               	goto	u2337
  1893  02DB  2ADC               	nop2
  1894  02DC                     l1974:	
  1895                           ;do_am.c: 191: while(1)
  1896                           
  1897                           ;do_am.c: 260: }
  1898                           
  1899                           
  1900                           ;do_am.c: 192: {
  1901                           ;do_am.c: 193: if(RA5 == 0)
  1902  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1903  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1904  02DE  1E85               	btfss	5,5	;volatile
  1905  02DF  2879               	goto	l1976
  1906                           
  1907                           ;do_am.c: 203: else
  1908                           ;do_am.c: 204: if(RB4 == 0)
  1909  02E0  1E06               	btfss	6,4	;volatile
  1910  02E1  297C               	goto	l2038
  1911                           
  1912                           ;do_am.c: 222: else
  1913                           ;do_am.c: 223: if(RB6 == 0)
  1914  02E2  1F06               	btfss	6,6	;volatile
  1915  02E3  2A02               	goto	l2080
  1916                           
  1917                           ;do_am.c: 243: else
  1918                           ;do_am.c: 244: if(RB5 == 0)
  1919  02E4  1E86               	btfss	6,5	;volatile
  1920  02E5  2A88               	goto	l2118
  1921                           
  1922                           ;do_am.c: 261: else
  1923                           ;do_am.c: 262: if(RB7 == 0)
  1924  02E6  1B86               	btfsc	6,7	;volatile
  1925  02E7  2ADC               	goto	l1974
  1926                           
  1927                           ;do_am.c: 263: {
  1928                           ;do_am.c: 264: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("DOWN"); for(int8_t i =
      +                           count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1929  02E8  01A6               	clrf	LCDGotoXY@y
  1930  02E9  0AA6               	incf	LCDGotoXY@y,f
  1931  02EA  3000               	movlw	0
  1932  02EB  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  1933  02F0  303D               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1934  02F1  120A  118A  256F  120A  118A  	fcall	_LCDWriteString
  1935  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1936  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1937  02F8  00BA               	movwf	??_main
  1938  02F9  083A               	movf	??_main,w
  1939  02FA  00C8               	movwf	main@count_446
  1940  02FB  0848               	movf	main@count_446,w
  1941  02FC  00BA               	movwf	??_main
  1942  02FD  083A               	movf	??_main,w
  1943  02FE  00D0               	movwf	main@i_448
  1944  02FF  0850               	movf	main@i_448,w
  1945  0300  3A80               	xorlw	128
  1946  0301  3E70               	addlw	-144
  1947  0302  1803               	btfsc	3,0
  1948  0303  2B17               	goto	l2158
  1949  0304                     l2152:	
  1950  0304  01F9               	clrf	LCDByte@isdata
  1951  0305  0AF9               	incf	LCDByte@isdata,f
  1952  0306  3020               	movlw	32
  1953  0307  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  1954  030C  3001               	movlw	1
  1955  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1956  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1957  030F  00BA               	movwf	??_main
  1958  0310  083A               	movf	??_main,w
  1959  0311  07D0               	addwf	main@i_448,f
  1960  0312  0850               	movf	main@i_448,w
  1961  0313  3A80               	xorlw	128
  1962  0314  3E70               	addlw	-144
  1963  0315  1C03               	skipc
  1964  0316  2B04               	goto	l2152
  1965  0317                     l2158:	
  1966                           
  1967                           ;do_am.c: 265: if(mode == MENU)
  1968  0317  0861               	movf	_mode,w
  1969  0318  1D03               	btfss	3,2
  1970  0319  2B2D               	goto	l2168
  1971                           
  1972                           ;do_am.c: 266: {
  1973                           ;do_am.c: 267: if(submode == EDIT)
  1974  031A  0863               	movf	_submode,w
  1975  031B  1D03               	btfss	3,2
  1976  031C  2B23               	goto	l2164
  1977                           
  1978                           ;do_am.c: 268: {
  1979                           ;do_am.c: 269: ValueDec();
  1980  031D  120A  118A  26F1  120A  118A  	fcall	_ValueDec
  1981                           
  1982                           ;do_am.c: 270: }
  1983  0322  2B28               	goto	l2166
  1984  0323                     l2164:	
  1985                           
  1986                           ;do_am.c: 271: else
  1987                           ;do_am.c: 272: {
  1988                           ;do_am.c: 273: MenuDown();
  1989  0323  120A  158A  26C4  120A  118A  	fcall	_MenuDown
  1990  0328                     l2166:	
  1991                           
  1992                           ;do_am.c: 274: }
  1993                           ;do_am.c: 275: ShowMenu();
  1994  0328  120A  118A  2621  120A  118A  	fcall	_ShowMenu
  1995  032D                     l2168:	
  1996                           
  1997                           ;do_am.c: 276: }
  1998                           ;do_am.c: 277: _delay((unsigned long)((200)*(20000000/4000.0)));
  1999  032D  3006               	movlw	6
  2000  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2001  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0330  00BC               	movwf	??_main+2
  2003  0331  3013               	movlw	19
  2004  0332  00BB               	movwf	??_main+1
  2005  0333  30B1               	movlw	177
  2006  0334  00BA               	movwf	??_main
  2007  0335                     u2347:	
  2008  0335  0BBA               	decfsz	??_main,f
  2009  0336  2B35               	goto	u2347
  2010  0337  0BBB               	decfsz	??_main+1,f
  2011  0338  2B35               	goto	u2347
  2012  0339  0BBC               	decfsz	??_main+2,f
  2013  033A  2B35               	goto	u2347
  2014  033B  2B3C               	nop2
  2015  033C  2ADC               	goto	l1974
  2016  033D                     __end_of_main:	
  2017                           
  2018                           	psect	text1
  2019  0676                     __ptext1:	
  2020 ;; *************** function _compose *****************
  2021 ;; Defined at:
  2022 ;;		line 60 in file "msg.h"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  pmsg            1    wreg     PTR struct .
  2025 ;;		 -> msg(23), 
  2026 ;;  from            1    4[BANK0 ] unsigned char 
  2027 ;;  to              1    5[BANK0 ] unsigned char 
  2028 ;;  msgid           1    6[BANK0 ] unsigned char 
  2029 ;;  cmd             1    7[BANK0 ] unsigned char 
  2030 ;;  data            1    8[BANK0 ] PTR unsigned char 
  2031 ;;		 -> STR_1(4), 
  2032 ;;  datalen         1    9[BANK0 ] unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  pmsg            1   14[BANK0 ] PTR struct .
  2035 ;;		 -> msg(23), 
  2036 ;;  len             2   12[BANK0 ] unsigned int 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       6       0       0       0
  2047 ;;      Locals:         0       3       0       0       0
  2048 ;;      Temps:          0       2       0       0       0
  2049 ;;      Totals:         0      11       0       0       0
  2050 ;;Total ram usage:       11 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    3
  2053 ;; This function calls:
  2054 ;;		_crc_calculate
  2055 ;;		_memcpy
  2056 ;; This function is called by:
  2057 ;;		_main
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           
  2062                           ;psect for function _compose
  2063  0676                     _compose:	
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _compose: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2067                           ;compose@pmsg stored from wreg
  2068  0676  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0677  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0678  00AE               	movwf	compose@pmsg
  2071                           
  2072                           ;msg.h: 68: register size_t len = datalen;
  2073  0679  0829               	movf	compose@datalen,w
  2074  067A  00AA               	movwf	??_compose
  2075  067B  01AB               	clrf	??_compose+1
  2076  067C  082A               	movf	??_compose,w
  2077  067D  00AC               	movwf	compose@len
  2078  067E  082B               	movf	??_compose+1,w
  2079  067F  00AD               	movwf	compose@len+1
  2080                           
  2081                           ;msg.h: 69: pmsg->from = from;
  2082  0680  0824               	movf	compose@from,w
  2083  0681  00AA               	movwf	??_compose
  2084  0682  082E               	movf	compose@pmsg,w
  2085  0683  3E03               	addlw	3
  2086  0684  0084               	movwf	4
  2087  0685  082A               	movf	??_compose,w
  2088  0686  1383               	bcf	3,7	;select IRP bank0
  2089  0687  0080               	movwf	0
  2090                           
  2091                           ;msg.h: 70: pmsg->to = to;
  2092  0688  0825               	movf	compose@to,w
  2093  0689  00AA               	movwf	??_compose
  2094  068A  082E               	movf	compose@pmsg,w
  2095  068B  3E04               	addlw	4
  2096  068C  0084               	movwf	4
  2097  068D  082A               	movf	??_compose,w
  2098  068E  0080               	movwf	0
  2099                           
  2100                           ;msg.h: 71: pmsg->msgid = msgid;
  2101  068F  0826               	movf	compose@msgid,w
  2102  0690  00AA               	movwf	??_compose
  2103  0691  082E               	movf	compose@pmsg,w
  2104  0692  3E05               	addlw	5
  2105  0693  0084               	movwf	4
  2106  0694  082A               	movf	??_compose,w
  2107  0695  0080               	movwf	0
  2108                           
  2109                           ;msg.h: 72: pmsg->cmd = cmd;
  2110  0696  0827               	movf	compose@cmd,w
  2111  0697  00AA               	movwf	??_compose
  2112  0698  082E               	movf	compose@pmsg,w
  2113  0699  3E06               	addlw	6
  2114  069A  0084               	movwf	4
  2115  069B  082A               	movf	??_compose,w
  2116  069C  0080               	movwf	0
  2117                           
  2118                           ;msg.h: 73: memcpy((void *)pmsg->data, (void *)data, len);
  2119  069D  0828               	movf	compose@data,w
  2120  069E  00AA               	movwf	??_compose
  2121  069F  082A               	movf	??_compose,w
  2122  06A0  00F4               	movwf	memcpy@s1
  2123  06A1  082D               	movf	compose@len+1,w
  2124  06A2  00F6               	movwf	memcpy@n+1
  2125  06A3  082C               	movf	compose@len,w
  2126  06A4  00F5               	movwf	memcpy@n
  2127  06A5  082E               	movf	compose@pmsg,w
  2128  06A6  3E07               	addlw	7
  2129  06A7  120A  118A  26C5  120A  118A  	fcall	_memcpy
  2130                           
  2131                           ;msg.h: 74: pmsg->msglen = datalen + 7;
  2132  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  2133  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  2134  06AE  0829               	movf	compose@datalen,w
  2135  06AF  3E07               	addlw	7
  2136  06B0  00AA               	movwf	??_compose
  2137  06B1  082E               	movf	compose@pmsg,w
  2138  06B2  0084               	movwf	4
  2139  06B3  082A               	movf	??_compose,w
  2140  06B4  1383               	bcf	3,7	;select IRP bank0
  2141  06B5  0080               	movwf	0
  2142                           
  2143                           ;msg.h: 76: pmsg->crc = crc_calculate(pmsg);
  2144  06B6  082E               	movf	compose@pmsg,w
  2145  06B7  120A  118A  23DC   	fcall	_crc_calculate
  2146  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  2147  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  2148  06BC  0A2E               	incf	compose@pmsg,w
  2149  06BD  0084               	movwf	4
  2150  06BE  0874               	movf	?_crc_calculate,w
  2151  06BF  1383               	bcf	3,7	;select IRP bank0
  2152  06C0  0080               	movwf	0
  2153  06C1  0A84               	incf	4,f
  2154  06C2  0875               	movf	?_crc_calculate+1,w
  2155  06C3  0080               	movwf	0
  2156  06C4  0008               	return
  2157  06C5                     __end_of_compose:	
  2158                           
  2159                           	psect	text2
  2160  06C5                     __ptext2:	
  2161 ;; *************** function _memcpy *****************
  2162 ;; Defined at:
  2163 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memcpy.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  d1              1    wreg     PTR void 
  2166 ;;		 -> msg(23), 
  2167 ;;  s1              1    4[COMMON] PTR const void 
  2168 ;;		 -> STR_1(4), 
  2169 ;;  n               2    5[COMMON] unsigned int 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  d1              1    0[BANK0 ] PTR void 
  2172 ;;		 -> msg(23), 
  2173 ;;  s               1    2[BANK0 ] PTR const unsigned char 
  2174 ;;		 -> STR_1(4), 
  2175 ;;  d               1    1[BANK0 ] PTR unsigned char 
  2176 ;;		 -> msg(23), 
  2177 ;; Return value:  Size  Location     Type
  2178 ;;                  1    wreg      PTR void 
  2179 ;; Registers used:
  2180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2186 ;;      Params:         3       0       0       0       0
  2187 ;;      Locals:         0       3       0       0       0
  2188 ;;      Temps:          1       0       0       0       0
  2189 ;;      Totals:         4       3       0       0       0
  2190 ;;Total ram usage:        7 bytes
  2191 ;; Hardware stack levels used:    2
  2192 ;; Hardware stack levels required when called:    1
  2193 ;; This function calls:
  2194 ;;		Nothing
  2195 ;; This function is called by:
  2196 ;;		_compose
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _memcpy
  2202  06C5                     _memcpy:	
  2203                           
  2204                           ;incstack = 0
  2205                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0+pclath]
  2206                           ;memcpy@d1 stored from wreg
  2207  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2208  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  2209  06C7  00A0               	movwf	memcpy@d1
  2210  06C8  0874               	movf	memcpy@s1,w
  2211  06C9  00F7               	movwf	??_memcpy
  2212  06CA  0877               	movf	??_memcpy,w
  2213  06CB  00A2               	movwf	memcpy@s
  2214  06CC  0820               	movf	memcpy@d1,w
  2215  06CD  00F7               	movwf	??_memcpy
  2216  06CE  0877               	movf	??_memcpy,w
  2217  06CF  00A1               	movwf	memcpy@d
  2218  06D0                     l1710:	
  2219  06D0  3001               	movlw	1
  2220  06D1  02F5               	subwf	memcpy@n,f
  2221  06D2  3000               	movlw	0
  2222  06D3  1C03               	skipc
  2223  06D4  03F6               	decf	memcpy@n+1,f
  2224  06D5  02F6               	subwf	memcpy@n+1,f
  2225  06D6  0A75               	incf	memcpy@n,w
  2226  06D7  1903               	btfsc	3,2
  2227  06D8  0A76               	incf	memcpy@n+1,w
  2228  06D9  1903               	btfsc	3,2
  2229  06DA  0008               	return
  2230  06DB  0822               	movf	memcpy@s,w
  2231  06DC  0084               	movwf	4
  2232  06DD  120A  118A  2700  120A  118A  	fcall	stringdir
  2233  06E2  00F7               	movwf	??_memcpy
  2234  06E3  0821               	movf	memcpy@d,w
  2235  06E4  0084               	movwf	4
  2236  06E5  0877               	movf	??_memcpy,w
  2237  06E6  1383               	bcf	3,7	;select IRP bank0
  2238  06E7  0080               	movwf	0
  2239  06E8  3001               	movlw	1
  2240  06E9  00F7               	movwf	??_memcpy
  2241  06EA  0877               	movf	??_memcpy,w
  2242  06EB  07A2               	addwf	memcpy@s,f
  2243  06EC  3001               	movlw	1
  2244  06ED  00F7               	movwf	??_memcpy
  2245  06EE  0877               	movf	??_memcpy,w
  2246  06EF  07A1               	addwf	memcpy@d,f
  2247  06F0  2ED0               	goto	l1710
  2248  06F1                     __end_of_memcpy:	
  2249                           ;	Return value of _memcpy is never used
  2250                           
  2251                           
  2252                           	psect	text3
  2253  03DC                     __ptext3:	
  2254 ;; *************** function _crc_calculate *****************
  2255 ;; Defined at:
  2256 ;;		line 40 in file "msg.h"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  pmsg            1    wreg     PTR struct .
  2259 ;;		 -> msg(23), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  pmsg            1    3[BANK0 ] PTR struct .
  2262 ;;		 -> msg(23), 
  2263 ;;  i               1    2[BANK0 ] unsigned char 
  2264 ;;  crc             2    0[BANK0 ] unsigned int 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2    4[COMMON] unsigned int 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         2       0       0       0       0
  2275 ;;      Locals:         0       4       0       0       0
  2276 ;;      Temps:          3       0       0       0       0
  2277 ;;      Totals:         5       4       0       0       0
  2278 ;;Total ram usage:        9 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    1
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_compose
  2285 ;;		_crc_verify
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _crc_calculate
  2291  03DC                     _crc_calculate:	
  2292                           
  2293                           ;incstack = 0
  2294                           ; Regs used in _crc_calculate: [wreg-fsr0h+status,2+status,0]
  2295                           ;crc_calculate@pmsg stored from wreg
  2296  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2297  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2298  03DE  00A3               	movwf	crc_calculate@pmsg
  2299                           
  2300                           ;msg.h: 42: uint16_t crc;
  2301                           ;msg.h: 43: crc = (uint8_t)pmsg->msglen;
  2302  03DF  0823               	movf	crc_calculate@pmsg,w
  2303  03E0  0084               	movwf	4
  2304  03E1  1383               	bcf	3,7	;select IRP bank0
  2305  03E2  0800               	movf	0,w
  2306  03E3  00F6               	movwf	??_crc_calculate
  2307  03E4  01F7               	clrf	??_crc_calculate+1
  2308  03E5  0876               	movf	??_crc_calculate,w
  2309  03E6  00A0               	movwf	crc_calculate@crc
  2310  03E7  0877               	movf	??_crc_calculate+1,w
  2311  03E8  00A1               	movwf	crc_calculate@crc+1
  2312                           
  2313                           ;msg.h: 44: crc += (uint8_t)pmsg->from;
  2314  03E9  0823               	movf	crc_calculate@pmsg,w
  2315  03EA  3E03               	addlw	3
  2316  03EB  0084               	movwf	4
  2317  03EC  0800               	movf	0,w
  2318  03ED  00F6               	movwf	??_crc_calculate
  2319  03EE  01F7               	clrf	??_crc_calculate+1
  2320  03EF  0876               	movf	??_crc_calculate,w
  2321  03F0  07A0               	addwf	crc_calculate@crc,f
  2322  03F1  1803               	skipnc
  2323  03F2  0AA1               	incf	crc_calculate@crc+1,f
  2324  03F3  0877               	movf	??_crc_calculate+1,w
  2325  03F4  07A1               	addwf	crc_calculate@crc+1,f
  2326                           
  2327                           ;msg.h: 45: crc += (uint8_t)pmsg->to;
  2328  03F5  0823               	movf	crc_calculate@pmsg,w
  2329  03F6  3E04               	addlw	4
  2330  03F7  0084               	movwf	4
  2331  03F8  0800               	movf	0,w
  2332  03F9  00F6               	movwf	??_crc_calculate
  2333  03FA  01F7               	clrf	??_crc_calculate+1
  2334  03FB  0876               	movf	??_crc_calculate,w
  2335  03FC  07A0               	addwf	crc_calculate@crc,f
  2336  03FD  1803               	skipnc
  2337  03FE  0AA1               	incf	crc_calculate@crc+1,f
  2338  03FF  0877               	movf	??_crc_calculate+1,w
  2339  0400  07A1               	addwf	crc_calculate@crc+1,f
  2340                           
  2341                           ;msg.h: 46: crc += (uint8_t)pmsg->msgid;
  2342  0401  0823               	movf	crc_calculate@pmsg,w
  2343  0402  3E05               	addlw	5
  2344  0403  0084               	movwf	4
  2345  0404  0800               	movf	0,w
  2346  0405  00F6               	movwf	??_crc_calculate
  2347  0406  01F7               	clrf	??_crc_calculate+1
  2348  0407  0876               	movf	??_crc_calculate,w
  2349  0408  07A0               	addwf	crc_calculate@crc,f
  2350  0409  1803               	skipnc
  2351  040A  0AA1               	incf	crc_calculate@crc+1,f
  2352  040B  0877               	movf	??_crc_calculate+1,w
  2353  040C  07A1               	addwf	crc_calculate@crc+1,f
  2354                           
  2355                           ;msg.h: 47: crc += (uint8_t)pmsg->cmd;
  2356  040D  0823               	movf	crc_calculate@pmsg,w
  2357  040E  3E06               	addlw	6
  2358  040F  0084               	movwf	4
  2359  0410  0800               	movf	0,w
  2360  0411  00F6               	movwf	??_crc_calculate
  2361  0412  01F7               	clrf	??_crc_calculate+1
  2362  0413  0876               	movf	??_crc_calculate,w
  2363  0414  07A0               	addwf	crc_calculate@crc,f
  2364  0415  1803               	skipnc
  2365  0416  0AA1               	incf	crc_calculate@crc+1,f
  2366  0417  0877               	movf	??_crc_calculate+1,w
  2367  0418  07A1               	addwf	crc_calculate@crc+1,f
  2368                           
  2369                           ;msg.h: 49: for(uint8_t i = 0; i < pmsg->msglen - 7; i++)
  2370  0419  01A2               	clrf	crc_calculate@i
  2371  041A                     l1696:	
  2372  041A  0823               	movf	crc_calculate@pmsg,w
  2373  041B  0084               	movwf	4
  2374  041C  0800               	movf	0,w
  2375  041D  3EF9               	addlw	249
  2376  041E  00F6               	movwf	??_crc_calculate
  2377  041F  30FF               	movlw	255
  2378  0420  1803               	skipnc
  2379  0421  3000               	movlw	0
  2380  0422  00F7               	movwf	??_crc_calculate+1
  2381  0423  0877               	movf	??_crc_calculate+1,w
  2382  0424  3A80               	xorlw	128
  2383  0425  3C80               	sublw	128
  2384  0426  1D03               	skipz
  2385  0427  2C2A               	goto	u1465
  2386  0428  0876               	movf	??_crc_calculate,w
  2387  0429  0222               	subwf	crc_calculate@i,w
  2388  042A                     u1465:	
  2389  042A  1803               	btfsc	3,0
  2390  042B  2C43               	goto	l1698
  2391                           
  2392                           ;msg.h: 50: {
  2393                           ;msg.h: 51: crc += (uint8_t)pmsg->data[i];
  2394  042C  1283               	bcf	3,5	;RP0=0, select bank0
  2395  042D  1303               	bcf	3,6	;RP1=0, select bank0
  2396  042E  0822               	movf	crc_calculate@i,w
  2397  042F  3E07               	addlw	7
  2398  0430  0723               	addwf	crc_calculate@pmsg,w
  2399  0431  00F6               	movwf	??_crc_calculate
  2400  0432  0876               	movf	??_crc_calculate,w
  2401  0433  0084               	movwf	4
  2402  0434  1383               	bcf	3,7	;select IRP bank0
  2403  0435  0800               	movf	0,w
  2404  0436  00F7               	movwf	??_crc_calculate+1
  2405  0437  01F8               	clrf	??_crc_calculate+2
  2406  0438  0877               	movf	??_crc_calculate+1,w
  2407  0439  07A0               	addwf	crc_calculate@crc,f
  2408  043A  1803               	skipnc
  2409  043B  0AA1               	incf	crc_calculate@crc+1,f
  2410  043C  0878               	movf	??_crc_calculate+2,w
  2411  043D  07A1               	addwf	crc_calculate@crc+1,f
  2412  043E  3001               	movlw	1
  2413  043F  00F6               	movwf	??_crc_calculate
  2414  0440  0876               	movf	??_crc_calculate,w
  2415  0441  07A2               	addwf	crc_calculate@i,f
  2416  0442  2C1A               	goto	l1696
  2417  0443                     l1698:	
  2418                           
  2419                           ;msg.h: 52: }
  2420                           ;msg.h: 54: return crc;
  2421  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0445  0821               	movf	crc_calculate@crc+1,w
  2424  0446  00F5               	movwf	?_crc_calculate+1
  2425  0447  0820               	movf	crc_calculate@crc,w
  2426  0448  00F4               	movwf	?_crc_calculate
  2427  0449  0008               	return
  2428  044A                     __end_of_crc_calculate:	
  2429                           
  2430                           	psect	text4
  2431  0F0D                     __ptext4:	
  2432 ;; *************** function _ValueInc *****************
  2433 ;; Defined at:
  2434 ;;		line 62 in file "menu.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0
  2450 ;;      Temps:          0       2       0       0       0
  2451 ;;      Totals:         0       2       0       0       0
  2452 ;;Total ram usage:        2 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    3
  2455 ;; This function calls:
  2456 ;;		_SaveMenuItem
  2457 ;; This function is called by:
  2458 ;;		_main
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _ValueInc
  2464  0F0D                     _ValueInc:	
  2465                           
  2466                           ;menu.c: 64: g_menu.items[g_menu.index].value++;
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in _ValueInc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2470  0F0D  3001               	movlw	1
  2471  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0F10  00A0               	movwf	??_ValueInc
  2474  0F11  086C               	movf	_g_menu+8,w
  2475  0F12  00A1               	movwf	??_ValueInc+1
  2476  0F13  0721               	addwf	??_ValueInc+1,w
  2477  0F14  3E64               	addlw	(low (_g_menu| 0))& (0+255)
  2478  0F15  0084               	movwf	4
  2479  0F16  0820               	movf	??_ValueInc,w
  2480  0F17  1383               	bcf	3,7	;select IRP bank0
  2481  0F18  0780               	addwf	0,f
  2482                           
  2483                           ;menu.c: 65: SaveMenuItem(g_menu.index);
  2484  0F19  086C               	movf	_g_menu+8,w
  2485  0F1A  120A  158A  26ED   	fcall	_SaveMenuItem
  2486  0F1D  0008               	return
  2487  0F1E                     __end_of_ValueInc:	
  2488                           
  2489                           	psect	text5
  2490  06F1                     __ptext5:	
  2491 ;; *************** function _ValueDec *****************
  2492 ;; Defined at:
  2493 ;;		line 67 in file "menu.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  2   81[None  ] int 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2507 ;;      Params:         0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0
  2509 ;;      Temps:          0       1       0       0       0
  2510 ;;      Totals:         0       1       0       0       0
  2511 ;;Total ram usage:        1 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    3
  2514 ;; This function calls:
  2515 ;;		_SaveMenuItem
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _ValueDec
  2523  06F1                     _ValueDec:	
  2524                           
  2525                           ;menu.c: 69: g_menu.items[g_menu.index].value--;
  2526                           
  2527                           ;incstack = 0
  2528                           ; Regs used in _ValueDec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2529  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2530  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2531  06F3  086C               	movf	_g_menu+8,w
  2532  06F4  00A0               	movwf	??_ValueDec
  2533  06F5  0720               	addwf	??_ValueDec,w
  2534  06F6  3E64               	addlw	(low (_g_menu| 0))& (0+255)
  2535  06F7  0084               	movwf	4
  2536  06F8  3001               	movlw	1
  2537  06F9  1383               	bcf	3,7	;select IRP bank0
  2538  06FA  0280               	subwf	0,f
  2539                           
  2540                           ;menu.c: 70: SaveMenuItem(g_menu.index);
  2541  06FB  086C               	movf	_g_menu+8,w
  2542  06FC  120A  158A  26ED   	fcall	_SaveMenuItem
  2543  06FF  0008               	return
  2544  0700                     __end_of_ValueDec:	
  2545                           
  2546                           	psect	text6
  2547  0EED                     __ptext6:	
  2548 ;; *************** function _SaveMenuItem *****************
  2549 ;; Defined at:
  2550 ;;		line 32 in file "menu.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  item            1    wreg     unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  item            1    9[COMMON] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       0       0       0       0
  2565 ;;      Locals:         1       0       0       0       0
  2566 ;;      Temps:          2       0       0       0       0
  2567 ;;      Totals:         3       0       0       0       0
  2568 ;;Total ram usage:        3 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    2
  2571 ;; This function calls:
  2572 ;;		_eeprom_write
  2573 ;; This function is called by:
  2574 ;;		_ValueInc
  2575 ;;		_ValueDec
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _SaveMenuItem
  2581  0EED                     _SaveMenuItem:	
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _SaveMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2585                           ;SaveMenuItem@item stored from wreg
  2586  0EED  00F9               	movwf	SaveMenuItem@item
  2587                           
  2588                           ;menu.c: 34: eeprom_write(item, g_menu.items[item].value);
  2589  0EEE  0879               	movf	SaveMenuItem@item,w
  2590  0EEF  00F7               	movwf	??_SaveMenuItem
  2591  0EF0  0777               	addwf	??_SaveMenuItem,w
  2592  0EF1  3E64               	addlw	(low (_g_menu| 0))& (0+255)
  2593  0EF2  0084               	movwf	4
  2594  0EF3  1383               	bcf	3,7	;select IRP bank0
  2595  0EF4  0800               	movf	0,w
  2596  0EF5  00F8               	movwf	??_SaveMenuItem+1
  2597  0EF6  0878               	movf	??_SaveMenuItem+1,w
  2598  0EF7  00F4               	movwf	eeprom_write@value
  2599  0EF8  0879               	movf	SaveMenuItem@item,w
  2600  0EF9  120A  158A  2770   	fcall	_eeprom_write
  2601  0EFC  0008               	return
  2602  0EFD                     __end_of_SaveMenuItem:	
  2603                           
  2604                           	psect	text7
  2605  0F70                     __ptext7:	
  2606 ;; *************** function _eeprom_write *****************
  2607 ;; Defined at:
  2608 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eewrite.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  addr            1    wreg     unsigned char 
  2611 ;;  value           1    4[COMMON] unsigned char 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  addr            1    6[COMMON] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2623 ;;      Params:         1       0       0       0       0
  2624 ;;      Locals:         1       0       0       0       0
  2625 ;;      Temps:          1       0       0       0       0
  2626 ;;      Totals:         3       0       0       0       0
  2627 ;;Total ram usage:        3 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    1
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_SaveMenuItem
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _eeprom_write
  2639  0F70                     _eeprom_write:	
  2640                           
  2641                           ;incstack = 0
  2642                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2643                           ;eeprom_write@addr stored from wreg
  2644  0F70  00F6               	movwf	eeprom_write@addr
  2645  0F71                     l320:	
  2646  0F71  1683               	bsf	3,5	;RP0=1, select bank3
  2647  0F72  1703               	bsf	3,6	;RP1=1, select bank3
  2648  0F73  188C               	btfsc	12,1	;volsfr
  2649  0F74  2F71               	goto	l320
  2650  0F75  0876               	movf	eeprom_write@addr,w
  2651  0F76  1283               	bcf	3,5	;RP0=0, select bank2
  2652  0F77  1703               	bsf	3,6	;RP1=1, select bank2
  2653  0F78  008D               	movwf	13	;volatile
  2654  0F79  0874               	movf	eeprom_write@value,w
  2655  0F7A  008C               	movwf	12	;volatile
  2656  0F7B  303F               	movlw	63
  2657  0F7C  00F5               	movwf	??_eeprom_write
  2658  0F7D  0875               	movf	??_eeprom_write,w
  2659  0F7E  1683               	bsf	3,5	;RP0=1, select bank3
  2660  0F7F  1703               	bsf	3,6	;RP1=1, select bank3
  2661  0F80  058C               	andwf	12,f	;volsfr
  2662  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  2663  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  2664  0F83  1003               	bcf	3,0	;volatile
  2665  0F84  1B8B               	btfsc	11,7	;volatile
  2666  0F85  1403               	bsf	3,0	;volatile
  2667  0F86  138B               	bcf	11,7	;volatile
  2668  0F87  1683               	bsf	3,5	;RP0=1, select bank3
  2669  0F88  1703               	bsf	3,6	;RP1=1, select bank3
  2670  0F89  150C               	bsf	12,2	;volsfr
  2671  0F8A  3055               	movlw	85
  2672  0F8B  008D               	movwf	13	;volsfr
  2673  0F8C  30AA               	movlw	170
  2674  0F8D  008D               	movwf	13	;volsfr
  2675  0F8E  148C               	bsf	12,1	;volsfr
  2676  0F8F  110C               	bcf	12,2	;volsfr
  2677  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0F92  1C03               	btfss	3,0	;volatile
  2680  0F93  0008               	return
  2681  0F94  178B               	bsf	11,7	;volatile
  2682  0F95  0008               	return
  2683  0F96                     __end_of_eeprom_write:	
  2684                           
  2685                           	psect	text8
  2686  0621                     __ptext8:	
  2687 ;; *************** function _ShowMenu *****************
  2688 ;; Defined at:
  2689 ;;		line 23 in file "menu.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;		None
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  i               1   25[BANK0 ] char 
  2694 ;;  count           1   24[BANK0 ] char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       0       0       0       0
  2705 ;;      Locals:         0       2       0       0       0
  2706 ;;      Temps:          0       4       0       0       0
  2707 ;;      Totals:         0       6       0       0       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    4
  2711 ;; This function calls:
  2712 ;;		_LCDByte
  2713 ;;		_LCDGotoXY
  2714 ;;		_LCDWriteInt
  2715 ;;		_LCDWriteString
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           
  2722                           ;psect for function _ShowMenu
  2723  0621                     _ShowMenu:	
  2724                           
  2725                           ;menu.c: 25: { LCDGotoXY(0,0); int8_t count = LCDWriteString(g_menu.items[g_menu.index].
      +                          name); for(int8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };
  2726                           
  2727                           ;incstack = 0
  2728                           ; Regs used in _ShowMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2729  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0623  01A6               	clrf	LCDGotoXY@y
  2732  0624  3000               	movlw	0
  2733  0625  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  2734  062A  1403               	setc
  2735  062B  1283               	bcf	3,5	;RP0=0, select bank0
  2736  062C  1303               	bcf	3,6	;RP1=0, select bank0
  2737  062D  0D6C               	rlf	_g_menu+8,w
  2738  062E  3E64               	addlw	(low (_g_menu| 0))& (0+255)
  2739  062F  0084               	movwf	4
  2740  0630  1383               	bcf	3,7	;select IRP bank0
  2741  0631  0800               	movf	0,w
  2742  0632  120A  118A  256F  120A  118A  	fcall	_LCDWriteString
  2743  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0639  00B4               	movwf	??_ShowMenu
  2746  063A  0834               	movf	??_ShowMenu,w
  2747  063B  00B8               	movwf	ShowMenu@count
  2748  063C  0838               	movf	ShowMenu@count,w
  2749  063D  00B4               	movwf	??_ShowMenu
  2750  063E  0834               	movf	??_ShowMenu,w
  2751  063F  00B9               	movwf	ShowMenu@i
  2752  0640  0839               	movf	ShowMenu@i,w
  2753  0641  3A80               	xorlw	128
  2754  0642  3E70               	addlw	-144
  2755  0643  1803               	btfsc	3,0
  2756  0644  2E58               	goto	l1914
  2757  0645                     l1908:	
  2758  0645  01F9               	clrf	LCDByte@isdata
  2759  0646  0AF9               	incf	LCDByte@isdata,f
  2760  0647  3020               	movlw	32
  2761  0648  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  2762  064D  3001               	movlw	1
  2763  064E  1283               	bcf	3,5	;RP0=0, select bank0
  2764  064F  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0650  00B4               	movwf	??_ShowMenu
  2766  0651  0834               	movf	??_ShowMenu,w
  2767  0652  07B9               	addwf	ShowMenu@i,f
  2768  0653  0839               	movf	ShowMenu@i,w
  2769  0654  3A80               	xorlw	128
  2770  0655  3E70               	addlw	-144
  2771  0656  1C03               	skipc
  2772  0657  2E45               	goto	l1908
  2773  0658                     l1914:	
  2774                           
  2775                           ;menu.c: 26: { LCDGotoXY(4,0); LCDWriteInt(g_menu.items[g_menu.index].value,3);};
  2776  0658  01A6               	clrf	LCDGotoXY@y
  2777  0659  3004               	movlw	4
  2778  065A  120A  158A  274A  120A  118A  	fcall	_LCDGotoXY
  2779  065F  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0660  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0661  086C               	movf	_g_menu+8,w
  2782  0662  00B4               	movwf	??_ShowMenu
  2783  0663  0734               	addwf	??_ShowMenu,w
  2784  0664  3E64               	addlw	(low (_g_menu| 0))& (0+255)
  2785  0665  0084               	movwf	4
  2786  0666  1383               	bcf	3,7	;select IRP bank0
  2787  0667  0800               	movf	0,w
  2788  0668  00B5               	movwf	??_ShowMenu+1
  2789  0669  01B6               	clrf	??_ShowMenu+2
  2790  066A  0835               	movf	??_ShowMenu+1,w
  2791  066B  00A6               	movwf	LCDWriteInt@val
  2792  066C  0836               	movf	??_ShowMenu+2,w
  2793  066D  00A7               	movwf	LCDWriteInt@val+1
  2794  066E  3003               	movlw	3
  2795  066F  00B7               	movwf	??_ShowMenu+3
  2796  0670  0837               	movf	??_ShowMenu+3,w
  2797  0671  00A8               	movwf	LCDWriteInt@field_length
  2798  0672  120A  118A  233D   	fcall	_LCDWriteInt
  2799  0675  0008               	return
  2800  0676                     __end_of_ShowMenu:	
  2801                           
  2802                           	psect	text9
  2803  033D                     __ptext9:	
  2804 ;; *************** function _LCDWriteInt *****************
  2805 ;; Defined at:
  2806 ;;		line 328 in file "lcd_hd44780_pic16.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  val             2    6[BANK0 ] int 
  2809 ;;  field_length    1    8[BANK0 ] char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  str             5   11[BANK0 ] unsigned char [5]
  2812 ;;  i               2   18[BANK0 ] int 
  2813 ;;  j               2   16[BANK0 ] int 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      char 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       3       0       0       0
  2824 ;;      Locals:         0       9       0       0       0
  2825 ;;      Temps:          0       2       0       0       0
  2826 ;;      Totals:         0      14       0       0       0
  2827 ;;Total ram usage:       14 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    3
  2830 ;; This function calls:
  2831 ;;		_LCDByte
  2832 ;;		___awdiv
  2833 ;;		___awmod
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;;		_ShowMenu
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           
  2841                           ;psect for function _LCDWriteInt
  2842  033D                     _LCDWriteInt:	
  2843                           
  2844                           ;lcd_hd44780_pic16.c: 330: char str[5]={-16,-16,-16,-16,-16};
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2848  033D  302B               	movlw	LCDWriteInt@str& (0+255)
  2849  033E  0084               	movwf	4
  2850  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0341  085C               	movf	LCDWriteInt@F1646,w
  2853  0342  1383               	bcf	3,7	;select IRP bank0
  2854  0343  0080               	movwf	0
  2855  0344  0A84               	incf	4,f
  2856  0345  085D               	movf	LCDWriteInt@F1646+1,w
  2857  0346  0080               	movwf	0
  2858  0347  0A84               	incf	4,f
  2859  0348  085E               	movf	LCDWriteInt@F1646+2,w
  2860  0349  0080               	movwf	0
  2861  034A  0A84               	incf	4,f
  2862  034B  085F               	movf	LCDWriteInt@F1646+3,w
  2863  034C  0080               	movwf	0
  2864  034D  0A84               	incf	4,f
  2865  034E  0860               	movf	LCDWriteInt@F1646+4,w
  2866  034F  0080               	movwf	0
  2867                           
  2868                           ;lcd_hd44780_pic16.c: 331: int i=4,j=0;
  2869  0350  3004               	movlw	4
  2870  0351  00B2               	movwf	LCDWriteInt@i
  2871  0352  3000               	movlw	0
  2872  0353  00B3               	movwf	LCDWriteInt@i+1
  2873  0354  01B0               	clrf	LCDWriteInt@j
  2874  0355  01B1               	clrf	LCDWriteInt@j+1
  2875                           
  2876                           ;lcd_hd44780_pic16.c: 333: if(val == 0)
  2877  0356  0826               	movf	LCDWriteInt@val,w
  2878  0357  0427               	iorwf	LCDWriteInt@val+1,w
  2879  0358  1903               	btfsc	3,2
  2880                           
  2881                           ;lcd_hd44780_pic16.c: 334: {
  2882                           ;lcd_hd44780_pic16.c: 335: str[4] = 0;
  2883  0359  01AF               	clrf	LCDWriteInt@str+4
  2884                           
  2885                           ;lcd_hd44780_pic16.c: 336: }
  2886                           ;lcd_hd44780_pic16.c: 338: if(val<0)
  2887  035A  1FA7               	btfss	LCDWriteInt@val+1,7
  2888  035B  2B6B               	goto	l1784
  2889                           
  2890                           ;lcd_hd44780_pic16.c: 339: {
  2891                           ;lcd_hd44780_pic16.c: 340: (LCDByte('-',1));
  2892  035C  01F9               	clrf	LCDByte@isdata
  2893  035D  0AF9               	incf	LCDByte@isdata,f
  2894  035E  302D               	movlw	45
  2895  035F  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  2896                           
  2897                           ;lcd_hd44780_pic16.c: 341: val=val*-1;
  2898  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0366  09A6               	comf	LCDWriteInt@val,f
  2901  0367  09A7               	comf	LCDWriteInt@val+1,f
  2902  0368  0AA6               	incf	LCDWriteInt@val,f
  2903  0369  1903               	skipnz
  2904  036A  0AA7               	incf	LCDWriteInt@val+1,f
  2905  036B                     l1784:	
  2906                           ;lcd_hd44780_pic16.c: 342: }
  2907                           ;lcd_hd44780_pic16.c: 344: while(val)
  2908                           
  2909  036B  0826               	movf	LCDWriteInt@val,w
  2910  036C  0427               	iorwf	LCDWriteInt@val+1,w
  2911  036D  1903               	btfsc	3,2
  2912  036E  2BA0               	goto	l1786
  2913                           
  2914                           ;lcd_hd44780_pic16.c: 345: {
  2915                           ;lcd_hd44780_pic16.c: 346: str[i]=val%10;
  2916  036F  300A               	movlw	10
  2917  0370  00F4               	movwf	___awmod@divisor
  2918  0371  3000               	movlw	0
  2919  0372  00F5               	movwf	___awmod@divisor+1
  2920  0373  0827               	movf	LCDWriteInt@val+1,w
  2921  0374  00F7               	movwf	___awmod@dividend+1
  2922  0375  0826               	movf	LCDWriteInt@val,w
  2923  0376  00F6               	movwf	___awmod@dividend
  2924  0377  120A  118A  274E  120A  118A  	fcall	___awmod
  2925  037C  0874               	movf	?___awmod,w
  2926  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2927  037E  1303               	bcf	3,6	;RP1=0, select bank0
  2928  037F  00A9               	movwf	??_LCDWriteInt
  2929  0380  0832               	movf	LCDWriteInt@i,w
  2930  0381  3E2B               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2931  0382  0084               	movwf	4
  2932  0383  0829               	movf	??_LCDWriteInt,w
  2933  0384  1383               	bcf	3,7	;select IRP bank0
  2934  0385  0080               	movwf	0
  2935                           
  2936                           ;lcd_hd44780_pic16.c: 347: val=val/10;
  2937  0386  300A               	movlw	10
  2938  0387  00F4               	movwf	___awdiv@divisor
  2939  0388  3000               	movlw	0
  2940  0389  00F5               	movwf	___awdiv@divisor+1
  2941  038A  0827               	movf	LCDWriteInt@val+1,w
  2942  038B  00F7               	movwf	___awdiv@dividend+1
  2943  038C  0826               	movf	LCDWriteInt@val,w
  2944  038D  00F6               	movwf	___awdiv@dividend
  2945  038E  120A  118A  2514  120A  118A  	fcall	___awdiv
  2946  0393  0875               	movf	?___awdiv+1,w
  2947  0394  1283               	bcf	3,5	;RP0=0, select bank0
  2948  0395  1303               	bcf	3,6	;RP1=0, select bank0
  2949  0396  00A7               	movwf	LCDWriteInt@val+1
  2950  0397  0874               	movf	?___awdiv,w
  2951  0398  00A6               	movwf	LCDWriteInt@val
  2952                           
  2953                           ;lcd_hd44780_pic16.c: 348: i--;
  2954  0399  30FF               	movlw	255
  2955  039A  07B2               	addwf	LCDWriteInt@i,f
  2956  039B  1803               	skipnc
  2957  039C  0AB3               	incf	LCDWriteInt@i+1,f
  2958  039D  30FF               	movlw	255
  2959  039E  07B3               	addwf	LCDWriteInt@i+1,f
  2960  039F  2B6B               	goto	l1784
  2961  03A0                     l1786:	
  2962                           
  2963                           ;lcd_hd44780_pic16.c: 349: }
  2964                           ;lcd_hd44780_pic16.c: 350: if(field_length==-1)
  2965  03A0  0A28               	incf	LCDWriteInt@field_length,w
  2966  03A1  1903               	btfsc	3,2
  2967  03A2  2BB5               	goto	l1794
  2968                           
  2969                           ;lcd_hd44780_pic16.c: 352: else
  2970                           ;lcd_hd44780_pic16.c: 353: j=5-field_length;
  2971                           
  2972                           ;lcd_hd44780_pic16.c: 351: while(str[j]==-16) j++;
  2973  03A3  0828               	movf	LCDWriteInt@field_length,w
  2974  03A4  00A9               	movwf	??_LCDWriteInt
  2975  03A5  01AA               	clrf	??_LCDWriteInt+1
  2976  03A6  1BA9               	btfsc	??_LCDWriteInt,7
  2977  03A7  03AA               	decf	??_LCDWriteInt+1,f
  2978  03A8  09A9               	comf	??_LCDWriteInt,f
  2979  03A9  09AA               	comf	??_LCDWriteInt+1,f
  2980  03AA  0AA9               	incf	??_LCDWriteInt,f
  2981  03AB  1903               	skipnz
  2982  03AC  0AAA               	incf	??_LCDWriteInt+1,f
  2983  03AD  0829               	movf	??_LCDWriteInt,w
  2984  03AE  3E05               	addlw	5
  2985  03AF  00B0               	movwf	LCDWriteInt@j
  2986  03B0  082A               	movf	??_LCDWriteInt+1,w
  2987  03B1  1803               	skipnc
  2988  03B2  3E01               	addlw	1
  2989  03B3  3E00               	addlw	0
  2990  03B4  00B1               	movwf	LCDWriteInt@j+1
  2991  03B5                     l1794:	
  2992                           
  2993                           ;lcd_hd44780_pic16.c: 356: for(i=j;i<5;i++)
  2994  03B5  0831               	movf	LCDWriteInt@j+1,w
  2995  03B6  00B3               	movwf	LCDWriteInt@i+1
  2996  03B7  0830               	movf	LCDWriteInt@j,w
  2997  03B8  00B2               	movwf	LCDWriteInt@i
  2998  03B9                     L3:	
  2999  03B9  0833               	movf	LCDWriteInt@i+1,w
  3000  03BA  3A80               	xorlw	128
  3001  03BB  00FF               	movwf	127
  3002  03BC  3080               	movlw	128
  3003  03BD  027F               	subwf	127,w
  3004  03BE  1D03               	skipz
  3005  03BF  2BC2               	goto	u1575
  3006  03C0  3005               	movlw	5
  3007  03C1  0232               	subwf	LCDWriteInt@i,w
  3008  03C2                     u1575:	
  3009  03C2  1803               	btfsc	3,0
  3010  03C3  0008               	return
  3011                           
  3012                           ;lcd_hd44780_pic16.c: 357: {
  3013                           ;lcd_hd44780_pic16.c: 358: (LCDByte(48+str[i],1));
  3014  03C4  01F9               	clrf	LCDByte@isdata
  3015  03C5  0AF9               	incf	LCDByte@isdata,f
  3016  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  3017  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  3018  03C8  0832               	movf	LCDWriteInt@i,w
  3019  03C9  3E2B               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  3020  03CA  0084               	movwf	4
  3021  03CB  1383               	bcf	3,7	;select IRP bank0
  3022  03CC  0800               	movf	0,w
  3023  03CD  3E30               	addlw	48
  3024  03CE  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  3025  03D3  3001               	movlw	1
  3026  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  3027  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  3028  03D6  07B2               	addwf	LCDWriteInt@i,f
  3029  03D7  1803               	skipnc
  3030  03D8  0AB3               	incf	LCDWriteInt@i+1,f
  3031  03D9  3000               	movlw	0
  3032  03DA  07B3               	addwf	LCDWriteInt@i+1,f
  3033  03DB  2BB9               	goto	L3
  3034  03DC                     __end_of_LCDWriteInt:	
  3035                           ;lcd_hd44780_pic16.c: 359: }
  3036                           ;lcd_hd44780_pic16.c: 360: return field_length;
  3037                           ;	Return value of _LCDWriteInt is never used
  3038                           
  3039                           
  3040                           	psect	text10
  3041  074E                     __ptext10:	
  3042 ;; *************** function ___awmod *****************
  3043 ;; Defined at:
  3044 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  divisor         2    4[COMMON] int 
  3047 ;;  dividend        2    6[COMMON] int 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  sign            1    1[BANK0 ] unsigned char 
  3050 ;;  counter         1    0[BANK0 ] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  2    4[COMMON] int 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3060 ;;      Params:         4       0       0       0       0
  3061 ;;      Locals:         0       2       0       0       0
  3062 ;;      Temps:          1       0       0       0       0
  3063 ;;      Totals:         5       2       0       0       0
  3064 ;;Total ram usage:        7 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_LCDWriteInt
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function ___awmod
  3076  074E                     ___awmod:	
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3080  074E  1283               	bcf	3,5	;RP0=0, select bank0
  3081  074F  1303               	bcf	3,6	;RP1=0, select bank0
  3082  0750  01A1               	clrf	___awmod@sign
  3083  0751  1FF7               	btfss	___awmod@dividend+1,7
  3084  0752  2F5A               	goto	l1650
  3085  0753  09F6               	comf	___awmod@dividend,f
  3086  0754  09F7               	comf	___awmod@dividend+1,f
  3087  0755  0AF6               	incf	___awmod@dividend,f
  3088  0756  1903               	skipnz
  3089  0757  0AF7               	incf	___awmod@dividend+1,f
  3090  0758  01A1               	clrf	___awmod@sign
  3091  0759  0AA1               	incf	___awmod@sign,f
  3092  075A                     l1650:	
  3093  075A  1FF5               	btfss	___awmod@divisor+1,7
  3094  075B  2F61               	goto	l1654
  3095  075C  09F4               	comf	___awmod@divisor,f
  3096  075D  09F5               	comf	___awmod@divisor+1,f
  3097  075E  0AF4               	incf	___awmod@divisor,f
  3098  075F  1903               	skipnz
  3099  0760  0AF5               	incf	___awmod@divisor+1,f
  3100  0761                     l1654:	
  3101  0761  0874               	movf	___awmod@divisor,w
  3102  0762  0475               	iorwf	___awmod@divisor+1,w
  3103  0763  1903               	btfsc	3,2
  3104  0764  2F8E               	goto	l1672
  3105  0765  01A0               	clrf	___awmod@counter
  3106  0766  0AA0               	incf	___awmod@counter,f
  3107  0767                     l1662:	
  3108  0767  1BF5               	btfsc	___awmod@divisor+1,7
  3109  0768  2F75               	goto	l1664
  3110  0769  3001               	movlw	1
  3111  076A                     u1405:	
  3112  076A  1003               	clrc
  3113  076B  0DF4               	rlf	___awmod@divisor,f
  3114  076C  0DF5               	rlf	___awmod@divisor+1,f
  3115  076D  3EFF               	addlw	-1
  3116  076E  1D03               	skipz
  3117  076F  2F6A               	goto	u1405
  3118  0770  3001               	movlw	1
  3119  0771  00F8               	movwf	??___awmod
  3120  0772  0878               	movf	??___awmod,w
  3121  0773  07A0               	addwf	___awmod@counter,f
  3122  0774  2F67               	goto	l1662
  3123  0775                     l1664:	
  3124  0775  0875               	movf	___awmod@divisor+1,w
  3125  0776  0277               	subwf	___awmod@dividend+1,w
  3126  0777  1D03               	skipz
  3127  0778  2F7B               	goto	u1425
  3128  0779  0874               	movf	___awmod@divisor,w
  3129  077A  0276               	subwf	___awmod@dividend,w
  3130  077B                     u1425:	
  3131  077B  1C03               	skipc
  3132  077C  2F83               	goto	l1668
  3133  077D  0874               	movf	___awmod@divisor,w
  3134  077E  02F6               	subwf	___awmod@dividend,f
  3135  077F  0875               	movf	___awmod@divisor+1,w
  3136  0780  1C03               	skipc
  3137  0781  03F7               	decf	___awmod@dividend+1,f
  3138  0782  02F7               	subwf	___awmod@dividend+1,f
  3139  0783                     l1668:	
  3140  0783  3001               	movlw	1
  3141  0784                     u1435:	
  3142  0784  1003               	clrc
  3143  0785  0CF5               	rrf	___awmod@divisor+1,f
  3144  0786  0CF4               	rrf	___awmod@divisor,f
  3145  0787  3EFF               	addlw	-1
  3146  0788  1D03               	skipz
  3147  0789  2F84               	goto	u1435
  3148  078A  3001               	movlw	1
  3149  078B  02A0               	subwf	___awmod@counter,f
  3150  078C  1D03               	btfss	3,2
  3151  078D  2F75               	goto	l1664
  3152  078E                     l1672:	
  3153  078E  0821               	movf	___awmod@sign,w
  3154  078F  1903               	btfsc	3,2
  3155  0790  2F96               	goto	l1676
  3156  0791  09F6               	comf	___awmod@dividend,f
  3157  0792  09F7               	comf	___awmod@dividend+1,f
  3158  0793  0AF6               	incf	___awmod@dividend,f
  3159  0794  1903               	skipnz
  3160  0795  0AF7               	incf	___awmod@dividend+1,f
  3161  0796                     l1676:	
  3162  0796  0877               	movf	___awmod@dividend+1,w
  3163  0797  00F5               	movwf	?___awmod+1
  3164  0798  0876               	movf	___awmod@dividend,w
  3165  0799  00F4               	movwf	?___awmod
  3166  079A  0008               	return
  3167  079B                     __end_of___awmod:	
  3168                           
  3169                           	psect	text11
  3170  0514                     __ptext11:	
  3171 ;; *************** function ___awdiv *****************
  3172 ;; Defined at:
  3173 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  divisor         2    4[COMMON] int 
  3176 ;;  dividend        2    6[COMMON] int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  quotient        2    2[BANK0 ] int 
  3179 ;;  sign            1    1[BANK0 ] unsigned char 
  3180 ;;  counter         1    0[BANK0 ] unsigned char 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  2    4[COMMON] int 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3190 ;;      Params:         4       0       0       0       0
  3191 ;;      Locals:         0       4       0       0       0
  3192 ;;      Temps:          1       0       0       0       0
  3193 ;;      Totals:         5       4       0       0       0
  3194 ;;Total ram usage:        9 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; Hardware stack levels required when called:    1
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_LCDWriteInt
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           
  3205                           ;psect for function ___awdiv
  3206  0514                     ___awdiv:	
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3210  0514  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0515  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0516  01A1               	clrf	___awdiv@sign
  3213  0517  1FF5               	btfss	___awdiv@divisor+1,7
  3214  0518  2D20               	goto	l1606
  3215  0519  09F4               	comf	___awdiv@divisor,f
  3216  051A  09F5               	comf	___awdiv@divisor+1,f
  3217  051B  0AF4               	incf	___awdiv@divisor,f
  3218  051C  1903               	skipnz
  3219  051D  0AF5               	incf	___awdiv@divisor+1,f
  3220  051E  01A1               	clrf	___awdiv@sign
  3221  051F  0AA1               	incf	___awdiv@sign,f
  3222  0520                     l1606:	
  3223  0520  1FF7               	btfss	___awdiv@dividend+1,7
  3224  0521  2D2B               	goto	l1612
  3225  0522  09F6               	comf	___awdiv@dividend,f
  3226  0523  09F7               	comf	___awdiv@dividend+1,f
  3227  0524  0AF6               	incf	___awdiv@dividend,f
  3228  0525  1903               	skipnz
  3229  0526  0AF7               	incf	___awdiv@dividend+1,f
  3230  0527  3001               	movlw	1
  3231  0528  00F8               	movwf	??___awdiv
  3232  0529  0878               	movf	??___awdiv,w
  3233  052A  06A1               	xorwf	___awdiv@sign,f
  3234  052B                     l1612:	
  3235  052B  01A2               	clrf	___awdiv@quotient
  3236  052C  01A3               	clrf	___awdiv@quotient+1
  3237  052D  0874               	movf	___awdiv@divisor,w
  3238  052E  0475               	iorwf	___awdiv@divisor+1,w
  3239  052F  1903               	btfsc	3,2
  3240  0530  2D62               	goto	l1634
  3241  0531  01A0               	clrf	___awdiv@counter
  3242  0532  0AA0               	incf	___awdiv@counter,f
  3243  0533                     l1622:	
  3244  0533  1BF5               	btfsc	___awdiv@divisor+1,7
  3245  0534  2D41               	goto	l1624
  3246  0535  3001               	movlw	1
  3247  0536                     u1305:	
  3248  0536  1003               	clrc
  3249  0537  0DF4               	rlf	___awdiv@divisor,f
  3250  0538  0DF5               	rlf	___awdiv@divisor+1,f
  3251  0539  3EFF               	addlw	-1
  3252  053A  1D03               	skipz
  3253  053B  2D36               	goto	u1305
  3254  053C  3001               	movlw	1
  3255  053D  00F8               	movwf	??___awdiv
  3256  053E  0878               	movf	??___awdiv,w
  3257  053F  07A0               	addwf	___awdiv@counter,f
  3258  0540  2D33               	goto	l1622
  3259  0541                     l1624:	
  3260  0541  3001               	movlw	1
  3261  0542                     u1325:	
  3262  0542  1003               	clrc
  3263  0543  0DA2               	rlf	___awdiv@quotient,f
  3264  0544  0DA3               	rlf	___awdiv@quotient+1,f
  3265  0545  3EFF               	addlw	-1
  3266  0546  1D03               	skipz
  3267  0547  2D42               	goto	u1325
  3268  0548  0875               	movf	___awdiv@divisor+1,w
  3269  0549  0277               	subwf	___awdiv@dividend+1,w
  3270  054A  1D03               	skipz
  3271  054B  2D4E               	goto	u1335
  3272  054C  0874               	movf	___awdiv@divisor,w
  3273  054D  0276               	subwf	___awdiv@dividend,w
  3274  054E                     u1335:	
  3275  054E  1C03               	skipc
  3276  054F  2D57               	goto	l1630
  3277  0550  0874               	movf	___awdiv@divisor,w
  3278  0551  02F6               	subwf	___awdiv@dividend,f
  3279  0552  0875               	movf	___awdiv@divisor+1,w
  3280  0553  1C03               	skipc
  3281  0554  03F7               	decf	___awdiv@dividend+1,f
  3282  0555  02F7               	subwf	___awdiv@dividend+1,f
  3283  0556  1422               	bsf	___awdiv@quotient,0
  3284  0557                     l1630:	
  3285  0557  3001               	movlw	1
  3286  0558                     u1345:	
  3287  0558  1003               	clrc
  3288  0559  0CF5               	rrf	___awdiv@divisor+1,f
  3289  055A  0CF4               	rrf	___awdiv@divisor,f
  3290  055B  3EFF               	addlw	-1
  3291  055C  1D03               	skipz
  3292  055D  2D58               	goto	u1345
  3293  055E  3001               	movlw	1
  3294  055F  02A0               	subwf	___awdiv@counter,f
  3295  0560  1D03               	btfss	3,2
  3296  0561  2D41               	goto	l1624
  3297  0562                     l1634:	
  3298  0562  0821               	movf	___awdiv@sign,w
  3299  0563  1903               	btfsc	3,2
  3300  0564  2D6A               	goto	l1638
  3301  0565  09A2               	comf	___awdiv@quotient,f
  3302  0566  09A3               	comf	___awdiv@quotient+1,f
  3303  0567  0AA2               	incf	___awdiv@quotient,f
  3304  0568  1903               	skipnz
  3305  0569  0AA3               	incf	___awdiv@quotient+1,f
  3306  056A                     l1638:	
  3307  056A  0823               	movf	___awdiv@quotient+1,w
  3308  056B  00F5               	movwf	?___awdiv+1
  3309  056C  0822               	movf	___awdiv@quotient,w
  3310  056D  00F4               	movwf	?___awdiv
  3311  056E  0008               	return
  3312  056F                     __end_of___awdiv:	
  3313                           
  3314                           	psect	text12
  3315  0ED1                     __ptext12:	
  3316 ;; *************** function _MenuUp *****************
  3317 ;; Defined at:
  3318 ;;		line 40 in file "menu.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;                  1    wreg      void 
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3332 ;;      Params:         0       0       0       0       0
  3333 ;;      Locals:         0       0       0       0       0
  3334 ;;      Temps:          1       0       0       0       0
  3335 ;;      Totals:         1       0       0       0       0
  3336 ;;Total ram usage:        1 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _MenuUp
  3348  0ED1                     _MenuUp:	
  3349                           
  3350                           ;menu.c: 42: if(g_menu.index == 0)
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in _MenuUp: [wreg+status,2+status,0]
  3354  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0ED3  086C               	movf	_g_menu+8,w
  3357  0ED4  1D03               	btfss	3,2
  3358  0ED5  2EDB               	goto	l1942
  3359                           
  3360                           ;menu.c: 43: {
  3361                           ;menu.c: 44: g_menu.index = 4 - 1;
  3362  0ED6  3003               	movlw	3
  3363  0ED7  00F4               	movwf	??_MenuUp
  3364  0ED8  0874               	movf	??_MenuUp,w
  3365  0ED9  00EC               	movwf	_g_menu+8
  3366                           
  3367                           ;menu.c: 45: }
  3368  0EDA  0008               	return
  3369  0EDB                     l1942:	
  3370                           
  3371                           ;menu.c: 46: else
  3372                           ;menu.c: 47: {
  3373                           ;menu.c: 48: g_menu.index--;
  3374  0EDB  3001               	movlw	1
  3375  0EDC  02EC               	subwf	_g_menu+8,f
  3376  0EDD  0008               	return
  3377  0EDE                     __end_of_MenuUp:	
  3378                           
  3379                           	psect	text13
  3380  0FC2                     __ptext13:	
  3381 ;; *************** function _MenuInit *****************
  3382 ;; Defined at:
  3383 ;;		line 7 in file "menu.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0
  3399 ;;      Temps:          1       0       0       0       0
  3400 ;;      Totals:         1       0       0       0       0
  3401 ;;Total ram usage:        1 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    3
  3404 ;; This function calls:
  3405 ;;		_LoadMenuItem
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _MenuInit
  3413  0FC2                     _MenuInit:	
  3414                           
  3415                           ;menu.c: 9: g_menu.items[0].name = "ID1:";
  3416                           
  3417                           ;incstack = 0
  3418                           ; Regs used in _MenuInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3419  0FC2  3024               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3420  0FC3  00F9               	movwf	??_MenuInit
  3421  0FC4  0879               	movf	??_MenuInit,w
  3422  0FC5  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0FC6  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0FC7  00E5               	movwf	low ((_g_menu| 0+1))
  3425                           
  3426                           ;menu.c: 10: g_menu.items[0].value = LoadMenuItem(0);
  3427  0FC8  3000               	movlw	0
  3428  0FC9  120A  158A  26DE  120A  158A  	fcall	_LoadMenuItem
  3429  0FCE  00F9               	movwf	??_MenuInit
  3430  0FCF  0879               	movf	??_MenuInit,w
  3431  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  3433  0FD2  00E4               	movwf	_g_menu
  3434                           
  3435                           ;menu.c: 12: g_menu.items[1].name = "ID2:";
  3436  0FD3  3029               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3437  0FD4  00F9               	movwf	??_MenuInit
  3438  0FD5  0879               	movf	??_MenuInit,w
  3439  0FD6  00E7               	movwf	low ((_g_menu| 0+3))
  3440                           
  3441                           ;menu.c: 13: g_menu.items[1].value = LoadMenuItem(1);
  3442  0FD7  3001               	movlw	1
  3443  0FD8  120A  158A  26DE  120A  158A  	fcall	_LoadMenuItem
  3444  0FDD  00F9               	movwf	??_MenuInit
  3445  0FDE  0879               	movf	??_MenuInit,w
  3446  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0FE1  00E6               	movwf	_g_menu+2
  3449                           
  3450                           ;menu.c: 15: g_menu.items[2].name = "ID3:";
  3451  0FE2  302E               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3452  0FE3  00F9               	movwf	??_MenuInit
  3453  0FE4  0879               	movf	??_MenuInit,w
  3454  0FE5  00E9               	movwf	low ((_g_menu| 0+5))
  3455                           
  3456                           ;menu.c: 16: g_menu.items[2].value = LoadMenuItem(2);
  3457  0FE6  3002               	movlw	2
  3458  0FE7  120A  158A  26DE  120A  158A  	fcall	_LoadMenuItem
  3459  0FEC  00F9               	movwf	??_MenuInit
  3460  0FED  0879               	movf	??_MenuInit,w
  3461  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0FF0  00E8               	movwf	_g_menu+4
  3464                           
  3465                           ;menu.c: 18: g_menu.items[3].name = "ID4:";
  3466  0FF1  3033               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3467  0FF2  00F9               	movwf	??_MenuInit
  3468  0FF3  0879               	movf	??_MenuInit,w
  3469  0FF4  00EB               	movwf	low ((_g_menu| 0+7))
  3470                           
  3471                           ;menu.c: 19: g_menu.items[3].value = LoadMenuItem(3);
  3472  0FF5  3003               	movlw	3
  3473  0FF6  120A  158A  26DE   	fcall	_LoadMenuItem
  3474  0FF9  00F9               	movwf	??_MenuInit
  3475  0FFA  0879               	movf	??_MenuInit,w
  3476  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  3477  0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  3478  0FFD  00EA               	movwf	_g_menu+6
  3479                           
  3480                           ;menu.c: 21: g_menu.index = 0;
  3481  0FFE  01EC               	clrf	_g_menu+8
  3482  0FFF  0008               	return
  3483  1000                     __end_of_MenuInit:	
  3484                           
  3485                           	psect	text14
  3486  0EDE                     __ptext14:	
  3487 ;; *************** function _LoadMenuItem *****************
  3488 ;; Defined at:
  3489 ;;		line 36 in file "menu.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  item            1    wreg     unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  item            1    8[COMMON] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      unsigned char 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       0       0       0       0
  3504 ;;      Locals:         1       0       0       0       0
  3505 ;;      Temps:          2       0       0       0       0
  3506 ;;      Totals:         3       0       0       0       0
  3507 ;;Total ram usage:        3 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    2
  3510 ;; This function calls:
  3511 ;;		_eeprom_read
  3512 ;; This function is called by:
  3513 ;;		_MenuInit
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _LoadMenuItem
  3519  0EDE                     _LoadMenuItem:	
  3520                           
  3521                           ;incstack = 0
  3522                           ; Regs used in _LoadMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3523                           ;LoadMenuItem@item stored from wreg
  3524  0EDE  00F8               	movwf	LoadMenuItem@item
  3525                           
  3526                           ;menu.c: 38: g_menu.items[item].value = eeprom_read(item);
  3527  0EDF  0878               	movf	LoadMenuItem@item,w
  3528  0EE0  120A  158A  272F   	fcall	_eeprom_read
  3529  0EE3  00F6               	movwf	??_LoadMenuItem
  3530  0EE4  0878               	movf	LoadMenuItem@item,w
  3531  0EE5  00F7               	movwf	??_LoadMenuItem+1
  3532  0EE6  0777               	addwf	??_LoadMenuItem+1,w
  3533  0EE7  3E64               	addlw	(low (_g_menu| 0))& (0+255)
  3534  0EE8  0084               	movwf	4
  3535  0EE9  0876               	movf	??_LoadMenuItem,w
  3536  0EEA  1383               	bcf	3,7	;select IRP bank0
  3537  0EEB  0080               	movwf	0
  3538  0EEC  0008               	return
  3539  0EED                     __end_of_LoadMenuItem:	
  3540                           
  3541                           	psect	text15
  3542  0F2F                     __ptext15:	
  3543 ;; *************** function _eeprom_read *****************
  3544 ;; Defined at:
  3545 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  addr            1    wreg     unsigned char 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  addr            1    5[COMMON] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      unsigned char 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       0       0       0       0
  3560 ;;      Locals:         1       0       0       0       0
  3561 ;;      Temps:          1       0       0       0       0
  3562 ;;      Totals:         2       0       0       0       0
  3563 ;;Total ram usage:        2 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    1
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_LoadMenuItem
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           
  3574                           ;psect for function _eeprom_read
  3575  0F2F                     _eeprom_read:	
  3576                           
  3577                           ;incstack = 0
  3578                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3579                           ;eeprom_read@addr stored from wreg
  3580  0F2F  00F5               	movwf	eeprom_read@addr
  3581  0F30                     l298:	
  3582  0F30  0064               	clrwdt	;# 
  3583  0F31  1683               	bsf	3,5	;RP0=1, select bank3
  3584  0F32  1703               	bsf	3,6	;RP1=1, select bank3
  3585  0F33  188C               	btfsc	12,1	;volsfr
  3586  0F34  2F30               	goto	l298
  3587  0F35  0875               	movf	eeprom_read@addr,w
  3588  0F36  1283               	bcf	3,5	;RP0=0, select bank2
  3589  0F37  1703               	bsf	3,6	;RP1=1, select bank2
  3590  0F38  008D               	movwf	13	;volatile
  3591  0F39  303F               	movlw	63
  3592  0F3A  00F4               	movwf	??_eeprom_read
  3593  0F3B  0874               	movf	??_eeprom_read,w
  3594  0F3C  1683               	bsf	3,5	;RP0=1, select bank3
  3595  0F3D  1703               	bsf	3,6	;RP1=1, select bank3
  3596  0F3E  058C               	andwf	12,f	;volsfr
  3597  0F3F  140C               	bsf	12,0	;volsfr
  3598  0F40  1003               	clrc
  3599  0F41  180C               	btfsc	12,0	;volsfr
  3600  0F42  1403               	setc
  3601  0F43  3000               	movlw	0
  3602  0F44  1803               	skipnc
  3603  0F45  3001               	movlw	1
  3604  0F46  1283               	bcf	3,5	;RP0=0, select bank2
  3605  0F47  1703               	bsf	3,6	;RP1=1, select bank2
  3606  0F48  080C               	movf	12,w	;volatile
  3607  0F49  0008               	return
  3608  0F4A                     __end_of_eeprom_read:	
  3609                           
  3610                           	psect	text16
  3611  0EC4                     __ptext16:	
  3612 ;; *************** function _MenuDown *****************
  3613 ;; Defined at:
  3614 ;;		line 51 in file "menu.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2, status,0
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3628 ;;      Params:         0       0       0       0       0
  3629 ;;      Locals:         0       0       0       0       0
  3630 ;;      Temps:          1       0       0       0       0
  3631 ;;      Totals:         1       0       0       0       0
  3632 ;;Total ram usage:        1 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:    1
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_main
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           
  3643                           ;psect for function _MenuDown
  3644  0EC4                     _MenuDown:	
  3645                           
  3646                           ;menu.c: 53: if(g_menu.index == 4 - 1)
  3647                           
  3648                           ;incstack = 0
  3649                           ; Regs used in _MenuDown: [wreg+status,2+status,0]
  3650  0EC4  3003               	movlw	3
  3651  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  3653  0EC7  066C               	xorwf	_g_menu+8,w
  3654  0EC8  1D03               	btfss	3,2
  3655  0EC9  2ECC               	goto	l1952
  3656                           
  3657                           ;menu.c: 54: {
  3658                           ;menu.c: 55: g_menu.index = 0;
  3659  0ECA  01EC               	clrf	_g_menu+8
  3660                           
  3661                           ;menu.c: 56: }
  3662  0ECB  0008               	return
  3663  0ECC                     l1952:	
  3664                           
  3665                           ;menu.c: 57: else
  3666                           ;menu.c: 58: {
  3667                           ;menu.c: 59: g_menu.index++;
  3668  0ECC  3001               	movlw	1
  3669  0ECD  00F4               	movwf	??_MenuDown
  3670  0ECE  0874               	movf	??_MenuDown,w
  3671  0ECF  07EC               	addwf	_g_menu+8,f
  3672  0ED0  0008               	return
  3673  0ED1                     __end_of_MenuDown:	
  3674                           
  3675                           	psect	text17
  3676  0EAF                     __ptext17:	
  3677 ;; *************** function _LCDSetStyle *****************
  3678 ;; Defined at:
  3679 ;;		line 207 in file "lcd_hd44780_pic16.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  style           1    wreg     unsigned char 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  style           1    6[BANK0 ] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       0       0       0
  3694 ;;      Locals:         0       1       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         0       1       0       0       0
  3697 ;;Total ram usage:        1 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    3
  3700 ;; This function calls:
  3701 ;;		_LCDByte
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _LCDSetStyle
  3709  0EAF                     _LCDSetStyle:	
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _LCDSetStyle: [wreg+status,2+status,0+pclath+cstack]
  3713                           ;LCDSetStyle@style stored from wreg
  3714  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0EB1  00A6               	movwf	LCDSetStyle@style
  3717                           
  3718                           ;lcd_hd44780_pic16.c: 209: (LCDByte(0b00001100|style,0));
  3719  0EB2  01F9               	clrf	LCDByte@isdata
  3720  0EB3  0826               	movf	LCDSetStyle@style,w
  3721  0EB4  380C               	iorlw	12
  3722  0EB5  120A  118A  25CA   	fcall	_LCDByte
  3723  0EB8  0008               	return
  3724  0EB9                     __end_of_LCDSetStyle:	
  3725                           
  3726                           	psect	text18
  3727  04B0                     __ptext18:	
  3728 ;; *************** function _LCDInit *****************
  3729 ;; Defined at:
  3730 ;;		line 211 in file "lcd_hd44780_pic16.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  style           1    wreg     unsigned char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  style           1    8[BANK0 ] unsigned char 
  3735 ;;  __i             1    9[BANK0 ] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3745 ;;      Params:         0       0       0       0       0
  3746 ;;      Locals:         0       2       0       0       0
  3747 ;;      Temps:          0       2       0       0       0
  3748 ;;      Totals:         0       4       0       0       0
  3749 ;;Total ram usage:        4 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    3
  3752 ;; This function calls:
  3753 ;;		_LCDBusyLoop
  3754 ;;		_LCDByte
  3755 ;; This function is called by:
  3756 ;;		_main
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           
  3761                           ;psect for function _LCDInit
  3762  04B0                     _LCDInit:	
  3763                           
  3764                           ;incstack = 0
  3765                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3766                           ;LCDInit@style stored from wreg
  3767  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  3768  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  3769  04B2  00A8               	movwf	LCDInit@style
  3770                           
  3771                           ;lcd_hd44780_pic16.c: 213: _delay((unsigned long)((30)*(20000000/4000.0)));
  3772  04B3  30C3               	movlw	195
  3773  04B4  00A7               	movwf	??_LCDInit+1
  3774  04B5  30CD               	movlw	205
  3775  04B6  00A6               	movwf	??_LCDInit
  3776  04B7                     u2357:	
  3777  04B7  0BA6               	decfsz	??_LCDInit,f
  3778  04B8  2CB7               	goto	u2357
  3779  04B9  0BA7               	decfsz	??_LCDInit+1,f
  3780  04BA  2CB7               	goto	u2357
  3781                           
  3782                           ;lcd_hd44780_pic16.c: 216: TRISC&=(~(0x0F<<4));
  3783  04BB  300F               	movlw	15
  3784  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3785  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3786  04BE  00A6               	movwf	??_LCDInit
  3787  04BF  0826               	movf	??_LCDInit,w
  3788  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  3789  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  3790  04C2  0587               	andwf	7,f	;volatile
  3791                           
  3792                           ;lcd_hd44780_pic16.c: 218: TRISCbits.TRISC3=0;
  3793  04C3  1187               	bcf	7,3	;volatile
  3794                           
  3795                           ;lcd_hd44780_pic16.c: 219: TRISCbits.TRISC1=0;
  3796  04C4  1087               	bcf	7,1	;volatile
  3797                           
  3798                           ;lcd_hd44780_pic16.c: 220: TRISCbits.TRISC2=0;
  3799  04C5  1107               	bcf	7,2	;volatile
  3800                           
  3801                           ;lcd_hd44780_pic16.c: 222: PORTC&=(~(0x0F<<4));
  3802  04C6  300F               	movlw	15
  3803  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3804  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3805  04C9  00A6               	movwf	??_LCDInit
  3806  04CA  0826               	movf	??_LCDInit,w
  3807  04CB  0587               	andwf	7,f	;volatile
  3808                           
  3809                           ;lcd_hd44780_pic16.c: 224: (RC3=0);
  3810  04CC  1187               	bcf	7,3	;volatile
  3811                           
  3812                           ;lcd_hd44780_pic16.c: 225: (RC2=0);
  3813  04CD  1107               	bcf	7,2	;volatile
  3814                           
  3815                           ;lcd_hd44780_pic16.c: 226: (RC1=0);
  3816  04CE  1087               	bcf	7,1	;volatile
  3817                           
  3818                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3819  04CF  2CD0               	nop2	;2 cycle nop
  3820                           
  3821                           ;lcd_hd44780_pic16.c: 231: (RC3=1);
  3822  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  3823  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  3824  04D2  1587               	bsf	7,3	;volatile
  3825                           
  3826                           ;lcd_hd44780_pic16.c: 232: PORTC|=((0b00000010)<<4);
  3827  04D3  1687               	bsf	7,5	;volatile
  3828                           
  3829                           ;lcd_hd44780_pic16.c: 233: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3830  04D4  2CD5               	nop2	;2 cycle nop
  3831  04D5  2CD6               	nop2	;2 cycle nop
  3832  04D6  0000               	nop
  3833                           
  3834                           ;lcd_hd44780_pic16.c: 234: (RC3=0);
  3835  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3836  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  3837  04D9  1187               	bcf	7,3	;volatile
  3838                           
  3839                           ;lcd_hd44780_pic16.c: 235: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3840  04DA  2CDB               	nop2	;2 cycle nop
  3841  04DB  2CDC               	nop2	;2 cycle nop
  3842  04DC  0000               	nop
  3843                           
  3844                           ;lcd_hd44780_pic16.c: 238: LCDBusyLoop();
  3845  04DD  120A  118A  244A  120A  118A  	fcall	_LCDBusyLoop
  3846                           
  3847                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b00101000,0));
  3848  04E2  01F9               	clrf	LCDByte@isdata
  3849  04E3  3028               	movlw	40
  3850  04E4  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  3851                           
  3852                           ;lcd_hd44780_pic16.c: 244: (LCDByte(0b00001100|style,0));
  3853  04E9  01F9               	clrf	LCDByte@isdata
  3854  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  3855  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  3856  04EC  0828               	movf	LCDInit@style,w
  3857  04ED  380C               	iorlw	12
  3858  04EE  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  3859                           
  3860                           ;lcd_hd44780_pic16.c: 247: (LCDByte(0b01000000,0));
  3861  04F3  01F9               	clrf	LCDByte@isdata
  3862  04F4  3040               	movlw	64
  3863  04F5  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  3864                           
  3865                           ;lcd_hd44780_pic16.c: 249: uint8_t __i;
  3866                           ;lcd_hd44780_pic16.c: 250: for(__i=0;__i<sizeof(__cgram);__i++)
  3867  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  3868  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  3869  04FC  01A9               	clrf	LCDInit@__i
  3870  04FD                     L4:	
  3871  04FD  3008               	movlw	8
  3872  04FE  0229               	subwf	LCDInit@__i,w
  3873  04FF  1803               	btfsc	3,0
  3874  0500  0008               	return
  3875                           
  3876                           ;lcd_hd44780_pic16.c: 251: (LCDByte(__cgram[__i],1));
  3877  0501  01F9               	clrf	LCDByte@isdata
  3878  0502  0AF9               	incf	LCDByte@isdata,f
  3879  0503  0829               	movf	LCDInit@__i,w
  3880  0504  3E54               	addlw	(low (___cgram| 0))& (0+255)
  3881  0505  0084               	movwf	4
  3882  0506  1383               	bcf	3,7	;select IRP bank0
  3883  0507  0800               	movf	0,w
  3884  0508  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  3885  050D  3001               	movlw	1
  3886  050E  1283               	bcf	3,5	;RP0=0, select bank0
  3887  050F  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0510  00A6               	movwf	??_LCDInit
  3889  0511  0826               	movf	??_LCDInit,w
  3890  0512  07A9               	addwf	LCDInit@__i,f
  3891  0513  2CFD               	goto	L4
  3892  0514                     __end_of_LCDInit:	
  3893                           
  3894                           	psect	text19
  3895  079B                     __ptext19:	
  3896 ;; *************** function _IOInit *****************
  3897 ;; Defined at:
  3898 ;;		line 119 in file "do_am.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		None
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0
  3915 ;;      Totals:         0       0       0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    1
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           
  3927                           ;psect for function _IOInit
  3928  079B                     _IOInit:	
  3929                           
  3930                           ;do_am.c: 122: (TRISAbits.TRISA5 = 1);
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in _IOInit: []
  3934  079B  1683               	bsf	3,5	;RP0=1, select bank1
  3935  079C  1303               	bcf	3,6	;RP1=0, select bank1
  3936  079D  1685               	bsf	5,5	;volatile
  3937                           
  3938                           ;do_am.c: 123: ANSELbits.ANS4 = 0;
  3939  079E  1683               	bsf	3,5	;RP0=1, select bank3
  3940  079F  1703               	bsf	3,6	;RP1=1, select bank3
  3941  07A0  1208               	bcf	8,4	;volatile
  3942                           
  3943                           ;do_am.c: 125: (TRISAbits.TRISA6 = 1);
  3944  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  3945  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  3946  07A3  1705               	bsf	5,6	;volatile
  3947                           
  3948                           ;do_am.c: 128: (TRISAbits.TRISA0 = 1);
  3949  07A4  1405               	bsf	5,0	;volatile
  3950                           
  3951                           ;do_am.c: 129: ANSELbits.ANS0 = 0;
  3952  07A5  1683               	bsf	3,5	;RP0=1, select bank3
  3953  07A6  1703               	bsf	3,6	;RP1=1, select bank3
  3954  07A7  1008               	bcf	8,0	;volatile
  3955                           
  3956                           ;do_am.c: 131: (TRISAbits.TRISA1 = 1);
  3957  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  3958  07A9  1303               	bcf	3,6	;RP1=0, select bank1
  3959  07AA  1485               	bsf	5,1	;volatile
  3960                           
  3961                           ;do_am.c: 132: ANSELbits.ANS1 = 0;
  3962  07AB  1683               	bsf	3,5	;RP0=1, select bank3
  3963  07AC  1703               	bsf	3,6	;RP1=1, select bank3
  3964  07AD  1088               	bcf	8,1	;volatile
  3965                           
  3966                           ;do_am.c: 133: (TRISAbits.TRISA2 = 1);
  3967  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  3968  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  3969  07B0  1505               	bsf	5,2	;volatile
  3970                           
  3971                           ;do_am.c: 134: ANSELbits.ANS2 = 0;
  3972  07B1  1683               	bsf	3,5	;RP0=1, select bank3
  3973  07B2  1703               	bsf	3,6	;RP1=1, select bank3
  3974  07B3  1108               	bcf	8,2	;volatile
  3975                           
  3976                           ;do_am.c: 135: (TRISAbits.TRISA3 = 1);
  3977  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  3978  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  3979  07B6  1585               	bsf	5,3	;volatile
  3980                           
  3981                           ;do_am.c: 136: ANSELbits.ANS3 = 0;
  3982  07B7  1683               	bsf	3,5	;RP0=1, select bank3
  3983  07B8  1703               	bsf	3,6	;RP1=1, select bank3
  3984  07B9  1188               	bcf	8,3	;volatile
  3985                           
  3986                           ;do_am.c: 138: (TRISAbits.TRISA7 = 0);
  3987  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  3988  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  3989  07BC  1385               	bcf	5,7	;volatile
  3990                           
  3991                           ;do_am.c: 140: (TRISBbits.TRISB0 = 0);
  3992  07BD  1006               	bcf	6,0	;volatile
  3993                           
  3994                           ;do_am.c: 141: ANSELHbits.ANS12 = 0;
  3995  07BE  1683               	bsf	3,5	;RP0=1, select bank3
  3996  07BF  1703               	bsf	3,6	;RP1=1, select bank3
  3997  07C0  1209               	bcf	9,4	;volatile
  3998                           
  3999                           ;do_am.c: 143: (TRISBbits.TRISB1 = 0);
  4000  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  4001  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  4002  07C3  1086               	bcf	6,1	;volatile
  4003                           
  4004                           ;do_am.c: 144: ANSELHbits.ANS10 = 0;
  4005  07C4  1683               	bsf	3,5	;RP0=1, select bank3
  4006  07C5  1703               	bsf	3,6	;RP1=1, select bank3
  4007  07C6  1109               	bcf	9,2	;volatile
  4008                           
  4009                           ;do_am.c: 146: (TRISBbits.TRISB2 = 0);
  4010  07C7  1683               	bsf	3,5	;RP0=1, select bank1
  4011  07C8  1303               	bcf	3,6	;RP1=0, select bank1
  4012  07C9  1106               	bcf	6,2	;volatile
  4013                           
  4014                           ;do_am.c: 147: ANSELHbits.ANS8 = 0;
  4015  07CA  1683               	bsf	3,5	;RP0=1, select bank3
  4016  07CB  1703               	bsf	3,6	;RP1=1, select bank3
  4017  07CC  1009               	bcf	9,0	;volatile
  4018                           
  4019                           ;do_am.c: 149: (TRISBbits.TRISB3 = 0);
  4020  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  4021  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  4022  07CF  1186               	bcf	6,3	;volatile
  4023                           
  4024                           ;do_am.c: 150: ANSELHbits.ANS9 = 0;
  4025  07D0  1683               	bsf	3,5	;RP0=1, select bank3
  4026  07D1  1703               	bsf	3,6	;RP1=1, select bank3
  4027  07D2  1089               	bcf	9,1	;volatile
  4028                           
  4029                           ;do_am.c: 152: RA7 = 1;
  4030  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  4031  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  4032  07D5  1785               	bsf	5,7	;volatile
  4033                           
  4034                           ;do_am.c: 155: (TRISBbits.TRISB4 = 1);
  4035  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  4036  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  4037  07D8  1606               	bsf	6,4	;volatile
  4038                           
  4039                           ;do_am.c: 156: ANSELHbits.ANS11 = 0;
  4040  07D9  1683               	bsf	3,5	;RP0=1, select bank3
  4041  07DA  1703               	bsf	3,6	;RP1=1, select bank3
  4042  07DB  1189               	bcf	9,3	;volatile
  4043                           
  4044                           ;do_am.c: 158: (TRISBbits.TRISB6 = 1);
  4045  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  4046  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  4047  07DE  1706               	bsf	6,6	;volatile
  4048                           
  4049                           ;do_am.c: 160: (TRISBbits.TRISB5 = 1);
  4050  07DF  1686               	bsf	6,5	;volatile
  4051                           
  4052                           ;do_am.c: 161: ANSELHbits.ANS13 = 0;
  4053  07E0  1683               	bsf	3,5	;RP0=1, select bank3
  4054  07E1  1703               	bsf	3,6	;RP1=1, select bank3
  4055  07E2  1289               	bcf	9,5	;volatile
  4056                           
  4057                           ;do_am.c: 163: (TRISBbits.TRISB7 = 1);
  4058  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  4059  07E4  1303               	bcf	3,6	;RP1=0, select bank1
  4060  07E5  1786               	bsf	6,7	;volatile
  4061  07E6  0008               	return
  4062  07E7                     __end_of_IOInit:	
  4063                           
  4064                           	psect	text20
  4065  0F96                     __ptext20:	
  4066 ;; *************** function _ClearMenu *****************
  4067 ;; Defined at:
  4068 ;;		line 28 in file "menu.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  i               1   12[BANK0 ] char 
  4073 ;;  count           1   11[BANK0 ] char 
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4083 ;;      Params:         0       0       0       0       0
  4084 ;;      Locals:         0       2       0       0       0
  4085 ;;      Temps:          0       1       0       0       0
  4086 ;;      Totals:         0       3       0       0       0
  4087 ;;Total ram usage:        3 bytes
  4088 ;; Hardware stack levels used:    1
  4089 ;; Hardware stack levels required when called:    4
  4090 ;; This function calls:
  4091 ;;		_LCDByte
  4092 ;;		_LCDGotoXY
  4093 ;;		_LCDWriteString
  4094 ;; This function is called by:
  4095 ;;		_main
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           
  4100                           ;psect for function _ClearMenu
  4101  0F96                     _ClearMenu:	
  4102                           
  4103                           ;menu.c: 30: { LCDGotoXY(0,0); int8_t count = LCDWriteString(""); for(int8_t i = count +
      +                           0; i < 16; i++) { (LCDByte(' ',1)); } };
  4104                           
  4105                           ;incstack = 0
  4106                           ; Regs used in _ClearMenu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4107  0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4108  0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4109  0F98  01A6               	clrf	LCDGotoXY@y
  4110  0F99  3000               	movlw	0
  4111  0F9A  120A  158A  274A  120A  158A  	fcall	_LCDGotoXY
  4112  0F9F  3028               	movlw	(low (((STR_10+4)-__stringbase)| (0+32768)))& (0+255)
  4113  0FA0  120A  118A  256F  120A  158A  	fcall	_LCDWriteString
  4114  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  4115  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  4116  0FA7  00AA               	movwf	??_ClearMenu
  4117  0FA8  082A               	movf	??_ClearMenu,w
  4118  0FA9  00AB               	movwf	ClearMenu@count
  4119  0FAA  082B               	movf	ClearMenu@count,w
  4120  0FAB  00AA               	movwf	??_ClearMenu
  4121  0FAC  082A               	movf	??_ClearMenu,w
  4122  0FAD  00AC               	movwf	ClearMenu@i
  4123  0FAE                     L5:	
  4124  0FAE  082C               	movf	ClearMenu@i,w
  4125  0FAF  3A80               	xorlw	128
  4126  0FB0  3E70               	addlw	-144
  4127  0FB1  1803               	btfsc	3,0
  4128  0FB2  0008               	return
  4129  0FB3  01F9               	clrf	LCDByte@isdata
  4130  0FB4  0AF9               	incf	LCDByte@isdata,f
  4131  0FB5  3020               	movlw	32
  4132  0FB6  120A  118A  25CA  120A  158A  	fcall	_LCDByte
  4133  0FBB  3001               	movlw	1
  4134  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0FBE  00AA               	movwf	??_ClearMenu
  4137  0FBF  082A               	movf	??_ClearMenu,w
  4138  0FC0  07AC               	addwf	ClearMenu@i,f
  4139  0FC1  2FAE               	goto	L5
  4140  0FC2                     __end_of_ClearMenu:	
  4141                           
  4142                           	psect	text21
  4143  056F                     __ptext21:	
  4144 ;; *************** function _LCDWriteString *****************
  4145 ;; Defined at:
  4146 ;;		line 283 in file "lcd_hd44780_pic16.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  msg             1    wreg     PTR const unsigned char 
  4149 ;;		 -> STR_14(1), STR_13(5), STR_12(5), STR_11(5), 
  4150 ;;		 -> STR_10(5), STR_9(5), STR_8(3), STR_7(12), 
  4151 ;;		 -> STR_6(13), STR_5(10), STR_4(10), STR_3(5), 
  4152 ;;		 -> STR_2(1), 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  msg             1    9[BANK0 ] PTR const unsigned char 
  4155 ;;		 -> STR_14(1), STR_13(5), STR_12(5), STR_11(5), 
  4156 ;;		 -> STR_10(5), STR_9(5), STR_8(3), STR_7(12), 
  4157 ;;		 -> STR_6(13), STR_5(10), STR_4(10), STR_3(5), 
  4158 ;;		 -> STR_2(1), 
  4159 ;;  cc              1    8[BANK0 ] char 
  4160 ;;  count           1    7[BANK0 ] char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      char 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4170 ;;      Params:         0       0       0       0       0
  4171 ;;      Locals:         0       3       0       0       0
  4172 ;;      Temps:          0       1       0       0       0
  4173 ;;      Totals:         0       4       0       0       0
  4174 ;;Total ram usage:        4 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    3
  4177 ;; This function calls:
  4178 ;;		_LCDByte
  4179 ;; This function is called by:
  4180 ;;		_main
  4181 ;;		_ShowMenu
  4182 ;;		_ClearMenu
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function _LCDWriteString
  4188  056F                     _LCDWriteString:	
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4192                           ;LCDWriteString@msg stored from wreg
  4193  056F  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0570  1303               	bcf	3,6	;RP1=0, select bank0
  4195  0571  00A9               	movwf	LCDWriteString@msg
  4196                           
  4197                           ;lcd_hd44780_pic16.c: 285: int8_t count = 0;
  4198  0572  01A7               	clrf	LCDWriteString@count
  4199  0573                     l1756:	
  4200                           ;lcd_hd44780_pic16.c: 286: while(*msg!='\0')
  4201                           
  4202  0573  0829               	movf	LCDWriteString@msg,w
  4203  0574  0084               	movwf	4
  4204  0575  120A  118A  2700  120A  118A  	fcall	stringdir
  4205  057A  3A00               	xorlw	0
  4206  057B  1903               	btfsc	3,2
  4207  057C  2DC8               	goto	l1758
  4208                           
  4209                           ;lcd_hd44780_pic16.c: 287: {
  4210                           ;lcd_hd44780_pic16.c: 289: if(*msg=='%')
  4211  057D  0829               	movf	LCDWriteString@msg,w
  4212  057E  0084               	movwf	4
  4213  057F  120A  118A  2700  120A  118A  	fcall	stringdir
  4214  0584  3A25               	xorlw	37
  4215  0585  1D03               	skipz
  4216  0586  2DAF               	goto	l1750
  4217                           
  4218                           ;lcd_hd44780_pic16.c: 290: {
  4219                           ;lcd_hd44780_pic16.c: 291: msg++;
  4220  0587  3001               	movlw	1
  4221  0588  00A6               	movwf	??_LCDWriteString
  4222  0589  0826               	movf	??_LCDWriteString,w
  4223  058A  07A9               	addwf	LCDWriteString@msg,f
  4224                           
  4225                           ;lcd_hd44780_pic16.c: 292: int8_t cc=*msg-'0';
  4226  058B  0829               	movf	LCDWriteString@msg,w
  4227  058C  0084               	movwf	4
  4228  058D  120A  118A  2700  120A  118A  	fcall	stringdir
  4229  0592  3ED0               	addlw	-48
  4230  0593  00A6               	movwf	??_LCDWriteString
  4231  0594  0826               	movf	??_LCDWriteString,w
  4232  0595  00A8               	movwf	LCDWriteString@cc
  4233                           
  4234                           ;lcd_hd44780_pic16.c: 294: if(cc>=0 && cc<=7)
  4235  0596  1BA8               	btfsc	LCDWriteString@cc,7
  4236  0597  2DA1               	goto	l1742
  4237  0598  0828               	movf	LCDWriteString@cc,w
  4238  0599  3A80               	xorlw	128
  4239  059A  3E78               	addlw	-136
  4240  059B  1803               	skipnc
  4241  059C  2DA1               	goto	l1742
  4242                           
  4243                           ;lcd_hd44780_pic16.c: 295: {
  4244                           ;lcd_hd44780_pic16.c: 296: (LCDByte(cc,1));
  4245  059D  01F9               	clrf	LCDByte@isdata
  4246  059E  0AF9               	incf	LCDByte@isdata,f
  4247  059F  0828               	movf	LCDWriteString@cc,w
  4248  05A0  2DB8               	goto	L6
  4249  05A1                     l1742:	
  4250                           ;lcd_hd44780_pic16.c: 298: }
  4251                           
  4252                           ;lcd_hd44780_pic16.c: 297: count++;
  4253                           
  4254                           
  4255                           ;lcd_hd44780_pic16.c: 299: else
  4256                           ;lcd_hd44780_pic16.c: 300: {
  4257                           ;lcd_hd44780_pic16.c: 301: (LCDByte('%',1));
  4258  05A1  01F9               	clrf	LCDByte@isdata
  4259  05A2  0AF9               	incf	LCDByte@isdata,f
  4260  05A3  3025               	movlw	37
  4261  05A4  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  4262                           
  4263                           ;lcd_hd44780_pic16.c: 302: count++;
  4264  05A9  3001               	movlw	1
  4265  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  4266  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  4267  05AC  00A6               	movwf	??_LCDWriteString
  4268  05AD  0826               	movf	??_LCDWriteString,w
  4269  05AE  07A7               	addwf	LCDWriteString@count,f
  4270  05AF                     l1750:	
  4271                           ;lcd_hd44780_pic16.c: 305: }
  4272                           ;lcd_hd44780_pic16.c: 306: }
  4273                           
  4274                           ;lcd_hd44780_pic16.c: 304: count++;
  4275                           
  4276                           ;lcd_hd44780_pic16.c: 303: (LCDByte(*msg,1));
  4277                           
  4278                           
  4279                           ;lcd_hd44780_pic16.c: 307: else
  4280                           ;lcd_hd44780_pic16.c: 308: {
  4281                           ;lcd_hd44780_pic16.c: 309: (LCDByte(*msg,1));
  4282  05AF  01F9               	clrf	LCDByte@isdata
  4283  05B0  0AF9               	incf	LCDByte@isdata,f
  4284  05B1  0829               	movf	LCDWriteString@msg,w
  4285  05B2  0084               	movwf	4
  4286  05B3  120A  118A  2700  120A  118A  	fcall	stringdir
  4287  05B8                     L6:	
  4288  05B8  120A  118A  25CA  120A  118A  	fcall	_LCDByte
  4289                           
  4290                           ;lcd_hd44780_pic16.c: 310: count++;
  4291  05BD  3001               	movlw	1
  4292  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  4293  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  4294  05C0  00A6               	movwf	??_LCDWriteString
  4295  05C1  0826               	movf	??_LCDWriteString,w
  4296  05C2  07A7               	addwf	LCDWriteString@count,f
  4297                           
  4298                           ;lcd_hd44780_pic16.c: 311: }
  4299                           ;lcd_hd44780_pic16.c: 312: msg++;
  4300  05C3  3001               	movlw	1
  4301  05C4  00A6               	movwf	??_LCDWriteString
  4302  05C5  0826               	movf	??_LCDWriteString,w
  4303  05C6  07A9               	addwf	LCDWriteString@msg,f
  4304  05C7  2D73               	goto	l1756
  4305  05C8                     l1758:	
  4306                           
  4307                           ;lcd_hd44780_pic16.c: 313: }
  4308                           ;lcd_hd44780_pic16.c: 315: return count;
  4309  05C8  0827               	movf	LCDWriteString@count,w
  4310  05C9  0008               	return
  4311  05CA                     __end_of_LCDWriteString:	
  4312                           
  4313                           	psect	text22
  4314  0F4A                     __ptext22:	
  4315 ;; *************** function _LCDGotoXY *****************
  4316 ;; Defined at:
  4317 ;;		line 367 in file "lcd_hd44780_pic16.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  x               1    wreg     unsigned char 
  4320 ;;  y               1    6[BANK0 ] unsigned char 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  x               1    8[BANK0 ] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4332 ;;      Params:         0       1       0       0       0
  4333 ;;      Locals:         0       1       0       0       0
  4334 ;;      Temps:          0       1       0       0       0
  4335 ;;      Totals:         0       3       0       0       0
  4336 ;;Total ram usage:        3 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; Hardware stack levels required when called:    3
  4339 ;; This function calls:
  4340 ;;		_LCDByte
  4341 ;; This function is called by:
  4342 ;;		_main
  4343 ;;		_ShowMenu
  4344 ;;		_ClearMenu
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           
  4349                           ;psect for function _LCDGotoXY
  4350  0F4A                     _LCDGotoXY:	
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4354                           ;LCDGotoXY@x stored from wreg
  4355  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0F4C  00A8               	movwf	LCDGotoXY@x
  4358                           
  4359                           ;lcd_hd44780_pic16.c: 369: if(x>=20) return;
  4360  0F4D  3014               	movlw	20
  4361  0F4E  0228               	subwf	LCDGotoXY@x,w
  4362  0F4F  1803               	btfsc	3,0
  4363  0F50  0008               	return
  4364  0F51  2F5B               	goto	l1722
  4365  0F52                     l227:	
  4366                           ;lcd_hd44780_pic16.c: 377: case 1:
  4367                           
  4368                           ;lcd_hd44780_pic16.c: 376: break;
  4369                           
  4370                           ;lcd_hd44780_pic16.c: 374: {
  4371                           ;lcd_hd44780_pic16.c: 375: case 0:
  4372                           
  4373                           ;lcd_hd44780_pic16.c: 373: switch(y)
  4374                           
  4375                           
  4376                           ;lcd_hd44780_pic16.c: 378: x|=0b01000000;
  4377  0F52  1728               	bsf	LCDGotoXY@x,6
  4378                           
  4379                           ;lcd_hd44780_pic16.c: 379: break;
  4380  0F53  2F69               	goto	l226
  4381  0F54                     l1716:	
  4382                           ;lcd_hd44780_pic16.c: 380: case 2:
  4383                           
  4384                           
  4385                           ;lcd_hd44780_pic16.c: 381: x+=0x14;
  4386  0F54  3014               	movlw	20
  4387  0F55  2F57               	goto	L7
  4388  0F56                     l1718:	
  4389                           ;lcd_hd44780_pic16.c: 383: case 3:
  4390                           
  4391                           ;lcd_hd44780_pic16.c: 382: break;
  4392                           
  4393                           
  4394                           ;lcd_hd44780_pic16.c: 384: x+=0x54;
  4395  0F56  3054               	movlw	84
  4396  0F57                     L7:	
  4397  0F57  00A7               	movwf	??_LCDGotoXY
  4398  0F58  0827               	movf	??_LCDGotoXY,w
  4399  0F59  07A8               	addwf	LCDGotoXY@x,f
  4400                           
  4401                           ;lcd_hd44780_pic16.c: 386: }
  4402                           
  4403                           ;lcd_hd44780_pic16.c: 385: break;
  4404  0F5A  2F69               	goto	l226
  4405  0F5B                     l1722:	
  4406  0F5B  0826               	movf	LCDGotoXY@y,w
  4407                           
  4408                           ; Switch size 1, requested type "space"
  4409                           ; Number of cases is 4, Range of values is 0 to 3
  4410                           ; switch strategies available:
  4411                           ; Name         Instructions Cycles
  4412                           ; simple_byte           13     7 (average)
  4413                           ; direct_byte           20     8 (fixed)
  4414                           ; jumptable            260     6 (fixed)
  4415                           ;	Chosen strategy is simple_byte
  4416  0F5C  3A00               	xorlw	0	; case 0
  4417  0F5D  1903               	skipnz
  4418  0F5E  2F69               	goto	l226
  4419  0F5F  3A01               	xorlw	1	; case 1
  4420  0F60  1903               	skipnz
  4421  0F61  2F52               	goto	l227
  4422  0F62  3A03               	xorlw	3	; case 2
  4423  0F63  1903               	skipnz
  4424  0F64  2F54               	goto	l1716
  4425  0F65  3A01               	xorlw	1	; case 3
  4426  0F66  1903               	skipnz
  4427  0F67  2F56               	goto	l1718
  4428  0F68  2F69               	goto	l226
  4429  0F69                     l226:	
  4430                           
  4431                           ;lcd_hd44780_pic16.c: 408: x|=0b10000000;
  4432  0F69  17A8               	bsf	LCDGotoXY@x,7
  4433                           
  4434                           ;lcd_hd44780_pic16.c: 409: (LCDByte(x,0));
  4435  0F6A  01F9               	clrf	LCDByte@isdata
  4436  0F6B  0828               	movf	LCDGotoXY@x,w
  4437  0F6C  120A  118A  25CA   	fcall	_LCDByte
  4438  0F6F  0008               	return
  4439  0F70                     __end_of_LCDGotoXY:	
  4440                           
  4441                           	psect	text23
  4442  05CA                     __ptext23:	
  4443 ;; *************** function _LCDByte *****************
  4444 ;; Defined at:
  4445 ;;		line 80 in file "lcd_hd44780_pic16.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  c               1    wreg     unsigned char 
  4448 ;;  isdata          1    9[COMMON] unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  c               1    4[BANK0 ] unsigned char 
  4451 ;;  temp            1    5[BANK0 ] unsigned char 
  4452 ;;  ln              1    3[BANK0 ] unsigned char 
  4453 ;;  hn              1    2[BANK0 ] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0, pclath, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4463 ;;      Params:         1       0       0       0       0
  4464 ;;      Locals:         0       4       0       0       0
  4465 ;;      Temps:          0       2       0       0       0
  4466 ;;      Totals:         1       6       0       0       0
  4467 ;;Total ram usage:        7 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    2
  4470 ;; This function calls:
  4471 ;;		_LCDBusyLoop
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;;		_LCDSetStyle
  4475 ;;		_LCDInit
  4476 ;;		_LCDWriteString
  4477 ;;		_LCDWriteInt
  4478 ;;		_LCDGotoXY
  4479 ;;		_ShowMenu
  4480 ;;		_ClearMenu
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           
  4485                           ;psect for function _LCDByte
  4486  05CA                     _LCDByte:	
  4487                           
  4488                           ;incstack = 0
  4489                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  4490                           ;LCDByte@c stored from wreg
  4491  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  4492  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  4493  05CC  00A4               	movwf	LCDByte@c
  4494                           
  4495                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  4496                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  4497                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  4498  05CD  0824               	movf	LCDByte@c,w
  4499  05CE  00A0               	movwf	??_LCDByte
  4500  05CF  3004               	movlw	4
  4501  05D0                     u1195:	
  4502  05D0  1003               	clrc
  4503  05D1  0CA0               	rrf	??_LCDByte,f
  4504  05D2  3EFF               	addlw	-1
  4505  05D3  1D03               	skipz
  4506  05D4  2DD0               	goto	u1195
  4507  05D5  0820               	movf	??_LCDByte,w
  4508  05D6  00A1               	movwf	??_LCDByte+1
  4509  05D7  0821               	movf	??_LCDByte+1,w
  4510  05D8  00A2               	movwf	LCDByte@hn
  4511                           
  4512                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  4513  05D9  0824               	movf	LCDByte@c,w
  4514  05DA  390F               	andlw	15
  4515  05DB  00A0               	movwf	??_LCDByte
  4516  05DC  0820               	movf	??_LCDByte,w
  4517  05DD  00A3               	movwf	LCDByte@ln
  4518                           
  4519                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  4520  05DE  0879               	movf	LCDByte@isdata,w
  4521  05DF  1D03               	btfss	3,2
  4522  05E0  2DE3               	goto	l177
  4523                           
  4524                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  4525  05E1  1087               	bcf	7,1	;volatile
  4526  05E2  2DE4               	goto	l178
  4527  05E3                     l177:	
  4528                           
  4529                           ;lcd_hd44780_pic16.c: 97: else
  4530                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  4531  05E3  1487               	bsf	7,1	;volatile
  4532  05E4                     l178:	
  4533                           
  4534                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4535  05E4  2DE5               	nop2	;2 cycle nop
  4536                           
  4537                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  4538  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  4539  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  4540  05E7  1587               	bsf	7,3	;volatile
  4541                           
  4542                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  4543  05E8  0822               	movf	LCDByte@hn,w
  4544  05E9  00A0               	movwf	??_LCDByte
  4545  05EA  3004               	movlw	4
  4546  05EB                     u1215:	
  4547  05EB  1003               	clrc
  4548  05EC  0DA0               	rlf	??_LCDByte,f
  4549  05ED  3EFF               	addlw	-1
  4550  05EE  1D03               	skipz
  4551  05EF  2DEB               	goto	u1215
  4552  05F0  0807               	movf	7,w	;volatile
  4553  05F1  390F               	andlw	15
  4554  05F2  0420               	iorwf	??_LCDByte,w
  4555  05F3  00A1               	movwf	??_LCDByte+1
  4556  05F4  0821               	movf	??_LCDByte+1,w
  4557  05F5  00A5               	movwf	LCDByte@temp
  4558                           
  4559                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  4560  05F6  0825               	movf	LCDByte@temp,w
  4561  05F7  0087               	movwf	7	;volatile
  4562                           
  4563                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4564  05F8  2DF9               	nop2	;2 cycle nop
  4565  05F9  2DFA               	nop2	;2 cycle nop
  4566  05FA  0000               	nop
  4567                           
  4568                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  4569  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  4570  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  4571  05FD  1187               	bcf	7,3	;volatile
  4572                           
  4573                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4574  05FE  2DFF               	nop2	;2 cycle nop
  4575  05FF  2E00               	nop2	;2 cycle nop
  4576  0600  0000               	nop
  4577                           
  4578                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  4579  0601  1283               	bcf	3,5	;RP0=0, select bank0
  4580  0602  1303               	bcf	3,6	;RP1=0, select bank0
  4581  0603  1587               	bsf	7,3	;volatile
  4582                           
  4583                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  4584  0604  0823               	movf	LCDByte@ln,w
  4585  0605  00A0               	movwf	??_LCDByte
  4586  0606  3004               	movlw	4
  4587  0607                     u1225:	
  4588  0607  1003               	clrc
  4589  0608  0DA0               	rlf	??_LCDByte,f
  4590  0609  3EFF               	addlw	-1
  4591  060A  1D03               	skipz
  4592  060B  2E07               	goto	u1225
  4593  060C  0807               	movf	7,w	;volatile
  4594  060D  390F               	andlw	15
  4595  060E  0420               	iorwf	??_LCDByte,w
  4596  060F  00A1               	movwf	??_LCDByte+1
  4597  0610  0821               	movf	??_LCDByte+1,w
  4598  0611  00A5               	movwf	LCDByte@temp
  4599                           
  4600                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  4601  0612  0825               	movf	LCDByte@temp,w
  4602  0613  0087               	movwf	7	;volatile
  4603                           
  4604                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4605  0614  2E15               	nop2	;2 cycle nop
  4606  0615  2E16               	nop2	;2 cycle nop
  4607  0616  0000               	nop
  4608                           
  4609                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  4610  0617  1283               	bcf	3,5	;RP0=0, select bank0
  4611  0618  1303               	bcf	3,6	;RP1=0, select bank0
  4612  0619  1187               	bcf	7,3	;volatile
  4613                           
  4614                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4615  061A  2E1B               	nop2	;2 cycle nop
  4616  061B  2E1C               	nop2	;2 cycle nop
  4617  061C  0000               	nop
  4618                           
  4619                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  4620  061D  120A  118A  244A   	fcall	_LCDBusyLoop
  4621  0620  0008               	return
  4622  0621                     __end_of_LCDByte:	
  4623                           
  4624                           	psect	text24
  4625  044A                     __ptext24:	
  4626 ;; *************** function _LCDBusyLoop *****************
  4627 ;; Defined at:
  4628 ;;		line 135 in file "lcd_hd44780_pic16.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  status          1    8[COMMON] unsigned char 
  4633 ;;  temp            1    7[COMMON] unsigned char 
  4634 ;;  busy            1    6[COMMON] unsigned char 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4644 ;;      Params:         0       0       0       0       0
  4645 ;;      Locals:         3       0       0       0       0
  4646 ;;      Temps:          2       0       0       0       0
  4647 ;;      Totals:         5       0       0       0       0
  4648 ;;Total ram usage:        5 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    1
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_LCDByte
  4655 ;;		_LCDInit
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           
  4660                           ;psect for function _LCDBusyLoop
  4661  044A                     _LCDBusyLoop:	
  4662                           
  4663                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4664                           
  4665                           ;incstack = 0
  4666                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  4667  044A  01F8               	clrf	LCDBusyLoop@status
  4668                           
  4669                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  4670  044B  30F0               	movlw	240
  4671  044C  00F4               	movwf	??_LCDBusyLoop
  4672  044D  0874               	movf	??_LCDBusyLoop,w
  4673  044E  1683               	bsf	3,5	;RP0=1, select bank1
  4674  044F  1303               	bcf	3,6	;RP1=0, select bank1
  4675  0450  0487               	iorwf	7,f	;volatile
  4676                           
  4677                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  4678  0451  1283               	bcf	3,5	;RP0=0, select bank0
  4679  0452  1303               	bcf	3,6	;RP1=0, select bank0
  4680  0453  1507               	bsf	7,2	;volatile
  4681                           
  4682                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  4683  0454  1087               	bcf	7,1	;volatile
  4684                           
  4685                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4686  0455  2C56               	nop2	;2 cycle nop
  4687  0456                     l1508:	
  4688                           ;lcd_hd44780_pic16.c: 153: do
  4689                           
  4690                           
  4691                           ;lcd_hd44780_pic16.c: 154: {
  4692                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  4693  0456  1283               	bcf	3,5	;RP0=0, select bank0
  4694  0457  1303               	bcf	3,6	;RP1=0, select bank0
  4695  0458  1587               	bsf	7,3	;volatile
  4696                           
  4697                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4698  0459  2C5A               	nop2	;2 cycle nop
  4699                           
  4700                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  4701  045A  1283               	bcf	3,5	;RP0=0, select bank0
  4702  045B  1303               	bcf	3,6	;RP1=0, select bank0
  4703  045C  0807               	movf	7,w	;volatile
  4704  045D  00F4               	movwf	??_LCDBusyLoop
  4705  045E  3004               	movlw	4
  4706  045F                     u1155:	
  4707  045F  1003               	clrc
  4708  0460  0CF4               	rrf	??_LCDBusyLoop,f
  4709  0461  3EFF               	addlw	-1
  4710  0462  1D03               	skipz
  4711  0463  2C5F               	goto	u1155
  4712  0464  0874               	movf	??_LCDBusyLoop,w
  4713  0465  00F5               	movwf	??_LCDBusyLoop+1
  4714  0466  0875               	movf	??_LCDBusyLoop+1,w
  4715  0467  00F8               	movwf	LCDBusyLoop@status
  4716                           
  4717                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4718  0468  0878               	movf	LCDBusyLoop@status,w
  4719  0469  00F4               	movwf	??_LCDBusyLoop
  4720  046A  3003               	movlw	3
  4721  046B                     u1165:	
  4722  046B  1003               	clrc
  4723  046C  0DF4               	rlf	??_LCDBusyLoop,f
  4724  046D  3EFF               	addlw	-1
  4725  046E  1D03               	skipz
  4726  046F  2C6B               	goto	u1165
  4727  0470  1003               	clrc
  4728  0471  0D74               	rlf	??_LCDBusyLoop,w
  4729  0472  00F5               	movwf	??_LCDBusyLoop+1
  4730  0473  0875               	movf	??_LCDBusyLoop+1,w
  4731  0474  00F8               	movwf	LCDBusyLoop@status
  4732                           
  4733                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4734  0475  2C76               	nop2	;2 cycle nop
  4735                           
  4736                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  4737  0476  1283               	bcf	3,5	;RP0=0, select bank0
  4738  0477  1303               	bcf	3,6	;RP1=0, select bank0
  4739  0478  1187               	bcf	7,3	;volatile
  4740                           
  4741                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4742  0479  2C7A               	nop2	;2 cycle nop
  4743  047A  2C7B               	nop2	;2 cycle nop
  4744  047B  0000               	nop
  4745                           
  4746                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  4747  047C  1283               	bcf	3,5	;RP0=0, select bank0
  4748  047D  1303               	bcf	3,6	;RP1=0, select bank0
  4749  047E  1587               	bsf	7,3	;volatile
  4750                           
  4751                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4752  047F  2C80               	nop2	;2 cycle nop
  4753                           
  4754                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  4755  0480  1283               	bcf	3,5	;RP0=0, select bank0
  4756  0481  1303               	bcf	3,6	;RP1=0, select bank0
  4757  0482  0807               	movf	7,w	;volatile
  4758  0483  00F4               	movwf	??_LCDBusyLoop
  4759  0484  3004               	movlw	4
  4760  0485                     u1175:	
  4761  0485  1003               	clrc
  4762  0486  0CF4               	rrf	??_LCDBusyLoop,f
  4763  0487  3EFF               	addlw	-1
  4764  0488  1D03               	skipz
  4765  0489  2C85               	goto	u1175
  4766  048A  0874               	movf	??_LCDBusyLoop,w
  4767  048B  00F5               	movwf	??_LCDBusyLoop+1
  4768  048C  0875               	movf	??_LCDBusyLoop+1,w
  4769  048D  00F7               	movwf	LCDBusyLoop@temp
  4770                           
  4771                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  4772  048E  300F               	movlw	15
  4773  048F  00F4               	movwf	??_LCDBusyLoop
  4774  0490  0874               	movf	??_LCDBusyLoop,w
  4775  0491  05F7               	andwf	LCDBusyLoop@temp,f
  4776                           
  4777                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  4778  0492  0878               	movf	LCDBusyLoop@status,w
  4779  0493  0477               	iorwf	LCDBusyLoop@temp,w
  4780  0494  00F4               	movwf	??_LCDBusyLoop
  4781  0495  0874               	movf	??_LCDBusyLoop,w
  4782  0496  00F8               	movwf	LCDBusyLoop@status
  4783                           
  4784                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  4785  0497  0878               	movf	LCDBusyLoop@status,w
  4786  0498  3980               	andlw	128
  4787  0499  00F4               	movwf	??_LCDBusyLoop
  4788  049A  0874               	movf	??_LCDBusyLoop,w
  4789  049B  00F6               	movwf	LCDBusyLoop@busy
  4790                           
  4791                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4792  049C  2C9D               	nop2	;2 cycle nop
  4793                           
  4794                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  4795  049D  1283               	bcf	3,5	;RP0=0, select bank0
  4796  049E  1303               	bcf	3,6	;RP1=0, select bank0
  4797  049F  1187               	bcf	7,3	;volatile
  4798                           
  4799                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4800  04A0  2CA1               	nop2	;2 cycle nop
  4801  04A1  2CA2               	nop2	;2 cycle nop
  4802  04A2  0000               	nop
  4803                           
  4804                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  4805  04A3  0876               	movf	LCDBusyLoop@busy,w
  4806  04A4  1D03               	btfss	3,2
  4807  04A5  2C56               	goto	l1508
  4808                           
  4809                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  4810  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  4811  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  4812  04A8  1107               	bcf	7,2	;volatile
  4813                           
  4814                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  4815  04A9  300F               	movlw	15
  4816  04AA  00F4               	movwf	??_LCDBusyLoop
  4817  04AB  0874               	movf	??_LCDBusyLoop,w
  4818  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  4819  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  4820  04AE  0587               	andwf	7,f	;volatile
  4821  04AF  0008               	return
  4822  04B0                     __end_of_LCDBusyLoop:	
  4823                           
  4824                           	psect	text25
  4825  07E7                     __ptext25:	
  4826 ;; *************** function _ADCInit *****************
  4827 ;; Defined at:
  4828 ;;		line 7 in file "adc_pic16.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0
  4845 ;;      Totals:         0       0       0       0       0
  4846 ;;Total ram usage:        0 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function _ADCInit
  4858  07E7                     _ADCInit:	
  4859                           
  4860                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  4864  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  4865  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  4866  07E9  1686               	bsf	6,5	;volatile
  4867                           
  4868                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  4869  07EA  1683               	bsf	3,5	;RP0=1, select bank3
  4870  07EB  1703               	bsf	3,6	;RP1=1, select bank3
  4871  07EC  1689               	bsf	9,5	;volatile
  4872                           
  4873                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  4874  07ED  1683               	bsf	3,5	;RP0=1, select bank1
  4875  07EE  1303               	bcf	3,6	;RP1=0, select bank1
  4876  07EF  121F               	bcf	31,4	;volatile
  4877                           
  4878                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  4879  07F0  30C0               	movlw	192
  4880  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  4881  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  4882  07F3  049F               	iorwf	31,f	;volatile
  4883                           
  4884                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  4885  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  4886  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  4887  07F6  179F               	bsf	31,7	;volatile
  4888                           
  4889                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  4890  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  4891  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  4892  07F9  141F               	bsf	31,0	;volatile
  4893  07FA  0008               	return
  4894  07FB                     __end_of_ADCInit:	
  4895                           
  4896                           	psect	text26
  4897  0EB9                     __ptext26:	
  4898 ;; *************** function _ISR *****************
  4899 ;; Defined at:
  4900 ;;		line 166 in file "do_am.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		None
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0
  4916 ;;      Temps:          4       0       0       0       0
  4917 ;;      Totals:         4       0       0       0       0
  4918 ;;Total ram usage:        4 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		Interrupt level 1
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           
  4928                           ;psect for function _ISR
  4929  0EB9                     _ISR:	
  4930  0EB9  0873               	movf	??_ISR+3,w
  4931  0EBA  00FF               	movwf	127
  4932  0EBB  0872               	movf	??_ISR+2,w
  4933  0EBC  008A               	movwf	10
  4934  0EBD  0871               	movf	??_ISR+1,w
  4935  0EBE  0084               	movwf	4
  4936  0EBF  0E70               	swapf	??_ISR^(0+-128),w
  4937  0EC0  0083               	movwf	3
  4938  0EC1  0EFE               	swapf	126,f
  4939  0EC2  0E7E               	swapf	126,w
  4940  0EC3  0009               	retfie
  4941  0EC4                     __end_of_ISR:	
  4942  007E                     btemp	set	126	;btemp
  4943  007E                     wtemp	set	126
  4944  007E                     wtemp0	set	126
  4945  0080                     wtemp1	set	128
  4946  0082                     wtemp2	set	130
  4947  0084                     wtemp3	set	132
  4948  0086                     wtemp4	set	134
  4949  0088                     wtemp5	set	136
  4950  007F                     wtemp6	set	127
  4951  007E                     ttemp	set	126
  4952  007E                     ttemp0	set	126
  4953  0081                     ttemp1	set	129
  4954  0084                     ttemp2	set	132
  4955  0087                     ttemp3	set	135
  4956  007F                     ttemp4	set	127
  4957  007E                     ltemp	set	126
  4958  007E                     ltemp0	set	126
  4959  0082                     ltemp1	set	130
  4960  0086                     ltemp2	set	134
  4961  0080                     ltemp3	set	128
  4962                           
  4963                           	psect	intentry
  4964  0004                     __pintentry:	
  4965                           ;incstack = 0
  4966                           ; Regs used in _ISR: []
  4967                           
  4968  0004                     interrupt_function:	
  4969  007E                     saved_w	set	btemp
  4970  0004  00FE               	movwf	btemp
  4971  0005  0E03               	swapf	3,w
  4972  0006  00F0               	movwf	??_ISR
  4973  0007  0804               	movf	4,w
  4974  0008  00F1               	movwf	??_ISR+1
  4975  0009  080A               	movf	10,w
  4976  000A  00F2               	movwf	??_ISR+2
  4977  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4978  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4979  000D  087F               	movf	btemp+1,w
  4980  000E  00F3               	movwf	??_ISR+3
  4981  000F  120A  158A  2EB9   	ljmp	_ISR


Data Sizes:
    Strings     72
    Constant    0
    Data        16
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     52      77
    BANK1            80      0      23
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    S524$name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 

    g_menu.items.name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_14(CODE[1]), STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), 
		 -> STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[3]), STR_7(CODE[12]), 
		 -> STR_6(CODE[13]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[5]), 
		 -> STR_2(CODE[1]), 

    main@byte_411	PTR struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    main@byte	PTR struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    main@s	PTR unsigned char  size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    pmsg	PTR struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    sp__memcpy	PTR void  size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    compose@data	PTR unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    compose@pmsg	PTR struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 

    crc_calculate@pmsg	PTR struct . size(1) Largest target is 23
		 -> msg(BANK1[23]), 


Critical Paths under _main in COMMON

    _main->_LCDByte
    _main->_MenuInit
    _compose->_crc_calculate
    _ValueInc->_SaveMenuItem
    _ValueDec->_SaveMenuItem
    _SaveMenuItem->_eeprom_write
    _ShowMenu->_LCDByte
    _LCDWriteInt->_LCDByte
    _MenuInit->_LoadMenuItem
    _LoadMenuItem->_eeprom_read
    _LCDSetStyle->_LCDByte
    _LCDInit->_LCDByte
    _ClearMenu->_LCDByte
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ShowMenu
    _compose->_crc_calculate
    _ShowMenu->_LCDWriteInt
    _LCDWriteInt->_LCDByte
    _LCDSetStyle->_LCDByte
    _LCDInit->_LCDByte
    _ClearMenu->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0   31703
                                             26 BANK0     26    26      0
                            _ADCInit
                          _ClearMenu
                             _IOInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDSetStyle
                        _LCDWriteInt
                     _LCDWriteString
                           _MenuDown
                           _MenuInit
                             _MenuUp
                           _ShowMenu
                           _ValueDec
                           _ValueInc
                            _compose
 ---------------------------------------------------------------------------------
 (1) _compose                                             11     5      6    1333
                                              4 BANK0     11     5      6
                      _crc_calculate
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     278
                                              4 COMMON     4     1      3
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _crc_calculate                                        9     7      2     288
                                              4 COMMON     5     3      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ValueInc                                             2     2      0     152
                                              0 BANK0      2     2      0
                       _SaveMenuItem
 ---------------------------------------------------------------------------------
 (1) _ValueDec                                             1     1      0     152
                                              0 BANK0      1     1      0
                       _SaveMenuItem
 ---------------------------------------------------------------------------------
 (2) _SaveMenuItem                                         3     3      0     152
                                              7 COMMON     3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     108
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _ShowMenu                                             6     6      0    9562
                                             20 BANK0      6     6      0
                            _LCDByte
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    3164
                                              6 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     424
                                              4 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              4 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _MenuUp                                               1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MenuInit                                             1     1      0      66
                                              9 COMMON     1     1      0
                       _LoadMenuItem
 ---------------------------------------------------------------------------------
 (2) _LoadMenuItem                                         3     3      0      66
                                              6 COMMON     3     3      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MenuDown                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDSetStyle                                          1     1      0    1705
                                              6 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1890
                                              6 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _IOInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearMenu                                            3     3      0    6398
                                             10 BANK0      3     3      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       4     4      0    2189
                                              6 BANK0      4     4      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    2457
                                              6 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1    1683
                                              9 COMMON     1     0      1
                                              0 BANK0      6     6      0
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (4) _LCDBusyLoop                                          5     5      0     117
                                              4 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _ClearMenu
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _IOInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDSetStyle
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _MenuDown
   _MenuInit
     _LoadMenuItem
       _eeprom_read
   _MenuUp
   _ShowMenu
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _ValueDec
     _SaveMenuItem
       _eeprom_write
   _ValueInc
     _SaveMenuItem
       _eeprom_write
   _compose
     _crc_calculate
     _memcpy

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      17       7       28.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6E      12        0.0%
ABS                  0      0      6E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jun 25 17:10:04 2016

            ?_LCDBusyLoop 0070                __CFG_CP$ON 0000                         pc 0002  
                      _RD 0C60               __CFG_CPD$ON 0000                        _WR 0C61  
            ___awdiv@sign 0021                        fsr 0004              ?_LCDSetStyle 0070  
             __CFG_LVP$ON 0000                       l320 0F71                       l136 0237  
                     l226 0F69                       l227 0F52                       l139 0271  
                     l177 05E3                       l178 05E4                       l298 0F30  
                     _GIE 005F                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RC1 0039                       _RB3 0033  
                     _RA5 002D                       _RC2 003A                       _RB4 0034  
                     _RC3 003B                       _RB5 0035                       _RA7 002F  
                     _RB6 0036                       _RB7 0037                       _ISR 0EB9  
                     _msg 00A0                       fsr0 0004           __end_of_ADCInit 07FB  
                     indf 0000              ___awmod@sign 0021              __CFG_IESO$ON 0000  
 LCDWriteInt@field_length 0028           __end_of_LCDByte 0621           __end_of_LCDInit 0514  
            ?_LCDWriteInt 0026                      ?_ISR 0070               LCDByte@temp 0025  
                    l2100 0240                      l2006 0103                      l2032 014B  
                    l2016 007E                      l2026 0138                      l2018 011C  
                    l2140 02C8                      l2132 02B7                      l2108 025E  
                    l2116 0278                      l2142 02CD                      l2126 02A4  
                    l2118 0288                      l2054 01AE                      l2038 017C  
                    l2152 0304                      l2080 0202                      l2072 01E6  
                    l2048 019B                      l2138 02C3                      l2066 01D3  
                    l2058 01B5                      l1508 0456                      l1612 052B  
                    l2164 0323                      l2092 0224                      l1630 0557  
                    l1622 0533                      l1606 0520                      l1710 06D0  
                    l2166 0328                      l2158 0317                      l2078 01F2  
                    l1624 0541                      l2168 032D                      l1722 0F5B  
                    l1634 0562                      l1650 075A                      l1716 0F54  
                    l1718 0F56                      l1742 05A1                      l1750 05AF  
                    l1638 056A                      l1662 0767                      l1654 0761  
                    l1664 0775                      l1672 078E                      l1914 0658  
                    l1756 0573                      l1676 0796                      l1668 0783  
                    l1908 0645                      l1758 05C8                      l1942 0EDB  
                    l1952 0ECC                      l1784 036B                      l1696 041A  
                    l1794 03B5                      l1786 03A0                      l1698 0443  
                    l1974 02DC             ?_LoadMenuItem 0070                      l1992 00BA  
                    l1984 0096                      l1976 0079                      l1986 00A2  
                    l1988 00AE                      STR_1 0747              __CFG_WDTE$ON 0000  
                    STR_2 072D                      STR_3 073D                      STR_4 071F  
                    STR_5 0709                      STR_6 0706                      STR_7 0713  
                    STR_8 074B                      STR_9 0742                      u1215 05EB  
                    u1225 0607                      u1305 0536                      u1155 045F  
                    u1165 046B                      u1325 0542                      u1405 076A  
                    u1175 0485                      u1335 054E                      u1345 0558  
                    u1425 077B                      u1195 05D0                      u1435 0784  
                    u2307 0174                      u1700 009F                      u2317 01FA  
                    u2327 0280                      u1720 00AB                      u1465 042A  
                    u2337 02D5                      u2347 0335                      u1820 00B7  
                    u2357 04B7                      u1575 03C2                      u2287 00C7  
                    u1920 00DC                      u1680 0093                      u2297 0110  
                    u1940 00E8                      u1934 00DF                      u1960 00F4  
                    u1954 00EB                      u1980 0100                      u1974 00F7  
                    _WREN 0C62            ??_eeprom_write 0075              __CFG_WRT$OFF 0000  
           __CFG_FCMEN$ON 0000                      _main 0035                      _mode 0061  
      __size_of_LCDGotoXY 0026                      _pmsg 0062                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0012  
                    ttemp 007E                      wtemp 007E             __CFG_MCLRE$ON 0000  
                   ??_ISR 0070               compose@data 0028               compose@from 0024  
             compose@pmsg 002E                     ?_main 0070           __end_of___awdiv 056F  
            main@byte_411 0053                     _EEADR 010D                     STR_10 0729  
                   STR_11 072E                     STR_12 0733                     STR_13 0738  
                   STR_14 072D           __end_of___awmod 079B                     _CARRY 0018  
            LCDInit@style 0028           ___awdiv@divisor 0074           ___awdiv@counter 0020  
                   _PORTC 0007                     _TRISC 0087           __end_of_compose 06C5  
          ??_LoadMenuItem 0076                     main@i 0051                     main@s 0049  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __initialization 0015              __end_of_main 033D          __end_of_MenuDown 0ED1  
        __end_of_MenuInit 1000                 ??_ADCInit 0074        __size_of_ClearMenu 002C  
                  ??_main 003A         __end_of_LCDGotoXY 0F70             LCDByte@isdata 0079  
               ??_LCDByte 0020                 ??_LCDInit 0026          __end_of_ValueDec 0700  
        __end_of_ValueInc 0F1E          __end_of_ShowMenu 0676              compose@msgid 0026  
                  _ADRESH 001E             main@count_431 0043             main@count_440 0046  
           main@count_434 0044                    _ADRESL 009E             main@count_443 0047  
           main@count_437 0045             main@count_446 0048                    _EEDATA 010C  
                  _EECON1 018C                    _EECON2 018D          ___awdiv@dividend 0076  
                  _IOInit 079B            __CFG_PWRTE$OFF 0000                    _MenuUp 0ED1  
          _LCDWriteString 056F      __size_of_eeprom_read 001B                 ??___awdiv 0078  
               ??___awmod 0078                    _g_menu 0064                    _memcpy 06C5  
    __size_of_LCDBusyLoop 0066          ___awdiv@quotient 0022           ___awmod@divisor 0074  
    __end_of_eeprom_write 0F96           ___awmod@counter 0020                 ??_compose 002A  
           ?_SaveMenuItem 0070      __size_of_LCDSetStyle 000A              LCDWriteInt@i 0032  
            LCDWriteInt@j 0030                    saved_w 007E         __end_of_ClearMenu 0FC2  
    __size_of_LCDWriteInt 009F   __end_of__initialization 0031           eeprom_read@addr 0075  
  __end_of_LCDWriteString 05CA                 LCDByte@hn 0022                 LCDByte@ln 0023  
          __pcstackCOMMON 0070              __pidataBANK0 0EFD          crc_calculate@crc 0020  
    __end_of_LoadMenuItem 0EED     __end_of_crc_calculate 044A            ??_SaveMenuItem 0077  
       eeprom_write@value 0074                __pbssBANK0 0064                __pbssBANK1 00A0  
                 ?_IOInit 0070                 ?_MenuDown 0070                 ?_MenuInit 0070  
         ?_LCDWriteString 0070                   ?_MenuUp 0070                 ?_ValueDec 0070  
               ?_ValueInc 0070                __pmaintext 0035                 ?_ShowMenu 0070  
              __pintentry 0004                   ?_memcpy 0074                   _ADCInit 07E7  
        SaveMenuItem@item 0079            ClearMenu@count 002B                   _LCDByte 05CA  
                 _LCDInit 04B0                __stringtab 0700          LCDSetStyle@style 0026  
              ??_MenuDown 0074                ??_MenuInit 0079           __size_of_IOInit 004C  
              ??_ValueDec 0020           __size_of_MenuUp 000D                ??_ValueInc 0020  
              ??_ShowMenu 0034     __size_of_eeprom_write 0026                   ___cgram 0054  
                 ___awdiv 0514                   ___awmod 074E           __size_of_memcpy 002C  
               _ANSELbits 0188                   __ptext1 0676                   __ptext2 06C5  
                 __ptext3 03DC                   __ptext4 0F0D                   __ptext5 06F1  
                 __ptext6 0EED                   __ptext7 0F70                   __ptext8 0621  
                 __ptext9 033D                   _compose 0676              __size_of_ISR 000B  
        ___awmod@dividend 0076                 _LCDGotoXY 0F4A                   _submode 0063  
                 clrloop0 0EA8      end_of_initialization 0031                   memcpy@d 0021  
                 memcpy@n 0075                   memcpy@s 0022              _eeprom_write 0F70  
    __end_of_SaveMenuItem 0EFD     __size_of_LoadMenuItem 000F         LCDWriteString@msg 0029  
               _TRISAbits 0085                 _TRISBbits 0086                 _TRISCbits 0087  
              ?_LCDGotoXY 0026              _LoadMenuItem 0EDE                LCDInit@__i 0029  
           ??_eeprom_read 0074                LCDGotoXY@x 0028                LCDGotoXY@y 0026  
          __end_of_IOInit 07E7          LoadMenuItem@item 0078                 _ClearMenu 0F96  
           ??_LCDBusyLoop 0074            __end_of_MenuUp 0EDE                compose@cmd 0027  
              compose@len 002C         crc_calculate@pmsg 0023             ??_LCDSetStyle 007A  
          __end_of_memcpy 06F1       start_initialization 0015               __end_of_ISR 0EC4  
          crc_calculate@i 0022             ??_LCDWriteInt 0029          ??_LCDWriteString 0026  
           ShowMenu@count 0038                  ??_IOInit 0074  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       __size_of_MenuDown 000D         __size_of_MenuInit 003E                ?_ClearMenu 0070  
                ??_MenuUp 0074                 ShowMenu@i 0039       __end_of_eeprom_read 0F4A  
              init_fetch0 0F1E         __size_of_ValueDec 000F         __size_of_ValueInc 0011  
             __pdataBANK0 0054         __size_of_ShowMenu 0055                  ??_memcpy 0077  
                ?_ADCInit 0070       __end_of_LCDBusyLoop 04B0                  ?_LCDByte 0079  
                ?_LCDInit 0070                  LCDByte@c 0024                 ___latbits 0002  
           __pcstackBANK0 0020               ??_LCDGotoXY 0027       __end_of_LCDSetStyle 0EB9  
   __size_of_SaveMenuItem 0010            compose@datalen 0029          eeprom_write@addr 0076  
        LCDWriteInt@F1646 005C       __end_of_LCDWriteInt 03DC    __size_of_crc_calculate 006E  
                ?___awdiv 0074                  ?___awmod 0074                 __pstrings 0700  
                ?_compose 0024              _SaveMenuItem 0EED           LCDBusyLoop@busy 0076  
         LCDBusyLoop@temp 0077         interrupt_function 0004                 clear_ram0 0EA7  
             _eeprom_read 0F2F               ??_ClearMenu 002A               _LCDBusyLoop 044A  
        LCDWriteString@cc 0028          __size_of_ADCInit 0014                _ADCON0bits 001F  
             __stringbase 0705                _ADCON1bits 009F                 main@i_433 004B  
               main@i_442 004E                 main@i_436 004C                 main@i_445 004F  
               main@i_429 004A                 main@i_439 004D                 main@i_448 0050  
             _LCDSetStyle 0EAF             _crc_calculate 03DC                 main@count 0042  
               main@sendc 0040          __size_of_LCDByte 0057          __size_of_LCDInit 0064  
               compose@to 0025               _LCDWriteInt 033D                  _MenuDown 0EC4  
                _MenuInit 0FC2                  _ValueDec 06F1                  _ValueInc 0F0D  
                _ShowMenu 0621          __size_of___awdiv 005B          __size_of___awmod 004D  
       LCDBusyLoop@status 0078        __end_of__stringtab 0706            ?_crc_calculate 0074  
              _ANSELHbits 0189          __size_of_compose 004F                  __ptext10 074E  
                __ptext11 0514                  __ptext20 0F96                  __ptext12 0ED1  
                __ptext21 056F                  __ptext13 0FC2                  __ptext22 0F4A  
                __ptext14 0EDE                  __ptext23 05CA                  __ptext15 0F2F  
                __ptext24 044A                  __ptext16 0EC4                  __ptext25 07E7  
                __ptext17 0EAF                  __ptext26 0EB9                  __ptext18 04B0  
                __ptext19 079B         __CFG_BOR4V$BOR21V 0000             __size_of_main 0308  
                main@byte 0052                  main@revc 0041                ClearMenu@i 002C  
                memcpy@d1 0020                  memcpy@s1 0074                  init_ram0 0F22  
                intlevel1 0000            LCDWriteInt@val 0026            LCDWriteInt@str 002B  
               stringcode 0700           ??_crc_calculate 0076                  stringdir 0700  
                stringtab 0700       LCDWriteString@count 0027             ?_eeprom_write 0074  
            ?_eeprom_read 0070   __size_of_LCDWriteString 005B  
