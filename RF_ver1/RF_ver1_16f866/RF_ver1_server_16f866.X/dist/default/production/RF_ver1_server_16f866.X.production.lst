

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Jun 22 00:00:40 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     	;# 
    43  0001                     	;# 
    44  0002                     	;# 
    45  0003                     	;# 
    46  0004                     	;# 
    47  0005                     	;# 
    48  0006                     	;# 
    49  0007                     	;# 
    50  0009                     	;# 
    51  000A                     	;# 
    52  000B                     	;# 
    53  000C                     	;# 
    54  000D                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0013                     	;# 
    62  0014                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001D                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  0086                     	;# 
    79  0087                     	;# 
    80  0089                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  008F                     	;# 
    85  0090                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  0105                     	;# 
   104  0107                     	;# 
   105  0108                     	;# 
   106  0109                     	;# 
   107  010C                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  0185                     	;# 
   113  0187                     	;# 
   114  0188                     	;# 
   115  0189                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  008F                     	;# 
   161  0090                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0093                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0097                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  0105                     	;# 
   180  0107                     	;# 
   181  0108                     	;# 
   182  0109                     	;# 
   183  010C                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  0185                     	;# 
   189  0187                     	;# 
   190  0188                     	;# 
   191  0189                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0009                     	;# 
   203  000A                     	;# 
   204  000B                     	;# 
   205  000C                     	;# 
   206  000D                     	;# 
   207  000E                     	;# 
   208  000E                     	;# 
   209  000F                     	;# 
   210  0010                     	;# 
   211  0011                     	;# 
   212  0012                     	;# 
   213  0013                     	;# 
   214  0014                     	;# 
   215  0015                     	;# 
   216  0015                     	;# 
   217  0016                     	;# 
   218  0017                     	;# 
   219  0018                     	;# 
   220  0019                     	;# 
   221  001A                     	;# 
   222  001B                     	;# 
   223  001B                     	;# 
   224  001C                     	;# 
   225  001D                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  0081                     	;# 
   229  0085                     	;# 
   230  0086                     	;# 
   231  0087                     	;# 
   232  0089                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  008E                     	;# 
   236  008F                     	;# 
   237  0090                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0093                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0095                     	;# 
   245  0096                     	;# 
   246  0097                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009A                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  0105                     	;# 
   256  0107                     	;# 
   257  0108                     	;# 
   258  0109                     	;# 
   259  010C                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  0185                     	;# 
   265  0187                     	;# 
   266  0188                     	;# 
   267  0189                     	;# 
   268  018C                     	;# 
   269  018D                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  000E                     	;# 
   285  000F                     	;# 
   286  0010                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0014                     	;# 
   291  0015                     	;# 
   292  0015                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001B                     	;# 
   300  001C                     	;# 
   301  001D                     	;# 
   302  001E                     	;# 
   303  001F                     	;# 
   304  0081                     	;# 
   305  0085                     	;# 
   306  0086                     	;# 
   307  0087                     	;# 
   308  0089                     	;# 
   309  008C                     	;# 
   310  008D                     	;# 
   311  008E                     	;# 
   312  008F                     	;# 
   313  0090                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0093                     	;# 
   317  0093                     	;# 
   318  0093                     	;# 
   319  0094                     	;# 
   320  0095                     	;# 
   321  0096                     	;# 
   322  0097                     	;# 
   323  0098                     	;# 
   324  0099                     	;# 
   325  009A                     	;# 
   326  009B                     	;# 
   327  009C                     	;# 
   328  009D                     	;# 
   329  009E                     	;# 
   330  009F                     	;# 
   331  0105                     	;# 
   332  0107                     	;# 
   333  0108                     	;# 
   334  0109                     	;# 
   335  010C                     	;# 
   336  010C                     	;# 
   337  010D                     	;# 
   338  010E                     	;# 
   339  010F                     	;# 
   340  0185                     	;# 
   341  0187                     	;# 
   342  0188                     	;# 
   343  0189                     	;# 
   344  018C                     	;# 
   345  018D                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  0009                     	;# 
   355  000A                     	;# 
   356  000B                     	;# 
   357  000C                     	;# 
   358  000D                     	;# 
   359  000E                     	;# 
   360  000E                     	;# 
   361  000F                     	;# 
   362  0010                     	;# 
   363  0011                     	;# 
   364  0012                     	;# 
   365  0013                     	;# 
   366  0014                     	;# 
   367  0015                     	;# 
   368  0015                     	;# 
   369  0016                     	;# 
   370  0017                     	;# 
   371  0018                     	;# 
   372  0019                     	;# 
   373  001A                     	;# 
   374  001B                     	;# 
   375  001B                     	;# 
   376  001C                     	;# 
   377  001D                     	;# 
   378  001E                     	;# 
   379  001F                     	;# 
   380  0081                     	;# 
   381  0085                     	;# 
   382  0086                     	;# 
   383  0087                     	;# 
   384  0089                     	;# 
   385  008C                     	;# 
   386  008D                     	;# 
   387  008E                     	;# 
   388  008F                     	;# 
   389  0090                     	;# 
   390  0091                     	;# 
   391  0092                     	;# 
   392  0093                     	;# 
   393  0093                     	;# 
   394  0093                     	;# 
   395  0094                     	;# 
   396  0095                     	;# 
   397  0096                     	;# 
   398  0097                     	;# 
   399  0098                     	;# 
   400  0099                     	;# 
   401  009A                     	;# 
   402  009B                     	;# 
   403  009C                     	;# 
   404  009D                     	;# 
   405  009E                     	;# 
   406  009F                     	;# 
   407  0105                     	;# 
   408  0107                     	;# 
   409  0108                     	;# 
   410  0109                     	;# 
   411  010C                     	;# 
   412  010C                     	;# 
   413  010D                     	;# 
   414  010E                     	;# 
   415  010F                     	;# 
   416  0185                     	;# 
   417  0187                     	;# 
   418  0188                     	;# 
   419  0189                     	;# 
   420  018C                     	;# 
   421  018D                     	;# 
   422                           
   423                           	psect	idataBANK0
   424  0F94                     __pidataBANK0:	
   425                           
   426                           ;initializer for ___cgram
   427  0F94  340C               	retlw	12
   428  0F95  3412               	retlw	18
   429  0F96  3412               	retlw	18
   430  0F97  340C               	retlw	12
   431  0F98  3400               	retlw	0
   432  0F99  3400               	retlw	0
   433  0F9A  3400               	retlw	0
   434  0F9B  3400               	retlw	0
   435                           
   436                           ;initializer for LCDWriteInt@F1646
   437  0F9C  34F0               	retlw	240
   438  0F9D  34F0               	retlw	240
   439  0F9E  34F0               	retlw	240
   440  0F9F  34F0               	retlw	240
   441  0FA0  34F0               	retlw	240
   442                           
   443                           ;initializer for _mode
   444  0FA1  3401               	retlw	1
   445                           
   446                           ;initializer for _pmsg
   447  0FA2  34A0               	retlw	low (_msg| 0)
   448                           
   449                           ;initializer for _submode
   450  0FA3  3401               	retlw	1
   451  001F                     _ADCON0bits	set	31
   452  001E                     _ADRESH	set	30
   453  0007                     _PORTC	set	7
   454  0018                     _CARRY	set	24
   455  005F                     _GIE	set	95
   456  002E                     _RA6	set	46
   457  002F                     _RA7	set	47
   458  0030                     _RB0	set	48
   459  0031                     _RB1	set	49
   460  0032                     _RB2	set	50
   461  0033                     _RB3	set	51
   462  0034                     _RB4	set	52
   463  0035                     _RB5	set	53
   464  0036                     _RB6	set	54
   465  0037                     _RB7	set	55
   466  0039                     _RC1	set	57
   467  003A                     _RC2	set	58
   468  003B                     _RC3	set	59
   469  009F                     _ADCON1bits	set	159
   470  009E                     _ADRESL	set	158
   471  0085                     _TRISAbits	set	133
   472  0086                     _TRISBbits	set	134
   473  0087                     _TRISC	set	135
   474  0087                     _TRISCbits	set	135
   475  010D                     _EEADR	set	269
   476  010C                     _EEDATA	set	268
   477  0189                     _ANSELHbits	set	393
   478  0188                     _ANSELbits	set	392
   479  018C                     _EECON1	set	396
   480  018D                     _EECON2	set	397
   481  0C60                     _RD	set	3168
   482  0C61                     _WR	set	3169
   483  0C62                     _WREN	set	3170
   484                           
   485                           	psect	strings
   486  0606                     __pstrings:	
   487  0606                     stringtab:	
   488  0606                     __stringtab:	
   489  0606                     stringcode:	
   490                           ;	String table - string pointers are 1 byte each
   491                           
   492  0606                     stringdir:	
   493  0606  3006               	movlw	high stringdir
   494  0607  008A               	movwf	10
   495  0608  0804               	movf	4,w
   496  0609  0A84               	incf	4,f
   497  060A  0782               	addwf	2,f
   498  060B                     __stringbase:	
   499  060B  3400               	retlw	0
   500  060C                     __end_of__stringtab:	
   501  060C                     STR_6:	
   502  060C  344E               	retlw	78	;'N'
   503  060D  344F               	retlw	79	;'O'
   504  060E  3454               	retlw	84	;'T'
   505  060F  3445               	retlw	69	;'E'
   506  0610  3444               	retlw	68	;'D'
   507  0611  3449               	retlw	73	;'I'
   508  0612  3454               	retlw	84	;'T'
   509  0613  3420               	retlw	32	;' '
   510  0614  344D               	retlw	77	;'M'
   511  0615  344F               	retlw	79	;'O'
   512  0616  3444               	retlw	68	;'D'
   513  0617  3445               	retlw	69	;'E'
   514  0618  3400               	retlw	0
   515  0619                     STR_7:	
   516  0619  344E               	retlw	78	;'N'
   517  061A  344F               	retlw	79	;'O'
   518  061B  3452               	retlw	82	;'R'
   519  061C  344D               	retlw	77	;'M'
   520  061D  3441               	retlw	65	;'A'
   521  061E  344C               	retlw	76	;'L'
   522  061F  3420               	retlw	32	;' '
   523  0620  344D               	retlw	77	;'M'
   524  0621  344F               	retlw	79	;'O'
   525  0622  3444               	retlw	68	;'D'
   526  0623  3445               	retlw	69	;'E'
   527  0624  3400               	retlw	0
   528  0625                     STR_4:	
   529  0625  344D               	retlw	77	;'M'
   530  0626  3445               	retlw	69	;'E'
   531  0627  344E               	retlw	78	;'N'
   532  0628  3455               	retlw	85	;'U'
   533  0629  3420               	retlw	32	;' '
   534  062A  344D               	retlw	77	;'M'
   535  062B  344F               	retlw	79	;'O'
   536  062C  3444               	retlw	68	;'D'
   537  062D  3445               	retlw	69	;'E'
   538  062E  3400               	retlw	0
   539  062F                     STR_10:	
   540  062F  3449               	retlw	73	;'I'
   541  0630  3444               	retlw	68	;'D'
   542  0631  3431               	retlw	49	;'1'
   543  0632  343A               	retlw	58	;':'
   544  0633  3400               	retlw	0
   545  0634                     STR_11:	
   546  0634  3449               	retlw	73	;'I'
   547  0635  3444               	retlw	68	;'D'
   548  0636  3432               	retlw	50	;'2'
   549  0637  343A               	retlw	58	;':'
   550  0638  3400               	retlw	0
   551  0639                     STR_12:	
   552  0639  3449               	retlw	73	;'I'
   553  063A  3444               	retlw	68	;'D'
   554  063B  3433               	retlw	51	;'3'
   555  063C  343A               	retlw	58	;':'
   556  063D  3400               	retlw	0
   557  063E                     STR_13:	
   558  063E  3449               	retlw	73	;'I'
   559  063F  3444               	retlw	68	;'D'
   560  0640  3434               	retlw	52	;'4'
   561  0641  343A               	retlw	58	;':'
   562  0642  3400               	retlw	0
   563  0643                     STR_3:	
   564  0643  3453               	retlw	83	;'S'
   565  0644  344E               	retlw	78	;'N'
   566  0645  3444               	retlw	68	;'D'
   567  0646  343A               	retlw	58	;':'
   568  0647  3400               	retlw	0
   569  0648                     STR_9:	
   570  0648  3444               	retlw	68	;'D'
   571  0649  344F               	retlw	79	;'O'
   572  064A  3457               	retlw	87	;'W'
   573  064B  344E               	retlw	78	;'N'
   574  064C  3400               	retlw	0
   575  064D                     STR_1:	
   576  064D  3461               	retlw	97	;'a'
   577  064E  3462               	retlw	98	;'b'
   578  064F  3463               	retlw	99	;'c'
   579  0650  3400               	retlw	0
   580  0651                     STR_8:	
   581  0651  3455               	retlw	85	;'U'
   582  0652  3450               	retlw	80	;'P'
   583  0653  3400               	retlw	0
   584  0633                     
   585                           ; #config settings
   586  0000                     
   587                           	psect	cinit
   588  0015                     start_initialization:	
   589  0015                     __initialization:	
   590                           
   591                           ; Clear objects allocated to BANK0
   592  0015  1383               	bcf	3,7	;select IRP bank0
   593  0016  3063               	movlw	low __pbssBANK0
   594  0017  0084               	movwf	4
   595  0018  306C               	movlw	low (__pbssBANK0+9)
   596  0019  120A  158A  272F  120A  118A  	fcall	clear_ram0
   597                           
   598                           ; Clear objects allocated to BANK1
   599  001E  30A0               	movlw	low __pbssBANK1
   600  001F  0084               	movwf	4
   601  0020  30B5               	movlw	low (__pbssBANK1+21)
   602  0021  120A  158A  272F  120A  118A  	fcall	clear_ram0
   603                           
   604                           ; Initialize objects allocated to BANK0
   605  0026  3063               	movlw	low (__pdataBANK0+16)
   606  0027  00FD               	movwf	btemp+-1
   607  0028  300F               	movlw	high __pidataBANK0
   608  0029  00FE               	movwf	btemp
   609  002A  3094               	movlw	low __pidataBANK0
   610  002B  00FF               	movwf	btemp+1
   611  002C  3053               	movlw	low __pdataBANK0
   612  002D  0084               	movwf	4
   613  002E  120A  158A  27B9   	fcall	init_ram0
   614  0031                     end_of_initialization:	
   615                           ;End of C runtime variable initialization code
   616                           
   617  0031                     __end_of__initialization:	
   618  0031  0183               	clrf	3
   619  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   620                           
   621                           	psect	bssBANK0
   622  0063                     __pbssBANK0:	
   623  0063                     _g_menu:	
   624  0063                     	ds	9
   625                           
   626                           	psect	dataBANK0
   627  0053                     __pdataBANK0:	
   628  0053                     ___cgram:	
   629  0053                     	ds	8
   630  005B                     LCDWriteInt@F1646:	
   631  005B                     	ds	5
   632  0060                     _mode:	
   633  0060                     	ds	1
   634  0061                     _pmsg:	
   635  0061                     	ds	1
   636  0062                     _submode:	
   637  0062                     	ds	1
   638                           
   639                           	psect	bssBANK1
   640  00A0                     __pbssBANK1:	
   641  00A0                     _msg:	
   642  00A0                     	ds	21
   643                           
   644                           	psect	clrtext
   645  0F2F                     clear_ram0:	
   646                           ;	Called with FSR containing the base address, and
   647                           ;	W with the last address+1
   648                           
   649  0F2F  0064               	clrwdt	;clear the watchdog before getting into this loop
   650  0F30                     clrloop0:	
   651  0F30  0180               	clrf	0	;clear RAM location pointed to by FSR
   652  0F31  0A84               	incf	4,f	;increment pointer
   653  0F32  0604               	xorwf	4,w	;XOR with final address
   654  0F33  1903               	btfsc	3,2	;have we reached the end yet?
   655  0F34  3400               	retlw	0	;all done for this memory range, return
   656  0F35  0604               	xorwf	4,w	;XOR again to restore value
   657  0F36  2F30               	goto	clrloop0	;do the next byte
   658                           
   659                           	psect	inittext
   660  0FB5                     init_fetch0:	
   661                           ;	Called with low address in FSR and high address in W
   662                           
   663  0FB5  087E               	movf	126,w
   664  0FB6  008A               	movwf	10
   665  0FB7  087F               	movf	127,w
   666  0FB8  0082               	movwf	2
   667  0FB9                     init_ram0:	
   668                           ;Called with:
   669                           ;	high address of idata address in btemp 
   670                           ;	low address of idata address in btemp+1 
   671                           ;	low address of data in FSR
   672                           ;	high address + 1 of data in btemp-1
   673                           
   674  0FB9  27B5  120A  158A   	fcall	init_fetch0
   675  0FBC  0080               	movwf	0
   676  0FBD  0A84               	incf	4,f
   677  0FBE  0804               	movf	4,w
   678  0FBF  067D               	xorwf	125,w
   679  0FC0  1903               	btfsc	3,2
   680  0FC1  3400               	retlw	0
   681  0FC2  0AFF               	incf	127,f
   682  0FC3  1903               	btfsc	3,2
   683  0FC4  0AFE               	incf	126,f
   684  0FC5  2FB9               	goto	init_ram0
   685                           
   686                           	psect	cstackCOMMON
   687  0070                     __pcstackCOMMON:	
   688  0070                     ?_LCDInit:	
   689  0070                     ?_MenuInit:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_LCDWriteString:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_ShowMenu:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_LCDSetStyle:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_ClearMenu:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_ValueInc:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_MenuUp:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_MenuDown:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_LCDBusyLoop:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_LoadMenuItem:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_eeprom_read:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_ADCInit:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_IOInit:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_ISR:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ??_ISR:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_main:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_SaveMenuItem:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_ValueDec:	
   741                           ; 1 bytes @ 0x0
   742                           
   743                           
   744                           ; 2 bytes @ 0x0
   745  0070                     	ds	4
   746  0074                     ?_memcpy:	
   747  0074                     ??_MenuUp:	
   748                           ; 1 bytes @ 0x4
   749                           
   750  0074                     ??_MenuDown:	
   751                           ; 1 bytes @ 0x4
   752                           
   753  0074                     ??_LCDBusyLoop:	
   754                           ; 1 bytes @ 0x4
   755                           
   756  0074                     ?_eeprom_write:	
   757                           ; 1 bytes @ 0x4
   758                           
   759  0074                     ??_eeprom_read:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0074                     ??_ADCInit:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0074                     ??_IOInit:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  0074                     ?___awdiv:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     ?___awmod:	
   772                           ; 2 bytes @ 0x4
   773                           
   774  0074                     eeprom_write@value:	
   775                           ; 2 bytes @ 0x4
   776                           
   777  0074                     memcpy@s1:	
   778                           ; 1 bytes @ 0x4
   779                           
   780  0074                     ___awdiv@divisor:	
   781                           ; 1 bytes @ 0x4
   782                           
   783  0074                     ___awmod@divisor:	
   784                           ; 2 bytes @ 0x4
   785                           
   786                           
   787                           ; 2 bytes @ 0x4
   788  0074                     	ds	1
   789  0075                     ??_eeprom_write:	
   790  0075                     eeprom_read@addr:	
   791                           ; 1 bytes @ 0x5
   792                           
   793  0075                     memcpy@n:	
   794                           ; 1 bytes @ 0x5
   795                           
   796                           
   797                           ; 2 bytes @ 0x5
   798  0075                     	ds	1
   799  0076                     ??_LoadMenuItem:	
   800  0076                     LCDBusyLoop@busy:	
   801                           ; 1 bytes @ 0x6
   802                           
   803  0076                     eeprom_write@addr:	
   804                           ; 1 bytes @ 0x6
   805                           
   806  0076                     ___awdiv@dividend:	
   807                           ; 1 bytes @ 0x6
   808                           
   809  0076                     ___awmod@dividend:	
   810                           ; 2 bytes @ 0x6
   811                           
   812                           
   813                           ; 2 bytes @ 0x6
   814  0076                     	ds	1
   815  0077                     ??_memcpy:	
   816  0077                     ??_SaveMenuItem:	
   817                           ; 1 bytes @ 0x7
   818                           
   819  0077                     LCDBusyLoop@temp:	
   820                           ; 1 bytes @ 0x7
   821                           
   822                           
   823                           ; 1 bytes @ 0x7
   824  0077                     	ds	1
   825  0078                     ??_compose:	
   826  0078                     ??___awdiv:	
   827                           ; 1 bytes @ 0x8
   828                           
   829  0078                     ??___awmod:	
   830                           ; 1 bytes @ 0x8
   831                           
   832  0078                     LCDBusyLoop@status:	
   833                           ; 1 bytes @ 0x8
   834                           
   835  0078                     LoadMenuItem@item:	
   836                           ; 1 bytes @ 0x8
   837                           
   838                           
   839                           ; 1 bytes @ 0x8
   840  0078                     	ds	1
   841  0079                     ??_MenuInit:	
   842  0079                     ?_LCDByte:	
   843                           ; 1 bytes @ 0x9
   844                           
   845  0079                     LCDByte@isdata:	
   846                           ; 1 bytes @ 0x9
   847                           
   848  0079                     SaveMenuItem@item:	
   849                           ; 1 bytes @ 0x9
   850                           
   851                           
   852                           ; 1 bytes @ 0x9
   853  0079                     	ds	1
   854  007A                     ??_LCDSetStyle:	
   855                           
   856                           	psect	cstackBANK0
   857  0020                     __pcstackBANK0:	
   858                           ; 1 bytes @ 0xA
   859                           
   860  0020                     ??_LCDByte:	
   861  0020                     ??_ValueInc:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0020                     ??_ValueDec:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0020                     ___awdiv@counter:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0020                     ___awmod@counter:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0020                     memcpy@d1:	
   874                           ; 1 bytes @ 0x0
   875                           
   876                           
   877                           ; 1 bytes @ 0x0
   878  0020                     	ds	1
   879  0021                     ___awdiv@sign:	
   880  0021                     ___awmod@sign:	
   881                           ; 1 bytes @ 0x1
   882                           
   883  0021                     memcpy@d:	
   884                           ; 1 bytes @ 0x1
   885                           
   886                           
   887                           ; 1 bytes @ 0x1
   888  0021                     	ds	1
   889  0022                     LCDByte@hn:	
   890  0022                     memcpy@s:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0022                     ___awdiv@quotient:	
   894                           ; 1 bytes @ 0x2
   895                           
   896                           
   897                           ; 2 bytes @ 0x2
   898  0022                     	ds	1
   899  0023                     ?_compose:	
   900  0023                     compose@from:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0023                     LCDByte@ln:	
   904                           ; 1 bytes @ 0x3
   905                           
   906                           
   907                           ; 1 bytes @ 0x3
   908  0023                     	ds	1
   909  0024                     compose@to:	
   910  0024                     LCDByte@c:	
   911                           ; 1 bytes @ 0x4
   912                           
   913                           
   914                           ; 1 bytes @ 0x4
   915  0024                     	ds	1
   916  0025                     compose@msgid:	
   917  0025                     LCDByte@temp:	
   918                           ; 1 bytes @ 0x5
   919                           
   920                           
   921                           ; 1 bytes @ 0x5
   922  0025                     	ds	1
   923  0026                     ??_LCDInit:	
   924  0026                     ?_LCDGotoXY:	
   925                           ; 1 bytes @ 0x6
   926                           
   927  0026                     ??_LCDWriteString:	
   928                           ; 1 bytes @ 0x6
   929                           
   930  0026                     ?_LCDWriteInt:	
   931                           ; 1 bytes @ 0x6
   932                           
   933  0026                     compose@cmd:	
   934                           ; 1 bytes @ 0x6
   935                           
   936  0026                     LCDSetStyle@style:	
   937                           ; 1 bytes @ 0x6
   938                           
   939  0026                     LCDGotoXY@y:	
   940                           ; 1 bytes @ 0x6
   941                           
   942  0026                     LCDWriteInt@val:	
   943                           ; 1 bytes @ 0x6
   944                           
   945                           
   946                           ; 2 bytes @ 0x6
   947  0026                     	ds	1
   948  0027                     ??_LCDGotoXY:	
   949  0027                     compose@data:	
   950                           ; 1 bytes @ 0x7
   951                           
   952  0027                     LCDWriteString@count:	
   953                           ; 1 bytes @ 0x7
   954                           
   955                           
   956                           ; 1 bytes @ 0x7
   957  0027                     	ds	1
   958  0028                     compose@datalen:	
   959  0028                     LCDInit@style:	
   960                           ; 1 bytes @ 0x8
   961                           
   962  0028                     LCDWriteString@cc:	
   963                           ; 1 bytes @ 0x8
   964                           
   965  0028                     LCDWriteInt@field_length:	
   966                           ; 1 bytes @ 0x8
   967                           
   968  0028                     LCDGotoXY@x:	
   969                           ; 1 bytes @ 0x8
   970                           
   971                           
   972                           ; 1 bytes @ 0x8
   973  0028                     	ds	1
   974  0029                     ??_LCDWriteInt:	
   975  0029                     LCDInit@__i:	
   976                           ; 1 bytes @ 0x9
   977                           
   978  0029                     LCDWriteString@msg:	
   979                           ; 1 bytes @ 0x9
   980                           
   981  0029                     compose@len:	
   982                           ; 1 bytes @ 0x9
   983                           
   984                           
   985                           ; 2 bytes @ 0x9
   986  0029                     	ds	1
   987  002A                     ??_ClearMenu:	
   988                           
   989                           ; 1 bytes @ 0xA
   990  002A                     	ds	1
   991  002B                     compose@pmsg:	
   992  002B                     ClearMenu@count:	
   993                           ; 1 bytes @ 0xB
   994                           
   995  002B                     LCDWriteInt@str:	
   996                           ; 1 bytes @ 0xB
   997                           
   998                           
   999                           ; 5 bytes @ 0xB
  1000  002B                     	ds	1
  1001  002C                     ClearMenu@i:	
  1002                           
  1003                           ; 1 bytes @ 0xC
  1004  002C                     	ds	4
  1005  0030                     LCDWriteInt@j:	
  1006                           
  1007                           ; 2 bytes @ 0x10
  1008  0030                     	ds	2
  1009  0032                     LCDWriteInt@i:	
  1010                           
  1011                           ; 2 bytes @ 0x12
  1012  0032                     	ds	2
  1013  0034                     ??_ShowMenu:	
  1014                           
  1015                           ; 1 bytes @ 0x14
  1016  0034                     	ds	4
  1017  0038                     ShowMenu@count:	
  1018                           
  1019                           ; 1 bytes @ 0x18
  1020  0038                     	ds	1
  1021  0039                     ShowMenu@i:	
  1022                           
  1023                           ; 1 bytes @ 0x19
  1024  0039                     	ds	1
  1025  003A                     ??_main:	
  1026                           
  1027                           ; 1 bytes @ 0x1A
  1028  003A                     	ds	6
  1029  0040                     main@count:	
  1030                           
  1031                           ; 1 bytes @ 0x20
  1032  0040                     	ds	1
  1033  0041                     main@count_400:	
  1034                           
  1035                           ; 1 bytes @ 0x21
  1036  0041                     	ds	1
  1037  0042                     main@count_404:	
  1038                           
  1039                           ; 1 bytes @ 0x22
  1040  0042                     	ds	1
  1041  0043                     main@count_407:	
  1042                           
  1043                           ; 1 bytes @ 0x23
  1044  0043                     	ds	1
  1045  0044                     main@count_410:	
  1046                           
  1047                           ; 1 bytes @ 0x24
  1048  0044                     	ds	1
  1049  0045                     main@count_413:	
  1050                           
  1051                           ; 1 bytes @ 0x25
  1052  0045                     	ds	1
  1053  0046                     main@count_416:	
  1054                           
  1055                           ; 1 bytes @ 0x26
  1056  0046                     	ds	1
  1057  0047                     main@count_419:	
  1058                           
  1059                           ; 1 bytes @ 0x27
  1060  0047                     	ds	1
  1061  0048                     main@s:	
  1062                           
  1063                           ; 1 bytes @ 0x28
  1064  0048                     	ds	1
  1065  0049                     main@i_402:	
  1066                           
  1067                           ; 1 bytes @ 0x29
  1068  0049                     	ds	1
  1069  004A                     main@i_406:	
  1070                           
  1071                           ; 1 bytes @ 0x2A
  1072  004A                     	ds	1
  1073  004B                     main@i_409:	
  1074                           
  1075                           ; 1 bytes @ 0x2B
  1076  004B                     	ds	1
  1077  004C                     main@i_412:	
  1078                           
  1079                           ; 1 bytes @ 0x2C
  1080  004C                     	ds	1
  1081  004D                     main@i_415:	
  1082                           
  1083                           ; 1 bytes @ 0x2D
  1084  004D                     	ds	1
  1085  004E                     main@i_418:	
  1086                           
  1087                           ; 1 bytes @ 0x2E
  1088  004E                     	ds	1
  1089  004F                     main@i_421:	
  1090                           
  1091                           ; 1 bytes @ 0x2F
  1092  004F                     	ds	1
  1093  0050                     main@i:	
  1094                           
  1095                           ; 1 bytes @ 0x30
  1096  0050                     	ds	1
  1097  0051                     main@byte:	
  1098                           
  1099                           ; 1 bytes @ 0x31
  1100  0051                     	ds	1
  1101  0052                     main@byte_385:	
  1102                           
  1103                           ; 1 bytes @ 0x32
  1104  0052                     	ds	1
  1105                           
  1106                           	psect	maintext
  1107  0035                     __pmaintext:	
  1108 ;;
  1109 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1110 ;;
  1111 ;; *************** function _main *****************
  1112 ;; Defined at:
  1113 ;;		line 180 in file "do_am.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  byte            1   50[BANK0 ] PTR struct .
  1118 ;;		 -> msg(21), 
  1119 ;;  byte            1   49[BANK0 ] PTR struct .
  1120 ;;		 -> msg(21), 
  1121 ;;  i               1   45[BANK0 ] char 
  1122 ;;  i               1   44[BANK0 ] char 
  1123 ;;  count           1   37[BANK0 ] char 
  1124 ;;  count           1   36[BANK0 ] char 
  1125 ;;  i               1   43[BANK0 ] char 
  1126 ;;  i               1   42[BANK0 ] char 
  1127 ;;  i               1   47[BANK0 ] char 
  1128 ;;  i               1   46[BANK0 ] char 
  1129 ;;  count           1   35[BANK0 ] char 
  1130 ;;  count           1   34[BANK0 ] char 
  1131 ;;  count           1   39[BANK0 ] char 
  1132 ;;  count           1   38[BANK0 ] char 
  1133 ;;  i               1   41[BANK0 ] char 
  1134 ;;  i               1   48[BANK0 ] unsigned char 
  1135 ;;  count           1   33[BANK0 ] char 
  1136 ;;  s               1   40[BANK0 ] PTR unsigned char 
  1137 ;;		 -> msg(21), 
  1138 ;;  count           1   32[BANK0 ] unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : B00/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       0       0       0       0
  1149 ;;      Locals:         0      19       0       0       0
  1150 ;;      Temps:          0       6       0       0       0
  1151 ;;      Totals:         0      25       0       0       0
  1152 ;;Total ram usage:       25 bytes
  1153 ;; Hardware stack levels required when called:    5
  1154 ;; This function calls:
  1155 ;;		_ADCInit
  1156 ;;		_ClearMenu
  1157 ;;		_IOInit
  1158 ;;		_LCDByte
  1159 ;;		_LCDGotoXY
  1160 ;;		_LCDInit
  1161 ;;		_LCDSetStyle
  1162 ;;		_LCDWriteInt
  1163 ;;		_LCDWriteString
  1164 ;;		_MenuDown
  1165 ;;		_MenuInit
  1166 ;;		_MenuUp
  1167 ;;		_ShowMenu
  1168 ;;		_ValueDec
  1169 ;;		_ValueInc
  1170 ;;		_compose
  1171 ;; This function is called by:
  1172 ;;		Startup code after reset
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _main
  1178  0035                     _main:	
  1179                           
  1180                           ;do_am.c: 183: LCDInit(0B00000000);
  1181                           
  1182                           ;incstack = 0
  1183                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1184  0035  3000               	movlw	0
  1185  0036  120A  118A  2440  120A  118A  	fcall	_LCDInit
  1186                           
  1187                           ;do_am.c: 186: ADCInit();
  1188  003B  120A  158A  27C6  120A  118A  	fcall	_ADCInit
  1189                           
  1190                           ;do_am.c: 189: IOInit();
  1191  0040  120A  118A  26A1  120A  118A  	fcall	_IOInit
  1192                           
  1193                           ;do_am.c: 191: MenuInit();
  1194  0045  120A  118A  2725  120A  118A  	fcall	_MenuInit
  1195                           
  1196                           ;do_am.c: 197: (LCDByte(0b00000001,0));
  1197  004A  01F9               	clrf	LCDByte@isdata
  1198  004B  3001               	movlw	1
  1199  004C  120A  118A  255A  120A  118A  	fcall	_LCDByte
  1200                           
  1201                           ;do_am.c: 199: compose(pmsg, 123, 456, 789, 012, "abc", 3);
  1202  0051  307B               	movlw	123
  1203  0052  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0053  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0054  00BA               	movwf	??_main
  1206  0055  083A               	movf	??_main,w
  1207  0056  00A3               	movwf	compose@from
  1208  0057  30C8               	movlw	200
  1209  0058  00BB               	movwf	??_main+1
  1210  0059  083B               	movf	??_main+1,w
  1211  005A  00A4               	movwf	compose@to
  1212  005B  3015               	movlw	21
  1213  005C  00BC               	movwf	??_main+2
  1214  005D  083C               	movf	??_main+2,w
  1215  005E  00A5               	movwf	compose@msgid
  1216  005F  300A               	movlw	10
  1217  0060  00BD               	movwf	??_main+3
  1218  0061  083D               	movf	??_main+3,w
  1219  0062  00A6               	movwf	compose@cmd
  1220  0063  3042               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1221  0064  00BE               	movwf	??_main+4
  1222  0065  083E               	movf	??_main+4,w
  1223  0066  00A7               	movwf	compose@data
  1224  0067  3003               	movlw	3
  1225  0068  00BF               	movwf	??_main+5
  1226  0069  083F               	movf	??_main+5,w
  1227  006A  00A8               	movwf	compose@datalen
  1228  006B  0861               	movf	_pmsg,w
  1229  006C  120A  118A  26E7  120A  118A  	fcall	_compose
  1230                           
  1231                           ;do_am.c: 200: uint8_t count = 0;
  1232  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0073  01C0               	clrf	main@count
  1235  0074  2ADA               	goto	l1905
  1236  0075                     l1907:	
  1237                           
  1238                           ;do_am.c: 204: {
  1239                           ;do_am.c: 205: {uint8_t *s = (uint8_t *)pmsg; { for(char i = 0; i < pmsg->msglen; i++) {
      +                           { { { BITbits_t *byte = (BITbits_t *)&s[i]; if(1 == 1) { RB0 = byte->B0; RB1 = byte->B1
      +                          ; RB2 = byte->B2; RB3 = byte->B3; } else { RB0 = byte->B4; RB1 = byte->B5; RB2 = byte->B
      +                          6
  1240  0075  0861               	movf	_pmsg,w
  1241  0076  00BA               	movwf	??_main
  1242  0077  083A               	movf	??_main,w
  1243  0078  00C8               	movwf	main@s
  1244  0079  01D0               	clrf	main@i
  1245  007A                     l1947:	
  1246  007A  0861               	movf	_pmsg,w
  1247  007B  0084               	movwf	4
  1248  007C  1383               	bcf	3,7	;select IRP bank0
  1249  007D  0800               	movf	0,w
  1250  007E  0250               	subwf	main@i,w
  1251  007F  1803               	btfsc	3,0
  1252  0080  2918               	goto	l1949
  1253  0081  0850               	movf	main@i,w
  1254  0082  0748               	addwf	main@s,w
  1255  0083  00BA               	movwf	??_main
  1256  0084  083A               	movf	??_main,w
  1257  0085  00D1               	movwf	main@byte
  1258  0086  0851               	movf	main@byte,w
  1259  0087  0084               	movwf	4
  1260  0088  1383               	bcf	3,7	;select IRP bank0
  1261  0089  1C00               	btfss	0,0
  1262  008A  288F               	goto	u1660
  1263  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1264  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1265  008D  1406               	bsf	6,0	;volatile
  1266  008E  2892               	goto	l1915
  1267  008F                     u1660:	
  1268  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0091  1006               	bcf	6,0	;volatile
  1271  0092                     l1915:	
  1272  0092  0851               	movf	main@byte,w
  1273  0093  0084               	movwf	4
  1274  0094  1383               	bcf	3,7	;select IRP bank0
  1275  0095  1C80               	btfss	0,1
  1276  0096  289B               	goto	u1680
  1277  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0099  1486               	bsf	6,1	;volatile
  1280  009A  289E               	goto	l1917
  1281  009B                     u1680:	
  1282  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1283  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1284  009D  1086               	bcf	6,1	;volatile
  1285  009E                     l1917:	
  1286  009E  0851               	movf	main@byte,w
  1287  009F  0084               	movwf	4
  1288  00A0  1383               	bcf	3,7	;select IRP bank0
  1289  00A1  1D00               	btfss	0,2
  1290  00A2  28A7               	goto	u1700
  1291  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1292  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1293  00A5  1506               	bsf	6,2	;volatile
  1294  00A6  28AA               	goto	l1919
  1295  00A7                     u1700:	
  1296  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1297  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1298  00A9  1106               	bcf	6,2	;volatile
  1299  00AA                     l1919:	
  1300  00AA  0851               	movf	main@byte,w
  1301  00AB  0084               	movwf	4
  1302  00AC  1383               	bcf	3,7	;select IRP bank0
  1303  00AD  1D80               	btfss	0,3
  1304  00AE  28B3               	goto	u1800
  1305  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1306  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1307  00B1  1586               	bsf	6,3	;volatile
  1308  00B2  28B6               	goto	l1923
  1309  00B3                     u1800:	
  1310  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1311  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1312  00B5  1186               	bcf	6,3	;volatile
  1313  00B6                     l1923:	
  1314  00B6  3080               	movlw	128
  1315  00B7  0685               	xorwf	5,f
  1316  00B8  28B9               	nop2	;2 cycle nop
  1317  00B9  28BA               	nop2	;2 cycle nop
  1318  00BA  0000               	nop
  1319  00BB  3080               	movlw	128
  1320  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1321  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1322  00BE  0685               	xorwf	5,f
  1323  00BF  300D               	movlw	13
  1324  00C0  00BB               	movwf	??_main+1
  1325  00C1  30FB               	movlw	251
  1326  00C2  00BA               	movwf	??_main
  1327  00C3                     u2267:	
  1328  00C3  0BBA               	decfsz	??_main,f
  1329  00C4  28C3               	goto	u2267
  1330  00C5  0BBB               	decfsz	??_main+1,f
  1331  00C6  28C3               	goto	u2267
  1332  00C7  28C8               	nop2
  1333  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1334  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1335  00CA  0850               	movf	main@i,w
  1336  00CB  0748               	addwf	main@s,w
  1337  00CC  00BA               	movwf	??_main
  1338  00CD  083A               	movf	??_main,w
  1339  00CE  00D2               	movwf	main@byte_385
  1340  00CF  0852               	movf	main@byte_385,w
  1341  00D0  0084               	movwf	4
  1342  00D1  1383               	bcf	3,7	;select IRP bank0
  1343  00D2  1E00               	btfss	0,4
  1344  00D3  28D8               	goto	u1900
  1345  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1346  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1347  00D6  1406               	bsf	6,0	;volatile
  1348  00D7  28DB               	goto	u1914
  1349  00D8                     u1900:	
  1350  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1351  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1352  00DA  1006               	bcf	6,0	;volatile
  1353  00DB                     u1914:	
  1354  00DB  0852               	movf	main@byte_385,w
  1355  00DC  0084               	movwf	4
  1356  00DD  1383               	bcf	3,7	;select IRP bank0
  1357  00DE  1E80               	btfss	0,5
  1358  00DF  28E4               	goto	u1920
  1359  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1360  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1361  00E2  1486               	bsf	6,1	;volatile
  1362  00E3  28E7               	goto	u1934
  1363  00E4                     u1920:	
  1364  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1365  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1366  00E6  1086               	bcf	6,1	;volatile
  1367  00E7                     u1934:	
  1368  00E7  0852               	movf	main@byte_385,w
  1369  00E8  0084               	movwf	4
  1370  00E9  1383               	bcf	3,7	;select IRP bank0
  1371  00EA  1F00               	btfss	0,6
  1372  00EB  28F0               	goto	u1940
  1373  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1374  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1375  00EE  1506               	bsf	6,2	;volatile
  1376  00EF  28F3               	goto	u1954
  1377  00F0                     u1940:	
  1378  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1379  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1380  00F2  1106               	bcf	6,2	;volatile
  1381  00F3                     u1954:	
  1382  00F3  0852               	movf	main@byte_385,w
  1383  00F4  0084               	movwf	4
  1384  00F5  1383               	bcf	3,7	;select IRP bank0
  1385  00F6  1F80               	btfss	0,7
  1386  00F7  28FC               	goto	u1960
  1387  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1388  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1389  00FA  1586               	bsf	6,3	;volatile
  1390  00FB  28FF               	goto	l1937
  1391  00FC                     u1960:	
  1392  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1393  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1394  00FE  1186               	bcf	6,3	;volatile
  1395  00FF                     l1937:	
  1396  00FF  3080               	movlw	128
  1397  0100  0685               	xorwf	5,f
  1398  0101  2902               	nop2	;2 cycle nop
  1399  0102  2903               	nop2	;2 cycle nop
  1400  0103  0000               	nop
  1401  0104  3080               	movlw	128
  1402  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0107  0685               	xorwf	5,f
  1405  0108  300D               	movlw	13
  1406  0109  00BB               	movwf	??_main+1
  1407  010A  30FB               	movlw	251
  1408  010B  00BA               	movwf	??_main
  1409  010C                     u2277:	
  1410  010C  0BBA               	decfsz	??_main,f
  1411  010D  290C               	goto	u2277
  1412  010E  0BBB               	decfsz	??_main+1,f
  1413  010F  290C               	goto	u2277
  1414  0110  2911               	nop2
  1415  0111  3001               	movlw	1
  1416  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0114  00BA               	movwf	??_main
  1419  0115  083A               	movf	??_main,w
  1420  0116  07D0               	addwf	main@i,f
  1421  0117  287A               	goto	l1947
  1422  0118                     l1949:	
  1423                           
  1424                           ;do_am.c: 206: {{ LCDGotoXY(0,1); int8_t count = LCDWriteString(""); for(int8_t i = coun
      +                          t + 0; i < 16; i++) { (LCDByte(' ',1)); } };}; {{ LCDGotoXY(0,1); LCDWriteString("SND:")
      +                          ;};}; {LCDWriteInt(pmsg->msglen, 3);};
  1425  0118  01A6               	clrf	LCDGotoXY@y
  1426  0119  0AA6               	incf	LCDGotoXY@y,f
  1427  011A  3000               	movlw	0
  1428  011B  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1429  0120  3028               	movlw	(low (((STR_10+4)-__stringbase)| (0+32768)))& (0+255)
  1430  0121  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  1431  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0128  00BA               	movwf	??_main
  1434  0129  083A               	movf	??_main,w
  1435  012A  00C1               	movwf	main@count_400
  1436  012B  0841               	movf	main@count_400,w
  1437  012C  00BA               	movwf	??_main
  1438  012D  083A               	movf	??_main,w
  1439  012E  00C9               	movwf	main@i_402
  1440  012F  0849               	movf	main@i_402,w
  1441  0130  3A80               	xorlw	128
  1442  0131  3E70               	addlw	-144
  1443  0132  1803               	btfsc	3,0
  1444  0133  2947               	goto	l1963
  1445  0134                     l1957:	
  1446  0134  01F9               	clrf	LCDByte@isdata
  1447  0135  0AF9               	incf	LCDByte@isdata,f
  1448  0136  3020               	movlw	32
  1449  0137  120A  118A  255A  120A  118A  	fcall	_LCDByte
  1450  013C  3001               	movlw	1
  1451  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1452  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1453  013F  00BA               	movwf	??_main
  1454  0140  083A               	movf	??_main,w
  1455  0141  07C9               	addwf	main@i_402,f
  1456  0142  0849               	movf	main@i_402,w
  1457  0143  3A80               	xorlw	128
  1458  0144  3E70               	addlw	-144
  1459  0145  1C03               	skipc
  1460  0146  2934               	goto	l1957
  1461  0147                     l1963:	
  1462  0147  01A6               	clrf	LCDGotoXY@y
  1463  0148  0AA6               	incf	LCDGotoXY@y,f
  1464  0149  3000               	movlw	0
  1465  014A  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1466  014F  3038               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1467  0150  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  1468  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0157  0861               	movf	_pmsg,w
  1471  0158  0084               	movwf	4
  1472  0159  1383               	bcf	3,7	;select IRP bank0
  1473  015A  0800               	movf	0,w
  1474  015B  00BA               	movwf	??_main
  1475  015C  01BB               	clrf	??_main+1
  1476  015D  083A               	movf	??_main,w
  1477  015E  00A6               	movwf	LCDWriteInt@val
  1478  015F  083B               	movf	??_main+1,w
  1479  0160  00A7               	movwf	LCDWriteInt@val+1
  1480  0161  3003               	movlw	3
  1481  0162  00BC               	movwf	??_main+2
  1482  0163  083C               	movf	??_main+2,w
  1483  0164  00A8               	movwf	LCDWriteInt@field_length
  1484  0165  120A  118A  233B  120A  118A  	fcall	_LCDWriteInt
  1485                           
  1486                           ;do_am.c: 209: _delay((unsigned long)((200)*(20000000/4000.0)));
  1487  016A  3006               	movlw	6
  1488  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1489  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1490  016D  00BC               	movwf	??_main+2
  1491  016E  3013               	movlw	19
  1492  016F  00BB               	movwf	??_main+1
  1493  0170  30B1               	movlw	177
  1494  0171  00BA               	movwf	??_main
  1495  0172                     u2287:	
  1496  0172  0BBA               	decfsz	??_main,f
  1497  0173  2972               	goto	u2287
  1498  0174  0BBB               	decfsz	??_main+1,f
  1499  0175  2972               	goto	u2287
  1500  0176  0BBC               	decfsz	??_main+2,f
  1501  0177  2972               	goto	u2287
  1502  0178  2979               	nop2
  1503                           
  1504                           ;do_am.c: 210: }
  1505  0179  2ADA               	goto	l1905
  1506  017A                     l1969:	
  1507                           
  1508                           ;do_am.c: 213: {
  1509                           ;do_am.c: 214: if(mode == NORMAL)
  1510  017A  0360               	decf	_mode,w
  1511  017B  1D03               	btfss	3,2
  1512  017C  29B3               	goto	l1989
  1513                           
  1514                           ;do_am.c: 215: {
  1515                           ;do_am.c: 216: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("MENU MODE"); for(int8_
      +                          t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1516  017D  01A6               	clrf	LCDGotoXY@y
  1517  017E  0AA6               	incf	LCDGotoXY@y,f
  1518  017F  3000               	movlw	0
  1519  0180  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1520  0185  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1521  0186  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  1522  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1523  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1524  018D  00BA               	movwf	??_main
  1525  018E  083A               	movf	??_main,w
  1526  018F  00C2               	movwf	main@count_404
  1527  0190  0842               	movf	main@count_404,w
  1528  0191  00BA               	movwf	??_main
  1529  0192  083A               	movf	??_main,w
  1530  0193  00CA               	movwf	main@i_406
  1531  0194  084A               	movf	main@i_406,w
  1532  0195  3A80               	xorlw	128
  1533  0196  3E70               	addlw	-144
  1534  0197  1803               	btfsc	3,0
  1535  0198  29AC               	goto	l1985
  1536  0199                     l1979:	
  1537  0199  01F9               	clrf	LCDByte@isdata
  1538  019A  0AF9               	incf	LCDByte@isdata,f
  1539  019B  3020               	movlw	32
  1540  019C  120A  118A  255A  120A  118A  	fcall	_LCDByte
  1541  01A1  3001               	movlw	1
  1542  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1543  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1544  01A4  00BA               	movwf	??_main
  1545  01A5  083A               	movf	??_main,w
  1546  01A6  07CA               	addwf	main@i_406,f
  1547  01A7  084A               	movf	main@i_406,w
  1548  01A8  3A80               	xorlw	128
  1549  01A9  3E70               	addlw	-144
  1550  01AA  1C03               	skipc
  1551  01AB  2999               	goto	l1979
  1552  01AC                     l1985:	
  1553                           
  1554                           ;do_am.c: 217: mode = MENU;
  1555  01AC  01E0               	clrf	_mode
  1556                           
  1557                           ;do_am.c: 218: ShowMenu();
  1558  01AD  120A  118A  25B1  120A  118A  	fcall	_ShowMenu
  1559                           
  1560                           ;do_am.c: 219: }
  1561  01B2  29F0               	goto	l2009
  1562  01B3                     l1989:	
  1563                           
  1564                           ;do_am.c: 220: else
  1565                           ;do_am.c: 221: {
  1566                           ;do_am.c: 222: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("EDIT MODE"); for(int8_
      +                          t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1567  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1568  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1569  01B5  01A6               	clrf	LCDGotoXY@y
  1570  01B6  0AA6               	incf	LCDGotoXY@y,f
  1571  01B7  3000               	movlw	0
  1572  01B8  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1573  01BD  3004               	movlw	(low (((STR_6+3)-__stringbase)| (0+32768)))& (0+255)
  1574  01BE  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  1575  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1576  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1577  01C5  00BA               	movwf	??_main
  1578  01C6  083A               	movf	??_main,w
  1579  01C7  00C3               	movwf	main@count_407
  1580  01C8  0843               	movf	main@count_407,w
  1581  01C9  00BA               	movwf	??_main
  1582  01CA  083A               	movf	??_main,w
  1583  01CB  00CB               	movwf	main@i_409
  1584  01CC  084B               	movf	main@i_409,w
  1585  01CD  3A80               	xorlw	128
  1586  01CE  3E70               	addlw	-144
  1587  01CF  1803               	btfsc	3,0
  1588  01D0  29E4               	goto	l2003
  1589  01D1                     l1997:	
  1590  01D1  01F9               	clrf	LCDByte@isdata
  1591  01D2  0AF9               	incf	LCDByte@isdata,f
  1592  01D3  3020               	movlw	32
  1593  01D4  120A  118A  255A  120A  118A  	fcall	_LCDByte
  1594  01D9  3001               	movlw	1
  1595  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1596  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1597  01DC  00BA               	movwf	??_main
  1598  01DD  083A               	movf	??_main,w
  1599  01DE  07CB               	addwf	main@i_409,f
  1600  01DF  084B               	movf	main@i_409,w
  1601  01E0  3A80               	xorlw	128
  1602  01E1  3E70               	addlw	-144
  1603  01E2  1C03               	skipc
  1604  01E3  29D1               	goto	l1997
  1605  01E4                     l2003:	
  1606                           
  1607                           ;do_am.c: 223: submode = EDIT;
  1608  01E4  01E2               	clrf	_submode
  1609                           
  1610                           ;do_am.c: 224: ShowMenu();
  1611  01E5  120A  118A  25B1  120A  118A  	fcall	_ShowMenu
  1612                           
  1613                           ;do_am.c: 225: LCDSetStyle(0B00000001);
  1614  01EA  3001               	movlw	1
  1615  01EB  120A  158A  2737  120A  118A  	fcall	_LCDSetStyle
  1616  01F0                     l2009:	
  1617                           
  1618                           ;do_am.c: 226: }
  1619                           ;do_am.c: 228: _delay((unsigned long)((200)*(20000000/4000.0)));
  1620  01F0  3006               	movlw	6
  1621  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1622  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1623  01F3  00BC               	movwf	??_main+2
  1624  01F4  3013               	movlw	19
  1625  01F5  00BB               	movwf	??_main+1
  1626  01F6  30B1               	movlw	177
  1627  01F7  00BA               	movwf	??_main
  1628  01F8                     u2297:	
  1629  01F8  0BBA               	decfsz	??_main,f
  1630  01F9  29F8               	goto	u2297
  1631  01FA  0BBB               	decfsz	??_main+1,f
  1632  01FB  29F8               	goto	u2297
  1633  01FC  0BBC               	decfsz	??_main+2,f
  1634  01FD  29F8               	goto	u2297
  1635  01FE  29FF               	nop2
  1636                           
  1637                           ;do_am.c: 229: }
  1638  01FF  2ADA               	goto	l1905
  1639  0200                     l2011:	
  1640                           
  1641                           ;do_am.c: 232: {
  1642                           ;do_am.c: 233: if(mode == MENU)
  1643  0200  0860               	movf	_mode,w
  1644  0201  1D03               	btfss	3,2
  1645  0202  2A76               	goto	l2047
  1646                           
  1647                           ;do_am.c: 234: {
  1648                           ;do_am.c: 235: if(submode == EDIT)
  1649  0203  0862               	movf	_submode,w
  1650  0204  1D03               	btfss	3,2
  1651  0205  2A3E               	goto	l2031
  1652                           
  1653                           ;do_am.c: 236: {
  1654                           ;do_am.c: 237: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("NOTEDIT MODE"); for(in
      +                          t8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1655  0206  01A6               	clrf	LCDGotoXY@y
  1656  0207  0AA6               	incf	LCDGotoXY@y,f
  1657  0208  3000               	movlw	0
  1658  0209  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1659  020E  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1660  020F  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  1661  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0216  00BA               	movwf	??_main
  1664  0217  083A               	movf	??_main,w
  1665  0218  00C4               	movwf	main@count_410
  1666  0219  0844               	movf	main@count_410,w
  1667  021A  00BA               	movwf	??_main
  1668  021B  083A               	movf	??_main,w
  1669  021C  00CC               	movwf	main@i_412
  1670  021D  084C               	movf	main@i_412,w
  1671  021E  3A80               	xorlw	128
  1672  021F  3E70               	addlw	-144
  1673  0220  1803               	btfsc	3,0
  1674  0221  2A35               	goto	l127
  1675  0222                     l2023:	
  1676  0222  01F9               	clrf	LCDByte@isdata
  1677  0223  0AF9               	incf	LCDByte@isdata,f
  1678  0224  3020               	movlw	32
  1679  0225  120A  118A  255A  120A  118A  	fcall	_LCDByte
  1680  022A  3001               	movlw	1
  1681  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1682  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1683  022D  00BA               	movwf	??_main
  1684  022E  083A               	movf	??_main,w
  1685  022F  07CC               	addwf	main@i_412,f
  1686  0230  084C               	movf	main@i_412,w
  1687  0231  3A80               	xorlw	128
  1688  0232  3E70               	addlw	-144
  1689  0233  1C03               	skipc
  1690  0234  2A22               	goto	l2023
  1691  0235                     l127:	
  1692                           
  1693                           ;do_am.c: 238: submode = NOTEDIT;
  1694  0235  01E2               	clrf	_submode
  1695  0236  0AE2               	incf	_submode,f
  1696                           
  1697                           ;do_am.c: 239: LCDSetStyle(0B00000000);
  1698  0237  3000               	movlw	0
  1699  0238  120A  158A  2737  120A  118A  	fcall	_LCDSetStyle
  1700                           
  1701                           ;do_am.c: 240: }
  1702  023D  2A76               	goto	l2047
  1703  023E                     l2031:	
  1704                           
  1705                           ;do_am.c: 241: else
  1706                           ;do_am.c: 242: {
  1707                           ;do_am.c: 243: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("NORMAL MODE"); for(int
      +                          8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1708  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1709  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0240  01A6               	clrf	LCDGotoXY@y
  1711  0241  0AA6               	incf	LCDGotoXY@y,f
  1712  0242  3000               	movlw	0
  1713  0243  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1714  0248  300E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1715  0249  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  1716  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1717  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0250  00BA               	movwf	??_main
  1719  0251  083A               	movf	??_main,w
  1720  0252  00C5               	movwf	main@count_413
  1721  0253  0845               	movf	main@count_413,w
  1722  0254  00BA               	movwf	??_main
  1723  0255  083A               	movf	??_main,w
  1724  0256  00CD               	movwf	main@i_415
  1725  0257  084D               	movf	main@i_415,w
  1726  0258  3A80               	xorlw	128
  1727  0259  3E70               	addlw	-144
  1728  025A  1803               	btfsc	3,0
  1729  025B  2A6F               	goto	l130
  1730  025C                     l2039:	
  1731  025C  01F9               	clrf	LCDByte@isdata
  1732  025D  0AF9               	incf	LCDByte@isdata,f
  1733  025E  3020               	movlw	32
  1734  025F  120A  118A  255A  120A  118A  	fcall	_LCDByte
  1735  0264  3001               	movlw	1
  1736  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1737  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1738  0267  00BA               	movwf	??_main
  1739  0268  083A               	movf	??_main,w
  1740  0269  07CD               	addwf	main@i_415,f
  1741  026A  084D               	movf	main@i_415,w
  1742  026B  3A80               	xorlw	128
  1743  026C  3E70               	addlw	-144
  1744  026D  1C03               	skipc
  1745  026E  2A5C               	goto	l2039
  1746  026F                     l130:	
  1747                           
  1748                           ;do_am.c: 244: mode = NORMAL;
  1749  026F  01E0               	clrf	_mode
  1750  0270  0AE0               	incf	_mode,f
  1751                           
  1752                           ;do_am.c: 245: ClearMenu();
  1753  0271  120A  118A  278F  120A  118A  	fcall	_ClearMenu
  1754  0276                     l2047:	
  1755                           
  1756                           ;do_am.c: 246: }
  1757                           ;do_am.c: 247: }
  1758                           ;do_am.c: 249: _delay((unsigned long)((200)*(20000000/4000.0)));
  1759  0276  3006               	movlw	6
  1760  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1761  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1762  0279  00BC               	movwf	??_main+2
  1763  027A  3013               	movlw	19
  1764  027B  00BB               	movwf	??_main+1
  1765  027C  30B1               	movlw	177
  1766  027D  00BA               	movwf	??_main
  1767  027E                     u2307:	
  1768  027E  0BBA               	decfsz	??_main,f
  1769  027F  2A7E               	goto	u2307
  1770  0280  0BBB               	decfsz	??_main+1,f
  1771  0281  2A7E               	goto	u2307
  1772  0282  0BBC               	decfsz	??_main+2,f
  1773  0283  2A7E               	goto	u2307
  1774  0284  2A85               	nop2
  1775                           
  1776                           ;do_am.c: 250: }
  1777  0285  2ADA               	goto	l1905
  1778  0286                     l2049:	
  1779                           
  1780                           ;do_am.c: 253: {
  1781                           ;do_am.c: 254: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("UP"); for(int8_t i = c
      +                          ount + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1782  0286  01A6               	clrf	LCDGotoXY@y
  1783  0287  0AA6               	incf	LCDGotoXY@y,f
  1784  0288  3000               	movlw	0
  1785  0289  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1786  028E  3046               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1787  028F  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  1788  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0296  00BA               	movwf	??_main
  1791  0297  083A               	movf	??_main,w
  1792  0298  00C6               	movwf	main@count_416
  1793  0299  0846               	movf	main@count_416,w
  1794  029A  00BA               	movwf	??_main
  1795  029B  083A               	movf	??_main,w
  1796  029C  00CE               	movwf	main@i_418
  1797  029D  084E               	movf	main@i_418,w
  1798  029E  3A80               	xorlw	128
  1799  029F  3E70               	addlw	-144
  1800  02A0  1803               	btfsc	3,0
  1801  02A1  2AB5               	goto	l2063
  1802  02A2                     l2057:	
  1803  02A2  01F9               	clrf	LCDByte@isdata
  1804  02A3  0AF9               	incf	LCDByte@isdata,f
  1805  02A4  3020               	movlw	32
  1806  02A5  120A  118A  255A  120A  118A  	fcall	_LCDByte
  1807  02AA  3001               	movlw	1
  1808  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1809  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1810  02AD  00BA               	movwf	??_main
  1811  02AE  083A               	movf	??_main,w
  1812  02AF  07CE               	addwf	main@i_418,f
  1813  02B0  084E               	movf	main@i_418,w
  1814  02B1  3A80               	xorlw	128
  1815  02B2  3E70               	addlw	-144
  1816  02B3  1C03               	skipc
  1817  02B4  2AA2               	goto	l2057
  1818  02B5                     l2063:	
  1819                           
  1820                           ;do_am.c: 255: if(mode == MENU)
  1821  02B5  0860               	movf	_mode,w
  1822  02B6  1D03               	btfss	3,2
  1823  02B7  2ACB               	goto	l2073
  1824                           
  1825                           ;do_am.c: 256: {
  1826                           ;do_am.c: 257: if(submode == EDIT)
  1827  02B8  0862               	movf	_submode,w
  1828  02B9  1D03               	btfss	3,2
  1829  02BA  2AC1               	goto	l2069
  1830                           
  1831                           ;do_am.c: 258: {
  1832                           ;do_am.c: 259: ValueInc();
  1833  02BB  120A  158A  27A4  120A  118A  	fcall	_ValueInc
  1834                           
  1835                           ;do_am.c: 260: }
  1836  02C0  2AC6               	goto	l2071
  1837  02C1                     l2069:	
  1838                           
  1839                           ;do_am.c: 261: else
  1840                           ;do_am.c: 262: {
  1841                           ;do_am.c: 263: MenuUp();
  1842  02C1  120A  158A  2759  120A  118A  	fcall	_MenuUp
  1843  02C6                     l2071:	
  1844                           
  1845                           ;do_am.c: 264: }
  1846                           ;do_am.c: 265: ShowMenu();
  1847  02C6  120A  118A  25B1  120A  118A  	fcall	_ShowMenu
  1848  02CB                     l2073:	
  1849                           
  1850                           ;do_am.c: 266: }
  1851                           ;do_am.c: 267: _delay((unsigned long)((200)*(20000000/4000.0)));
  1852  02CB  3006               	movlw	6
  1853  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1854  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1855  02CE  00BC               	movwf	??_main+2
  1856  02CF  3013               	movlw	19
  1857  02D0  00BB               	movwf	??_main+1
  1858  02D1  30B1               	movlw	177
  1859  02D2  00BA               	movwf	??_main
  1860  02D3                     u2317:	
  1861  02D3  0BBA               	decfsz	??_main,f
  1862  02D4  2AD3               	goto	u2317
  1863  02D5  0BBB               	decfsz	??_main+1,f
  1864  02D6  2AD3               	goto	u2317
  1865  02D7  0BBC               	decfsz	??_main+2,f
  1866  02D8  2AD3               	goto	u2317
  1867  02D9  2ADA               	nop2
  1868  02DA                     l1905:	
  1869                           ;do_am.c: 201: while(1)
  1870                           
  1871                           ;do_am.c: 268: }
  1872                           
  1873                           
  1874                           ;do_am.c: 202: {
  1875                           ;do_am.c: 203: if(RA6 == 0)
  1876  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1877  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1878  02DC  1F05               	btfss	5,6	;volatile
  1879  02DD  2875               	goto	l1907
  1880                           
  1881                           ;do_am.c: 211: else
  1882                           ;do_am.c: 212: if(RB4 == 0)
  1883  02DE  1E06               	btfss	6,4	;volatile
  1884  02DF  297A               	goto	l1969
  1885                           
  1886                           ;do_am.c: 230: else
  1887                           ;do_am.c: 231: if(RB6 == 0)
  1888  02E0  1F06               	btfss	6,6	;volatile
  1889  02E1  2A00               	goto	l2011
  1890                           
  1891                           ;do_am.c: 251: else
  1892                           ;do_am.c: 252: if(RB5 == 0)
  1893  02E2  1E86               	btfss	6,5	;volatile
  1894  02E3  2A86               	goto	l2049
  1895                           
  1896                           ;do_am.c: 269: else
  1897                           ;do_am.c: 270: if(RB7 == 0)
  1898  02E4  1B86               	btfsc	6,7	;volatile
  1899  02E5  2ADA               	goto	l1905
  1900                           
  1901                           ;do_am.c: 271: {
  1902                           ;do_am.c: 272: {{{ LCDGotoXY(0,1); int8_t count = LCDWriteString("DOWN"); for(int8_t i =
      +                           count + 0; i < 16; i++) { (LCDByte(' ',1)); } };};};
  1903  02E6  01A6               	clrf	LCDGotoXY@y
  1904  02E7  0AA6               	incf	LCDGotoXY@y,f
  1905  02E8  3000               	movlw	0
  1906  02E9  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  1907  02EE  303D               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1908  02EF  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  1909  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1910  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1911  02F6  00BA               	movwf	??_main
  1912  02F7  083A               	movf	??_main,w
  1913  02F8  00C7               	movwf	main@count_419
  1914  02F9  0847               	movf	main@count_419,w
  1915  02FA  00BA               	movwf	??_main
  1916  02FB  083A               	movf	??_main,w
  1917  02FC  00CF               	movwf	main@i_421
  1918  02FD  084F               	movf	main@i_421,w
  1919  02FE  3A80               	xorlw	128
  1920  02FF  3E70               	addlw	-144
  1921  0300  1803               	btfsc	3,0
  1922  0301  2B15               	goto	l2089
  1923  0302                     l2083:	
  1924  0302  01F9               	clrf	LCDByte@isdata
  1925  0303  0AF9               	incf	LCDByte@isdata,f
  1926  0304  3020               	movlw	32
  1927  0305  120A  118A  255A  120A  118A  	fcall	_LCDByte
  1928  030A  3001               	movlw	1
  1929  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1930  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1931  030D  00BA               	movwf	??_main
  1932  030E  083A               	movf	??_main,w
  1933  030F  07CF               	addwf	main@i_421,f
  1934  0310  084F               	movf	main@i_421,w
  1935  0311  3A80               	xorlw	128
  1936  0312  3E70               	addlw	-144
  1937  0313  1C03               	skipc
  1938  0314  2B02               	goto	l2083
  1939  0315                     l2089:	
  1940                           
  1941                           ;do_am.c: 273: if(mode == MENU)
  1942  0315  0860               	movf	_mode,w
  1943  0316  1D03               	btfss	3,2
  1944  0317  2B2B               	goto	l2099
  1945                           
  1946                           ;do_am.c: 274: {
  1947                           ;do_am.c: 275: if(submode == EDIT)
  1948  0318  0862               	movf	_submode,w
  1949  0319  1D03               	btfss	3,2
  1950  031A  2B21               	goto	l2095
  1951                           
  1952                           ;do_am.c: 276: {
  1953                           ;do_am.c: 277: ValueDec();
  1954  031B  120A  158A  2775  120A  118A  	fcall	_ValueDec
  1955                           
  1956                           ;do_am.c: 278: }
  1957  0320  2B26               	goto	l2097
  1958  0321                     l2095:	
  1959                           
  1960                           ;do_am.c: 279: else
  1961                           ;do_am.c: 280: {
  1962                           ;do_am.c: 281: MenuDown();
  1963  0321  120A  158A  274C  120A  118A  	fcall	_MenuDown
  1964  0326                     l2097:	
  1965                           
  1966                           ;do_am.c: 282: }
  1967                           ;do_am.c: 283: ShowMenu();
  1968  0326  120A  118A  25B1  120A  118A  	fcall	_ShowMenu
  1969  032B                     l2099:	
  1970                           
  1971                           ;do_am.c: 284: }
  1972                           ;do_am.c: 285: _delay((unsigned long)((200)*(20000000/4000.0)));
  1973  032B  3006               	movlw	6
  1974  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1975  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1976  032E  00BC               	movwf	??_main+2
  1977  032F  3013               	movlw	19
  1978  0330  00BB               	movwf	??_main+1
  1979  0331  30B1               	movlw	177
  1980  0332  00BA               	movwf	??_main
  1981  0333                     u2327:	
  1982  0333  0BBA               	decfsz	??_main,f
  1983  0334  2B33               	goto	u2327
  1984  0335  0BBB               	decfsz	??_main+1,f
  1985  0336  2B33               	goto	u2327
  1986  0337  0BBC               	decfsz	??_main+2,f
  1987  0338  2B33               	goto	u2327
  1988  0339  2B3A               	nop2
  1989  033A  2ADA               	goto	l1905
  1990  033B                     __end_of_main:	
  1991                           
  1992                           	psect	text1
  1993  06E7                     __ptext1:	
  1994 ;; *************** function _compose *****************
  1995 ;; Defined at:
  1996 ;;		line 35 in file "msg.h"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  pmsg            1    wreg     PTR struct .
  1999 ;;		 -> msg(21), 
  2000 ;;  from            1    3[BANK0 ] unsigned char 
  2001 ;;  to              1    4[BANK0 ] unsigned char 
  2002 ;;  msgid           1    5[BANK0 ] unsigned char 
  2003 ;;  cmd             1    6[BANK0 ] unsigned char 
  2004 ;;  data            1    7[BANK0 ] PTR unsigned char 
  2005 ;;		 -> STR_1(4), 
  2006 ;;  datalen         1    8[BANK0 ] unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  pmsg            1   11[BANK0 ] PTR struct .
  2009 ;;		 -> msg(21), 
  2010 ;;  len             2    9[BANK0 ] unsigned int 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         0       6       0       0       0
  2021 ;;      Locals:         0       3       0       0       0
  2022 ;;      Temps:          2       0       0       0       0
  2023 ;;      Totals:         2       9       0       0       0
  2024 ;;Total ram usage:       11 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    3
  2027 ;; This function calls:
  2028 ;;		_memcpy
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _compose
  2036  06E7                     _compose:	
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _compose: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2040                           ;compose@pmsg stored from wreg
  2041  06E7  1283               	bcf	3,5	;RP0=0, select bank0
  2042  06E8  1303               	bcf	3,6	;RP1=0, select bank0
  2043  06E9  00AB               	movwf	compose@pmsg
  2044                           
  2045                           ;msg.h: 43: register size_t len = datalen;
  2046  06EA  0828               	movf	compose@datalen,w
  2047  06EB  00F8               	movwf	??_compose
  2048  06EC  01F9               	clrf	??_compose+1
  2049  06ED  0878               	movf	??_compose,w
  2050  06EE  00A9               	movwf	compose@len
  2051  06EF  0879               	movf	??_compose+1,w
  2052  06F0  00AA               	movwf	compose@len+1
  2053                           
  2054                           ;msg.h: 44: pmsg->from = from;
  2055  06F1  0823               	movf	compose@from,w
  2056  06F2  00F8               	movwf	??_compose
  2057  06F3  0A2B               	incf	compose@pmsg,w
  2058  06F4  0084               	movwf	4
  2059  06F5  0878               	movf	??_compose,w
  2060  06F6  1383               	bcf	3,7	;select IRP bank0
  2061  06F7  0080               	movwf	0
  2062                           
  2063                           ;msg.h: 45: pmsg->to = to;
  2064  06F8  0824               	movf	compose@to,w
  2065  06F9  00F8               	movwf	??_compose
  2066  06FA  082B               	movf	compose@pmsg,w
  2067  06FB  3E02               	addlw	2
  2068  06FC  0084               	movwf	4
  2069  06FD  0878               	movf	??_compose,w
  2070  06FE  0080               	movwf	0
  2071                           
  2072                           ;msg.h: 46: pmsg->msgid = msgid;
  2073  06FF  0825               	movf	compose@msgid,w
  2074  0700  00F8               	movwf	??_compose
  2075  0701  082B               	movf	compose@pmsg,w
  2076  0702  3E03               	addlw	3
  2077  0703  0084               	movwf	4
  2078  0704  0878               	movf	??_compose,w
  2079  0705  0080               	movwf	0
  2080                           
  2081                           ;msg.h: 47: pmsg->cmd = cmd;
  2082  0706  0826               	movf	compose@cmd,w
  2083  0707  00F8               	movwf	??_compose
  2084  0708  082B               	movf	compose@pmsg,w
  2085  0709  3E04               	addlw	4
  2086  070A  0084               	movwf	4
  2087  070B  0878               	movf	??_compose,w
  2088  070C  0080               	movwf	0
  2089                           
  2090                           ;msg.h: 48: memcpy((void *)pmsg->data, (void *)data, len);
  2091  070D  0827               	movf	compose@data,w
  2092  070E  00F8               	movwf	??_compose
  2093  070F  0878               	movf	??_compose,w
  2094  0710  00F4               	movwf	memcpy@s1
  2095  0711  082A               	movf	compose@len+1,w
  2096  0712  00F6               	movwf	memcpy@n+1
  2097  0713  0829               	movf	compose@len,w
  2098  0714  00F5               	movwf	memcpy@n
  2099  0715  082B               	movf	compose@pmsg,w
  2100  0716  3E05               	addlw	5
  2101  0717  120A  118A  2763   	fcall	_memcpy
  2102                           
  2103                           ;msg.h: 49: pmsg->msglen = datalen + 5;
  2104  071A  1283               	bcf	3,5	;RP0=0, select bank0
  2105  071B  1303               	bcf	3,6	;RP1=0, select bank0
  2106  071C  0828               	movf	compose@datalen,w
  2107  071D  3E05               	addlw	5
  2108  071E  00F8               	movwf	??_compose
  2109  071F  082B               	movf	compose@pmsg,w
  2110  0720  0084               	movwf	4
  2111  0721  0878               	movf	??_compose,w
  2112  0722  1383               	bcf	3,7	;select IRP bank0
  2113  0723  0080               	movwf	0
  2114  0724  0008               	return
  2115  0725                     __end_of_compose:	
  2116                           
  2117                           	psect	text2
  2118  0763                     __ptext2:	
  2119 ;; *************** function _memcpy *****************
  2120 ;; Defined at:
  2121 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memcpy.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  d1              1    wreg     PTR void 
  2124 ;;		 -> msg(21), 
  2125 ;;  s1              1    4[COMMON] PTR const void 
  2126 ;;		 -> STR_1(4), 
  2127 ;;  n               2    5[COMMON] unsigned int 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  d1              1    0[BANK0 ] PTR void 
  2130 ;;		 -> msg(21), 
  2131 ;;  s               1    2[BANK0 ] PTR const unsigned char 
  2132 ;;		 -> STR_1(4), 
  2133 ;;  d               1    1[BANK0 ] PTR unsigned char 
  2134 ;;		 -> msg(21), 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      PTR void 
  2137 ;; Registers used:
  2138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         3       0       0       0       0
  2145 ;;      Locals:         0       3       0       0       0
  2146 ;;      Temps:          1       0       0       0       0
  2147 ;;      Totals:         4       3       0       0       0
  2148 ;;Total ram usage:        7 bytes
  2149 ;; Hardware stack levels used:    2
  2150 ;; Hardware stack levels required when called:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_compose
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _memcpy
  2160  0763                     _memcpy:	
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0+pclath]
  2164                           ;memcpy@d1 stored from wreg
  2165  0763  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0764  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0765  00A0               	movwf	memcpy@d1
  2168  0766  0874               	movf	memcpy@s1,w
  2169  0767  00F7               	movwf	??_memcpy
  2170  0768  0877               	movf	??_memcpy,w
  2171  0769  00A2               	movwf	memcpy@s
  2172  076A  0820               	movf	memcpy@d1,w
  2173  076B  00F7               	movwf	??_memcpy
  2174  076C  0877               	movf	??_memcpy,w
  2175  076D  00A1               	movwf	memcpy@d
  2176  076E                     l1649:	
  2177  076E  3001               	movlw	1
  2178  076F  02F5               	subwf	memcpy@n,f
  2179  0770  3000               	movlw	0
  2180  0771  1C03               	skipc
  2181  0772  03F6               	decf	memcpy@n+1,f
  2182  0773  02F6               	subwf	memcpy@n+1,f
  2183  0774  0A75               	incf	memcpy@n,w
  2184  0775  1903               	btfsc	3,2
  2185  0776  0A76               	incf	memcpy@n+1,w
  2186  0777  1903               	btfsc	3,2
  2187  0778  0008               	return
  2188  0779  0822               	movf	memcpy@s,w
  2189  077A  0084               	movwf	4
  2190  077B  120A  118A  2606  120A  118A  	fcall	stringdir
  2191  0780  00F7               	movwf	??_memcpy
  2192  0781  0821               	movf	memcpy@d,w
  2193  0782  0084               	movwf	4
  2194  0783  0877               	movf	??_memcpy,w
  2195  0784  1383               	bcf	3,7	;select IRP bank0
  2196  0785  0080               	movwf	0
  2197  0786  3001               	movlw	1
  2198  0787  00F7               	movwf	??_memcpy
  2199  0788  0877               	movf	??_memcpy,w
  2200  0789  07A2               	addwf	memcpy@s,f
  2201  078A  3001               	movlw	1
  2202  078B  00F7               	movwf	??_memcpy
  2203  078C  0877               	movf	??_memcpy,w
  2204  078D  07A1               	addwf	memcpy@d,f
  2205  078E  2F6E               	goto	l1649
  2206  078F                     __end_of_memcpy:	
  2207                           ;	Return value of _memcpy is never used
  2208                           
  2209                           
  2210                           	psect	text3
  2211  0FA4                     __ptext3:	
  2212 ;; *************** function _ValueInc *****************
  2213 ;; Defined at:
  2214 ;;		line 62 in file "menu.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2228 ;;      Params:         0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0
  2230 ;;      Temps:          0       2       0       0       0
  2231 ;;      Totals:         0       2       0       0       0
  2232 ;;Total ram usage:        2 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    3
  2235 ;; This function calls:
  2236 ;;		_SaveMenuItem
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _ValueInc
  2244  0FA4                     _ValueInc:	
  2245                           
  2246                           ;menu.c: 64: g_menu.items[g_menu.index].value++;
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _ValueInc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2250  0FA4  3001               	movlw	1
  2251  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0FA7  00A0               	movwf	??_ValueInc
  2254  0FA8  086B               	movf	_g_menu+8,w
  2255  0FA9  00A1               	movwf	??_ValueInc+1
  2256  0FAA  0721               	addwf	??_ValueInc+1,w
  2257  0FAB  3E63               	addlw	(low (_g_menu| 0))& (0+255)
  2258  0FAC  0084               	movwf	4
  2259  0FAD  0820               	movf	??_ValueInc,w
  2260  0FAE  1383               	bcf	3,7	;select IRP bank0
  2261  0FAF  0780               	addwf	0,f
  2262                           
  2263                           ;menu.c: 65: SaveMenuItem(g_menu.index);
  2264  0FB0  086B               	movf	_g_menu+8,w
  2265  0FB1  120A  158A  2784   	fcall	_SaveMenuItem
  2266  0FB4  0008               	return
  2267  0FB5                     __end_of_ValueInc:	
  2268                           
  2269                           	psect	text4
  2270  0F75                     __ptext4:	
  2271 ;; *************** function _ValueDec *****************
  2272 ;; Defined at:
  2273 ;;		line 67 in file "menu.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  2   81[None  ] int 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2287 ;;      Params:         0       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0
  2289 ;;      Temps:          0       1       0       0       0
  2290 ;;      Totals:         0       1       0       0       0
  2291 ;;Total ram usage:        1 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    3
  2294 ;; This function calls:
  2295 ;;		_SaveMenuItem
  2296 ;; This function is called by:
  2297 ;;		_main
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           
  2302                           ;psect for function _ValueDec
  2303  0F75                     _ValueDec:	
  2304                           
  2305                           ;menu.c: 69: g_menu.items[g_menu.index].value--;
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _ValueDec: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2309  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0F77  086B               	movf	_g_menu+8,w
  2312  0F78  00A0               	movwf	??_ValueDec
  2313  0F79  0720               	addwf	??_ValueDec,w
  2314  0F7A  3E63               	addlw	(low (_g_menu| 0))& (0+255)
  2315  0F7B  0084               	movwf	4
  2316  0F7C  3001               	movlw	1
  2317  0F7D  1383               	bcf	3,7	;select IRP bank0
  2318  0F7E  0280               	subwf	0,f
  2319                           
  2320                           ;menu.c: 70: SaveMenuItem(g_menu.index);
  2321  0F7F  086B               	movf	_g_menu+8,w
  2322  0F80  120A  158A  2784   	fcall	_SaveMenuItem
  2323  0F83  0008               	return
  2324  0F84                     __end_of_ValueDec:	
  2325                           
  2326                           	psect	text5
  2327  0F84                     __ptext5:	
  2328 ;; *************** function _SaveMenuItem *****************
  2329 ;; Defined at:
  2330 ;;		line 32 in file "menu.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  item            1    wreg     unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  item            1    9[COMMON] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         1       0       0       0       0
  2346 ;;      Temps:          2       0       0       0       0
  2347 ;;      Totals:         3       0       0       0       0
  2348 ;;Total ram usage:        3 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    2
  2351 ;; This function calls:
  2352 ;;		_eeprom_write
  2353 ;; This function is called by:
  2354 ;;		_ValueInc
  2355 ;;		_ValueDec
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _SaveMenuItem
  2361  0F84                     _SaveMenuItem:	
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _SaveMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2365                           ;SaveMenuItem@item stored from wreg
  2366  0F84  00F9               	movwf	SaveMenuItem@item
  2367                           
  2368                           ;menu.c: 34: eeprom_write(item, g_menu.items[item].value);
  2369  0F85  0879               	movf	SaveMenuItem@item,w
  2370  0F86  00F7               	movwf	??_SaveMenuItem
  2371  0F87  0777               	addwf	??_SaveMenuItem,w
  2372  0F88  3E63               	addlw	(low (_g_menu| 0))& (0+255)
  2373  0F89  0084               	movwf	4
  2374  0F8A  1383               	bcf	3,7	;select IRP bank0
  2375  0F8B  0800               	movf	0,w
  2376  0F8C  00F8               	movwf	??_SaveMenuItem+1
  2377  0F8D  0878               	movf	??_SaveMenuItem+1,w
  2378  0F8E  00F4               	movwf	eeprom_write@value
  2379  0F8F  0879               	movf	SaveMenuItem@item,w
  2380  0F90  120A  118A  27BB   	fcall	_eeprom_write
  2381  0F93  0008               	return
  2382  0F94                     __end_of_SaveMenuItem:	
  2383                           
  2384                           	psect	text6
  2385  07BB                     __ptext6:	
  2386 ;; *************** function _eeprom_write *****************
  2387 ;; Defined at:
  2388 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eewrite.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  addr            1    wreg     unsigned char 
  2391 ;;  value           1    4[COMMON] unsigned char 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  addr            1    6[COMMON] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         1       0       0       0       0
  2404 ;;      Locals:         1       0       0       0       0
  2405 ;;      Temps:          1       0       0       0       0
  2406 ;;      Totals:         3       0       0       0       0
  2407 ;;Total ram usage:        3 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    1
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_SaveMenuItem
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _eeprom_write
  2419  07BB                     _eeprom_write:	
  2420                           
  2421                           ;incstack = 0
  2422                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2423                           ;eeprom_write@addr stored from wreg
  2424  07BB  00F6               	movwf	eeprom_write@addr
  2425  07BC                     l311:	
  2426  07BC  1683               	bsf	3,5	;RP0=1, select bank3
  2427  07BD  1703               	bsf	3,6	;RP1=1, select bank3
  2428  07BE  188C               	btfsc	12,1	;volsfr
  2429  07BF  2FBC               	goto	l311
  2430  07C0  0876               	movf	eeprom_write@addr,w
  2431  07C1  1283               	bcf	3,5	;RP0=0, select bank2
  2432  07C2  1703               	bsf	3,6	;RP1=1, select bank2
  2433  07C3  008D               	movwf	13	;volatile
  2434  07C4  0874               	movf	eeprom_write@value,w
  2435  07C5  008C               	movwf	12	;volatile
  2436  07C6  303F               	movlw	63
  2437  07C7  00F5               	movwf	??_eeprom_write
  2438  07C8  0875               	movf	??_eeprom_write,w
  2439  07C9  1683               	bsf	3,5	;RP0=1, select bank3
  2440  07CA  1703               	bsf	3,6	;RP1=1, select bank3
  2441  07CB  058C               	andwf	12,f	;volsfr
  2442  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  2443  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  2444  07CE  1003               	bcf	3,0	;volatile
  2445  07CF  1B8B               	btfsc	11,7	;volatile
  2446  07D0  1403               	bsf	3,0	;volatile
  2447  07D1  138B               	bcf	11,7	;volatile
  2448  07D2  1683               	bsf	3,5	;RP0=1, select bank3
  2449  07D3  1703               	bsf	3,6	;RP1=1, select bank3
  2450  07D4  150C               	bsf	12,2	;volsfr
  2451  07D5  3055               	movlw	85
  2452  07D6  008D               	movwf	13	;volsfr
  2453  07D7  30AA               	movlw	170
  2454  07D8  008D               	movwf	13	;volsfr
  2455  07D9  148C               	bsf	12,1	;volsfr
  2456  07DA  110C               	bcf	12,2	;volsfr
  2457  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  2458  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  2459  07DD  1C03               	btfss	3,0	;volatile
  2460  07DE  0008               	return
  2461  07DF  178B               	bsf	11,7	;volatile
  2462  07E0  0008               	return
  2463  07E1                     __end_of_eeprom_write:	
  2464                           
  2465                           	psect	text7
  2466  05B1                     __ptext7:	
  2467 ;; *************** function _ShowMenu *****************
  2468 ;; Defined at:
  2469 ;;		line 23 in file "menu.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  i               1   25[BANK0 ] char 
  2474 ;;  count           1   24[BANK0 ] char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         0       0       0       0       0
  2485 ;;      Locals:         0       2       0       0       0
  2486 ;;      Temps:          0       4       0       0       0
  2487 ;;      Totals:         0       6       0       0       0
  2488 ;;Total ram usage:        6 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    4
  2491 ;; This function calls:
  2492 ;;		_LCDByte
  2493 ;;		_LCDGotoXY
  2494 ;;		_LCDWriteInt
  2495 ;;		_LCDWriteString
  2496 ;; This function is called by:
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _ShowMenu
  2503  05B1                     _ShowMenu:	
  2504                           
  2505                           ;menu.c: 25: { LCDGotoXY(0,0); int8_t count = LCDWriteString(g_menu.items[g_menu.index].
      +                          name); for(int8_t i = count + 0; i < 16; i++) { (LCDByte(' ',1)); } };
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in _ShowMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2509  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2510  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2511  05B3  01A6               	clrf	LCDGotoXY@y
  2512  05B4  3000               	movlw	0
  2513  05B5  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  2514  05BA  1403               	setc
  2515  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2516  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2517  05BD  0D6B               	rlf	_g_menu+8,w
  2518  05BE  3E63               	addlw	(low (_g_menu| 0))& (0+255)
  2519  05BF  0084               	movwf	4
  2520  05C0  1383               	bcf	3,7	;select IRP bank0
  2521  05C1  0800               	movf	0,w
  2522  05C2  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  2523  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  2524  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  2525  05C9  00B4               	movwf	??_ShowMenu
  2526  05CA  0834               	movf	??_ShowMenu,w
  2527  05CB  00B8               	movwf	ShowMenu@count
  2528  05CC  0838               	movf	ShowMenu@count,w
  2529  05CD  00B4               	movwf	??_ShowMenu
  2530  05CE  0834               	movf	??_ShowMenu,w
  2531  05CF  00B9               	movwf	ShowMenu@i
  2532  05D0  0839               	movf	ShowMenu@i,w
  2533  05D1  3A80               	xorlw	128
  2534  05D2  3E70               	addlw	-144
  2535  05D3  1803               	btfsc	3,0
  2536  05D4  2DE8               	goto	l1851
  2537  05D5                     l1845:	
  2538  05D5  01F9               	clrf	LCDByte@isdata
  2539  05D6  0AF9               	incf	LCDByte@isdata,f
  2540  05D7  3020               	movlw	32
  2541  05D8  120A  118A  255A  120A  118A  	fcall	_LCDByte
  2542  05DD  3001               	movlw	1
  2543  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  2544  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  2545  05E0  00B4               	movwf	??_ShowMenu
  2546  05E1  0834               	movf	??_ShowMenu,w
  2547  05E2  07B9               	addwf	ShowMenu@i,f
  2548  05E3  0839               	movf	ShowMenu@i,w
  2549  05E4  3A80               	xorlw	128
  2550  05E5  3E70               	addlw	-144
  2551  05E6  1C03               	skipc
  2552  05E7  2DD5               	goto	l1845
  2553  05E8                     l1851:	
  2554                           
  2555                           ;menu.c: 26: { LCDGotoXY(4,0); LCDWriteInt(g_menu.items[g_menu.index].value,3);};
  2556  05E8  01A6               	clrf	LCDGotoXY@y
  2557  05E9  3004               	movlw	4
  2558  05EA  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  2559  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  2560  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  2561  05F1  086B               	movf	_g_menu+8,w
  2562  05F2  00B4               	movwf	??_ShowMenu
  2563  05F3  0734               	addwf	??_ShowMenu,w
  2564  05F4  3E63               	addlw	(low (_g_menu| 0))& (0+255)
  2565  05F5  0084               	movwf	4
  2566  05F6  1383               	bcf	3,7	;select IRP bank0
  2567  05F7  0800               	movf	0,w
  2568  05F8  00B5               	movwf	??_ShowMenu+1
  2569  05F9  01B6               	clrf	??_ShowMenu+2
  2570  05FA  0835               	movf	??_ShowMenu+1,w
  2571  05FB  00A6               	movwf	LCDWriteInt@val
  2572  05FC  0836               	movf	??_ShowMenu+2,w
  2573  05FD  00A7               	movwf	LCDWriteInt@val+1
  2574  05FE  3003               	movlw	3
  2575  05FF  00B7               	movwf	??_ShowMenu+3
  2576  0600  0837               	movf	??_ShowMenu+3,w
  2577  0601  00A8               	movwf	LCDWriteInt@field_length
  2578  0602  120A  118A  233B   	fcall	_LCDWriteInt
  2579  0605  0008               	return
  2580  0606                     __end_of_ShowMenu:	
  2581                           
  2582                           	psect	text8
  2583  033B                     __ptext8:	
  2584 ;; *************** function _LCDWriteInt *****************
  2585 ;; Defined at:
  2586 ;;		line 328 in file "lcd_hd44780_pic16.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  val             2    6[BANK0 ] int 
  2589 ;;  field_length    1    8[BANK0 ] char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  str             5   11[BANK0 ] unsigned char [5]
  2592 ;;  i               2   18[BANK0 ] int 
  2593 ;;  j               2   16[BANK0 ] int 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      char 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       3       0       0       0
  2604 ;;      Locals:         0       9       0       0       0
  2605 ;;      Temps:          0       2       0       0       0
  2606 ;;      Totals:         0      14       0       0       0
  2607 ;;Total ram usage:       14 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    3
  2610 ;; This function calls:
  2611 ;;		_LCDByte
  2612 ;;		___awdiv
  2613 ;;		___awmod
  2614 ;; This function is called by:
  2615 ;;		_main
  2616 ;;		_ShowMenu
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function _LCDWriteInt
  2622  033B                     _LCDWriteInt:	
  2623                           
  2624                           ;lcd_hd44780_pic16.c: 330: char str[5]={-16,-16,-16,-16,-16};
  2625                           
  2626                           ;incstack = 0
  2627                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2628  033B  302B               	movlw	LCDWriteInt@str& (0+255)
  2629  033C  0084               	movwf	4
  2630  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2631  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2632  033F  085B               	movf	LCDWriteInt@F1646,w
  2633  0340  1383               	bcf	3,7	;select IRP bank0
  2634  0341  0080               	movwf	0
  2635  0342  0A84               	incf	4,f
  2636  0343  085C               	movf	LCDWriteInt@F1646+1,w
  2637  0344  0080               	movwf	0
  2638  0345  0A84               	incf	4,f
  2639  0346  085D               	movf	LCDWriteInt@F1646+2,w
  2640  0347  0080               	movwf	0
  2641  0348  0A84               	incf	4,f
  2642  0349  085E               	movf	LCDWriteInt@F1646+3,w
  2643  034A  0080               	movwf	0
  2644  034B  0A84               	incf	4,f
  2645  034C  085F               	movf	LCDWriteInt@F1646+4,w
  2646  034D  0080               	movwf	0
  2647                           
  2648                           ;lcd_hd44780_pic16.c: 331: int i=4,j=0;
  2649  034E  3004               	movlw	4
  2650  034F  00B2               	movwf	LCDWriteInt@i
  2651  0350  3000               	movlw	0
  2652  0351  00B3               	movwf	LCDWriteInt@i+1
  2653  0352  01B0               	clrf	LCDWriteInt@j
  2654  0353  01B1               	clrf	LCDWriteInt@j+1
  2655                           
  2656                           ;lcd_hd44780_pic16.c: 333: if(val == 0)
  2657  0354  0826               	movf	LCDWriteInt@val,w
  2658  0355  0427               	iorwf	LCDWriteInt@val+1,w
  2659  0356  1903               	btfsc	3,2
  2660                           
  2661                           ;lcd_hd44780_pic16.c: 334: {
  2662                           ;lcd_hd44780_pic16.c: 335: str[4] = 0;
  2663  0357  01AF               	clrf	LCDWriteInt@str+4
  2664                           
  2665                           ;lcd_hd44780_pic16.c: 336: }
  2666                           ;lcd_hd44780_pic16.c: 338: if(val<0)
  2667  0358  1FA7               	btfss	LCDWriteInt@val+1,7
  2668  0359  2B69               	goto	l1723
  2669                           
  2670                           ;lcd_hd44780_pic16.c: 339: {
  2671                           ;lcd_hd44780_pic16.c: 340: (LCDByte('-',1));
  2672  035A  01F9               	clrf	LCDByte@isdata
  2673  035B  0AF9               	incf	LCDByte@isdata,f
  2674  035C  302D               	movlw	45
  2675  035D  120A  118A  255A  120A  118A  	fcall	_LCDByte
  2676                           
  2677                           ;lcd_hd44780_pic16.c: 341: val=val*-1;
  2678  0362  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0363  1303               	bcf	3,6	;RP1=0, select bank0
  2680  0364  09A6               	comf	LCDWriteInt@val,f
  2681  0365  09A7               	comf	LCDWriteInt@val+1,f
  2682  0366  0AA6               	incf	LCDWriteInt@val,f
  2683  0367  1903               	skipnz
  2684  0368  0AA7               	incf	LCDWriteInt@val+1,f
  2685  0369                     l1723:	
  2686                           ;lcd_hd44780_pic16.c: 342: }
  2687                           ;lcd_hd44780_pic16.c: 344: while(val)
  2688                           
  2689  0369  0826               	movf	LCDWriteInt@val,w
  2690  036A  0427               	iorwf	LCDWriteInt@val+1,w
  2691  036B  1903               	btfsc	3,2
  2692  036C  2B9E               	goto	l1725
  2693                           
  2694                           ;lcd_hd44780_pic16.c: 345: {
  2695                           ;lcd_hd44780_pic16.c: 346: str[i]=val%10;
  2696  036D  300A               	movlw	10
  2697  036E  00F4               	movwf	___awmod@divisor
  2698  036F  3000               	movlw	0
  2699  0370  00F5               	movwf	___awmod@divisor+1
  2700  0371  0827               	movf	LCDWriteInt@val+1,w
  2701  0372  00F7               	movwf	___awmod@dividend+1
  2702  0373  0826               	movf	LCDWriteInt@val,w
  2703  0374  00F6               	movwf	___awmod@dividend
  2704  0375  120A  118A  2654  120A  118A  	fcall	___awmod
  2705  037A  0874               	movf	?___awmod,w
  2706  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2707  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2708  037D  00A9               	movwf	??_LCDWriteInt
  2709  037E  0832               	movf	LCDWriteInt@i,w
  2710  037F  3E2B               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2711  0380  0084               	movwf	4
  2712  0381  0829               	movf	??_LCDWriteInt,w
  2713  0382  1383               	bcf	3,7	;select IRP bank0
  2714  0383  0080               	movwf	0
  2715                           
  2716                           ;lcd_hd44780_pic16.c: 347: val=val/10;
  2717  0384  300A               	movlw	10
  2718  0385  00F4               	movwf	___awdiv@divisor
  2719  0386  3000               	movlw	0
  2720  0387  00F5               	movwf	___awdiv@divisor+1
  2721  0388  0827               	movf	LCDWriteInt@val+1,w
  2722  0389  00F7               	movwf	___awdiv@dividend+1
  2723  038A  0826               	movf	LCDWriteInt@val,w
  2724  038B  00F6               	movwf	___awdiv@dividend
  2725  038C  120A  118A  24A4  120A  118A  	fcall	___awdiv
  2726  0391  0875               	movf	?___awdiv+1,w
  2727  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0393  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0394  00A7               	movwf	LCDWriteInt@val+1
  2730  0395  0874               	movf	?___awdiv,w
  2731  0396  00A6               	movwf	LCDWriteInt@val
  2732                           
  2733                           ;lcd_hd44780_pic16.c: 348: i--;
  2734  0397  30FF               	movlw	255
  2735  0398  07B2               	addwf	LCDWriteInt@i,f
  2736  0399  1803               	skipnc
  2737  039A  0AB3               	incf	LCDWriteInt@i+1,f
  2738  039B  30FF               	movlw	255
  2739  039C  07B3               	addwf	LCDWriteInt@i+1,f
  2740  039D  2B69               	goto	l1723
  2741  039E                     l1725:	
  2742                           
  2743                           ;lcd_hd44780_pic16.c: 349: }
  2744                           ;lcd_hd44780_pic16.c: 350: if(field_length==-1)
  2745  039E  0A28               	incf	LCDWriteInt@field_length,w
  2746  039F  1903               	btfsc	3,2
  2747  03A0  2BB3               	goto	l1733
  2748                           
  2749                           ;lcd_hd44780_pic16.c: 352: else
  2750                           ;lcd_hd44780_pic16.c: 353: j=5-field_length;
  2751                           
  2752                           ;lcd_hd44780_pic16.c: 351: while(str[j]==-16) j++;
  2753  03A1  0828               	movf	LCDWriteInt@field_length,w
  2754  03A2  00A9               	movwf	??_LCDWriteInt
  2755  03A3  01AA               	clrf	??_LCDWriteInt+1
  2756  03A4  1BA9               	btfsc	??_LCDWriteInt,7
  2757  03A5  03AA               	decf	??_LCDWriteInt+1,f
  2758  03A6  09A9               	comf	??_LCDWriteInt,f
  2759  03A7  09AA               	comf	??_LCDWriteInt+1,f
  2760  03A8  0AA9               	incf	??_LCDWriteInt,f
  2761  03A9  1903               	skipnz
  2762  03AA  0AAA               	incf	??_LCDWriteInt+1,f
  2763  03AB  0829               	movf	??_LCDWriteInt,w
  2764  03AC  3E05               	addlw	5
  2765  03AD  00B0               	movwf	LCDWriteInt@j
  2766  03AE  082A               	movf	??_LCDWriteInt+1,w
  2767  03AF  1803               	skipnc
  2768  03B0  3E01               	addlw	1
  2769  03B1  3E00               	addlw	0
  2770  03B2  00B1               	movwf	LCDWriteInt@j+1
  2771  03B3                     l1733:	
  2772                           
  2773                           ;lcd_hd44780_pic16.c: 356: for(i=j;i<5;i++)
  2774  03B3  0831               	movf	LCDWriteInt@j+1,w
  2775  03B4  00B3               	movwf	LCDWriteInt@i+1
  2776  03B5  0830               	movf	LCDWriteInt@j,w
  2777  03B6  00B2               	movwf	LCDWriteInt@i
  2778  03B7                     L3:	
  2779  03B7  0833               	movf	LCDWriteInt@i+1,w
  2780  03B8  3A80               	xorlw	128
  2781  03B9  00FF               	movwf	127
  2782  03BA  3080               	movlw	128
  2783  03BB  027F               	subwf	127,w
  2784  03BC  1D03               	skipz
  2785  03BD  2BC0               	goto	u1555
  2786  03BE  3005               	movlw	5
  2787  03BF  0232               	subwf	LCDWriteInt@i,w
  2788  03C0                     u1555:	
  2789  03C0  1803               	btfsc	3,0
  2790  03C1  0008               	return
  2791                           
  2792                           ;lcd_hd44780_pic16.c: 357: {
  2793                           ;lcd_hd44780_pic16.c: 358: (LCDByte(48+str[i],1));
  2794  03C2  01F9               	clrf	LCDByte@isdata
  2795  03C3  0AF9               	incf	LCDByte@isdata,f
  2796  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2797  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2798  03C6  0832               	movf	LCDWriteInt@i,w
  2799  03C7  3E2B               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2800  03C8  0084               	movwf	4
  2801  03C9  1383               	bcf	3,7	;select IRP bank0
  2802  03CA  0800               	movf	0,w
  2803  03CB  3E30               	addlw	48
  2804  03CC  120A  118A  255A  120A  118A  	fcall	_LCDByte
  2805  03D1  3001               	movlw	1
  2806  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2807  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2808  03D4  07B2               	addwf	LCDWriteInt@i,f
  2809  03D5  1803               	skipnc
  2810  03D6  0AB3               	incf	LCDWriteInt@i+1,f
  2811  03D7  3000               	movlw	0
  2812  03D8  07B3               	addwf	LCDWriteInt@i+1,f
  2813  03D9  2BB7               	goto	L3
  2814  03DA                     __end_of_LCDWriteInt:	
  2815                           ;lcd_hd44780_pic16.c: 359: }
  2816                           ;lcd_hd44780_pic16.c: 360: return field_length;
  2817                           ;	Return value of _LCDWriteInt is never used
  2818                           
  2819                           
  2820                           	psect	text9
  2821  0654                     __ptext9:	
  2822 ;; *************** function ___awmod *****************
  2823 ;; Defined at:
  2824 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  divisor         2    4[COMMON] int 
  2827 ;;  dividend        2    6[COMMON] int 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  sign            1    1[BANK0 ] unsigned char 
  2830 ;;  counter         1    0[BANK0 ] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  2    4[COMMON] int 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2840 ;;      Params:         4       0       0       0       0
  2841 ;;      Locals:         0       2       0       0       0
  2842 ;;      Temps:          1       0       0       0       0
  2843 ;;      Totals:         5       2       0       0       0
  2844 ;;Total ram usage:        7 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_LCDWriteInt
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function ___awmod
  2856  0654                     ___awmod:	
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2860  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0656  01A1               	clrf	___awmod@sign
  2863  0657  1FF7               	btfss	___awmod@dividend+1,7
  2864  0658  2E60               	goto	l1611
  2865  0659  09F6               	comf	___awmod@dividend,f
  2866  065A  09F7               	comf	___awmod@dividend+1,f
  2867  065B  0AF6               	incf	___awmod@dividend,f
  2868  065C  1903               	skipnz
  2869  065D  0AF7               	incf	___awmod@dividend+1,f
  2870  065E  01A1               	clrf	___awmod@sign
  2871  065F  0AA1               	incf	___awmod@sign,f
  2872  0660                     l1611:	
  2873  0660  1FF5               	btfss	___awmod@divisor+1,7
  2874  0661  2E67               	goto	l1615
  2875  0662  09F4               	comf	___awmod@divisor,f
  2876  0663  09F5               	comf	___awmod@divisor+1,f
  2877  0664  0AF4               	incf	___awmod@divisor,f
  2878  0665  1903               	skipnz
  2879  0666  0AF5               	incf	___awmod@divisor+1,f
  2880  0667                     l1615:	
  2881  0667  0874               	movf	___awmod@divisor,w
  2882  0668  0475               	iorwf	___awmod@divisor+1,w
  2883  0669  1903               	btfsc	3,2
  2884  066A  2E94               	goto	l1633
  2885  066B  01A0               	clrf	___awmod@counter
  2886  066C  0AA0               	incf	___awmod@counter,f
  2887  066D                     l1623:	
  2888  066D  1BF5               	btfsc	___awmod@divisor+1,7
  2889  066E  2E7B               	goto	l1625
  2890  066F  3001               	movlw	1
  2891  0670                     u1395:	
  2892  0670  1003               	clrc
  2893  0671  0DF4               	rlf	___awmod@divisor,f
  2894  0672  0DF5               	rlf	___awmod@divisor+1,f
  2895  0673  3EFF               	addlw	-1
  2896  0674  1D03               	skipz
  2897  0675  2E70               	goto	u1395
  2898  0676  3001               	movlw	1
  2899  0677  00F8               	movwf	??___awmod
  2900  0678  0878               	movf	??___awmod,w
  2901  0679  07A0               	addwf	___awmod@counter,f
  2902  067A  2E6D               	goto	l1623
  2903  067B                     l1625:	
  2904  067B  0875               	movf	___awmod@divisor+1,w
  2905  067C  0277               	subwf	___awmod@dividend+1,w
  2906  067D  1D03               	skipz
  2907  067E  2E81               	goto	u1415
  2908  067F  0874               	movf	___awmod@divisor,w
  2909  0680  0276               	subwf	___awmod@dividend,w
  2910  0681                     u1415:	
  2911  0681  1C03               	skipc
  2912  0682  2E89               	goto	l1629
  2913  0683  0874               	movf	___awmod@divisor,w
  2914  0684  02F6               	subwf	___awmod@dividend,f
  2915  0685  0875               	movf	___awmod@divisor+1,w
  2916  0686  1C03               	skipc
  2917  0687  03F7               	decf	___awmod@dividend+1,f
  2918  0688  02F7               	subwf	___awmod@dividend+1,f
  2919  0689                     l1629:	
  2920  0689  3001               	movlw	1
  2921  068A                     u1425:	
  2922  068A  1003               	clrc
  2923  068B  0CF5               	rrf	___awmod@divisor+1,f
  2924  068C  0CF4               	rrf	___awmod@divisor,f
  2925  068D  3EFF               	addlw	-1
  2926  068E  1D03               	skipz
  2927  068F  2E8A               	goto	u1425
  2928  0690  3001               	movlw	1
  2929  0691  02A0               	subwf	___awmod@counter,f
  2930  0692  1D03               	btfss	3,2
  2931  0693  2E7B               	goto	l1625
  2932  0694                     l1633:	
  2933  0694  0821               	movf	___awmod@sign,w
  2934  0695  1903               	btfsc	3,2
  2935  0696  2E9C               	goto	l1637
  2936  0697  09F6               	comf	___awmod@dividend,f
  2937  0698  09F7               	comf	___awmod@dividend+1,f
  2938  0699  0AF6               	incf	___awmod@dividend,f
  2939  069A  1903               	skipnz
  2940  069B  0AF7               	incf	___awmod@dividend+1,f
  2941  069C                     l1637:	
  2942  069C  0877               	movf	___awmod@dividend+1,w
  2943  069D  00F5               	movwf	?___awmod+1
  2944  069E  0876               	movf	___awmod@dividend,w
  2945  069F  00F4               	movwf	?___awmod
  2946  06A0  0008               	return
  2947  06A1                     __end_of___awmod:	
  2948                           
  2949                           	psect	text10
  2950  04A4                     __ptext10:	
  2951 ;; *************** function ___awdiv *****************
  2952 ;; Defined at:
  2953 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  divisor         2    4[COMMON] int 
  2956 ;;  dividend        2    6[COMMON] int 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  quotient        2    2[BANK0 ] int 
  2959 ;;  sign            1    1[BANK0 ] unsigned char 
  2960 ;;  counter         1    0[BANK0 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  2    4[COMMON] int 
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, status,0
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         4       0       0       0       0
  2971 ;;      Locals:         0       4       0       0       0
  2972 ;;      Temps:          1       0       0       0       0
  2973 ;;      Totals:         5       4       0       0       0
  2974 ;;Total ram usage:        9 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    1
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_LCDWriteInt
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function ___awdiv
  2986  04A4                     ___awdiv:	
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2990  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2991  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2992  04A6  01A1               	clrf	___awdiv@sign
  2993  04A7  1FF5               	btfss	___awdiv@divisor+1,7
  2994  04A8  2CB0               	goto	l1567
  2995  04A9  09F4               	comf	___awdiv@divisor,f
  2996  04AA  09F5               	comf	___awdiv@divisor+1,f
  2997  04AB  0AF4               	incf	___awdiv@divisor,f
  2998  04AC  1903               	skipnz
  2999  04AD  0AF5               	incf	___awdiv@divisor+1,f
  3000  04AE  01A1               	clrf	___awdiv@sign
  3001  04AF  0AA1               	incf	___awdiv@sign,f
  3002  04B0                     l1567:	
  3003  04B0  1FF7               	btfss	___awdiv@dividend+1,7
  3004  04B1  2CBB               	goto	l1573
  3005  04B2  09F6               	comf	___awdiv@dividend,f
  3006  04B3  09F7               	comf	___awdiv@dividend+1,f
  3007  04B4  0AF6               	incf	___awdiv@dividend,f
  3008  04B5  1903               	skipnz
  3009  04B6  0AF7               	incf	___awdiv@dividend+1,f
  3010  04B7  3001               	movlw	1
  3011  04B8  00F8               	movwf	??___awdiv
  3012  04B9  0878               	movf	??___awdiv,w
  3013  04BA  06A1               	xorwf	___awdiv@sign,f
  3014  04BB                     l1573:	
  3015  04BB  01A2               	clrf	___awdiv@quotient
  3016  04BC  01A3               	clrf	___awdiv@quotient+1
  3017  04BD  0874               	movf	___awdiv@divisor,w
  3018  04BE  0475               	iorwf	___awdiv@divisor+1,w
  3019  04BF  1903               	btfsc	3,2
  3020  04C0  2CF2               	goto	l1595
  3021  04C1  01A0               	clrf	___awdiv@counter
  3022  04C2  0AA0               	incf	___awdiv@counter,f
  3023  04C3                     l1583:	
  3024  04C3  1BF5               	btfsc	___awdiv@divisor+1,7
  3025  04C4  2CD1               	goto	l1585
  3026  04C5  3001               	movlw	1
  3027  04C6                     u1295:	
  3028  04C6  1003               	clrc
  3029  04C7  0DF4               	rlf	___awdiv@divisor,f
  3030  04C8  0DF5               	rlf	___awdiv@divisor+1,f
  3031  04C9  3EFF               	addlw	-1
  3032  04CA  1D03               	skipz
  3033  04CB  2CC6               	goto	u1295
  3034  04CC  3001               	movlw	1
  3035  04CD  00F8               	movwf	??___awdiv
  3036  04CE  0878               	movf	??___awdiv,w
  3037  04CF  07A0               	addwf	___awdiv@counter,f
  3038  04D0  2CC3               	goto	l1583
  3039  04D1                     l1585:	
  3040  04D1  3001               	movlw	1
  3041  04D2                     u1315:	
  3042  04D2  1003               	clrc
  3043  04D3  0DA2               	rlf	___awdiv@quotient,f
  3044  04D4  0DA3               	rlf	___awdiv@quotient+1,f
  3045  04D5  3EFF               	addlw	-1
  3046  04D6  1D03               	skipz
  3047  04D7  2CD2               	goto	u1315
  3048  04D8  0875               	movf	___awdiv@divisor+1,w
  3049  04D9  0277               	subwf	___awdiv@dividend+1,w
  3050  04DA  1D03               	skipz
  3051  04DB  2CDE               	goto	u1325
  3052  04DC  0874               	movf	___awdiv@divisor,w
  3053  04DD  0276               	subwf	___awdiv@dividend,w
  3054  04DE                     u1325:	
  3055  04DE  1C03               	skipc
  3056  04DF  2CE7               	goto	l1591
  3057  04E0  0874               	movf	___awdiv@divisor,w
  3058  04E1  02F6               	subwf	___awdiv@dividend,f
  3059  04E2  0875               	movf	___awdiv@divisor+1,w
  3060  04E3  1C03               	skipc
  3061  04E4  03F7               	decf	___awdiv@dividend+1,f
  3062  04E5  02F7               	subwf	___awdiv@dividend+1,f
  3063  04E6  1422               	bsf	___awdiv@quotient,0
  3064  04E7                     l1591:	
  3065  04E7  3001               	movlw	1
  3066  04E8                     u1335:	
  3067  04E8  1003               	clrc
  3068  04E9  0CF5               	rrf	___awdiv@divisor+1,f
  3069  04EA  0CF4               	rrf	___awdiv@divisor,f
  3070  04EB  3EFF               	addlw	-1
  3071  04EC  1D03               	skipz
  3072  04ED  2CE8               	goto	u1335
  3073  04EE  3001               	movlw	1
  3074  04EF  02A0               	subwf	___awdiv@counter,f
  3075  04F0  1D03               	btfss	3,2
  3076  04F1  2CD1               	goto	l1585
  3077  04F2                     l1595:	
  3078  04F2  0821               	movf	___awdiv@sign,w
  3079  04F3  1903               	btfsc	3,2
  3080  04F4  2CFA               	goto	l1599
  3081  04F5  09A2               	comf	___awdiv@quotient,f
  3082  04F6  09A3               	comf	___awdiv@quotient+1,f
  3083  04F7  0AA2               	incf	___awdiv@quotient,f
  3084  04F8  1903               	skipnz
  3085  04F9  0AA3               	incf	___awdiv@quotient+1,f
  3086  04FA                     l1599:	
  3087  04FA  0823               	movf	___awdiv@quotient+1,w
  3088  04FB  00F5               	movwf	?___awdiv+1
  3089  04FC  0822               	movf	___awdiv@quotient,w
  3090  04FD  00F4               	movwf	?___awdiv
  3091  04FE  0008               	return
  3092  04FF                     __end_of___awdiv:	
  3093                           
  3094                           	psect	text11
  3095  0F59                     __ptext11:	
  3096 ;; *************** function _MenuUp *****************
  3097 ;; Defined at:
  3098 ;;		line 40 in file "menu.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;		None
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         0       0       0       0       0
  3114 ;;      Temps:          1       0       0       0       0
  3115 ;;      Totals:         1       0       0       0       0
  3116 ;;Total ram usage:        1 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_main
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _MenuUp
  3128  0F59                     _MenuUp:	
  3129                           
  3130                           ;menu.c: 42: if(g_menu.index == 0)
  3131                           
  3132                           ;incstack = 0
  3133                           ; Regs used in _MenuUp: [wreg+status,2+status,0]
  3134  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0F5B  086B               	movf	_g_menu+8,w
  3137  0F5C  1D03               	btfss	3,2
  3138  0F5D  2F63               	goto	l1879
  3139                           
  3140                           ;menu.c: 43: {
  3141                           ;menu.c: 44: g_menu.index = 4 - 1;
  3142  0F5E  3003               	movlw	3
  3143  0F5F  00F4               	movwf	??_MenuUp
  3144  0F60  0874               	movf	??_MenuUp,w
  3145  0F61  00EB               	movwf	_g_menu+8
  3146                           
  3147                           ;menu.c: 45: }
  3148  0F62  0008               	return
  3149  0F63                     l1879:	
  3150                           
  3151                           ;menu.c: 46: else
  3152                           ;menu.c: 47: {
  3153                           ;menu.c: 48: g_menu.index--;
  3154  0F63  3001               	movlw	1
  3155  0F64  02EB               	subwf	_g_menu+8,f
  3156  0F65  0008               	return
  3157  0F66                     __end_of_MenuUp:	
  3158                           
  3159                           	psect	text12
  3160  0725                     __ptext12:	
  3161 ;; *************** function _MenuInit *****************
  3162 ;; Defined at:
  3163 ;;		line 7 in file "menu.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3177 ;;      Params:         0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0
  3179 ;;      Temps:          1       0       0       0       0
  3180 ;;      Totals:         1       0       0       0       0
  3181 ;;Total ram usage:        1 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    3
  3184 ;; This function calls:
  3185 ;;		_LoadMenuItem
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function _MenuInit
  3193  0725                     _MenuInit:	
  3194                           
  3195                           ;menu.c: 9: g_menu.items[0].name = "ID1:";
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _MenuInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3199  0725  3024               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3200  0726  00F9               	movwf	??_MenuInit
  3201  0727  0879               	movf	??_MenuInit,w
  3202  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0729  1303               	bcf	3,6	;RP1=0, select bank0
  3204  072A  00E4               	movwf	low ((_g_menu| 0+1))
  3205                           
  3206                           ;menu.c: 10: g_menu.items[0].value = LoadMenuItem(0);
  3207  072B  3000               	movlw	0
  3208  072C  120A  158A  2766  120A  118A  	fcall	_LoadMenuItem
  3209  0731  00F9               	movwf	??_MenuInit
  3210  0732  0879               	movf	??_MenuInit,w
  3211  0733  1283               	bcf	3,5	;RP0=0, select bank0
  3212  0734  1303               	bcf	3,6	;RP1=0, select bank0
  3213  0735  00E3               	movwf	_g_menu
  3214                           
  3215                           ;menu.c: 12: g_menu.items[1].name = "ID2:";
  3216  0736  3029               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3217  0737  00F9               	movwf	??_MenuInit
  3218  0738  0879               	movf	??_MenuInit,w
  3219  0739  00E6               	movwf	low ((_g_menu| 0+3))
  3220                           
  3221                           ;menu.c: 13: g_menu.items[1].value = LoadMenuItem(1);
  3222  073A  3001               	movlw	1
  3223  073B  120A  158A  2766  120A  118A  	fcall	_LoadMenuItem
  3224  0740  00F9               	movwf	??_MenuInit
  3225  0741  0879               	movf	??_MenuInit,w
  3226  0742  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0743  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0744  00E5               	movwf	_g_menu+2
  3229                           
  3230                           ;menu.c: 15: g_menu.items[2].name = "ID3:";
  3231  0745  302E               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3232  0746  00F9               	movwf	??_MenuInit
  3233  0747  0879               	movf	??_MenuInit,w
  3234  0748  00E8               	movwf	low ((_g_menu| 0+5))
  3235                           
  3236                           ;menu.c: 16: g_menu.items[2].value = LoadMenuItem(2);
  3237  0749  3002               	movlw	2
  3238  074A  120A  158A  2766  120A  118A  	fcall	_LoadMenuItem
  3239  074F  00F9               	movwf	??_MenuInit
  3240  0750  0879               	movf	??_MenuInit,w
  3241  0751  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0752  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0753  00E7               	movwf	_g_menu+4
  3244                           
  3245                           ;menu.c: 18: g_menu.items[3].name = "ID4:";
  3246  0754  3033               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3247  0755  00F9               	movwf	??_MenuInit
  3248  0756  0879               	movf	??_MenuInit,w
  3249  0757  00EA               	movwf	low ((_g_menu| 0+7))
  3250                           
  3251                           ;menu.c: 19: g_menu.items[3].value = LoadMenuItem(3);
  3252  0758  3003               	movlw	3
  3253  0759  120A  158A  2766   	fcall	_LoadMenuItem
  3254  075C  00F9               	movwf	??_MenuInit
  3255  075D  0879               	movf	??_MenuInit,w
  3256  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3257  075F  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0760  00E9               	movwf	_g_menu+6
  3259                           
  3260                           ;menu.c: 21: g_menu.index = 0;
  3261  0761  01EB               	clrf	_g_menu+8
  3262  0762  0008               	return
  3263  0763                     __end_of_MenuInit:	
  3264                           
  3265                           	psect	text13
  3266  0F66                     __ptext13:	
  3267 ;; *************** function _LoadMenuItem *****************
  3268 ;; Defined at:
  3269 ;;		line 36 in file "menu.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  item            1    wreg     unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  item            1    8[COMMON] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         0       0       0       0       0
  3284 ;;      Locals:         1       0       0       0       0
  3285 ;;      Temps:          2       0       0       0       0
  3286 ;;      Totals:         3       0       0       0       0
  3287 ;;Total ram usage:        3 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		_eeprom_read
  3292 ;; This function is called by:
  3293 ;;		_MenuInit
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           
  3298                           ;psect for function _LoadMenuItem
  3299  0F66                     _LoadMenuItem:	
  3300                           
  3301                           ;incstack = 0
  3302                           ; Regs used in _LoadMenuItem: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3303                           ;LoadMenuItem@item stored from wreg
  3304  0F66  00F8               	movwf	LoadMenuItem@item
  3305                           
  3306                           ;menu.c: 38: g_menu.items[item].value = eeprom_read(item);
  3307  0F67  0878               	movf	LoadMenuItem@item,w
  3308  0F68  120A  118A  27E1   	fcall	_eeprom_read
  3309  0F6B  00F6               	movwf	??_LoadMenuItem
  3310  0F6C  0878               	movf	LoadMenuItem@item,w
  3311  0F6D  00F7               	movwf	??_LoadMenuItem+1
  3312  0F6E  0777               	addwf	??_LoadMenuItem+1,w
  3313  0F6F  3E63               	addlw	(low (_g_menu| 0))& (0+255)
  3314  0F70  0084               	movwf	4
  3315  0F71  0876               	movf	??_LoadMenuItem,w
  3316  0F72  1383               	bcf	3,7	;select IRP bank0
  3317  0F73  0080               	movwf	0
  3318  0F74  0008               	return
  3319  0F75                     __end_of_LoadMenuItem:	
  3320                           
  3321                           	psect	text14
  3322  07E1                     __ptext14:	
  3323 ;; *************** function _eeprom_read *****************
  3324 ;; Defined at:
  3325 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\pic\eeread.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  addr            1    wreg     unsigned char 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  addr            1    5[COMMON] unsigned char 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      unsigned char 
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, status,0
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3339 ;;      Params:         0       0       0       0       0
  3340 ;;      Locals:         1       0       0       0       0
  3341 ;;      Temps:          1       0       0       0       0
  3342 ;;      Totals:         2       0       0       0       0
  3343 ;;Total ram usage:        2 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; Hardware stack levels required when called:    1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_LoadMenuItem
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           
  3354                           ;psect for function _eeprom_read
  3355  07E1                     _eeprom_read:	
  3356                           
  3357                           ;incstack = 0
  3358                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  3359                           ;eeprom_read@addr stored from wreg
  3360  07E1  00F5               	movwf	eeprom_read@addr
  3361  07E2                     l289:	
  3362  07E2  0064               	clrwdt	;# 
  3363  07E3  1683               	bsf	3,5	;RP0=1, select bank3
  3364  07E4  1703               	bsf	3,6	;RP1=1, select bank3
  3365  07E5  188C               	btfsc	12,1	;volsfr
  3366  07E6  2FE2               	goto	l289
  3367  07E7  0875               	movf	eeprom_read@addr,w
  3368  07E8  1283               	bcf	3,5	;RP0=0, select bank2
  3369  07E9  1703               	bsf	3,6	;RP1=1, select bank2
  3370  07EA  008D               	movwf	13	;volatile
  3371  07EB  303F               	movlw	63
  3372  07EC  00F4               	movwf	??_eeprom_read
  3373  07ED  0874               	movf	??_eeprom_read,w
  3374  07EE  1683               	bsf	3,5	;RP0=1, select bank3
  3375  07EF  1703               	bsf	3,6	;RP1=1, select bank3
  3376  07F0  058C               	andwf	12,f	;volsfr
  3377  07F1  140C               	bsf	12,0	;volsfr
  3378  07F2  1003               	clrc
  3379  07F3  180C               	btfsc	12,0	;volsfr
  3380  07F4  1403               	setc
  3381  07F5  3000               	movlw	0
  3382  07F6  1803               	skipnc
  3383  07F7  3001               	movlw	1
  3384  07F8  1283               	bcf	3,5	;RP0=0, select bank2
  3385  07F9  1703               	bsf	3,6	;RP1=1, select bank2
  3386  07FA  080C               	movf	12,w	;volatile
  3387  07FB  0008               	return
  3388  07FC                     __end_of_eeprom_read:	
  3389                           
  3390                           	psect	text15
  3391  0F4C                     __ptext15:	
  3392 ;; *************** function _MenuDown *****************
  3393 ;; Defined at:
  3394 ;;		line 51 in file "menu.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;		None
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         0       0       0       0       0
  3409 ;;      Locals:         0       0       0       0       0
  3410 ;;      Temps:          1       0       0       0       0
  3411 ;;      Totals:         1       0       0       0       0
  3412 ;;Total ram usage:        1 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           
  3423                           ;psect for function _MenuDown
  3424  0F4C                     _MenuDown:	
  3425                           
  3426                           ;menu.c: 53: if(g_menu.index == 4 - 1)
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _MenuDown: [wreg+status,2+status,0]
  3430  0F4C  3003               	movlw	3
  3431  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  3433  0F4F  066B               	xorwf	_g_menu+8,w
  3434  0F50  1D03               	btfss	3,2
  3435  0F51  2F54               	goto	l1889
  3436                           
  3437                           ;menu.c: 54: {
  3438                           ;menu.c: 55: g_menu.index = 0;
  3439  0F52  01EB               	clrf	_g_menu+8
  3440                           
  3441                           ;menu.c: 56: }
  3442  0F53  0008               	return
  3443  0F54                     l1889:	
  3444                           
  3445                           ;menu.c: 57: else
  3446                           ;menu.c: 58: {
  3447                           ;menu.c: 59: g_menu.index++;
  3448  0F54  3001               	movlw	1
  3449  0F55  00F4               	movwf	??_MenuDown
  3450  0F56  0874               	movf	??_MenuDown,w
  3451  0F57  07EB               	addwf	_g_menu+8,f
  3452  0F58  0008               	return
  3453  0F59                     __end_of_MenuDown:	
  3454                           
  3455                           	psect	text16
  3456  0F37                     __ptext16:	
  3457 ;; *************** function _LCDSetStyle *****************
  3458 ;; Defined at:
  3459 ;;		line 207 in file "lcd_hd44780_pic16.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  style           1    wreg     unsigned char 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  style           1    6[BANK0 ] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      void 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0, pclath, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3473 ;;      Params:         0       0       0       0       0
  3474 ;;      Locals:         0       1       0       0       0
  3475 ;;      Temps:          0       0       0       0       0
  3476 ;;      Totals:         0       1       0       0       0
  3477 ;;Total ram usage:        1 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    3
  3480 ;; This function calls:
  3481 ;;		_LCDByte
  3482 ;; This function is called by:
  3483 ;;		_main
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function _LCDSetStyle
  3489  0F37                     _LCDSetStyle:	
  3490                           
  3491                           ;incstack = 0
  3492                           ; Regs used in _LCDSetStyle: [wreg+status,2+status,0+pclath+cstack]
  3493                           ;LCDSetStyle@style stored from wreg
  3494  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0F39  00A6               	movwf	LCDSetStyle@style
  3497                           
  3498                           ;lcd_hd44780_pic16.c: 209: (LCDByte(0b00001100|style,0));
  3499  0F3A  01F9               	clrf	LCDByte@isdata
  3500  0F3B  0826               	movf	LCDSetStyle@style,w
  3501  0F3C  380C               	iorlw	12
  3502  0F3D  120A  118A  255A   	fcall	_LCDByte
  3503  0F40  0008               	return
  3504  0F41                     __end_of_LCDSetStyle:	
  3505                           
  3506                           	psect	text17
  3507  0440                     __ptext17:	
  3508 ;; *************** function _LCDInit *****************
  3509 ;; Defined at:
  3510 ;;		line 211 in file "lcd_hd44780_pic16.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  style           1    wreg     unsigned char 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  style           1    8[BANK0 ] unsigned char 
  3515 ;;  __i             1    9[BANK0 ] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       0       0       0       0
  3526 ;;      Locals:         0       2       0       0       0
  3527 ;;      Temps:          0       2       0       0       0
  3528 ;;      Totals:         0       4       0       0       0
  3529 ;;Total ram usage:        4 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    3
  3532 ;; This function calls:
  3533 ;;		_LCDBusyLoop
  3534 ;;		_LCDByte
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _LCDInit
  3542  0440                     _LCDInit:	
  3543                           
  3544                           ;incstack = 0
  3545                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3546                           ;LCDInit@style stored from wreg
  3547  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0442  00A8               	movwf	LCDInit@style
  3550                           
  3551                           ;lcd_hd44780_pic16.c: 213: _delay((unsigned long)((30)*(20000000/4000.0)));
  3552  0443  30C3               	movlw	195
  3553  0444  00A7               	movwf	??_LCDInit+1
  3554  0445  30CD               	movlw	205
  3555  0446  00A6               	movwf	??_LCDInit
  3556  0447                     u2337:	
  3557  0447  0BA6               	decfsz	??_LCDInit,f
  3558  0448  2C47               	goto	u2337
  3559  0449  0BA7               	decfsz	??_LCDInit+1,f
  3560  044A  2C47               	goto	u2337
  3561                           
  3562                           ;lcd_hd44780_pic16.c: 216: TRISC&=(~(0x0F<<4));
  3563  044B  300F               	movlw	15
  3564  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3565  044D  1303               	bcf	3,6	;RP1=0, select bank0
  3566  044E  00A6               	movwf	??_LCDInit
  3567  044F  0826               	movf	??_LCDInit,w
  3568  0450  1683               	bsf	3,5	;RP0=1, select bank1
  3569  0451  1303               	bcf	3,6	;RP1=0, select bank1
  3570  0452  0587               	andwf	7,f	;volatile
  3571                           
  3572                           ;lcd_hd44780_pic16.c: 218: TRISCbits.TRISC3=0;
  3573  0453  1187               	bcf	7,3	;volatile
  3574                           
  3575                           ;lcd_hd44780_pic16.c: 219: TRISCbits.TRISC1=0;
  3576  0454  1087               	bcf	7,1	;volatile
  3577                           
  3578                           ;lcd_hd44780_pic16.c: 220: TRISCbits.TRISC2=0;
  3579  0455  1107               	bcf	7,2	;volatile
  3580                           
  3581                           ;lcd_hd44780_pic16.c: 222: PORTC&=(~(0x0F<<4));
  3582  0456  300F               	movlw	15
  3583  0457  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0458  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0459  00A6               	movwf	??_LCDInit
  3586  045A  0826               	movf	??_LCDInit,w
  3587  045B  0587               	andwf	7,f	;volatile
  3588                           
  3589                           ;lcd_hd44780_pic16.c: 224: (RC3=0);
  3590  045C  1187               	bcf	7,3	;volatile
  3591                           
  3592                           ;lcd_hd44780_pic16.c: 225: (RC2=0);
  3593  045D  1107               	bcf	7,2	;volatile
  3594                           
  3595                           ;lcd_hd44780_pic16.c: 226: (RC1=0);
  3596  045E  1087               	bcf	7,1	;volatile
  3597                           
  3598                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3599  045F  2C60               	nop2	;2 cycle nop
  3600                           
  3601                           ;lcd_hd44780_pic16.c: 231: (RC3=1);
  3602  0460  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0461  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0462  1587               	bsf	7,3	;volatile
  3605                           
  3606                           ;lcd_hd44780_pic16.c: 232: PORTC|=((0b00000010)<<4);
  3607  0463  1687               	bsf	7,5	;volatile
  3608                           
  3609                           ;lcd_hd44780_pic16.c: 233: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3610  0464  2C65               	nop2	;2 cycle nop
  3611  0465  2C66               	nop2	;2 cycle nop
  3612  0466  0000               	nop
  3613                           
  3614                           ;lcd_hd44780_pic16.c: 234: (RC3=0);
  3615  0467  1283               	bcf	3,5	;RP0=0, select bank0
  3616  0468  1303               	bcf	3,6	;RP1=0, select bank0
  3617  0469  1187               	bcf	7,3	;volatile
  3618                           
  3619                           ;lcd_hd44780_pic16.c: 235: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3620  046A  2C6B               	nop2	;2 cycle nop
  3621  046B  2C6C               	nop2	;2 cycle nop
  3622  046C  0000               	nop
  3623                           
  3624                           ;lcd_hd44780_pic16.c: 238: LCDBusyLoop();
  3625  046D  120A  118A  23DA  120A  118A  	fcall	_LCDBusyLoop
  3626                           
  3627                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b00101000,0));
  3628  0472  01F9               	clrf	LCDByte@isdata
  3629  0473  3028               	movlw	40
  3630  0474  120A  118A  255A  120A  118A  	fcall	_LCDByte
  3631                           
  3632                           ;lcd_hd44780_pic16.c: 244: (LCDByte(0b00001100|style,0));
  3633  0479  01F9               	clrf	LCDByte@isdata
  3634  047A  1283               	bcf	3,5	;RP0=0, select bank0
  3635  047B  1303               	bcf	3,6	;RP1=0, select bank0
  3636  047C  0828               	movf	LCDInit@style,w
  3637  047D  380C               	iorlw	12
  3638  047E  120A  118A  255A  120A  118A  	fcall	_LCDByte
  3639                           
  3640                           ;lcd_hd44780_pic16.c: 247: (LCDByte(0b01000000,0));
  3641  0483  01F9               	clrf	LCDByte@isdata
  3642  0484  3040               	movlw	64
  3643  0485  120A  118A  255A  120A  118A  	fcall	_LCDByte
  3644                           
  3645                           ;lcd_hd44780_pic16.c: 249: uint8_t __i;
  3646                           ;lcd_hd44780_pic16.c: 250: for(__i=0;__i<sizeof(__cgram);__i++)
  3647  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3648  048B  1303               	bcf	3,6	;RP1=0, select bank0
  3649  048C  01A9               	clrf	LCDInit@__i
  3650  048D                     L4:	
  3651  048D  3008               	movlw	8
  3652  048E  0229               	subwf	LCDInit@__i,w
  3653  048F  1803               	btfsc	3,0
  3654  0490  0008               	return
  3655                           
  3656                           ;lcd_hd44780_pic16.c: 251: (LCDByte(__cgram[__i],1));
  3657  0491  01F9               	clrf	LCDByte@isdata
  3658  0492  0AF9               	incf	LCDByte@isdata,f
  3659  0493  0829               	movf	LCDInit@__i,w
  3660  0494  3E53               	addlw	(low (___cgram| 0))& (0+255)
  3661  0495  0084               	movwf	4
  3662  0496  1383               	bcf	3,7	;select IRP bank0
  3663  0497  0800               	movf	0,w
  3664  0498  120A  118A  255A  120A  118A  	fcall	_LCDByte
  3665  049D  3001               	movlw	1
  3666  049E  1283               	bcf	3,5	;RP0=0, select bank0
  3667  049F  1303               	bcf	3,6	;RP1=0, select bank0
  3668  04A0  00A6               	movwf	??_LCDInit
  3669  04A1  0826               	movf	??_LCDInit,w
  3670  04A2  07A9               	addwf	LCDInit@__i,f
  3671  04A3  2C8D               	goto	L4
  3672  04A4                     __end_of_LCDInit:	
  3673                           
  3674                           	psect	text18
  3675  06A1                     __ptext18:	
  3676 ;; *************** function _IOInit *****************
  3677 ;; Defined at:
  3678 ;;		line 114 in file "do_am.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		None
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0
  3695 ;;      Totals:         0       0       0       0       0
  3696 ;;Total ram usage:        0 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_main
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _IOInit
  3708  06A1                     _IOInit:	
  3709                           
  3710                           ;do_am.c: 117: (TRISAbits.TRISA6 = 1);
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _IOInit: []
  3714  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  3715  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  3716  06A3  1705               	bsf	5,6	;volatile
  3717                           
  3718                           ;do_am.c: 120: (TRISAbits.TRISA0 = 1);
  3719  06A4  1405               	bsf	5,0	;volatile
  3720                           
  3721                           ;do_am.c: 121: ANSELbits.ANS0 = 0;
  3722  06A5  1683               	bsf	3,5	;RP0=1, select bank3
  3723  06A6  1703               	bsf	3,6	;RP1=1, select bank3
  3724  06A7  1008               	bcf	8,0	;volatile
  3725                           
  3726                           ;do_am.c: 123: (TRISAbits.TRISA1 = 1);
  3727  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  3728  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  3729  06AA  1485               	bsf	5,1	;volatile
  3730                           
  3731                           ;do_am.c: 124: ANSELbits.ANS1 = 0;
  3732  06AB  1683               	bsf	3,5	;RP0=1, select bank3
  3733  06AC  1703               	bsf	3,6	;RP1=1, select bank3
  3734  06AD  1088               	bcf	8,1	;volatile
  3735                           
  3736                           ;do_am.c: 125: (TRISAbits.TRISA2 = 1);
  3737  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  3738  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  3739  06B0  1505               	bsf	5,2	;volatile
  3740                           
  3741                           ;do_am.c: 126: ANSELbits.ANS2 = 0;
  3742  06B1  1683               	bsf	3,5	;RP0=1, select bank3
  3743  06B2  1703               	bsf	3,6	;RP1=1, select bank3
  3744  06B3  1108               	bcf	8,2	;volatile
  3745                           
  3746                           ;do_am.c: 127: (TRISAbits.TRISA3 = 1);
  3747  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  3748  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  3749  06B6  1585               	bsf	5,3	;volatile
  3750                           
  3751                           ;do_am.c: 128: ANSELbits.ANS3 = 0;
  3752  06B7  1683               	bsf	3,5	;RP0=1, select bank3
  3753  06B8  1703               	bsf	3,6	;RP1=1, select bank3
  3754  06B9  1188               	bcf	8,3	;volatile
  3755                           
  3756                           ;do_am.c: 130: (TRISAbits.TRISA7 = 0);
  3757  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  3758  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  3759  06BC  1385               	bcf	5,7	;volatile
  3760                           
  3761                           ;do_am.c: 132: (TRISBbits.TRISB0 = 0);
  3762  06BD  1006               	bcf	6,0	;volatile
  3763                           
  3764                           ;do_am.c: 133: ANSELHbits.ANS12 = 0;
  3765  06BE  1683               	bsf	3,5	;RP0=1, select bank3
  3766  06BF  1703               	bsf	3,6	;RP1=1, select bank3
  3767  06C0  1209               	bcf	9,4	;volatile
  3768                           
  3769                           ;do_am.c: 135: (TRISBbits.TRISB1 = 0);
  3770  06C1  1683               	bsf	3,5	;RP0=1, select bank1
  3771  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  3772  06C3  1086               	bcf	6,1	;volatile
  3773                           
  3774                           ;do_am.c: 136: ANSELHbits.ANS10 = 0;
  3775  06C4  1683               	bsf	3,5	;RP0=1, select bank3
  3776  06C5  1703               	bsf	3,6	;RP1=1, select bank3
  3777  06C6  1109               	bcf	9,2	;volatile
  3778                           
  3779                           ;do_am.c: 138: (TRISBbits.TRISB2 = 0);
  3780  06C7  1683               	bsf	3,5	;RP0=1, select bank1
  3781  06C8  1303               	bcf	3,6	;RP1=0, select bank1
  3782  06C9  1106               	bcf	6,2	;volatile
  3783                           
  3784                           ;do_am.c: 139: ANSELHbits.ANS8 = 0;
  3785  06CA  1683               	bsf	3,5	;RP0=1, select bank3
  3786  06CB  1703               	bsf	3,6	;RP1=1, select bank3
  3787  06CC  1009               	bcf	9,0	;volatile
  3788                           
  3789                           ;do_am.c: 141: (TRISBbits.TRISB3 = 0);
  3790  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  3791  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  3792  06CF  1186               	bcf	6,3	;volatile
  3793                           
  3794                           ;do_am.c: 142: ANSELHbits.ANS9 = 0;
  3795  06D0  1683               	bsf	3,5	;RP0=1, select bank3
  3796  06D1  1703               	bsf	3,6	;RP1=1, select bank3
  3797  06D2  1089               	bcf	9,1	;volatile
  3798                           
  3799                           ;do_am.c: 144: RA7 = 1;
  3800  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3801  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3802  06D5  1785               	bsf	5,7	;volatile
  3803                           
  3804                           ;do_am.c: 147: (TRISBbits.TRISB4 = 1);
  3805  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  3806  06D7  1303               	bcf	3,6	;RP1=0, select bank1
  3807  06D8  1606               	bsf	6,4	;volatile
  3808                           
  3809                           ;do_am.c: 148: ANSELHbits.ANS11 = 0;
  3810  06D9  1683               	bsf	3,5	;RP0=1, select bank3
  3811  06DA  1703               	bsf	3,6	;RP1=1, select bank3
  3812  06DB  1189               	bcf	9,3	;volatile
  3813                           
  3814                           ;do_am.c: 150: (TRISBbits.TRISB6 = 1);
  3815  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3816  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  3817  06DE  1706               	bsf	6,6	;volatile
  3818                           
  3819                           ;do_am.c: 152: (TRISBbits.TRISB5 = 1);
  3820  06DF  1686               	bsf	6,5	;volatile
  3821                           
  3822                           ;do_am.c: 153: ANSELHbits.ANS13 = 0;
  3823  06E0  1683               	bsf	3,5	;RP0=1, select bank3
  3824  06E1  1703               	bsf	3,6	;RP1=1, select bank3
  3825  06E2  1289               	bcf	9,5	;volatile
  3826                           
  3827                           ;do_am.c: 155: (TRISBbits.TRISB7 = 1);
  3828  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3829  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  3830  06E5  1786               	bsf	6,7	;volatile
  3831  06E6  0008               	return
  3832  06E7                     __end_of_IOInit:	
  3833                           
  3834                           	psect	text19
  3835  078F                     __ptext19:	
  3836 ;; *************** function _ClearMenu *****************
  3837 ;; Defined at:
  3838 ;;		line 28 in file "menu.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  i               1   12[BANK0 ] char 
  3843 ;;  count           1   11[BANK0 ] char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3853 ;;      Params:         0       0       0       0       0
  3854 ;;      Locals:         0       2       0       0       0
  3855 ;;      Temps:          0       1       0       0       0
  3856 ;;      Totals:         0       3       0       0       0
  3857 ;;Total ram usage:        3 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    4
  3860 ;; This function calls:
  3861 ;;		_LCDByte
  3862 ;;		_LCDGotoXY
  3863 ;;		_LCDWriteString
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           
  3870                           ;psect for function _ClearMenu
  3871  078F                     _ClearMenu:	
  3872                           
  3873                           ;menu.c: 30: { LCDGotoXY(0,0); int8_t count = LCDWriteString(""); for(int8_t i = count +
      +                           0; i < 16; i++) { (LCDByte(' ',1)); } };
  3874                           
  3875                           ;incstack = 0
  3876                           ; Regs used in _ClearMenu: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3877  078F  1283               	bcf	3,5	;RP0=0, select bank0
  3878  0790  1303               	bcf	3,6	;RP1=0, select bank0
  3879  0791  01A6               	clrf	LCDGotoXY@y
  3880  0792  3000               	movlw	0
  3881  0793  120A  158A  27DA  120A  118A  	fcall	_LCDGotoXY
  3882  0798  3028               	movlw	(low (((STR_10+4)-__stringbase)| (0+32768)))& (0+255)
  3883  0799  120A  118A  24FF  120A  118A  	fcall	_LCDWriteString
  3884  079E  1283               	bcf	3,5	;RP0=0, select bank0
  3885  079F  1303               	bcf	3,6	;RP1=0, select bank0
  3886  07A0  00AA               	movwf	??_ClearMenu
  3887  07A1  082A               	movf	??_ClearMenu,w
  3888  07A2  00AB               	movwf	ClearMenu@count
  3889  07A3  082B               	movf	ClearMenu@count,w
  3890  07A4  00AA               	movwf	??_ClearMenu
  3891  07A5  082A               	movf	??_ClearMenu,w
  3892  07A6  00AC               	movwf	ClearMenu@i
  3893  07A7                     L5:	
  3894  07A7  082C               	movf	ClearMenu@i,w
  3895  07A8  3A80               	xorlw	128
  3896  07A9  3E70               	addlw	-144
  3897  07AA  1803               	btfsc	3,0
  3898  07AB  0008               	return
  3899  07AC  01F9               	clrf	LCDByte@isdata
  3900  07AD  0AF9               	incf	LCDByte@isdata,f
  3901  07AE  3020               	movlw	32
  3902  07AF  120A  118A  255A  120A  118A  	fcall	_LCDByte
  3903  07B4  3001               	movlw	1
  3904  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3905  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3906  07B7  00AA               	movwf	??_ClearMenu
  3907  07B8  082A               	movf	??_ClearMenu,w
  3908  07B9  07AC               	addwf	ClearMenu@i,f
  3909  07BA  2FA7               	goto	L5
  3910  07BB                     __end_of_ClearMenu:	
  3911                           
  3912                           	psect	text20
  3913  04FF                     __ptext20:	
  3914 ;; *************** function _LCDWriteString *****************
  3915 ;; Defined at:
  3916 ;;		line 283 in file "lcd_hd44780_pic16.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  msg             1    wreg     PTR const unsigned char 
  3919 ;;		 -> STR_14(1), STR_13(5), STR_12(5), STR_11(5), 
  3920 ;;		 -> STR_10(5), STR_9(5), STR_8(3), STR_7(12), 
  3921 ;;		 -> STR_6(13), STR_5(10), STR_4(10), STR_3(5), 
  3922 ;;		 -> STR_2(1), 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  msg             1    9[BANK0 ] PTR const unsigned char 
  3925 ;;		 -> STR_14(1), STR_13(5), STR_12(5), STR_11(5), 
  3926 ;;		 -> STR_10(5), STR_9(5), STR_8(3), STR_7(12), 
  3927 ;;		 -> STR_6(13), STR_5(10), STR_4(10), STR_3(5), 
  3928 ;;		 -> STR_2(1), 
  3929 ;;  cc              1    8[BANK0 ] char 
  3930 ;;  count           1    7[BANK0 ] char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      char 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       0       0       0       0
  3941 ;;      Locals:         0       3       0       0       0
  3942 ;;      Temps:          0       1       0       0       0
  3943 ;;      Totals:         0       4       0       0       0
  3944 ;;Total ram usage:        4 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    3
  3947 ;; This function calls:
  3948 ;;		_LCDByte
  3949 ;; This function is called by:
  3950 ;;		_main
  3951 ;;		_ShowMenu
  3952 ;;		_ClearMenu
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _LCDWriteString
  3958  04FF                     _LCDWriteString:	
  3959                           
  3960                           ;incstack = 0
  3961                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3962                           ;LCDWriteString@msg stored from wreg
  3963  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3964  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3965  0501  00A9               	movwf	LCDWriteString@msg
  3966                           
  3967                           ;lcd_hd44780_pic16.c: 285: int8_t count = 0;
  3968  0502  01A7               	clrf	LCDWriteString@count
  3969  0503                     l1695:	
  3970                           ;lcd_hd44780_pic16.c: 286: while(*msg!='\0')
  3971                           
  3972  0503  0829               	movf	LCDWriteString@msg,w
  3973  0504  0084               	movwf	4
  3974  0505  120A  118A  2606  120A  118A  	fcall	stringdir
  3975  050A  3A00               	xorlw	0
  3976  050B  1903               	btfsc	3,2
  3977  050C  2D58               	goto	l1697
  3978                           
  3979                           ;lcd_hd44780_pic16.c: 287: {
  3980                           ;lcd_hd44780_pic16.c: 289: if(*msg=='%')
  3981  050D  0829               	movf	LCDWriteString@msg,w
  3982  050E  0084               	movwf	4
  3983  050F  120A  118A  2606  120A  118A  	fcall	stringdir
  3984  0514  3A25               	xorlw	37
  3985  0515  1D03               	skipz
  3986  0516  2D3F               	goto	l1689
  3987                           
  3988                           ;lcd_hd44780_pic16.c: 290: {
  3989                           ;lcd_hd44780_pic16.c: 291: msg++;
  3990  0517  3001               	movlw	1
  3991  0518  00A6               	movwf	??_LCDWriteString
  3992  0519  0826               	movf	??_LCDWriteString,w
  3993  051A  07A9               	addwf	LCDWriteString@msg,f
  3994                           
  3995                           ;lcd_hd44780_pic16.c: 292: int8_t cc=*msg-'0';
  3996  051B  0829               	movf	LCDWriteString@msg,w
  3997  051C  0084               	movwf	4
  3998  051D  120A  118A  2606  120A  118A  	fcall	stringdir
  3999  0522  3ED0               	addlw	-48
  4000  0523  00A6               	movwf	??_LCDWriteString
  4001  0524  0826               	movf	??_LCDWriteString,w
  4002  0525  00A8               	movwf	LCDWriteString@cc
  4003                           
  4004                           ;lcd_hd44780_pic16.c: 294: if(cc>=0 && cc<=7)
  4005  0526  1BA8               	btfsc	LCDWriteString@cc,7
  4006  0527  2D31               	goto	l1681
  4007  0528  0828               	movf	LCDWriteString@cc,w
  4008  0529  3A80               	xorlw	128
  4009  052A  3E78               	addlw	-136
  4010  052B  1803               	skipnc
  4011  052C  2D31               	goto	l1681
  4012                           
  4013                           ;lcd_hd44780_pic16.c: 295: {
  4014                           ;lcd_hd44780_pic16.c: 296: (LCDByte(cc,1));
  4015  052D  01F9               	clrf	LCDByte@isdata
  4016  052E  0AF9               	incf	LCDByte@isdata,f
  4017  052F  0828               	movf	LCDWriteString@cc,w
  4018  0530  2D48               	goto	L6
  4019  0531                     l1681:	
  4020                           ;lcd_hd44780_pic16.c: 298: }
  4021                           
  4022                           ;lcd_hd44780_pic16.c: 297: count++;
  4023                           
  4024                           
  4025                           ;lcd_hd44780_pic16.c: 299: else
  4026                           ;lcd_hd44780_pic16.c: 300: {
  4027                           ;lcd_hd44780_pic16.c: 301: (LCDByte('%',1));
  4028  0531  01F9               	clrf	LCDByte@isdata
  4029  0532  0AF9               	incf	LCDByte@isdata,f
  4030  0533  3025               	movlw	37
  4031  0534  120A  118A  255A  120A  118A  	fcall	_LCDByte
  4032                           
  4033                           ;lcd_hd44780_pic16.c: 302: count++;
  4034  0539  3001               	movlw	1
  4035  053A  1283               	bcf	3,5	;RP0=0, select bank0
  4036  053B  1303               	bcf	3,6	;RP1=0, select bank0
  4037  053C  00A6               	movwf	??_LCDWriteString
  4038  053D  0826               	movf	??_LCDWriteString,w
  4039  053E  07A7               	addwf	LCDWriteString@count,f
  4040  053F                     l1689:	
  4041                           ;lcd_hd44780_pic16.c: 305: }
  4042                           ;lcd_hd44780_pic16.c: 306: }
  4043                           
  4044                           ;lcd_hd44780_pic16.c: 304: count++;
  4045                           
  4046                           ;lcd_hd44780_pic16.c: 303: (LCDByte(*msg,1));
  4047                           
  4048                           
  4049                           ;lcd_hd44780_pic16.c: 307: else
  4050                           ;lcd_hd44780_pic16.c: 308: {
  4051                           ;lcd_hd44780_pic16.c: 309: (LCDByte(*msg,1));
  4052  053F  01F9               	clrf	LCDByte@isdata
  4053  0540  0AF9               	incf	LCDByte@isdata,f
  4054  0541  0829               	movf	LCDWriteString@msg,w
  4055  0542  0084               	movwf	4
  4056  0543  120A  118A  2606  120A  118A  	fcall	stringdir
  4057  0548                     L6:	
  4058  0548  120A  118A  255A  120A  118A  	fcall	_LCDByte
  4059                           
  4060                           ;lcd_hd44780_pic16.c: 310: count++;
  4061  054D  3001               	movlw	1
  4062  054E  1283               	bcf	3,5	;RP0=0, select bank0
  4063  054F  1303               	bcf	3,6	;RP1=0, select bank0
  4064  0550  00A6               	movwf	??_LCDWriteString
  4065  0551  0826               	movf	??_LCDWriteString,w
  4066  0552  07A7               	addwf	LCDWriteString@count,f
  4067                           
  4068                           ;lcd_hd44780_pic16.c: 311: }
  4069                           ;lcd_hd44780_pic16.c: 312: msg++;
  4070  0553  3001               	movlw	1
  4071  0554  00A6               	movwf	??_LCDWriteString
  4072  0555  0826               	movf	??_LCDWriteString,w
  4073  0556  07A9               	addwf	LCDWriteString@msg,f
  4074  0557  2D03               	goto	l1695
  4075  0558                     l1697:	
  4076                           
  4077                           ;lcd_hd44780_pic16.c: 313: }
  4078                           ;lcd_hd44780_pic16.c: 315: return count;
  4079  0558  0827               	movf	LCDWriteString@count,w
  4080  0559  0008               	return
  4081  055A                     __end_of_LCDWriteString:	
  4082                           
  4083                           	psect	text21
  4084  0FDA                     __ptext21:	
  4085 ;; *************** function _LCDGotoXY *****************
  4086 ;; Defined at:
  4087 ;;		line 367 in file "lcd_hd44780_pic16.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  x               1    wreg     unsigned char 
  4090 ;;  y               1    6[BANK0 ] unsigned char 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  x               1    8[BANK0 ] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         0       1       0       0       0
  4103 ;;      Locals:         0       1       0       0       0
  4104 ;;      Temps:          0       1       0       0       0
  4105 ;;      Totals:         0       3       0       0       0
  4106 ;;Total ram usage:        3 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    3
  4109 ;; This function calls:
  4110 ;;		_LCDByte
  4111 ;; This function is called by:
  4112 ;;		_main
  4113 ;;		_ShowMenu
  4114 ;;		_ClearMenu
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function _LCDGotoXY
  4120  0FDA                     _LCDGotoXY:	
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4124                           ;LCDGotoXY@x stored from wreg
  4125  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  4126  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  4127  0FDC  00A8               	movwf	LCDGotoXY@x
  4128                           
  4129                           ;lcd_hd44780_pic16.c: 369: if(x>=20) return;
  4130  0FDD  3014               	movlw	20
  4131  0FDE  0228               	subwf	LCDGotoXY@x,w
  4132  0FDF  1803               	btfsc	3,0
  4133  0FE0  0008               	return
  4134  0FE1  2FEB               	goto	l1661
  4135  0FE2                     l218:	
  4136                           ;lcd_hd44780_pic16.c: 377: case 1:
  4137                           
  4138                           ;lcd_hd44780_pic16.c: 376: break;
  4139                           
  4140                           ;lcd_hd44780_pic16.c: 374: {
  4141                           ;lcd_hd44780_pic16.c: 375: case 0:
  4142                           
  4143                           ;lcd_hd44780_pic16.c: 373: switch(y)
  4144                           
  4145                           
  4146                           ;lcd_hd44780_pic16.c: 378: x|=0b01000000;
  4147  0FE2  1728               	bsf	LCDGotoXY@x,6
  4148                           
  4149                           ;lcd_hd44780_pic16.c: 379: break;
  4150  0FE3  2FF9               	goto	l217
  4151  0FE4                     l1655:	
  4152                           ;lcd_hd44780_pic16.c: 380: case 2:
  4153                           
  4154                           
  4155                           ;lcd_hd44780_pic16.c: 381: x+=0x14;
  4156  0FE4  3014               	movlw	20
  4157  0FE5  2FE7               	goto	L7
  4158  0FE6                     l1657:	
  4159                           ;lcd_hd44780_pic16.c: 383: case 3:
  4160                           
  4161                           ;lcd_hd44780_pic16.c: 382: break;
  4162                           
  4163                           
  4164                           ;lcd_hd44780_pic16.c: 384: x+=0x54;
  4165  0FE6  3054               	movlw	84
  4166  0FE7                     L7:	
  4167  0FE7  00A7               	movwf	??_LCDGotoXY
  4168  0FE8  0827               	movf	??_LCDGotoXY,w
  4169  0FE9  07A8               	addwf	LCDGotoXY@x,f
  4170                           
  4171                           ;lcd_hd44780_pic16.c: 386: }
  4172                           
  4173                           ;lcd_hd44780_pic16.c: 385: break;
  4174  0FEA  2FF9               	goto	l217
  4175  0FEB                     l1661:	
  4176  0FEB  0826               	movf	LCDGotoXY@y,w
  4177                           
  4178                           ; Switch size 1, requested type "space"
  4179                           ; Number of cases is 4, Range of values is 0 to 3
  4180                           ; switch strategies available:
  4181                           ; Name         Instructions Cycles
  4182                           ; simple_byte           13     7 (average)
  4183                           ; direct_byte           20     8 (fixed)
  4184                           ; jumptable            260     6 (fixed)
  4185                           ;	Chosen strategy is simple_byte
  4186  0FEC  3A00               	xorlw	0	; case 0
  4187  0FED  1903               	skipnz
  4188  0FEE  2FF9               	goto	l217
  4189  0FEF  3A01               	xorlw	1	; case 1
  4190  0FF0  1903               	skipnz
  4191  0FF1  2FE2               	goto	l218
  4192  0FF2  3A03               	xorlw	3	; case 2
  4193  0FF3  1903               	skipnz
  4194  0FF4  2FE4               	goto	l1655
  4195  0FF5  3A01               	xorlw	1	; case 3
  4196  0FF6  1903               	skipnz
  4197  0FF7  2FE6               	goto	l1657
  4198  0FF8  2FF9               	goto	l217
  4199  0FF9                     l217:	
  4200                           
  4201                           ;lcd_hd44780_pic16.c: 408: x|=0b10000000;
  4202  0FF9  17A8               	bsf	LCDGotoXY@x,7
  4203                           
  4204                           ;lcd_hd44780_pic16.c: 409: (LCDByte(x,0));
  4205  0FFA  01F9               	clrf	LCDByte@isdata
  4206  0FFB  0828               	movf	LCDGotoXY@x,w
  4207  0FFC  120A  118A  255A   	fcall	_LCDByte
  4208  0FFF  0008               	return
  4209  1000                     __end_of_LCDGotoXY:	
  4210                           
  4211                           	psect	text22
  4212  055A                     __ptext22:	
  4213 ;; *************** function _LCDByte *****************
  4214 ;; Defined at:
  4215 ;;		line 80 in file "lcd_hd44780_pic16.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  c               1    wreg     unsigned char 
  4218 ;;  isdata          1    9[COMMON] unsigned char 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  c               1    4[BANK0 ] unsigned char 
  4221 ;;  temp            1    5[BANK0 ] unsigned char 
  4222 ;;  ln              1    3[BANK0 ] unsigned char 
  4223 ;;  hn              1    2[BANK0 ] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0, pclath, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4233 ;;      Params:         1       0       0       0       0
  4234 ;;      Locals:         0       4       0       0       0
  4235 ;;      Temps:          0       2       0       0       0
  4236 ;;      Totals:         1       6       0       0       0
  4237 ;;Total ram usage:        7 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    2
  4240 ;; This function calls:
  4241 ;;		_LCDBusyLoop
  4242 ;; This function is called by:
  4243 ;;		_main
  4244 ;;		_LCDSetStyle
  4245 ;;		_LCDInit
  4246 ;;		_LCDWriteString
  4247 ;;		_LCDWriteInt
  4248 ;;		_LCDGotoXY
  4249 ;;		_ShowMenu
  4250 ;;		_ClearMenu
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           
  4255                           ;psect for function _LCDByte
  4256  055A                     _LCDByte:	
  4257                           
  4258                           ;incstack = 0
  4259                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  4260                           ;LCDByte@c stored from wreg
  4261  055A  1283               	bcf	3,5	;RP0=0, select bank0
  4262  055B  1303               	bcf	3,6	;RP1=0, select bank0
  4263  055C  00A4               	movwf	LCDByte@c
  4264                           
  4265                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  4266                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  4267                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  4268  055D  0824               	movf	LCDByte@c,w
  4269  055E  00A0               	movwf	??_LCDByte
  4270  055F  3004               	movlw	4
  4271  0560                     u1185:	
  4272  0560  1003               	clrc
  4273  0561  0CA0               	rrf	??_LCDByte,f
  4274  0562  3EFF               	addlw	-1
  4275  0563  1D03               	skipz
  4276  0564  2D60               	goto	u1185
  4277  0565  0820               	movf	??_LCDByte,w
  4278  0566  00A1               	movwf	??_LCDByte+1
  4279  0567  0821               	movf	??_LCDByte+1,w
  4280  0568  00A2               	movwf	LCDByte@hn
  4281                           
  4282                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  4283  0569  0824               	movf	LCDByte@c,w
  4284  056A  390F               	andlw	15
  4285  056B  00A0               	movwf	??_LCDByte
  4286  056C  0820               	movf	??_LCDByte,w
  4287  056D  00A3               	movwf	LCDByte@ln
  4288                           
  4289                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  4290  056E  0879               	movf	LCDByte@isdata,w
  4291  056F  1D03               	btfss	3,2
  4292  0570  2D73               	goto	l168
  4293                           
  4294                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  4295  0571  1087               	bcf	7,1	;volatile
  4296  0572  2D74               	goto	l169
  4297  0573                     l168:	
  4298                           
  4299                           ;lcd_hd44780_pic16.c: 97: else
  4300                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  4301  0573  1487               	bsf	7,1	;volatile
  4302  0574                     l169:	
  4303                           
  4304                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4305  0574  2D75               	nop2	;2 cycle nop
  4306                           
  4307                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  4308  0575  1283               	bcf	3,5	;RP0=0, select bank0
  4309  0576  1303               	bcf	3,6	;RP1=0, select bank0
  4310  0577  1587               	bsf	7,3	;volatile
  4311                           
  4312                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  4313  0578  0822               	movf	LCDByte@hn,w
  4314  0579  00A0               	movwf	??_LCDByte
  4315  057A  3004               	movlw	4
  4316  057B                     u1205:	
  4317  057B  1003               	clrc
  4318  057C  0DA0               	rlf	??_LCDByte,f
  4319  057D  3EFF               	addlw	-1
  4320  057E  1D03               	skipz
  4321  057F  2D7B               	goto	u1205
  4322  0580  0807               	movf	7,w	;volatile
  4323  0581  390F               	andlw	15
  4324  0582  0420               	iorwf	??_LCDByte,w
  4325  0583  00A1               	movwf	??_LCDByte+1
  4326  0584  0821               	movf	??_LCDByte+1,w
  4327  0585  00A5               	movwf	LCDByte@temp
  4328                           
  4329                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  4330  0586  0825               	movf	LCDByte@temp,w
  4331  0587  0087               	movwf	7	;volatile
  4332                           
  4333                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4334  0588  2D89               	nop2	;2 cycle nop
  4335  0589  2D8A               	nop2	;2 cycle nop
  4336  058A  0000               	nop
  4337                           
  4338                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  4339  058B  1283               	bcf	3,5	;RP0=0, select bank0
  4340  058C  1303               	bcf	3,6	;RP1=0, select bank0
  4341  058D  1187               	bcf	7,3	;volatile
  4342                           
  4343                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4344  058E  2D8F               	nop2	;2 cycle nop
  4345  058F  2D90               	nop2	;2 cycle nop
  4346  0590  0000               	nop
  4347                           
  4348                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  4349  0591  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0592  1303               	bcf	3,6	;RP1=0, select bank0
  4351  0593  1587               	bsf	7,3	;volatile
  4352                           
  4353                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  4354  0594  0823               	movf	LCDByte@ln,w
  4355  0595  00A0               	movwf	??_LCDByte
  4356  0596  3004               	movlw	4
  4357  0597                     u1215:	
  4358  0597  1003               	clrc
  4359  0598  0DA0               	rlf	??_LCDByte,f
  4360  0599  3EFF               	addlw	-1
  4361  059A  1D03               	skipz
  4362  059B  2D97               	goto	u1215
  4363  059C  0807               	movf	7,w	;volatile
  4364  059D  390F               	andlw	15
  4365  059E  0420               	iorwf	??_LCDByte,w
  4366  059F  00A1               	movwf	??_LCDByte+1
  4367  05A0  0821               	movf	??_LCDByte+1,w
  4368  05A1  00A5               	movwf	LCDByte@temp
  4369                           
  4370                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  4371  05A2  0825               	movf	LCDByte@temp,w
  4372  05A3  0087               	movwf	7	;volatile
  4373                           
  4374                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4375  05A4  2DA5               	nop2	;2 cycle nop
  4376  05A5  2DA6               	nop2	;2 cycle nop
  4377  05A6  0000               	nop
  4378                           
  4379                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  4380  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  4381  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  4382  05A9  1187               	bcf	7,3	;volatile
  4383                           
  4384                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4385  05AA  2DAB               	nop2	;2 cycle nop
  4386  05AB  2DAC               	nop2	;2 cycle nop
  4387  05AC  0000               	nop
  4388                           
  4389                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  4390  05AD  120A  118A  23DA   	fcall	_LCDBusyLoop
  4391  05B0  0008               	return
  4392  05B1                     __end_of_LCDByte:	
  4393                           
  4394                           	psect	text23
  4395  03DA                     __ptext23:	
  4396 ;; *************** function _LCDBusyLoop *****************
  4397 ;; Defined at:
  4398 ;;		line 135 in file "lcd_hd44780_pic16.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  status          1    8[COMMON] unsigned char 
  4403 ;;  temp            1    7[COMMON] unsigned char 
  4404 ;;  busy            1    6[COMMON] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4414 ;;      Params:         0       0       0       0       0
  4415 ;;      Locals:         3       0       0       0       0
  4416 ;;      Temps:          2       0       0       0       0
  4417 ;;      Totals:         5       0       0       0       0
  4418 ;;Total ram usage:        5 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_LCDByte
  4425 ;;		_LCDInit
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           
  4430                           ;psect for function _LCDBusyLoop
  4431  03DA                     _LCDBusyLoop:	
  4432                           
  4433                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4434                           
  4435                           ;incstack = 0
  4436                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  4437  03DA  01F8               	clrf	LCDBusyLoop@status
  4438                           
  4439                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  4440  03DB  30F0               	movlw	240
  4441  03DC  00F4               	movwf	??_LCDBusyLoop
  4442  03DD  0874               	movf	??_LCDBusyLoop,w
  4443  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  4444  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  4445  03E0  0487               	iorwf	7,f	;volatile
  4446                           
  4447                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  4448  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  4449  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  4450  03E3  1507               	bsf	7,2	;volatile
  4451                           
  4452                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  4453  03E4  1087               	bcf	7,1	;volatile
  4454                           
  4455                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4456  03E5  2BE6               	nop2	;2 cycle nop
  4457  03E6                     l1469:	
  4458                           ;lcd_hd44780_pic16.c: 153: do
  4459                           
  4460                           
  4461                           ;lcd_hd44780_pic16.c: 154: {
  4462                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  4463  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  4464  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  4465  03E8  1587               	bsf	7,3	;volatile
  4466                           
  4467                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4468  03E9  2BEA               	nop2	;2 cycle nop
  4469                           
  4470                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  4471  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  4472  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  4473  03EC  0807               	movf	7,w	;volatile
  4474  03ED  00F4               	movwf	??_LCDBusyLoop
  4475  03EE  3004               	movlw	4
  4476  03EF                     u1145:	
  4477  03EF  1003               	clrc
  4478  03F0  0CF4               	rrf	??_LCDBusyLoop,f
  4479  03F1  3EFF               	addlw	-1
  4480  03F2  1D03               	skipz
  4481  03F3  2BEF               	goto	u1145
  4482  03F4  0874               	movf	??_LCDBusyLoop,w
  4483  03F5  00F5               	movwf	??_LCDBusyLoop+1
  4484  03F6  0875               	movf	??_LCDBusyLoop+1,w
  4485  03F7  00F8               	movwf	LCDBusyLoop@status
  4486                           
  4487                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4488  03F8  0878               	movf	LCDBusyLoop@status,w
  4489  03F9  00F4               	movwf	??_LCDBusyLoop
  4490  03FA  3003               	movlw	3
  4491  03FB                     u1155:	
  4492  03FB  1003               	clrc
  4493  03FC  0DF4               	rlf	??_LCDBusyLoop,f
  4494  03FD  3EFF               	addlw	-1
  4495  03FE  1D03               	skipz
  4496  03FF  2BFB               	goto	u1155
  4497  0400  1003               	clrc
  4498  0401  0D74               	rlf	??_LCDBusyLoop,w
  4499  0402  00F5               	movwf	??_LCDBusyLoop+1
  4500  0403  0875               	movf	??_LCDBusyLoop+1,w
  4501  0404  00F8               	movwf	LCDBusyLoop@status
  4502                           
  4503                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4504  0405  2C06               	nop2	;2 cycle nop
  4505                           
  4506                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  4507  0406  1283               	bcf	3,5	;RP0=0, select bank0
  4508  0407  1303               	bcf	3,6	;RP1=0, select bank0
  4509  0408  1187               	bcf	7,3	;volatile
  4510                           
  4511                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4512  0409  2C0A               	nop2	;2 cycle nop
  4513  040A  2C0B               	nop2	;2 cycle nop
  4514  040B  0000               	nop
  4515                           
  4516                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  4517  040C  1283               	bcf	3,5	;RP0=0, select bank0
  4518  040D  1303               	bcf	3,6	;RP1=0, select bank0
  4519  040E  1587               	bsf	7,3	;volatile
  4520                           
  4521                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4522  040F  2C10               	nop2	;2 cycle nop
  4523                           
  4524                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  4525  0410  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0411  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0412  0807               	movf	7,w	;volatile
  4528  0413  00F4               	movwf	??_LCDBusyLoop
  4529  0414  3004               	movlw	4
  4530  0415                     u1165:	
  4531  0415  1003               	clrc
  4532  0416  0CF4               	rrf	??_LCDBusyLoop,f
  4533  0417  3EFF               	addlw	-1
  4534  0418  1D03               	skipz
  4535  0419  2C15               	goto	u1165
  4536  041A  0874               	movf	??_LCDBusyLoop,w
  4537  041B  00F5               	movwf	??_LCDBusyLoop+1
  4538  041C  0875               	movf	??_LCDBusyLoop+1,w
  4539  041D  00F7               	movwf	LCDBusyLoop@temp
  4540                           
  4541                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  4542  041E  300F               	movlw	15
  4543  041F  00F4               	movwf	??_LCDBusyLoop
  4544  0420  0874               	movf	??_LCDBusyLoop,w
  4545  0421  05F7               	andwf	LCDBusyLoop@temp,f
  4546                           
  4547                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  4548  0422  0878               	movf	LCDBusyLoop@status,w
  4549  0423  0477               	iorwf	LCDBusyLoop@temp,w
  4550  0424  00F4               	movwf	??_LCDBusyLoop
  4551  0425  0874               	movf	??_LCDBusyLoop,w
  4552  0426  00F8               	movwf	LCDBusyLoop@status
  4553                           
  4554                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  4555  0427  0878               	movf	LCDBusyLoop@status,w
  4556  0428  3980               	andlw	128
  4557  0429  00F4               	movwf	??_LCDBusyLoop
  4558  042A  0874               	movf	??_LCDBusyLoop,w
  4559  042B  00F6               	movwf	LCDBusyLoop@busy
  4560                           
  4561                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4562  042C  2C2D               	nop2	;2 cycle nop
  4563                           
  4564                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  4565  042D  1283               	bcf	3,5	;RP0=0, select bank0
  4566  042E  1303               	bcf	3,6	;RP1=0, select bank0
  4567  042F  1187               	bcf	7,3	;volatile
  4568                           
  4569                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4570  0430  2C31               	nop2	;2 cycle nop
  4571  0431  2C32               	nop2	;2 cycle nop
  4572  0432  0000               	nop
  4573                           
  4574                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  4575  0433  0876               	movf	LCDBusyLoop@busy,w
  4576  0434  1D03               	btfss	3,2
  4577  0435  2BE6               	goto	l1469
  4578                           
  4579                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  4580  0436  1283               	bcf	3,5	;RP0=0, select bank0
  4581  0437  1303               	bcf	3,6	;RP1=0, select bank0
  4582  0438  1107               	bcf	7,2	;volatile
  4583                           
  4584                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  4585  0439  300F               	movlw	15
  4586  043A  00F4               	movwf	??_LCDBusyLoop
  4587  043B  0874               	movf	??_LCDBusyLoop,w
  4588  043C  1683               	bsf	3,5	;RP0=1, select bank1
  4589  043D  1303               	bcf	3,6	;RP1=0, select bank1
  4590  043E  0587               	andwf	7,f	;volatile
  4591  043F  0008               	return
  4592  0440                     __end_of_LCDBusyLoop:	
  4593                           
  4594                           	psect	text24
  4595  0FC6                     __ptext24:	
  4596 ;; *************** function _ADCInit *****************
  4597 ;; Defined at:
  4598 ;;		line 7 in file "adc_pic16.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4612 ;;      Params:         0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           
  4627                           ;psect for function _ADCInit
  4628  0FC6                     _ADCInit:	
  4629                           
  4630                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  4631                           
  4632                           ;incstack = 0
  4633                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  4634  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  4635  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  4636  0FC8  1686               	bsf	6,5	;volatile
  4637                           
  4638                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  4639  0FC9  1683               	bsf	3,5	;RP0=1, select bank3
  4640  0FCA  1703               	bsf	3,6	;RP1=1, select bank3
  4641  0FCB  1689               	bsf	9,5	;volatile
  4642                           
  4643                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  4644  0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  4645  0FCD  1303               	bcf	3,6	;RP1=0, select bank1
  4646  0FCE  121F               	bcf	31,4	;volatile
  4647                           
  4648                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  4649  0FCF  30C0               	movlw	192
  4650  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  4651  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  4652  0FD2  049F               	iorwf	31,f	;volatile
  4653                           
  4654                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  4655  0FD3  1683               	bsf	3,5	;RP0=1, select bank1
  4656  0FD4  1303               	bcf	3,6	;RP1=0, select bank1
  4657  0FD5  179F               	bsf	31,7	;volatile
  4658                           
  4659                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  4660  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  4661  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  4662  0FD8  141F               	bsf	31,0	;volatile
  4663  0FD9  0008               	return
  4664  0FDA                     __end_of_ADCInit:	
  4665                           
  4666                           	psect	text25
  4667  0F41                     __ptext25:	
  4668 ;; *************** function _ISR *****************
  4669 ;; Defined at:
  4670 ;;		line 177 in file "do_am.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;		None
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;		None
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		None
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4684 ;;      Params:         0       0       0       0       0
  4685 ;;      Locals:         0       0       0       0       0
  4686 ;;      Temps:          4       0       0       0       0
  4687 ;;      Totals:         4       0       0       0       0
  4688 ;;Total ram usage:        4 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		Interrupt level 1
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           
  4698                           ;psect for function _ISR
  4699  0F41                     _ISR:	
  4700  0F41  0873               	movf	??_ISR+3,w
  4701  0F42  00FF               	movwf	127
  4702  0F43  0872               	movf	??_ISR+2,w
  4703  0F44  008A               	movwf	10
  4704  0F45  0871               	movf	??_ISR+1,w
  4705  0F46  0084               	movwf	4
  4706  0F47  0E70               	swapf	??_ISR^(0+-128),w
  4707  0F48  0083               	movwf	3
  4708  0F49  0EFE               	swapf	126,f
  4709  0F4A  0E7E               	swapf	126,w
  4710  0F4B  0009               	retfie
  4711  0F4C                     __end_of_ISR:	
  4712  007E                     btemp	set	126	;btemp
  4713  007E                     wtemp	set	126
  4714  007E                     wtemp0	set	126
  4715  0080                     wtemp1	set	128
  4716  0082                     wtemp2	set	130
  4717  0084                     wtemp3	set	132
  4718  0086                     wtemp4	set	134
  4719  0088                     wtemp5	set	136
  4720  007F                     wtemp6	set	127
  4721  007E                     ttemp	set	126
  4722  007E                     ttemp0	set	126
  4723  0081                     ttemp1	set	129
  4724  0084                     ttemp2	set	132
  4725  0087                     ttemp3	set	135
  4726  007F                     ttemp4	set	127
  4727  007E                     ltemp	set	126
  4728  007E                     ltemp0	set	126
  4729  0082                     ltemp1	set	130
  4730  0086                     ltemp2	set	134
  4731  0080                     ltemp3	set	128
  4732                           
  4733                           	psect	intentry
  4734  0004                     __pintentry:	
  4735                           ;incstack = 0
  4736                           ; Regs used in _ISR: []
  4737                           
  4738  0004                     interrupt_function:	
  4739  007E                     saved_w	set	btemp
  4740  0004  00FE               	movwf	btemp
  4741  0005  0E03               	swapf	3,w
  4742  0006  00F0               	movwf	??_ISR
  4743  0007  0804               	movf	4,w
  4744  0008  00F1               	movwf	??_ISR+1
  4745  0009  080A               	movf	10,w
  4746  000A  00F2               	movwf	??_ISR+2
  4747  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4748  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4749  000D  087F               	movf	btemp+1,w
  4750  000E  00F3               	movwf	??_ISR+3
  4751  000F  120A  158A  2F41   	ljmp	_ISR


Data Sizes:
    Strings     72
    Constant    0
    Data        16
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     51      76
    BANK1            80      0      21
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 21
		 -> msg(BANK1[21]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 21
		 -> msg(BANK1[21]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    S497$name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 

    g_menu.items.name	PTR unsigned char  size(1) Largest target is 5
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_14(CODE[1]), STR_13(CODE[5]), STR_12(CODE[5]), STR_11(CODE[5]), 
		 -> STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[3]), STR_7(CODE[12]), 
		 -> STR_6(CODE[13]), STR_5(CODE[10]), STR_4(CODE[10]), STR_3(CODE[5]), 
		 -> STR_2(CODE[1]), 

    main@byte_385	PTR struct . size(1) Largest target is 21
		 -> msg(BANK1[21]), 

    main@byte	PTR struct . size(1) Largest target is 21
		 -> msg(BANK1[21]), 

    main@s	PTR unsigned char  size(1) Largest target is 21
		 -> msg(BANK1[21]), 

    pmsg	PTR struct . size(1) Largest target is 21
		 -> msg(BANK1[21]), 

    sp__memcpy	PTR void  size(1) Largest target is 21
		 -> msg(BANK1[21]), 

    compose@data	PTR unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    compose@pmsg	PTR struct . size(1) Largest target is 21
		 -> msg(BANK1[21]), 


Critical Paths under _main in COMMON

    _main->_LCDByte
    _main->_MenuInit
    _main->_compose
    _compose->_memcpy
    _ValueInc->_SaveMenuItem
    _ValueDec->_SaveMenuItem
    _SaveMenuItem->_eeprom_write
    _ShowMenu->_LCDByte
    _LCDWriteInt->_LCDByte
    _MenuInit->_LoadMenuItem
    _LoadMenuItem->_eeprom_read
    _LCDSetStyle->_LCDByte
    _LCDInit->_LCDByte
    _ClearMenu->_LCDByte
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ShowMenu
    _compose->_memcpy
    _ShowMenu->_LCDWriteInt
    _LCDWriteInt->_LCDByte
    _LCDSetStyle->_LCDByte
    _LCDInit->_LCDByte
    _ClearMenu->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   31370
                                             26 BANK0     25    25      0
                            _ADCInit
                          _ClearMenu
                             _IOInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDSetStyle
                        _LCDWriteInt
                     _LCDWriteString
                           _MenuDown
                           _MenuInit
                             _MenuUp
                           _ShowMenu
                           _ValueDec
                           _ValueInc
                            _compose
 ---------------------------------------------------------------------------------
 (1) _compose                                             11     5      6    1001
                                              8 COMMON     2     2      0
                                              3 BANK0      9     3      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     278
                                              4 COMMON     4     1      3
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ValueInc                                             2     2      0     152
                                              0 BANK0      2     2      0
                       _SaveMenuItem
 ---------------------------------------------------------------------------------
 (1) _ValueDec                                             1     1      0     152
                                              0 BANK0      1     1      0
                       _SaveMenuItem
 ---------------------------------------------------------------------------------
 (2) _SaveMenuItem                                         3     3      0     152
                                              7 COMMON     3     3      0
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     108
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _ShowMenu                                             6     6      0    9562
                                             20 BANK0      6     6      0
                            _LCDByte
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    3164
                                              6 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     424
                                              4 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     428
                                              4 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _MenuUp                                               1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MenuInit                                             1     1      0      66
                                              9 COMMON     1     1      0
                       _LoadMenuItem
 ---------------------------------------------------------------------------------
 (2) _LoadMenuItem                                         3     3      0      66
                                              6 COMMON     3     3      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MenuDown                                             1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDSetStyle                                          1     1      0    1705
                                              6 BANK0      1     1      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1890
                                              6 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _IOInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearMenu                                            3     3      0    6398
                                             10 BANK0      3     3      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       4     4      0    2189
                                              6 BANK0      4     4      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    2457
                                              6 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1    1683
                                              9 COMMON     1     0      1
                                              0 BANK0      6     6      0
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (4) _LCDBusyLoop                                          5     5      0     117
                                              4 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _ClearMenu
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _IOInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDSetStyle
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _MenuDown
   _MenuInit
     _LoadMenuItem
       _eeprom_read
   _MenuUp
   _ShowMenu
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _ValueDec
     _SaveMenuItem
       _eeprom_write
   _ValueInc
     _SaveMenuItem
       _eeprom_write
   _compose
     _memcpy

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      15       7       26.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     33      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6B      12        0.0%
ABS                  0      0      6B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Jun 22 00:00:40 2016

            ?_LCDBusyLoop 0070                __CFG_CP$ON 0000                         pc 0002  
                      _RD 0C60               __CFG_CPD$ON 0000                        _WR 0C61  
            ___awdiv@sign 0021                        fsr 0004              ?_LCDSetStyle 0070  
             __CFG_LVP$ON 0000                       l130 026F                       l311 07BC  
                     l127 0235                       l217 0FF9                       l218 0FE2  
                     l168 0573                       l169 0574                       l289 07E2  
                     _GIE 005F                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _RC1 0039                       _RB3 0033  
                     _RC2 003A                       _RB4 0034                       _RA6 002E  
                     _RC3 003B                       _RB5 0035                       _RA7 002F  
                     _RB6 0036                       _RB7 0037                       _ISR 0F41  
                     _msg 00A0                       fsr0 0004           __end_of_ADCInit 0FDA  
                     indf 0000              ___awmod@sign 0021              __CFG_IESO$ON 0000  
 LCDWriteInt@field_length 0028           __end_of_LCDByte 05B1           __end_of_LCDInit 04A4  
            ?_LCDWriteInt 0026                      ?_ISR 0070               LCDByte@temp 0025  
                    l2011 0200                      l2003 01E4                      l2023 0222  
                    l2031 023E                      l2009 01F0                      l2071 02C6  
                    l2063 02B5                      l2039 025C                      l2047 0276  
                    l2073 02CB                      l2057 02A2                      l2049 0286  
                    l1611 0660                      l2083 0302                      l2069 02C1  
                    l1623 066D                      l1615 0667                      l2095 0321  
                    l1625 067B                      l1633 0694                      l2097 0326  
                    l2089 0315                      l1723 0369                      l2099 032B  
                    l1469 03E6                      l1661 0FEB                      l1573 04BB  
                    l1637 069C                      l1629 0689                      l1733 03B3  
                    l1725 039E                      l1655 0FE4                      l1591 04E7  
                    l1583 04C3                      l1567 04B0                      l1657 0FE6  
                    l1681 0531                      l1585 04D1                      l1649 076E  
                    l1905 02DA                      l1595 04F2                      l1851 05E8  
                    l1923 00B6                      l1915 0092                      l1907 0075  
                    l1845 05D5                      l1917 009E                      l1695 0503  
                    l1599 04FA                      l1919 00AA                      l1697 0558  
                    l1689 053F                      l1937 00FF                      l1963 0147  
                    l1947 007A                      l1957 0134                      l1949 0118  
           ?_LoadMenuItem 0070                      l1879 0F63                      l1889 0F54  
                    l1985 01AC                      l1969 017A                      l1979 0199  
                    l1997 01D1                      l1989 01B3                      STR_1 064D  
            __CFG_WDTE$ON 0000                      STR_2 0633                      STR_3 0643  
                    STR_4 0625                      STR_5 060F                      STR_6 060C  
                    STR_7 0619                      STR_8 0651                      STR_9 0648  
                    u1205 057B                      u1215 0597                      u1145 03EF  
                    u1155 03FB                      u1315 04D2                      u1165 0415  
                    u1325 04DE                      u1335 04E8                      u1415 0681  
                    u1185 0560                      u1425 068A                      u2307 027E  
                    u1700 00A7                      u2317 02D3                      u1295 04C6  
                    u2327 0333                      u1800 00B3                      u2337 0447  
                    u1395 0670                      u1555 03C0                      u2267 00C3  
                    u1900 00D8                      u1660 008F                      u2277 010C  
                    u2287 0172                      u1920 00E4                      u1680 009B  
                    u2297 01F8                      u1914 00DB                      u1940 00F0  
                    u1934 00E7                      u1960 00FC                      u1954 00F3  
                    _WREN 0C62            ??_eeprom_write 0075              __CFG_WRT$OFF 0000  
           __CFG_FCMEN$ON 0000                      _main 0035                      _mode 0060  
      __size_of_LCDGotoXY 0026                      _pmsg 0061                      btemp 007E  
           __CFG_BOREN$ON 0000                      ltemp 007E                      start 0012  
                    ttemp 007E                      wtemp 007E             __CFG_MCLRE$ON 0000  
                   ??_ISR 0070               compose@data 0027               compose@from 0023  
             compose@pmsg 002B                     ?_main 0070           __end_of___awdiv 04FF  
                   _EEADR 010D                     STR_10 062F                     STR_11 0634  
                   STR_12 0639                     STR_13 063E                     STR_14 0633  
            main@byte_385 0052           __end_of___awmod 06A1                     _CARRY 0018  
            LCDInit@style 0028           ___awdiv@divisor 0074           ___awdiv@counter 0020  
                   _PORTC 0007                     _TRISC 0087           __end_of_compose 0725  
          ??_LoadMenuItem 0076                     main@i 0050                     main@s 0048  
                   pclath 000A                     ltemp0 007E                     ltemp1 0082  
                   ltemp2 0086                     ltemp3 0080                     ttemp0 007E  
                   ttemp1 0081                     ttemp2 0084                     ttemp3 0087  
                   ttemp4 007F                     status 0003                     wtemp0 007E  
                   wtemp1 0080                     wtemp2 0082                     wtemp3 0084  
                   wtemp4 0086                     wtemp5 0088                     wtemp6 007F  
         __initialization 0015              __end_of_main 033B          __end_of_MenuDown 0F59  
        __end_of_MenuInit 0763                 ??_ADCInit 0074        __size_of_ClearMenu 002C  
                  ??_main 003A         __end_of_LCDGotoXY 1000             LCDByte@isdata 0079  
               ??_LCDByte 0020                 ??_LCDInit 0026          __end_of_ValueDec 0F84  
        __end_of_ValueInc 0FB5          __end_of_ShowMenu 0606              compose@msgid 0025  
           main@count_400 0041             main@count_410 0044             main@count_404 0042  
           main@count_413 0045                    _ADRESH 001E             main@count_407 0043  
           main@count_416 0046                    _ADRESL 009E             main@count_419 0047  
                  _EEDATA 010C                    _EECON1 018C                    _EECON2 018D  
        ___awdiv@dividend 0076                    _IOInit 06A1            __CFG_PWRTE$OFF 0000  
                  _MenuUp 0F59            _LCDWriteString 04FF      __size_of_eeprom_read 001B  
               ??___awdiv 0078                 ??___awmod 0078                    _g_menu 0063  
                  _memcpy 0763      __size_of_LCDBusyLoop 0066          ___awdiv@quotient 0022  
         ___awmod@divisor 0074      __end_of_eeprom_write 07E1           ___awmod@counter 0020  
               ??_compose 0078             ?_SaveMenuItem 0070      __size_of_LCDSetStyle 000A  
            LCDWriteInt@i 0032              LCDWriteInt@j 0030                    saved_w 007E  
       __end_of_ClearMenu 07BB      __size_of_LCDWriteInt 009F   __end_of__initialization 0031  
         eeprom_read@addr 0075    __end_of_LCDWriteString 055A                 LCDByte@hn 0022  
               LCDByte@ln 0023            __pcstackCOMMON 0070              __pidataBANK0 0F94  
    __end_of_LoadMenuItem 0F75            ??_SaveMenuItem 0077         eeprom_write@value 0074  
              __pbssBANK0 0063                __pbssBANK1 00A0                   ?_IOInit 0070  
               ?_MenuDown 0070                 ?_MenuInit 0070           ?_LCDWriteString 0070  
                 ?_MenuUp 0070                 ?_ValueDec 0070                 ?_ValueInc 0070  
              __pmaintext 0035                 ?_ShowMenu 0070                __pintentry 0004  
                 ?_memcpy 0074                   _ADCInit 0FC6          SaveMenuItem@item 0079  
          ClearMenu@count 002B                   _LCDByte 055A                   _LCDInit 0440  
              __stringtab 0606          LCDSetStyle@style 0026                ??_MenuDown 0074  
              ??_MenuInit 0079           __size_of_IOInit 0046                ??_ValueDec 0020  
         __size_of_MenuUp 000D                ??_ValueInc 0020                ??_ShowMenu 0034  
   __size_of_eeprom_write 0026                   ___cgram 0053                   ___awdiv 04A4  
                 ___awmod 0654           __size_of_memcpy 002C                 _ANSELbits 0188  
                 __ptext1 06E7                   __ptext2 0763                   __ptext3 0FA4  
                 __ptext4 0F75                   __ptext5 0F84                   __ptext6 07BB  
                 __ptext7 05B1                   __ptext8 033B                   __ptext9 0654  
                 _compose 06E7              __size_of_ISR 000B          ___awmod@dividend 0076  
               _LCDGotoXY 0FDA                   _submode 0062                   clrloop0 0F30  
    end_of_initialization 0031                   memcpy@d 0021                   memcpy@n 0075  
                 memcpy@s 0022              _eeprom_write 07BB      __end_of_SaveMenuItem 0F94  
   __size_of_LoadMenuItem 000F         LCDWriteString@msg 0029                 _TRISAbits 0085  
               _TRISBbits 0086                 _TRISCbits 0087                ?_LCDGotoXY 0026  
            _LoadMenuItem 0F66                LCDInit@__i 0029             ??_eeprom_read 0074  
              LCDGotoXY@x 0028                LCDGotoXY@y 0026            __end_of_IOInit 06E7  
        LoadMenuItem@item 0078                 _ClearMenu 078F             ??_LCDBusyLoop 0074  
          __end_of_MenuUp 0F66                compose@cmd 0026                compose@len 0029  
           ??_LCDSetStyle 007A            __end_of_memcpy 078F       start_initialization 0015  
             __end_of_ISR 0F4C             ??_LCDWriteInt 0029          ??_LCDWriteString 0026  
           ShowMenu@count 0038                  ??_IOInit 0074  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       __size_of_MenuDown 000D         __size_of_MenuInit 003E                ?_ClearMenu 0070  
                ??_MenuUp 0074                 ShowMenu@i 0039       __end_of_eeprom_read 07FC  
              init_fetch0 0FB5         __size_of_ValueDec 000F         __size_of_ValueInc 0011  
             __pdataBANK0 0053         __size_of_ShowMenu 0055                  ??_memcpy 0077  
                ?_ADCInit 0070       __end_of_LCDBusyLoop 0440                  ?_LCDByte 0079  
                ?_LCDInit 0070                  LCDByte@c 0024                 ___latbits 0002  
           __pcstackBANK0 0020               ??_LCDGotoXY 0027       __end_of_LCDSetStyle 0F41  
   __size_of_SaveMenuItem 0010            compose@datalen 0028          eeprom_write@addr 0076  
        LCDWriteInt@F1646 005B       __end_of_LCDWriteInt 03DA                  ?___awdiv 0074  
                ?___awmod 0074                 __pstrings 0606                  ?_compose 0023  
            _SaveMenuItem 0F84           LCDBusyLoop@busy 0076           LCDBusyLoop@temp 0077  
       interrupt_function 0004                 clear_ram0 0F2F               _eeprom_read 07E1  
             ??_ClearMenu 002A               _LCDBusyLoop 03DA          LCDWriteString@cc 0028  
        __size_of_ADCInit 0014                _ADCON0bits 001F               __stringbase 060B  
              _ADCON1bits 009F                 main@i_402 0049                 main@i_412 004C  
               main@i_421 004F                 main@i_406 004A                 main@i_415 004D  
               main@i_409 004B                 main@i_418 004E               _LCDSetStyle 0F37  
               main@count 0040          __size_of_LCDByte 0057          __size_of_LCDInit 0064  
               compose@to 0024               _LCDWriteInt 033B                  _MenuDown 0F4C  
                _MenuInit 0725                  _ValueDec 0F75                  _ValueInc 0FA4  
                _ShowMenu 05B1          __size_of___awdiv 005B          __size_of___awmod 004D  
       LCDBusyLoop@status 0078        __end_of__stringtab 060C                _ANSELHbits 0189  
        __size_of_compose 003E                  __ptext10 04A4                  __ptext11 0F59  
                __ptext20 04FF                  __ptext12 0725                  __ptext21 0FDA  
                __ptext13 0F66                  __ptext22 055A                  __ptext14 07E1  
                __ptext23 03DA                  __ptext15 0F4C                  __ptext24 0FC6  
                __ptext16 0F37                  __ptext25 0F41                  __ptext17 0440  
                __ptext18 06A1                  __ptext19 078F         __CFG_BOR4V$BOR21V 0000  
           __size_of_main 0306                  main@byte 0051                ClearMenu@i 002C  
                memcpy@d1 0020                  memcpy@s1 0074                  init_ram0 0FB9  
                intlevel1 0000            LCDWriteInt@val 0026            LCDWriteInt@str 002B  
               stringcode 0606                  stringdir 0606                  stringtab 0606  
     LCDWriteString@count 0027             ?_eeprom_write 0074              ?_eeprom_read 0070  
 __size_of_LCDWriteString 005B  
