

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jun 18 16:00:36 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  0007                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0013                     	;# 
    61  0014                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001B                     	;# 
    70  001B                     	;# 
    71  001C                     	;# 
    72  001D                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0087                     	;# 
    79  0089                     	;# 
    80  008C                     	;# 
    81  008D                     	;# 
    82  008E                     	;# 
    83  008F                     	;# 
    84  0090                     	;# 
    85  0091                     	;# 
    86  0092                     	;# 
    87  0093                     	;# 
    88  0093                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  0105                     	;# 
   103  0107                     	;# 
   104  0108                     	;# 
   105  0109                     	;# 
   106  010C                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  0185                     	;# 
   112  0187                     	;# 
   113  0188                     	;# 
   114  0189                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  008F                     	;# 
   160  0090                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0093                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0095                     	;# 
   168  0096                     	;# 
   169  0097                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  0105                     	;# 
   179  0107                     	;# 
   180  0108                     	;# 
   181  0109                     	;# 
   182  010C                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  0185                     	;# 
   188  0187                     	;# 
   189  0188                     	;# 
   190  0189                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193  0000                     	;# 
   194  0001                     	;# 
   195  0002                     	;# 
   196  0003                     	;# 
   197  0004                     	;# 
   198  0005                     	;# 
   199  0006                     	;# 
   200  0007                     	;# 
   201  0009                     	;# 
   202  000A                     	;# 
   203  000B                     	;# 
   204  000C                     	;# 
   205  000D                     	;# 
   206  000E                     	;# 
   207  000E                     	;# 
   208  000F                     	;# 
   209  0010                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0014                     	;# 
   214  0015                     	;# 
   215  0015                     	;# 
   216  0016                     	;# 
   217  0017                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001B                     	;# 
   222  001B                     	;# 
   223  001C                     	;# 
   224  001D                     	;# 
   225  001E                     	;# 
   226  001F                     	;# 
   227  0081                     	;# 
   228  0085                     	;# 
   229  0086                     	;# 
   230  0087                     	;# 
   231  0089                     	;# 
   232  008C                     	;# 
   233  008D                     	;# 
   234  008E                     	;# 
   235  008F                     	;# 
   236  0090                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0093                     	;# 
   241  0093                     	;# 
   242  0094                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  0105                     	;# 
   255  0107                     	;# 
   256  0108                     	;# 
   257  0109                     	;# 
   258  010C                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  010F                     	;# 
   263  0185                     	;# 
   264  0187                     	;# 
   265  0188                     	;# 
   266  0189                     	;# 
   267  018C                     	;# 
   268  018D                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0009                     	;# 
   278  000A                     	;# 
   279  000B                     	;# 
   280  000C                     	;# 
   281  000D                     	;# 
   282  000E                     	;# 
   283  000E                     	;# 
   284  000F                     	;# 
   285  0010                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0014                     	;# 
   290  0015                     	;# 
   291  0015                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  001D                     	;# 
   301  001E                     	;# 
   302  001F                     	;# 
   303  0081                     	;# 
   304  0085                     	;# 
   305  0086                     	;# 
   306  0087                     	;# 
   307  0089                     	;# 
   308  008C                     	;# 
   309  008D                     	;# 
   310  008E                     	;# 
   311  008F                     	;# 
   312  0090                     	;# 
   313  0091                     	;# 
   314  0092                     	;# 
   315  0093                     	;# 
   316  0093                     	;# 
   317  0093                     	;# 
   318  0094                     	;# 
   319  0095                     	;# 
   320  0096                     	;# 
   321  0097                     	;# 
   322  0098                     	;# 
   323  0099                     	;# 
   324  009A                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  009F                     	;# 
   330  0105                     	;# 
   331  0107                     	;# 
   332  0108                     	;# 
   333  0109                     	;# 
   334  010C                     	;# 
   335  010C                     	;# 
   336  010D                     	;# 
   337  010E                     	;# 
   338  010F                     	;# 
   339  0185                     	;# 
   340  0187                     	;# 
   341  0188                     	;# 
   342  0189                     	;# 
   343  018C                     	;# 
   344  018D                     	;# 
   345                           
   346                           	psect	idataBANK0
   347  0CD2                     __pidataBANK0:	
   348                           
   349                           ;initializer for ___cgram
   350  0CD2  340C               	retlw	12
   351  0CD3  3412               	retlw	18
   352  0CD4  3412               	retlw	18
   353  0CD5  340C               	retlw	12
   354  0CD6  3400               	retlw	0
   355  0CD7  3400               	retlw	0
   356  0CD8  3400               	retlw	0
   357  0CD9  3400               	retlw	0
   358                           
   359                           ;initializer for LCDWriteInt@F1632
   360  0CDA  34F0               	retlw	240
   361  0CDB  34F0               	retlw	240
   362  0CDC  34F0               	retlw	240
   363  0CDD  34F0               	retlw	240
   364  0CDE  34F0               	retlw	240
   365                           
   366                           ;initializer for _tuneUpTempDir
   367  0CDF  3401               	retlw	1
   368  001F                     _ADCON0bits	set	31
   369  001E                     _ADRESH	set	30
   370  000B                     _INTCONbits	set	11
   371  0007                     _PORTC	set	7
   372  0028                     _RA0	set	40
   373  0029                     _RA1	set	41
   374  002A                     _RA2	set	42
   375  002B                     _RA3	set	43
   376  002E                     _RA6	set	46
   377  002F                     _RA7	set	47
   378  0030                     _RB0	set	48
   379  0031                     _RB1	set	49
   380  0032                     _RB2	set	50
   381  0033                     _RB3	set	51
   382  0039                     _RC1	set	57
   383  003A                     _RC2	set	58
   384  003B                     _RC3	set	59
   385  009F                     _ADCON1bits	set	159
   386  009E                     _ADRESL	set	158
   387  0096                     _IOCBbits	set	150
   388  0085                     _TRISAbits	set	133
   389  0086                     _TRISBbits	set	134
   390  0087                     _TRISC	set	135
   391  0087                     _TRISCbits	set	135
   392  0189                     _ANSELHbits	set	393
   393  0188                     _ANSELbits	set	392
   394                           
   395                           	psect	strings
   396  0800                     __pstrings:	
   397  0800                     stringtab:	
   398  0800                     __stringtab:	
   399  0800                     stringcode:	
   400                           ;	String table - string pointers are 1 byte each
   401                           
   402  0800                     stringdir:	
   403  0800  3008               	movlw	high stringdir
   404  0801  008A               	movwf	10
   405  0802  0804               	movf	4,w
   406  0803  0A84               	incf	4,f
   407  0804  0782               	addwf	2,f
   408  0805                     __stringbase:	
   409  0805  3400               	retlw	0
   410  0806                     __end_of__stringtab:	
   411  0806                     STR_1:	
   412  0806  3454               	retlw	84	;'T'
   413  0807  3468               	retlw	104	;'h'
   414  0808  3465               	retlw	101	;'e'
   415  0809  3472               	retlw	114	;'r'
   416  080A  346D               	retlw	109	;'m'
   417  080B  346F               	retlw	111	;'o'
   418  080C  346D               	retlw	109	;'m'
   419  080D  3465               	retlw	101	;'e'
   420  080E  3474               	retlw	116	;'t'
   421  080F  3465               	retlw	101	;'e'
   422  0810  3472               	retlw	114	;'r'
   423  0811  3420               	retlw	32	;' '
   424  0812  3473               	retlw	115	;'s'
   425  0813  3465               	retlw	101	;'e'
   426  0814  3474               	retlw	116	;'t'
   427  0815  343A               	retlw	58	;':'
   428  0816  3400               	retlw	0
   429  0817                     STR_3:	
   430  0817  3443               	retlw	67	;'C'
   431  0818  3475               	retlw	117	;'u'
   432  0819  3472               	retlw	114	;'r'
   433  081A  343A               	retlw	58	;':'
   434  081B  3400               	retlw	0
   435  081C                     STR_6:	
   436  081C  344D               	retlw	77	;'M'
   437  081D  3461               	retlw	97	;'a'
   438  081E  3478               	retlw	120	;'x'
   439  081F  343A               	retlw	58	;':'
   440  0820  3400               	retlw	0
   441  0821                     STR_9:	
   442  0821  344F               	retlw	79	;'O'
   443  0822  344E               	retlw	78	;'N'
   444  0823  3420               	retlw	32	;' '
   445  0824  3400               	retlw	0
   446  0825                     STR_5:	
   447  0825  3457               	retlw	87	;'W'
   448  0826  3461               	retlw	97	;'a'
   449  0827  343A               	retlw	58	;':'
   450  0828  3400               	retlw	0
   451  0829                     STR_2:	
   452  0829  3425               	retlw	37	;'%'
   453  082A  3430               	retlw	48	;'0'
   454  082B  3443               	retlw	67	;'C'
   455  082C  3400               	retlw	0
   456  082D                     STR_8:	
   457  082D  344F               	retlw	79	;'O'
   458  082E  3446               	retlw	70	;'F'
   459  082F  3446               	retlw	70	;'F'
   460  0830  3400               	retlw	0
   461  0829                     
   462                           ; #config settings
   463  0000                     
   464                           	psect	cinit
   465  0015                     start_initialization:	
   466  0015                     __initialization:	
   467                           
   468                           ; Clear objects allocated to BANK0
   469  0015  01DB               	clrf	__pbssBANK0& (0+127)
   470  0016  01DC               	clrf	(__pbssBANK0+1)& (0+127)
   471                           
   472                           ; Clear objects allocated to BANK1
   473  0017  1683               	bsf	3,5	;RP0=1, select bank1
   474  0018  1303               	bcf	3,6	;RP1=0, select bank1
   475  0019  01C2               	clrf	__pbssBANK1& (0+127)
   476  001A  01C3               	clrf	(__pbssBANK1+1)& (0+127)
   477                           
   478                           ; Initialize objects allocated to BANK0
   479  001B  1383               	bcf	3,7	;select IRP bank0
   480  001C  305B               	movlw	low (__pdataBANK0+14)
   481  001D  00FD               	movwf	btemp+-1
   482  001E  300C               	movlw	high __pidataBANK0
   483  001F  00FE               	movwf	btemp
   484  0020  30D2               	movlw	low __pidataBANK0
   485  0021  00FF               	movwf	btemp+1
   486  0022  304D               	movlw	low __pdataBANK0
   487  0023  0084               	movwf	4
   488  0024  120A  158A  24E4   	fcall	init_ram0
   489  0027                     end_of_initialization:	
   490                           ;End of C runtime variable initialization code
   491                           
   492  0027                     __end_of__initialization:	
   493  0027  0183               	clrf	3
   494  0028  120A  118A  282B   	ljmp	_main	;jump to C main() function
   495                           
   496                           	psect	bssBANK0
   497  005B                     __pbssBANK0:	
   498  005B                     _tuneUpTemp:	
   499  005B                     	ds	2
   500                           
   501                           	psect	dataBANK0
   502  004D                     __pdataBANK0:	
   503  004D                     ___cgram:	
   504  004D                     	ds	8
   505  0055                     LCDWriteInt@F1632:	
   506  0055                     	ds	5
   507  005A                     _tuneUpTempDir:	
   508  005A                     	ds	1
   509                           
   510                           	psect	bssBANK1
   511  00C2                     __pbssBANK1:	
   512  00C2                     _curTemp:	
   513  00C2                     	ds	2
   514                           
   515                           	psect	inittext
   516  0CE0                     init_fetch0:	
   517                           ;	Called with low address in FSR and high address in W
   518                           
   519  0CE0  087E               	movf	126,w
   520  0CE1  008A               	movwf	10
   521  0CE2  087F               	movf	127,w
   522  0CE3  0082               	movwf	2
   523  0CE4                     init_ram0:	
   524                           ;Called with:
   525                           ;	high address of idata address in btemp 
   526                           ;	low address of idata address in btemp+1 
   527                           ;	low address of data in FSR
   528                           ;	high address + 1 of data in btemp-1
   529                           
   530  0CE4  24E0  120A  158A   	fcall	init_fetch0
   531  0CE7  0080               	movwf	0
   532  0CE8  0A84               	incf	4,f
   533  0CE9  0804               	movf	4,w
   534  0CEA  067D               	xorwf	125,w
   535  0CEB  1903               	btfsc	3,2
   536  0CEC  3400               	retlw	0
   537  0CED  0AFF               	incf	127,f
   538  0CEE  1903               	btfsc	3,2
   539  0CEF  0AFE               	incf	126,f
   540  0CF0  2CE4               	goto	init_ram0
   541                           
   542                           	psect	cstackBANK1
   543  00A0                     __pcstackBANK1:	
   544  00A0                     ___ftmul@exp:	
   545                           
   546                           ; 1 bytes @ 0x0
   547  00A0                     	ds	1
   548  00A1                     ___ftmul@f3_as_product:	
   549                           
   550                           ; 3 bytes @ 0x1
   551  00A1                     	ds	3
   552  00A4                     ___ftmul@cntr:	
   553                           
   554                           ; 1 bytes @ 0x4
   555  00A4                     	ds	1
   556  00A5                     ___ftmul@sign:	
   557                           
   558                           ; 1 bytes @ 0x5
   559  00A5                     	ds	1
   560  00A6                     ??___fttol:	
   561                           
   562                           ; 1 bytes @ 0x6
   563  00A6                     	ds	4
   564  00AA                     ___fttol@sign1:	
   565                           
   566                           ; 1 bytes @ 0xA
   567  00AA                     	ds	1
   568  00AB                     ___fttol@lval:	
   569                           
   570                           ; 4 bytes @ 0xB
   571  00AB                     	ds	4
   572  00AF                     ___fttol@exp1:	
   573                           
   574                           ; 1 bytes @ 0xF
   575  00AF                     	ds	1
   576  00B0                     ?_LM35ReadTemp:	
   577                           
   578                           ; 2 bytes @ 0x10
   579  00B0                     	ds	2
   580  00B2                     LM35ReadTemp@adc_value:	
   581                           
   582                           ; 2 bytes @ 0x12
   583  00B2                     	ds	2
   584  00B4                     ??_main:	
   585                           
   586                           ; 1 bytes @ 0x14
   587  00B4                     	ds	14
   588                           
   589                           	psect	cstackCOMMON
   590  0070                     __pcstackCOMMON:	
   591  0070                     ?_LCDWriteString:	
   592  0070                     ?_LCDInit:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_LCDBusyLoop:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_ADCInit:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_TuneButtonInit:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_ISR:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_main:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?i1_LCDBusyLoop:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ??i1_LCDBusyLoop:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?i1_LCDWriteString:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?i1___awdiv:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?i1___awmod:	
   623                           ; 2 bytes @ 0x0
   624                           
   625  0070                     i1___awdiv@divisor:	
   626                           ; 2 bytes @ 0x0
   627                           
   628  0070                     i1___awmod@divisor:	
   629                           ; 2 bytes @ 0x0
   630                           
   631                           
   632                           ; 2 bytes @ 0x0
   633  0070                     	ds	2
   634  0072                     i1LCDBusyLoop@busy:	
   635  0072                     i1___awdiv@dividend:	
   636                           ; 1 bytes @ 0x2
   637                           
   638  0072                     i1___awmod@dividend:	
   639                           ; 2 bytes @ 0x2
   640                           
   641                           
   642                           ; 2 bytes @ 0x2
   643  0072                     	ds	1
   644  0073                     i1LCDBusyLoop@temp:	
   645                           
   646                           ; 1 bytes @ 0x3
   647  0073                     	ds	1
   648  0074                     ??i1___awdiv:	
   649  0074                     ??i1___awmod:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0074                     i1LCDBusyLoop@status:	
   653                           ; 1 bytes @ 0x4
   654                           
   655                           
   656                           ; 1 bytes @ 0x4
   657  0074                     	ds	1
   658  0075                     ?i1_LCDByte:	
   659  0075                     i1LCDByte@isdata:	
   660                           ; 1 bytes @ 0x5
   661                           
   662  0075                     i1___awdiv@counter:	
   663                           ; 1 bytes @ 0x5
   664                           
   665  0075                     i1___awmod@counter:	
   666                           ; 1 bytes @ 0x5
   667                           
   668                           
   669                           ; 1 bytes @ 0x5
   670  0075                     	ds	1
   671  0076                     ??i1_LCDByte:	
   672  0076                     i1___awdiv@sign:	
   673                           ; 1 bytes @ 0x6
   674                           
   675  0076                     i1___awmod@sign:	
   676                           ; 1 bytes @ 0x6
   677                           
   678                           
   679                           ; 1 bytes @ 0x6
   680  0076                     	ds	1
   681  0077                     i1___awdiv@quotient:	
   682                           
   683                           ; 2 bytes @ 0x7
   684  0077                     	ds	1
   685  0078                     i1LCDByte@c:	
   686                           
   687                           ; 1 bytes @ 0x8
   688  0078                     	ds	1
   689  0079                     i1LCDByte@hn:	
   690                           
   691                           ; 1 bytes @ 0x9
   692  0079                     	ds	1
   693  007A                     i1LCDByte@ln:	
   694                           
   695                           ; 1 bytes @ 0xA
   696  007A                     	ds	1
   697  007B                     i1LCDByte@temp:	
   698                           
   699                           ; 1 bytes @ 0xB
   700  007B                     	ds	1
   701  007C                     ??i1_LCDWriteString:	
   702  007C                     ??i1_LCDWriteInt:	
   703                           ; 1 bytes @ 0xC
   704                           
   705  007C                     ?i1_LCDGotoXY:	
   706                           ; 1 bytes @ 0xC
   707                           
   708  007C                     i1LCDGotoXY@y:	
   709                           ; 1 bytes @ 0xC
   710                           
   711                           
   712                           ; 1 bytes @ 0xC
   713  007C                     	ds	1
   714  007D                     ??i1_LCDGotoXY:	
   715                           
   716                           ; 1 bytes @ 0xD
   717  007D                     	ds	1
   718                           
   719                           	psect	cstackBANK0
   720  0020                     __pcstackBANK0:	
   721  0020                     ?i1_LCDWriteInt:	
   722  0020                     i1LCDWriteString@msg:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0020                     i1LCDGotoXY@x:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0020                     i1LCDWriteInt@val:	
   729                           ; 1 bytes @ 0x0
   730                           
   731                           
   732                           ; 2 bytes @ 0x0
   733  0020                     	ds	1
   734  0021                     i1LCDWriteString@cc:	
   735                           
   736                           ; 1 bytes @ 0x1
   737  0021                     	ds	1
   738  0022                     i1LCDWriteInt@field_length:	
   739                           
   740                           ; 1 bytes @ 0x2
   741  0022                     	ds	1
   742  0023                     i1LCDWriteInt@str:	
   743                           
   744                           ; 5 bytes @ 0x3
   745  0023                     	ds	5
   746  0028                     i1LCDWriteInt@j:	
   747                           
   748                           ; 2 bytes @ 0x8
   749  0028                     	ds	2
   750  002A                     i1LCDWriteInt@i:	
   751                           
   752                           ; 2 bytes @ 0xA
   753  002A                     	ds	2
   754  002C                     ??_ISR:	
   755                           
   756                           ; 1 bytes @ 0xC
   757  002C                     	ds	7
   758  0033                     ??_LCDBusyLoop:	
   759  0033                     ??_ADCInit:	
   760                           ; 1 bytes @ 0x13
   761                           
   762  0033                     ??_TuneButtonInit:	
   763                           ; 1 bytes @ 0x13
   764                           
   765  0033                     ?_ReadADC:	
   766                           ; 1 bytes @ 0x13
   767                           
   768  0033                     ?___awdiv:	
   769                           ; 2 bytes @ 0x13
   770                           
   771  0033                     ?___awmod:	
   772                           ; 2 bytes @ 0x13
   773                           
   774  0033                     ?___ftpack:	
   775                           ; 2 bytes @ 0x13
   776                           
   777  0033                     ___awdiv@divisor:	
   778                           ; 3 bytes @ 0x13
   779                           
   780  0033                     ___awmod@divisor:	
   781                           ; 2 bytes @ 0x13
   782                           
   783  0033                     ___ftpack@arg:	
   784                           ; 2 bytes @ 0x13
   785                           
   786                           
   787                           ; 3 bytes @ 0x13
   788  0033                     	ds	2
   789  0035                     ??_ReadADC:	
   790  0035                     LCDBusyLoop@busy:	
   791                           ; 1 bytes @ 0x15
   792                           
   793  0035                     ___awdiv@dividend:	
   794                           ; 1 bytes @ 0x15
   795                           
   796  0035                     ___awmod@dividend:	
   797                           ; 2 bytes @ 0x15
   798                           
   799                           
   800                           ; 2 bytes @ 0x15
   801  0035                     	ds	1
   802  0036                     ReadADC@ch:	
   803  0036                     LCDBusyLoop@temp:	
   804                           ; 1 bytes @ 0x16
   805                           
   806  0036                     ___ftpack@exp:	
   807                           ; 1 bytes @ 0x16
   808                           
   809                           
   810                           ; 1 bytes @ 0x16
   811  0036                     	ds	1
   812  0037                     ??___awdiv:	
   813  0037                     ??___awmod:	
   814                           ; 1 bytes @ 0x17
   815                           
   816  0037                     LCDBusyLoop@status:	
   817                           ; 1 bytes @ 0x17
   818                           
   819  0037                     ___ftpack@sign:	
   820                           ; 1 bytes @ 0x17
   821                           
   822                           
   823                           ; 1 bytes @ 0x17
   824  0037                     	ds	1
   825  0038                     ?_LCDByte:	
   826  0038                     ??___ftpack:	
   827                           ; 1 bytes @ 0x18
   828                           
   829  0038                     LCDByte@isdata:	
   830                           ; 1 bytes @ 0x18
   831                           
   832  0038                     ___awdiv@counter:	
   833                           ; 1 bytes @ 0x18
   834                           
   835  0038                     ___awmod@counter:	
   836                           ; 1 bytes @ 0x18
   837                           
   838                           
   839                           ; 1 bytes @ 0x18
   840  0038                     	ds	1
   841  0039                     ??_LCDByte:	
   842  0039                     ___awdiv@sign:	
   843                           ; 1 bytes @ 0x19
   844                           
   845  0039                     ___awmod@sign:	
   846                           ; 1 bytes @ 0x19
   847                           
   848                           
   849                           ; 1 bytes @ 0x19
   850  0039                     	ds	1
   851  003A                     ___awdiv@quotient:	
   852                           
   853                           ; 2 bytes @ 0x1A
   854  003A                     	ds	1
   855  003B                     ?___lwtoft:	
   856  003B                     LCDByte@hn:	
   857                           ; 3 bytes @ 0x1B
   858                           
   859  003B                     ___lwtoft@c:	
   860                           ; 1 bytes @ 0x1B
   861                           
   862                           
   863                           ; 2 bytes @ 0x1B
   864  003B                     	ds	1
   865  003C                     LCDByte@ln:	
   866                           
   867                           ; 1 bytes @ 0x1C
   868  003C                     	ds	1
   869  003D                     LCDByte@c:	
   870                           
   871                           ; 1 bytes @ 0x1D
   872  003D                     	ds	1
   873  003E                     ??___lwtoft:	
   874  003E                     LCDByte@temp:	
   875                           ; 1 bytes @ 0x1E
   876                           
   877                           
   878                           ; 1 bytes @ 0x1E
   879  003E                     	ds	1
   880  003F                     ?_LCDGotoXY:	
   881  003F                     ??_LCDWriteString:	
   882                           ; 1 bytes @ 0x1F
   883                           
   884  003F                     ?_LCDWriteInt:	
   885                           ; 1 bytes @ 0x1F
   886                           
   887  003F                     ??_LCDInit:	
   888                           ; 1 bytes @ 0x1F
   889                           
   890  003F                     ?___ftmul:	
   891                           ; 1 bytes @ 0x1F
   892                           
   893  003F                     LCDGotoXY@y:	
   894                           ; 3 bytes @ 0x1F
   895                           
   896  003F                     LCDWriteInt@val:	
   897                           ; 1 bytes @ 0x1F
   898                           
   899  003F                     ___ftmul@f1:	
   900                           ; 2 bytes @ 0x1F
   901                           
   902                           
   903                           ; 3 bytes @ 0x1F
   904  003F                     	ds	1
   905  0040                     ??_LCDGotoXY:	
   906  0040                     LCDWriteString@cc:	
   907                           ; 1 bytes @ 0x20
   908                           
   909                           
   910                           ; 1 bytes @ 0x20
   911  0040                     	ds	1
   912  0041                     LCDInit@style:	
   913  0041                     LCDWriteString@msg:	
   914                           ; 1 bytes @ 0x21
   915                           
   916  0041                     LCDWriteInt@field_length:	
   917                           ; 1 bytes @ 0x21
   918                           
   919  0041                     LCDGotoXY@x:	
   920                           ; 1 bytes @ 0x21
   921                           
   922                           
   923                           ; 1 bytes @ 0x21
   924  0041                     	ds	1
   925  0042                     ??_LCDWriteInt:	
   926  0042                     LCDInit@__i:	
   927                           ; 1 bytes @ 0x22
   928                           
   929  0042                     ___ftmul@f2:	
   930                           ; 1 bytes @ 0x22
   931                           
   932                           
   933                           ; 3 bytes @ 0x22
   934  0042                     	ds	2
   935  0044                     LCDWriteInt@str:	
   936                           
   937                           ; 5 bytes @ 0x24
   938  0044                     	ds	1
   939  0045                     ??___ftmul:	
   940                           
   941                           ; 1 bytes @ 0x25
   942  0045                     	ds	4
   943  0049                     ?___fttol:	
   944  0049                     LCDWriteInt@j:	
   945                           ; 4 bytes @ 0x29
   946                           
   947  0049                     ___fttol@f1:	
   948                           ; 2 bytes @ 0x29
   949                           
   950                           
   951                           ; 3 bytes @ 0x29
   952  0049                     	ds	2
   953  004B                     LCDWriteInt@i:	
   954                           
   955                           ; 2 bytes @ 0x2B
   956  004B                     	ds	2
   957  004D                     ??_LM35ReadTemp:	
   958                           
   959                           	psect	maintext
   960  002B                     __pmaintext:	
   961                           ; 1 bytes @ 0x2D
   962 ;;
   963 ;;Main: autosize = 0, tempsize = 14, incstack = 0, save=0
   964 ;;
   965 ;; *************** function _main *****************
   966 ;; Defined at:
   967 ;;		line 187 in file "do_am.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : B00/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0
   983 ;;      Temps:          0       0      14       0       0
   984 ;;      Totals:         0       0      14       0       0
   985 ;;Total ram usage:       14 bytes
   986 ;; Hardware stack levels required when called:    7
   987 ;; This function calls:
   988 ;;		_ADCInit
   989 ;;		_LCDByte
   990 ;;		_LCDGotoXY
   991 ;;		_LCDInit
   992 ;;		_LCDWriteInt
   993 ;;		_LCDWriteString
   994 ;;		_LM35ReadTemp
   995 ;;		_TuneButtonInit
   996 ;; This function is called by:
   997 ;;		Startup code after reset
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _main
  1003  002B                     _main:	
  1004                           
  1005                           ;do_am.c: 190: LCDInit(0B00000000);
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1009  002B  3000               	movlw	0
  1010  002C  120A  118A  261A  120A  118A  	fcall	_LCDInit
  1011                           
  1012                           ;do_am.c: 193: ADCInit();
  1013  0031  120A  158A  24F1  120A  118A  	fcall	_ADCInit
  1014                           
  1015                           ;do_am.c: 196: TuneButtonInit();
  1016  0036  120A  158A  2588  120A  118A  	fcall	_TuneButtonInit
  1017                           
  1018                           ;do_am.c: 202: (LCDByte(0b00000001,0));
  1019  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1020  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1021  003D  01B8               	clrf	LCDByte@isdata
  1022  003E  3001               	movlw	1
  1023  003F  120A  158A  26F7  120A  118A  	fcall	_LCDByte
  1024                           
  1025                           ;do_am.c: 204: { LCDGotoXY(0,0); LCDWriteString("Cur:");};
  1026  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0045  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0046  01BF               	clrf	LCDGotoXY@y
  1029  0047  3000               	movlw	0
  1030  0048  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1031  004D  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1032  004E  120A  118A  27AB  120A  118A  	fcall	_LCDWriteString
  1033                           
  1034                           ;do_am.c: 206: { LCDGotoXY(7,0); LCDWriteString("%0C");};
  1035  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0055  01BF               	clrf	LCDGotoXY@y
  1038  0056  3007               	movlw	7
  1039  0057  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1040  005C  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1041  005D  120A  118A  27AB  120A  118A  	fcall	_LCDWriteString
  1042                           
  1043                           ;do_am.c: 208: { LCDGotoXY(10,0); LCDWriteString("Wa:");};
  1044  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0064  01BF               	clrf	LCDGotoXY@y
  1047  0065  300A               	movlw	10
  1048  0066  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1049  006B  3020               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1050  006C  120A  118A  27AB  120A  118A  	fcall	_LCDWriteString
  1051                           
  1052                           ;do_am.c: 210: { LCDGotoXY(0,1); LCDWriteString("Max:");};
  1053  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0073  01BF               	clrf	LCDGotoXY@y
  1056  0074  0ABF               	incf	LCDGotoXY@y,f
  1057  0075  3000               	movlw	0
  1058  0076  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1059  007B  3017               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1060  007C  120A  118A  27AB  120A  118A  	fcall	_LCDWriteString
  1061                           
  1062                           ;do_am.c: 212: { LCDGotoXY(7,1); LCDWriteString("%0C");};
  1063  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0083  01BF               	clrf	LCDGotoXY@y
  1066  0084  0ABF               	incf	LCDGotoXY@y,f
  1067  0085  3007               	movlw	7
  1068  0086  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1069  008B  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1070  008C  120A  118A  27AB  120A  118A  	fcall	_LCDWriteString
  1071                           
  1072                           ;do_am.c: 214: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1073  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0093  01BF               	clrf	LCDGotoXY@y
  1076  0094  300D               	movlw	13
  1077  0095  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1078  009A  3028               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1079  009B  120A  118A  27AB  120A  118A  	fcall	_LCDWriteString
  1080                           
  1081                           ;do_am.c: 216: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1082  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1083  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1084  00A2                     L3:	
  1085  00A2  01BF               	clrf	LCDGotoXY@y
  1086  00A3  0ABF               	incf	LCDGotoXY@y,f
  1087  00A4  3004               	movlw	4
  1088  00A5  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1089  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1090  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1091  00AC  085C               	movf	_tuneUpTemp+1,w
  1092  00AD  00C0               	movwf	LCDWriteInt@val+1
  1093  00AE  085B               	movf	_tuneUpTemp,w
  1094  00AF  00BF               	movwf	LCDWriteInt@val
  1095  00B0  3003               	movlw	3
  1096  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1097  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  1098  00B3  00B4               	movwf	??_main^(0+128)
  1099  00B4  0834               	movf	??_main^(0+128),w
  1100  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1101  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1102  00B7  00C1               	movwf	LCDWriteInt@field_length
  1103  00B8  120A  118A  2400  120A  118A  	fcall	_LCDWriteInt
  1104  00BD                     L1:	
  1105                           
  1106                           ;do_am.c: 217: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1107  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1108  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1109  00BF  01BF               	clrf	LCDGotoXY@y
  1110  00C0  3004               	movlw	4
  1111  00C1  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1112  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1113  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1114  00C8  0843               	movf	(_curTemp+1)^(0+128),w
  1115  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1116  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1117  00CB  00C0               	movwf	LCDWriteInt@val+1
  1118  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  1119  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  1120  00CE  0842               	movf	_curTemp^(0+128),w
  1121  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1122  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1123  00D1  00BF               	movwf	LCDWriteInt@val
  1124  00D2  3003               	movlw	3
  1125  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1126  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1127  00D5  00B4               	movwf	??_main^(0+128)
  1128  00D6  0834               	movf	??_main^(0+128),w
  1129  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1130  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1131  00D9  00C1               	movwf	LCDWriteInt@field_length
  1132  00DA  120A  118A  2400  120A  118A  	fcall	_LCDWriteInt
  1133                           
  1134                           ;do_am.c: 219: {
  1135                           ;do_am.c: 221: curTemp = LM35ReadTemp();
  1136                           
  1137                           ;do_am.c: 218: while(1)
  1138  00DF  120A  158A  260E  120A  118A  	fcall	_LM35ReadTemp
  1139  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1140  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1141  00E6  0831               	movf	(?_LM35ReadTemp+1)^(0+128),w
  1142  00E7  00C3               	movwf	(_curTemp+1)^(0+128)
  1143  00E8  0830               	movf	?_LM35ReadTemp^(0+128),w
  1144  00E9  00C2               	movwf	_curTemp^(0+128)
  1145                           
  1146                           ;do_am.c: 223: if((tuneUpTemp >= 5) && (curTemp >= tuneUpTemp))
  1147  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1149  00EC  085C               	movf	_tuneUpTemp+1,w
  1150  00ED  3A80               	xorlw	128
  1151  00EE  00FF               	movwf	127
  1152  00EF  3080               	movlw	128
  1153  00F0  027F               	subwf	127,w
  1154  00F1  1D03               	skipz
  1155  00F2  28F5               	goto	u2955
  1156  00F3  3005               	movlw	5
  1157  00F4  025B               	subwf	_tuneUpTemp,w
  1158  00F5                     u2955:	
  1159  00F5  1C03               	skipc
  1160  00F6  2918               	goto	l2390
  1161  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  1162  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  1163  00F9  0843               	movf	(_curTemp+1)^(0+128),w
  1164  00FA  3A80               	xorlw	128
  1165  00FB  00B4               	movwf	??_main^(0+128)
  1166  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1167  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1168  00FE  085C               	movf	_tuneUpTemp+1,w
  1169  00FF  3A80               	xorlw	128
  1170  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1171  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1172  0102  0234               	subwf	??_main^(0+128),w
  1173  0103  1D03               	skipz
  1174  0104  290B               	goto	u2965
  1175  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0107  085B               	movf	_tuneUpTemp,w
  1178  0108  1683               	bsf	3,5	;RP0=1, select bank1
  1179  0109  1303               	bcf	3,6	;RP1=0, select bank1
  1180  010A  0242               	subwf	_curTemp^(0+128),w
  1181  010B                     u2965:	
  1182  010B  1C03               	skipc
  1183  010C  2918               	goto	l2390
  1184                           
  1185                           ;do_am.c: 224: {
  1186                           ;do_am.c: 225: { LCDGotoXY(13,0); LCDWriteString("ON ");};
  1187  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1188  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1189  010F  01BF               	clrf	LCDGotoXY@y
  1190  0110  300D               	movlw	13
  1191  0111  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1192  0116  301C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1193  0117  293E               	goto	L2
  1194  0118                     l2390:	
  1195                           ;do_am.c: 226: }
  1196                           
  1197                           
  1198                           ;do_am.c: 227: else
  1199                           ;do_am.c: 228: {
  1200                           ;do_am.c: 229: if(curTemp <= tuneUpTemp - 5)
  1201  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1203  011A  085B               	movf	_tuneUpTemp,w
  1204  011B  3EFB               	addlw	251
  1205  011C  1683               	bsf	3,5	;RP0=1, select bank1
  1206  011D  1303               	bcf	3,6	;RP1=0, select bank1
  1207  011E  00B4               	movwf	??_main^(0+128)
  1208  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0121  085C               	movf	_tuneUpTemp+1,w
  1211  0122  1803               	skipnc
  1212  0123  3E01               	addlw	1
  1213  0124  3EFF               	addlw	255
  1214  0125  1683               	bsf	3,5	;RP0=1, select bank1
  1215  0126  1303               	bcf	3,6	;RP1=0, select bank1
  1216  0127  00B5               	movwf	(??_main+1)^(0+128)
  1217  0128  0835               	movf	(??_main+1)^(0+128),w
  1218  0129  3A80               	xorlw	128
  1219  012A  00B6               	movwf	(??_main+2)^(0+128)
  1220  012B  0843               	movf	(_curTemp+1)^(0+128),w
  1221  012C  3A80               	xorlw	128
  1222  012D  0236               	subwf	(??_main+2)^(0+128),w
  1223  012E  1D03               	skipz
  1224  012F  2932               	goto	u2975
  1225  0130  0842               	movf	_curTemp^(0+128),w
  1226  0131  0234               	subwf	??_main^(0+128),w
  1227  0132                     u2975:	
  1228  0132  1C03               	skipc
  1229  0133  2943               	goto	l2394
  1230                           
  1231                           ;do_am.c: 230: {
  1232                           ;do_am.c: 231: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1233  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0136  01BF               	clrf	LCDGotoXY@y
  1236  0137  300D               	movlw	13
  1237  0138  120A  158A  2562  120A  118A  	fcall	_LCDGotoXY
  1238  013D  3028               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1239  013E                     L2:	
  1240  013E  120A  118A  27AB  120A  118A  	fcall	_LCDWriteString
  1241  0143                     l2394:	
  1242                           
  1243                           ;do_am.c: 232: }
  1244                           ;do_am.c: 233: }
  1245                           ;do_am.c: 234: if(RA6 == 0)
  1246  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0145  1B05               	btfsc	5,6	;volatile
  1249  0146  28BD               	goto	L1
  1250                           
  1251                           ;do_am.c: 235: {
  1252                           ;do_am.c: 241: tuneUpTemp = (RA0 | (RA1 << 1) | (RA2 << 2) | (RA3 << 3));
  1253  0147  1003               	clrc
  1254  0148  1985               	btfsc	5,3	;volatile
  1255  0149  1403               	setc
  1256  014A  3000               	movlw	0
  1257  014B  1803               	skipnc
  1258  014C  3001               	movlw	1
  1259  014D  1683               	bsf	3,5	;RP0=1, select bank1
  1260  014E  1303               	bcf	3,6	;RP1=0, select bank1
  1261  014F  00B4               	movwf	??_main^(0+128)
  1262  0150  01B5               	clrf	(??_main^(0+128)+1)
  1263  0151  1003               	clrc
  1264  0152  0DB4               	rlf	??_main^(0+128),f
  1265  0153  0DB5               	rlf	(??_main^(0+128)+1),f
  1266  0154  1003               	clrc
  1267  0155  0DB4               	rlf	??_main^(0+128),f
  1268  0156  0DB5               	rlf	(??_main^(0+128)+1),f
  1269  0157  1003               	clrc
  1270  0158  0DB4               	rlf	??_main^(0+128),f
  1271  0159  0DB5               	rlf	(??_main^(0+128)+1),f
  1272  015A  1003               	clrc
  1273  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1274  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1275  015D  1905               	btfsc	5,2	;volatile
  1276  015E  1403               	setc
  1277  015F  3000               	movlw	0
  1278  0160  1803               	skipnc
  1279  0161  3001               	movlw	1
  1280  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1281  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1282  0164  00B6               	movwf	(??_main+2)^(0+128)
  1283  0165  01B7               	clrf	((??_main+2)^(0+128)+1)
  1284  0166  1003               	clrc
  1285  0167  0DB6               	rlf	(??_main+2)^(0+128),f
  1286  0168  0DB7               	rlf	((??_main+2)^(0+128)+1),f
  1287  0169  1003               	clrc
  1288  016A  0DB6               	rlf	(??_main+2)^(0+128),f
  1289  016B  0DB7               	rlf	((??_main+2)^(0+128)+1),f
  1290  016C  1003               	clrc
  1291  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1292  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1293  016F  1885               	btfsc	5,1	;volatile
  1294  0170  1403               	setc
  1295  0171  3000               	movlw	0
  1296  0172  1803               	skipnc
  1297  0173  3001               	movlw	1
  1298  0174  1683               	bsf	3,5	;RP0=1, select bank1
  1299  0175  1303               	bcf	3,6	;RP1=0, select bank1
  1300  0176  00B8               	movwf	(??_main+4)^(0+128)
  1301  0177  01B9               	clrf	((??_main+4)^(0+128)+1)
  1302  0178  1003               	clrc
  1303  0179  0DB8               	rlf	(??_main+4)^(0+128),f
  1304  017A  0DB9               	rlf	((??_main+4)^(0+128)+1),f
  1305  017B  1003               	clrc
  1306  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1307  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1308  017E  1805               	btfsc	5,0	;volatile
  1309  017F  1403               	setc
  1310  0180  3000               	movlw	0
  1311  0181  1803               	skipnc
  1312  0182  3001               	movlw	1
  1313  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1314  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1315  0185  00BA               	movwf	(??_main+6)^(0+128)
  1316  0186  01BB               	clrf	((??_main+6)^(0+128)+1)
  1317  0187  0838               	movf	(??_main+4)^(0+128),w
  1318  0188  043A               	iorwf	(??_main+6)^(0+128),w
  1319  0189  00BC               	movwf	(??_main+8)^(0+128)
  1320  018A  0839               	movf	(??_main+5)^(0+128),w
  1321  018B  043B               	iorwf	(??_main+7)^(0+128),w
  1322  018C  00BD               	movwf	(??_main+9)^(0+128)
  1323  018D  0836               	movf	(??_main+2)^(0+128),w
  1324  018E  043C               	iorwf	(??_main+8)^(0+128),w
  1325  018F  00BE               	movwf	(??_main+10)^(0+128)
  1326  0190  0837               	movf	(??_main+3)^(0+128),w
  1327  0191  043D               	iorwf	(??_main+9)^(0+128),w
  1328  0192  00BF               	movwf	(??_main+11)^(0+128)
  1329  0193  0834               	movf	??_main^(0+128),w
  1330  0194  043E               	iorwf	(??_main+10)^(0+128),w
  1331  0195  00C0               	movwf	(??_main+12)^(0+128)
  1332  0196  0835               	movf	(??_main+1)^(0+128),w
  1333  0197  043F               	iorwf	(??_main+11)^(0+128),w
  1334  0198  00C1               	movwf	(??_main+13)^(0+128)
  1335  0199  0840               	movf	(??_main+12)^(0+128),w
  1336  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1337  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1338  019C  00DB               	movwf	_tuneUpTemp
  1339  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1340  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1341  019F  0841               	movf	(??_main+13)^(0+128),w
  1342  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1343  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1344  01A2  00DC               	movwf	_tuneUpTemp+1
  1345                           
  1346                           ;do_am.c: 243: {RB0 = tuneUpTemp & 0b0001; RB1 = (tuneUpTemp & 0b0010) >> 1; RB2 = (tune
      +                          UpTemp & 0b0100) >> 2; RB3 = (tuneUpTemp & 0b1000) >> 3;};
  1347  01A3  1C5B               	btfss	_tuneUpTemp,0
  1348  01A4  29A9               	goto	u2990
  1349  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1350  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1351  01A7  1406               	bsf	6,0	;volatile
  1352  01A8  29AC               	goto	l2400
  1353  01A9                     u2990:	
  1354  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1355  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1356  01AB  1006               	bcf	6,0	;volatile
  1357  01AC                     l2400:	
  1358  01AC  085C               	movf	_tuneUpTemp+1,w
  1359  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  1360  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  1361  01AF  00B5               	movwf	(??_main^(0+128)+1)
  1362  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1363  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1364  01B2  085B               	movf	_tuneUpTemp,w
  1365  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  1366  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  1367  01B5  00B4               	movwf	??_main^(0+128)
  1368  01B6  0D35               	rlf	(??_main^(0+128)+1),w
  1369  01B7  0CB5               	rrf	(??_main^(0+128)+1),f
  1370  01B8  0CB4               	rrf	??_main^(0+128),f
  1371  01B9  1C34               	btfss	??_main^(0+128),0
  1372  01BA  29BF               	goto	u3010
  1373  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1374  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1375  01BD  1486               	bsf	6,1	;volatile
  1376  01BE  29C2               	goto	l2402
  1377  01BF                     u3010:	
  1378  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1379  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1380  01C1  1086               	bcf	6,1	;volatile
  1381  01C2                     l2402:	
  1382  01C2  085C               	movf	_tuneUpTemp+1,w
  1383  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  1384  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  1385  01C5  00B5               	movwf	(??_main^(0+128)+1)
  1386  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1387  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1388  01C8  085B               	movf	_tuneUpTemp,w
  1389  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  1390  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  1391  01CB  00B4               	movwf	??_main^(0+128)
  1392  01CC  0D35               	rlf	(??_main^(0+128)+1),w
  1393  01CD  0CB5               	rrf	(??_main^(0+128)+1),f
  1394  01CE  0CB4               	rrf	??_main^(0+128),f
  1395  01CF  0D35               	rlf	(??_main^(0+128)+1),w
  1396  01D0  0CB5               	rrf	(??_main^(0+128)+1),f
  1397  01D1  0CB4               	rrf	??_main^(0+128),f
  1398  01D2  1C34               	btfss	??_main^(0+128),0
  1399  01D3  29D8               	goto	u3030
  1400  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1401  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1402  01D6  1506               	bsf	6,2	;volatile
  1403  01D7  29DB               	goto	l2404
  1404  01D8                     u3030:	
  1405  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1406  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1407  01DA  1106               	bcf	6,2	;volatile
  1408  01DB                     l2404:	
  1409  01DB  085C               	movf	_tuneUpTemp+1,w
  1410  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  1411  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  1412  01DE  00B5               	movwf	(??_main^(0+128)+1)
  1413  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1414  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1415  01E1  085B               	movf	_tuneUpTemp,w
  1416  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1417  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1418  01E4  00B4               	movwf	??_main^(0+128)
  1419  01E5  0D35               	rlf	(??_main^(0+128)+1),w
  1420  01E6  0CB5               	rrf	(??_main^(0+128)+1),f
  1421  01E7  0CB4               	rrf	??_main^(0+128),f
  1422  01E8  0D35               	rlf	(??_main^(0+128)+1),w
  1423  01E9  0CB5               	rrf	(??_main^(0+128)+1),f
  1424  01EA  0CB4               	rrf	??_main^(0+128),f
  1425  01EB  0D35               	rlf	(??_main^(0+128)+1),w
  1426  01EC  0CB5               	rrf	(??_main^(0+128)+1),f
  1427  01ED  0CB4               	rrf	??_main^(0+128),f
  1428  01EE  1C34               	btfss	??_main^(0+128),0
  1429  01EF  29F4               	goto	u3050
  1430  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1431  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1432  01F2  1586               	bsf	6,3	;volatile
  1433  01F3  29F7               	goto	l2406
  1434  01F4                     u3050:	
  1435  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1436  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1437  01F6  1186               	bcf	6,3	;volatile
  1438  01F7                     l2406:	
  1439                           
  1440                           ;do_am.c: 248: {RA7 = ~RA7; _delay((unsigned long)((1)*(20000000/4000000.0))); RA7 = ~RA
      +                          7;};
  1441  01F7  3080               	movlw	128
  1442  01F8  0685               	xorwf	5,f
  1443  01F9  29FA               	nop2	;2 cycle nop
  1444  01FA  29FB               	nop2	;2 cycle nop
  1445  01FB  0000               	nop
  1446  01FC  3080               	movlw	128
  1447  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1448  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1449  01FF  0685               	xorwf	5,f
  1450  0200  28A2               	goto	L3
  1451  0201                     __end_of_main:	
  1452                           ;do_am.c: 261: }
  1453                           ;do_am.c: 269: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1454                           
  1455                           ;do_am.c: 251: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1456                           
  1457                           
  1458                           	psect	text1
  1459  0D88                     __ptext1:	
  1460 ;; *************** function _TuneButtonInit *****************
  1461 ;; Defined at:
  1462 ;;		line 104 in file "do_am.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		None
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0
  1479 ;;      Totals:         0       0       0       0       0
  1480 ;;Total ram usage:        0 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    4
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _TuneButtonInit
  1492  0D88                     _TuneButtonInit:	
  1493                           
  1494                           ;do_am.c: 107: (TRISAbits.TRISA6 = 1);
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _TuneButtonInit: []
  1498  0D88  1683               	bsf	3,5	;RP0=1, select bank1
  1499  0D89  1303               	bcf	3,6	;RP1=0, select bank1
  1500  0D8A  1705               	bsf	5,6	;volatile
  1501                           
  1502                           ;do_am.c: 108: ANSELHbits.ANS11 = 0;
  1503  0D8B  1683               	bsf	3,5	;RP0=1, select bank3
  1504  0D8C  1703               	bsf	3,6	;RP1=1, select bank3
  1505  0D8D  1189               	bcf	9,3	;volatile
  1506                           
  1507                           ;do_am.c: 110: (TRISAbits.TRISA0 = 1);
  1508  0D8E  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0D8F  1303               	bcf	3,6	;RP1=0, select bank1
  1510  0D90  1405               	bsf	5,0	;volatile
  1511                           
  1512                           ;do_am.c: 111: ANSELbits.ANS0 = 0;
  1513  0D91  1683               	bsf	3,5	;RP0=1, select bank3
  1514  0D92  1703               	bsf	3,6	;RP1=1, select bank3
  1515  0D93  1008               	bcf	8,0	;volatile
  1516                           
  1517                           ;do_am.c: 113: (TRISAbits.TRISA1 = 1);
  1518  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0D95  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0D96  1485               	bsf	5,1	;volatile
  1521                           
  1522                           ;do_am.c: 114: ANSELbits.ANS1 = 0;
  1523  0D97  1683               	bsf	3,5	;RP0=1, select bank3
  1524  0D98  1703               	bsf	3,6	;RP1=1, select bank3
  1525  0D99  1088               	bcf	8,1	;volatile
  1526                           
  1527                           ;do_am.c: 115: (TRISAbits.TRISA2 = 1);
  1528  0D9A  1683               	bsf	3,5	;RP0=1, select bank1
  1529  0D9B  1303               	bcf	3,6	;RP1=0, select bank1
  1530  0D9C  1505               	bsf	5,2	;volatile
  1531                           
  1532                           ;do_am.c: 116: ANSELbits.ANS2 = 0;
  1533  0D9D  1683               	bsf	3,5	;RP0=1, select bank3
  1534  0D9E  1703               	bsf	3,6	;RP1=1, select bank3
  1535  0D9F  1108               	bcf	8,2	;volatile
  1536                           
  1537                           ;do_am.c: 117: (TRISAbits.TRISA3 = 1);
  1538  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  1539  0DA1  1303               	bcf	3,6	;RP1=0, select bank1
  1540  0DA2  1585               	bsf	5,3	;volatile
  1541                           
  1542                           ;do_am.c: 118: ANSELbits.ANS3 = 0;
  1543  0DA3  1683               	bsf	3,5	;RP0=1, select bank3
  1544  0DA4  1703               	bsf	3,6	;RP1=1, select bank3
  1545  0DA5  1188               	bcf	8,3	;volatile
  1546                           
  1547                           ;do_am.c: 120: (TRISAbits.TRISA7 = 0);
  1548  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0DA7  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0DA8  1385               	bcf	5,7	;volatile
  1551                           
  1552                           ;do_am.c: 122: (TRISBbits.TRISB0 = 0);
  1553  0DA9  1006               	bcf	6,0	;volatile
  1554                           
  1555                           ;do_am.c: 123: ANSELHbits.ANS12 = 0;
  1556  0DAA  1683               	bsf	3,5	;RP0=1, select bank3
  1557  0DAB  1703               	bsf	3,6	;RP1=1, select bank3
  1558  0DAC  1209               	bcf	9,4	;volatile
  1559                           
  1560                           ;do_am.c: 125: (TRISBbits.TRISB1 = 0);
  1561  0DAD  1683               	bsf	3,5	;RP0=1, select bank1
  1562  0DAE  1303               	bcf	3,6	;RP1=0, select bank1
  1563  0DAF  1086               	bcf	6,1	;volatile
  1564                           
  1565                           ;do_am.c: 126: ANSELHbits.ANS10 = 0;
  1566  0DB0  1683               	bsf	3,5	;RP0=1, select bank3
  1567  0DB1  1703               	bsf	3,6	;RP1=1, select bank3
  1568  0DB2  1109               	bcf	9,2	;volatile
  1569                           
  1570                           ;do_am.c: 128: (TRISBbits.TRISB2 = 0);
  1571  0DB3  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0DB4  1303               	bcf	3,6	;RP1=0, select bank1
  1573  0DB5  1106               	bcf	6,2	;volatile
  1574                           
  1575                           ;do_am.c: 129: ANSELHbits.ANS8 = 0;
  1576  0DB6  1683               	bsf	3,5	;RP0=1, select bank3
  1577  0DB7  1703               	bsf	3,6	;RP1=1, select bank3
  1578  0DB8  1009               	bcf	9,0	;volatile
  1579                           
  1580                           ;do_am.c: 131: (TRISBbits.TRISB3 = 0);
  1581  0DB9  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0DBA  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0DBB  1186               	bcf	6,3	;volatile
  1584                           
  1585                           ;do_am.c: 132: ANSELHbits.ANS9 = 0;
  1586  0DBC  1683               	bsf	3,5	;RP0=1, select bank3
  1587  0DBD  1703               	bsf	3,6	;RP1=1, select bank3
  1588  0DBE  1089               	bcf	9,1	;volatile
  1589                           
  1590                           ;do_am.c: 134: RA7 = 1;
  1591  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  1593  0DC1  1785               	bsf	5,7	;volatile
  1594  0DC2  0008               	return
  1595  0DC3                     __end_of_TuneButtonInit:	
  1596                           
  1597                           	psect	text2
  1598  0E0E                     __ptext2:	
  1599 ;; *************** function _LM35ReadTemp *****************
  1600 ;; Defined at:
  1601 ;;		line 8 in file "lm35_pic16.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  t               3    0        float 
  1606 ;;  adc_value       2   18[BANK1 ] unsigned int 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  2   16[BANK1 ] int 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         0       0       2       0       0
  1617 ;;      Locals:         0       0       2       0       0
  1618 ;;      Temps:          0       0       0       0       0
  1619 ;;      Totals:         0       0       4       0       0
  1620 ;;Total ram usage:        4 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    6
  1623 ;; This function calls:
  1624 ;;		_ReadADC
  1625 ;;		___ftmul
  1626 ;;		___fttol
  1627 ;;		___lwtoft
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _LM35ReadTemp
  1635  0E0E                     _LM35ReadTemp:	
  1636                           
  1637                           ;lm35_pic16.c: 11: float t;
  1638                           ;lm35_pic16.c: 14: uint16_t adc_value=ReadADC(13);
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _LM35ReadTemp: [wreg+status,2+status,0+pclath+cstack]
  1642  0E0E  300D               	movlw	13
  1643  0E0F  120A  158A  251D  120A  158A  	fcall	_ReadADC
  1644  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0E16  0834               	movf	?_ReadADC+1,w
  1647  0E17  1683               	bsf	3,5	;RP0=1, select bank1
  1648  0E18  1303               	bcf	3,6	;RP1=0, select bank1
  1649  0E19  00B3               	movwf	(LM35ReadTemp@adc_value+1)^(0+128)
  1650  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  1651  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  1652  0E1C  0833               	movf	?_ReadADC,w
  1653  0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  1654  0E1E  1303               	bcf	3,6	;RP1=0, select bank1
  1655  0E1F  00B2               	movwf	LM35ReadTemp@adc_value^(0+128)
  1656                           
  1657                           ;lm35_pic16.c: 28: return (int)(adc_value*0.4887);
  1658  0E20  0833               	movf	(LM35ReadTemp@adc_value+1)^(0+128),w
  1659  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  1661  0E23  00BC               	movwf	___lwtoft@c+1
  1662  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0E25  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0E26  0832               	movf	LM35ReadTemp@adc_value^(0+128),w
  1665  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0E29  00BB               	movwf	___lwtoft@c
  1668  0E2A  120A  158A  2505  120A  158A  	fcall	___lwtoft
  1669  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0E31  083B               	movf	?___lwtoft,w
  1672  0E32  00C2               	movwf	___ftmul@f2
  1673  0E33  083C               	movf	?___lwtoft+1,w
  1674  0E34  00C3               	movwf	___ftmul@f2+1
  1675  0E35  083D               	movf	?___lwtoft+2,w
  1676  0E36  00C4               	movwf	___ftmul@f2+2
  1677  0E37  3037               	movlw	55
  1678  0E38  00BF               	movwf	___ftmul@f1
  1679  0E39  30FA               	movlw	250
  1680  0E3A  00C0               	movwf	___ftmul@f1+1
  1681  0E3B  303E               	movlw	62
  1682  0E3C  00C1               	movwf	___ftmul@f1+2
  1683  0E3D  120A  118A  2201  120A  158A  	fcall	___ftmul
  1684  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0E44  083F               	movf	?___ftmul,w
  1687  0E45  00C9               	movwf	___fttol@f1
  1688  0E46  0840               	movf	?___ftmul+1,w
  1689  0E47  00CA               	movwf	___fttol@f1+1
  1690  0E48  0841               	movf	?___ftmul+2,w
  1691  0E49  00CB               	movwf	___fttol@f1+2
  1692  0E4A  120A  118A  2337   	fcall	___fttol
  1693  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0E4F  084A               	movf	?___fttol+1,w
  1696  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  1697  0E51  1303               	bcf	3,6	;RP1=0, select bank1
  1698  0E52  00B1               	movwf	(?_LM35ReadTemp+1)^(0+128)
  1699  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0E55  0849               	movf	?___fttol,w
  1702  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  1703  0E57  1303               	bcf	3,6	;RP1=0, select bank1
  1704  0E58  00B0               	movwf	?_LM35ReadTemp^(0+128)
  1705  0E59  0008               	return
  1706  0E5A                     __end_of_LM35ReadTemp:	
  1707                           
  1708                           	psect	text3
  1709  0D05                     __ptext3:	
  1710 ;; *************** function ___lwtoft *****************
  1711 ;; Defined at:
  1712 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  c               2   27[BANK0 ] unsigned int 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  3   27[BANK0 ] float 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       3       0       0       0
  1727 ;;      Locals:         0       0       0       0       0
  1728 ;;      Temps:          0       1       0       0       0
  1729 ;;      Totals:         0       4       0       0       0
  1730 ;;Total ram usage:        4 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    5
  1733 ;; This function calls:
  1734 ;;		___ftpack
  1735 ;; This function is called by:
  1736 ;;		_LM35ReadTemp
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function ___lwtoft
  1742  0D05                     ___lwtoft:	
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1746  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0D07  083B               	movf	___lwtoft@c,w
  1749  0D08  00B3               	movwf	___ftpack@arg
  1750  0D09  083C               	movf	___lwtoft@c+1,w
  1751  0D0A  00B4               	movwf	___ftpack@arg+1
  1752  0D0B  01B5               	clrf	___ftpack@arg+2
  1753  0D0C  308E               	movlw	142
  1754  0D0D  00BE               	movwf	??___lwtoft
  1755  0D0E  083E               	movf	??___lwtoft,w
  1756  0D0F  00B6               	movwf	___ftpack@exp
  1757  0D10  01B7               	clrf	___ftpack@sign
  1758  0D11  120A  118A  253E   	fcall	___ftpack
  1759  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  1760  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  1761  0D16  0833               	movf	?___ftpack,w
  1762  0D17  00BB               	movwf	?___lwtoft
  1763  0D18  0834               	movf	?___ftpack+1,w
  1764  0D19  00BC               	movwf	?___lwtoft+1
  1765  0D1A  0835               	movf	?___ftpack+2,w
  1766  0D1B  00BD               	movwf	?___lwtoft+2
  1767  0D1C  0008               	return
  1768  0D1D                     __end_of___lwtoft:	
  1769                           
  1770                           	psect	text4
  1771  0337                     __ptext4:	
  1772 ;; *************** function ___fttol *****************
  1773 ;; Defined at:
  1774 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;  f1              3   41[BANK0 ] float 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  lval            4   11[BANK1 ] unsigned long 
  1779 ;;  exp1            1   15[BANK1 ] unsigned char 
  1780 ;;  sign1           1   10[BANK1 ] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  4   41[BANK0 ] long 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       4       0       0       0
  1791 ;;      Locals:         0       0       6       0       0
  1792 ;;      Temps:          0       0       4       0       0
  1793 ;;      Totals:         0       4      10       0       0
  1794 ;;Total ram usage:       14 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    4
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_LM35ReadTemp
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           
  1805                           ;psect for function ___fttol
  1806  0337                     ___fttol:	
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1810  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0339  0849               	movf	___fttol@f1,w
  1813  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1814  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1815  033C  00A6               	movwf	??___fttol^(0+128)
  1816  033D  1283               	bcf	3,5	;RP0=0, select bank0
  1817  033E  1303               	bcf	3,6	;RP1=0, select bank0
  1818  033F  084A               	movf	___fttol@f1+1,w
  1819  0340  1683               	bsf	3,5	;RP0=1, select bank1
  1820  0341  1303               	bcf	3,6	;RP1=0, select bank1
  1821  0342  00A7               	movwf	(??___fttol^(0+128)+1)
  1822  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0345  084B               	movf	___fttol@f1+2,w
  1825  0346  1683               	bsf	3,5	;RP0=1, select bank1
  1826  0347  1303               	bcf	3,6	;RP1=0, select bank1
  1827  0348  00A8               	movwf	(??___fttol^(0+128)+2)
  1828  0349  1003               	clrc
  1829  034A  0D27               	rlf	(??___fttol^(0+128)+1),w
  1830  034B  0D28               	rlf	(??___fttol^(0+128)+2),w
  1831  034C  00A9               	movwf	(??___fttol+3)^(0+128)
  1832  034D  0829               	movf	(??___fttol+3)^(0+128),w
  1833  034E  00AF               	movwf	___fttol@exp1^(0+128)
  1834  034F  082F               	movf	___fttol@exp1^(0+128),w
  1835  0350  1D03               	btfss	3,2
  1836  0351  2B5D               	goto	l2298
  1837  0352  3000               	movlw	0
  1838  0353  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0354  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0355  00CC               	movwf	?___fttol+3
  1841  0356  3000               	movlw	0
  1842  0357  00CB               	movwf	?___fttol+2
  1843  0358  3000               	movlw	0
  1844  0359  00CA               	movwf	?___fttol+1
  1845  035A  3000               	movlw	0
  1846  035B  00C9               	movwf	?___fttol
  1847  035C  0008               	return
  1848  035D                     l2298:	
  1849  035D  1283               	bcf	3,5	;RP0=0, select bank0
  1850  035E  0849               	movf	___fttol@f1,w
  1851  035F  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0360  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0361  00A6               	movwf	??___fttol^(0+128)
  1854  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0364  084A               	movf	___fttol@f1+1,w
  1857  0365  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0366  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0367  00A7               	movwf	(??___fttol^(0+128)+1)
  1860  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1862  036A  084B               	movf	___fttol@f1+2,w
  1863  036B  1683               	bsf	3,5	;RP0=1, select bank1
  1864  036C  1303               	bcf	3,6	;RP1=0, select bank1
  1865  036D  00A8               	movwf	(??___fttol^(0+128)+2)
  1866  036E  3017               	movlw	23
  1867  036F                     u2865:	
  1868  036F  1003               	clrc
  1869  0370  0CA8               	rrf	(??___fttol^(0+128)+2),f
  1870  0371  0CA7               	rrf	(??___fttol^(0+128)+1),f
  1871  0372  0CA6               	rrf	??___fttol^(0+128),f
  1872  0373  3EFF               	addlw	-1
  1873  0374  1D03               	skipz
  1874  0375  2B6F               	goto	u2865
  1875  0376  0826               	movf	??___fttol^(0+128),w
  1876  0377  00A9               	movwf	(??___fttol+3)^(0+128)
  1877  0378  0829               	movf	(??___fttol+3)^(0+128),w
  1878  0379  00AA               	movwf	___fttol@sign1^(0+128)
  1879  037A  1283               	bcf	3,5	;RP0=0, select bank0
  1880  037B  1303               	bcf	3,6	;RP1=0, select bank0
  1881  037C  17CA               	bsf	___fttol@f1+1,7
  1882  037D  30FF               	movlw	255
  1883  037E  05C9               	andwf	___fttol@f1,f
  1884  037F  30FF               	movlw	255
  1885  0380  05CA               	andwf	___fttol@f1+1,f
  1886  0381  3000               	movlw	0
  1887  0382  05CB               	andwf	___fttol@f1+2,f
  1888  0383  0849               	movf	___fttol@f1,w
  1889  0384  1683               	bsf	3,5	;RP0=1, select bank1
  1890  0385  1303               	bcf	3,6	;RP1=0, select bank1
  1891  0386  00AB               	movwf	___fttol@lval^(0+128)
  1892  0387  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0388  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0389  084A               	movf	___fttol@f1+1,w
  1895  038A  1683               	bsf	3,5	;RP0=1, select bank1
  1896  038B  1303               	bcf	3,6	;RP1=0, select bank1
  1897  038C  00AC               	movwf	(___fttol@lval^(0+128)+1)
  1898  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1899  038E  1303               	bcf	3,6	;RP1=0, select bank0
  1900  038F  084B               	movf	___fttol@f1+2,w
  1901  0390  1683               	bsf	3,5	;RP0=1, select bank1
  1902  0391  1303               	bcf	3,6	;RP1=0, select bank1
  1903  0392  00AD               	movwf	(___fttol@lval^(0+128)+2)
  1904  0393  01AE               	clrf	(___fttol@lval^(0+128)+3)
  1905  0394  308E               	movlw	142
  1906  0395  02AF               	subwf	___fttol@exp1^(0+128),f
  1907  0396  1FAF               	btfss	___fttol@exp1^(0+128),7
  1908  0397  2BBA               	goto	l2318
  1909  0398  082F               	movf	___fttol@exp1^(0+128),w
  1910  0399  3A80               	xorlw	128
  1911  039A  3E8F               	addlw	143
  1912  039B  1803               	skipnc
  1913  039C  2BA8               	goto	l2316
  1914  039D  3000               	movlw	0
  1915  039E  1283               	bcf	3,5	;RP0=0, select bank0
  1916  039F  1303               	bcf	3,6	;RP1=0, select bank0
  1917  03A0  00CC               	movwf	?___fttol+3
  1918  03A1  3000               	movlw	0
  1919  03A2  00CB               	movwf	?___fttol+2
  1920  03A3  3000               	movlw	0
  1921  03A4  00CA               	movwf	?___fttol+1
  1922  03A5  3000               	movlw	0
  1923  03A6  00C9               	movwf	?___fttol
  1924  03A7  0008               	return
  1925  03A8                     l2316:	
  1926  03A8  3001               	movlw	1
  1927  03A9                     u2895:	
  1928  03A9  1003               	clrc
  1929  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  1930  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  1931  03AC  0CAE               	rrf	(___fttol@lval+3)^(0+128),f
  1932  03AD  0CAD               	rrf	(___fttol@lval+2)^(0+128),f
  1933  03AE  0CAC               	rrf	(___fttol@lval+1)^(0+128),f
  1934  03AF  0CAB               	rrf	___fttol@lval^(0+128),f
  1935  03B0  3EFF               	addlw	-1
  1936  03B1  1D03               	skipz
  1937  03B2  2BA9               	goto	u2895
  1938  03B3  3001               	movlw	1
  1939  03B4  00A6               	movwf	??___fttol^(0+128)
  1940  03B5  0826               	movf	??___fttol^(0+128),w
  1941  03B6  07AF               	addwf	___fttol@exp1^(0+128),f
  1942  03B7  1903               	btfsc	3,2
  1943  03B8  2BDB               	goto	l2326
  1944  03B9  2BA8               	goto	l2316
  1945  03BA                     l2318:	
  1946  03BA  3018               	movlw	24
  1947  03BB  022F               	subwf	___fttol@exp1^(0+128),w
  1948  03BC  1C03               	skipc
  1949  03BD  2BD6               	goto	l506
  1950  03BE  3000               	movlw	0
  1951  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1952  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1953  03C1  00CC               	movwf	?___fttol+3
  1954  03C2  3000               	movlw	0
  1955  03C3  00CB               	movwf	?___fttol+2
  1956  03C4  3000               	movlw	0
  1957  03C5  00CA               	movwf	?___fttol+1
  1958  03C6  3000               	movlw	0
  1959  03C7  00C9               	movwf	?___fttol
  1960  03C8  0008               	return
  1961  03C9                     l2324:	
  1962  03C9  3001               	movlw	1
  1963  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1964  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1965  03CC  00A6               	movwf	??___fttol^(0+128)
  1966  03CD                     u2925:	
  1967  03CD  1003               	clrc
  1968  03CE  0DAB               	rlf	___fttol@lval^(0+128),f
  1969  03CF  0DAC               	rlf	(___fttol@lval+1)^(0+128),f
  1970  03D0  0DAD               	rlf	(___fttol@lval+2)^(0+128),f
  1971  03D1  0DAE               	rlf	(___fttol@lval+3)^(0+128),f
  1972  03D2  0BA6               	decfsz	??___fttol^(0+128),f
  1973  03D3  2BCD               	goto	u2925
  1974  03D4  3001               	movlw	1
  1975  03D5  02AF               	subwf	___fttol@exp1^(0+128),f
  1976  03D6                     l506:	
  1977  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1978  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1979  03D8  082F               	movf	___fttol@exp1^(0+128),w
  1980  03D9  1D03               	btfss	3,2
  1981  03DA  2BC9               	goto	l2324
  1982  03DB                     l2326:	
  1983  03DB  082A               	movf	___fttol@sign1^(0+128),w
  1984  03DC  1903               	btfsc	3,2
  1985  03DD  2BE9               	goto	l2330
  1986  03DE  09AB               	comf	___fttol@lval^(0+128),f
  1987  03DF  09AC               	comf	(___fttol@lval+1)^(0+128),f
  1988  03E0  09AD               	comf	(___fttol@lval+2)^(0+128),f
  1989  03E1  09AE               	comf	(___fttol@lval+3)^(0+128),f
  1990  03E2  0AAB               	incf	___fttol@lval^(0+128),f
  1991  03E3  1903               	skipnz
  1992  03E4  0AAC               	incf	(___fttol@lval+1)^(0+128),f
  1993  03E5  1903               	skipnz
  1994  03E6  0AAD               	incf	(___fttol@lval+2)^(0+128),f
  1995  03E7  1903               	skipnz
  1996  03E8  0AAE               	incf	(___fttol@lval+3)^(0+128),f
  1997  03E9                     l2330:	
  1998  03E9  082E               	movf	(___fttol@lval+3)^(0+128),w
  1999  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2000  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2001  03EC  00CC               	movwf	?___fttol+3
  2002  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2003  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2004  03EF  082D               	movf	(___fttol@lval+2)^(0+128),w
  2005  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2006  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2007  03F2  00CB               	movwf	?___fttol+2
  2008  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2009  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2010  03F5  082C               	movf	(___fttol@lval+1)^(0+128),w
  2011  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2012  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2013  03F8  00CA               	movwf	?___fttol+1
  2014  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2015  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2016  03FB  082B               	movf	___fttol@lval^(0+128),w
  2017  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2018  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2019  03FE  00C9               	movwf	?___fttol
  2020  03FF  0008               	return
  2021  0400                     __end_of___fttol:	
  2022                           
  2023                           	psect	text5
  2024  0201                     __ptext5:	
  2025 ;; *************** function ___ftmul *****************
  2026 ;; Defined at:
  2027 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  f1              3   31[BANK0 ] float 
  2030 ;;  f2              3   34[BANK0 ] float 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
  2033 ;;  sign            1    5[BANK1 ] unsigned char 
  2034 ;;  cntr            1    4[BANK1 ] unsigned char 
  2035 ;;  exp             1    0[BANK1 ] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  3   31[BANK0 ] float 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0, pclath, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2045 ;;      Params:         0       6       0       0       0
  2046 ;;      Locals:         0       0       6       0       0
  2047 ;;      Temps:          0       4       0       0       0
  2048 ;;      Totals:         0      10       6       0       0
  2049 ;;Total ram usage:       16 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    5
  2052 ;; This function calls:
  2053 ;;		___ftpack
  2054 ;; This function is called by:
  2055 ;;		_LM35ReadTemp
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           
  2060                           ;psect for function ___ftmul
  2061  0201                     ___ftmul:	
  2062                           
  2063                           ;incstack = 0
  2064                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2065  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0203  083F               	movf	___ftmul@f1,w
  2068  0204  00C5               	movwf	??___ftmul
  2069  0205  0840               	movf	___ftmul@f1+1,w
  2070  0206  00C6               	movwf	??___ftmul+1
  2071  0207  0841               	movf	___ftmul@f1+2,w
  2072  0208  00C7               	movwf	??___ftmul+2
  2073  0209  1003               	clrc
  2074  020A  0D46               	rlf	??___ftmul+1,w
  2075  020B  0D47               	rlf	??___ftmul+2,w
  2076  020C  00C8               	movwf	??___ftmul+3
  2077  020D  0848               	movf	??___ftmul+3,w
  2078  020E  1683               	bsf	3,5	;RP0=1, select bank1
  2079  020F  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0210  00A0               	movwf	___ftmul@exp^(0+128)
  2081  0211  0820               	movf	___ftmul@exp^(0+128),w
  2082  0212  1D03               	btfss	3,2
  2083  0213  2A1D               	goto	l2248
  2084  0214  3000               	movlw	0
  2085  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0217  00BF               	movwf	?___ftmul
  2088  0218  3000               	movlw	0
  2089  0219  00C0               	movwf	?___ftmul+1
  2090  021A  3000               	movlw	0
  2091  021B  00C1               	movwf	?___ftmul+2
  2092  021C  0008               	return
  2093  021D                     l2248:	
  2094  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2095  021E  0842               	movf	___ftmul@f2,w
  2096  021F  00C5               	movwf	??___ftmul
  2097  0220  0843               	movf	___ftmul@f2+1,w
  2098  0221  00C6               	movwf	??___ftmul+1
  2099  0222  0844               	movf	___ftmul@f2+2,w
  2100  0223  00C7               	movwf	??___ftmul+2
  2101  0224  1003               	clrc
  2102  0225  0D46               	rlf	??___ftmul+1,w
  2103  0226  0D47               	rlf	??___ftmul+2,w
  2104  0227  00C8               	movwf	??___ftmul+3
  2105  0228  0848               	movf	??___ftmul+3,w
  2106  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2107  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2108  022B  00A5               	movwf	___ftmul@sign^(0+128)
  2109  022C  0825               	movf	___ftmul@sign^(0+128),w
  2110  022D  1D03               	btfss	3,2
  2111  022E  2A38               	goto	l2254
  2112  022F  3000               	movlw	0
  2113  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0231  1303               	bcf	3,6	;RP1=0, select bank0
  2115  0232  00BF               	movwf	?___ftmul
  2116  0233  3000               	movlw	0
  2117  0234  00C0               	movwf	?___ftmul+1
  2118  0235  3000               	movlw	0
  2119  0236  00C1               	movwf	?___ftmul+2
  2120  0237  0008               	return
  2121  0238                     l2254:	
  2122  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2123  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2124  023A  0825               	movf	___ftmul@sign^(0+128),w
  2125  023B  3E7B               	addlw	123
  2126  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2127  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2128  023E  00C5               	movwf	??___ftmul
  2129  023F  0845               	movf	??___ftmul,w
  2130  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2132  0242  07A0               	addwf	___ftmul@exp^(0+128),f
  2133  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0245  083F               	movf	___ftmul@f1,w
  2136  0246  00C5               	movwf	??___ftmul
  2137  0247  0840               	movf	___ftmul@f1+1,w
  2138  0248  00C6               	movwf	??___ftmul+1
  2139  0249  0841               	movf	___ftmul@f1+2,w
  2140  024A  00C7               	movwf	??___ftmul+2
  2141  024B  3010               	movlw	16
  2142  024C                     u2735:	
  2143  024C  1003               	clrc
  2144  024D  0CC7               	rrf	??___ftmul+2,f
  2145  024E  0CC6               	rrf	??___ftmul+1,f
  2146  024F  0CC5               	rrf	??___ftmul,f
  2147  0250  3EFF               	addlw	-1
  2148  0251  1D03               	skipz
  2149  0252  2A4C               	goto	u2735
  2150  0253  0845               	movf	??___ftmul,w
  2151  0254  00C8               	movwf	??___ftmul+3
  2152  0255  0848               	movf	??___ftmul+3,w
  2153  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2154  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2155  0258  00A5               	movwf	___ftmul@sign^(0+128)
  2156  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2157  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2158  025B  0842               	movf	___ftmul@f2,w
  2159  025C  00C5               	movwf	??___ftmul
  2160  025D  0843               	movf	___ftmul@f2+1,w
  2161  025E  00C6               	movwf	??___ftmul+1
  2162  025F  0844               	movf	___ftmul@f2+2,w
  2163  0260  00C7               	movwf	??___ftmul+2
  2164  0261  3010               	movlw	16
  2165  0262                     u2745:	
  2166  0262  1003               	clrc
  2167  0263  0CC7               	rrf	??___ftmul+2,f
  2168  0264  0CC6               	rrf	??___ftmul+1,f
  2169  0265  0CC5               	rrf	??___ftmul,f
  2170  0266  3EFF               	addlw	-1
  2171  0267  1D03               	skipz
  2172  0268  2A62               	goto	u2745
  2173  0269  0845               	movf	??___ftmul,w
  2174  026A  00C8               	movwf	??___ftmul+3
  2175  026B  0848               	movf	??___ftmul+3,w
  2176  026C  1683               	bsf	3,5	;RP0=1, select bank1
  2177  026D  1303               	bcf	3,6	;RP1=0, select bank1
  2178  026E  06A5               	xorwf	___ftmul@sign^(0+128),f
  2179  026F  3080               	movlw	128
  2180  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0272  00C5               	movwf	??___ftmul
  2183  0273  0845               	movf	??___ftmul,w
  2184  0274  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0275  1303               	bcf	3,6	;RP1=0, select bank1
  2186  0276  05A5               	andwf	___ftmul@sign^(0+128),f
  2187  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0279  17C0               	bsf	___ftmul@f1+1,7
  2190  027A  17C3               	bsf	___ftmul@f2+1,7
  2191  027B  30FF               	movlw	255
  2192  027C  05C2               	andwf	___ftmul@f2,f
  2193  027D  30FF               	movlw	255
  2194  027E  05C3               	andwf	___ftmul@f2+1,f
  2195  027F  3000               	movlw	0
  2196  0280  05C4               	andwf	___ftmul@f2+2,f
  2197  0281  3000               	movlw	0
  2198  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2199  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2200  0284  00A1               	movwf	___ftmul@f3_as_product^(0+128)
  2201  0285  3000               	movlw	0
  2202  0286  00A2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  2203  0287  3000               	movlw	0
  2204  0288  00A3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  2205  0289  3007               	movlw	7
  2206  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2207  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2208  028C  00C5               	movwf	??___ftmul
  2209  028D  0845               	movf	??___ftmul,w
  2210  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2211  028F  1303               	bcf	3,6	;RP1=0, select bank1
  2212  0290  00A4               	movwf	___ftmul@cntr^(0+128)
  2213  0291                     l2266:	
  2214  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0293  1C3F               	btfss	___ftmul@f1,0
  2217  0294  2AB3               	goto	l2270
  2218  0295  0842               	movf	___ftmul@f2,w
  2219  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0297  1303               	bcf	3,6	;RP1=0, select bank1
  2221  0298  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
  2222  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2223  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2224  029B  0843               	movf	___ftmul@f2+1,w
  2225  029C  1103               	clrz
  2226  029D  1803               	skipnc
  2227  029E  0A43               	incf	___ftmul@f2+1,w
  2228  029F  1903               	skipnz
  2229  02A0  2AA4               	goto	u2761
  2230  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2231  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2232  02A3  07A2               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  2233  02A4                     u2761:	
  2234  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2235  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2236  02A6  0844               	movf	___ftmul@f2+2,w
  2237  02A7  1103               	clrz
  2238  02A8  1803               	skipnc
  2239  02A9  0A44               	incf	___ftmul@f2+2,w
  2240  02AA  1903               	skipnz
  2241  02AB  2AAF               	goto	u2762
  2242  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2243  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2244  02AE  07A3               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  2245  02AF                     u2762:	
  2246  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2247  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2248  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2249  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2250  02B3                     l2270:	
  2251  02B3  3001               	movlw	1
  2252  02B4                     u2775:	
  2253  02B4  1003               	clrc
  2254  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2255  02B6  0CC1               	rrf	___ftmul@f1+2,f
  2256  02B7  0CC0               	rrf	___ftmul@f1+1,f
  2257  02B8  0CBF               	rrf	___ftmul@f1,f
  2258  02B9  3EFF               	addlw	-1
  2259  02BA  1D03               	skipz
  2260  02BB  2AB4               	goto	u2775
  2261  02BC  3001               	movlw	1
  2262  02BD                     u2785:	
  2263  02BD  1003               	clrc
  2264  02BE  0DC2               	rlf	___ftmul@f2,f
  2265  02BF  0DC3               	rlf	___ftmul@f2+1,f
  2266  02C0  0DC4               	rlf	___ftmul@f2+2,f
  2267  02C1  3EFF               	addlw	-1
  2268  02C2  1D03               	skipz
  2269  02C3  2ABD               	goto	u2785
  2270  02C4  3001               	movlw	1
  2271  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2272  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2273  02C7  02A4               	subwf	___ftmul@cntr^(0+128),f
  2274  02C8  1D03               	btfss	3,2
  2275  02C9  2A91               	goto	l2266
  2276  02CA  3009               	movlw	9
  2277  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2278  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2279  02CD  00C5               	movwf	??___ftmul
  2280  02CE  0845               	movf	??___ftmul,w
  2281  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  2282  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  2283  02D1  00A4               	movwf	___ftmul@cntr^(0+128)
  2284  02D2                     l2278:	
  2285  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2286  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2287  02D4  1C3F               	btfss	___ftmul@f1,0
  2288  02D5  2AF4               	goto	l2282
  2289  02D6  0842               	movf	___ftmul@f2,w
  2290  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  2291  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  2292  02D9  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
  2293  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2294  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2295  02DC  0843               	movf	___ftmul@f2+1,w
  2296  02DD  1103               	clrz
  2297  02DE  1803               	skipnc
  2298  02DF  0A43               	incf	___ftmul@f2+1,w
  2299  02E0  1903               	skipnz
  2300  02E1  2AE5               	goto	u2811
  2301  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2302  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2303  02E4  07A2               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  2304  02E5                     u2811:	
  2305  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2306  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2307  02E7  0844               	movf	___ftmul@f2+2,w
  2308  02E8  1103               	clrz
  2309  02E9  1803               	skipnc
  2310  02EA  0A44               	incf	___ftmul@f2+2,w
  2311  02EB  1903               	skipnz
  2312  02EC  2AF0               	goto	u2812
  2313  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2314  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2315  02EF  07A3               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  2316  02F0                     u2812:	
  2317  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2318  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2319  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2320  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2321  02F4                     l2282:	
  2322  02F4  3001               	movlw	1
  2323  02F5                     u2825:	
  2324  02F5  1003               	clrc
  2325  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2326  02F7  0CC1               	rrf	___ftmul@f1+2,f
  2327  02F8  0CC0               	rrf	___ftmul@f1+1,f
  2328  02F9  0CBF               	rrf	___ftmul@f1,f
  2329  02FA  3EFF               	addlw	-1
  2330  02FB  1D03               	skipz
  2331  02FC  2AF5               	goto	u2825
  2332  02FD  3001               	movlw	1
  2333  02FE                     u2835:	
  2334  02FE  1003               	clrc
  2335  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0300  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0301  0CA3               	rrf	(___ftmul@f3_as_product+2)^(0+128),f
  2338  0302  0CA2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  2339  0303  0CA1               	rrf	___ftmul@f3_as_product^(0+128),f
  2340  0304  3EFF               	addlw	-1
  2341  0305  1D03               	skipz
  2342  0306  2AFE               	goto	u2835
  2343  0307  3001               	movlw	1
  2344  0308  02A4               	subwf	___ftmul@cntr^(0+128),f
  2345  0309  1D03               	btfss	3,2
  2346  030A  2AD2               	goto	l2278
  2347  030B  0821               	movf	___ftmul@f3_as_product^(0+128),w
  2348  030C  1283               	bcf	3,5	;RP0=0, select bank0
  2349  030D  1303               	bcf	3,6	;RP1=0, select bank0
  2350  030E  00B3               	movwf	___ftpack@arg
  2351  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0310  1303               	bcf	3,6	;RP1=0, select bank1
  2353  0311  0822               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  2354  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2355  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2356  0314  00B4               	movwf	___ftpack@arg+1
  2357  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2358  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2359  0317  0823               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  2360  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2362  031A  00B5               	movwf	___ftpack@arg+2
  2363  031B  1683               	bsf	3,5	;RP0=1, select bank1
  2364  031C  1303               	bcf	3,6	;RP1=0, select bank1
  2365  031D  0820               	movf	___ftmul@exp^(0+128),w
  2366  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2367  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0320  00C5               	movwf	??___ftmul
  2369  0321  0845               	movf	??___ftmul,w
  2370  0322  00B6               	movwf	___ftpack@exp
  2371  0323  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0324  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0325  0825               	movf	___ftmul@sign^(0+128),w
  2374  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2375  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2376  0328  00C6               	movwf	??___ftmul+1
  2377  0329  0846               	movf	??___ftmul+1,w
  2378  032A  00B7               	movwf	___ftpack@sign
  2379  032B  120A  118A  253E   	fcall	___ftpack
  2380  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2381  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2382  0330  0833               	movf	?___ftpack,w
  2383  0331  00BF               	movwf	?___ftmul
  2384  0332  0834               	movf	?___ftpack+1,w
  2385  0333  00C0               	movwf	?___ftmul+1
  2386  0334  0835               	movf	?___ftpack+2,w
  2387  0335  00C1               	movwf	?___ftmul+2
  2388  0336  0008               	return
  2389  0337                     __end_of___ftmul:	
  2390                           
  2391                           	psect	text6
  2392  053E                     __ptext6:	
  2393 ;; *************** function ___ftpack *****************
  2394 ;; Defined at:
  2395 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  arg             3   19[BANK0 ] unsigned um
  2398 ;;  exp             1   22[BANK0 ] unsigned char 
  2399 ;;  sign            1   23[BANK0 ] unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  3   19[BANK0 ] float 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       5       0       0       0
  2412 ;;      Locals:         0       0       0       0       0
  2413 ;;      Temps:          0       3       0       0       0
  2414 ;;      Totals:         0       8       0       0       0
  2415 ;;Total ram usage:        8 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    4
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		___ftmul
  2422 ;;		___lwtoft
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function ___ftpack
  2428  053E                     ___ftpack:	
  2429                           
  2430                           ;incstack = 0
  2431                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2432  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2433  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0540  0836               	movf	___ftpack@exp,w
  2435  0541  1903               	btfsc	3,2
  2436  0542  2D48               	goto	l2214
  2437  0543  0835               	movf	___ftpack@arg+2,w
  2438  0544  0434               	iorwf	___ftpack@arg+1,w
  2439  0545  0433               	iorwf	___ftpack@arg,w
  2440  0546  1D03               	skipz
  2441  0547  2D5B               	goto	l2220
  2442  0548                     l2214:	
  2443  0548  3000               	movlw	0
  2444  0549  00B3               	movwf	?___ftpack
  2445  054A  3000               	movlw	0
  2446  054B  00B4               	movwf	?___ftpack+1
  2447  054C  3000               	movlw	0
  2448  054D  00B5               	movwf	?___ftpack+2
  2449  054E  0008               	return
  2450  054F                     l2218:	
  2451  054F  3001               	movlw	1
  2452  0550  00B8               	movwf	??___ftpack
  2453  0551  0838               	movf	??___ftpack,w
  2454  0552  07B6               	addwf	___ftpack@exp,f
  2455  0553  3001               	movlw	1
  2456  0554                     u2615:	
  2457  0554  1003               	clrc
  2458  0555  0CB5               	rrf	___ftpack@arg+2,f
  2459  0556  0CB4               	rrf	___ftpack@arg+1,f
  2460  0557  0CB3               	rrf	___ftpack@arg,f
  2461  0558  3EFF               	addlw	-1
  2462  0559  1D03               	skipz
  2463  055A  2D54               	goto	u2615
  2464  055B                     l2220:	
  2465  055B  30FE               	movlw	254
  2466  055C  0535               	andwf	___ftpack@arg+2,w
  2467  055D  1903               	btfsc	3,2
  2468  055E  2D76               	goto	l415
  2469  055F  2D4F               	goto	l2218
  2470  0560                     l2222:	
  2471  0560  3001               	movlw	1
  2472  0561  00B8               	movwf	??___ftpack
  2473  0562  0838               	movf	??___ftpack,w
  2474  0563  07B6               	addwf	___ftpack@exp,f
  2475  0564  3001               	movlw	1
  2476  0565  07B3               	addwf	___ftpack@arg,f
  2477  0566  3000               	movlw	0
  2478  0567  1803               	skipnc
  2479  0568  3001               	movlw	1
  2480  0569  07B4               	addwf	___ftpack@arg+1,f
  2481  056A  3000               	movlw	0
  2482  056B  1803               	skipnc
  2483  056C  3001               	movlw	1
  2484  056D  07B5               	addwf	___ftpack@arg+2,f
  2485  056E  3001               	movlw	1
  2486  056F                     u2635:	
  2487  056F  1003               	clrc
  2488  0570  0CB5               	rrf	___ftpack@arg+2,f
  2489  0571  0CB4               	rrf	___ftpack@arg+1,f
  2490  0572  0CB3               	rrf	___ftpack@arg,f
  2491  0573  3EFF               	addlw	-1
  2492  0574  1D03               	skipz
  2493  0575  2D6F               	goto	u2635
  2494  0576                     l415:	
  2495  0576  30FF               	movlw	255
  2496  0577  0535               	andwf	___ftpack@arg+2,w
  2497  0578  1903               	btfsc	3,2
  2498  0579  2D85               	goto	l2230
  2499  057A  2D60               	goto	l2222
  2500  057B                     l2228:	
  2501  057B  3001               	movlw	1
  2502  057C  02B6               	subwf	___ftpack@exp,f
  2503  057D  3001               	movlw	1
  2504  057E                     u2655:	
  2505  057E  1003               	clrc
  2506  057F  0DB3               	rlf	___ftpack@arg,f
  2507  0580  0DB4               	rlf	___ftpack@arg+1,f
  2508  0581  0DB5               	rlf	___ftpack@arg+2,f
  2509  0582  3EFF               	addlw	-1
  2510  0583  1D03               	skipz
  2511  0584  2D7E               	goto	u2655
  2512  0585                     l2230:	
  2513  0585  1BB4               	btfsc	___ftpack@arg+1,7
  2514  0586  2D8B               	goto	l422
  2515  0587  3002               	movlw	2
  2516  0588  0236               	subwf	___ftpack@exp,w
  2517  0589  1803               	skipnc
  2518  058A  2D7B               	goto	l2228
  2519  058B                     l422:	
  2520  058B  1836               	btfsc	___ftpack@exp,0
  2521  058C  2D93               	goto	l423
  2522  058D  30FF               	movlw	255
  2523  058E  05B3               	andwf	___ftpack@arg,f
  2524  058F  307F               	movlw	127
  2525  0590  05B4               	andwf	___ftpack@arg+1,f
  2526  0591  30FF               	movlw	255
  2527  0592  05B5               	andwf	___ftpack@arg+2,f
  2528  0593                     l423:	
  2529  0593  1003               	clrc
  2530  0594  0CB6               	rrf	___ftpack@exp,f
  2531  0595  0836               	movf	___ftpack@exp,w
  2532  0596  00B8               	movwf	??___ftpack
  2533  0597  01B9               	clrf	??___ftpack+1
  2534  0598  01BA               	clrf	??___ftpack+2
  2535  0599  3010               	movlw	16
  2536  059A                     u2695:	
  2537  059A  1003               	clrc
  2538  059B  0DB8               	rlf	??___ftpack,f
  2539  059C  0DB9               	rlf	??___ftpack+1,f
  2540  059D  0DBA               	rlf	??___ftpack+2,f
  2541  059E  3EFF               	addlw	-1
  2542  059F  1D03               	skipz
  2543  05A0  2D9A               	goto	u2695
  2544  05A1  0838               	movf	??___ftpack,w
  2545  05A2  04B3               	iorwf	___ftpack@arg,f
  2546  05A3  0839               	movf	??___ftpack+1,w
  2547  05A4  04B4               	iorwf	___ftpack@arg+1,f
  2548  05A5  083A               	movf	??___ftpack+2,w
  2549  05A6  04B5               	iorwf	___ftpack@arg+2,f
  2550  05A7  0837               	movf	___ftpack@sign,w
  2551  05A8  1903               	btfsc	3,2
  2552  05A9  0008               	return
  2553  05AA  17B5               	bsf	___ftpack@arg+2,7
  2554  05AB  0008               	return
  2555  05AC                     __end_of___ftpack:	
  2556                           
  2557                           	psect	text7
  2558  0D1D                     __ptext7:	
  2559 ;; *************** function _ReadADC *****************
  2560 ;; Defined at:
  2561 ;;		line 27 in file "adc_pic16.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  ch              1    wreg     unsigned char 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  ch              1   22[BANK0 ] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  2   19[BANK0 ] unsigned int 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2575 ;;      Params:         0       2       0       0       0
  2576 ;;      Locals:         0       1       0       0       0
  2577 ;;      Temps:          0       1       0       0       0
  2578 ;;      Totals:         0       4       0       0       0
  2579 ;;Total ram usage:        4 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    4
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_LM35ReadTemp
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           
  2590                           ;psect for function _ReadADC
  2591  0D1D                     _ReadADC:	
  2592                           
  2593                           ;incstack = 0
  2594                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  2595                           ;ReadADC@ch stored from wreg
  2596  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0D1F  00B6               	movwf	ReadADC@ch
  2599                           
  2600                           ;adc_pic16.c: 29: ADCON0bits.CHS=ch;
  2601  0D20  0836               	movf	ReadADC@ch,w
  2602  0D21  00B5               	movwf	??_ReadADC
  2603  0D22  0DB5               	rlf	??_ReadADC,f
  2604  0D23  0DB5               	rlf	??_ReadADC,f
  2605  0D24  081F               	movf	31,w	;volatile
  2606  0D25  0635               	xorwf	??_ReadADC,w
  2607  0D26  39C3               	andlw	-61
  2608  0D27  0635               	xorwf	??_ReadADC,w
  2609  0D28  009F               	movwf	31	;volatile
  2610                           
  2611                           ;adc_pic16.c: 32: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2612  0D29  30A6               	movlw	166
  2613  0D2A  00B5               	movwf	??_ReadADC
  2614  0D2B                     u3077:	
  2615  0D2B  0BB5               	decfsz	??_ReadADC,f
  2616  0D2C  2D2B               	goto	u3077
  2617  0D2D  0000               	nop
  2618                           
  2619                           ;adc_pic16.c: 35: ADCON0bits.GO=1;
  2620  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  2622  0D30  149F               	bsf	31,1	;volatile
  2623  0D31                     l20:	
  2624                           ;adc_pic16.c: 38: while(ADCON0bits.GO);
  2625                           
  2626  0D31  189F               	btfsc	31,1	;volatile
  2627  0D32  2D31               	goto	l20
  2628                           
  2629                           ;adc_pic16.c: 40: return ((ADRESH<<8)|ADRESL);
  2630  0D33  081E               	movf	30,w	;volatile
  2631  0D34  00B4               	movwf	?_ReadADC+1
  2632  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  2633  0D36  1303               	bcf	3,6	;RP1=0, select bank1
  2634  0D37  081E               	movf	30,w	;volatile
  2635  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  2637  0D3A  00B3               	movwf	?_ReadADC
  2638  0D3B  0008               	return
  2639  0D3C                     __end_of_ReadADC:	
  2640                           
  2641                           	psect	text8
  2642  07AB                     __ptext8:	
  2643 ;; *************** function _LCDWriteString *****************
  2644 ;; Defined at:
  2645 ;;		line 279 in file "lcd_hd44780_pic16.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  msg             1    wreg     PTR const unsigned char 
  2648 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  2649 ;;		 -> STR_6(5), STR_5(4), STR_4(4), STR_3(5), 
  2650 ;;		 -> STR_2(4), STR_1(17), 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  msg             1   33[BANK0 ] PTR const unsigned char 
  2653 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  2654 ;;		 -> STR_6(5), STR_5(4), STR_4(4), STR_3(5), 
  2655 ;;		 -> STR_2(4), STR_1(17), 
  2656 ;;  cc              1   32[BANK0 ] char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2666 ;;      Params:         0       0       0       0       0
  2667 ;;      Locals:         0       2       0       0       0
  2668 ;;      Temps:          0       1       0       0       0
  2669 ;;      Totals:         0       3       0       0       0
  2670 ;;Total ram usage:        3 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    6
  2673 ;; This function calls:
  2674 ;;		_LCDByte
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _LCDWriteString
  2682  07AB                     _LCDWriteString:	
  2683                           
  2684                           ;incstack = 0
  2685                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2686                           ;LCDWriteString@msg stored from wreg
  2687  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  2688  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  2689  07AD  00C1               	movwf	LCDWriteString@msg
  2690  07AE                     l1922:	
  2691                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  2692                           
  2693  07AE  0841               	movf	LCDWriteString@msg,w
  2694  07AF  0084               	movwf	4
  2695  07B0  120A  158A  2000  120A  118A  	fcall	stringdir
  2696  07B5  3A00               	xorlw	0
  2697  07B6  1903               	btfsc	3,2
  2698  07B7  0008               	return
  2699                           
  2700                           ;lcd_hd44780_pic16.c: 282: {
  2701                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  2702  07B8  0841               	movf	LCDWriteString@msg,w
  2703  07B9  0084               	movwf	4
  2704  07BA  120A  158A  2000  120A  118A  	fcall	stringdir
  2705  07BF  3A25               	xorlw	37
  2706  07C0  1D03               	skipz
  2707  07C1  2FE6               	goto	l1918
  2708                           
  2709                           ;lcd_hd44780_pic16.c: 285: {
  2710                           ;lcd_hd44780_pic16.c: 286: msg++;
  2711  07C2  3001               	movlw	1
  2712  07C3  00BF               	movwf	??_LCDWriteString
  2713  07C4  083F               	movf	??_LCDWriteString,w
  2714  07C5  07C1               	addwf	LCDWriteString@msg,f
  2715                           
  2716                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  2717  07C6  0841               	movf	LCDWriteString@msg,w
  2718  07C7  0084               	movwf	4
  2719  07C8  120A  158A  2000  120A  118A  	fcall	stringdir
  2720  07CD  3ED0               	addlw	-48
  2721  07CE  00BF               	movwf	??_LCDWriteString
  2722  07CF  083F               	movf	??_LCDWriteString,w
  2723  07D0  00C0               	movwf	LCDWriteString@cc
  2724                           
  2725                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  2726  07D1  1BC0               	btfsc	LCDWriteString@cc,7
  2727  07D2  2FDC               	goto	l1914
  2728  07D3  0840               	movf	LCDWriteString@cc,w
  2729  07D4  3A80               	xorlw	128
  2730  07D5  3E78               	addlw	-136
  2731  07D6  1803               	skipnc
  2732  07D7  2FDC               	goto	l1914
  2733                           
  2734                           ;lcd_hd44780_pic16.c: 290: {
  2735                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  2736  07D8  01B8               	clrf	LCDByte@isdata
  2737  07D9  0AB8               	incf	LCDByte@isdata,f
  2738  07DA  0840               	movf	LCDWriteString@cc,w
  2739  07DB  2FF1               	goto	L4
  2740  07DC                     l1914:	
  2741                           ;lcd_hd44780_pic16.c: 292: }
  2742                           
  2743                           
  2744                           ;lcd_hd44780_pic16.c: 293: else
  2745                           ;lcd_hd44780_pic16.c: 294: {
  2746                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  2747  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  2748  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  2749  07DE  01B8               	clrf	LCDByte@isdata
  2750  07DF  0AB8               	incf	LCDByte@isdata,f
  2751  07E0  3025               	movlw	37
  2752  07E1  120A  158A  26F7  120A  118A  	fcall	_LCDByte
  2753  07E6                     l1918:	
  2754                           ;lcd_hd44780_pic16.c: 297: }
  2755                           ;lcd_hd44780_pic16.c: 298: }
  2756                           
  2757                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  2758                           
  2759                           
  2760                           ;lcd_hd44780_pic16.c: 299: else
  2761                           ;lcd_hd44780_pic16.c: 300: {
  2762                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  2763  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  2764  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  2765  07E8  01B8               	clrf	LCDByte@isdata
  2766  07E9  0AB8               	incf	LCDByte@isdata,f
  2767  07EA  0841               	movf	LCDWriteString@msg,w
  2768  07EB  0084               	movwf	4
  2769  07EC  120A  158A  2000  120A  118A  	fcall	stringdir
  2770  07F1                     L4:	
  2771  07F1  120A  158A  26F7  120A  118A  	fcall	_LCDByte
  2772                           
  2773                           ;lcd_hd44780_pic16.c: 302: }
  2774                           ;lcd_hd44780_pic16.c: 303: msg++;
  2775  07F6  3001               	movlw	1
  2776  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  2777  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  2778  07F9  00BF               	movwf	??_LCDWriteString
  2779  07FA  083F               	movf	??_LCDWriteString,w
  2780  07FB  07C1               	addwf	LCDWriteString@msg,f
  2781  07FC  2FAE               	goto	l1922
  2782  07FD                     __end_of_LCDWriteString:	
  2783                           
  2784                           	psect	text9
  2785  0400                     __ptext9:	
  2786 ;; *************** function _LCDWriteInt *****************
  2787 ;; Defined at:
  2788 ;;		line 317 in file "lcd_hd44780_pic16.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  val             2   31[BANK0 ] int 
  2791 ;;  field_length    1   33[BANK0 ] char 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  str             5   36[BANK0 ] unsigned char [5]
  2794 ;;  i               2   43[BANK0 ] int 
  2795 ;;  j               2   41[BANK0 ] int 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      void 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2805 ;;      Params:         0       3       0       0       0
  2806 ;;      Locals:         0       9       0       0       0
  2807 ;;      Temps:          0       2       0       0       0
  2808 ;;      Totals:         0      14       0       0       0
  2809 ;;Total ram usage:       14 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    6
  2812 ;; This function calls:
  2813 ;;		_LCDByte
  2814 ;;		___awdiv
  2815 ;;		___awmod
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function _LCDWriteInt
  2823  0400                     _LCDWriteInt:	
  2824                           
  2825                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  2826                           
  2827                           ;incstack = 0
  2828                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2829  0400  3044               	movlw	LCDWriteInt@str& (0+255)
  2830  0401  0084               	movwf	4
  2831  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2833  0404  0855               	movf	LCDWriteInt@F1632,w
  2834  0405  1383               	bcf	3,7	;select IRP bank0
  2835  0406  0080               	movwf	0
  2836  0407  0A84               	incf	4,f
  2837  0408  0856               	movf	LCDWriteInt@F1632+1,w
  2838  0409  0080               	movwf	0
  2839  040A  0A84               	incf	4,f
  2840  040B  0857               	movf	LCDWriteInt@F1632+2,w
  2841  040C  0080               	movwf	0
  2842  040D  0A84               	incf	4,f
  2843  040E  0858               	movf	LCDWriteInt@F1632+3,w
  2844  040F  0080               	movwf	0
  2845  0410  0A84               	incf	4,f
  2846  0411  0859               	movf	LCDWriteInt@F1632+4,w
  2847  0412  0080               	movwf	0
  2848                           
  2849                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  2850  0413  3004               	movlw	4
  2851  0414  00CB               	movwf	LCDWriteInt@i
  2852  0415  3000               	movlw	0
  2853  0416  00CC               	movwf	LCDWriteInt@i+1
  2854  0417  01C9               	clrf	LCDWriteInt@j
  2855  0418  01CA               	clrf	LCDWriteInt@j+1
  2856                           
  2857                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  2858  0419  083F               	movf	LCDWriteInt@val,w
  2859  041A  0440               	iorwf	LCDWriteInt@val+1,w
  2860  041B  1903               	btfsc	3,2
  2861                           
  2862                           ;lcd_hd44780_pic16.c: 323: {
  2863                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  2864  041C  01C8               	clrf	LCDWriteInt@str+4
  2865                           
  2866                           ;lcd_hd44780_pic16.c: 325: }
  2867                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  2868  041D  1FC0               	btfss	LCDWriteInt@val+1,7
  2869  041E  2C2E               	goto	l1946
  2870                           
  2871                           ;lcd_hd44780_pic16.c: 328: {
  2872                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  2873  041F  01B8               	clrf	LCDByte@isdata
  2874  0420  0AB8               	incf	LCDByte@isdata,f
  2875  0421  302D               	movlw	45
  2876  0422  120A  158A  26F7  120A  118A  	fcall	_LCDByte
  2877                           
  2878                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  2879  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0429  09BF               	comf	LCDWriteInt@val,f
  2882  042A  09C0               	comf	LCDWriteInt@val+1,f
  2883  042B  0ABF               	incf	LCDWriteInt@val,f
  2884  042C  1903               	skipnz
  2885  042D  0AC0               	incf	LCDWriteInt@val+1,f
  2886  042E                     l1946:	
  2887                           ;lcd_hd44780_pic16.c: 331: }
  2888                           ;lcd_hd44780_pic16.c: 333: while(val)
  2889                           
  2890  042E  083F               	movf	LCDWriteInt@val,w
  2891  042F  0440               	iorwf	LCDWriteInt@val+1,w
  2892  0430  1903               	btfsc	3,2
  2893  0431  2C63               	goto	l1948
  2894                           
  2895                           ;lcd_hd44780_pic16.c: 334: {
  2896                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  2897  0432  300A               	movlw	10
  2898  0433  00B3               	movwf	___awmod@divisor
  2899  0434  3000               	movlw	0
  2900  0435  00B4               	movwf	___awmod@divisor+1
  2901  0436  0840               	movf	LCDWriteInt@val+1,w
  2902  0437  00B6               	movwf	___awmod@dividend+1
  2903  0438  083F               	movf	LCDWriteInt@val,w
  2904  0439  00B5               	movwf	___awmod@dividend
  2905  043A  120A  158A  265A  120A  118A  	fcall	___awmod
  2906  043F  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0440  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0441  0833               	movf	?___awmod,w
  2909  0442  00C2               	movwf	??_LCDWriteInt
  2910  0443  084B               	movf	LCDWriteInt@i,w
  2911  0444  3E44               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2912  0445  0084               	movwf	4
  2913  0446  0842               	movf	??_LCDWriteInt,w
  2914  0447  1383               	bcf	3,7	;select IRP bank0
  2915  0448  0080               	movwf	0
  2916                           
  2917                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  2918  0449  300A               	movlw	10
  2919  044A  00B3               	movwf	___awdiv@divisor
  2920  044B  3000               	movlw	0
  2921  044C  00B4               	movwf	___awdiv@divisor+1
  2922  044D  0840               	movf	LCDWriteInt@val+1,w
  2923  044E  00B6               	movwf	___awdiv@dividend+1
  2924  044F  083F               	movf	LCDWriteInt@val,w
  2925  0450  00B5               	movwf	___awdiv@dividend
  2926  0451  120A  118A  2750  120A  118A  	fcall	___awdiv
  2927  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2928  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2929  0458  0834               	movf	?___awdiv+1,w
  2930  0459  00C0               	movwf	LCDWriteInt@val+1
  2931  045A  0833               	movf	?___awdiv,w
  2932  045B  00BF               	movwf	LCDWriteInt@val
  2933                           
  2934                           ;lcd_hd44780_pic16.c: 337: i--;
  2935  045C  30FF               	movlw	255
  2936  045D  07CB               	addwf	LCDWriteInt@i,f
  2937  045E  1803               	skipnc
  2938  045F  0ACC               	incf	LCDWriteInt@i+1,f
  2939  0460  30FF               	movlw	255
  2940  0461  07CC               	addwf	LCDWriteInt@i+1,f
  2941  0462  2C2E               	goto	l1946
  2942  0463                     l1948:	
  2943                           
  2944                           ;lcd_hd44780_pic16.c: 338: }
  2945                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  2946  0463  0A41               	incf	LCDWriteInt@field_length,w
  2947  0464  1903               	btfsc	3,2
  2948  0465  2C78               	goto	l1956
  2949                           
  2950                           ;lcd_hd44780_pic16.c: 341: else
  2951                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  2952                           
  2953                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  2954  0466  0841               	movf	LCDWriteInt@field_length,w
  2955  0467  00C2               	movwf	??_LCDWriteInt
  2956  0468  01C3               	clrf	??_LCDWriteInt+1
  2957  0469  1BC2               	btfsc	??_LCDWriteInt,7
  2958  046A  03C3               	decf	??_LCDWriteInt+1,f
  2959  046B  09C2               	comf	??_LCDWriteInt,f
  2960  046C  09C3               	comf	??_LCDWriteInt+1,f
  2961  046D  0AC2               	incf	??_LCDWriteInt,f
  2962  046E  1903               	skipnz
  2963  046F  0AC3               	incf	??_LCDWriteInt+1,f
  2964  0470  0842               	movf	??_LCDWriteInt,w
  2965  0471  3E05               	addlw	5
  2966  0472  00C9               	movwf	LCDWriteInt@j
  2967  0473  0843               	movf	??_LCDWriteInt+1,w
  2968  0474  1803               	skipnc
  2969  0475  3E01               	addlw	1
  2970  0476  3E00               	addlw	0
  2971  0477  00CA               	movwf	LCDWriteInt@j+1
  2972  0478                     l1956:	
  2973                           
  2974                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  2975  0478  084A               	movf	LCDWriteInt@j+1,w
  2976  0479  00CC               	movwf	LCDWriteInt@i+1
  2977  047A  0849               	movf	LCDWriteInt@j,w
  2978  047B  00CB               	movwf	LCDWriteInt@i
  2979  047C                     L5:	
  2980  047C  084C               	movf	LCDWriteInt@i+1,w
  2981  047D  3A80               	xorlw	128
  2982  047E  00FF               	movwf	127
  2983  047F  3080               	movlw	128
  2984  0480  027F               	subwf	127,w
  2985  0481  1D03               	skipz
  2986  0482  2C85               	goto	u2305
  2987  0483  3005               	movlw	5
  2988  0484  024B               	subwf	LCDWriteInt@i,w
  2989  0485                     u2305:	
  2990  0485  1803               	btfsc	3,0
  2991  0486  0008               	return
  2992                           
  2993                           ;lcd_hd44780_pic16.c: 346: {
  2994                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  2995  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2996  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2997  0489  01B8               	clrf	LCDByte@isdata
  2998  048A  0AB8               	incf	LCDByte@isdata,f
  2999  048B  084B               	movf	LCDWriteInt@i,w
  3000  048C  3E44               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  3001  048D  0084               	movwf	4
  3002  048E  1383               	bcf	3,7	;select IRP bank0
  3003  048F  0800               	movf	0,w
  3004  0490  3E30               	addlw	48
  3005  0491  120A  158A  26F7  120A  118A  	fcall	_LCDByte
  3006  0496  3001               	movlw	1
  3007  0497  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0498  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0499  07CB               	addwf	LCDWriteInt@i,f
  3010  049A  1803               	skipnc
  3011  049B  0ACC               	incf	LCDWriteInt@i+1,f
  3012  049C  3000               	movlw	0
  3013  049D  07CC               	addwf	LCDWriteInt@i+1,f
  3014  049E  2C7C               	goto	L5
  3015  049F                     __end_of_LCDWriteInt:	
  3016                           
  3017                           	psect	text10
  3018  0E5A                     __ptext10:	
  3019 ;; *************** function ___awmod *****************
  3020 ;; Defined at:
  3021 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  divisor         2   19[BANK0 ] int 
  3024 ;;  dividend        2   21[BANK0 ] int 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  sign            1   25[BANK0 ] unsigned char 
  3027 ;;  counter         1   24[BANK0 ] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  2   19[BANK0 ] int 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3037 ;;      Params:         0       4       0       0       0
  3038 ;;      Locals:         0       2       0       0       0
  3039 ;;      Temps:          0       1       0       0       0
  3040 ;;      Totals:         0       7       0       0       0
  3041 ;;Total ram usage:        7 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:    4
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_LCDWriteInt
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function ___awmod
  3053  0E5A                     ___awmod:	
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3057  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0E5C  01B9               	clrf	___awmod@sign
  3060  0E5D  1FB6               	btfss	___awmod@dividend+1,7
  3061  0E5E  2E66               	goto	l1638
  3062  0E5F  09B5               	comf	___awmod@dividend,f
  3063  0E60  09B6               	comf	___awmod@dividend+1,f
  3064  0E61  0AB5               	incf	___awmod@dividend,f
  3065  0E62  1903               	skipnz
  3066  0E63  0AB6               	incf	___awmod@dividend+1,f
  3067  0E64  01B9               	clrf	___awmod@sign
  3068  0E65  0AB9               	incf	___awmod@sign,f
  3069  0E66                     l1638:	
  3070  0E66  1FB4               	btfss	___awmod@divisor+1,7
  3071  0E67  2E6D               	goto	l1642
  3072  0E68  09B3               	comf	___awmod@divisor,f
  3073  0E69  09B4               	comf	___awmod@divisor+1,f
  3074  0E6A  0AB3               	incf	___awmod@divisor,f
  3075  0E6B  1903               	skipnz
  3076  0E6C  0AB4               	incf	___awmod@divisor+1,f
  3077  0E6D                     l1642:	
  3078  0E6D  0833               	movf	___awmod@divisor,w
  3079  0E6E  0434               	iorwf	___awmod@divisor+1,w
  3080  0E6F  1903               	btfsc	3,2
  3081  0E70  2E9A               	goto	l1660
  3082  0E71  01B8               	clrf	___awmod@counter
  3083  0E72  0AB8               	incf	___awmod@counter,f
  3084  0E73                     l1650:	
  3085  0E73  1BB4               	btfsc	___awmod@divisor+1,7
  3086  0E74  2E81               	goto	l1652
  3087  0E75  3001               	movlw	1
  3088  0E76                     u1685:	
  3089  0E76  1003               	clrc
  3090  0E77  0DB3               	rlf	___awmod@divisor,f
  3091  0E78  0DB4               	rlf	___awmod@divisor+1,f
  3092  0E79  3EFF               	addlw	-1
  3093  0E7A  1D03               	skipz
  3094  0E7B  2E76               	goto	u1685
  3095  0E7C  3001               	movlw	1
  3096  0E7D  00B7               	movwf	??___awmod
  3097  0E7E  0837               	movf	??___awmod,w
  3098  0E7F  07B8               	addwf	___awmod@counter,f
  3099  0E80  2E73               	goto	l1650
  3100  0E81                     l1652:	
  3101  0E81  0834               	movf	___awmod@divisor+1,w
  3102  0E82  0236               	subwf	___awmod@dividend+1,w
  3103  0E83  1D03               	skipz
  3104  0E84  2E87               	goto	u1705
  3105  0E85  0833               	movf	___awmod@divisor,w
  3106  0E86  0235               	subwf	___awmod@dividend,w
  3107  0E87                     u1705:	
  3108  0E87  1C03               	skipc
  3109  0E88  2E8F               	goto	l1656
  3110  0E89  0833               	movf	___awmod@divisor,w
  3111  0E8A  02B5               	subwf	___awmod@dividend,f
  3112  0E8B  0834               	movf	___awmod@divisor+1,w
  3113  0E8C  1C03               	skipc
  3114  0E8D  03B6               	decf	___awmod@dividend+1,f
  3115  0E8E  02B6               	subwf	___awmod@dividend+1,f
  3116  0E8F                     l1656:	
  3117  0E8F  3001               	movlw	1
  3118  0E90                     u1715:	
  3119  0E90  1003               	clrc
  3120  0E91  0CB4               	rrf	___awmod@divisor+1,f
  3121  0E92  0CB3               	rrf	___awmod@divisor,f
  3122  0E93  3EFF               	addlw	-1
  3123  0E94  1D03               	skipz
  3124  0E95  2E90               	goto	u1715
  3125  0E96  3001               	movlw	1
  3126  0E97  02B8               	subwf	___awmod@counter,f
  3127  0E98  1D03               	btfss	3,2
  3128  0E99  2E81               	goto	l1652
  3129  0E9A                     l1660:	
  3130  0E9A  0839               	movf	___awmod@sign,w
  3131  0E9B  1903               	btfsc	3,2
  3132  0E9C  2EA2               	goto	l1664
  3133  0E9D  09B5               	comf	___awmod@dividend,f
  3134  0E9E  09B6               	comf	___awmod@dividend+1,f
  3135  0E9F  0AB5               	incf	___awmod@dividend,f
  3136  0EA0  1903               	skipnz
  3137  0EA1  0AB6               	incf	___awmod@dividend+1,f
  3138  0EA2                     l1664:	
  3139  0EA2  0836               	movf	___awmod@dividend+1,w
  3140  0EA3  00B4               	movwf	?___awmod+1
  3141  0EA4  0835               	movf	___awmod@dividend,w
  3142  0EA5  00B3               	movwf	?___awmod
  3143  0EA6  0008               	return
  3144  0EA7                     __end_of___awmod:	
  3145                           
  3146                           	psect	text11
  3147  0750                     __ptext11:	
  3148 ;; *************** function ___awdiv *****************
  3149 ;; Defined at:
  3150 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  divisor         2   19[BANK0 ] int 
  3153 ;;  dividend        2   21[BANK0 ] int 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  quotient        2   26[BANK0 ] int 
  3156 ;;  sign            1   25[BANK0 ] unsigned char 
  3157 ;;  counter         1   24[BANK0 ] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  2   19[BANK0 ] int 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3167 ;;      Params:         0       4       0       0       0
  3168 ;;      Locals:         0       4       0       0       0
  3169 ;;      Temps:          0       1       0       0       0
  3170 ;;      Totals:         0       9       0       0       0
  3171 ;;Total ram usage:        9 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    4
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_LCDWriteInt
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function ___awdiv
  3183  0750                     ___awdiv:	
  3184                           
  3185                           ;incstack = 0
  3186                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3187  0750  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0751  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0752  01B9               	clrf	___awdiv@sign
  3190  0753  1FB4               	btfss	___awdiv@divisor+1,7
  3191  0754  2F5C               	goto	l1594
  3192  0755  09B3               	comf	___awdiv@divisor,f
  3193  0756  09B4               	comf	___awdiv@divisor+1,f
  3194  0757  0AB3               	incf	___awdiv@divisor,f
  3195  0758  1903               	skipnz
  3196  0759  0AB4               	incf	___awdiv@divisor+1,f
  3197  075A  01B9               	clrf	___awdiv@sign
  3198  075B  0AB9               	incf	___awdiv@sign,f
  3199  075C                     l1594:	
  3200  075C  1FB6               	btfss	___awdiv@dividend+1,7
  3201  075D  2F67               	goto	l1600
  3202  075E  09B5               	comf	___awdiv@dividend,f
  3203  075F  09B6               	comf	___awdiv@dividend+1,f
  3204  0760  0AB5               	incf	___awdiv@dividend,f
  3205  0761  1903               	skipnz
  3206  0762  0AB6               	incf	___awdiv@dividend+1,f
  3207  0763  3001               	movlw	1
  3208  0764  00B7               	movwf	??___awdiv
  3209  0765  0837               	movf	??___awdiv,w
  3210  0766  06B9               	xorwf	___awdiv@sign,f
  3211  0767                     l1600:	
  3212  0767  01BA               	clrf	___awdiv@quotient
  3213  0768  01BB               	clrf	___awdiv@quotient+1
  3214  0769  0833               	movf	___awdiv@divisor,w
  3215  076A  0434               	iorwf	___awdiv@divisor+1,w
  3216  076B  1903               	btfsc	3,2
  3217  076C  2F9E               	goto	l1622
  3218  076D  01B8               	clrf	___awdiv@counter
  3219  076E  0AB8               	incf	___awdiv@counter,f
  3220  076F                     l1610:	
  3221  076F  1BB4               	btfsc	___awdiv@divisor+1,7
  3222  0770  2F7D               	goto	l1612
  3223  0771  3001               	movlw	1
  3224  0772                     u1585:	
  3225  0772  1003               	clrc
  3226  0773  0DB3               	rlf	___awdiv@divisor,f
  3227  0774  0DB4               	rlf	___awdiv@divisor+1,f
  3228  0775  3EFF               	addlw	-1
  3229  0776  1D03               	skipz
  3230  0777  2F72               	goto	u1585
  3231  0778  3001               	movlw	1
  3232  0779  00B7               	movwf	??___awdiv
  3233  077A  0837               	movf	??___awdiv,w
  3234  077B  07B8               	addwf	___awdiv@counter,f
  3235  077C  2F6F               	goto	l1610
  3236  077D                     l1612:	
  3237  077D  3001               	movlw	1
  3238  077E                     u1605:	
  3239  077E  1003               	clrc
  3240  077F  0DBA               	rlf	___awdiv@quotient,f
  3241  0780  0DBB               	rlf	___awdiv@quotient+1,f
  3242  0781  3EFF               	addlw	-1
  3243  0782  1D03               	skipz
  3244  0783  2F7E               	goto	u1605
  3245  0784  0834               	movf	___awdiv@divisor+1,w
  3246  0785  0236               	subwf	___awdiv@dividend+1,w
  3247  0786  1D03               	skipz
  3248  0787  2F8A               	goto	u1615
  3249  0788  0833               	movf	___awdiv@divisor,w
  3250  0789  0235               	subwf	___awdiv@dividend,w
  3251  078A                     u1615:	
  3252  078A  1C03               	skipc
  3253  078B  2F93               	goto	l1618
  3254  078C  0833               	movf	___awdiv@divisor,w
  3255  078D  02B5               	subwf	___awdiv@dividend,f
  3256  078E  0834               	movf	___awdiv@divisor+1,w
  3257  078F  1C03               	skipc
  3258  0790  03B6               	decf	___awdiv@dividend+1,f
  3259  0791  02B6               	subwf	___awdiv@dividend+1,f
  3260  0792  143A               	bsf	___awdiv@quotient,0
  3261  0793                     l1618:	
  3262  0793  3001               	movlw	1
  3263  0794                     u1625:	
  3264  0794  1003               	clrc
  3265  0795  0CB4               	rrf	___awdiv@divisor+1,f
  3266  0796  0CB3               	rrf	___awdiv@divisor,f
  3267  0797  3EFF               	addlw	-1
  3268  0798  1D03               	skipz
  3269  0799  2F94               	goto	u1625
  3270  079A  3001               	movlw	1
  3271  079B  02B8               	subwf	___awdiv@counter,f
  3272  079C  1D03               	btfss	3,2
  3273  079D  2F7D               	goto	l1612
  3274  079E                     l1622:	
  3275  079E  0839               	movf	___awdiv@sign,w
  3276  079F  1903               	btfsc	3,2
  3277  07A0  2FA6               	goto	l1626
  3278  07A1  09BA               	comf	___awdiv@quotient,f
  3279  07A2  09BB               	comf	___awdiv@quotient+1,f
  3280  07A3  0ABA               	incf	___awdiv@quotient,f
  3281  07A4  1903               	skipnz
  3282  07A5  0ABB               	incf	___awdiv@quotient+1,f
  3283  07A6                     l1626:	
  3284  07A6  083B               	movf	___awdiv@quotient+1,w
  3285  07A7  00B4               	movwf	?___awdiv+1
  3286  07A8  083A               	movf	___awdiv@quotient,w
  3287  07A9  00B3               	movwf	?___awdiv
  3288  07AA  0008               	return
  3289  07AB                     __end_of___awdiv:	
  3290                           
  3291                           	psect	text12
  3292  061A                     __ptext12:	
  3293 ;; *************** function _LCDInit *****************
  3294 ;; Defined at:
  3295 ;;		line 207 in file "lcd_hd44780_pic16.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  style           1    wreg     unsigned char 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  style           1   33[BANK0 ] unsigned char 
  3300 ;;  __i             1   34[BANK0 ] unsigned char 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3310 ;;      Params:         0       0       0       0       0
  3311 ;;      Locals:         0       2       0       0       0
  3312 ;;      Temps:          0       2       0       0       0
  3313 ;;      Totals:         0       4       0       0       0
  3314 ;;Total ram usage:        4 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    6
  3317 ;; This function calls:
  3318 ;;		_LCDBusyLoop
  3319 ;;		_LCDByte
  3320 ;; This function is called by:
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function _LCDInit
  3327  061A                     _LCDInit:	
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3331                           ;LCDInit@style stored from wreg
  3332  061A  1283               	bcf	3,5	;RP0=0, select bank0
  3333  061B  1303               	bcf	3,6	;RP1=0, select bank0
  3334  061C  00C1               	movwf	LCDInit@style
  3335                           
  3336                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  3337  061D  30C3               	movlw	195
  3338  061E  00C0               	movwf	??_LCDInit+1
  3339  061F  30CD               	movlw	205
  3340  0620  00BF               	movwf	??_LCDInit
  3341  0621                     u3087:	
  3342  0621  0BBF               	decfsz	??_LCDInit,f
  3343  0622  2E21               	goto	u3087
  3344  0623  0BC0               	decfsz	??_LCDInit+1,f
  3345  0624  2E21               	goto	u3087
  3346                           
  3347                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<4));
  3348  0625  300F               	movlw	15
  3349  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3350  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3351  0628  00BF               	movwf	??_LCDInit
  3352  0629  083F               	movf	??_LCDInit,w
  3353  062A  1683               	bsf	3,5	;RP0=1, select bank1
  3354  062B  1303               	bcf	3,6	;RP1=0, select bank1
  3355  062C  0587               	andwf	7,f	;volatile
  3356                           
  3357                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC3=0;
  3358  062D  1187               	bcf	7,3	;volatile
  3359                           
  3360                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC1=0;
  3361  062E  1087               	bcf	7,1	;volatile
  3362                           
  3363                           ;lcd_hd44780_pic16.c: 216: TRISCbits.TRISC2=0;
  3364  062F  1107               	bcf	7,2	;volatile
  3365                           
  3366                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<4));
  3367  0630  300F               	movlw	15
  3368  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0633  00BF               	movwf	??_LCDInit
  3371  0634  083F               	movf	??_LCDInit,w
  3372  0635  0587               	andwf	7,f	;volatile
  3373                           
  3374                           ;lcd_hd44780_pic16.c: 220: (RC3=0);
  3375  0636  1187               	bcf	7,3	;volatile
  3376                           
  3377                           ;lcd_hd44780_pic16.c: 221: (RC2=0);
  3378  0637  1107               	bcf	7,2	;volatile
  3379                           
  3380                           ;lcd_hd44780_pic16.c: 222: (RC1=0);
  3381  0638  1087               	bcf	7,1	;volatile
  3382                           
  3383                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3384  0639  2E3A               	nop2	;2 cycle nop
  3385                           
  3386                           ;lcd_hd44780_pic16.c: 227: (RC3=1);
  3387  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3388  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3389  063C  1587               	bsf	7,3	;volatile
  3390                           
  3391                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<4);
  3392  063D  1687               	bsf	7,5	;volatile
  3393                           
  3394                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3395  063E  2E3F               	nop2	;2 cycle nop
  3396  063F  2E40               	nop2	;2 cycle nop
  3397  0640  0000               	nop
  3398                           
  3399                           ;lcd_hd44780_pic16.c: 230: (RC3=0);
  3400  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0642  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0643  1187               	bcf	7,3	;volatile
  3403                           
  3404                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3405  0644  2E45               	nop2	;2 cycle nop
  3406  0645  2E46               	nop2	;2 cycle nop
  3407  0646  0000               	nop
  3408                           
  3409                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  3410  0647  120A  118A  2682  120A  118A  	fcall	_LCDBusyLoop
  3411                           
  3412                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  3413  064C  1283               	bcf	3,5	;RP0=0, select bank0
  3414  064D  1303               	bcf	3,6	;RP1=0, select bank0
  3415  064E  01B8               	clrf	LCDByte@isdata
  3416  064F  3028               	movlw	40
  3417  0650  120A  158A  26F7  120A  118A  	fcall	_LCDByte
  3418                           
  3419                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  3420  0655  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0656  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0657  01B8               	clrf	LCDByte@isdata
  3423  0658  0841               	movf	LCDInit@style,w
  3424  0659  380C               	iorlw	12
  3425  065A  120A  158A  26F7  120A  118A  	fcall	_LCDByte
  3426                           
  3427                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  3428  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0661  01B8               	clrf	LCDByte@isdata
  3431  0662  3040               	movlw	64
  3432  0663  120A  158A  26F7  120A  118A  	fcall	_LCDByte
  3433                           
  3434                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  3435                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  3436  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0669  1303               	bcf	3,6	;RP1=0, select bank0
  3438  066A  01C2               	clrf	LCDInit@__i
  3439  066B                     L6:	
  3440  066B  3008               	movlw	8
  3441  066C  0242               	subwf	LCDInit@__i,w
  3442  066D  1803               	btfsc	3,0
  3443  066E  0008               	return
  3444                           
  3445                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  3446  066F  01B8               	clrf	LCDByte@isdata
  3447  0670  0AB8               	incf	LCDByte@isdata,f
  3448  0671  0842               	movf	LCDInit@__i,w
  3449  0672  3E4D               	addlw	(low (___cgram| 0))& (0+255)
  3450  0673  0084               	movwf	4
  3451  0674  1383               	bcf	3,7	;select IRP bank0
  3452  0675  0800               	movf	0,w
  3453  0676  120A  158A  26F7  120A  118A  	fcall	_LCDByte
  3454  067B  3001               	movlw	1
  3455  067C  1283               	bcf	3,5	;RP0=0, select bank0
  3456  067D  1303               	bcf	3,6	;RP1=0, select bank0
  3457  067E  00BF               	movwf	??_LCDInit
  3458  067F  083F               	movf	??_LCDInit,w
  3459  0680  07C2               	addwf	LCDInit@__i,f
  3460  0681  2E6B               	goto	L6
  3461  0682                     __end_of_LCDInit:	
  3462                           
  3463                           	psect	text13
  3464  0D62                     __ptext13:	
  3465 ;; *************** function _LCDGotoXY *****************
  3466 ;; Defined at:
  3467 ;;		line 355 in file "lcd_hd44780_pic16.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  x               1    wreg     unsigned char 
  3470 ;;  y               1   31[BANK0 ] unsigned char 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  x               1   33[BANK0 ] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3482 ;;      Params:         0       1       0       0       0
  3483 ;;      Locals:         0       1       0       0       0
  3484 ;;      Temps:          0       1       0       0       0
  3485 ;;      Totals:         0       3       0       0       0
  3486 ;;Total ram usage:        3 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    6
  3489 ;; This function calls:
  3490 ;;		_LCDByte
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           
  3497                           ;psect for function _LCDGotoXY
  3498  0D62                     _LCDGotoXY:	
  3499                           
  3500                           ;incstack = 0
  3501                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3502                           ;LCDGotoXY@x stored from wreg
  3503  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  3504  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  3505  0D64  00C1               	movwf	LCDGotoXY@x
  3506                           
  3507                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  3508  0D65  3014               	movlw	20
  3509  0D66  0241               	subwf	LCDGotoXY@x,w
  3510  0D67  1803               	btfsc	3,0
  3511  0D68  0008               	return
  3512  0D69  2D73               	goto	l1896
  3513  0D6A                     l163:	
  3514                           ;lcd_hd44780_pic16.c: 365: case 1:
  3515                           
  3516                           ;lcd_hd44780_pic16.c: 364: break;
  3517                           
  3518                           ;lcd_hd44780_pic16.c: 362: {
  3519                           ;lcd_hd44780_pic16.c: 363: case 0:
  3520                           
  3521                           ;lcd_hd44780_pic16.c: 361: switch(y)
  3522                           
  3523                           
  3524                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  3525  0D6A  1741               	bsf	LCDGotoXY@x,6
  3526                           
  3527                           ;lcd_hd44780_pic16.c: 367: break;
  3528  0D6B  2D81               	goto	l162
  3529  0D6C                     l1890:	
  3530                           ;lcd_hd44780_pic16.c: 368: case 2:
  3531                           
  3532                           
  3533                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  3534  0D6C  3014               	movlw	20
  3535  0D6D  2D6F               	goto	L7
  3536  0D6E                     l1892:	
  3537                           ;lcd_hd44780_pic16.c: 371: case 3:
  3538                           
  3539                           ;lcd_hd44780_pic16.c: 370: break;
  3540                           
  3541                           
  3542                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  3543  0D6E  3054               	movlw	84
  3544  0D6F                     L7:	
  3545  0D6F  00C0               	movwf	??_LCDGotoXY
  3546  0D70  0840               	movf	??_LCDGotoXY,w
  3547  0D71  07C1               	addwf	LCDGotoXY@x,f
  3548                           
  3549                           ;lcd_hd44780_pic16.c: 374: }
  3550                           
  3551                           ;lcd_hd44780_pic16.c: 373: break;
  3552  0D72  2D81               	goto	l162
  3553  0D73                     l1896:	
  3554  0D73  083F               	movf	LCDGotoXY@y,w
  3555                           
  3556                           ; Switch size 1, requested type "space"
  3557                           ; Number of cases is 4, Range of values is 0 to 3
  3558                           ; switch strategies available:
  3559                           ; Name         Instructions Cycles
  3560                           ; simple_byte           13     7 (average)
  3561                           ; direct_byte           20     8 (fixed)
  3562                           ; jumptable            260     6 (fixed)
  3563                           ;	Chosen strategy is simple_byte
  3564  0D74  3A00               	xorlw	0	; case 0
  3565  0D75  1903               	skipnz
  3566  0D76  2D81               	goto	l162
  3567  0D77  3A01               	xorlw	1	; case 1
  3568  0D78  1903               	skipnz
  3569  0D79  2D6A               	goto	l163
  3570  0D7A  3A03               	xorlw	3	; case 2
  3571  0D7B  1903               	skipnz
  3572  0D7C  2D6C               	goto	l1890
  3573  0D7D  3A01               	xorlw	1	; case 3
  3574  0D7E  1903               	skipnz
  3575  0D7F  2D6E               	goto	l1892
  3576  0D80  2D81               	goto	l162
  3577  0D81                     l162:	
  3578                           
  3579                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  3580  0D81  17C1               	bsf	LCDGotoXY@x,7
  3581                           
  3582                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  3583  0D82  01B8               	clrf	LCDByte@isdata
  3584  0D83  0841               	movf	LCDGotoXY@x,w
  3585  0D84  120A  158A  26F7   	fcall	_LCDByte
  3586  0D87  0008               	return
  3587  0D88                     __end_of_LCDGotoXY:	
  3588                           
  3589                           	psect	text14
  3590  0EF7                     __ptext14:	
  3591 ;; *************** function _LCDByte *****************
  3592 ;; Defined at:
  3593 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  c               1    wreg     unsigned char 
  3596 ;;  isdata          1   24[BANK0 ] unsigned char 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  c               1   29[BANK0 ] unsigned char 
  3599 ;;  temp            1   30[BANK0 ] unsigned char 
  3600 ;;  ln              1   28[BANK0 ] unsigned char 
  3601 ;;  hn              1   27[BANK0 ] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, pclath, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3611 ;;      Params:         0       1       0       0       0
  3612 ;;      Locals:         0       4       0       0       0
  3613 ;;      Temps:          0       2       0       0       0
  3614 ;;      Totals:         0       7       0       0       0
  3615 ;;Total ram usage:        7 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    5
  3618 ;; This function calls:
  3619 ;;		_LCDBusyLoop
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;;		_LCDInit
  3623 ;;		_LCDWriteString
  3624 ;;		_LCDWriteInt
  3625 ;;		_LCDGotoXY
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           
  3630                           ;psect for function _LCDByte
  3631  0EF7                     _LCDByte:	
  3632                           
  3633                           ;incstack = 0
  3634                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3635                           ;LCDByte@c stored from wreg
  3636  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  3638  0EF9  00BD               	movwf	LCDByte@c
  3639                           
  3640                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3641                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3642                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3643  0EFA  083D               	movf	LCDByte@c,w
  3644  0EFB  00B9               	movwf	??_LCDByte
  3645  0EFC  3004               	movlw	4
  3646  0EFD                     u1515:	
  3647  0EFD  1003               	clrc
  3648  0EFE  0CB9               	rrf	??_LCDByte,f
  3649  0EFF  3EFF               	addlw	-1
  3650  0F00  1D03               	skipz
  3651  0F01  2EFD               	goto	u1515
  3652  0F02  0839               	movf	??_LCDByte,w
  3653  0F03  00BA               	movwf	??_LCDByte+1
  3654  0F04  083A               	movf	??_LCDByte+1,w
  3655  0F05  00BB               	movwf	LCDByte@hn
  3656                           
  3657                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3658  0F06  083D               	movf	LCDByte@c,w
  3659  0F07  390F               	andlw	15
  3660  0F08  00B9               	movwf	??_LCDByte
  3661  0F09  0839               	movf	??_LCDByte,w
  3662  0F0A  00BC               	movwf	LCDByte@ln
  3663                           
  3664                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3665  0F0B  0838               	movf	LCDByte@isdata,w
  3666  0F0C  1D03               	btfss	3,2
  3667  0F0D  2F10               	goto	l116
  3668                           
  3669                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  3670  0F0E  1087               	bcf	7,1	;volatile
  3671  0F0F  2F11               	goto	l117
  3672  0F10                     l116:	
  3673                           
  3674                           ;lcd_hd44780_pic16.c: 97: else
  3675                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  3676  0F10  1487               	bsf	7,1	;volatile
  3677  0F11                     l117:	
  3678                           
  3679                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3680  0F11  2F12               	nop2	;2 cycle nop
  3681                           
  3682                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  3683  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3684  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  3685  0F14  1587               	bsf	7,3	;volatile
  3686                           
  3687                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  3688  0F15  083B               	movf	LCDByte@hn,w
  3689  0F16  00B9               	movwf	??_LCDByte
  3690  0F17  3004               	movlw	4
  3691  0F18                     u1535:	
  3692  0F18  1003               	clrc
  3693  0F19  0DB9               	rlf	??_LCDByte,f
  3694  0F1A  3EFF               	addlw	-1
  3695  0F1B  1D03               	skipz
  3696  0F1C  2F18               	goto	u1535
  3697  0F1D  0807               	movf	7,w	;volatile
  3698  0F1E  390F               	andlw	15
  3699  0F1F  0439               	iorwf	??_LCDByte,w
  3700  0F20  00BA               	movwf	??_LCDByte+1
  3701  0F21  083A               	movf	??_LCDByte+1,w
  3702  0F22  00BE               	movwf	LCDByte@temp
  3703                           
  3704                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3705  0F23  083E               	movf	LCDByte@temp,w
  3706  0F24  0087               	movwf	7	;volatile
  3707                           
  3708                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3709  0F25  2F26               	nop2	;2 cycle nop
  3710  0F26  2F27               	nop2	;2 cycle nop
  3711  0F27  0000               	nop
  3712                           
  3713                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  3714  0F28  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0F29  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0F2A  1187               	bcf	7,3	;volatile
  3717                           
  3718                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3719  0F2B  2F2C               	nop2	;2 cycle nop
  3720  0F2C  2F2D               	nop2	;2 cycle nop
  3721  0F2D  0000               	nop
  3722                           
  3723                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  3724  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  3726  0F30  1587               	bsf	7,3	;volatile
  3727                           
  3728                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  3729  0F31  083C               	movf	LCDByte@ln,w
  3730  0F32  00B9               	movwf	??_LCDByte
  3731  0F33  3004               	movlw	4
  3732  0F34                     u1545:	
  3733  0F34  1003               	clrc
  3734  0F35  0DB9               	rlf	??_LCDByte,f
  3735  0F36  3EFF               	addlw	-1
  3736  0F37  1D03               	skipz
  3737  0F38  2F34               	goto	u1545
  3738  0F39  0807               	movf	7,w	;volatile
  3739  0F3A  390F               	andlw	15
  3740  0F3B  0439               	iorwf	??_LCDByte,w
  3741  0F3C  00BA               	movwf	??_LCDByte+1
  3742  0F3D  083A               	movf	??_LCDByte+1,w
  3743  0F3E  00BE               	movwf	LCDByte@temp
  3744                           
  3745                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3746  0F3F  083E               	movf	LCDByte@temp,w
  3747  0F40  0087               	movwf	7	;volatile
  3748                           
  3749                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3750  0F41  2F42               	nop2	;2 cycle nop
  3751  0F42  2F43               	nop2	;2 cycle nop
  3752  0F43  0000               	nop
  3753                           
  3754                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  3755  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  3756  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  3757  0F46  1187               	bcf	7,3	;volatile
  3758                           
  3759                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3760  0F47  2F48               	nop2	;2 cycle nop
  3761  0F48  2F49               	nop2	;2 cycle nop
  3762  0F49  0000               	nop
  3763                           
  3764                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3765  0F4A  120A  118A  2682   	fcall	_LCDBusyLoop
  3766  0F4D  0008               	return
  3767  0F4E                     __end_of_LCDByte:	
  3768                           
  3769                           	psect	text15
  3770  0682                     __ptext15:	
  3771 ;; *************** function _LCDBusyLoop *****************
  3772 ;; Defined at:
  3773 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  status          1   23[BANK0 ] unsigned char 
  3778 ;;  temp            1   22[BANK0 ] unsigned char 
  3779 ;;  busy            1   21[BANK0 ] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  1    wreg      void 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       0       0       0       0
  3790 ;;      Locals:         0       3       0       0       0
  3791 ;;      Temps:          0       2       0       0       0
  3792 ;;      Totals:         0       5       0       0       0
  3793 ;;Total ram usage:        5 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    4
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_LCDByte
  3800 ;;		_LCDInit
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           
  3805                           ;psect for function _LCDBusyLoop
  3806  0682                     _LCDBusyLoop:	
  3807                           
  3808                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  3809                           
  3810                           ;incstack = 0
  3811                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  3812  0682  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0683  1303               	bcf	3,6	;RP1=0, select bank0
  3814  0684  01B7               	clrf	LCDBusyLoop@status
  3815                           
  3816                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  3817  0685  30F0               	movlw	240
  3818  0686  00B3               	movwf	??_LCDBusyLoop
  3819  0687  0833               	movf	??_LCDBusyLoop,w
  3820  0688  1683               	bsf	3,5	;RP0=1, select bank1
  3821  0689  1303               	bcf	3,6	;RP1=0, select bank1
  3822  068A  0487               	iorwf	7,f	;volatile
  3823                           
  3824                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  3825  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3826  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3827  068D  1507               	bsf	7,2	;volatile
  3828                           
  3829                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  3830  068E  1087               	bcf	7,1	;volatile
  3831                           
  3832                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3833  068F  2E90               	nop2	;2 cycle nop
  3834  0690                     l1432:	
  3835                           ;lcd_hd44780_pic16.c: 153: do
  3836                           
  3837                           
  3838                           ;lcd_hd44780_pic16.c: 154: {
  3839                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  3840  0690  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0691  1303               	bcf	3,6	;RP1=0, select bank0
  3842  0692  1587               	bsf	7,3	;volatile
  3843                           
  3844                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3845  0693  2E94               	nop2	;2 cycle nop
  3846                           
  3847                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  3848  0694  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0695  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0696  0807               	movf	7,w	;volatile
  3851  0697  00B3               	movwf	??_LCDBusyLoop
  3852  0698  3004               	movlw	4
  3853  0699                     u1305:	
  3854  0699  1003               	clrc
  3855  069A  0CB3               	rrf	??_LCDBusyLoop,f
  3856  069B  3EFF               	addlw	-1
  3857  069C  1D03               	skipz
  3858  069D  2E99               	goto	u1305
  3859  069E  0833               	movf	??_LCDBusyLoop,w
  3860  069F  00B4               	movwf	??_LCDBusyLoop+1
  3861  06A0  0834               	movf	??_LCDBusyLoop+1,w
  3862  06A1  00B7               	movwf	LCDBusyLoop@status
  3863                           
  3864                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  3865  06A2  0837               	movf	LCDBusyLoop@status,w
  3866  06A3  00B3               	movwf	??_LCDBusyLoop
  3867  06A4  3003               	movlw	3
  3868  06A5                     u1315:	
  3869  06A5  1003               	clrc
  3870  06A6  0DB3               	rlf	??_LCDBusyLoop,f
  3871  06A7  3EFF               	addlw	-1
  3872  06A8  1D03               	skipz
  3873  06A9  2EA5               	goto	u1315
  3874  06AA  1003               	clrc
  3875  06AB  0D33               	rlf	??_LCDBusyLoop,w
  3876  06AC  00B4               	movwf	??_LCDBusyLoop+1
  3877  06AD  0834               	movf	??_LCDBusyLoop+1,w
  3878  06AE  00B7               	movwf	LCDBusyLoop@status
  3879                           
  3880                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3881  06AF  2EB0               	nop2	;2 cycle nop
  3882                           
  3883                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  3884  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3885  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3886  06B2  1187               	bcf	7,3	;volatile
  3887                           
  3888                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3889  06B3  2EB4               	nop2	;2 cycle nop
  3890  06B4  2EB5               	nop2	;2 cycle nop
  3891  06B5  0000               	nop
  3892                           
  3893                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  3894  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3895  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3896  06B8  1587               	bsf	7,3	;volatile
  3897                           
  3898                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3899  06B9  2EBA               	nop2	;2 cycle nop
  3900                           
  3901                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  3902  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3903  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3904  06BC  0807               	movf	7,w	;volatile
  3905  06BD  00B3               	movwf	??_LCDBusyLoop
  3906  06BE  3004               	movlw	4
  3907  06BF                     u1325:	
  3908  06BF  1003               	clrc
  3909  06C0  0CB3               	rrf	??_LCDBusyLoop,f
  3910  06C1  3EFF               	addlw	-1
  3911  06C2  1D03               	skipz
  3912  06C3  2EBF               	goto	u1325
  3913  06C4  0833               	movf	??_LCDBusyLoop,w
  3914  06C5  00B4               	movwf	??_LCDBusyLoop+1
  3915  06C6  0834               	movf	??_LCDBusyLoop+1,w
  3916  06C7  00B6               	movwf	LCDBusyLoop@temp
  3917                           
  3918                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  3919  06C8  300F               	movlw	15
  3920  06C9  00B3               	movwf	??_LCDBusyLoop
  3921  06CA  0833               	movf	??_LCDBusyLoop,w
  3922  06CB  05B6               	andwf	LCDBusyLoop@temp,f
  3923                           
  3924                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  3925  06CC  0837               	movf	LCDBusyLoop@status,w
  3926  06CD  0436               	iorwf	LCDBusyLoop@temp,w
  3927  06CE  00B3               	movwf	??_LCDBusyLoop
  3928  06CF  0833               	movf	??_LCDBusyLoop,w
  3929  06D0  00B7               	movwf	LCDBusyLoop@status
  3930                           
  3931                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  3932  06D1  0837               	movf	LCDBusyLoop@status,w
  3933  06D2  3980               	andlw	128
  3934  06D3  00B3               	movwf	??_LCDBusyLoop
  3935  06D4  0833               	movf	??_LCDBusyLoop,w
  3936  06D5  00B5               	movwf	LCDBusyLoop@busy
  3937                           
  3938                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3939  06D6  2ED7               	nop2	;2 cycle nop
  3940                           
  3941                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  3942  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3943  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3944  06D9  1187               	bcf	7,3	;volatile
  3945                           
  3946                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3947  06DA  2EDB               	nop2	;2 cycle nop
  3948  06DB  2EDC               	nop2	;2 cycle nop
  3949  06DC  0000               	nop
  3950                           
  3951                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  3952  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  3953  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  3954  06DF  0835               	movf	LCDBusyLoop@busy,w
  3955  06E0  1D03               	btfss	3,2
  3956  06E1  2E90               	goto	l1432
  3957                           
  3958                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  3959  06E2  1107               	bcf	7,2	;volatile
  3960                           
  3961                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  3962  06E3  300F               	movlw	15
  3963  06E4  00B3               	movwf	??_LCDBusyLoop
  3964  06E5  0833               	movf	??_LCDBusyLoop,w
  3965  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  3966  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  3967  06E8  0587               	andwf	7,f	;volatile
  3968  06E9  0008               	return
  3969  06EA                     __end_of_LCDBusyLoop:	
  3970                           
  3971                           	psect	text16
  3972  0CF1                     __ptext16:	
  3973 ;; *************** function _ADCInit *****************
  3974 ;; Defined at:
  3975 ;;		line 7 in file "adc_pic16.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;		None
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2, status,0
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3989 ;;      Params:         0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0
  3992 ;;      Totals:         0       0       0       0       0
  3993 ;;Total ram usage:        0 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    4
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           
  4004                           ;psect for function _ADCInit
  4005  0CF1                     _ADCInit:	
  4006                           
  4007                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  4008                           
  4009                           ;incstack = 0
  4010                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  4011  0CF1  1683               	bsf	3,5	;RP0=1, select bank1
  4012  0CF2  1303               	bcf	3,6	;RP1=0, select bank1
  4013  0CF3  1686               	bsf	6,5	;volatile
  4014                           
  4015                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  4016  0CF4  1683               	bsf	3,5	;RP0=1, select bank3
  4017  0CF5  1703               	bsf	3,6	;RP1=1, select bank3
  4018  0CF6  1689               	bsf	9,5	;volatile
  4019                           
  4020                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  4021  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  4022  0CF8  1303               	bcf	3,6	;RP1=0, select bank1
  4023  0CF9  121F               	bcf	31,4	;volatile
  4024                           
  4025                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  4026  0CFA  30C0               	movlw	192
  4027  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  4029  0CFD  049F               	iorwf	31,f	;volatile
  4030                           
  4031                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  4032  0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  4033  0CFF  1303               	bcf	3,6	;RP1=0, select bank1
  4034  0D00  179F               	bsf	31,7	;volatile
  4035                           
  4036                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  4037  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  4039  0D03  141F               	bsf	31,0	;volatile
  4040  0D04  0008               	return
  4041  0D05                     __end_of_ADCInit:	
  4042                           
  4043                           	psect	text17
  4044  05AC                     __ptext17:	
  4045 ;; *************** function _ISR *****************
  4046 ;; Defined at:
  4047 ;;		line 156 in file "do_am.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;		None
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;		None
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4061 ;;      Params:         0       0       0       0       0
  4062 ;;      Locals:         0       0       0       0       0
  4063 ;;      Temps:          0       7       0       0       0
  4064 ;;      Totals:         0       7       0       0       0
  4065 ;;Total ram usage:        7 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:    3
  4068 ;; This function calls:
  4069 ;;		i1_LCDByte
  4070 ;;		i1_LCDGotoXY
  4071 ;;		i1_LCDWriteInt
  4072 ;;		i1_LCDWriteString
  4073 ;; This function is called by:
  4074 ;;		Interrupt level 1
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           
  4079                           ;psect for function _ISR
  4080  05AC                     _ISR:	
  4081                           
  4082                           ;do_am.c: 158: if(INTCONbits.RBIF == 1)
  4083  05AC  1C0B               	btfss	11,0	;volatile
  4084  05AD  2E0A               	goto	i1l2130
  4085                           
  4086                           ;do_am.c: 159: {
  4087                           ;do_am.c: 161: {
  4088                           ;do_am.c: 163: (LCDByte(0b00000001,0));
  4089  05AE  01F5               	clrf	i1LCDByte@isdata
  4090  05AF  3001               	movlw	1
  4091  05B0  120A  158A  274E  120A  118A  	fcall	i1_LCDByte
  4092                           
  4093                           ;do_am.c: 165: { LCDGotoXY(0,0); LCDWriteString("Thermometer set:");};
  4094  05B5  01FC               	clrf	i1LCDGotoXY@y
  4095  05B6  3000               	movlw	0
  4096  05B7  120A  158A  253C  120A  118A  	fcall	i1_LCDGotoXY
  4097  05BC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4098  05BD  120A  158A  26A7  120A  118A  	fcall	i1_LCDWriteString
  4099                           
  4100                           ;do_am.c: 167: tuneUpTemp++;
  4101  05C2  3001               	movlw	1
  4102  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  4103  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  4104  05C5  07DB               	addwf	_tuneUpTemp,f
  4105  05C6  1803               	skipnc
  4106  05C7  0ADC               	incf	_tuneUpTemp+1,f
  4107  05C8  3000               	movlw	0
  4108  05C9  07DC               	addwf	_tuneUpTemp+1,f
  4109                           
  4110                           ;do_am.c: 168: if(tuneUpTemp > 150)
  4111  05CA  085C               	movf	_tuneUpTemp+1,w
  4112  05CB  3A80               	xorlw	128
  4113  05CC  00FF               	movwf	127
  4114  05CD  3080               	movlw	128
  4115  05CE  027F               	subwf	127,w
  4116  05CF  1D03               	skipz
  4117  05D0  2DD3               	goto	u246_25
  4118  05D1  3097               	movlw	151
  4119  05D2  025B               	subwf	_tuneUpTemp,w
  4120  05D3                     u246_25:	
  4121  05D3  1C03               	skipc
  4122  05D4  2DD9               	goto	i1l2118
  4123                           
  4124                           ;do_am.c: 169: {
  4125                           ;do_am.c: 170: tuneUpTemp = 0;
  4126  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  4127  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  4128  05D7  01DB               	clrf	_tuneUpTemp
  4129  05D8  01DC               	clrf	_tuneUpTemp+1
  4130  05D9                     i1l2118:	
  4131                           
  4132                           ;do_am.c: 171: }
  4133                           ;do_am.c: 174: { LCDGotoXY(0,1); LCDWriteInt(tuneUpTemp,3);};
  4134  05D9  01FC               	clrf	i1LCDGotoXY@y
  4135  05DA  0AFC               	incf	i1LCDGotoXY@y,f
  4136  05DB  3000               	movlw	0
  4137  05DC  120A  158A  253C  120A  118A  	fcall	i1_LCDGotoXY
  4138  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  4139  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  4140  05E3  085C               	movf	_tuneUpTemp+1,w
  4141  05E4  00A1               	movwf	i1LCDWriteInt@val+1
  4142  05E5  085B               	movf	_tuneUpTemp,w
  4143  05E6  00A0               	movwf	i1LCDWriteInt@val
  4144  05E7  3003               	movlw	3
  4145  05E8  00AC               	movwf	??_ISR
  4146  05E9  082C               	movf	??_ISR,w
  4147  05EA  00A2               	movwf	i1LCDWriteInt@field_length
  4148  05EB  120A  118A  249F  120A  118A  	fcall	i1_LCDWriteInt
  4149                           
  4150                           ;do_am.c: 177: LCDWriteString("%0C");
  4151  05F0  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4152  05F1  120A  158A  26A7  120A  118A  	fcall	i1_LCDWriteString
  4153                           
  4154                           ;do_am.c: 179: _delay((unsigned long)((500)*(20000000/4000.0)));
  4155  05F6  300D               	movlw	13
  4156  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  4157  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  4158  05F9  00AE               	movwf	??_ISR+2
  4159  05FA  30AF               	movlw	175
  4160  05FB  00AD               	movwf	??_ISR+1
  4161  05FC  30C1               	movlw	193
  4162  05FD  00AC               	movwf	??_ISR
  4163  05FE                     u309_27:	
  4164  05FE  0BAC               	decfsz	??_ISR,f
  4165  05FF  2DFE               	goto	u309_27
  4166  0600  0BAD               	decfsz	??_ISR+1,f
  4167  0601  2DFE               	goto	u309_27
  4168  0602  0BAE               	decfsz	??_ISR+2,f
  4169  0603  2DFE               	goto	u309_27
  4170  0604  0000               	nop
  4171                           
  4172                           ;do_am.c: 180: tuneUpTempDir = 1;
  4173  0605  1283               	bcf	3,5	;RP0=0, select bank0
  4174  0606  1303               	bcf	3,6	;RP1=0, select bank0
  4175  0607  01DA               	clrf	_tuneUpTempDir
  4176  0608  0ADA               	incf	_tuneUpTempDir,f
  4177                           
  4178                           ;do_am.c: 182: }
  4179                           ;do_am.c: 183: INTCONbits.RBIF = 0;
  4180  0609  100B               	bcf	11,0	;volatile
  4181  060A                     i1l2130:	
  4182                           
  4183                           ;do_am.c: 184: }
  4184                           ;do_am.c: 185: IOCBbits.IOCB4 = 0;
  4185  060A  1683               	bsf	3,5	;RP0=1, select bank1
  4186  060B  1303               	bcf	3,6	;RP1=0, select bank1
  4187  060C  1216               	bcf	22,4	;volatile
  4188  060D  1283               	bcf	3,5	;RP0=0, select bank0
  4189  060E  1303               	bcf	3,6	;RP1=0, select bank0
  4190  060F  0832               	movf	??_ISR+6,w
  4191  0610  00FF               	movwf	127
  4192  0611  0831               	movf	??_ISR+5,w
  4193  0612  008A               	movwf	10
  4194  0613  0830               	movf	??_ISR+4,w
  4195  0614  0084               	movwf	4
  4196  0615  0E2F               	swapf	(??_ISR+3)^0,w
  4197  0616  0083               	movwf	3
  4198  0617  0EFE               	swapf	126,f
  4199  0618  0E7E               	swapf	126,w
  4200  0619  0009               	retfie
  4201  061A                     __end_of_ISR:	
  4202                           
  4203                           	psect	intentry
  4204  0004                     __pintentry:	
  4205                           ;incstack = 0
  4206                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4207                           
  4208  0004                     interrupt_function:	
  4209  007E                     saved_w	set	btemp
  4210  0004  00FE               	movwf	btemp
  4211  0005  0E03               	swapf	3,w
  4212  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4213  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4214  0008  00AF               	movwf	??_ISR+3
  4215  0009  0804               	movf	4,w
  4216  000A  00B0               	movwf	??_ISR+4
  4217  000B  080A               	movf	10,w
  4218  000C  00B1               	movwf	??_ISR+5
  4219  000D  087F               	movf	btemp+1,w
  4220  000E  00B2               	movwf	??_ISR+6
  4221  000F  120A  118A  2DAC   	ljmp	_ISR
  4222                           
  4223                           	psect	text18
  4224  0EA7                     __ptext18:	
  4225 ;; *************** function i1_LCDWriteString *****************
  4226 ;; Defined at:
  4227 ;;		line 279 in file "lcd_hd44780_pic16.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  msg             1    wreg     PTR const unsigned char 
  4230 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4231 ;;		 -> STR_6(5), STR_5(4), STR_4(4), STR_3(5), 
  4232 ;;		 -> STR_2(4), STR_1(17), 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  msg             1    0[BANK0 ] PTR const unsigned char 
  4235 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4236 ;;		 -> STR_6(5), STR_5(4), STR_4(4), STR_3(5), 
  4237 ;;		 -> STR_2(4), STR_1(17), 
  4238 ;;  LCDWriteStri    1    1[BANK0 ] char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       0       0       0       0
  4249 ;;      Locals:         0       2       0       0       0
  4250 ;;      Temps:          1       0       0       0       0
  4251 ;;      Totals:         1       2       0       0       0
  4252 ;;Total ram usage:        3 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    2
  4255 ;; This function calls:
  4256 ;;		i1_LCDByte
  4257 ;; This function is called by:
  4258 ;;		_ISR
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function i1_LCDWriteString
  4264  0EA7                     i1_LCDWriteString:	
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in i1_LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4268                           ;i1LCDWriteString@msg stored from wreg
  4269  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  4270  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  4271  0EA9  00A0               	movwf	i1LCDWriteString@msg
  4272  0EAA                     i1l2044:	
  4273                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  4274                           
  4275  0EAA  0820               	movf	i1LCDWriteString@msg,w
  4276  0EAB  0084               	movwf	4
  4277  0EAC  120A  158A  2000  120A  158A  	fcall	stringdir
  4278  0EB1  3A00               	xorlw	0
  4279  0EB2  1903               	btfsc	3,2
  4280  0EB3  0008               	return
  4281                           
  4282                           ;lcd_hd44780_pic16.c: 282: {
  4283                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  4284  0EB4  0820               	movf	i1LCDWriteString@msg,w
  4285  0EB5  0084               	movwf	4
  4286  0EB6  120A  158A  2000  120A  158A  	fcall	stringdir
  4287  0EBB  3A25               	xorlw	37
  4288  0EBC  1D03               	skipz
  4289  0EBD  2EE0               	goto	i1l2040
  4290                           
  4291                           ;lcd_hd44780_pic16.c: 285: {
  4292                           ;lcd_hd44780_pic16.c: 286: msg++;
  4293  0EBE  3001               	movlw	1
  4294  0EBF  00FC               	movwf	??i1_LCDWriteString
  4295  0EC0  087C               	movf	??i1_LCDWriteString,w
  4296  0EC1  07A0               	addwf	i1LCDWriteString@msg,f
  4297                           
  4298                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  4299  0EC2  0820               	movf	i1LCDWriteString@msg,w
  4300  0EC3  0084               	movwf	4
  4301  0EC4  120A  158A  2000  120A  158A  	fcall	stringdir
  4302  0EC9  3ED0               	addlw	-48
  4303  0ECA  00FC               	movwf	??i1_LCDWriteString
  4304  0ECB  087C               	movf	??i1_LCDWriteString,w
  4305  0ECC  00A1               	movwf	i1LCDWriteString@cc
  4306                           
  4307                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  4308  0ECD  1BA1               	btfsc	i1LCDWriteString@cc,7
  4309  0ECE  2ED8               	goto	i1l2036
  4310  0ECF  0821               	movf	i1LCDWriteString@cc,w
  4311  0ED0  3A80               	xorlw	128
  4312  0ED1  3E78               	addlw	-136
  4313  0ED2  1803               	skipnc
  4314  0ED3  2ED8               	goto	i1l2036
  4315                           
  4316                           ;lcd_hd44780_pic16.c: 290: {
  4317                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  4318  0ED4  01F5               	clrf	i1LCDByte@isdata
  4319  0ED5  0AF5               	incf	i1LCDByte@isdata,f
  4320  0ED6  0821               	movf	i1LCDWriteString@cc,w
  4321  0ED7  2EEB               	goto	L8
  4322  0ED8                     i1l2036:	
  4323                           ;lcd_hd44780_pic16.c: 292: }
  4324                           
  4325                           
  4326                           ;lcd_hd44780_pic16.c: 293: else
  4327                           ;lcd_hd44780_pic16.c: 294: {
  4328                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  4329  0ED8  01F5               	clrf	i1LCDByte@isdata
  4330  0ED9  0AF5               	incf	i1LCDByte@isdata,f
  4331  0EDA  3025               	movlw	37
  4332  0EDB  120A  158A  274E  120A  158A  	fcall	i1_LCDByte
  4333  0EE0                     i1l2040:	
  4334                           ;lcd_hd44780_pic16.c: 297: }
  4335                           ;lcd_hd44780_pic16.c: 298: }
  4336                           
  4337                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  4338                           
  4339                           
  4340                           ;lcd_hd44780_pic16.c: 299: else
  4341                           ;lcd_hd44780_pic16.c: 300: {
  4342                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  4343  0EE0  01F5               	clrf	i1LCDByte@isdata
  4344  0EE1  0AF5               	incf	i1LCDByte@isdata,f
  4345  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  4347  0EE4  0820               	movf	i1LCDWriteString@msg,w
  4348  0EE5  0084               	movwf	4
  4349  0EE6  120A  158A  2000  120A  158A  	fcall	stringdir
  4350  0EEB                     L8:	
  4351  0EEB  120A  158A  274E  120A  158A  	fcall	i1_LCDByte
  4352                           
  4353                           ;lcd_hd44780_pic16.c: 302: }
  4354                           ;lcd_hd44780_pic16.c: 303: msg++;
  4355  0EF0  3001               	movlw	1
  4356  0EF1  00FC               	movwf	??i1_LCDWriteString
  4357  0EF2  087C               	movf	??i1_LCDWriteString,w
  4358  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  4359  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  4360  0EF5  07A0               	addwf	i1LCDWriteString@msg,f
  4361  0EF6  2EAA               	goto	i1l2044
  4362  0EF7                     __end_ofi1_LCDWriteString:	
  4363                           
  4364                           	psect	text19
  4365  049F                     __ptext19:	
  4366 ;; *************** function i1_LCDWriteInt *****************
  4367 ;; Defined at:
  4368 ;;		line 317 in file "lcd_hd44780_pic16.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  val             2    0[BANK0 ] int 
  4371 ;;  field_length    1    2[BANK0 ] char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  4374 ;;  LCDWriteInt     2   10[BANK0 ] int 
  4375 ;;  LCDWriteInt     2    8[BANK0 ] int 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4385 ;;      Params:         0       3       0       0       0
  4386 ;;      Locals:         0       9       0       0       0
  4387 ;;      Temps:          2       0       0       0       0
  4388 ;;      Totals:         2      12       0       0       0
  4389 ;;Total ram usage:       14 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    2
  4392 ;; This function calls:
  4393 ;;		i1_LCDByte
  4394 ;;		i1___awdiv
  4395 ;;		i1___awmod
  4396 ;; This function is called by:
  4397 ;;		_ISR
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           
  4402                           ;psect for function i1_LCDWriteInt
  4403  049F                     i1_LCDWriteInt:	
  4404                           
  4405                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  4406                           
  4407                           ;incstack = 0
  4408                           ; Regs used in i1_LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4409  049F  3023               	movlw	i1LCDWriteInt@str& (0+255)
  4410  04A0  0084               	movwf	4
  4411  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  4412  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  4413  04A3  0855               	movf	LCDWriteInt@F1632,w
  4414  04A4  1383               	bcf	3,7	;select IRP bank0
  4415  04A5  0080               	movwf	0
  4416  04A6  0A84               	incf	4,f
  4417  04A7  0856               	movf	LCDWriteInt@F1632+1,w
  4418  04A8  0080               	movwf	0
  4419  04A9  0A84               	incf	4,f
  4420  04AA  0857               	movf	LCDWriteInt@F1632+2,w
  4421  04AB  0080               	movwf	0
  4422  04AC  0A84               	incf	4,f
  4423  04AD  0858               	movf	LCDWriteInt@F1632+3,w
  4424  04AE  0080               	movwf	0
  4425  04AF  0A84               	incf	4,f
  4426  04B0  0859               	movf	LCDWriteInt@F1632+4,w
  4427  04B1  0080               	movwf	0
  4428                           
  4429                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  4430  04B2  3004               	movlw	4
  4431  04B3  00AA               	movwf	i1LCDWriteInt@i
  4432  04B4  3000               	movlw	0
  4433  04B5  00AB               	movwf	i1LCDWriteInt@i+1
  4434  04B6  01A8               	clrf	i1LCDWriteInt@j
  4435  04B7  01A9               	clrf	i1LCDWriteInt@j+1
  4436                           
  4437                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  4438  04B8  0820               	movf	i1LCDWriteInt@val,w
  4439  04B9  0421               	iorwf	i1LCDWriteInt@val+1,w
  4440  04BA  1903               	btfsc	3,2
  4441                           
  4442                           ;lcd_hd44780_pic16.c: 323: {
  4443                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  4444  04BB  01A7               	clrf	i1LCDWriteInt@str+4
  4445                           
  4446                           ;lcd_hd44780_pic16.c: 325: }
  4447                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  4448  04BC  1FA1               	btfss	i1LCDWriteInt@val+1,7
  4449  04BD  2CCD               	goto	i1l2068
  4450                           
  4451                           ;lcd_hd44780_pic16.c: 328: {
  4452                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  4453  04BE  01F5               	clrf	i1LCDByte@isdata
  4454  04BF  0AF5               	incf	i1LCDByte@isdata,f
  4455  04C0  302D               	movlw	45
  4456  04C1  120A  158A  274E  120A  118A  	fcall	i1_LCDByte
  4457                           
  4458                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  4459  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  4460  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  4461  04C8  09A0               	comf	i1LCDWriteInt@val,f
  4462  04C9  09A1               	comf	i1LCDWriteInt@val+1,f
  4463  04CA  0AA0               	incf	i1LCDWriteInt@val,f
  4464  04CB  1903               	skipnz
  4465  04CC  0AA1               	incf	i1LCDWriteInt@val+1,f
  4466  04CD                     i1l2068:	
  4467                           ;lcd_hd44780_pic16.c: 331: }
  4468                           ;lcd_hd44780_pic16.c: 333: while(val)
  4469                           
  4470  04CD  0820               	movf	i1LCDWriteInt@val,w
  4471  04CE  0421               	iorwf	i1LCDWriteInt@val+1,w
  4472  04CF  1903               	btfsc	3,2
  4473  04D0  2D02               	goto	i1l2070
  4474                           
  4475                           ;lcd_hd44780_pic16.c: 334: {
  4476                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  4477  04D1  300A               	movlw	10
  4478  04D2  00F0               	movwf	i1___awmod@divisor
  4479  04D3  3000               	movlw	0
  4480  04D4  00F1               	movwf	i1___awmod@divisor+1
  4481  04D5  0821               	movf	i1LCDWriteInt@val+1,w
  4482  04D6  00F3               	movwf	i1___awmod@dividend+1
  4483  04D7  0820               	movf	i1LCDWriteInt@val,w
  4484  04D8  00F2               	movwf	i1___awmod@dividend
  4485  04D9  120A  158A  25C3  120A  118A  	fcall	i1___awmod
  4486  04DE  0870               	movf	?i1___awmod,w
  4487  04DF  00FC               	movwf	??i1_LCDWriteInt
  4488  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  4489  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  4490  04E2  082A               	movf	i1LCDWriteInt@i,w
  4491  04E3  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4492  04E4  0084               	movwf	4
  4493  04E5  087C               	movf	??i1_LCDWriteInt,w
  4494  04E6  1383               	bcf	3,7	;select IRP bank0
  4495  04E7  0080               	movwf	0
  4496                           
  4497                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  4498  04E8  300A               	movlw	10
  4499  04E9  00F0               	movwf	i1___awdiv@divisor
  4500  04EA  3000               	movlw	0
  4501  04EB  00F1               	movwf	i1___awdiv@divisor+1
  4502  04EC  0821               	movf	i1LCDWriteInt@val+1,w
  4503  04ED  00F3               	movwf	i1___awdiv@dividend+1
  4504  04EE  0820               	movf	i1LCDWriteInt@val,w
  4505  04EF  00F2               	movwf	i1___awdiv@dividend
  4506  04F0  120A  158A  27A7  120A  118A  	fcall	i1___awdiv
  4507  04F5  0871               	movf	?i1___awdiv+1,w
  4508  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  4509  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  4510  04F8  00A1               	movwf	i1LCDWriteInt@val+1
  4511  04F9  0870               	movf	?i1___awdiv,w
  4512  04FA  00A0               	movwf	i1LCDWriteInt@val
  4513                           
  4514                           ;lcd_hd44780_pic16.c: 337: i--;
  4515  04FB  30FF               	movlw	255
  4516  04FC  07AA               	addwf	i1LCDWriteInt@i,f
  4517  04FD  1803               	skipnc
  4518  04FE  0AAB               	incf	i1LCDWriteInt@i+1,f
  4519  04FF  30FF               	movlw	255
  4520  0500  07AB               	addwf	i1LCDWriteInt@i+1,f
  4521  0501  2CCD               	goto	i1l2068
  4522  0502                     i1l2070:	
  4523                           
  4524                           ;lcd_hd44780_pic16.c: 338: }
  4525                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  4526  0502  0A22               	incf	i1LCDWriteInt@field_length,w
  4527  0503  1903               	btfsc	3,2
  4528  0504  2D17               	goto	i1l2078
  4529                           
  4530                           ;lcd_hd44780_pic16.c: 341: else
  4531                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  4532                           
  4533                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  4534  0505  0822               	movf	i1LCDWriteInt@field_length,w
  4535  0506  00FC               	movwf	??i1_LCDWriteInt
  4536  0507  01FD               	clrf	??i1_LCDWriteInt+1
  4537  0508  1BFC               	btfsc	??i1_LCDWriteInt,7
  4538  0509  03FD               	decf	??i1_LCDWriteInt+1,f
  4539  050A  09FC               	comf	??i1_LCDWriteInt,f
  4540  050B  09FD               	comf	??i1_LCDWriteInt+1,f
  4541  050C  0AFC               	incf	??i1_LCDWriteInt,f
  4542  050D  1903               	skipnz
  4543  050E  0AFD               	incf	??i1_LCDWriteInt+1,f
  4544  050F  087C               	movf	??i1_LCDWriteInt,w
  4545  0510  3E05               	addlw	5
  4546  0511  00A8               	movwf	i1LCDWriteInt@j
  4547  0512  087D               	movf	??i1_LCDWriteInt+1,w
  4548  0513  1803               	skipnc
  4549  0514  3E01               	addlw	1
  4550  0515  3E00               	addlw	0
  4551  0516  00A9               	movwf	i1LCDWriteInt@j+1
  4552  0517                     i1l2078:	
  4553                           
  4554                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  4555  0517  0829               	movf	i1LCDWriteInt@j+1,w
  4556  0518  00AB               	movwf	i1LCDWriteInt@i+1
  4557  0519  0828               	movf	i1LCDWriteInt@j,w
  4558  051A  00AA               	movwf	i1LCDWriteInt@i
  4559  051B                     L9:	
  4560  051B  082B               	movf	i1LCDWriteInt@i+1,w
  4561  051C  3A80               	xorlw	128
  4562  051D  00FF               	movwf	127
  4563  051E  3080               	movlw	128
  4564  051F  027F               	subwf	127,w
  4565  0520  1D03               	skipz
  4566  0521  2D24               	goto	u242_25
  4567  0522  3005               	movlw	5
  4568  0523  022A               	subwf	i1LCDWriteInt@i,w
  4569  0524                     u242_25:	
  4570  0524  1803               	btfsc	3,0
  4571  0525  0008               	return
  4572                           
  4573                           ;lcd_hd44780_pic16.c: 346: {
  4574                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  4575  0526  01F5               	clrf	i1LCDByte@isdata
  4576  0527  0AF5               	incf	i1LCDByte@isdata,f
  4577  0528  1283               	bcf	3,5	;RP0=0, select bank0
  4578  0529  1303               	bcf	3,6	;RP1=0, select bank0
  4579  052A  082A               	movf	i1LCDWriteInt@i,w
  4580  052B  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4581  052C  0084               	movwf	4
  4582  052D  1383               	bcf	3,7	;select IRP bank0
  4583  052E  0800               	movf	0,w
  4584  052F  3E30               	addlw	48
  4585  0530  120A  158A  274E  120A  118A  	fcall	i1_LCDByte
  4586  0535  3001               	movlw	1
  4587  0536  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0537  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0538  07AA               	addwf	i1LCDWriteInt@i,f
  4590  0539  1803               	skipnc
  4591  053A  0AAB               	incf	i1LCDWriteInt@i+1,f
  4592  053B  3000               	movlw	0
  4593  053C  07AB               	addwf	i1LCDWriteInt@i+1,f
  4594  053D  2D1B               	goto	L9
  4595  053E                     __end_ofi1_LCDWriteInt:	
  4596                           
  4597                           	psect	text20
  4598  0DC3                     __ptext20:	
  4599 ;; *************** function i1___awmod *****************
  4600 ;; Defined at:
  4601 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  divisor         2    0[COMMON] int 
  4604 ;;  dividend        2    2[COMMON] int 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  __awmod         1    6[COMMON] unsigned char 
  4607 ;;  __awmod         1    5[COMMON] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  2    0[COMMON] int 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4617 ;;      Params:         4       0       0       0       0
  4618 ;;      Locals:         2       0       0       0       0
  4619 ;;      Temps:          1       0       0       0       0
  4620 ;;      Totals:         7       0       0       0       0
  4621 ;;Total ram usage:        7 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		i1_LCDWriteInt
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           
  4631                           ;psect for function i1___awmod
  4632  0DC3                     i1___awmod:	
  4633                           
  4634                           ;incstack = 0
  4635                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4636  0DC3  01F6               	clrf	i1___awmod@sign
  4637  0DC4  1FF3               	btfss	i1___awmod@dividend+1,7
  4638  0DC5  2DCD               	goto	i1l1846
  4639  0DC6  09F2               	comf	i1___awmod@dividend,f
  4640  0DC7  09F3               	comf	i1___awmod@dividend+1,f
  4641  0DC8  0AF2               	incf	i1___awmod@dividend,f
  4642  0DC9  1903               	skipnz
  4643  0DCA  0AF3               	incf	i1___awmod@dividend+1,f
  4644  0DCB  01F6               	clrf	i1___awmod@sign
  4645  0DCC  0AF6               	incf	i1___awmod@sign,f
  4646  0DCD                     i1l1846:	
  4647  0DCD  1FF1               	btfss	i1___awmod@divisor+1,7
  4648  0DCE  2DD4               	goto	i1l1850
  4649  0DCF  09F0               	comf	i1___awmod@divisor,f
  4650  0DD0  09F1               	comf	i1___awmod@divisor+1,f
  4651  0DD1  0AF0               	incf	i1___awmod@divisor,f
  4652  0DD2  1903               	skipnz
  4653  0DD3  0AF1               	incf	i1___awmod@divisor+1,f
  4654  0DD4                     i1l1850:	
  4655  0DD4  0870               	movf	i1___awmod@divisor,w
  4656  0DD5  0471               	iorwf	i1___awmod@divisor+1,w
  4657  0DD6  1903               	btfsc	3,2
  4658  0DD7  2E01               	goto	i1l1868
  4659  0DD8  01F5               	clrf	i1___awmod@counter
  4660  0DD9  0AF5               	incf	i1___awmod@counter,f
  4661  0DDA                     i1l1858:	
  4662  0DDA  1BF1               	btfsc	i1___awmod@divisor+1,7
  4663  0DDB  2DE8               	goto	i1l1860
  4664  0DDC  3001               	movlw	1
  4665  0DDD                     u215_25:	
  4666  0DDD  1003               	clrc
  4667  0DDE  0DF0               	rlf	i1___awmod@divisor,f
  4668  0DDF  0DF1               	rlf	i1___awmod@divisor+1,f
  4669  0DE0  3EFF               	addlw	-1
  4670  0DE1  1D03               	skipz
  4671  0DE2  2DDD               	goto	u215_25
  4672  0DE3  3001               	movlw	1
  4673  0DE4  00F4               	movwf	??i1___awmod
  4674  0DE5  0874               	movf	??i1___awmod,w
  4675  0DE6  07F5               	addwf	i1___awmod@counter,f
  4676  0DE7  2DDA               	goto	i1l1858
  4677  0DE8                     i1l1860:	
  4678  0DE8  0871               	movf	i1___awmod@divisor+1,w
  4679  0DE9  0273               	subwf	i1___awmod@dividend+1,w
  4680  0DEA  1D03               	skipz
  4681  0DEB  2DEE               	goto	u217_25
  4682  0DEC  0870               	movf	i1___awmod@divisor,w
  4683  0DED  0272               	subwf	i1___awmod@dividend,w
  4684  0DEE                     u217_25:	
  4685  0DEE  1C03               	skipc
  4686  0DEF  2DF6               	goto	i1l1864
  4687  0DF0  0870               	movf	i1___awmod@divisor,w
  4688  0DF1  02F2               	subwf	i1___awmod@dividend,f
  4689  0DF2  0871               	movf	i1___awmod@divisor+1,w
  4690  0DF3  1C03               	skipc
  4691  0DF4  03F3               	decf	i1___awmod@dividend+1,f
  4692  0DF5  02F3               	subwf	i1___awmod@dividend+1,f
  4693  0DF6                     i1l1864:	
  4694  0DF6  3001               	movlw	1
  4695  0DF7                     u218_25:	
  4696  0DF7  1003               	clrc
  4697  0DF8  0CF1               	rrf	i1___awmod@divisor+1,f
  4698  0DF9  0CF0               	rrf	i1___awmod@divisor,f
  4699  0DFA  3EFF               	addlw	-1
  4700  0DFB  1D03               	skipz
  4701  0DFC  2DF7               	goto	u218_25
  4702  0DFD  3001               	movlw	1
  4703  0DFE  02F5               	subwf	i1___awmod@counter,f
  4704  0DFF  1D03               	btfss	3,2
  4705  0E00  2DE8               	goto	i1l1860
  4706  0E01                     i1l1868:	
  4707  0E01  0876               	movf	i1___awmod@sign,w
  4708  0E02  1903               	btfsc	3,2
  4709  0E03  2E09               	goto	i1l1872
  4710  0E04  09F2               	comf	i1___awmod@dividend,f
  4711  0E05  09F3               	comf	i1___awmod@dividend+1,f
  4712  0E06  0AF2               	incf	i1___awmod@dividend,f
  4713  0E07  1903               	skipnz
  4714  0E08  0AF3               	incf	i1___awmod@dividend+1,f
  4715  0E09                     i1l1872:	
  4716  0E09  0873               	movf	i1___awmod@dividend+1,w
  4717  0E0A  00F1               	movwf	?i1___awmod+1
  4718  0E0B  0872               	movf	i1___awmod@dividend,w
  4719  0E0C  00F0               	movwf	?i1___awmod
  4720  0E0D  0008               	return
  4721  0E0E                     __end_ofi1___awmod:	
  4722                           
  4723                           	psect	text21
  4724  0FA7                     __ptext21:	
  4725 ;; *************** function i1___awdiv *****************
  4726 ;; Defined at:
  4727 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  divisor         2    0[COMMON] int 
  4730 ;;  dividend        2    2[COMMON] int 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  __awdiv         2    7[COMMON] int 
  4733 ;;  __awdiv         1    6[COMMON] unsigned char 
  4734 ;;  __awdiv         1    5[COMMON] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  2    0[COMMON] int 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4744 ;;      Params:         4       0       0       0       0
  4745 ;;      Locals:         4       0       0       0       0
  4746 ;;      Temps:          1       0       0       0       0
  4747 ;;      Totals:         9       0       0       0       0
  4748 ;;Total ram usage:        9 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		i1_LCDWriteInt
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           
  4758                           ;psect for function i1___awdiv
  4759  0FA7                     i1___awdiv:	
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4763  0FA7  01F6               	clrf	i1___awdiv@sign
  4764  0FA8  1FF1               	btfss	i1___awdiv@divisor+1,7
  4765  0FA9  2FB1               	goto	i1l1802
  4766  0FAA  09F0               	comf	i1___awdiv@divisor,f
  4767  0FAB  09F1               	comf	i1___awdiv@divisor+1,f
  4768  0FAC  0AF0               	incf	i1___awdiv@divisor,f
  4769  0FAD  1903               	skipnz
  4770  0FAE  0AF1               	incf	i1___awdiv@divisor+1,f
  4771  0FAF  01F6               	clrf	i1___awdiv@sign
  4772  0FB0  0AF6               	incf	i1___awdiv@sign,f
  4773  0FB1                     i1l1802:	
  4774  0FB1  1FF3               	btfss	i1___awdiv@dividend+1,7
  4775  0FB2  2FBC               	goto	i1l1808
  4776  0FB3  09F2               	comf	i1___awdiv@dividend,f
  4777  0FB4  09F3               	comf	i1___awdiv@dividend+1,f
  4778  0FB5  0AF2               	incf	i1___awdiv@dividend,f
  4779  0FB6  1903               	skipnz
  4780  0FB7  0AF3               	incf	i1___awdiv@dividend+1,f
  4781  0FB8  3001               	movlw	1
  4782  0FB9  00F4               	movwf	??i1___awdiv
  4783  0FBA  0874               	movf	??i1___awdiv,w
  4784  0FBB  06F6               	xorwf	i1___awdiv@sign,f
  4785  0FBC                     i1l1808:	
  4786  0FBC  01F7               	clrf	i1___awdiv@quotient
  4787  0FBD  01F8               	clrf	i1___awdiv@quotient+1
  4788  0FBE  0870               	movf	i1___awdiv@divisor,w
  4789  0FBF  0471               	iorwf	i1___awdiv@divisor+1,w
  4790  0FC0  1903               	btfsc	3,2
  4791  0FC1  2FF3               	goto	i1l1830
  4792  0FC2  01F5               	clrf	i1___awdiv@counter
  4793  0FC3  0AF5               	incf	i1___awdiv@counter,f
  4794  0FC4                     i1l1818:	
  4795  0FC4  1BF1               	btfsc	i1___awdiv@divisor+1,7
  4796  0FC5  2FD2               	goto	i1l1820
  4797  0FC6  3001               	movlw	1
  4798  0FC7                     u205_25:	
  4799  0FC7  1003               	clrc
  4800  0FC8  0DF0               	rlf	i1___awdiv@divisor,f
  4801  0FC9  0DF1               	rlf	i1___awdiv@divisor+1,f
  4802  0FCA  3EFF               	addlw	-1
  4803  0FCB  1D03               	skipz
  4804  0FCC  2FC7               	goto	u205_25
  4805  0FCD  3001               	movlw	1
  4806  0FCE  00F4               	movwf	??i1___awdiv
  4807  0FCF  0874               	movf	??i1___awdiv,w
  4808  0FD0  07F5               	addwf	i1___awdiv@counter,f
  4809  0FD1  2FC4               	goto	i1l1818
  4810  0FD2                     i1l1820:	
  4811  0FD2  3001               	movlw	1
  4812  0FD3                     u207_25:	
  4813  0FD3  1003               	clrc
  4814  0FD4  0DF7               	rlf	i1___awdiv@quotient,f
  4815  0FD5  0DF8               	rlf	i1___awdiv@quotient+1,f
  4816  0FD6  3EFF               	addlw	-1
  4817  0FD7  1D03               	skipz
  4818  0FD8  2FD3               	goto	u207_25
  4819  0FD9  0871               	movf	i1___awdiv@divisor+1,w
  4820  0FDA  0273               	subwf	i1___awdiv@dividend+1,w
  4821  0FDB  1D03               	skipz
  4822  0FDC  2FDF               	goto	u208_25
  4823  0FDD  0870               	movf	i1___awdiv@divisor,w
  4824  0FDE  0272               	subwf	i1___awdiv@dividend,w
  4825  0FDF                     u208_25:	
  4826  0FDF  1C03               	skipc
  4827  0FE0  2FE8               	goto	i1l1826
  4828  0FE1  0870               	movf	i1___awdiv@divisor,w
  4829  0FE2  02F2               	subwf	i1___awdiv@dividend,f
  4830  0FE3  0871               	movf	i1___awdiv@divisor+1,w
  4831  0FE4  1C03               	skipc
  4832  0FE5  03F3               	decf	i1___awdiv@dividend+1,f
  4833  0FE6  02F3               	subwf	i1___awdiv@dividend+1,f
  4834  0FE7  1477               	bsf	i1___awdiv@quotient,0
  4835  0FE8                     i1l1826:	
  4836  0FE8  3001               	movlw	1
  4837  0FE9                     u209_25:	
  4838  0FE9  1003               	clrc
  4839  0FEA  0CF1               	rrf	i1___awdiv@divisor+1,f
  4840  0FEB  0CF0               	rrf	i1___awdiv@divisor,f
  4841  0FEC  3EFF               	addlw	-1
  4842  0FED  1D03               	skipz
  4843  0FEE  2FE9               	goto	u209_25
  4844  0FEF  3001               	movlw	1
  4845  0FF0  02F5               	subwf	i1___awdiv@counter,f
  4846  0FF1  1D03               	btfss	3,2
  4847  0FF2  2FD2               	goto	i1l1820
  4848  0FF3                     i1l1830:	
  4849  0FF3  0876               	movf	i1___awdiv@sign,w
  4850  0FF4  1903               	btfsc	3,2
  4851  0FF5  2FFB               	goto	i1l1834
  4852  0FF6  09F7               	comf	i1___awdiv@quotient,f
  4853  0FF7  09F8               	comf	i1___awdiv@quotient+1,f
  4854  0FF8  0AF7               	incf	i1___awdiv@quotient,f
  4855  0FF9  1903               	skipnz
  4856  0FFA  0AF8               	incf	i1___awdiv@quotient+1,f
  4857  0FFB                     i1l1834:	
  4858  0FFB  0878               	movf	i1___awdiv@quotient+1,w
  4859  0FFC  00F1               	movwf	?i1___awdiv+1
  4860  0FFD  0877               	movf	i1___awdiv@quotient,w
  4861  0FFE  00F0               	movwf	?i1___awdiv
  4862  0FFF  0008               	return
  4863  1000                     __end_ofi1___awdiv:	
  4864                           
  4865                           	psect	text22
  4866  0D3C                     __ptext22:	
  4867 ;; *************** function i1_LCDGotoXY *****************
  4868 ;; Defined at:
  4869 ;;		line 355 in file "lcd_hd44780_pic16.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  x               1    wreg     unsigned char 
  4872 ;;  y               1   12[COMMON] unsigned char 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;  x               1    0[BANK0 ] unsigned char 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4884 ;;      Params:         1       0       0       0       0
  4885 ;;      Locals:         0       1       0       0       0
  4886 ;;      Temps:          1       0       0       0       0
  4887 ;;      Totals:         2       1       0       0       0
  4888 ;;Total ram usage:        3 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    2
  4891 ;; This function calls:
  4892 ;;		i1_LCDByte
  4893 ;; This function is called by:
  4894 ;;		_ISR
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           
  4899                           ;psect for function i1_LCDGotoXY
  4900  0D3C                     i1_LCDGotoXY:	
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4904                           ;i1LCDGotoXY@x stored from wreg
  4905  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4906  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4907  0D3E  00A0               	movwf	i1LCDGotoXY@x
  4908                           
  4909                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  4910  0D3F  3014               	movlw	20
  4911  0D40  0220               	subwf	i1LCDGotoXY@x,w
  4912  0D41  1803               	btfsc	3,0
  4913  0D42  0008               	return
  4914  0D43  2D4D               	goto	i1l2100
  4915  0D44                     i1l163:	
  4916                           ;lcd_hd44780_pic16.c: 365: case 1:
  4917                           
  4918                           ;lcd_hd44780_pic16.c: 364: break;
  4919                           
  4920                           ;lcd_hd44780_pic16.c: 362: {
  4921                           ;lcd_hd44780_pic16.c: 363: case 0:
  4922                           
  4923                           ;lcd_hd44780_pic16.c: 361: switch(y)
  4924                           
  4925                           
  4926                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  4927  0D44  1720               	bsf	i1LCDGotoXY@x,6
  4928                           
  4929                           ;lcd_hd44780_pic16.c: 367: break;
  4930  0D45  2D5B               	goto	i1l162
  4931  0D46                     i1l2094:	
  4932                           ;lcd_hd44780_pic16.c: 368: case 2:
  4933                           
  4934                           
  4935                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  4936  0D46  3014               	movlw	20
  4937  0D47  2D49               	goto	L10
  4938  0D48                     i1l2096:	
  4939                           ;lcd_hd44780_pic16.c: 371: case 3:
  4940                           
  4941                           ;lcd_hd44780_pic16.c: 370: break;
  4942                           
  4943                           
  4944                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  4945  0D48  3054               	movlw	84
  4946  0D49                     L10:	
  4947  0D49  00FD               	movwf	??i1_LCDGotoXY
  4948  0D4A  087D               	movf	??i1_LCDGotoXY,w
  4949  0D4B  07A0               	addwf	i1LCDGotoXY@x,f
  4950                           
  4951                           ;lcd_hd44780_pic16.c: 374: }
  4952                           
  4953                           ;lcd_hd44780_pic16.c: 373: break;
  4954  0D4C  2D5B               	goto	i1l162
  4955  0D4D                     i1l2100:	
  4956  0D4D  087C               	movf	i1LCDGotoXY@y,w
  4957                           
  4958                           ; Switch size 1, requested type "space"
  4959                           ; Number of cases is 4, Range of values is 0 to 3
  4960                           ; switch strategies available:
  4961                           ; Name         Instructions Cycles
  4962                           ; simple_byte           13     7 (average)
  4963                           ; direct_byte           20     8 (fixed)
  4964                           ; jumptable            260     6 (fixed)
  4965                           ;	Chosen strategy is simple_byte
  4966  0D4E  3A00               	xorlw	0	; case 0
  4967  0D4F  1903               	skipnz
  4968  0D50  2D5B               	goto	i1l162
  4969  0D51  3A01               	xorlw	1	; case 1
  4970  0D52  1903               	skipnz
  4971  0D53  2D44               	goto	i1l163
  4972  0D54  3A03               	xorlw	3	; case 2
  4973  0D55  1903               	skipnz
  4974  0D56  2D46               	goto	i1l2094
  4975  0D57  3A01               	xorlw	1	; case 3
  4976  0D58  1903               	skipnz
  4977  0D59  2D48               	goto	i1l2096
  4978  0D5A  2D5B               	goto	i1l162
  4979  0D5B                     i1l162:	
  4980                           
  4981                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  4982  0D5B  17A0               	bsf	i1LCDGotoXY@x,7
  4983                           
  4984                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  4985  0D5C  01F5               	clrf	i1LCDByte@isdata
  4986  0D5D  0820               	movf	i1LCDGotoXY@x,w
  4987  0D5E  120A  158A  274E   	fcall	i1_LCDByte
  4988  0D61  0008               	return
  4989  0D62                     __end_ofi1_LCDGotoXY:	
  4990                           
  4991                           	psect	text23
  4992  0F4E                     __ptext23:	
  4993 ;; *************** function i1_LCDByte *****************
  4994 ;; Defined at:
  4995 ;;		line 80 in file "lcd_hd44780_pic16.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  c               1    wreg     unsigned char 
  4998 ;;  isdata          1    5[COMMON] unsigned char 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  c               1    8[COMMON] unsigned char 
  5001 ;;  LCDByte         1   11[COMMON] unsigned char 
  5002 ;;  LCDByte         1   10[COMMON] unsigned char 
  5003 ;;  LCDByte         1    9[COMMON] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0, pclath, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5013 ;;      Params:         1       0       0       0       0
  5014 ;;      Locals:         4       0       0       0       0
  5015 ;;      Temps:          2       0       0       0       0
  5016 ;;      Totals:         7       0       0       0       0
  5017 ;;Total ram usage:        7 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    1
  5020 ;; This function calls:
  5021 ;;		i1_LCDBusyLoop
  5022 ;; This function is called by:
  5023 ;;		_ISR
  5024 ;;		i1_LCDWriteString
  5025 ;;		i1_LCDWriteInt
  5026 ;;		i1_LCDGotoXY
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           
  5031                           ;psect for function i1_LCDByte
  5032  0F4E                     i1_LCDByte:	
  5033                           
  5034                           ;incstack = 0
  5035                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  5036                           ;i1LCDByte@c stored from wreg
  5037  0F4E  00F8               	movwf	i1LCDByte@c
  5038                           
  5039                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  5040                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  5041                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  5042  0F4F  0878               	movf	i1LCDByte@c,w
  5043  0F50  00F6               	movwf	??i1_LCDByte
  5044  0F51  3004               	movlw	4
  5045  0F52                     u198_25:	
  5046  0F52  1003               	clrc
  5047  0F53  0CF6               	rrf	??i1_LCDByte,f
  5048  0F54  3EFF               	addlw	-1
  5049  0F55  1D03               	skipz
  5050  0F56  2F52               	goto	u198_25
  5051  0F57  0876               	movf	??i1_LCDByte,w
  5052  0F58  00F7               	movwf	??i1_LCDByte+1
  5053  0F59  0877               	movf	??i1_LCDByte+1,w
  5054  0F5A  00F9               	movwf	i1LCDByte@hn
  5055                           
  5056                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  5057  0F5B  0878               	movf	i1LCDByte@c,w
  5058  0F5C  390F               	andlw	15
  5059  0F5D  00F6               	movwf	??i1_LCDByte
  5060  0F5E  0876               	movf	??i1_LCDByte,w
  5061  0F5F  00FA               	movwf	i1LCDByte@ln
  5062                           
  5063                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  5064  0F60  0875               	movf	i1LCDByte@isdata,w
  5065  0F61  1D03               	btfss	3,2
  5066  0F62  2F67               	goto	i1l116
  5067                           
  5068                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  5069  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  5070  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  5071  0F65  1087               	bcf	7,1	;volatile
  5072  0F66  2F6A               	goto	i1l117
  5073  0F67                     i1l116:	
  5074                           
  5075                           ;lcd_hd44780_pic16.c: 97: else
  5076                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  5077  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  5078  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  5079  0F69  1487               	bsf	7,1	;volatile
  5080  0F6A                     i1l117:	
  5081                           
  5082                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5083  0F6A  2F6B               	nop2	;2 cycle nop
  5084                           
  5085                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  5086  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  5087  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  5088  0F6D  1587               	bsf	7,3	;volatile
  5089                           
  5090                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  5091  0F6E  0879               	movf	i1LCDByte@hn,w
  5092  0F6F  00F6               	movwf	??i1_LCDByte
  5093  0F70  3004               	movlw	4
  5094  0F71                     u200_25:	
  5095  0F71  1003               	clrc
  5096  0F72  0DF6               	rlf	??i1_LCDByte,f
  5097  0F73  3EFF               	addlw	-1
  5098  0F74  1D03               	skipz
  5099  0F75  2F71               	goto	u200_25
  5100  0F76  0807               	movf	7,w	;volatile
  5101  0F77  390F               	andlw	15
  5102  0F78  0476               	iorwf	??i1_LCDByte,w
  5103  0F79  00F7               	movwf	??i1_LCDByte+1
  5104  0F7A  0877               	movf	??i1_LCDByte+1,w
  5105  0F7B  00FB               	movwf	i1LCDByte@temp
  5106                           
  5107                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  5108  0F7C  087B               	movf	i1LCDByte@temp,w
  5109  0F7D  0087               	movwf	7	;volatile
  5110                           
  5111                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5112  0F7E  2F7F               	nop2	;2 cycle nop
  5113  0F7F  2F80               	nop2	;2 cycle nop
  5114  0F80  0000               	nop
  5115                           
  5116                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  5117  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  5118  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  5119  0F83  1187               	bcf	7,3	;volatile
  5120                           
  5121                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5122  0F84  2F85               	nop2	;2 cycle nop
  5123  0F85  2F86               	nop2	;2 cycle nop
  5124  0F86  0000               	nop
  5125                           
  5126                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  5127  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  5128  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  5129  0F89  1587               	bsf	7,3	;volatile
  5130                           
  5131                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  5132  0F8A  087A               	movf	i1LCDByte@ln,w
  5133  0F8B  00F6               	movwf	??i1_LCDByte
  5134  0F8C  3004               	movlw	4
  5135  0F8D                     u201_25:	
  5136  0F8D  1003               	clrc
  5137  0F8E  0DF6               	rlf	??i1_LCDByte,f
  5138  0F8F  3EFF               	addlw	-1
  5139  0F90  1D03               	skipz
  5140  0F91  2F8D               	goto	u201_25
  5141  0F92  0807               	movf	7,w	;volatile
  5142  0F93  390F               	andlw	15
  5143  0F94  0476               	iorwf	??i1_LCDByte,w
  5144  0F95  00F7               	movwf	??i1_LCDByte+1
  5145  0F96  0877               	movf	??i1_LCDByte+1,w
  5146  0F97  00FB               	movwf	i1LCDByte@temp
  5147                           
  5148                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  5149  0F98  087B               	movf	i1LCDByte@temp,w
  5150  0F99  0087               	movwf	7	;volatile
  5151                           
  5152                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5153  0F9A  2F9B               	nop2	;2 cycle nop
  5154  0F9B  2F9C               	nop2	;2 cycle nop
  5155  0F9C  0000               	nop
  5156                           
  5157                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  5158  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  5159  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  5160  0F9F  1187               	bcf	7,3	;volatile
  5161                           
  5162                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5163  0FA0  2FA1               	nop2	;2 cycle nop
  5164  0FA1  2FA2               	nop2	;2 cycle nop
  5165  0FA2  0000               	nop
  5166                           
  5167                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  5168  0FA3  120A  118A  26EA   	fcall	i1_LCDBusyLoop
  5169  0FA6  0008               	return
  5170  0FA7                     __end_ofi1_LCDByte:	
  5171                           
  5172                           	psect	text24
  5173  06EA                     __ptext24:	
  5174 ;; *************** function i1_LCDBusyLoop *****************
  5175 ;; Defined at:
  5176 ;;		line 135 in file "lcd_hd44780_pic16.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  5181 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  5182 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5192 ;;      Params:         0       0       0       0       0
  5193 ;;      Locals:         3       0       0       0       0
  5194 ;;      Temps:          2       0       0       0       0
  5195 ;;      Totals:         5       0       0       0       0
  5196 ;;Total ram usage:        5 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		i1_LCDByte
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           
  5206                           ;psect for function i1_LCDBusyLoop
  5207  06EA                     i1_LCDBusyLoop:	
  5208                           
  5209                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  5210                           
  5211                           ;incstack = 0
  5212                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  5213  06EA  01F4               	clrf	i1LCDBusyLoop@status
  5214                           
  5215                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  5216  06EB  30F0               	movlw	240
  5217  06EC  00F0               	movwf	??i1_LCDBusyLoop
  5218  06ED  0870               	movf	??i1_LCDBusyLoop,w
  5219  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  5220  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  5221  06F0  0487               	iorwf	7,f	;volatile
  5222                           
  5223                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  5224  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  5225  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  5226  06F3  1507               	bsf	7,2	;volatile
  5227                           
  5228                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  5229  06F4  1087               	bcf	7,1	;volatile
  5230                           
  5231                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5232  06F5  2EF6               	nop2	;2 cycle nop
  5233  06F6                     i1l1510:	
  5234                           ;lcd_hd44780_pic16.c: 153: do
  5235                           
  5236                           
  5237                           ;lcd_hd44780_pic16.c: 154: {
  5238                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  5239  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  5240  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  5241  06F8  1587               	bsf	7,3	;volatile
  5242                           
  5243                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5244  06F9  2EFA               	nop2	;2 cycle nop
  5245                           
  5246                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  5247  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  5248  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  5249  06FC  0807               	movf	7,w	;volatile
  5250  06FD  00F0               	movwf	??i1_LCDBusyLoop
  5251  06FE  3004               	movlw	4
  5252  06FF                     u146_25:	
  5253  06FF  1003               	clrc
  5254  0700  0CF0               	rrf	??i1_LCDBusyLoop,f
  5255  0701  3EFF               	addlw	-1
  5256  0702  1D03               	skipz
  5257  0703  2EFF               	goto	u146_25
  5258  0704  0870               	movf	??i1_LCDBusyLoop,w
  5259  0705  00F1               	movwf	??i1_LCDBusyLoop+1
  5260  0706  0871               	movf	??i1_LCDBusyLoop+1,w
  5261  0707  00F4               	movwf	i1LCDBusyLoop@status
  5262                           
  5263                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  5264  0708  0874               	movf	i1LCDBusyLoop@status,w
  5265  0709  00F0               	movwf	??i1_LCDBusyLoop
  5266  070A  3003               	movlw	3
  5267  070B                     u147_25:	
  5268  070B  1003               	clrc
  5269  070C  0DF0               	rlf	??i1_LCDBusyLoop,f
  5270  070D  3EFF               	addlw	-1
  5271  070E  1D03               	skipz
  5272  070F  2F0B               	goto	u147_25
  5273  0710  1003               	clrc
  5274  0711  0D70               	rlf	??i1_LCDBusyLoop,w
  5275  0712  00F1               	movwf	??i1_LCDBusyLoop+1
  5276  0713  0871               	movf	??i1_LCDBusyLoop+1,w
  5277  0714  00F4               	movwf	i1LCDBusyLoop@status
  5278                           
  5279                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5280  0715  2F16               	nop2	;2 cycle nop
  5281                           
  5282                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  5283  0716  1283               	bcf	3,5	;RP0=0, select bank0
  5284  0717  1303               	bcf	3,6	;RP1=0, select bank0
  5285  0718  1187               	bcf	7,3	;volatile
  5286                           
  5287                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5288  0719  2F1A               	nop2	;2 cycle nop
  5289  071A  2F1B               	nop2	;2 cycle nop
  5290  071B  0000               	nop
  5291                           
  5292                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  5293  071C  1283               	bcf	3,5	;RP0=0, select bank0
  5294  071D  1303               	bcf	3,6	;RP1=0, select bank0
  5295  071E  1587               	bsf	7,3	;volatile
  5296                           
  5297                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5298  071F  2F20               	nop2	;2 cycle nop
  5299                           
  5300                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  5301  0720  1283               	bcf	3,5	;RP0=0, select bank0
  5302  0721  1303               	bcf	3,6	;RP1=0, select bank0
  5303  0722  0807               	movf	7,w	;volatile
  5304  0723  00F0               	movwf	??i1_LCDBusyLoop
  5305  0724  3004               	movlw	4
  5306  0725                     u148_25:	
  5307  0725  1003               	clrc
  5308  0726  0CF0               	rrf	??i1_LCDBusyLoop,f
  5309  0727  3EFF               	addlw	-1
  5310  0728  1D03               	skipz
  5311  0729  2F25               	goto	u148_25
  5312  072A  0870               	movf	??i1_LCDBusyLoop,w
  5313  072B  00F1               	movwf	??i1_LCDBusyLoop+1
  5314  072C  0871               	movf	??i1_LCDBusyLoop+1,w
  5315  072D  00F3               	movwf	i1LCDBusyLoop@temp
  5316                           
  5317                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  5318  072E  300F               	movlw	15
  5319  072F  00F0               	movwf	??i1_LCDBusyLoop
  5320  0730  0870               	movf	??i1_LCDBusyLoop,w
  5321  0731  05F3               	andwf	i1LCDBusyLoop@temp,f
  5322                           
  5323                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  5324  0732  0874               	movf	i1LCDBusyLoop@status,w
  5325  0733  0473               	iorwf	i1LCDBusyLoop@temp,w
  5326  0734  00F0               	movwf	??i1_LCDBusyLoop
  5327  0735  0870               	movf	??i1_LCDBusyLoop,w
  5328  0736  00F4               	movwf	i1LCDBusyLoop@status
  5329                           
  5330                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  5331  0737  0874               	movf	i1LCDBusyLoop@status,w
  5332  0738  3980               	andlw	128
  5333  0739  00F0               	movwf	??i1_LCDBusyLoop
  5334  073A  0870               	movf	??i1_LCDBusyLoop,w
  5335  073B  00F2               	movwf	i1LCDBusyLoop@busy
  5336                           
  5337                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5338  073C  2F3D               	nop2	;2 cycle nop
  5339                           
  5340                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  5341  073D  1283               	bcf	3,5	;RP0=0, select bank0
  5342  073E  1303               	bcf	3,6	;RP1=0, select bank0
  5343  073F  1187               	bcf	7,3	;volatile
  5344                           
  5345                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5346  0740  2F41               	nop2	;2 cycle nop
  5347  0741  2F42               	nop2	;2 cycle nop
  5348  0742  0000               	nop
  5349                           
  5350                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  5351  0743  0872               	movf	i1LCDBusyLoop@busy,w
  5352  0744  1D03               	btfss	3,2
  5353  0745  2EF6               	goto	i1l1510
  5354                           
  5355                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  5356  0746  1283               	bcf	3,5	;RP0=0, select bank0
  5357  0747  1303               	bcf	3,6	;RP1=0, select bank0
  5358  0748  1107               	bcf	7,2	;volatile
  5359                           
  5360                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  5361  0749  300F               	movlw	15
  5362  074A  00F0               	movwf	??i1_LCDBusyLoop
  5363  074B  0870               	movf	??i1_LCDBusyLoop,w
  5364  074C  1683               	bsf	3,5	;RP0=1, select bank1
  5365  074D  1303               	bcf	3,6	;RP1=0, select bank1
  5366  074E  0587               	andwf	7,f	;volatile
  5367  074F  0008               	return
  5368  0750                     __end_ofi1_LCDBusyLoop:	
  5369  007E                     btemp	set	126	;btemp
  5370  007E                     wtemp	set	126
  5371  007E                     wtemp0	set	126
  5372  0080                     wtemp1	set	128
  5373  0082                     wtemp2	set	130
  5374  0084                     wtemp3	set	132
  5375  0086                     wtemp4	set	134
  5376  0088                     wtemp5	set	136
  5377  007F                     wtemp6	set	127
  5378  007E                     ttemp	set	126
  5379  007E                     ttemp0	set	126
  5380  0081                     ttemp1	set	129
  5381  0084                     ttemp2	set	132
  5382  0087                     ttemp3	set	135
  5383  007F                     ttemp4	set	127
  5384  007E                     ltemp	set	126
  5385  007E                     ltemp0	set	126
  5386  0082                     ltemp1	set	130
  5387  0086                     ltemp2	set	134
  5388  0080                     ltemp3	set	128


Data Sizes:
    Strings     43
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      61
    BANK1            80     34      36
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[5]), 
		 -> STR_2(CODE[4]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    i1_LCDWriteString->i1_LCDByte
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt
    _LM35ReadTemp->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _main->_LM35ReadTemp
    _LM35ReadTemp->___fttol
    ___fttol->___ftmul

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   14759
                                             20 BANK1     14    14      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                       _LM35ReadTemp
                     _TuneButtonInit
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35ReadTemp                                         7     5      2    5942
                                             16 BANK1      4     2      2
                            _ReadADC
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2452
                                             27 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             41 BANK0      4     0      4
                                              6 BANK1     10    10      0
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2986
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             19 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2      22
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    1560
                                             31 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2893
                                             31 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                             19 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1288
                                             31 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1995
                                             31 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1081
                                             24 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                             19 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    3347
                                             12 BANK0      7     7      0
                          i1_LCDByte
                        i1_LCDGotoXY
                      i1_LCDWriteInt
                   i1_LCDWriteString
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteString                                     3     3      0     662
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    1597
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     605
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     483
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LM35ReadTemp
     _ReadADC
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _TuneButtonInit

 _ISR (ROOT)
   i1_LCDByte
     i1_LCDBusyLoop
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod
   i1_LCDWriteString
     i1_LCDByte
       i1_LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      24       7       45.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2D      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6F      12        0.0%
ABS                  0      0      6F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jun 18 16:00:36 2016

             ?_LCDBusyLoop 0070                 __CFG_CP$ON 0000         ??i1_LCDWriteString 007C  
                        pc 0002                         l20 0D31                __CFG_CPD$ON 0000  
             ___awdiv@sign 0039                         fsr 0004                __CFG_LVP$ON 0000  
                      l116 0F10                        l117 0F11                        l162 0D81  
                      l163 0D6A                        l422 058B                        l423 0593  
                      l415 0576                        l506 03D6                        _RA0 0028  
                      _RA1 0029                        _RB0 0030                        _RA2 002A  
                      _RB1 0031                        _RA3 002B                        _RB2 0032  
                      _RC1 0039                        _RB3 0033                        _RC2 003A  
                      _RA6 002E                        _RC3 003B                        _RA7 002F  
                      _ISR 05AC                        fsr0 0004            __end_of_ADCInit 0D05  
                      indf 0000               ___awmod@sign 0039               __CFG_IESO$ON 0000  
    LM35ReadTemp@adc_value 00B2    LCDWriteInt@field_length 0041            __end_of_LCDByte 0F4E  
          __end_of_LCDInit 0682               ?_LCDWriteInt 003F                       ?_ISR 0070  
              LCDByte@temp 003E                       l2220 055B                       l2230 0585  
                     l2222 0560                       l2214 0548                       l1432 0690  
                     l1600 0767                       l2400 01AC                       l1610 076F  
                     l2218 054F                       l2330 03E9                       l2402 01C2  
                     l1612 077D                       l2228 057B                       l2324 03C9  
                     l2316 03A8                       l2404 01DB                       l1622 079E  
                     l2270 02B3                       l2254 0238                       l2326 03DB  
                     l2318 03BA                       l2406 01F7                       l2248 021D  
                     l1626 07A6                       l1618 0793                       l1650 0E73  
                     l1642 0E6D                       l2282 02F4                       l2266 0291  
                     l1652 0E81                       l1660 0E9A                       l1638 0E66  
                     l2278 02D2                       l2390 0118                       l1664 0EA2  
                     l1656 0E8F                       l1594 075C                       l1914 07DC  
                     l1922 07AE                       l2298 035D                       l2394 0143  
                     l1918 07E6                       l1890 0D6C                       l1946 042E  
                     l1892 0D6E                       l1956 0478                       l1948 0463  
                     l1896 0D73                       STR_1 0806               __CFG_WDTE$ON 0000  
                     STR_2 0829                       STR_3 0817                       STR_4 0829  
                     STR_5 0825                       STR_6 081C                       STR_7 0829  
                     STR_8 082D                       STR_9 0821                       u1305 0699  
                     u3010 01BF                       u1315 06A5                       u1325 06BF  
                     u3030 01D8                       u2305 0485                       u3050 01F4  
                     u1515 0EFD                       u1605 077E                       u1535 0F18  
                     u1615 078A                       u1545 0F34                       u1625 0794  
                     u1705 0E87                       u1715 0E90                       u3077 0D2B  
                     u3087 0621                       u2615 0554                       u1585 0772  
                     u2635 056F                       u2811 02E5                       u2812 02F0  
                     u1685 0E76                       u2655 057E                       u2735 024C  
                     u2825 02F5                       u2761 02A4                       u2745 0262  
                     u2762 02AF                       u2835 02FE                       u2925 03CD  
                     u2695 059A                       u2775 02B4                       u2785 02BD  
                     u2865 036F                       u2955 00F5                       u2965 010B  
                     u2990 01A9                       u2895 03A9                       u2975 0132  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 002B  
             ___ftpack@arg 0033     __end_of_TuneButtonInit 0DC3         __size_of_LCDGotoXY 0026  
             ___ftpack@exp 0036                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0012                       ttemp 007E  
                     wtemp 007E  i1LCDWriteInt@field_length 0022              __CFG_MCLRE$ON 0000  
             ___ftmul@cntr 00A4               ___ftmul@sign 00A5            __end_of_ReadADC 0D3C  
                    ??_ISR 002C         __size_ofi1_LCDByte 0059               ___fttol@exp1 00AF  
             ___fttol@lval 00AB               ?i1_LCDGotoXY 007C                      ?_main 0070  
           i1___awdiv@sign 0076            __end_of___awdiv 07AB                      STR_10 082D  
          __end_of___awmod 0EA7               LCDInit@style 0041            __end_of___ftmul 0337  
          ___awdiv@divisor 0033            __end_of___fttol 0400                      i1l116 0F67  
                    i1l117 0F6A                      i1l162 0D5B                      i1l163 0D44  
          ___awdiv@counter 0038                      _PORTC 0007                      _TRISC 0087  
           i1___awmod@sign 0076              ___ftpack@sign 0037       __end_of_LM35ReadTemp 0E5A  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          ?_TuneButtonInit 0070         __size_ofi1___awdiv 0059         __size_ofi1___awmod 004B  
          __initialization 0015               __end_of_main 0201                  ??_ADCInit 0033  
                   ??_main 00B4              ___fttol@sign1 00AA          __end_of_LCDGotoXY 0D88  
            LCDByte@isdata 0038                  ??_LCDByte 0039                  ??_LCDInit 003F  
                   _ADRESH 001E                     _ADRESL 009E           ___awdiv@dividend 0035  
        __end_ofi1_LCDByte 0FA7           __end_of___ftpack 05AC     __size_ofi1_LCDBusyLoop 0066  
                   i1l2100 0D4D                     i1l2040 0EE0                     i1l2130 060A  
                   i1l2036 0ED8                     i1l2044 0EAA                     i1l1510 06F6  
                   i1l2070 0502                     i1l2118 05D9                     i1l2068 04CD  
                   u200_25 0F71                     i1l2094 0D46                     i1l2078 0517  
                   i1l2096 0D48                     i1l1802 0FB1                     i1l1820 0FD2  
                   u201_25 0F8D                     i1l1830 0FF3                     i1l1808 0FBC  
                   i1l1834 0FFB                     i1l1826 0FE8                     i1l1818 0FC4  
                   i1l1850 0DD4                     i1l1860 0DE8                     i1l1846 0DCD  
                   i1l1872 0E09                     i1l1864 0DF6                     i1l1858 0DDA  
                   i1l1868 0E01        i1LCDBusyLoop@status 0074                     u205_25 0FC7  
                   u207_25 0FD3                     u215_25 0DDD                     u208_25 0FDF  
                   u209_25 0FE9                     u217_25 0DEE                     u146_25 06FF  
                   u218_25 0DF7                     u242_25 0524                     u147_25 070B  
                   u148_25 0725                     u309_27 05FE                     u246_25 05D3  
         __end_of___lwtoft 0D1D                     u198_25 0F52                  ??_ReadADC 0035  
            _tuneUpTempDir 005A             __CFG_PWRTE$OFF 0000             _LCDWriteString 07AB  
                ??___awdiv 0037                  ??___awmod 0037                  ??___ftmul 0045  
                ??___fttol 00A6     __size_ofi1_LCDWriteInt 009F       __size_of_LCDBusyLoop 0068  
         i1LCDWriteInt@val 0020           i1LCDWriteInt@str 0023           ___awdiv@quotient 003A  
          ___awmod@divisor 0033            ___awmod@counter 0038      ___ftmul@f3_as_product 00A1  
        __end_ofi1___awdiv 1000          __end_ofi1___awmod 0E0E               LCDWriteInt@i 004B  
             LCDWriteInt@j 0049                     saved_w 007E       __size_of_LCDWriteInt 009F  
  __end_of__initialization 0027     __end_of_LCDWriteString 07FD                  LCDByte@hn 003B  
                LCDByte@ln 003C                 ___ftmul@f1 003F                 ___ftmul@f2 0042  
               ___fttol@f1 0049             __pcstackCOMMON 0070               __pidataBANK0 0CD2  
            i1_LCDBusyLoop 06EA                 ___lwtoft@c 003B               i1LCDGotoXY@x 0020  
             i1LCDGotoXY@y 007C          i1LCDBusyLoop@busy 0072          i1LCDBusyLoop@temp 0073  
     __size_ofi1_LCDGotoXY 0026  __size_ofi1_LCDWriteString 0050      __size_of_LM35ReadTemp 004C  
           i1LCDWriteInt@i 002A             i1LCDWriteInt@j 0028            i1LCDByte@isdata 0075  
            i1_LCDWriteInt 049F                 __pbssBANK0 005B                 __pbssBANK1 00C2  
          ?_LCDWriteString 0070                 __pmaintext 002B             ?i1_LCDBusyLoop 0070  
               __pintentry 0004                    _ADCInit 0CF1               _LM35ReadTemp 0E0E  
                ?___ftpack 0033                  ?___lwtoft 003B         i1___awdiv@dividend 0072  
                  _LCDByte 0EF7                    _LCDInit 061A           ??_TuneButtonInit 0033  
           ?i1_LCDWriteInt 0020                 __stringtab 0800                    _ReadADC 0D1D  
       i1___awdiv@quotient 0077                    ___cgram 004D                    ___awdiv 0750  
                  ___awmod 0E5A                    ___ftmul 0201                    ___fttol 0337  
               ??___ftpack 0038                  _ANSELbits 0188                    __ptext1 0D88  
                  __ptext2 0E0E                    __ptext3 0D05                    __ptext4 0337  
                  __ptext5 0201                    __ptext6 053E                    __ptext7 0D1D  
                  __ptext8 07AB                    __ptext9 0400                 ??___lwtoft 003E  
                  _curTemp 00C2               __size_of_ISR 006E           ___awmod@dividend 0035  
                _LCDGotoXY 0D62       end_of_initialization 0027                  i1_LCDByte 0F4E  
          ??i1_LCDBusyLoop 0070          LCDWriteString@msg 0041           i1_LCDWriteString 0EA7  
                _TRISAbits 0085                  _TRISBbits 0086                  _TRISCbits 0087  
          ??i1_LCDWriteInt 007C                 ?_LCDGotoXY 003F                  i1___awdiv 0FA7  
                i1___awmod 0DC3                  ReadADC@ch 0036                 LCDInit@__i 0042  
               ?i1_LCDByte 0075                 LCDGotoXY@x 0041                 LCDGotoXY@y 003F  
               _tuneUpTemp 005B                ___ftmul@exp 00A0              ??_LCDBusyLoop 0033  
      start_initialization 0015                __end_of_ISR 061A                 ?i1___awdiv 0070  
               ?i1___awmod 0070              ??_LCDWriteInt 0042           ??_LCDWriteString 003F  
            i1LCDByte@temp 007B   __CFG_FOSC$INTRC_NOCLKOUT 0000                 init_fetch0 0CE0  
              __pdataBANK0 004D         i1___awmod@dividend 0072                   ?_ADCInit 0070  
            ??i1_LCDGotoXY 007D        __end_of_LCDBusyLoop 06EA                   ?_LCDByte 0038  
                 ?_LCDInit 0070          __size_of___ftpack 006E                   LCDByte@c 003D  
                ___latbits 0002          __size_of___lwtoft 0018              __pcstackBANK0 0020  
            __pcstackBANK1 00A0                ??_LCDGotoXY 0040                i1LCDByte@hn 0079  
              i1LCDByte@ln 007A           LCDWriteInt@F1632 0055                ??i1_LCDByte 0076  
                 ?_ReadADC 0033        __end_of_LCDWriteInt 049F                   ?___awdiv 0033  
                 ?___awmod 0033                   ?___ftmul 003F                   ?___fttol 0049  
        i1___awdiv@divisor 0070          i1___awdiv@counter 0075                  __pstrings 0800  
      __end_ofi1_LCDGotoXY 0D62            LCDBusyLoop@busy 0035                ??i1___awdiv 0074  
              ??i1___awmod 0074            LCDBusyLoop@temp 0036          interrupt_function 0004  
                 _IOCBbits 0096   __end_ofi1_LCDWriteString 0EF7                _LCDBusyLoop 0682  
         LCDWriteString@cc 0040           __size_of_ADCInit 0014                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F           __size_of_LCDByte 0057  
         __size_of_LCDInit 0068                _LCDWriteInt 0400           __size_of_ReadADC 001F  
  __size_of_TuneButtonInit 003B      __end_ofi1_LCDBusyLoop 0750          i1___awmod@divisor 0070  
        i1___awmod@counter 0075           __size_of___awdiv 005B           __size_of___awmod 004D  
         __size_of___ftmul 0136           __size_of___fttol 00C9          LCDBusyLoop@status 0037  
                 ___ftpack 053E         __end_of__stringtab 0806                i1_LCDGotoXY 0D3C  
                 ___lwtoft 0D05                 i1LCDByte@c 0078                 _ANSELHbits 0189  
                 __ptext10 0E5A                   __ptext11 0750                   __ptext20 0DC3  
                 __ptext12 061A                   __ptext21 0FA7                   __ptext13 0D62  
                 __ptext22 0D3C                   __ptext14 0EF7                   __ptext23 0F4E  
                 __ptext15 0682                   __ptext24 06EA                   __ptext16 0CF1  
                 __ptext17 05AC                   __ptext18 0EA7                   __ptext19 049F  
        __CFG_BOR4V$BOR21V 0000      __end_ofi1_LCDWriteInt 053E              __size_of_main 01D6  
      i1LCDWriteString@msg 0020              ?_LM35ReadTemp 00B0                 _INTCONbits 000B  
                 init_ram0 0CE4                   intlevel1 0000             LCDWriteInt@val 003F  
           LCDWriteInt@str 0044         i1LCDWriteString@cc 0021                  stringcode 0800  
           ??_LM35ReadTemp 004D                   stringdir 0800                   stringtab 0800  
           _TuneButtonInit 0D88          ?i1_LCDWriteString 0070    __size_of_LCDWriteString 0052  
