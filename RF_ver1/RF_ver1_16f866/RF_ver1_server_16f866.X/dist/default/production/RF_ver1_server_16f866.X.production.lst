

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jun 18 19:24:31 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0009                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  0089                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  008F                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0093                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  0105                     	;# 
   105  0107                     	;# 
   106  0108                     	;# 
   107  0109                     	;# 
   108  010C                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0185                     	;# 
   114  0187                     	;# 
   115  0188                     	;# 
   116  0189                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  008F                     	;# 
   162  0090                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0093                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0097                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  0105                     	;# 
   181  0107                     	;# 
   182  0108                     	;# 
   183  0109                     	;# 
   184  010C                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0185                     	;# 
   190  0187                     	;# 
   191  0188                     	;# 
   192  0189                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  008F                     	;# 
   238  0090                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0093                     	;# 
   243  0093                     	;# 
   244  0094                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  0105                     	;# 
   257  0107                     	;# 
   258  0108                     	;# 
   259  0109                     	;# 
   260  010C                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  010F                     	;# 
   265  0185                     	;# 
   266  0187                     	;# 
   267  0188                     	;# 
   268  0189                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  000E                     	;# 
   286  000F                     	;# 
   287  0010                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0014                     	;# 
   292  0015                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  001D                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  0081                     	;# 
   306  0085                     	;# 
   307  0086                     	;# 
   308  0087                     	;# 
   309  0089                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  008F                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0093                     	;# 
   318  0093                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0095                     	;# 
   322  0096                     	;# 
   323  0097                     	;# 
   324  0098                     	;# 
   325  0099                     	;# 
   326  009A                     	;# 
   327  009B                     	;# 
   328  009C                     	;# 
   329  009D                     	;# 
   330  009E                     	;# 
   331  009F                     	;# 
   332  0105                     	;# 
   333  0107                     	;# 
   334  0108                     	;# 
   335  0109                     	;# 
   336  010C                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  0185                     	;# 
   342  0187                     	;# 
   343  0188                     	;# 
   344  0189                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347                           
   348                           	psect	idataBANK0
   349  0BFC                     __pidataBANK0:	
   350                           
   351                           ;initializer for ___cgram
   352  0BFC  340C               	retlw	12
   353  0BFD  3412               	retlw	18
   354  0BFE  3412               	retlw	18
   355  0BFF  340C               	retlw	12
   356  0C00  3400               	retlw	0
   357  0C01  3400               	retlw	0
   358  0C02  3400               	retlw	0
   359  0C03  3400               	retlw	0
   360                           
   361                           ;initializer for LCDWriteInt@F1642
   362  0C04  34F0               	retlw	240
   363  0C05  34F0               	retlw	240
   364  0C06  34F0               	retlw	240
   365  0C07  34F0               	retlw	240
   366  0C08  34F0               	retlw	240
   367                           
   368                           ;initializer for _phMsg
   369  0C09  34A0               	retlw	low (_msg| 0)
   370                           
   371                           ;initializer for _tuneUpTempDir
   372  0C0A  3401               	retlw	1
   373                           
   374                           	psect	idataBANK1
   375  0C67                     __pidataBANK1:	
   376                           
   377                           ;initializer for _msg
   378  0C67  3430               	retlw	48
   379  0C68  3431               	retlw	49
   380  0C69  3432               	retlw	50
   381  0C6A  3433               	retlw	51
   382  0C6B  3434               	retlw	52
   383  0C6C  3400               	retlw	0
   384  0C6D  3400               	retlw	0
   385  0C6E  3400               	retlw	0
   386  0C6F  3400               	retlw	0
   387  0C70  3400               	retlw	0
   388  0C71  3400               	retlw	0
   389  0C72  3400               	retlw	0
   390  0C73  3400               	retlw	0
   391  0C74  3400               	retlw	0
   392  0C75  3400               	retlw	0
   393  0C76  3400               	retlw	0
   394  0C77  3400               	retlw	0
   395  0C78  3400               	retlw	0
   396  0C79  3400               	retlw	0
   397  0C7A  3400               	retlw	0
   398  0C7B  3400               	retlw	0
   399  0C7C  3400               	retlw	0
   400  0C7D  3400               	retlw	0
   401  0C7E  3400               	retlw	0
   402  0C7F  3400               	retlw	0
   403  0C80  3400               	retlw	0
   404  0C81  3400               	retlw	0
   405  0C82  3400               	retlw	0
   406  0C83  3400               	retlw	0
   407  0C84  3400               	retlw	0
   408  0C85  3400               	retlw	0
   409  0C86  3400               	retlw	0
   410  001F                     _ADCON0bits	set	31
   411  001E                     _ADRESH	set	30
   412  000B                     _INTCONbits	set	11
   413  0007                     _PORTC	set	7
   414  002E                     _RA6	set	46
   415  002F                     _RA7	set	47
   416  0030                     _RB0	set	48
   417  0031                     _RB1	set	49
   418  0032                     _RB2	set	50
   419  0033                     _RB3	set	51
   420  0039                     _RC1	set	57
   421  003A                     _RC2	set	58
   422  003B                     _RC3	set	59
   423  009F                     _ADCON1bits	set	159
   424  009E                     _ADRESL	set	158
   425  0096                     _IOCBbits	set	150
   426  0085                     _TRISAbits	set	133
   427  0086                     _TRISBbits	set	134
   428  0087                     _TRISC	set	135
   429  0087                     _TRISCbits	set	135
   430  0189                     _ANSELHbits	set	393
   431  0188                     _ANSELbits	set	392
   432                           
   433                           	psect	strings
   434  07C5                     __pstrings:	
   435  07C5                     stringtab:	
   436  07C5                     __stringtab:	
   437                           
   438                           ;	String table - string pointers are 1 byte each
   439  07C5  1BFF               	btfsc	btemp+1,7
   440  07C6  2FCF               	ljmp	stringcode
   441  07C7  1383               	bcf	3,7
   442  07C8  187F               	btfsc	btemp+1,0
   443  07C9  1783               	bsf	3,7
   444  07CA  0800               	movf	0,w
   445  07CB  0A84               	incf	4,f
   446  07CC  1903               	skipnz
   447  07CD  0AFF               	incf	btemp+1,f
   448  07CE  0008               	return
   449  07CF                     stringcode:	
   450  07CF                     stringdir:	
   451  07CF  3007               	movlw	high stringdir
   452  07D0  008A               	movwf	10
   453  07D1  0804               	movf	4,w
   454  07D2  0A84               	incf	4,f
   455  07D3  0782               	addwf	2,f
   456  07D4                     __stringbase:	
   457  07D4  3400               	retlw	0
   458  07D5                     __end_of__stringtab:	
   459  07D5                     STR_1:	
   460  07D5  3454               	retlw	84	;'T'
   461  07D6  3468               	retlw	104	;'h'
   462  07D7  3465               	retlw	101	;'e'
   463  07D8  3472               	retlw	114	;'r'
   464  07D9  346D               	retlw	109	;'m'
   465  07DA  346F               	retlw	111	;'o'
   466  07DB  346D               	retlw	109	;'m'
   467  07DC  3465               	retlw	101	;'e'
   468  07DD  3474               	retlw	116	;'t'
   469  07DE  3465               	retlw	101	;'e'
   470  07DF  3472               	retlw	114	;'r'
   471  07E0  3420               	retlw	32	;' '
   472  07E1  3473               	retlw	115	;'s'
   473  07E2  3465               	retlw	101	;'e'
   474  07E3  3474               	retlw	116	;'t'
   475  07E4  343A               	retlw	58	;':'
   476  07E5  3400               	retlw	0
   477  07E6                     STR_3:	
   478  07E6  3443               	retlw	67	;'C'
   479  07E7  3475               	retlw	117	;'u'
   480  07E8  3472               	retlw	114	;'r'
   481  07E9  343A               	retlw	58	;':'
   482  07EA  3400               	retlw	0
   483  07EB                     STR_6:	
   484  07EB  344D               	retlw	77	;'M'
   485  07EC  3461               	retlw	97	;'a'
   486  07ED  3478               	retlw	120	;'x'
   487  07EE  343A               	retlw	58	;':'
   488  07EF  3400               	retlw	0
   489  07F0                     STR_9:	
   490  07F0  344F               	retlw	79	;'O'
   491  07F1  344E               	retlw	78	;'N'
   492  07F2  3420               	retlw	32	;' '
   493  07F3  3400               	retlw	0
   494  07F4                     STR_5:	
   495  07F4  3457               	retlw	87	;'W'
   496  07F5  3461               	retlw	97	;'a'
   497  07F6  343A               	retlw	58	;':'
   498  07F7  3400               	retlw	0
   499  07F8                     STR_2:	
   500  07F8  3425               	retlw	37	;'%'
   501  07F9  3430               	retlw	48	;'0'
   502  07FA  3443               	retlw	67	;'C'
   503  07FB  3400               	retlw	0
   504  07FC                     STR_8:	
   505  07FC  344F               	retlw	79	;'O'
   506  07FD  3446               	retlw	70	;'F'
   507  07FE  3446               	retlw	70	;'F'
   508  07FF  3400               	retlw	0
   509  07F8                     
   510                           ; #config settings
   511  0000                     
   512                           	psect	cinit
   513  0015                     start_initialization:	
   514  0015                     __initialization:	
   515                           
   516                           ; Clear objects allocated to BANK0
   517  0015  01DA               	clrf	__pbssBANK0& (0+127)
   518  0016  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   519                           
   520                           ; Clear objects allocated to BANK1
   521  0017  1683               	bsf	3,5	;RP0=1, select bank1
   522  0018  1303               	bcf	3,6	;RP1=0, select bank1
   523  0019  01DC               	clrf	__pbssBANK1& (0+127)
   524  001A  01DD               	clrf	(__pbssBANK1+1)& (0+127)
   525                           
   526                           ; Initialize objects allocated to BANK1
   527  001B  1383               	bcf	3,7	;select IRP bank0
   528  001C  30C0               	movlw	low (__pdataBANK1+32)
   529  001D  00FD               	movwf	btemp+-1
   530  001E  300C               	movlw	high __pidataBANK1
   531  001F  00FE               	movwf	btemp
   532  0020  3067               	movlw	low __pidataBANK1
   533  0021  00FF               	movwf	btemp+1
   534  0022  30A0               	movlw	low __pdataBANK1
   535  0023  0084               	movwf	4
   536  0024  120A  158A  240F  120A  118A  	fcall	init_ram0
   537                           
   538                           ; Initialize objects allocated to BANK0
   539  0029  305A               	movlw	low (__pdataBANK0+15)
   540  002A  00FD               	movwf	btemp+-1
   541  002B  300B               	movlw	high __pidataBANK0
   542  002C  00FE               	movwf	btemp
   543  002D  30FC               	movlw	low __pidataBANK0
   544  002E  00FF               	movwf	btemp+1
   545  002F  304B               	movlw	low __pdataBANK0
   546  0030  0084               	movwf	4
   547  0031  120A  158A  240F   	fcall	init_ram0
   548  0034                     end_of_initialization:	
   549                           ;End of C runtime variable initialization code
   550                           
   551  0034                     __end_of__initialization:	
   552  0034  0183               	clrf	3
   553  0035  120A  118A  2838   	ljmp	_main	;jump to C main() function
   554                           
   555                           	psect	bssBANK0
   556  005A                     __pbssBANK0:	
   557  005A                     _count:	
   558  005A                     	ds	1
   559  005B                     _tuneUpTemp:	
   560  005B                     	ds	1
   561                           
   562                           	psect	dataBANK0
   563  004B                     __pdataBANK0:	
   564  004B                     ___cgram:	
   565  004B                     	ds	8
   566  0053                     LCDWriteInt@F1642:	
   567  0053                     	ds	5
   568  0058                     _phMsg:	
   569  0058                     	ds	1
   570  0059                     _tuneUpTempDir:	
   571  0059                     	ds	1
   572                           
   573                           	psect	bssBANK1
   574  00DC                     __pbssBANK1:	
   575  00DC                     _curTemp:	
   576  00DC                     	ds	2
   577                           
   578                           	psect	dataBANK1
   579  00A0                     __pdataBANK1:	
   580  00A0                     _msg:	
   581  00A0                     	ds	32
   582                           
   583                           	psect	inittext
   584  0C0B                     init_fetch0:	
   585                           ;	Called with low address in FSR and high address in W
   586                           
   587  0C0B  087E               	movf	126,w
   588  0C0C  008A               	movwf	10
   589  0C0D  087F               	movf	127,w
   590  0C0E  0082               	movwf	2
   591  0C0F                     init_ram0:	
   592                           ;Called with:
   593                           ;	high address of idata address in btemp 
   594                           ;	low address of idata address in btemp+1 
   595                           ;	low address of data in FSR
   596                           ;	high address + 1 of data in btemp-1
   597                           
   598  0C0F  240B  120A  158A   	fcall	init_fetch0
   599  0C12  0080               	movwf	0
   600  0C13  0A84               	incf	4,f
   601  0C14  0804               	movf	4,w
   602  0C15  067D               	xorwf	125,w
   603  0C16  1903               	btfsc	3,2
   604  0C17  3400               	retlw	0
   605  0C18  0AFF               	incf	127,f
   606  0C19  1903               	btfsc	3,2
   607  0C1A  0AFE               	incf	126,f
   608  0C1B  2C0F               	goto	init_ram0
   609                           
   610                           	psect	cstackBANK1
   611  00C0                     __pcstackBANK1:	
   612  00C0                     ___ftmul@exp:	
   613  00C0                     LCDWriteInt@str:	
   614                           ; 1 bytes @ 0x0
   615                           
   616                           
   617                           ; 5 bytes @ 0x0
   618  00C0                     	ds	1
   619  00C1                     ___ftmul@f3_as_product:	
   620                           
   621                           ; 3 bytes @ 0x1
   622  00C1                     	ds	3
   623  00C4                     ___ftmul@cntr:	
   624                           
   625                           ; 1 bytes @ 0x4
   626  00C4                     	ds	1
   627  00C5                     ___ftmul@sign:	
   628  00C5                     LCDWriteInt@j:	
   629                           ; 1 bytes @ 0x5
   630                           
   631                           
   632                           ; 2 bytes @ 0x5
   633  00C5                     	ds	1
   634  00C6                     ?___fttol:	
   635  00C6                     ___fttol@f1:	
   636                           ; 4 bytes @ 0x6
   637                           
   638                           
   639                           ; 3 bytes @ 0x6
   640  00C6                     	ds	1
   641  00C7                     LCDWriteInt@i:	
   642                           
   643                           ; 2 bytes @ 0x7
   644  00C7                     	ds	3
   645  00CA                     ??___fttol:	
   646                           
   647                           ; 1 bytes @ 0xA
   648  00CA                     	ds	4
   649  00CE                     ___fttol@sign1:	
   650                           
   651                           ; 1 bytes @ 0xE
   652  00CE                     	ds	1
   653  00CF                     ___fttol@lval:	
   654                           
   655                           ; 4 bytes @ 0xF
   656  00CF                     	ds	4
   657  00D3                     ___fttol@exp1:	
   658                           
   659                           ; 1 bytes @ 0x13
   660  00D3                     	ds	1
   661  00D4                     ?_LM35ReadTemp:	
   662                           
   663                           ; 2 bytes @ 0x14
   664  00D4                     	ds	2
   665  00D6                     ??_main:	
   666                           
   667                           ; 1 bytes @ 0x16
   668  00D6                     	ds	3
   669  00D9                     main@t:	
   670                           
   671                           ; 1 bytes @ 0x19
   672  00D9                     	ds	1
   673  00DA                     main@t_379:	
   674                           
   675                           ; 1 bytes @ 0x1A
   676  00DA                     	ds	1
   677  00DB                     main@i:	
   678                           
   679                           ; 1 bytes @ 0x1B
   680  00DB                     	ds	1
   681                           
   682                           	psect	cstackCOMMON
   683  0070                     __pcstackCOMMON:	
   684  0070                     ?_LCDInit:	
   685  0070                     ?_LCDBusyLoop:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_ADCInit:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_TuneButtonInit:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_ISR:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_main:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?i1_LCDBusyLoop:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ??i1_LCDBusyLoop:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?i1___awdiv:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?i1___awmod:	
   710                           ; 2 bytes @ 0x0
   711                           
   712  0070                     i1___awdiv@divisor:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     i1___awmod@divisor:	
   716                           ; 2 bytes @ 0x0
   717                           
   718                           
   719                           ; 2 bytes @ 0x0
   720  0070                     	ds	2
   721  0072                     i1LCDBusyLoop@busy:	
   722  0072                     i1___awdiv@dividend:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     i1___awmod@dividend:	
   726                           ; 2 bytes @ 0x2
   727                           
   728                           
   729                           ; 2 bytes @ 0x2
   730  0072                     	ds	1
   731  0073                     i1LCDBusyLoop@temp:	
   732                           
   733                           ; 1 bytes @ 0x3
   734  0073                     	ds	1
   735  0074                     ??i1___awdiv:	
   736  0074                     ??i1___awmod:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0074                     i1LCDBusyLoop@status:	
   740                           ; 1 bytes @ 0x4
   741                           
   742                           
   743                           ; 1 bytes @ 0x4
   744  0074                     	ds	1
   745  0075                     ?i1_LCDByte:	
   746  0075                     i1LCDByte@isdata:	
   747                           ; 1 bytes @ 0x5
   748                           
   749  0075                     i1___awdiv@counter:	
   750                           ; 1 bytes @ 0x5
   751                           
   752  0075                     i1___awmod@counter:	
   753                           ; 1 bytes @ 0x5
   754                           
   755                           
   756                           ; 1 bytes @ 0x5
   757  0075                     	ds	1
   758  0076                     ??i1_LCDByte:	
   759  0076                     i1___awdiv@sign:	
   760                           ; 1 bytes @ 0x6
   761                           
   762  0076                     i1___awmod@sign:	
   763                           ; 1 bytes @ 0x6
   764                           
   765                           
   766                           ; 1 bytes @ 0x6
   767  0076                     	ds	1
   768  0077                     i1___awdiv@quotient:	
   769                           
   770                           ; 2 bytes @ 0x7
   771  0077                     	ds	1
   772  0078                     i1LCDByte@c:	
   773                           
   774                           ; 1 bytes @ 0x8
   775  0078                     	ds	1
   776  0079                     i1LCDByte@hn:	
   777                           
   778                           ; 1 bytes @ 0x9
   779  0079                     	ds	1
   780  007A                     i1LCDByte@ln:	
   781                           
   782                           ; 1 bytes @ 0xA
   783  007A                     	ds	1
   784  007B                     i1LCDByte@temp:	
   785                           
   786                           ; 1 bytes @ 0xB
   787  007B                     	ds	1
   788  007C                     ?i1_LCDWriteString:	
   789  007C                     ??i1_LCDWriteInt:	
   790                           ; 1 bytes @ 0xC
   791                           
   792  007C                     ?i1_LCDGotoXY:	
   793                           ; 1 bytes @ 0xC
   794                           
   795  007C                     i1LCDGotoXY@y:	
   796                           ; 1 bytes @ 0xC
   797                           
   798  007C                     i1LCDWriteString@msg:	
   799                           ; 1 bytes @ 0xC
   800                           
   801                           
   802                           ; 2 bytes @ 0xC
   803  007C                     	ds	1
   804  007D                     ??i1_LCDGotoXY:	
   805                           
   806                           ; 1 bytes @ 0xD
   807  007D                     	ds	1
   808                           
   809                           	psect	cstackBANK0
   810  0020                     __pcstackBANK0:	
   811  0020                     ??i1_LCDWriteString:	
   812  0020                     ?i1_LCDWriteInt:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0020                     i1LCDGotoXY@x:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0020                     i1LCDWriteInt@val:	
   819                           ; 1 bytes @ 0x0
   820                           
   821                           
   822                           ; 2 bytes @ 0x0
   823  0020                     	ds	1
   824  0021                     i1LCDWriteString@cc:	
   825                           
   826                           ; 1 bytes @ 0x1
   827  0021                     	ds	1
   828  0022                     i1LCDWriteInt@field_length:	
   829                           
   830                           ; 1 bytes @ 0x2
   831  0022                     	ds	1
   832  0023                     i1LCDWriteInt@str:	
   833                           
   834                           ; 5 bytes @ 0x3
   835  0023                     	ds	5
   836  0028                     i1LCDWriteInt@j:	
   837                           
   838                           ; 2 bytes @ 0x8
   839  0028                     	ds	2
   840  002A                     i1LCDWriteInt@i:	
   841                           
   842                           ; 2 bytes @ 0xA
   843  002A                     	ds	2
   844  002C                     ??_ISR:	
   845                           
   846                           ; 1 bytes @ 0xC
   847  002C                     	ds	7
   848  0033                     ??_LCDBusyLoop:	
   849  0033                     ??_ADCInit:	
   850                           ; 1 bytes @ 0x13
   851                           
   852  0033                     ??_TuneButtonInit:	
   853                           ; 1 bytes @ 0x13
   854                           
   855  0033                     ?_ReadADC:	
   856                           ; 1 bytes @ 0x13
   857                           
   858  0033                     ?___awdiv:	
   859                           ; 2 bytes @ 0x13
   860                           
   861  0033                     ?___awmod:	
   862                           ; 2 bytes @ 0x13
   863                           
   864  0033                     ?___ftpack:	
   865                           ; 2 bytes @ 0x13
   866                           
   867  0033                     ___awdiv@divisor:	
   868                           ; 3 bytes @ 0x13
   869                           
   870  0033                     ___awmod@divisor:	
   871                           ; 2 bytes @ 0x13
   872                           
   873  0033                     ___ftpack@arg:	
   874                           ; 2 bytes @ 0x13
   875                           
   876                           
   877                           ; 3 bytes @ 0x13
   878  0033                     	ds	2
   879  0035                     ??_ReadADC:	
   880  0035                     LCDBusyLoop@busy:	
   881                           ; 1 bytes @ 0x15
   882                           
   883  0035                     ___awdiv@dividend:	
   884                           ; 1 bytes @ 0x15
   885                           
   886  0035                     ___awmod@dividend:	
   887                           ; 2 bytes @ 0x15
   888                           
   889                           
   890                           ; 2 bytes @ 0x15
   891  0035                     	ds	1
   892  0036                     ReadADC@ch:	
   893  0036                     LCDBusyLoop@temp:	
   894                           ; 1 bytes @ 0x16
   895                           
   896  0036                     ___ftpack@exp:	
   897                           ; 1 bytes @ 0x16
   898                           
   899                           
   900                           ; 1 bytes @ 0x16
   901  0036                     	ds	1
   902  0037                     ??___awdiv:	
   903  0037                     ??___awmod:	
   904                           ; 1 bytes @ 0x17
   905                           
   906  0037                     LCDBusyLoop@status:	
   907                           ; 1 bytes @ 0x17
   908                           
   909  0037                     ___ftpack@sign:	
   910                           ; 1 bytes @ 0x17
   911                           
   912                           
   913                           ; 1 bytes @ 0x17
   914  0037                     	ds	1
   915  0038                     ?_LCDByte:	
   916  0038                     ??___ftpack:	
   917                           ; 1 bytes @ 0x18
   918                           
   919  0038                     LCDByte@isdata:	
   920                           ; 1 bytes @ 0x18
   921                           
   922  0038                     ___awdiv@counter:	
   923                           ; 1 bytes @ 0x18
   924                           
   925  0038                     ___awmod@counter:	
   926                           ; 1 bytes @ 0x18
   927                           
   928                           
   929                           ; 1 bytes @ 0x18
   930  0038                     	ds	1
   931  0039                     ??_LCDByte:	
   932  0039                     ___awdiv@sign:	
   933                           ; 1 bytes @ 0x19
   934                           
   935  0039                     ___awmod@sign:	
   936                           ; 1 bytes @ 0x19
   937                           
   938                           
   939                           ; 1 bytes @ 0x19
   940  0039                     	ds	1
   941  003A                     ___awdiv@quotient:	
   942                           
   943                           ; 2 bytes @ 0x1A
   944  003A                     	ds	1
   945  003B                     ?___lwtoft:	
   946  003B                     LCDByte@hn:	
   947                           ; 3 bytes @ 0x1B
   948                           
   949  003B                     ___lwtoft@c:	
   950                           ; 1 bytes @ 0x1B
   951                           
   952                           
   953                           ; 2 bytes @ 0x1B
   954  003B                     	ds	1
   955  003C                     LCDByte@ln:	
   956                           
   957                           ; 1 bytes @ 0x1C
   958  003C                     	ds	1
   959  003D                     LCDByte@c:	
   960                           
   961                           ; 1 bytes @ 0x1D
   962  003D                     	ds	1
   963  003E                     ??___lwtoft:	
   964  003E                     LCDByte@temp:	
   965                           ; 1 bytes @ 0x1E
   966                           
   967                           
   968                           ; 1 bytes @ 0x1E
   969  003E                     	ds	1
   970  003F                     ?_LCDGotoXY:	
   971  003F                     ?_LCDWriteString:	
   972                           ; 1 bytes @ 0x1F
   973                           
   974  003F                     ?_LCDWriteInt:	
   975                           ; 1 bytes @ 0x1F
   976                           
   977  003F                     ??_LCDInit:	
   978                           ; 1 bytes @ 0x1F
   979                           
   980  003F                     ?___ftmul:	
   981                           ; 1 bytes @ 0x1F
   982                           
   983  003F                     LCDGotoXY@y:	
   984                           ; 3 bytes @ 0x1F
   985                           
   986  003F                     LCDWriteString@msg:	
   987                           ; 1 bytes @ 0x1F
   988                           
   989  003F                     LCDWriteInt@val:	
   990                           ; 2 bytes @ 0x1F
   991                           
   992  003F                     ___ftmul@f1:	
   993                           ; 2 bytes @ 0x1F
   994                           
   995                           
   996                           ; 3 bytes @ 0x1F
   997  003F                     	ds	1
   998  0040                     ??_LCDGotoXY:	
   999                           
  1000                           ; 1 bytes @ 0x20
  1001  0040                     	ds	1
  1002  0041                     ??_LCDWriteString:	
  1003  0041                     LCDInit@style:	
  1004                           ; 1 bytes @ 0x21
  1005                           
  1006  0041                     LCDWriteInt@field_length:	
  1007                           ; 1 bytes @ 0x21
  1008                           
  1009  0041                     LCDGotoXY@x:	
  1010                           ; 1 bytes @ 0x21
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x21
  1014  0041                     	ds	1
  1015  0042                     ??_LCDWriteInt:	
  1016  0042                     LCDInit@__i:	
  1017                           ; 1 bytes @ 0x22
  1018                           
  1019  0042                     LCDWriteString@cc:	
  1020                           ; 1 bytes @ 0x22
  1021                           
  1022  0042                     ___ftmul@f2:	
  1023                           ; 1 bytes @ 0x22
  1024                           
  1025                           
  1026                           ; 3 bytes @ 0x22
  1027  0042                     	ds	3
  1028  0045                     ??___ftmul:	
  1029                           
  1030                           ; 1 bytes @ 0x25
  1031  0045                     	ds	4
  1032  0049                     ??_LM35ReadTemp:	
  1033  0049                     LM35ReadTemp@adc_value:	
  1034                           ; 1 bytes @ 0x29
  1035                           
  1036                           
  1037                           ; 2 bytes @ 0x29
  1038  0049                     	ds	2
  1039                           
  1040                           	psect	maintext
  1041  0038                     __pmaintext:	
  1042 ;;
  1043 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1044 ;;
  1045 ;; *************** function _main *****************
  1046 ;; Defined at:
  1047 ;;		line 190 in file "do_am.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  t               1   26[BANK1 ] unsigned char 
  1052 ;;  t               1   25[BANK1 ] unsigned char 
  1053 ;;  i               1   27[BANK1 ] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : B00/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1063 ;;      Params:         0       0       0       0       0
  1064 ;;      Locals:         0       0       3       0       0
  1065 ;;      Temps:          0       0       3       0       0
  1066 ;;      Totals:         0       0       6       0       0
  1067 ;;Total ram usage:        6 bytes
  1068 ;; Hardware stack levels required when called:    7
  1069 ;; This function calls:
  1070 ;;		_ADCInit
  1071 ;;		_LCDByte
  1072 ;;		_LCDGotoXY
  1073 ;;		_LCDInit
  1074 ;;		_LCDWriteInt
  1075 ;;		_LCDWriteString
  1076 ;;		_LM35ReadTemp
  1077 ;;		_TuneButtonInit
  1078 ;; This function is called by:
  1079 ;;		Startup code after reset
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _main
  1085  0038                     _main:	
  1086                           
  1087                           ;do_am.c: 193: LCDInit(0B00000000);
  1088                           
  1089                           ;incstack = 0
  1090                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1091  0038  3000               	movlw	0
  1092  0039  120A  118A  268F  120A  118A  	fcall	_LCDInit
  1093                           
  1094                           ;do_am.c: 196: ADCInit();
  1095  003E  120A  158A  241C  120A  118A  	fcall	_ADCInit
  1096                           
  1097                           ;do_am.c: 199: TuneButtonInit();
  1098  0043  120A  158A  24D3  120A  118A  	fcall	_TuneButtonInit
  1099                           
  1100                           ;do_am.c: 205: (LCDByte(0b00000001,0));
  1101  0048  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0049  1303               	bcf	3,6	;RP1=0, select bank0
  1103  004A  01B8               	clrf	LCDByte@isdata
  1104  004B  3001               	movlw	1
  1105  004C  120A  158A  2641  120A  118A  	fcall	_LCDByte
  1106                           
  1107                           ;do_am.c: 207: { LCDGotoXY(0,0); LCDWriteString("Cur:");};
  1108  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0052  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0053  01BF               	clrf	LCDGotoXY@y
  1111  0054  3000               	movlw	0
  1112  0055  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1113  005A  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1114  005B  1283               	bcf	3,5	;RP0=0, select bank0
  1115  005C  1303               	bcf	3,6	;RP1=0, select bank0
  1116  005D  00BF               	movwf	LCDWriteString@msg
  1117  005E  3080               	movlw	128
  1118  005F  00C0               	movwf	LCDWriteString@msg+1
  1119  0060  120A  158A  27A5  120A  118A  	fcall	_LCDWriteString
  1120                           
  1121                           ;do_am.c: 209: { LCDGotoXY(7,0); LCDWriteString("%0C");};
  1122  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0067  01BF               	clrf	LCDGotoXY@y
  1125  0068  3007               	movlw	7
  1126  0069  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1127  006E  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1128  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0071  00BF               	movwf	LCDWriteString@msg
  1131  0072  3080               	movlw	128
  1132  0073  00C0               	movwf	LCDWriteString@msg+1
  1133  0074  120A  158A  27A5  120A  118A  	fcall	_LCDWriteString
  1134                           
  1135                           ;do_am.c: 211: { LCDGotoXY(10,0); LCDWriteString("Wa:");};
  1136  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1137  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1138  007B  01BF               	clrf	LCDGotoXY@y
  1139  007C  300A               	movlw	10
  1140  007D  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1141  0082  3020               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1142  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0085  00BF               	movwf	LCDWriteString@msg
  1145  0086  3080               	movlw	128
  1146  0087  00C0               	movwf	LCDWriteString@msg+1
  1147  0088  120A  158A  27A5  120A  118A  	fcall	_LCDWriteString
  1148                           
  1149                           ;do_am.c: 213: { LCDGotoXY(0,1); LCDWriteString("Max:");};
  1150  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1151  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1152  008F  01BF               	clrf	LCDGotoXY@y
  1153  0090  0ABF               	incf	LCDGotoXY@y,f
  1154  0091  3000               	movlw	0
  1155  0092  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1156  0097  3017               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1157  0098  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0099  1303               	bcf	3,6	;RP1=0, select bank0
  1159  009A  00BF               	movwf	LCDWriteString@msg
  1160  009B  3080               	movlw	128
  1161  009C  00C0               	movwf	LCDWriteString@msg+1
  1162  009D  120A  158A  27A5  120A  118A  	fcall	_LCDWriteString
  1163                           
  1164                           ;do_am.c: 215: { LCDGotoXY(7,1); LCDWriteString("%0C");};
  1165  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1166  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1167  00A4  01BF               	clrf	LCDGotoXY@y
  1168  00A5  0ABF               	incf	LCDGotoXY@y,f
  1169  00A6  3007               	movlw	7
  1170  00A7  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1171  00AC  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1172  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1173  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1174  00AF  00BF               	movwf	LCDWriteString@msg
  1175  00B0  3080               	movlw	128
  1176  00B1  00C0               	movwf	LCDWriteString@msg+1
  1177  00B2  120A  158A  27A5  120A  118A  	fcall	_LCDWriteString
  1178                           
  1179                           ;do_am.c: 217: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1180  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1181  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1182  00B9  01BF               	clrf	LCDGotoXY@y
  1183  00BA  300D               	movlw	13
  1184  00BB  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1185  00C0  3028               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1186  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1187  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1188  00C3  00BF               	movwf	LCDWriteString@msg
  1189  00C4  3080               	movlw	128
  1190  00C5  00C0               	movwf	LCDWriteString@msg+1
  1191  00C6  120A  158A  27A5  120A  118A  	fcall	_LCDWriteString
  1192                           
  1193                           ;do_am.c: 219: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1194  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1195  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1196  00CD  01BF               	clrf	LCDGotoXY@y
  1197  00CE  0ABF               	incf	LCDGotoXY@y,f
  1198  00CF  3004               	movlw	4
  1199  00D0  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1200  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1201  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1202  00D7  085B               	movf	_tuneUpTemp,w
  1203  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  1204  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  1205  00DA  00D6               	movwf	??_main^(0+128)
  1206  00DB  01D7               	clrf	(??_main^(0+128)+1)
  1207  00DC  0856               	movf	??_main^(0+128),w
  1208  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1209  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1210  00DF  00BF               	movwf	LCDWriteInt@val
  1211  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1212  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1213  00E2  0857               	movf	(??_main+1)^(0+128),w
  1214  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1215  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1216  00E5  00C0               	movwf	LCDWriteInt@val+1
  1217  00E6  3003               	movlw	3
  1218  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1219  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1220  00E9  00D8               	movwf	(??_main+2)^(0+128)
  1221  00EA  0858               	movf	(??_main+2)^(0+128),w
  1222  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1223  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1224  00ED  00C1               	movwf	LCDWriteInt@field_length
  1225  00EE  120A  118A  23D1  120A  118A  	fcall	_LCDWriteInt
  1226  00F3                     L3:	
  1227                           
  1228                           ;do_am.c: 220: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1229  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1230  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1231  00F5  01BF               	clrf	LCDGotoXY@y
  1232  00F6  3004               	movlw	4
  1233  00F7  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1234  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1235  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1236  00FE  085D               	movf	(_curTemp+1)^(0+128),w
  1237  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0101  00C0               	movwf	LCDWriteInt@val+1
  1240  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0103  1303               	bcf	3,6	;RP1=0, select bank1
  1242  0104  085C               	movf	_curTemp^(0+128),w
  1243  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0107  00BF               	movwf	LCDWriteInt@val
  1246  0108  3003               	movlw	3
  1247  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1248  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1249  010B  00D6               	movwf	??_main^(0+128)
  1250  010C  0856               	movf	??_main^(0+128),w
  1251  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1252  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1253  010F  00C1               	movwf	LCDWriteInt@field_length
  1254  0110  120A  118A  23D1  120A  118A  	fcall	_LCDWriteInt
  1255                           
  1256                           ;do_am.c: 222: {
  1257                           ;do_am.c: 224: curTemp = LM35ReadTemp();
  1258                           
  1259                           ;do_am.c: 221: while(1)
  1260  0115  120A  158A  250E  120A  118A  	fcall	_LM35ReadTemp
  1261  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1262  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1263  011C  0855               	movf	(?_LM35ReadTemp+1)^(0+128),w
  1264  011D  00DD               	movwf	(_curTemp+1)^(0+128)
  1265  011E  0854               	movf	?_LM35ReadTemp^(0+128),w
  1266  011F  00DC               	movwf	_curTemp^(0+128)
  1267                           
  1268                           ;do_am.c: 226: if((tuneUpTemp >= 5) && (curTemp >= tuneUpTemp))
  1269  0120  3005               	movlw	5
  1270  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0123  025B               	subwf	_tuneUpTemp,w
  1273  0124  1C03               	skipc
  1274  0125  2942               	goto	l3052
  1275  0126  1683               	bsf	3,5	;RP0=1, select bank1
  1276  0127  1303               	bcf	3,6	;RP1=0, select bank1
  1277  0128  085D               	movf	(_curTemp+1)^(0+128),w
  1278  0129  3A80               	xorlw	128
  1279  012A  00D6               	movwf	??_main^(0+128)
  1280  012B  3080               	movlw	128
  1281  012C  0256               	subwf	??_main^(0+128),w
  1282  012D  1D03               	skipz
  1283  012E  2935               	goto	u4135
  1284  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0131  085B               	movf	_tuneUpTemp,w
  1287  0132  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0133  1303               	bcf	3,6	;RP1=0, select bank1
  1289  0134  025C               	subwf	_curTemp^(0+128),w
  1290  0135                     u4135:	
  1291  0135  1C03               	skipc
  1292  0136  2942               	goto	l3052
  1293                           
  1294                           ;do_am.c: 227: {
  1295                           ;do_am.c: 228: { LCDGotoXY(13,0); LCDWriteString("ON ");};
  1296  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0139  01BF               	clrf	LCDGotoXY@y
  1299  013A  300D               	movlw	13
  1300  013B  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1301  0140  301C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1302  0141  2963               	goto	L4
  1303  0142                     l3052:	
  1304                           ;do_am.c: 229: }
  1305                           
  1306                           
  1307                           ;do_am.c: 230: else
  1308                           ;do_am.c: 231: {
  1309                           ;do_am.c: 232: if(curTemp <= tuneUpTemp - 5)
  1310  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0144  085B               	movf	_tuneUpTemp,w
  1313  0145  3EFB               	addlw	251
  1314  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1315  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1316  0148  00D6               	movwf	??_main^(0+128)
  1317  0149  30FF               	movlw	255
  1318  014A  1803               	skipnc
  1319  014B  3000               	movlw	0
  1320  014C  00D7               	movwf	(??_main^(0+128)+1)
  1321  014D  0857               	movf	(??_main+1)^(0+128),w
  1322  014E  3A80               	xorlw	128
  1323  014F  00D8               	movwf	(??_main+2)^(0+128)
  1324  0150  085D               	movf	(_curTemp+1)^(0+128),w
  1325  0151  3A80               	xorlw	128
  1326  0152  0258               	subwf	(??_main+2)^(0+128),w
  1327  0153  1D03               	skipz
  1328  0154  2957               	goto	u4145
  1329  0155  085C               	movf	_curTemp^(0+128),w
  1330  0156  0256               	subwf	??_main^(0+128),w
  1331  0157                     u4145:	
  1332  0157  1C03               	skipc
  1333  0158  296D               	goto	l3058
  1334                           
  1335                           ;do_am.c: 233: {
  1336                           ;do_am.c: 234: { LCDGotoXY(13,0); LCDWriteString("OFF");};
  1337  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1338  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1339  015B  01BF               	clrf	LCDGotoXY@y
  1340  015C  300D               	movlw	13
  1341  015D  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1342  0162  3028               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1343  0163                     L4:	
  1344  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0165  00BF               	movwf	LCDWriteString@msg
  1347  0166  3080               	movlw	128
  1348  0167  00C0               	movwf	LCDWriteString@msg+1
  1349  0168  120A  158A  27A5  120A  118A  	fcall	_LCDWriteString
  1350  016D                     l3058:	
  1351                           
  1352                           ;do_am.c: 235: }
  1353                           ;do_am.c: 236: }
  1354                           ;do_am.c: 237: if(RA6 == 0)
  1355  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1356  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1357  016F  1B05               	btfsc	5,6	;volatile
  1358  0170  2A85               	goto	l3116
  1359                           
  1360                           ;do_am.c: 238: {
  1361                           ;do_am.c: 252: { for(char i = 0; i < 6; i++) { { { char t; if(1 == 0) { t = msg[i] >> 4;
      +                           } else { t = msg[i]; } RB0 = t & 0b0001; RB1 = (t & 0b0010) >> 1; RB2 = (t & 0b0100) >>
      +                           2; RB3 = (t & 0b1000) >> 3; }; {RA7 = ~RA7; _delay((unsigned long)((1)*(20000000/400000
      +                          0
  1362  0171  1683               	bsf	3,5	;RP0=1, select bank1
  1363  0172  1303               	bcf	3,6	;RP1=0, select bank1
  1364  0173  01DB               	clrf	main@i^(0+128)
  1365  0174  2A4A               	goto	L5
  1366  0175                     u4175:	
  1367  0175  1003               	clrc
  1368  0176  0CD6               	rrf	??_main^(0+128),f
  1369  0177  3EFF               	addlw	-1
  1370  0178  1D03               	skipz
  1371  0179  2975               	goto	u4175
  1372  017A  0856               	movf	??_main^(0+128),w
  1373  017B  00D7               	movwf	(??_main+1)^(0+128)
  1374  017C  0857               	movf	(??_main+1)^(0+128),w
  1375  017D  2985               	goto	L1
  1376  017E                     l3068:	
  1377  017E  085B               	movf	main@i^(0+128),w
  1378  017F  3EA0               	addlw	(low (_msg| 0))& (0+255)
  1379  0180  0084               	movwf	4
  1380  0181  1383               	bcf	3,7	;select IRP bank1
  1381  0182  0800               	movf	0,w
  1382  0183  00D6               	movwf	??_main^(0+128)
  1383  0184  0856               	movf	??_main^(0+128),w
  1384  0185                     L1:	
  1385  0185  00D9               	movwf	main@t^(0+128)
  1386  0186  1C59               	btfss	main@t^(0+128),0
  1387  0187  298C               	goto	u4180
  1388  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1390  018A  1406               	bsf	6,0	;volatile
  1391  018B  298F               	goto	l3072
  1392  018C                     u4180:	
  1393  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1394  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1395  018E  1006               	bcf	6,0	;volatile
  1396  018F                     l3072:	
  1397  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0190  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0191  0859               	movf	main@t^(0+128),w
  1400  0192  00D6               	movwf	??_main^(0+128)
  1401  0193  3001               	movlw	1
  1402  0194                     u4205:	
  1403  0194  1003               	clrc
  1404  0195  0CD6               	rrf	??_main^(0+128),f
  1405  0196  3EFF               	addlw	-1
  1406  0197  1D03               	skipz
  1407  0198  2994               	goto	u4205
  1408  0199  1C56               	btfss	??_main^(0+128),0
  1409  019A  299F               	goto	u4210
  1410  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1411  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1412  019D  1486               	bsf	6,1	;volatile
  1413  019E  29A2               	goto	l3074
  1414  019F                     u4210:	
  1415  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1416  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1417  01A1  1086               	bcf	6,1	;volatile
  1418  01A2                     l3074:	
  1419  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1420  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  1421  01A4  0859               	movf	main@t^(0+128),w
  1422  01A5  00D6               	movwf	??_main^(0+128)
  1423  01A6  3002               	movlw	2
  1424  01A7                     u4235:	
  1425  01A7  1003               	clrc
  1426  01A8  0CD6               	rrf	??_main^(0+128),f
  1427  01A9  3EFF               	addlw	-1
  1428  01AA  1D03               	skipz
  1429  01AB  29A7               	goto	u4235
  1430  01AC  1C56               	btfss	??_main^(0+128),0
  1431  01AD  29B2               	goto	u4240
  1432  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1433  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1434  01B0  1506               	bsf	6,2	;volatile
  1435  01B1  29B5               	goto	l3076
  1436  01B2                     u4240:	
  1437  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1438  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1439  01B4  1106               	bcf	6,2	;volatile
  1440  01B5                     l3076:	
  1441  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1442  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1443  01B7  0859               	movf	main@t^(0+128),w
  1444  01B8  00D6               	movwf	??_main^(0+128)
  1445  01B9  3003               	movlw	3
  1446  01BA                     u4265:	
  1447  01BA  1003               	clrc
  1448  01BB  0CD6               	rrf	??_main^(0+128),f
  1449  01BC  3EFF               	addlw	-1
  1450  01BD  1D03               	skipz
  1451  01BE  29BA               	goto	u4265
  1452  01BF  1C56               	btfss	??_main^(0+128),0
  1453  01C0  29C5               	goto	u4270
  1454  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1455  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1456  01C3  1586               	bsf	6,3	;volatile
  1457  01C4  29C8               	goto	l3078
  1458  01C5                     u4270:	
  1459  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1460  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1461  01C7  1186               	bcf	6,3	;volatile
  1462  01C8                     l3078:	
  1463  01C8  3080               	movlw	128
  1464  01C9  0685               	xorwf	5,f
  1465  01CA  29CB               	nop2	;2 cycle nop
  1466  01CB  29CC               	nop2	;2 cycle nop
  1467  01CC  0000               	nop
  1468  01CD  3080               	movlw	128
  1469  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1470  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1471  01D0  0685               	xorwf	5,f
  1472  01D1  3041               	movlw	65
  1473  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1474  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1475  01D4  00D7               	movwf	(??_main^(0+128)+1)
  1476  01D5  30EE               	movlw	238
  1477  01D6  00D6               	movwf	??_main^(0+128)
  1478  01D7                     u4427:	
  1479  01D7  0BD6               	decfsz	??_main^(0+128),f
  1480  01D8  29D7               	goto	u4427
  1481  01D9  0BD7               	decfsz	(??_main^(0+128)+1),f
  1482  01DA  29D7               	goto	u4427
  1483  01DB  0000               	nop
  1484  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  1485  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  1486  01DE  085B               	movf	main@i^(0+128),w
  1487  01DF  3EA0               	addlw	(low (_msg| 0))& (0+255)
  1488  01E0  0084               	movwf	4
  1489  01E1  1383               	bcf	3,7	;select IRP bank1
  1490  01E2  0800               	movf	0,w
  1491  01E3  00D6               	movwf	??_main^(0+128)
  1492  01E4  3004               	movlw	4
  1493  01E5                     u4295:	
  1494  01E5  1003               	clrc
  1495  01E6  0CD6               	rrf	??_main^(0+128),f
  1496  01E7  3EFF               	addlw	-1
  1497  01E8  1D03               	skipz
  1498  01E9  29E5               	goto	u4295
  1499  01EA  0856               	movf	??_main^(0+128),w
  1500  01EB  00D7               	movwf	(??_main+1)^(0+128)
  1501  01EC  0857               	movf	(??_main+1)^(0+128),w
  1502  01ED  00DA               	movwf	main@t_379^(0+128)
  1503  01EE  1C5A               	btfss	main@t_379^(0+128),0
  1504  01EF  29F4               	goto	u4300
  1505  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1506  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1507  01F2  1406               	bsf	6,0	;volatile
  1508  01F3  29F7               	goto	l3092
  1509  01F4                     u4300:	
  1510  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1511  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1512  01F6  1006               	bcf	6,0	;volatile
  1513  01F7                     l3092:	
  1514  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  1515  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  1516  01F9  085A               	movf	main@t_379^(0+128),w
  1517  01FA  00D6               	movwf	??_main^(0+128)
  1518  01FB  3001               	movlw	1
  1519  01FC                     u4325:	
  1520  01FC  1003               	clrc
  1521  01FD  0CD6               	rrf	??_main^(0+128),f
  1522  01FE  3EFF               	addlw	-1
  1523  01FF  1D03               	skipz
  1524  0200  29FC               	goto	u4325
  1525  0201  1C56               	btfss	??_main^(0+128),0
  1526  0202  2A07               	goto	u4330
  1527  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0205  1486               	bsf	6,1	;volatile
  1530  0206  2A0A               	goto	l3094
  1531  0207                     u4330:	
  1532  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0209  1086               	bcf	6,1	;volatile
  1535  020A                     l3094:	
  1536  020A  1683               	bsf	3,5	;RP0=1, select bank1
  1537  020B  1303               	bcf	3,6	;RP1=0, select bank1
  1538  020C  085A               	movf	main@t_379^(0+128),w
  1539  020D  00D6               	movwf	??_main^(0+128)
  1540  020E  3002               	movlw	2
  1541  020F                     u4355:	
  1542  020F  1003               	clrc
  1543  0210  0CD6               	rrf	??_main^(0+128),f
  1544  0211  3EFF               	addlw	-1
  1545  0212  1D03               	skipz
  1546  0213  2A0F               	goto	u4355
  1547  0214  1C56               	btfss	??_main^(0+128),0
  1548  0215  2A1A               	goto	u4360
  1549  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0218  1506               	bsf	6,2	;volatile
  1552  0219  2A1D               	goto	l3096
  1553  021A                     u4360:	
  1554  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1555  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1556  021C  1106               	bcf	6,2	;volatile
  1557  021D                     l3096:	
  1558  021D  1683               	bsf	3,5	;RP0=1, select bank1
  1559  021E  1303               	bcf	3,6	;RP1=0, select bank1
  1560  021F  085A               	movf	main@t_379^(0+128),w
  1561  0220  00D6               	movwf	??_main^(0+128)
  1562  0221  3003               	movlw	3
  1563  0222                     u4385:	
  1564  0222  1003               	clrc
  1565  0223  0CD6               	rrf	??_main^(0+128),f
  1566  0224  3EFF               	addlw	-1
  1567  0225  1D03               	skipz
  1568  0226  2A22               	goto	u4385
  1569  0227  1C56               	btfss	??_main^(0+128),0
  1570  0228  2A2D               	goto	u4390
  1571  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1572  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1573  022B  1586               	bsf	6,3	;volatile
  1574  022C  2A30               	goto	l3098
  1575  022D                     u4390:	
  1576  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1577  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1578  022F  1186               	bcf	6,3	;volatile
  1579  0230                     l3098:	
  1580  0230  3080               	movlw	128
  1581  0231  0685               	xorwf	5,f
  1582  0232  2A33               	nop2	;2 cycle nop
  1583  0233  2A34               	nop2	;2 cycle nop
  1584  0234  0000               	nop
  1585  0235  3080               	movlw	128
  1586  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0238  0685               	xorwf	5,f
  1589  0239  3041               	movlw	65
  1590  023A  1683               	bsf	3,5	;RP0=1, select bank1
  1591  023B  1303               	bcf	3,6	;RP1=0, select bank1
  1592  023C  00D7               	movwf	(??_main^(0+128)+1)
  1593  023D  30EE               	movlw	238
  1594  023E  00D6               	movwf	??_main^(0+128)
  1595  023F                     u4437:	
  1596  023F  0BD6               	decfsz	??_main^(0+128),f
  1597  0240  2A3F               	goto	u4437
  1598  0241  0BD7               	decfsz	(??_main^(0+128)+1),f
  1599  0242  2A3F               	goto	u4437
  1600  0243  0000               	nop
  1601  0244  3001               	movlw	1
  1602  0245  1683               	bsf	3,5	;RP0=1, select bank1
  1603  0246  1303               	bcf	3,6	;RP1=0, select bank1
  1604  0247  00D6               	movwf	??_main^(0+128)
  1605  0248  0856               	movf	??_main^(0+128),w
  1606  0249  07DB               	addwf	main@i^(0+128),f
  1607  024A                     L5:	
  1608  024A  3006               	movlw	6
  1609  024B  025B               	subwf	main@i^(0+128),w
  1610  024C  1C03               	skipc
  1611  024D  297E               	goto	l3068
  1612                           
  1613                           ;do_am.c: 269: { LCDGotoXY(4,1); LCDWriteInt(tuneUpTemp,3);};
  1614  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1615  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0250  01BF               	clrf	LCDGotoXY@y
  1617  0251  0ABF               	incf	LCDGotoXY@y,f
  1618  0252  3004               	movlw	4
  1619  0253  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1620  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1621  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1622  025A  085B               	movf	_tuneUpTemp,w
  1623  025B  1683               	bsf	3,5	;RP0=1, select bank1
  1624  025C  1303               	bcf	3,6	;RP1=0, select bank1
  1625  025D  00D6               	movwf	??_main^(0+128)
  1626  025E  01D7               	clrf	(??_main^(0+128)+1)
  1627  025F  0856               	movf	??_main^(0+128),w
  1628  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1629  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1630  0262  00BF               	movwf	LCDWriteInt@val
  1631  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1632  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1633  0265  0857               	movf	(??_main+1)^(0+128),w
  1634  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1635  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1636  0268  00C0               	movwf	LCDWriteInt@val+1
  1637  0269  3003               	movlw	3
  1638  026A  1683               	bsf	3,5	;RP0=1, select bank1
  1639  026B  1303               	bcf	3,6	;RP1=0, select bank1
  1640  026C  00D8               	movwf	(??_main+2)^(0+128)
  1641  026D  0858               	movf	(??_main+2)^(0+128),w
  1642  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1643  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0270  00C1               	movwf	LCDWriteInt@field_length
  1645  0271  120A  118A  23D1  120A  118A  	fcall	_LCDWriteInt
  1646                           
  1647                           ;do_am.c: 271: _delay((unsigned long)((200)*(20000000/4000.0)));
  1648  0276  3006               	movlw	6
  1649  0277  1683               	bsf	3,5	;RP0=1, select bank1
  1650  0278  1303               	bcf	3,6	;RP1=0, select bank1
  1651  0279  00D8               	movwf	(??_main^(0+128)+2)
  1652  027A  3013               	movlw	19
  1653  027B  00D7               	movwf	(??_main^(0+128)+1)
  1654  027C  30B1               	movlw	177
  1655  027D  00D6               	movwf	??_main^(0+128)
  1656  027E                     u4447:	
  1657  027E  0BD6               	decfsz	??_main^(0+128),f
  1658  027F  2A7E               	goto	u4447
  1659  0280  0BD7               	decfsz	(??_main^(0+128)+1),f
  1660  0281  2A7E               	goto	u4447
  1661  0282  0BD8               	decfsz	(??_main^(0+128)+2),f
  1662  0283  2A7E               	goto	u4447
  1663  0284  2A85               	nop2
  1664  0285                     l3116:	
  1665                           
  1666                           ;do_am.c: 279: }
  1667                           ;do_am.c: 287: { LCDGotoXY(10,1); LCDWriteString(msg);};
  1668  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1669  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1670  0287  01BF               	clrf	LCDGotoXY@y
  1671  0288  0ABF               	incf	LCDGotoXY@y,f
  1672  0289  300A               	movlw	10
  1673  028A  120A  158A  24AD  120A  118A  	fcall	_LCDGotoXY
  1674  028F  30A0               	movlw	(low (_msg| 0))& (0+255)
  1675  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0292  00BF               	movwf	LCDWriteString@msg
  1678  0293  3000               	movlw	0
  1679  0294  00C0               	movwf	LCDWriteString@msg+1
  1680  0295  120A  158A  27A5  120A  118A  	fcall	_LCDWriteString
  1681  029A  28F3               	goto	L3
  1682  029B                     __end_of_main:	
  1683                           ;do_am.c: 289: { LCDGotoXY(4,0); LCDWriteInt(curTemp,3);};
  1684                           
  1685                           
  1686                           	psect	text1
  1687  0CD3                     __ptext1:	
  1688 ;; *************** function _TuneButtonInit *****************
  1689 ;; Defined at:
  1690 ;;		line 107 in file "do_am.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;		None
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;		None
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  1    wreg      void 
  1697 ;; Registers used:
  1698 ;;		None
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1704 ;;      Params:         0       0       0       0       0
  1705 ;;      Locals:         0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0
  1707 ;;      Totals:         0       0       0       0       0
  1708 ;;Total ram usage:        0 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    4
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _TuneButtonInit
  1720  0CD3                     _TuneButtonInit:	
  1721                           
  1722                           ;do_am.c: 110: (TRISAbits.TRISA6 = 1);
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _TuneButtonInit: []
  1726  0CD3  1683               	bsf	3,5	;RP0=1, select bank1
  1727  0CD4  1303               	bcf	3,6	;RP1=0, select bank1
  1728  0CD5  1705               	bsf	5,6	;volatile
  1729                           
  1730                           ;do_am.c: 111: ANSELHbits.ANS11 = 0;
  1731  0CD6  1683               	bsf	3,5	;RP0=1, select bank3
  1732  0CD7  1703               	bsf	3,6	;RP1=1, select bank3
  1733  0CD8  1189               	bcf	9,3	;volatile
  1734                           
  1735                           ;do_am.c: 113: (TRISAbits.TRISA0 = 1);
  1736  0CD9  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0CDA  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0CDB  1405               	bsf	5,0	;volatile
  1739                           
  1740                           ;do_am.c: 114: ANSELbits.ANS0 = 0;
  1741  0CDC  1683               	bsf	3,5	;RP0=1, select bank3
  1742  0CDD  1703               	bsf	3,6	;RP1=1, select bank3
  1743  0CDE  1008               	bcf	8,0	;volatile
  1744                           
  1745                           ;do_am.c: 116: (TRISAbits.TRISA1 = 1);
  1746  0CDF  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0CE0  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0CE1  1485               	bsf	5,1	;volatile
  1749                           
  1750                           ;do_am.c: 117: ANSELbits.ANS1 = 0;
  1751  0CE2  1683               	bsf	3,5	;RP0=1, select bank3
  1752  0CE3  1703               	bsf	3,6	;RP1=1, select bank3
  1753  0CE4  1088               	bcf	8,1	;volatile
  1754                           
  1755                           ;do_am.c: 118: (TRISAbits.TRISA2 = 1);
  1756  0CE5  1683               	bsf	3,5	;RP0=1, select bank1
  1757  0CE6  1303               	bcf	3,6	;RP1=0, select bank1
  1758  0CE7  1505               	bsf	5,2	;volatile
  1759                           
  1760                           ;do_am.c: 119: ANSELbits.ANS2 = 0;
  1761  0CE8  1683               	bsf	3,5	;RP0=1, select bank3
  1762  0CE9  1703               	bsf	3,6	;RP1=1, select bank3
  1763  0CEA  1108               	bcf	8,2	;volatile
  1764                           
  1765                           ;do_am.c: 120: (TRISAbits.TRISA3 = 1);
  1766  0CEB  1683               	bsf	3,5	;RP0=1, select bank1
  1767  0CEC  1303               	bcf	3,6	;RP1=0, select bank1
  1768  0CED  1585               	bsf	5,3	;volatile
  1769                           
  1770                           ;do_am.c: 121: ANSELbits.ANS3 = 0;
  1771  0CEE  1683               	bsf	3,5	;RP0=1, select bank3
  1772  0CEF  1703               	bsf	3,6	;RP1=1, select bank3
  1773  0CF0  1188               	bcf	8,3	;volatile
  1774                           
  1775                           ;do_am.c: 123: (TRISAbits.TRISA7 = 0);
  1776  0CF1  1683               	bsf	3,5	;RP0=1, select bank1
  1777  0CF2  1303               	bcf	3,6	;RP1=0, select bank1
  1778  0CF3  1385               	bcf	5,7	;volatile
  1779                           
  1780                           ;do_am.c: 125: (TRISBbits.TRISB0 = 0);
  1781  0CF4  1006               	bcf	6,0	;volatile
  1782                           
  1783                           ;do_am.c: 126: ANSELHbits.ANS12 = 0;
  1784  0CF5  1683               	bsf	3,5	;RP0=1, select bank3
  1785  0CF6  1703               	bsf	3,6	;RP1=1, select bank3
  1786  0CF7  1209               	bcf	9,4	;volatile
  1787                           
  1788                           ;do_am.c: 128: (TRISBbits.TRISB1 = 0);
  1789  0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0CFA  1086               	bcf	6,1	;volatile
  1792                           
  1793                           ;do_am.c: 129: ANSELHbits.ANS10 = 0;
  1794  0CFB  1683               	bsf	3,5	;RP0=1, select bank3
  1795  0CFC  1703               	bsf	3,6	;RP1=1, select bank3
  1796  0CFD  1109               	bcf	9,2	;volatile
  1797                           
  1798                           ;do_am.c: 131: (TRISBbits.TRISB2 = 0);
  1799  0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  1800  0CFF  1303               	bcf	3,6	;RP1=0, select bank1
  1801  0D00  1106               	bcf	6,2	;volatile
  1802                           
  1803                           ;do_am.c: 132: ANSELHbits.ANS8 = 0;
  1804  0D01  1683               	bsf	3,5	;RP0=1, select bank3
  1805  0D02  1703               	bsf	3,6	;RP1=1, select bank3
  1806  0D03  1009               	bcf	9,0	;volatile
  1807                           
  1808                           ;do_am.c: 134: (TRISBbits.TRISB3 = 0);
  1809  0D04  1683               	bsf	3,5	;RP0=1, select bank1
  1810  0D05  1303               	bcf	3,6	;RP1=0, select bank1
  1811  0D06  1186               	bcf	6,3	;volatile
  1812                           
  1813                           ;do_am.c: 135: ANSELHbits.ANS9 = 0;
  1814  0D07  1683               	bsf	3,5	;RP0=1, select bank3
  1815  0D08  1703               	bsf	3,6	;RP1=1, select bank3
  1816  0D09  1089               	bcf	9,1	;volatile
  1817                           
  1818                           ;do_am.c: 137: RA7 = 1;
  1819  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0D0C  1785               	bsf	5,7	;volatile
  1822  0D0D  0008               	return
  1823  0D0E                     __end_of_TuneButtonInit:	
  1824                           
  1825                           	psect	text2
  1826  0D0E                     __ptext2:	
  1827 ;; *************** function _LM35ReadTemp *****************
  1828 ;; Defined at:
  1829 ;;		line 8 in file "lm35_pic16.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  t               3    0        float 
  1834 ;;  adc_value       2   41[BANK0 ] unsigned int 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  2   20[BANK1 ] int 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       2       0       0
  1845 ;;      Locals:         0       2       0       0       0
  1846 ;;      Temps:          0       0       0       0       0
  1847 ;;      Totals:         0       2       2       0       0
  1848 ;;Total ram usage:        4 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    6
  1851 ;; This function calls:
  1852 ;;		_ReadADC
  1853 ;;		___ftmul
  1854 ;;		___fttol
  1855 ;;		___lwtoft
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _LM35ReadTemp
  1863  0D0E                     _LM35ReadTemp:	
  1864                           
  1865                           ;lm35_pic16.c: 11: float t;
  1866                           ;lm35_pic16.c: 14: uint16_t adc_value=ReadADC(13);
  1867                           
  1868                           ;incstack = 0
  1869                           ; Regs used in _LM35ReadTemp: [wreg+status,2+status,0+pclath+cstack]
  1870  0D0E  300D               	movlw	13
  1871  0D0F  120A  158A  2448  120A  158A  	fcall	_ReadADC
  1872  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0D16  0834               	movf	?_ReadADC+1,w
  1875  0D17  00CA               	movwf	LM35ReadTemp@adc_value+1
  1876  0D18  0833               	movf	?_ReadADC,w
  1877  0D19  00C9               	movwf	LM35ReadTemp@adc_value
  1878                           
  1879                           ;lm35_pic16.c: 28: return (int)(adc_value*0.4887);
  1880  0D1A  084A               	movf	LM35ReadTemp@adc_value+1,w
  1881  0D1B  00BC               	movwf	___lwtoft@c+1
  1882  0D1C  0849               	movf	LM35ReadTemp@adc_value,w
  1883  0D1D  00BB               	movwf	___lwtoft@c
  1884  0D1E  120A  158A  2430  120A  158A  	fcall	___lwtoft
  1885  0D23  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0D24  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0D25  083B               	movf	?___lwtoft,w
  1888  0D26  00C2               	movwf	___ftmul@f2
  1889  0D27  083C               	movf	?___lwtoft+1,w
  1890  0D28  00C3               	movwf	___ftmul@f2+1
  1891  0D29  083D               	movf	?___lwtoft+2,w
  1892  0D2A  00C4               	movwf	___ftmul@f2+2
  1893  0D2B  3037               	movlw	55
  1894  0D2C  00BF               	movwf	___ftmul@f1
  1895  0D2D  30FA               	movlw	250
  1896  0D2E  00C0               	movwf	___ftmul@f1+1
  1897  0D2F  303E               	movlw	62
  1898  0D30  00C1               	movwf	___ftmul@f1+2
  1899  0D31  120A  118A  229B  120A  158A  	fcall	___ftmul
  1900  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0D38  083F               	movf	?___ftmul,w
  1903  0D39  1683               	bsf	3,5	;RP0=1, select bank1
  1904  0D3A  1303               	bcf	3,6	;RP1=0, select bank1
  1905  0D3B  00C6               	movwf	___fttol@f1^(0+128)
  1906  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0D3E  0840               	movf	?___ftmul+1,w
  1909  0D3F  1683               	bsf	3,5	;RP0=1, select bank1
  1910  0D40  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0D41  00C7               	movwf	(___fttol@f1+1)^(0+128)
  1912  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0D44  0841               	movf	?___ftmul+2,w
  1915  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  1916  0D46  1303               	bcf	3,6	;RP1=0, select bank1
  1917  0D47  00C8               	movwf	(___fttol@f1+2)^(0+128)
  1918  0D48  120A  118A  2529   	fcall	___fttol
  1919  0D4B  1683               	bsf	3,5	;RP0=1, select bank1
  1920  0D4C  1303               	bcf	3,6	;RP1=0, select bank1
  1921  0D4D  0847               	movf	(?___fttol^(0+128)+1),w
  1922  0D4E  00D5               	movwf	(?_LM35ReadTemp+1)^(0+128)
  1923  0D4F  0846               	movf	?___fttol^(0+128),w
  1924  0D50  00D4               	movwf	?_LM35ReadTemp^(0+128)
  1925  0D51  0008               	return
  1926  0D52                     __end_of_LM35ReadTemp:	
  1927                           
  1928                           	psect	text3
  1929  0C30                     __ptext3:	
  1930 ;; *************** function ___lwtoft *****************
  1931 ;; Defined at:
  1932 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  c               2   27[BANK0 ] unsigned int 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  3   27[BANK0 ] float 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, pclath, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         0       3       0       0       0
  1947 ;;      Locals:         0       0       0       0       0
  1948 ;;      Temps:          0       1       0       0       0
  1949 ;;      Totals:         0       4       0       0       0
  1950 ;;Total ram usage:        4 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    5
  1953 ;; This function calls:
  1954 ;;		___ftpack
  1955 ;; This function is called by:
  1956 ;;		_LM35ReadTemp
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           
  1961                           ;psect for function ___lwtoft
  1962  0C30                     ___lwtoft:	
  1963                           
  1964                           ;incstack = 0
  1965                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1966  0C30  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0C31  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0C32  083B               	movf	___lwtoft@c,w
  1969  0C33  00B3               	movwf	___ftpack@arg
  1970  0C34  083C               	movf	___lwtoft@c+1,w
  1971  0C35  00B4               	movwf	___ftpack@arg+1
  1972  0C36  01B5               	clrf	___ftpack@arg+2
  1973  0C37  308E               	movlw	142
  1974  0C38  00BE               	movwf	??___lwtoft
  1975  0C39  083E               	movf	??___lwtoft,w
  1976  0C3A  00B6               	movwf	___ftpack@exp
  1977  0C3B  01B7               	clrf	___ftpack@sign
  1978  0C3C  120A  118A  25B7   	fcall	___ftpack
  1979  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0C41  0833               	movf	?___ftpack,w
  1982  0C42  00BB               	movwf	?___lwtoft
  1983  0C43  0834               	movf	?___ftpack+1,w
  1984  0C44  00BC               	movwf	?___lwtoft+1
  1985  0C45  0835               	movf	?___ftpack+2,w
  1986  0C46  00BD               	movwf	?___lwtoft+2
  1987  0C47  0008               	return
  1988  0C48                     __end_of___lwtoft:	
  1989                           
  1990                           	psect	text4
  1991  0529                     __ptext4:	
  1992 ;; *************** function ___fttol *****************
  1993 ;; Defined at:
  1994 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  f1              3    6[BANK1 ] float 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  lval            4   15[BANK1 ] unsigned long 
  1999 ;;  exp1            1   19[BANK1 ] unsigned char 
  2000 ;;  sign1           1   14[BANK1 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  4    6[BANK1 ] long 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2010 ;;      Params:         0       0       4       0       0
  2011 ;;      Locals:         0       0       6       0       0
  2012 ;;      Temps:          0       0       4       0       0
  2013 ;;      Totals:         0       0      14       0       0
  2014 ;;Total ram usage:       14 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    4
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_LM35ReadTemp
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function ___fttol
  2026  0529                     ___fttol:	
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2030  0529  1683               	bsf	3,5	;RP0=1, select bank1
  2031  052A  1303               	bcf	3,6	;RP1=0, select bank1
  2032  052B  0846               	movf	___fttol@f1^(0+128),w
  2033  052C  00CA               	movwf	??___fttol^(0+128)
  2034  052D  0847               	movf	(___fttol@f1+1)^(0+128),w
  2035  052E  00CB               	movwf	(??___fttol^(0+128)+1)
  2036  052F  0848               	movf	(___fttol@f1+2)^(0+128),w
  2037  0530  00CC               	movwf	(??___fttol^(0+128)+2)
  2038  0531  1003               	clrc
  2039  0532  0D4B               	rlf	(??___fttol^(0+128)+1),w
  2040  0533  0D4C               	rlf	(??___fttol^(0+128)+2),w
  2041  0534  00CD               	movwf	(??___fttol+3)^(0+128)
  2042  0535  084D               	movf	(??___fttol+3)^(0+128),w
  2043  0536  00D3               	movwf	___fttol@exp1^(0+128)
  2044  0537  0853               	movf	___fttol@exp1^(0+128),w
  2045  0538  1D03               	btfss	3,2
  2046  0539  2D43               	goto	l2604
  2047  053A  3000               	movlw	0
  2048  053B  00C9               	movwf	(?___fttol+3)^(0+128)
  2049  053C  3000               	movlw	0
  2050  053D  00C8               	movwf	(?___fttol+2)^(0+128)
  2051  053E  3000               	movlw	0
  2052  053F  00C7               	movwf	(?___fttol+1)^(0+128)
  2053  0540  3000               	movlw	0
  2054  0541  00C6               	movwf	?___fttol^(0+128)
  2055  0542  0008               	return
  2056  0543                     l2604:	
  2057  0543  0846               	movf	___fttol@f1^(0+128),w
  2058  0544  00CA               	movwf	??___fttol^(0+128)
  2059  0545  0847               	movf	(___fttol@f1+1)^(0+128),w
  2060  0546  00CB               	movwf	(??___fttol^(0+128)+1)
  2061  0547  0848               	movf	(___fttol@f1+2)^(0+128),w
  2062  0548  00CC               	movwf	(??___fttol^(0+128)+2)
  2063  0549  3017               	movlw	23
  2064  054A                     u3545:	
  2065  054A  1003               	clrc
  2066  054B  0CCC               	rrf	(??___fttol^(0+128)+2),f
  2067  054C  0CCB               	rrf	(??___fttol^(0+128)+1),f
  2068  054D  0CCA               	rrf	??___fttol^(0+128),f
  2069  054E  3EFF               	addlw	-1
  2070  054F  1D03               	skipz
  2071  0550  2D4A               	goto	u3545
  2072  0551  084A               	movf	??___fttol^(0+128),w
  2073  0552  00CD               	movwf	(??___fttol+3)^(0+128)
  2074  0553  084D               	movf	(??___fttol+3)^(0+128),w
  2075  0554  00CE               	movwf	___fttol@sign1^(0+128)
  2076  0555  17C7               	bsf	(___fttol@f1^(0+128)+1),7
  2077  0556  30FF               	movlw	255
  2078  0557  05C6               	andwf	___fttol@f1^(0+128),f
  2079  0558  30FF               	movlw	255
  2080  0559  05C7               	andwf	(___fttol@f1+1)^(0+128),f
  2081  055A  3000               	movlw	0
  2082  055B  05C8               	andwf	(___fttol@f1+2)^(0+128),f
  2083  055C  0846               	movf	___fttol@f1^(0+128),w
  2084  055D  00CF               	movwf	___fttol@lval^(0+128)
  2085  055E  0847               	movf	(___fttol@f1+1)^(0+128),w
  2086  055F  00D0               	movwf	(___fttol@lval^(0+128)+1)
  2087  0560  0848               	movf	(___fttol@f1+2)^(0+128),w
  2088  0561  00D1               	movwf	(___fttol@lval^(0+128)+2)
  2089  0562  01D2               	clrf	(___fttol@lval^(0+128)+3)
  2090  0563  308E               	movlw	142
  2091  0564  02D3               	subwf	___fttol@exp1^(0+128),f
  2092  0565  1FD3               	btfss	___fttol@exp1^(0+128),7
  2093  0566  2D85               	goto	l2624
  2094  0567  0853               	movf	___fttol@exp1^(0+128),w
  2095  0568  3A80               	xorlw	128
  2096  0569  3E8F               	addlw	143
  2097  056A  1803               	skipnc
  2098  056B  2D75               	goto	l2622
  2099  056C  3000               	movlw	0
  2100  056D  00C9               	movwf	(?___fttol+3)^(0+128)
  2101  056E  3000               	movlw	0
  2102  056F  00C8               	movwf	(?___fttol+2)^(0+128)
  2103  0570  3000               	movlw	0
  2104  0571  00C7               	movwf	(?___fttol+1)^(0+128)
  2105  0572  3000               	movlw	0
  2106  0573  00C6               	movwf	?___fttol^(0+128)
  2107  0574  0008               	return
  2108  0575                     l2622:	
  2109  0575  3001               	movlw	1
  2110  0576                     u3575:	
  2111  0576  1003               	clrc
  2112  0577  0CD2               	rrf	(___fttol@lval+3)^(0+128),f
  2113  0578  0CD1               	rrf	(___fttol@lval+2)^(0+128),f
  2114  0579  0CD0               	rrf	(___fttol@lval+1)^(0+128),f
  2115  057A  0CCF               	rrf	___fttol@lval^(0+128),f
  2116  057B  3EFF               	addlw	-1
  2117  057C  1D03               	skipz
  2118  057D  2D76               	goto	u3575
  2119  057E  3001               	movlw	1
  2120  057F  00CA               	movwf	??___fttol^(0+128)
  2121  0580  084A               	movf	??___fttol^(0+128),w
  2122  0581  07D3               	addwf	___fttol@exp1^(0+128),f
  2123  0582  1903               	btfsc	3,2
  2124  0583  2DA0               	goto	l2632
  2125  0584  2D75               	goto	l2622
  2126  0585                     l2624:	
  2127  0585  3018               	movlw	24
  2128  0586  0253               	subwf	___fttol@exp1^(0+128),w
  2129  0587  1C03               	skipc
  2130  0588  2D9D               	goto	l510
  2131  0589  3000               	movlw	0
  2132  058A  00C9               	movwf	(?___fttol+3)^(0+128)
  2133  058B  3000               	movlw	0
  2134  058C  00C8               	movwf	(?___fttol+2)^(0+128)
  2135  058D  3000               	movlw	0
  2136  058E  00C7               	movwf	(?___fttol+1)^(0+128)
  2137  058F  3000               	movlw	0
  2138  0590  00C6               	movwf	?___fttol^(0+128)
  2139  0591  0008               	return
  2140  0592                     l2630:	
  2141  0592  3001               	movlw	1
  2142  0593  00CA               	movwf	??___fttol^(0+128)
  2143  0594                     u3605:	
  2144  0594  1003               	clrc
  2145  0595  0DCF               	rlf	___fttol@lval^(0+128),f
  2146  0596  0DD0               	rlf	(___fttol@lval+1)^(0+128),f
  2147  0597  0DD1               	rlf	(___fttol@lval+2)^(0+128),f
  2148  0598  0DD2               	rlf	(___fttol@lval+3)^(0+128),f
  2149  0599  0BCA               	decfsz	??___fttol^(0+128),f
  2150  059A  2D94               	goto	u3605
  2151  059B  3001               	movlw	1
  2152  059C  02D3               	subwf	___fttol@exp1^(0+128),f
  2153  059D                     l510:	
  2154  059D  0853               	movf	___fttol@exp1^(0+128),w
  2155  059E  1D03               	btfss	3,2
  2156  059F  2D92               	goto	l2630
  2157  05A0                     l2632:	
  2158  05A0  084E               	movf	___fttol@sign1^(0+128),w
  2159  05A1  1903               	btfsc	3,2
  2160  05A2  2DAE               	goto	l2636
  2161  05A3  09CF               	comf	___fttol@lval^(0+128),f
  2162  05A4  09D0               	comf	(___fttol@lval+1)^(0+128),f
  2163  05A5  09D1               	comf	(___fttol@lval+2)^(0+128),f
  2164  05A6  09D2               	comf	(___fttol@lval+3)^(0+128),f
  2165  05A7  0ACF               	incf	___fttol@lval^(0+128),f
  2166  05A8  1903               	skipnz
  2167  05A9  0AD0               	incf	(___fttol@lval+1)^(0+128),f
  2168  05AA  1903               	skipnz
  2169  05AB  0AD1               	incf	(___fttol@lval+2)^(0+128),f
  2170  05AC  1903               	skipnz
  2171  05AD  0AD2               	incf	(___fttol@lval+3)^(0+128),f
  2172  05AE                     l2636:	
  2173  05AE  0852               	movf	(___fttol@lval+3)^(0+128),w
  2174  05AF  00C9               	movwf	(?___fttol+3)^(0+128)
  2175  05B0  0851               	movf	(___fttol@lval+2)^(0+128),w
  2176  05B1  00C8               	movwf	(?___fttol+2)^(0+128)
  2177  05B2  0850               	movf	(___fttol@lval+1)^(0+128),w
  2178  05B3  00C7               	movwf	(?___fttol+1)^(0+128)
  2179  05B4  084F               	movf	___fttol@lval^(0+128),w
  2180  05B5  00C6               	movwf	?___fttol^(0+128)
  2181  05B6  0008               	return
  2182  05B7                     __end_of___fttol:	
  2183                           
  2184                           	psect	text5
  2185  029B                     __ptext5:	
  2186 ;; *************** function ___ftmul *****************
  2187 ;; Defined at:
  2188 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  f1              3   31[BANK0 ] float 
  2191 ;;  f2              3   34[BANK0 ] float 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
  2194 ;;  sign            1    5[BANK1 ] unsigned char 
  2195 ;;  cntr            1    4[BANK1 ] unsigned char 
  2196 ;;  exp             1    0[BANK1 ] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  3   31[BANK0 ] float 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       6       0       0       0
  2207 ;;      Locals:         0       0       6       0       0
  2208 ;;      Temps:          0       4       0       0       0
  2209 ;;      Totals:         0      10       6       0       0
  2210 ;;Total ram usage:       16 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    5
  2213 ;; This function calls:
  2214 ;;		___ftpack
  2215 ;; This function is called by:
  2216 ;;		_LM35ReadTemp
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function ___ftmul
  2222  029B                     ___ftmul:	
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2226  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2227  029C  1303               	bcf	3,6	;RP1=0, select bank0
  2228  029D  083F               	movf	___ftmul@f1,w
  2229  029E  00C5               	movwf	??___ftmul
  2230  029F  0840               	movf	___ftmul@f1+1,w
  2231  02A0  00C6               	movwf	??___ftmul+1
  2232  02A1  0841               	movf	___ftmul@f1+2,w
  2233  02A2  00C7               	movwf	??___ftmul+2
  2234  02A3  1003               	clrc
  2235  02A4  0D46               	rlf	??___ftmul+1,w
  2236  02A5  0D47               	rlf	??___ftmul+2,w
  2237  02A6  00C8               	movwf	??___ftmul+3
  2238  02A7  0848               	movf	??___ftmul+3,w
  2239  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2240  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  2241  02AA  00C0               	movwf	___ftmul@exp^(0+128)
  2242  02AB  0840               	movf	___ftmul@exp^(0+128),w
  2243  02AC  1D03               	btfss	3,2
  2244  02AD  2AB7               	goto	l2554
  2245  02AE  3000               	movlw	0
  2246  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2247  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2248  02B1  00BF               	movwf	?___ftmul
  2249  02B2  3000               	movlw	0
  2250  02B3  00C0               	movwf	?___ftmul+1
  2251  02B4  3000               	movlw	0
  2252  02B5  00C1               	movwf	?___ftmul+2
  2253  02B6  0008               	return
  2254  02B7                     l2554:	
  2255  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2256  02B8  0842               	movf	___ftmul@f2,w
  2257  02B9  00C5               	movwf	??___ftmul
  2258  02BA  0843               	movf	___ftmul@f2+1,w
  2259  02BB  00C6               	movwf	??___ftmul+1
  2260  02BC  0844               	movf	___ftmul@f2+2,w
  2261  02BD  00C7               	movwf	??___ftmul+2
  2262  02BE  1003               	clrc
  2263  02BF  0D46               	rlf	??___ftmul+1,w
  2264  02C0  0D47               	rlf	??___ftmul+2,w
  2265  02C1  00C8               	movwf	??___ftmul+3
  2266  02C2  0848               	movf	??___ftmul+3,w
  2267  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2268  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  2269  02C5  00C5               	movwf	___ftmul@sign^(0+128)
  2270  02C6  0845               	movf	___ftmul@sign^(0+128),w
  2271  02C7  1D03               	btfss	3,2
  2272  02C8  2AD2               	goto	l2560
  2273  02C9  3000               	movlw	0
  2274  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2275  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2276  02CC  00BF               	movwf	?___ftmul
  2277  02CD  3000               	movlw	0
  2278  02CE  00C0               	movwf	?___ftmul+1
  2279  02CF  3000               	movlw	0
  2280  02D0  00C1               	movwf	?___ftmul+2
  2281  02D1  0008               	return
  2282  02D2                     l2560:	
  2283  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2284  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2285  02D4  0845               	movf	___ftmul@sign^(0+128),w
  2286  02D5  3E7B               	addlw	123
  2287  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2288  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2289  02D8  00C5               	movwf	??___ftmul
  2290  02D9  0845               	movf	??___ftmul,w
  2291  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  2292  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  2293  02DC  07C0               	addwf	___ftmul@exp^(0+128),f
  2294  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2295  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2296  02DF  083F               	movf	___ftmul@f1,w
  2297  02E0  00C5               	movwf	??___ftmul
  2298  02E1  0840               	movf	___ftmul@f1+1,w
  2299  02E2  00C6               	movwf	??___ftmul+1
  2300  02E3  0841               	movf	___ftmul@f1+2,w
  2301  02E4  00C7               	movwf	??___ftmul+2
  2302  02E5  3010               	movlw	16
  2303  02E6                     u3415:	
  2304  02E6  1003               	clrc
  2305  02E7  0CC7               	rrf	??___ftmul+2,f
  2306  02E8  0CC6               	rrf	??___ftmul+1,f
  2307  02E9  0CC5               	rrf	??___ftmul,f
  2308  02EA  3EFF               	addlw	-1
  2309  02EB  1D03               	skipz
  2310  02EC  2AE6               	goto	u3415
  2311  02ED  0845               	movf	??___ftmul,w
  2312  02EE  00C8               	movwf	??___ftmul+3
  2313  02EF  0848               	movf	??___ftmul+3,w
  2314  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2315  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2316  02F2  00C5               	movwf	___ftmul@sign^(0+128)
  2317  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2318  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2319  02F5  0842               	movf	___ftmul@f2,w
  2320  02F6  00C5               	movwf	??___ftmul
  2321  02F7  0843               	movf	___ftmul@f2+1,w
  2322  02F8  00C6               	movwf	??___ftmul+1
  2323  02F9  0844               	movf	___ftmul@f2+2,w
  2324  02FA  00C7               	movwf	??___ftmul+2
  2325  02FB  3010               	movlw	16
  2326  02FC                     u3425:	
  2327  02FC  1003               	clrc
  2328  02FD  0CC7               	rrf	??___ftmul+2,f
  2329  02FE  0CC6               	rrf	??___ftmul+1,f
  2330  02FF  0CC5               	rrf	??___ftmul,f
  2331  0300  3EFF               	addlw	-1
  2332  0301  1D03               	skipz
  2333  0302  2AFC               	goto	u3425
  2334  0303  0845               	movf	??___ftmul,w
  2335  0304  00C8               	movwf	??___ftmul+3
  2336  0305  0848               	movf	??___ftmul+3,w
  2337  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2339  0308  06C5               	xorwf	___ftmul@sign^(0+128),f
  2340  0309  3080               	movlw	128
  2341  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2342  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2343  030C  00C5               	movwf	??___ftmul
  2344  030D  0845               	movf	??___ftmul,w
  2345  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2346  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2347  0310  05C5               	andwf	___ftmul@sign^(0+128),f
  2348  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0313  17C0               	bsf	___ftmul@f1+1,7
  2351  0314  17C3               	bsf	___ftmul@f2+1,7
  2352  0315  30FF               	movlw	255
  2353  0316  05C2               	andwf	___ftmul@f2,f
  2354  0317  30FF               	movlw	255
  2355  0318  05C3               	andwf	___ftmul@f2+1,f
  2356  0319  3000               	movlw	0
  2357  031A  05C4               	andwf	___ftmul@f2+2,f
  2358  031B  3000               	movlw	0
  2359  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2360  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2361  031E  00C1               	movwf	___ftmul@f3_as_product^(0+128)
  2362  031F  3000               	movlw	0
  2363  0320  00C2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  2364  0321  3000               	movlw	0
  2365  0322  00C3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  2366  0323  3007               	movlw	7
  2367  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0326  00C5               	movwf	??___ftmul
  2370  0327  0845               	movf	??___ftmul,w
  2371  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2373  032A  00C4               	movwf	___ftmul@cntr^(0+128)
  2374  032B                     l2572:	
  2375  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2376  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2377  032D  1C3F               	btfss	___ftmul@f1,0
  2378  032E  2B4D               	goto	l2576
  2379  032F  0842               	movf	___ftmul@f2,w
  2380  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2381  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2382  0332  07C1               	addwf	___ftmul@f3_as_product^(0+128),f
  2383  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0335  0843               	movf	___ftmul@f2+1,w
  2386  0336  1103               	clrz
  2387  0337  1803               	skipnc
  2388  0338  0A43               	incf	___ftmul@f2+1,w
  2389  0339  1903               	skipnz
  2390  033A  2B3E               	goto	u3441
  2391  033B  1683               	bsf	3,5	;RP0=1, select bank1
  2392  033C  1303               	bcf	3,6	;RP1=0, select bank1
  2393  033D  07C2               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  2394  033E                     u3441:	
  2395  033E  1283               	bcf	3,5	;RP0=0, select bank0
  2396  033F  1303               	bcf	3,6	;RP1=0, select bank0
  2397  0340  0844               	movf	___ftmul@f2+2,w
  2398  0341  1103               	clrz
  2399  0342  1803               	skipnc
  2400  0343  0A44               	incf	___ftmul@f2+2,w
  2401  0344  1903               	skipnz
  2402  0345  2B49               	goto	u3442
  2403  0346  1683               	bsf	3,5	;RP0=1, select bank1
  2404  0347  1303               	bcf	3,6	;RP1=0, select bank1
  2405  0348  07C3               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  2406  0349                     u3442:	
  2407  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2408  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2409  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2410  034C  1303               	bcf	3,6	;RP1=0, select bank1
  2411  034D                     l2576:	
  2412  034D  3001               	movlw	1
  2413  034E                     u3455:	
  2414  034E  1003               	clrc
  2415  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0350  0CC1               	rrf	___ftmul@f1+2,f
  2417  0351  0CC0               	rrf	___ftmul@f1+1,f
  2418  0352  0CBF               	rrf	___ftmul@f1,f
  2419  0353  3EFF               	addlw	-1
  2420  0354  1D03               	skipz
  2421  0355  2B4E               	goto	u3455
  2422  0356  3001               	movlw	1
  2423  0357                     u3465:	
  2424  0357  1003               	clrc
  2425  0358  0DC2               	rlf	___ftmul@f2,f
  2426  0359  0DC3               	rlf	___ftmul@f2+1,f
  2427  035A  0DC4               	rlf	___ftmul@f2+2,f
  2428  035B  3EFF               	addlw	-1
  2429  035C  1D03               	skipz
  2430  035D  2B57               	goto	u3465
  2431  035E  3001               	movlw	1
  2432  035F  1683               	bsf	3,5	;RP0=1, select bank1
  2433  0360  1303               	bcf	3,6	;RP1=0, select bank1
  2434  0361  02C4               	subwf	___ftmul@cntr^(0+128),f
  2435  0362  1D03               	btfss	3,2
  2436  0363  2B2B               	goto	l2572
  2437  0364  3009               	movlw	9
  2438  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0367  00C5               	movwf	??___ftmul
  2441  0368  0845               	movf	??___ftmul,w
  2442  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2443  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2444  036B  00C4               	movwf	___ftmul@cntr^(0+128)
  2445  036C                     l2584:	
  2446  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2447  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2448  036E  1C3F               	btfss	___ftmul@f1,0
  2449  036F  2B8E               	goto	l2588
  2450  0370  0842               	movf	___ftmul@f2,w
  2451  0371  1683               	bsf	3,5	;RP0=1, select bank1
  2452  0372  1303               	bcf	3,6	;RP1=0, select bank1
  2453  0373  07C1               	addwf	___ftmul@f3_as_product^(0+128),f
  2454  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2456  0376  0843               	movf	___ftmul@f2+1,w
  2457  0377  1103               	clrz
  2458  0378  1803               	skipnc
  2459  0379  0A43               	incf	___ftmul@f2+1,w
  2460  037A  1903               	skipnz
  2461  037B  2B7F               	goto	u3491
  2462  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2463  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2464  037E  07C2               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  2465  037F                     u3491:	
  2466  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0381  0844               	movf	___ftmul@f2+2,w
  2469  0382  1103               	clrz
  2470  0383  1803               	skipnc
  2471  0384  0A44               	incf	___ftmul@f2+2,w
  2472  0385  1903               	skipnz
  2473  0386  2B8A               	goto	u3492
  2474  0387  1683               	bsf	3,5	;RP0=1, select bank1
  2475  0388  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0389  07C3               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  2477  038A                     u3492:	
  2478  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2479  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2480  038C  1683               	bsf	3,5	;RP0=1, select bank1
  2481  038D  1303               	bcf	3,6	;RP1=0, select bank1
  2482  038E                     l2588:	
  2483  038E  3001               	movlw	1
  2484  038F                     u3505:	
  2485  038F  1003               	clrc
  2486  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0391  0CC1               	rrf	___ftmul@f1+2,f
  2488  0392  0CC0               	rrf	___ftmul@f1+1,f
  2489  0393  0CBF               	rrf	___ftmul@f1,f
  2490  0394  3EFF               	addlw	-1
  2491  0395  1D03               	skipz
  2492  0396  2B8F               	goto	u3505
  2493  0397  3001               	movlw	1
  2494  0398                     u3515:	
  2495  0398  1003               	clrc
  2496  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2497  039A  1303               	bcf	3,6	;RP1=0, select bank1
  2498  039B  0CC3               	rrf	(___ftmul@f3_as_product+2)^(0+128),f
  2499  039C  0CC2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  2500  039D  0CC1               	rrf	___ftmul@f3_as_product^(0+128),f
  2501  039E  3EFF               	addlw	-1
  2502  039F  1D03               	skipz
  2503  03A0  2B98               	goto	u3515
  2504  03A1  3001               	movlw	1
  2505  03A2  02C4               	subwf	___ftmul@cntr^(0+128),f
  2506  03A3  1D03               	btfss	3,2
  2507  03A4  2B6C               	goto	l2584
  2508  03A5  0841               	movf	___ftmul@f3_as_product^(0+128),w
  2509  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2510  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2511  03A8  00B3               	movwf	___ftpack@arg
  2512  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2513  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2514  03AB  0842               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  2515  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2516  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2517  03AE  00B4               	movwf	___ftpack@arg+1
  2518  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2519  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2520  03B1  0843               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  2521  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2522  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2523  03B4  00B5               	movwf	___ftpack@arg+2
  2524  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2525  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2526  03B7  0840               	movf	___ftmul@exp^(0+128),w
  2527  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2528  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2529  03BA  00C5               	movwf	??___ftmul
  2530  03BB  0845               	movf	??___ftmul,w
  2531  03BC  00B6               	movwf	___ftpack@exp
  2532  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2533  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2534  03BF  0845               	movf	___ftmul@sign^(0+128),w
  2535  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2536  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2537  03C2  00C6               	movwf	??___ftmul+1
  2538  03C3  0846               	movf	??___ftmul+1,w
  2539  03C4  00B7               	movwf	___ftpack@sign
  2540  03C5  120A  118A  25B7   	fcall	___ftpack
  2541  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2542  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2543  03CA  0833               	movf	?___ftpack,w
  2544  03CB  00BF               	movwf	?___ftmul
  2545  03CC  0834               	movf	?___ftpack+1,w
  2546  03CD  00C0               	movwf	?___ftmul+1
  2547  03CE  0835               	movf	?___ftpack+2,w
  2548  03CF  00C1               	movwf	?___ftmul+2
  2549  03D0  0008               	return
  2550  03D1                     __end_of___ftmul:	
  2551                           
  2552                           	psect	text6
  2553  05B7                     __ptext6:	
  2554 ;; *************** function ___ftpack *****************
  2555 ;; Defined at:
  2556 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  arg             3   19[BANK0 ] unsigned um
  2559 ;;  exp             1   22[BANK0 ] unsigned char 
  2560 ;;  sign            1   23[BANK0 ] unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  3   19[BANK0 ] float 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       5       0       0       0
  2573 ;;      Locals:         0       0       0       0       0
  2574 ;;      Temps:          0       3       0       0       0
  2575 ;;      Totals:         0       8       0       0       0
  2576 ;;Total ram usage:        8 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    4
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		___ftmul
  2583 ;;		___lwtoft
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function ___ftpack
  2589  05B7                     ___ftpack:	
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2593  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2594  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2595  05B9  0836               	movf	___ftpack@exp,w
  2596  05BA  1903               	btfsc	3,2
  2597  05BB  2DC1               	goto	l2352
  2598  05BC  0835               	movf	___ftpack@arg+2,w
  2599  05BD  0434               	iorwf	___ftpack@arg+1,w
  2600  05BE  0433               	iorwf	___ftpack@arg,w
  2601  05BF  1D03               	skipz
  2602  05C0  2DD4               	goto	l2358
  2603  05C1                     l2352:	
  2604  05C1  3000               	movlw	0
  2605  05C2  00B3               	movwf	?___ftpack
  2606  05C3  3000               	movlw	0
  2607  05C4  00B4               	movwf	?___ftpack+1
  2608  05C5  3000               	movlw	0
  2609  05C6  00B5               	movwf	?___ftpack+2
  2610  05C7  0008               	return
  2611  05C8                     l2356:	
  2612  05C8  3001               	movlw	1
  2613  05C9  00B8               	movwf	??___ftpack
  2614  05CA  0838               	movf	??___ftpack,w
  2615  05CB  07B6               	addwf	___ftpack@exp,f
  2616  05CC  3001               	movlw	1
  2617  05CD                     u3015:	
  2618  05CD  1003               	clrc
  2619  05CE  0CB5               	rrf	___ftpack@arg+2,f
  2620  05CF  0CB4               	rrf	___ftpack@arg+1,f
  2621  05D0  0CB3               	rrf	___ftpack@arg,f
  2622  05D1  3EFF               	addlw	-1
  2623  05D2  1D03               	skipz
  2624  05D3  2DCD               	goto	u3015
  2625  05D4                     l2358:	
  2626  05D4  30FE               	movlw	254
  2627  05D5  0535               	andwf	___ftpack@arg+2,w
  2628  05D6  1903               	btfsc	3,2
  2629  05D7  2DEF               	goto	l419
  2630  05D8  2DC8               	goto	l2356
  2631  05D9                     l2360:	
  2632  05D9  3001               	movlw	1
  2633  05DA  00B8               	movwf	??___ftpack
  2634  05DB  0838               	movf	??___ftpack,w
  2635  05DC  07B6               	addwf	___ftpack@exp,f
  2636  05DD  3001               	movlw	1
  2637  05DE  07B3               	addwf	___ftpack@arg,f
  2638  05DF  3000               	movlw	0
  2639  05E0  1803               	skipnc
  2640  05E1  3001               	movlw	1
  2641  05E2  07B4               	addwf	___ftpack@arg+1,f
  2642  05E3  3000               	movlw	0
  2643  05E4  1803               	skipnc
  2644  05E5  3001               	movlw	1
  2645  05E6  07B5               	addwf	___ftpack@arg+2,f
  2646  05E7  3001               	movlw	1
  2647  05E8                     u3035:	
  2648  05E8  1003               	clrc
  2649  05E9  0CB5               	rrf	___ftpack@arg+2,f
  2650  05EA  0CB4               	rrf	___ftpack@arg+1,f
  2651  05EB  0CB3               	rrf	___ftpack@arg,f
  2652  05EC  3EFF               	addlw	-1
  2653  05ED  1D03               	skipz
  2654  05EE  2DE8               	goto	u3035
  2655  05EF                     l419:	
  2656  05EF  30FF               	movlw	255
  2657  05F0  0535               	andwf	___ftpack@arg+2,w
  2658  05F1  1903               	btfsc	3,2
  2659  05F2  2DFE               	goto	l2368
  2660  05F3  2DD9               	goto	l2360
  2661  05F4                     l2366:	
  2662  05F4  3001               	movlw	1
  2663  05F5  02B6               	subwf	___ftpack@exp,f
  2664  05F6  3001               	movlw	1
  2665  05F7                     u3055:	
  2666  05F7  1003               	clrc
  2667  05F8  0DB3               	rlf	___ftpack@arg,f
  2668  05F9  0DB4               	rlf	___ftpack@arg+1,f
  2669  05FA  0DB5               	rlf	___ftpack@arg+2,f
  2670  05FB  3EFF               	addlw	-1
  2671  05FC  1D03               	skipz
  2672  05FD  2DF7               	goto	u3055
  2673  05FE                     l2368:	
  2674  05FE  1BB4               	btfsc	___ftpack@arg+1,7
  2675  05FF  2E04               	goto	l426
  2676  0600  3002               	movlw	2
  2677  0601  0236               	subwf	___ftpack@exp,w
  2678  0602  1803               	skipnc
  2679  0603  2DF4               	goto	l2366
  2680  0604                     l426:	
  2681  0604  1836               	btfsc	___ftpack@exp,0
  2682  0605  2E0C               	goto	l427
  2683  0606  30FF               	movlw	255
  2684  0607  05B3               	andwf	___ftpack@arg,f
  2685  0608  307F               	movlw	127
  2686  0609  05B4               	andwf	___ftpack@arg+1,f
  2687  060A  30FF               	movlw	255
  2688  060B  05B5               	andwf	___ftpack@arg+2,f
  2689  060C                     l427:	
  2690  060C  1003               	clrc
  2691  060D  0CB6               	rrf	___ftpack@exp,f
  2692  060E  0836               	movf	___ftpack@exp,w
  2693  060F  00B8               	movwf	??___ftpack
  2694  0610  01B9               	clrf	??___ftpack+1
  2695  0611  01BA               	clrf	??___ftpack+2
  2696  0612  3010               	movlw	16
  2697  0613                     u3095:	
  2698  0613  1003               	clrc
  2699  0614  0DB8               	rlf	??___ftpack,f
  2700  0615  0DB9               	rlf	??___ftpack+1,f
  2701  0616  0DBA               	rlf	??___ftpack+2,f
  2702  0617  3EFF               	addlw	-1
  2703  0618  1D03               	skipz
  2704  0619  2E13               	goto	u3095
  2705  061A  0838               	movf	??___ftpack,w
  2706  061B  04B3               	iorwf	___ftpack@arg,f
  2707  061C  0839               	movf	??___ftpack+1,w
  2708  061D  04B4               	iorwf	___ftpack@arg+1,f
  2709  061E  083A               	movf	??___ftpack+2,w
  2710  061F  04B5               	iorwf	___ftpack@arg+2,f
  2711  0620  0837               	movf	___ftpack@sign,w
  2712  0621  1903               	btfsc	3,2
  2713  0622  0008               	return
  2714  0623  17B5               	bsf	___ftpack@arg+2,7
  2715  0624  0008               	return
  2716  0625                     __end_of___ftpack:	
  2717                           
  2718                           	psect	text7
  2719  0C48                     __ptext7:	
  2720 ;; *************** function _ReadADC *****************
  2721 ;; Defined at:
  2722 ;;		line 27 in file "adc_pic16.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  ch              1    wreg     unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  ch              1   22[BANK0 ] unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  2   19[BANK0 ] unsigned int 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         0       2       0       0       0
  2737 ;;      Locals:         0       1       0       0       0
  2738 ;;      Temps:          0       1       0       0       0
  2739 ;;      Totals:         0       4       0       0       0
  2740 ;;Total ram usage:        4 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    4
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_LM35ReadTemp
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _ReadADC
  2752  0C48                     _ReadADC:	
  2753                           
  2754                           ;incstack = 0
  2755                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  2756                           ;ReadADC@ch stored from wreg
  2757  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0C4A  00B6               	movwf	ReadADC@ch
  2760                           
  2761                           ;adc_pic16.c: 29: ADCON0bits.CHS=ch;
  2762  0C4B  0836               	movf	ReadADC@ch,w
  2763  0C4C  00B5               	movwf	??_ReadADC
  2764  0C4D  0DB5               	rlf	??_ReadADC,f
  2765  0C4E  0DB5               	rlf	??_ReadADC,f
  2766  0C4F  081F               	movf	31,w	;volatile
  2767  0C50  0635               	xorwf	??_ReadADC,w
  2768  0C51  39C3               	andlw	-61
  2769  0C52  0635               	xorwf	??_ReadADC,w
  2770  0C53  009F               	movwf	31	;volatile
  2771                           
  2772                           ;adc_pic16.c: 32: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2773  0C54  30A6               	movlw	166
  2774  0C55  00B5               	movwf	??_ReadADC
  2775  0C56                     u4457:	
  2776  0C56  0BB5               	decfsz	??_ReadADC,f
  2777  0C57  2C56               	goto	u4457
  2778  0C58  0000               	nop
  2779                           
  2780                           ;adc_pic16.c: 35: ADCON0bits.GO=1;
  2781  0C59  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0C5B  149F               	bsf	31,1	;volatile
  2784  0C5C                     l20:	
  2785                           ;adc_pic16.c: 38: while(ADCON0bits.GO);
  2786                           
  2787  0C5C  189F               	btfsc	31,1	;volatile
  2788  0C5D  2C5C               	goto	l20
  2789                           
  2790                           ;adc_pic16.c: 40: return ((ADRESH<<8)|ADRESL);
  2791  0C5E  081E               	movf	30,w	;volatile
  2792  0C5F  00B4               	movwf	?_ReadADC+1
  2793  0C60  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0C61  1303               	bcf	3,6	;RP1=0, select bank1
  2795  0C62  081E               	movf	30,w	;volatile
  2796  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0C65  00B3               	movwf	?_ReadADC
  2799  0C66  0008               	return
  2800  0C67                     __end_of_ReadADC:	
  2801                           
  2802                           	psect	text8
  2803  0FA5                     __ptext8:	
  2804 ;; *************** function _LCDWriteString *****************
  2805 ;; Defined at:
  2806 ;;		line 279 in file "lcd_hd44780_pic16.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;  msg             2   31[BANK0 ] PTR const unsigned char 
  2809 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  2810 ;;		 -> STR_6(5), STR_5(4), STR_4(4), STR_3(5), 
  2811 ;;		 -> STR_2(4), STR_1(17), msg(32), 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  cc              1   34[BANK0 ] char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       2       0       0       0
  2824 ;;      Locals:         0       1       0       0       0
  2825 ;;      Temps:          0       1       0       0       0
  2826 ;;      Totals:         0       4       0       0       0
  2827 ;;Total ram usage:        4 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    6
  2830 ;; This function calls:
  2831 ;;		_LCDByte
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _LCDWriteString
  2839  0FA5                     _LCDWriteString:	
  2840  0FA5                     l2792:	
  2841                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2845                           
  2846  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0FA7  0840               	movf	LCDWriteString@msg+1,w
  2849  0FA8  00FF               	movwf	127
  2850  0FA9  083F               	movf	LCDWriteString@msg,w
  2851  0FAA  0084               	movwf	4
  2852  0FAB  120A  118A  27C5  120A  158A  	fcall	stringtab
  2853  0FB0  3A00               	xorlw	0
  2854  0FB1  1903               	btfsc	3,2
  2855  0FB2  0008               	return
  2856                           
  2857                           ;lcd_hd44780_pic16.c: 282: {
  2858                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  2859  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  2861  0FB5  0840               	movf	LCDWriteString@msg+1,w
  2862  0FB6  00FF               	movwf	127
  2863  0FB7  083F               	movf	LCDWriteString@msg,w
  2864  0FB8  0084               	movwf	4
  2865  0FB9  120A  118A  27C5  120A  158A  	fcall	stringtab
  2866  0FBE  3A25               	xorlw	37
  2867  0FBF  1D03               	skipz
  2868  0FC0  2FE7               	goto	l2788
  2869                           
  2870                           ;lcd_hd44780_pic16.c: 285: {
  2871                           ;lcd_hd44780_pic16.c: 286: msg++;
  2872  0FC1  3001               	movlw	1
  2873  0FC2  07BF               	addwf	LCDWriteString@msg,f
  2874  0FC3  1803               	skipnc
  2875  0FC4  0AC0               	incf	LCDWriteString@msg+1,f
  2876                           
  2877                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  2878  0FC5  0840               	movf	LCDWriteString@msg+1,w
  2879  0FC6  00FF               	movwf	127
  2880  0FC7  083F               	movf	LCDWriteString@msg,w
  2881  0FC8  0084               	movwf	4
  2882  0FC9  120A  118A  27C5  120A  158A  	fcall	stringtab
  2883  0FCE  3ED0               	addlw	-48
  2884  0FCF  00C1               	movwf	??_LCDWriteString
  2885  0FD0  0841               	movf	??_LCDWriteString,w
  2886  0FD1  00C2               	movwf	LCDWriteString@cc
  2887                           
  2888                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  2889  0FD2  1BC2               	btfsc	LCDWriteString@cc,7
  2890  0FD3  2FDD               	goto	l2784
  2891  0FD4  0842               	movf	LCDWriteString@cc,w
  2892  0FD5  3A80               	xorlw	128
  2893  0FD6  3E78               	addlw	-136
  2894  0FD7  1803               	skipnc
  2895  0FD8  2FDD               	goto	l2784
  2896                           
  2897                           ;lcd_hd44780_pic16.c: 290: {
  2898                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  2899  0FD9  01B8               	clrf	LCDByte@isdata
  2900  0FDA  0AB8               	incf	LCDByte@isdata,f
  2901  0FDB  0842               	movf	LCDWriteString@cc,w
  2902  0FDC  2FF4               	goto	L6
  2903  0FDD                     l2784:	
  2904                           ;lcd_hd44780_pic16.c: 292: }
  2905                           
  2906                           
  2907                           ;lcd_hd44780_pic16.c: 293: else
  2908                           ;lcd_hd44780_pic16.c: 294: {
  2909                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  2910  0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0FDF  01B8               	clrf	LCDByte@isdata
  2913  0FE0  0AB8               	incf	LCDByte@isdata,f
  2914  0FE1  3025               	movlw	37
  2915  0FE2  120A  158A  2641  120A  158A  	fcall	_LCDByte
  2916  0FE7                     l2788:	
  2917                           ;lcd_hd44780_pic16.c: 297: }
  2918                           ;lcd_hd44780_pic16.c: 298: }
  2919                           
  2920                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  2921                           
  2922                           
  2923                           ;lcd_hd44780_pic16.c: 299: else
  2924                           ;lcd_hd44780_pic16.c: 300: {
  2925                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  2926  0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0FE9  01B8               	clrf	LCDByte@isdata
  2929  0FEA  0AB8               	incf	LCDByte@isdata,f
  2930  0FEB  0840               	movf	LCDWriteString@msg+1,w
  2931  0FEC  00FF               	movwf	127
  2932  0FED  083F               	movf	LCDWriteString@msg,w
  2933  0FEE  0084               	movwf	4
  2934  0FEF  120A  118A  27C5  120A  158A  	fcall	stringtab
  2935  0FF4                     L6:	
  2936  0FF4  120A  158A  2641  120A  158A  	fcall	_LCDByte
  2937                           
  2938                           ;lcd_hd44780_pic16.c: 302: }
  2939                           ;lcd_hd44780_pic16.c: 303: msg++;
  2940  0FF9  3001               	movlw	1
  2941  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0FFC  07BF               	addwf	LCDWriteString@msg,f
  2944  0FFD  1803               	skipnc
  2945  0FFE  0AC0               	incf	LCDWriteString@msg+1,f
  2946  0FFF  2FA5               	goto	l2792
  2947  1000                     __end_of_LCDWriteString:	
  2948                           
  2949                           	psect	text9
  2950  03D1                     __ptext9:	
  2951 ;; *************** function _LCDWriteInt *****************
  2952 ;; Defined at:
  2953 ;;		line 317 in file "lcd_hd44780_pic16.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  val             2   31[BANK0 ] int 
  2956 ;;  field_length    1   33[BANK0 ] char 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  str             5    0[BANK1 ] unsigned char [5]
  2959 ;;  i               2    7[BANK1 ] int 
  2960 ;;  j               2    5[BANK1 ] int 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2970 ;;      Params:         0       3       0       0       0
  2971 ;;      Locals:         0       0       9       0       0
  2972 ;;      Temps:          0       2       0       0       0
  2973 ;;      Totals:         0       5       9       0       0
  2974 ;;Total ram usage:       14 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    6
  2977 ;; This function calls:
  2978 ;;		_LCDByte
  2979 ;;		___awdiv
  2980 ;;		___awmod
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           
  2987                           ;psect for function _LCDWriteInt
  2988  03D1                     _LCDWriteInt:	
  2989                           
  2990                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  2991                           
  2992                           ;incstack = 0
  2993                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2994  03D1  30C0               	movlw	LCDWriteInt@str& (0+255)
  2995  03D2  0084               	movwf	4
  2996  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2997  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2998  03D5  0853               	movf	LCDWriteInt@F1642,w
  2999  03D6  1383               	bcf	3,7	;select IRP bank1
  3000  03D7  0080               	movwf	0
  3001  03D8  0A84               	incf	4,f
  3002  03D9  0854               	movf	LCDWriteInt@F1642+1,w
  3003  03DA  0080               	movwf	0
  3004  03DB  0A84               	incf	4,f
  3005  03DC  0855               	movf	LCDWriteInt@F1642+2,w
  3006  03DD  0080               	movwf	0
  3007  03DE  0A84               	incf	4,f
  3008  03DF  0856               	movf	LCDWriteInt@F1642+3,w
  3009  03E0  0080               	movwf	0
  3010  03E1  0A84               	incf	4,f
  3011  03E2  0857               	movf	LCDWriteInt@F1642+4,w
  3012  03E3  0080               	movwf	0
  3013                           
  3014                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  3015  03E4  3004               	movlw	4
  3016  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  3017  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  3018  03E7  00C7               	movwf	LCDWriteInt@i^(0+128)
  3019  03E8  3000               	movlw	0
  3020  03E9  00C8               	movwf	(LCDWriteInt@i^(0+128)+1)
  3021  03EA  01C5               	clrf	LCDWriteInt@j^(0+128)
  3022  03EB  01C6               	clrf	(LCDWriteInt@j+1)^(0+128)
  3023                           
  3024                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  3025  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3026  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  3027  03EE  083F               	movf	LCDWriteInt@val,w
  3028  03EF  0440               	iorwf	LCDWriteInt@val+1,w
  3029  03F0  1D03               	btfss	3,2
  3030  03F1  2BF5               	goto	l2804
  3031                           
  3032                           ;lcd_hd44780_pic16.c: 323: {
  3033                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  3034  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  3035  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  3036  03F4  01C4               	clrf	(LCDWriteInt@str^(0+128)+4)
  3037  03F5                     l2804:	
  3038                           
  3039                           ;lcd_hd44780_pic16.c: 325: }
  3040                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  3041  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  3042  03F6  1FC0               	btfss	LCDWriteInt@val+1,7
  3043  03F7  2C07               	goto	l2816
  3044                           
  3045                           ;lcd_hd44780_pic16.c: 328: {
  3046                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  3047  03F8  01B8               	clrf	LCDByte@isdata
  3048  03F9  0AB8               	incf	LCDByte@isdata,f
  3049  03FA  302D               	movlw	45
  3050  03FB  120A  158A  2641  120A  118A  	fcall	_LCDByte
  3051                           
  3052                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  3053  0400  1283               	bcf	3,5	;RP0=0, select bank0
  3054  0401  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0402  09BF               	comf	LCDWriteInt@val,f
  3056  0403  09C0               	comf	LCDWriteInt@val+1,f
  3057  0404  0ABF               	incf	LCDWriteInt@val,f
  3058  0405  1903               	skipnz
  3059  0406  0AC0               	incf	LCDWriteInt@val+1,f
  3060  0407                     l2816:	
  3061                           ;lcd_hd44780_pic16.c: 331: }
  3062                           ;lcd_hd44780_pic16.c: 333: while(val)
  3063                           
  3064  0407  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0408  083F               	movf	LCDWriteInt@val,w
  3066  0409  0440               	iorwf	LCDWriteInt@val+1,w
  3067  040A  1903               	btfsc	3,2
  3068  040B  2C43               	goto	l2818
  3069                           
  3070                           ;lcd_hd44780_pic16.c: 334: {
  3071                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  3072  040C  300A               	movlw	10
  3073  040D  00B3               	movwf	___awmod@divisor
  3074  040E  3000               	movlw	0
  3075  040F  00B4               	movwf	___awmod@divisor+1
  3076  0410  0840               	movf	LCDWriteInt@val+1,w
  3077  0411  00B6               	movwf	___awmod@dividend+1
  3078  0412  083F               	movf	LCDWriteInt@val,w
  3079  0413  00B5               	movwf	___awmod@dividend
  3080  0414  120A  158A  259D  120A  118A  	fcall	___awmod
  3081  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3082  041A  1303               	bcf	3,6	;RP1=0, select bank0
  3083  041B  0833               	movf	?___awmod,w
  3084  041C  00C2               	movwf	??_LCDWriteInt
  3085  041D  1683               	bsf	3,5	;RP0=1, select bank1
  3086  041E  1303               	bcf	3,6	;RP1=0, select bank1
  3087  041F  0847               	movf	LCDWriteInt@i^(0+128),w
  3088  0420  3EC0               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  3089  0421  0084               	movwf	4
  3090  0422  1283               	bcf	3,5	;RP0=0, select bank0
  3091  0423  1303               	bcf	3,6	;RP1=0, select bank0
  3092  0424  0842               	movf	??_LCDWriteInt,w
  3093  0425  1383               	bcf	3,7	;select IRP bank1
  3094  0426  0080               	movwf	0
  3095                           
  3096                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  3097  0427  300A               	movlw	10
  3098  0428  00B3               	movwf	___awdiv@divisor
  3099  0429  3000               	movlw	0
  3100  042A  00B4               	movwf	___awdiv@divisor+1
  3101  042B  0840               	movf	LCDWriteInt@val+1,w
  3102  042C  00B6               	movwf	___awdiv@dividend+1
  3103  042D  083F               	movf	LCDWriteInt@val,w
  3104  042E  00B5               	movwf	___awdiv@dividend
  3105  042F  120A  158A  274A  120A  118A  	fcall	___awdiv
  3106  0434  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0435  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0436  0834               	movf	?___awdiv+1,w
  3109  0437  00C0               	movwf	LCDWriteInt@val+1
  3110  0438  0833               	movf	?___awdiv,w
  3111  0439  00BF               	movwf	LCDWriteInt@val
  3112                           
  3113                           ;lcd_hd44780_pic16.c: 337: i--;
  3114  043A  30FF               	movlw	255
  3115  043B  1683               	bsf	3,5	;RP0=1, select bank1
  3116  043C  1303               	bcf	3,6	;RP1=0, select bank1
  3117  043D  07C7               	addwf	LCDWriteInt@i^(0+128),f
  3118  043E  1803               	skipnc
  3119  043F  0AC8               	incf	(LCDWriteInt@i+1)^(0+128),f
  3120  0440  30FF               	movlw	255
  3121  0441  07C8               	addwf	(LCDWriteInt@i+1)^(0+128),f
  3122  0442  2C07               	goto	l2816
  3123  0443                     l2818:	
  3124                           
  3125                           ;lcd_hd44780_pic16.c: 338: }
  3126                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  3127  0443  0A41               	incf	LCDWriteInt@field_length,w
  3128  0444  1903               	btfsc	3,2
  3129  0445  2C5F               	goto	l2826
  3130                           
  3131                           ;lcd_hd44780_pic16.c: 341: else
  3132                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  3133                           
  3134                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  3135  0446  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0447  0841               	movf	LCDWriteInt@field_length,w
  3137  0448  00C2               	movwf	??_LCDWriteInt
  3138  0449  01C3               	clrf	??_LCDWriteInt+1
  3139  044A  1BC2               	btfsc	??_LCDWriteInt,7
  3140  044B  03C3               	decf	??_LCDWriteInt+1,f
  3141  044C  09C2               	comf	??_LCDWriteInt,f
  3142  044D  09C3               	comf	??_LCDWriteInt+1,f
  3143  044E  0AC2               	incf	??_LCDWriteInt,f
  3144  044F  1903               	skipnz
  3145  0450  0AC3               	incf	??_LCDWriteInt+1,f
  3146  0451  0842               	movf	??_LCDWriteInt,w
  3147  0452  3E05               	addlw	5
  3148  0453  1683               	bsf	3,5	;RP0=1, select bank1
  3149  0454  1303               	bcf	3,6	;RP1=0, select bank1
  3150  0455  00C5               	movwf	LCDWriteInt@j^(0+128)
  3151  0456  1283               	bcf	3,5	;RP0=0, select bank0
  3152  0457  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0458  0843               	movf	??_LCDWriteInt+1,w
  3154  0459  1803               	skipnc
  3155  045A  3E01               	addlw	1
  3156  045B  3E00               	addlw	0
  3157  045C  1683               	bsf	3,5	;RP0=1, select bank1
  3158  045D  1303               	bcf	3,6	;RP1=0, select bank1
  3159  045E  00C6               	movwf	(LCDWriteInt@j+1)^(0+128)
  3160  045F                     l2826:	
  3161                           
  3162                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  3163  045F  1683               	bsf	3,5	;RP0=1, select bank1
  3164  0460  1303               	bcf	3,6	;RP1=0, select bank1
  3165  0461  0846               	movf	(LCDWriteInt@j+1)^(0+128),w
  3166  0462  00C8               	movwf	(LCDWriteInt@i+1)^(0+128)
  3167  0463  0845               	movf	LCDWriteInt@j^(0+128),w
  3168  0464  00C7               	movwf	LCDWriteInt@i^(0+128)
  3169  0465                     L7:	
  3170  0465  0848               	movf	(LCDWriteInt@i+1)^(0+128),w
  3171  0466  3A80               	xorlw	128
  3172  0467  00FF               	movwf	127
  3173  0468  3080               	movlw	128
  3174  0469  027F               	subwf	127,w
  3175  046A  1D03               	skipz
  3176  046B  2C6E               	goto	u3955
  3177  046C  3005               	movlw	5
  3178  046D  0247               	subwf	LCDWriteInt@i^(0+128),w
  3179  046E                     u3955:	
  3180  046E  1803               	btfsc	3,0
  3181  046F  0008               	return
  3182                           
  3183                           ;lcd_hd44780_pic16.c: 346: {
  3184                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  3185  0470  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0471  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0472  01B8               	clrf	LCDByte@isdata
  3188  0473  0AB8               	incf	LCDByte@isdata,f
  3189  0474  1683               	bsf	3,5	;RP0=1, select bank1
  3190  0475  1303               	bcf	3,6	;RP1=0, select bank1
  3191  0476  0847               	movf	LCDWriteInt@i^(0+128),w
  3192  0477  3EC0               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  3193  0478  0084               	movwf	4
  3194  0479  1383               	bcf	3,7	;select IRP bank1
  3195  047A  0800               	movf	0,w
  3196  047B  3E30               	addlw	48
  3197  047C  120A  158A  2641  120A  118A  	fcall	_LCDByte
  3198  0481  3001               	movlw	1
  3199  0482  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0483  1303               	bcf	3,6	;RP1=0, select bank1
  3201  0484  07C7               	addwf	LCDWriteInt@i^(0+128),f
  3202  0485  1803               	skipnc
  3203  0486  0AC8               	incf	(LCDWriteInt@i+1)^(0+128),f
  3204  0487  3000               	movlw	0
  3205  0488  07C8               	addwf	(LCDWriteInt@i+1)^(0+128),f
  3206  0489  2C65               	goto	L7
  3207  048A                     __end_of_LCDWriteInt:	
  3208                           
  3209                           	psect	text10
  3210  0D9D                     __ptext10:	
  3211 ;; *************** function ___awmod *****************
  3212 ;; Defined at:
  3213 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  divisor         2   19[BANK0 ] int 
  3216 ;;  dividend        2   21[BANK0 ] int 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  sign            1   25[BANK0 ] unsigned char 
  3219 ;;  counter         1   24[BANK0 ] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  2   19[BANK0 ] int 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3229 ;;      Params:         0       4       0       0       0
  3230 ;;      Locals:         0       2       0       0       0
  3231 ;;      Temps:          0       1       0       0       0
  3232 ;;      Totals:         0       7       0       0       0
  3233 ;;Total ram usage:        7 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    4
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_LCDWriteInt
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function ___awmod
  3245  0D9D                     ___awmod:	
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3249  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0D9F  01B9               	clrf	___awmod@sign
  3252  0DA0  1FB6               	btfss	___awmod@dividend+1,7
  3253  0DA1  2DA9               	goto	l2518
  3254  0DA2  09B5               	comf	___awmod@dividend,f
  3255  0DA3  09B6               	comf	___awmod@dividend+1,f
  3256  0DA4  0AB5               	incf	___awmod@dividend,f
  3257  0DA5  1903               	skipnz
  3258  0DA6  0AB6               	incf	___awmod@dividend+1,f
  3259  0DA7  01B9               	clrf	___awmod@sign
  3260  0DA8  0AB9               	incf	___awmod@sign,f
  3261  0DA9                     l2518:	
  3262  0DA9  1FB4               	btfss	___awmod@divisor+1,7
  3263  0DAA  2DB0               	goto	l2522
  3264  0DAB  09B3               	comf	___awmod@divisor,f
  3265  0DAC  09B4               	comf	___awmod@divisor+1,f
  3266  0DAD  0AB3               	incf	___awmod@divisor,f
  3267  0DAE  1903               	skipnz
  3268  0DAF  0AB4               	incf	___awmod@divisor+1,f
  3269  0DB0                     l2522:	
  3270  0DB0  0833               	movf	___awmod@divisor,w
  3271  0DB1  0434               	iorwf	___awmod@divisor+1,w
  3272  0DB2  1903               	btfsc	3,2
  3273  0DB3  2DDD               	goto	l2540
  3274  0DB4  01B8               	clrf	___awmod@counter
  3275  0DB5  0AB8               	incf	___awmod@counter,f
  3276  0DB6                     l2530:	
  3277  0DB6  1BB4               	btfsc	___awmod@divisor+1,7
  3278  0DB7  2DC4               	goto	l2532
  3279  0DB8  3001               	movlw	1
  3280  0DB9                     u3335:	
  3281  0DB9  1003               	clrc
  3282  0DBA  0DB3               	rlf	___awmod@divisor,f
  3283  0DBB  0DB4               	rlf	___awmod@divisor+1,f
  3284  0DBC  3EFF               	addlw	-1
  3285  0DBD  1D03               	skipz
  3286  0DBE  2DB9               	goto	u3335
  3287  0DBF  3001               	movlw	1
  3288  0DC0  00B7               	movwf	??___awmod
  3289  0DC1  0837               	movf	??___awmod,w
  3290  0DC2  07B8               	addwf	___awmod@counter,f
  3291  0DC3  2DB6               	goto	l2530
  3292  0DC4                     l2532:	
  3293  0DC4  0834               	movf	___awmod@divisor+1,w
  3294  0DC5  0236               	subwf	___awmod@dividend+1,w
  3295  0DC6  1D03               	skipz
  3296  0DC7  2DCA               	goto	u3355
  3297  0DC8  0833               	movf	___awmod@divisor,w
  3298  0DC9  0235               	subwf	___awmod@dividend,w
  3299  0DCA                     u3355:	
  3300  0DCA  1C03               	skipc
  3301  0DCB  2DD2               	goto	l2536
  3302  0DCC  0833               	movf	___awmod@divisor,w
  3303  0DCD  02B5               	subwf	___awmod@dividend,f
  3304  0DCE  0834               	movf	___awmod@divisor+1,w
  3305  0DCF  1C03               	skipc
  3306  0DD0  03B6               	decf	___awmod@dividend+1,f
  3307  0DD1  02B6               	subwf	___awmod@dividend+1,f
  3308  0DD2                     l2536:	
  3309  0DD2  3001               	movlw	1
  3310  0DD3                     u3365:	
  3311  0DD3  1003               	clrc
  3312  0DD4  0CB4               	rrf	___awmod@divisor+1,f
  3313  0DD5  0CB3               	rrf	___awmod@divisor,f
  3314  0DD6  3EFF               	addlw	-1
  3315  0DD7  1D03               	skipz
  3316  0DD8  2DD3               	goto	u3365
  3317  0DD9  3001               	movlw	1
  3318  0DDA  02B8               	subwf	___awmod@counter,f
  3319  0DDB  1D03               	btfss	3,2
  3320  0DDC  2DC4               	goto	l2532
  3321  0DDD                     l2540:	
  3322  0DDD  0839               	movf	___awmod@sign,w
  3323  0DDE  1903               	btfsc	3,2
  3324  0DDF  2DE5               	goto	l2544
  3325  0DE0  09B5               	comf	___awmod@dividend,f
  3326  0DE1  09B6               	comf	___awmod@dividend+1,f
  3327  0DE2  0AB5               	incf	___awmod@dividend,f
  3328  0DE3  1903               	skipnz
  3329  0DE4  0AB6               	incf	___awmod@dividend+1,f
  3330  0DE5                     l2544:	
  3331  0DE5  0836               	movf	___awmod@dividend+1,w
  3332  0DE6  00B4               	movwf	?___awmod+1
  3333  0DE7  0835               	movf	___awmod@dividend,w
  3334  0DE8  00B3               	movwf	?___awmod
  3335  0DE9  0008               	return
  3336  0DEA                     __end_of___awmod:	
  3337                           
  3338                           	psect	text11
  3339  0F4A                     __ptext11:	
  3340 ;; *************** function ___awdiv *****************
  3341 ;; Defined at:
  3342 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  divisor         2   19[BANK0 ] int 
  3345 ;;  dividend        2   21[BANK0 ] int 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  quotient        2   26[BANK0 ] int 
  3348 ;;  sign            1   25[BANK0 ] unsigned char 
  3349 ;;  counter         1   24[BANK0 ] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  2   19[BANK0 ] int 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3359 ;;      Params:         0       4       0       0       0
  3360 ;;      Locals:         0       4       0       0       0
  3361 ;;      Temps:          0       1       0       0       0
  3362 ;;      Totals:         0       9       0       0       0
  3363 ;;Total ram usage:        9 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    4
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_LCDWriteInt
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           
  3374                           ;psect for function ___awdiv
  3375  0F4A                     ___awdiv:	
  3376                           
  3377                           ;incstack = 0
  3378                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3379  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  3380  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  3381  0F4C  01B9               	clrf	___awdiv@sign
  3382  0F4D  1FB4               	btfss	___awdiv@divisor+1,7
  3383  0F4E  2F56               	goto	l2474
  3384  0F4F  09B3               	comf	___awdiv@divisor,f
  3385  0F50  09B4               	comf	___awdiv@divisor+1,f
  3386  0F51  0AB3               	incf	___awdiv@divisor,f
  3387  0F52  1903               	skipnz
  3388  0F53  0AB4               	incf	___awdiv@divisor+1,f
  3389  0F54  01B9               	clrf	___awdiv@sign
  3390  0F55  0AB9               	incf	___awdiv@sign,f
  3391  0F56                     l2474:	
  3392  0F56  1FB6               	btfss	___awdiv@dividend+1,7
  3393  0F57  2F61               	goto	l2480
  3394  0F58  09B5               	comf	___awdiv@dividend,f
  3395  0F59  09B6               	comf	___awdiv@dividend+1,f
  3396  0F5A  0AB5               	incf	___awdiv@dividend,f
  3397  0F5B  1903               	skipnz
  3398  0F5C  0AB6               	incf	___awdiv@dividend+1,f
  3399  0F5D  3001               	movlw	1
  3400  0F5E  00B7               	movwf	??___awdiv
  3401  0F5F  0837               	movf	??___awdiv,w
  3402  0F60  06B9               	xorwf	___awdiv@sign,f
  3403  0F61                     l2480:	
  3404  0F61  01BA               	clrf	___awdiv@quotient
  3405  0F62  01BB               	clrf	___awdiv@quotient+1
  3406  0F63  0833               	movf	___awdiv@divisor,w
  3407  0F64  0434               	iorwf	___awdiv@divisor+1,w
  3408  0F65  1903               	btfsc	3,2
  3409  0F66  2F98               	goto	l2502
  3410  0F67  01B8               	clrf	___awdiv@counter
  3411  0F68  0AB8               	incf	___awdiv@counter,f
  3412  0F69                     l2490:	
  3413  0F69  1BB4               	btfsc	___awdiv@divisor+1,7
  3414  0F6A  2F77               	goto	l2492
  3415  0F6B  3001               	movlw	1
  3416  0F6C                     u3235:	
  3417  0F6C  1003               	clrc
  3418  0F6D  0DB3               	rlf	___awdiv@divisor,f
  3419  0F6E  0DB4               	rlf	___awdiv@divisor+1,f
  3420  0F6F  3EFF               	addlw	-1
  3421  0F70  1D03               	skipz
  3422  0F71  2F6C               	goto	u3235
  3423  0F72  3001               	movlw	1
  3424  0F73  00B7               	movwf	??___awdiv
  3425  0F74  0837               	movf	??___awdiv,w
  3426  0F75  07B8               	addwf	___awdiv@counter,f
  3427  0F76  2F69               	goto	l2490
  3428  0F77                     l2492:	
  3429  0F77  3001               	movlw	1
  3430  0F78                     u3255:	
  3431  0F78  1003               	clrc
  3432  0F79  0DBA               	rlf	___awdiv@quotient,f
  3433  0F7A  0DBB               	rlf	___awdiv@quotient+1,f
  3434  0F7B  3EFF               	addlw	-1
  3435  0F7C  1D03               	skipz
  3436  0F7D  2F78               	goto	u3255
  3437  0F7E  0834               	movf	___awdiv@divisor+1,w
  3438  0F7F  0236               	subwf	___awdiv@dividend+1,w
  3439  0F80  1D03               	skipz
  3440  0F81  2F84               	goto	u3265
  3441  0F82  0833               	movf	___awdiv@divisor,w
  3442  0F83  0235               	subwf	___awdiv@dividend,w
  3443  0F84                     u3265:	
  3444  0F84  1C03               	skipc
  3445  0F85  2F8D               	goto	l2498
  3446  0F86  0833               	movf	___awdiv@divisor,w
  3447  0F87  02B5               	subwf	___awdiv@dividend,f
  3448  0F88  0834               	movf	___awdiv@divisor+1,w
  3449  0F89  1C03               	skipc
  3450  0F8A  03B6               	decf	___awdiv@dividend+1,f
  3451  0F8B  02B6               	subwf	___awdiv@dividend+1,f
  3452  0F8C  143A               	bsf	___awdiv@quotient,0
  3453  0F8D                     l2498:	
  3454  0F8D  3001               	movlw	1
  3455  0F8E                     u3275:	
  3456  0F8E  1003               	clrc
  3457  0F8F  0CB4               	rrf	___awdiv@divisor+1,f
  3458  0F90  0CB3               	rrf	___awdiv@divisor,f
  3459  0F91  3EFF               	addlw	-1
  3460  0F92  1D03               	skipz
  3461  0F93  2F8E               	goto	u3275
  3462  0F94  3001               	movlw	1
  3463  0F95  02B8               	subwf	___awdiv@counter,f
  3464  0F96  1D03               	btfss	3,2
  3465  0F97  2F77               	goto	l2492
  3466  0F98                     l2502:	
  3467  0F98  0839               	movf	___awdiv@sign,w
  3468  0F99  1903               	btfsc	3,2
  3469  0F9A  2FA0               	goto	l2506
  3470  0F9B  09BA               	comf	___awdiv@quotient,f
  3471  0F9C  09BB               	comf	___awdiv@quotient+1,f
  3472  0F9D  0ABA               	incf	___awdiv@quotient,f
  3473  0F9E  1903               	skipnz
  3474  0F9F  0ABB               	incf	___awdiv@quotient+1,f
  3475  0FA0                     l2506:	
  3476  0FA0  083B               	movf	___awdiv@quotient+1,w
  3477  0FA1  00B4               	movwf	?___awdiv+1
  3478  0FA2  083A               	movf	___awdiv@quotient,w
  3479  0FA3  00B3               	movwf	?___awdiv
  3480  0FA4  0008               	return
  3481  0FA5                     __end_of___awdiv:	
  3482                           
  3483                           	psect	text12
  3484  068F                     __ptext12:	
  3485 ;; *************** function _LCDInit *****************
  3486 ;; Defined at:
  3487 ;;		line 207 in file "lcd_hd44780_pic16.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  style           1    wreg     unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  style           1   33[BANK0 ] unsigned char 
  3492 ;;  __i             1   34[BANK0 ] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3502 ;;      Params:         0       0       0       0       0
  3503 ;;      Locals:         0       2       0       0       0
  3504 ;;      Temps:          0       2       0       0       0
  3505 ;;      Totals:         0       4       0       0       0
  3506 ;;Total ram usage:        4 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    6
  3509 ;; This function calls:
  3510 ;;		_LCDBusyLoop
  3511 ;;		_LCDByte
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _LCDInit
  3519  068F                     _LCDInit:	
  3520                           
  3521                           ;incstack = 0
  3522                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3523                           ;LCDInit@style stored from wreg
  3524  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0691  00C1               	movwf	LCDInit@style
  3527                           
  3528                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  3529  0692  30C3               	movlw	195
  3530  0693  00C0               	movwf	??_LCDInit+1
  3531  0694  30CD               	movlw	205
  3532  0695  00BF               	movwf	??_LCDInit
  3533  0696                     u4467:	
  3534  0696  0BBF               	decfsz	??_LCDInit,f
  3535  0697  2E96               	goto	u4467
  3536  0698  0BC0               	decfsz	??_LCDInit+1,f
  3537  0699  2E96               	goto	u4467
  3538                           
  3539                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<4));
  3540  069A  300F               	movlw	15
  3541  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3542  069C  1303               	bcf	3,6	;RP1=0, select bank0
  3543  069D  00BF               	movwf	??_LCDInit
  3544  069E  083F               	movf	??_LCDInit,w
  3545  069F  1683               	bsf	3,5	;RP0=1, select bank1
  3546  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  3547  06A1  0587               	andwf	7,f	;volatile
  3548                           
  3549                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC3=0;
  3550  06A2  1187               	bcf	7,3	;volatile
  3551                           
  3552                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC1=0;
  3553  06A3  1087               	bcf	7,1	;volatile
  3554                           
  3555                           ;lcd_hd44780_pic16.c: 216: TRISCbits.TRISC2=0;
  3556  06A4  1107               	bcf	7,2	;volatile
  3557                           
  3558                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<4));
  3559  06A5  300F               	movlw	15
  3560  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  3561  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  3562  06A8  00BF               	movwf	??_LCDInit
  3563  06A9  083F               	movf	??_LCDInit,w
  3564  06AA  0587               	andwf	7,f	;volatile
  3565                           
  3566                           ;lcd_hd44780_pic16.c: 220: (RC3=0);
  3567  06AB  1187               	bcf	7,3	;volatile
  3568                           
  3569                           ;lcd_hd44780_pic16.c: 221: (RC2=0);
  3570  06AC  1107               	bcf	7,2	;volatile
  3571                           
  3572                           ;lcd_hd44780_pic16.c: 222: (RC1=0);
  3573  06AD  1087               	bcf	7,1	;volatile
  3574                           
  3575                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3576  06AE  2EAF               	nop2	;2 cycle nop
  3577                           
  3578                           ;lcd_hd44780_pic16.c: 227: (RC3=1);
  3579  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  3580  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  3581  06B1  1587               	bsf	7,3	;volatile
  3582                           
  3583                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<4);
  3584  06B2  1687               	bsf	7,5	;volatile
  3585                           
  3586                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3587  06B3  2EB4               	nop2	;2 cycle nop
  3588  06B4  2EB5               	nop2	;2 cycle nop
  3589  06B5  0000               	nop
  3590                           
  3591                           ;lcd_hd44780_pic16.c: 230: (RC3=0);
  3592  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3593  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3594  06B8  1187               	bcf	7,3	;volatile
  3595                           
  3596                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3597  06B9  2EBA               	nop2	;2 cycle nop
  3598  06BA  2EBB               	nop2	;2 cycle nop
  3599  06BB  0000               	nop
  3600                           
  3601                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  3602  06BC  120A  118A  26F7  120A  118A  	fcall	_LCDBusyLoop
  3603                           
  3604                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  3605  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3606  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3607  06C3  01B8               	clrf	LCDByte@isdata
  3608  06C4  3028               	movlw	40
  3609  06C5  120A  158A  2641  120A  118A  	fcall	_LCDByte
  3610                           
  3611                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  3612  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3613  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  3614  06CC  01B8               	clrf	LCDByte@isdata
  3615  06CD  0841               	movf	LCDInit@style,w
  3616  06CE  380C               	iorlw	12
  3617  06CF  120A  158A  2641  120A  118A  	fcall	_LCDByte
  3618                           
  3619                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  3620  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3621  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3622  06D6  01B8               	clrf	LCDByte@isdata
  3623  06D7  3040               	movlw	64
  3624  06D8  120A  158A  2641  120A  118A  	fcall	_LCDByte
  3625                           
  3626                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  3627                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  3628  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  3629  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  3630  06DF  01C2               	clrf	LCDInit@__i
  3631  06E0                     L8:	
  3632  06E0  3008               	movlw	8
  3633  06E1  0242               	subwf	LCDInit@__i,w
  3634  06E2  1803               	btfsc	3,0
  3635  06E3  0008               	return
  3636                           
  3637                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  3638  06E4  01B8               	clrf	LCDByte@isdata
  3639  06E5  0AB8               	incf	LCDByte@isdata,f
  3640  06E6  0842               	movf	LCDInit@__i,w
  3641  06E7  3E4B               	addlw	(low (___cgram| 0))& (0+255)
  3642  06E8  0084               	movwf	4
  3643  06E9  1383               	bcf	3,7	;select IRP bank0
  3644  06EA  0800               	movf	0,w
  3645  06EB  120A  158A  2641  120A  118A  	fcall	_LCDByte
  3646  06F0  3001               	movlw	1
  3647  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  3648  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  3649  06F3  00BF               	movwf	??_LCDInit
  3650  06F4  083F               	movf	??_LCDInit,w
  3651  06F5  07C2               	addwf	LCDInit@__i,f
  3652  06F6  2EE0               	goto	L8
  3653  06F7                     __end_of_LCDInit:	
  3654                           
  3655                           	psect	text13
  3656  0CAD                     __ptext13:	
  3657 ;; *************** function _LCDGotoXY *****************
  3658 ;; Defined at:
  3659 ;;		line 355 in file "lcd_hd44780_pic16.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  x               1    wreg     unsigned char 
  3662 ;;  y               1   31[BANK0 ] unsigned char 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  x               1   33[BANK0 ] unsigned char 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3674 ;;      Params:         0       1       0       0       0
  3675 ;;      Locals:         0       1       0       0       0
  3676 ;;      Temps:          0       1       0       0       0
  3677 ;;      Totals:         0       3       0       0       0
  3678 ;;Total ram usage:        3 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    6
  3681 ;; This function calls:
  3682 ;;		_LCDByte
  3683 ;; This function is called by:
  3684 ;;		_main
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           
  3689                           ;psect for function _LCDGotoXY
  3690  0CAD                     _LCDGotoXY:	
  3691                           
  3692                           ;incstack = 0
  3693                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3694                           ;LCDGotoXY@x stored from wreg
  3695  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
  3696  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
  3697  0CAF  00C1               	movwf	LCDGotoXY@x
  3698                           
  3699                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  3700  0CB0  3014               	movlw	20
  3701  0CB1  0241               	subwf	LCDGotoXY@x,w
  3702  0CB2  1803               	btfsc	3,0
  3703  0CB3  0008               	return
  3704  0CB4  2CBE               	goto	l2766
  3705  0CB5                     l167:	
  3706                           ;lcd_hd44780_pic16.c: 365: case 1:
  3707                           
  3708                           ;lcd_hd44780_pic16.c: 364: break;
  3709                           
  3710                           ;lcd_hd44780_pic16.c: 362: {
  3711                           ;lcd_hd44780_pic16.c: 363: case 0:
  3712                           
  3713                           ;lcd_hd44780_pic16.c: 361: switch(y)
  3714                           
  3715                           
  3716                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  3717  0CB5  1741               	bsf	LCDGotoXY@x,6
  3718                           
  3719                           ;lcd_hd44780_pic16.c: 367: break;
  3720  0CB6  2CCC               	goto	l166
  3721  0CB7                     l2760:	
  3722                           ;lcd_hd44780_pic16.c: 368: case 2:
  3723                           
  3724                           
  3725                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  3726  0CB7  3014               	movlw	20
  3727  0CB8  2CBA               	goto	L9
  3728  0CB9                     l2762:	
  3729                           ;lcd_hd44780_pic16.c: 371: case 3:
  3730                           
  3731                           ;lcd_hd44780_pic16.c: 370: break;
  3732                           
  3733                           
  3734                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  3735  0CB9  3054               	movlw	84
  3736  0CBA                     L9:	
  3737  0CBA  00C0               	movwf	??_LCDGotoXY
  3738  0CBB  0840               	movf	??_LCDGotoXY,w
  3739  0CBC  07C1               	addwf	LCDGotoXY@x,f
  3740                           
  3741                           ;lcd_hd44780_pic16.c: 374: }
  3742                           
  3743                           ;lcd_hd44780_pic16.c: 373: break;
  3744  0CBD  2CCC               	goto	l166
  3745  0CBE                     l2766:	
  3746  0CBE  083F               	movf	LCDGotoXY@y,w
  3747                           
  3748                           ; Switch size 1, requested type "space"
  3749                           ; Number of cases is 4, Range of values is 0 to 3
  3750                           ; switch strategies available:
  3751                           ; Name         Instructions Cycles
  3752                           ; simple_byte           13     7 (average)
  3753                           ; direct_byte           20     8 (fixed)
  3754                           ; jumptable            260     6 (fixed)
  3755                           ;	Chosen strategy is simple_byte
  3756  0CBF  3A00               	xorlw	0	; case 0
  3757  0CC0  1903               	skipnz
  3758  0CC1  2CCC               	goto	l166
  3759  0CC2  3A01               	xorlw	1	; case 1
  3760  0CC3  1903               	skipnz
  3761  0CC4  2CB5               	goto	l167
  3762  0CC5  3A03               	xorlw	3	; case 2
  3763  0CC6  1903               	skipnz
  3764  0CC7  2CB7               	goto	l2760
  3765  0CC8  3A01               	xorlw	1	; case 3
  3766  0CC9  1903               	skipnz
  3767  0CCA  2CB9               	goto	l2762
  3768  0CCB  2CCC               	goto	l166
  3769  0CCC                     l166:	
  3770                           
  3771                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  3772  0CCC  17C1               	bsf	LCDGotoXY@x,7
  3773                           
  3774                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  3775  0CCD  01B8               	clrf	LCDByte@isdata
  3776  0CCE  0841               	movf	LCDGotoXY@x,w
  3777  0CCF  120A  158A  2641   	fcall	_LCDByte
  3778  0CD2  0008               	return
  3779  0CD3                     __end_of_LCDGotoXY:	
  3780                           
  3781                           	psect	text14
  3782  0E41                     __ptext14:	
  3783 ;; *************** function _LCDByte *****************
  3784 ;; Defined at:
  3785 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  c               1    wreg     unsigned char 
  3788 ;;  isdata          1   24[BANK0 ] unsigned char 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  c               1   29[BANK0 ] unsigned char 
  3791 ;;  temp            1   30[BANK0 ] unsigned char 
  3792 ;;  ln              1   28[BANK0 ] unsigned char 
  3793 ;;  hn              1   27[BANK0 ] unsigned char 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, pclath, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3803 ;;      Params:         0       1       0       0       0
  3804 ;;      Locals:         0       4       0       0       0
  3805 ;;      Temps:          0       2       0       0       0
  3806 ;;      Totals:         0       7       0       0       0
  3807 ;;Total ram usage:        7 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    5
  3810 ;; This function calls:
  3811 ;;		_LCDBusyLoop
  3812 ;; This function is called by:
  3813 ;;		_main
  3814 ;;		_LCDInit
  3815 ;;		_LCDWriteString
  3816 ;;		_LCDWriteInt
  3817 ;;		_LCDGotoXY
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _LCDByte
  3823  0E41                     _LCDByte:	
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3827                           ;LCDByte@c stored from wreg
  3828  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  3829  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  3830  0E43  00BD               	movwf	LCDByte@c
  3831                           
  3832                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3833                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3834                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3835  0E44  083D               	movf	LCDByte@c,w
  3836  0E45  00B9               	movwf	??_LCDByte
  3837  0E46  3004               	movlw	4
  3838  0E47                     u3165:	
  3839  0E47  1003               	clrc
  3840  0E48  0CB9               	rrf	??_LCDByte,f
  3841  0E49  3EFF               	addlw	-1
  3842  0E4A  1D03               	skipz
  3843  0E4B  2E47               	goto	u3165
  3844  0E4C  0839               	movf	??_LCDByte,w
  3845  0E4D  00BA               	movwf	??_LCDByte+1
  3846  0E4E  083A               	movf	??_LCDByte+1,w
  3847  0E4F  00BB               	movwf	LCDByte@hn
  3848                           
  3849                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3850  0E50  083D               	movf	LCDByte@c,w
  3851  0E51  390F               	andlw	15
  3852  0E52  00B9               	movwf	??_LCDByte
  3853  0E53  0839               	movf	??_LCDByte,w
  3854  0E54  00BC               	movwf	LCDByte@ln
  3855                           
  3856                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3857  0E55  0838               	movf	LCDByte@isdata,w
  3858  0E56  1D03               	btfss	3,2
  3859  0E57  2E5A               	goto	l120
  3860                           
  3861                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  3862  0E58  1087               	bcf	7,1	;volatile
  3863  0E59  2E5B               	goto	l121
  3864  0E5A                     l120:	
  3865                           
  3866                           ;lcd_hd44780_pic16.c: 97: else
  3867                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  3868  0E5A  1487               	bsf	7,1	;volatile
  3869  0E5B                     l121:	
  3870                           
  3871                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3872  0E5B  2E5C               	nop2	;2 cycle nop
  3873                           
  3874                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  3875  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  3877  0E5E  1587               	bsf	7,3	;volatile
  3878                           
  3879                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  3880  0E5F  083B               	movf	LCDByte@hn,w
  3881  0E60  00B9               	movwf	??_LCDByte
  3882  0E61  3004               	movlw	4
  3883  0E62                     u3185:	
  3884  0E62  1003               	clrc
  3885  0E63  0DB9               	rlf	??_LCDByte,f
  3886  0E64  3EFF               	addlw	-1
  3887  0E65  1D03               	skipz
  3888  0E66  2E62               	goto	u3185
  3889  0E67  0807               	movf	7,w	;volatile
  3890  0E68  390F               	andlw	15
  3891  0E69  0439               	iorwf	??_LCDByte,w
  3892  0E6A  00BA               	movwf	??_LCDByte+1
  3893  0E6B  083A               	movf	??_LCDByte+1,w
  3894  0E6C  00BE               	movwf	LCDByte@temp
  3895                           
  3896                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3897  0E6D  083E               	movf	LCDByte@temp,w
  3898  0E6E  0087               	movwf	7	;volatile
  3899                           
  3900                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3901  0E6F  2E70               	nop2	;2 cycle nop
  3902  0E70  2E71               	nop2	;2 cycle nop
  3903  0E71  0000               	nop
  3904                           
  3905                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  3906  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0E74  1187               	bcf	7,3	;volatile
  3909                           
  3910                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3911  0E75  2E76               	nop2	;2 cycle nop
  3912  0E76  2E77               	nop2	;2 cycle nop
  3913  0E77  0000               	nop
  3914                           
  3915                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  3916  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3918  0E7A  1587               	bsf	7,3	;volatile
  3919                           
  3920                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  3921  0E7B  083C               	movf	LCDByte@ln,w
  3922  0E7C  00B9               	movwf	??_LCDByte
  3923  0E7D  3004               	movlw	4
  3924  0E7E                     u3195:	
  3925  0E7E  1003               	clrc
  3926  0E7F  0DB9               	rlf	??_LCDByte,f
  3927  0E80  3EFF               	addlw	-1
  3928  0E81  1D03               	skipz
  3929  0E82  2E7E               	goto	u3195
  3930  0E83  0807               	movf	7,w	;volatile
  3931  0E84  390F               	andlw	15
  3932  0E85  0439               	iorwf	??_LCDByte,w
  3933  0E86  00BA               	movwf	??_LCDByte+1
  3934  0E87  083A               	movf	??_LCDByte+1,w
  3935  0E88  00BE               	movwf	LCDByte@temp
  3936                           
  3937                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3938  0E89  083E               	movf	LCDByte@temp,w
  3939  0E8A  0087               	movwf	7	;volatile
  3940                           
  3941                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3942  0E8B  2E8C               	nop2	;2 cycle nop
  3943  0E8C  2E8D               	nop2	;2 cycle nop
  3944  0E8D  0000               	nop
  3945                           
  3946                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  3947  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  3949  0E90  1187               	bcf	7,3	;volatile
  3950                           
  3951                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3952  0E91  2E92               	nop2	;2 cycle nop
  3953  0E92  2E93               	nop2	;2 cycle nop
  3954  0E93  0000               	nop
  3955                           
  3956                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3957  0E94  120A  118A  26F7   	fcall	_LCDBusyLoop
  3958  0E97  0008               	return
  3959  0E98                     __end_of_LCDByte:	
  3960                           
  3961                           	psect	text15
  3962  06F7                     __ptext15:	
  3963 ;; *************** function _LCDBusyLoop *****************
  3964 ;; Defined at:
  3965 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;		None
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  status          1   23[BANK0 ] unsigned char 
  3970 ;;  temp            1   22[BANK0 ] unsigned char 
  3971 ;;  busy            1   21[BANK0 ] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3981 ;;      Params:         0       0       0       0       0
  3982 ;;      Locals:         0       3       0       0       0
  3983 ;;      Temps:          0       2       0       0       0
  3984 ;;      Totals:         0       5       0       0       0
  3985 ;;Total ram usage:        5 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    4
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_LCDByte
  3992 ;;		_LCDInit
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           
  3997                           ;psect for function _LCDBusyLoop
  3998  06F7                     _LCDBusyLoop:	
  3999                           
  4000                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4001                           
  4002                           ;incstack = 0
  4003                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  4004  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  4005  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  4006  06F9  01B7               	clrf	LCDBusyLoop@status
  4007                           
  4008                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  4009  06FA  30F0               	movlw	240
  4010  06FB  00B3               	movwf	??_LCDBusyLoop
  4011  06FC  0833               	movf	??_LCDBusyLoop,w
  4012  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  4013  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  4014  06FF  0487               	iorwf	7,f	;volatile
  4015                           
  4016                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  4017  0700  1283               	bcf	3,5	;RP0=0, select bank0
  4018  0701  1303               	bcf	3,6	;RP1=0, select bank0
  4019  0702  1507               	bsf	7,2	;volatile
  4020                           
  4021                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  4022  0703  1087               	bcf	7,1	;volatile
  4023                           
  4024                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4025  0704  2F05               	nop2	;2 cycle nop
  4026  0705                     l2312:	
  4027                           ;lcd_hd44780_pic16.c: 153: do
  4028                           
  4029                           
  4030                           ;lcd_hd44780_pic16.c: 154: {
  4031                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  4032  0705  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0706  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0707  1587               	bsf	7,3	;volatile
  4035                           
  4036                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4037  0708  2F09               	nop2	;2 cycle nop
  4038                           
  4039                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  4040  0709  1283               	bcf	3,5	;RP0=0, select bank0
  4041  070A  1303               	bcf	3,6	;RP1=0, select bank0
  4042  070B  0807               	movf	7,w	;volatile
  4043  070C  00B3               	movwf	??_LCDBusyLoop
  4044  070D  3004               	movlw	4
  4045  070E                     u2955:	
  4046  070E  1003               	clrc
  4047  070F  0CB3               	rrf	??_LCDBusyLoop,f
  4048  0710  3EFF               	addlw	-1
  4049  0711  1D03               	skipz
  4050  0712  2F0E               	goto	u2955
  4051  0713  0833               	movf	??_LCDBusyLoop,w
  4052  0714  00B4               	movwf	??_LCDBusyLoop+1
  4053  0715  0834               	movf	??_LCDBusyLoop+1,w
  4054  0716  00B7               	movwf	LCDBusyLoop@status
  4055                           
  4056                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4057  0717  0837               	movf	LCDBusyLoop@status,w
  4058  0718  00B3               	movwf	??_LCDBusyLoop
  4059  0719  3003               	movlw	3
  4060  071A                     u2965:	
  4061  071A  1003               	clrc
  4062  071B  0DB3               	rlf	??_LCDBusyLoop,f
  4063  071C  3EFF               	addlw	-1
  4064  071D  1D03               	skipz
  4065  071E  2F1A               	goto	u2965
  4066  071F  1003               	clrc
  4067  0720  0D33               	rlf	??_LCDBusyLoop,w
  4068  0721  00B4               	movwf	??_LCDBusyLoop+1
  4069  0722  0834               	movf	??_LCDBusyLoop+1,w
  4070  0723  00B7               	movwf	LCDBusyLoop@status
  4071                           
  4072                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4073  0724  2F25               	nop2	;2 cycle nop
  4074                           
  4075                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  4076  0725  1283               	bcf	3,5	;RP0=0, select bank0
  4077  0726  1303               	bcf	3,6	;RP1=0, select bank0
  4078  0727  1187               	bcf	7,3	;volatile
  4079                           
  4080                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4081  0728  2F29               	nop2	;2 cycle nop
  4082  0729  2F2A               	nop2	;2 cycle nop
  4083  072A  0000               	nop
  4084                           
  4085                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  4086  072B  1283               	bcf	3,5	;RP0=0, select bank0
  4087  072C  1303               	bcf	3,6	;RP1=0, select bank0
  4088  072D  1587               	bsf	7,3	;volatile
  4089                           
  4090                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4091  072E  2F2F               	nop2	;2 cycle nop
  4092                           
  4093                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  4094  072F  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0730  1303               	bcf	3,6	;RP1=0, select bank0
  4096  0731  0807               	movf	7,w	;volatile
  4097  0732  00B3               	movwf	??_LCDBusyLoop
  4098  0733  3004               	movlw	4
  4099  0734                     u2975:	
  4100  0734  1003               	clrc
  4101  0735  0CB3               	rrf	??_LCDBusyLoop,f
  4102  0736  3EFF               	addlw	-1
  4103  0737  1D03               	skipz
  4104  0738  2F34               	goto	u2975
  4105  0739  0833               	movf	??_LCDBusyLoop,w
  4106  073A  00B4               	movwf	??_LCDBusyLoop+1
  4107  073B  0834               	movf	??_LCDBusyLoop+1,w
  4108  073C  00B6               	movwf	LCDBusyLoop@temp
  4109                           
  4110                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  4111  073D  300F               	movlw	15
  4112  073E  00B3               	movwf	??_LCDBusyLoop
  4113  073F  0833               	movf	??_LCDBusyLoop,w
  4114  0740  05B6               	andwf	LCDBusyLoop@temp,f
  4115                           
  4116                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  4117  0741  0837               	movf	LCDBusyLoop@status,w
  4118  0742  0436               	iorwf	LCDBusyLoop@temp,w
  4119  0743  00B3               	movwf	??_LCDBusyLoop
  4120  0744  0833               	movf	??_LCDBusyLoop,w
  4121  0745  00B7               	movwf	LCDBusyLoop@status
  4122                           
  4123                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  4124  0746  0837               	movf	LCDBusyLoop@status,w
  4125  0747  3980               	andlw	128
  4126  0748  00B3               	movwf	??_LCDBusyLoop
  4127  0749  0833               	movf	??_LCDBusyLoop,w
  4128  074A  00B5               	movwf	LCDBusyLoop@busy
  4129                           
  4130                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4131  074B  2F4C               	nop2	;2 cycle nop
  4132                           
  4133                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  4134  074C  1283               	bcf	3,5	;RP0=0, select bank0
  4135  074D  1303               	bcf	3,6	;RP1=0, select bank0
  4136  074E  1187               	bcf	7,3	;volatile
  4137                           
  4138                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4139  074F  2F50               	nop2	;2 cycle nop
  4140  0750  2F51               	nop2	;2 cycle nop
  4141  0751  0000               	nop
  4142                           
  4143                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  4144  0752  1283               	bcf	3,5	;RP0=0, select bank0
  4145  0753  1303               	bcf	3,6	;RP1=0, select bank0
  4146  0754  0835               	movf	LCDBusyLoop@busy,w
  4147  0755  1D03               	btfss	3,2
  4148  0756  2F05               	goto	l2312
  4149                           
  4150                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  4151  0757  1107               	bcf	7,2	;volatile
  4152                           
  4153                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  4154  0758  300F               	movlw	15
  4155  0759  00B3               	movwf	??_LCDBusyLoop
  4156  075A  0833               	movf	??_LCDBusyLoop,w
  4157  075B  1683               	bsf	3,5	;RP0=1, select bank1
  4158  075C  1303               	bcf	3,6	;RP1=0, select bank1
  4159  075D  0587               	andwf	7,f	;volatile
  4160  075E  0008               	return
  4161  075F                     __end_of_LCDBusyLoop:	
  4162                           
  4163                           	psect	text16
  4164  0C1C                     __ptext16:	
  4165 ;; *************** function _ADCInit *****************
  4166 ;; Defined at:
  4167 ;;		line 7 in file "adc_pic16.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4181 ;;      Params:         0       0       0       0       0
  4182 ;;      Locals:         0       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0
  4184 ;;      Totals:         0       0       0       0       0
  4185 ;;Total ram usage:        0 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    4
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_main
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           
  4196                           ;psect for function _ADCInit
  4197  0C1C                     _ADCInit:	
  4198                           
  4199                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  4200                           
  4201                           ;incstack = 0
  4202                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  4203  0C1C  1683               	bsf	3,5	;RP0=1, select bank1
  4204  0C1D  1303               	bcf	3,6	;RP1=0, select bank1
  4205  0C1E  1686               	bsf	6,5	;volatile
  4206                           
  4207                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  4208  0C1F  1683               	bsf	3,5	;RP0=1, select bank3
  4209  0C20  1703               	bsf	3,6	;RP1=1, select bank3
  4210  0C21  1689               	bsf	9,5	;volatile
  4211                           
  4212                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  4213  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  4214  0C23  1303               	bcf	3,6	;RP1=0, select bank1
  4215  0C24  121F               	bcf	31,4	;volatile
  4216                           
  4217                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  4218  0C25  30C0               	movlw	192
  4219  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0C27  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0C28  049F               	iorwf	31,f	;volatile
  4222                           
  4223                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  4224  0C29  1683               	bsf	3,5	;RP0=1, select bank1
  4225  0C2A  1303               	bcf	3,6	;RP1=0, select bank1
  4226  0C2B  179F               	bsf	31,7	;volatile
  4227                           
  4228                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  4229  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  4231  0C2E  141F               	bsf	31,0	;volatile
  4232  0C2F  0008               	return
  4233  0C30                     __end_of_ADCInit:	
  4234                           
  4235                           	psect	text17
  4236  0625                     __ptext17:	
  4237 ;; *************** function _ISR *****************
  4238 ;; Defined at:
  4239 ;;		line 159 in file "do_am.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4253 ;;      Params:         0       0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0
  4255 ;;      Temps:          0       7       0       0       0
  4256 ;;      Totals:         0       7       0       0       0
  4257 ;;Total ram usage:        7 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    3
  4260 ;; This function calls:
  4261 ;;		i1_LCDByte
  4262 ;;		i1_LCDGotoXY
  4263 ;;		i1_LCDWriteInt
  4264 ;;		i1_LCDWriteString
  4265 ;; This function is called by:
  4266 ;;		Interrupt level 1
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           
  4271                           ;psect for function _ISR
  4272  0625                     _ISR:	
  4273                           
  4274                           ;do_am.c: 161: if(INTCONbits.RBIF == 1)
  4275  0625  1C0B               	btfss	11,0	;volatile
  4276  0626  2E7F               	goto	i1l3000
  4277                           
  4278                           ;do_am.c: 162: {
  4279                           ;do_am.c: 164: {
  4280                           ;do_am.c: 166: (LCDByte(0b00000001,0));
  4281  0627  01F5               	clrf	i1LCDByte@isdata
  4282  0628  3001               	movlw	1
  4283  0629  120A  158A  2698  120A  118A  	fcall	i1_LCDByte
  4284                           
  4285                           ;do_am.c: 168: { LCDGotoXY(0,0); LCDWriteString("Thermometer set:");};
  4286  062E  01FC               	clrf	i1LCDGotoXY@y
  4287  062F  3000               	movlw	0
  4288  0630  120A  158A  2487  120A  118A  	fcall	i1_LCDGotoXY
  4289  0635  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4290  0636  00FC               	movwf	i1LCDWriteString@msg
  4291  0637  3080               	movlw	128
  4292  0638  00FD               	movwf	i1LCDWriteString@msg+1
  4293  0639  120A  158A  25EA  120A  118A  	fcall	i1_LCDWriteString
  4294                           
  4295                           ;do_am.c: 170: tuneUpTemp++;
  4296  063E  3001               	movlw	1
  4297  063F  1283               	bcf	3,5	;RP0=0, select bank0
  4298  0640  1303               	bcf	3,6	;RP1=0, select bank0
  4299  0641  00AC               	movwf	??_ISR
  4300  0642  082C               	movf	??_ISR,w
  4301  0643  07DB               	addwf	_tuneUpTemp,f
  4302                           
  4303                           ;do_am.c: 171: if(tuneUpTemp > 150)
  4304  0644  3097               	movlw	151
  4305  0645  025B               	subwf	_tuneUpTemp,w
  4306  0646  1803               	btfsc	3,0
  4307                           
  4308                           ;do_am.c: 172: {
  4309                           ;do_am.c: 173: tuneUpTemp = 0;
  4310  0647  01DB               	clrf	_tuneUpTemp
  4311                           
  4312                           ;do_am.c: 174: }
  4313                           ;do_am.c: 177: { LCDGotoXY(0,1); LCDWriteInt(tuneUpTemp,3);};
  4314  0648  01FC               	clrf	i1LCDGotoXY@y
  4315  0649  0AFC               	incf	i1LCDGotoXY@y,f
  4316  064A  3000               	movlw	0
  4317  064B  120A  158A  2487  120A  118A  	fcall	i1_LCDGotoXY
  4318  0650  1283               	bcf	3,5	;RP0=0, select bank0
  4319  0651  1303               	bcf	3,6	;RP1=0, select bank0
  4320  0652  085B               	movf	_tuneUpTemp,w
  4321  0653  00AC               	movwf	??_ISR
  4322  0654  01AD               	clrf	??_ISR+1
  4323  0655  082C               	movf	??_ISR,w
  4324  0656  00A0               	movwf	i1LCDWriteInt@val
  4325  0657  082D               	movf	??_ISR+1,w
  4326  0658  00A1               	movwf	i1LCDWriteInt@val+1
  4327  0659  3003               	movlw	3
  4328  065A  00AE               	movwf	??_ISR+2
  4329  065B  082E               	movf	??_ISR+2,w
  4330  065C  00A2               	movwf	i1LCDWriteInt@field_length
  4331  065D  120A  118A  248A  120A  118A  	fcall	i1_LCDWriteInt
  4332                           
  4333                           ;do_am.c: 180: LCDWriteString("%0C");
  4334  0662  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4335  0663  00FC               	movwf	i1LCDWriteString@msg
  4336  0664  3080               	movlw	128
  4337  0665  00FD               	movwf	i1LCDWriteString@msg+1
  4338  0666  120A  158A  25EA  120A  118A  	fcall	i1_LCDWriteString
  4339                           
  4340                           ;do_am.c: 182: _delay((unsigned long)((500)*(20000000/4000.0)));
  4341  066B  300D               	movlw	13
  4342  066C  1283               	bcf	3,5	;RP0=0, select bank0
  4343  066D  1303               	bcf	3,6	;RP1=0, select bank0
  4344  066E  00AE               	movwf	??_ISR+2
  4345  066F  30AF               	movlw	175
  4346  0670  00AD               	movwf	??_ISR+1
  4347  0671  30C1               	movlw	193
  4348  0672  00AC               	movwf	??_ISR
  4349  0673                     u447_27:	
  4350  0673  0BAC               	decfsz	??_ISR,f
  4351  0674  2E73               	goto	u447_27
  4352  0675  0BAD               	decfsz	??_ISR+1,f
  4353  0676  2E73               	goto	u447_27
  4354  0677  0BAE               	decfsz	??_ISR+2,f
  4355  0678  2E73               	goto	u447_27
  4356  0679  0000               	nop
  4357                           
  4358                           ;do_am.c: 183: tuneUpTempDir = 1;
  4359  067A  1283               	bcf	3,5	;RP0=0, select bank0
  4360  067B  1303               	bcf	3,6	;RP1=0, select bank0
  4361  067C  01D9               	clrf	_tuneUpTempDir
  4362  067D  0AD9               	incf	_tuneUpTempDir,f
  4363                           
  4364                           ;do_am.c: 185: }
  4365                           ;do_am.c: 186: INTCONbits.RBIF = 0;
  4366  067E  100B               	bcf	11,0	;volatile
  4367  067F                     i1l3000:	
  4368                           
  4369                           ;do_am.c: 187: }
  4370                           ;do_am.c: 188: IOCBbits.IOCB4 = 0;
  4371  067F  1683               	bsf	3,5	;RP0=1, select bank1
  4372  0680  1303               	bcf	3,6	;RP1=0, select bank1
  4373  0681  1216               	bcf	22,4	;volatile
  4374  0682  1283               	bcf	3,5	;RP0=0, select bank0
  4375  0683  1303               	bcf	3,6	;RP1=0, select bank0
  4376  0684  0832               	movf	??_ISR+6,w
  4377  0685  00FF               	movwf	127
  4378  0686  0831               	movf	??_ISR+5,w
  4379  0687  008A               	movwf	10
  4380  0688  0830               	movf	??_ISR+4,w
  4381  0689  0084               	movwf	4
  4382  068A  0E2F               	swapf	(??_ISR+3)^0,w
  4383  068B  0083               	movwf	3
  4384  068C  0EFE               	swapf	126,f
  4385  068D  0E7E               	swapf	126,w
  4386  068E  0009               	retfie
  4387  068F                     __end_of_ISR:	
  4388                           
  4389                           	psect	intentry
  4390  0004                     __pintentry:	
  4391                           ;incstack = 0
  4392                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4393                           
  4394  0004                     interrupt_function:	
  4395  007E                     saved_w	set	btemp
  4396  0004  00FE               	movwf	btemp
  4397  0005  0E03               	swapf	3,w
  4398  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0008  00AF               	movwf	??_ISR+3
  4401  0009  0804               	movf	4,w
  4402  000A  00B0               	movwf	??_ISR+4
  4403  000B  080A               	movf	10,w
  4404  000C  00B1               	movwf	??_ISR+5
  4405  000D  087F               	movf	btemp+1,w
  4406  000E  00B2               	movwf	??_ISR+6
  4407  000F  120A  118A  2E25   	ljmp	_ISR
  4408                           
  4409                           	psect	text18
  4410  0DEA                     __ptext18:	
  4411 ;; *************** function i1_LCDWriteString *****************
  4412 ;; Defined at:
  4413 ;;		line 279 in file "lcd_hd44780_pic16.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  msg             2   12[COMMON] PTR const unsigned char 
  4416 ;;		 -> STR_10(4), STR_9(4), STR_8(4), STR_7(4), 
  4417 ;;		 -> STR_6(5), STR_5(4), STR_4(4), STR_3(5), 
  4418 ;;		 -> STR_2(4), STR_1(17), msg(32), 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  LCDWriteStri    1    1[BANK0 ] char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         2       0       0       0       0
  4431 ;;      Locals:         0       1       0       0       0
  4432 ;;      Temps:          0       1       0       0       0
  4433 ;;      Totals:         2       2       0       0       0
  4434 ;;Total ram usage:        4 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    2
  4437 ;; This function calls:
  4438 ;;		i1_LCDByte
  4439 ;; This function is called by:
  4440 ;;		_ISR
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           
  4445                           ;psect for function i1_LCDWriteString
  4446  0DEA                     i1_LCDWriteString:	
  4447  0DEA                     i1l2914:	
  4448                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  4449                           
  4450                           ;incstack = 0
  4451                           ; Regs used in i1_LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4452                           
  4453  0DEA  087D               	movf	i1LCDWriteString@msg+1,w
  4454  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  4455  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  4456  0DED  00FF               	movwf	127
  4457  0DEE  087C               	movf	i1LCDWriteString@msg,w
  4458  0DEF  0084               	movwf	4
  4459  0DF0  120A  118A  27C5  120A  158A  	fcall	stringtab
  4460  0DF5  3A00               	xorlw	0
  4461  0DF6  1903               	btfsc	3,2
  4462  0DF7  0008               	return
  4463                           
  4464                           ;lcd_hd44780_pic16.c: 282: {
  4465                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  4466  0DF8  087D               	movf	i1LCDWriteString@msg+1,w
  4467  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  4468  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  4469  0DFB  00FF               	movwf	127
  4470  0DFC  087C               	movf	i1LCDWriteString@msg,w
  4471  0DFD  0084               	movwf	4
  4472  0DFE  120A  118A  27C5  120A  158A  	fcall	stringtab
  4473  0E03  3A25               	xorlw	37
  4474  0E04  1D03               	skipz
  4475  0E05  2E2A               	goto	i1l2910
  4476                           
  4477                           ;lcd_hd44780_pic16.c: 285: {
  4478                           ;lcd_hd44780_pic16.c: 286: msg++;
  4479  0E06  3001               	movlw	1
  4480  0E07  07FC               	addwf	i1LCDWriteString@msg,f
  4481  0E08  1803               	skipnc
  4482  0E09  0AFD               	incf	i1LCDWriteString@msg+1,f
  4483                           
  4484                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  4485  0E0A  087D               	movf	i1LCDWriteString@msg+1,w
  4486  0E0B  00FF               	movwf	127
  4487  0E0C  087C               	movf	i1LCDWriteString@msg,w
  4488  0E0D  0084               	movwf	4
  4489  0E0E  120A  118A  27C5  120A  158A  	fcall	stringtab
  4490  0E13  3ED0               	addlw	-48
  4491  0E14  00A0               	movwf	??i1_LCDWriteString
  4492  0E15  0820               	movf	??i1_LCDWriteString,w
  4493  0E16  00A1               	movwf	i1LCDWriteString@cc
  4494                           
  4495                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  4496  0E17  1BA1               	btfsc	i1LCDWriteString@cc,7
  4497  0E18  2E22               	goto	i1l2906
  4498  0E19  0821               	movf	i1LCDWriteString@cc,w
  4499  0E1A  3A80               	xorlw	128
  4500  0E1B  3E78               	addlw	-136
  4501  0E1C  1803               	skipnc
  4502  0E1D  2E22               	goto	i1l2906
  4503                           
  4504                           ;lcd_hd44780_pic16.c: 290: {
  4505                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  4506  0E1E  01F5               	clrf	i1LCDByte@isdata
  4507  0E1F  0AF5               	incf	i1LCDByte@isdata,f
  4508  0E20  0821               	movf	i1LCDWriteString@cc,w
  4509  0E21  2E37               	goto	L10
  4510  0E22                     i1l2906:	
  4511                           ;lcd_hd44780_pic16.c: 292: }
  4512                           
  4513                           
  4514                           ;lcd_hd44780_pic16.c: 293: else
  4515                           ;lcd_hd44780_pic16.c: 294: {
  4516                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  4517  0E22  01F5               	clrf	i1LCDByte@isdata
  4518  0E23  0AF5               	incf	i1LCDByte@isdata,f
  4519  0E24  3025               	movlw	37
  4520  0E25  120A  158A  2698  120A  158A  	fcall	i1_LCDByte
  4521  0E2A                     i1l2910:	
  4522                           ;lcd_hd44780_pic16.c: 297: }
  4523                           ;lcd_hd44780_pic16.c: 298: }
  4524                           
  4525                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  4526                           
  4527                           
  4528                           ;lcd_hd44780_pic16.c: 299: else
  4529                           ;lcd_hd44780_pic16.c: 300: {
  4530                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  4531  0E2A  01F5               	clrf	i1LCDByte@isdata
  4532  0E2B  0AF5               	incf	i1LCDByte@isdata,f
  4533  0E2C  087D               	movf	i1LCDWriteString@msg+1,w
  4534  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  4535  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  4536  0E2F  00FF               	movwf	127
  4537  0E30  087C               	movf	i1LCDWriteString@msg,w
  4538  0E31  0084               	movwf	4
  4539  0E32  120A  118A  27C5  120A  158A  	fcall	stringtab
  4540  0E37                     L10:	
  4541  0E37  120A  158A  2698  120A  158A  	fcall	i1_LCDByte
  4542                           
  4543                           ;lcd_hd44780_pic16.c: 302: }
  4544                           ;lcd_hd44780_pic16.c: 303: msg++;
  4545  0E3C  3001               	movlw	1
  4546  0E3D  07FC               	addwf	i1LCDWriteString@msg,f
  4547  0E3E  1803               	skipnc
  4548  0E3F  0AFD               	incf	i1LCDWriteString@msg+1,f
  4549  0E40  2DEA               	goto	i1l2914
  4550  0E41                     __end_ofi1_LCDWriteString:	
  4551                           
  4552                           	psect	text19
  4553  048A                     __ptext19:	
  4554 ;; *************** function i1_LCDWriteInt *****************
  4555 ;; Defined at:
  4556 ;;		line 317 in file "lcd_hd44780_pic16.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  val             2    0[BANK0 ] int 
  4559 ;;  field_length    1    2[BANK0 ] char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  4562 ;;  LCDWriteInt     2   10[BANK0 ] int 
  4563 ;;  LCDWriteInt     2    8[BANK0 ] int 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  1    wreg      void 
  4566 ;; Registers used:
  4567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4573 ;;      Params:         0       3       0       0       0
  4574 ;;      Locals:         0       9       0       0       0
  4575 ;;      Temps:          2       0       0       0       0
  4576 ;;      Totals:         2      12       0       0       0
  4577 ;;Total ram usage:       14 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; Hardware stack levels required when called:    2
  4580 ;; This function calls:
  4581 ;;		i1_LCDByte
  4582 ;;		i1___awdiv
  4583 ;;		i1___awmod
  4584 ;; This function is called by:
  4585 ;;		_ISR
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           
  4590                           ;psect for function i1_LCDWriteInt
  4591  048A                     i1_LCDWriteInt:	
  4592                           
  4593                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in i1_LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4597  048A  3023               	movlw	i1LCDWriteInt@str& (0+255)
  4598  048B  0084               	movwf	4
  4599  048C  1283               	bcf	3,5	;RP0=0, select bank0
  4600  048D  1303               	bcf	3,6	;RP1=0, select bank0
  4601  048E  0853               	movf	LCDWriteInt@F1642,w
  4602  048F  1383               	bcf	3,7	;select IRP bank0
  4603  0490  0080               	movwf	0
  4604  0491  0A84               	incf	4,f
  4605  0492  0854               	movf	LCDWriteInt@F1642+1,w
  4606  0493  0080               	movwf	0
  4607  0494  0A84               	incf	4,f
  4608  0495  0855               	movf	LCDWriteInt@F1642+2,w
  4609  0496  0080               	movwf	0
  4610  0497  0A84               	incf	4,f
  4611  0498  0856               	movf	LCDWriteInt@F1642+3,w
  4612  0499  0080               	movwf	0
  4613  049A  0A84               	incf	4,f
  4614  049B  0857               	movf	LCDWriteInt@F1642+4,w
  4615  049C  0080               	movwf	0
  4616                           
  4617                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  4618  049D  3004               	movlw	4
  4619  049E  00AA               	movwf	i1LCDWriteInt@i
  4620  049F  3000               	movlw	0
  4621  04A0  00AB               	movwf	i1LCDWriteInt@i+1
  4622  04A1  01A8               	clrf	i1LCDWriteInt@j
  4623  04A2  01A9               	clrf	i1LCDWriteInt@j+1
  4624                           
  4625                           ;lcd_hd44780_pic16.c: 322: if(val == 0)
  4626  04A3  0820               	movf	i1LCDWriteInt@val,w
  4627  04A4  0421               	iorwf	i1LCDWriteInt@val+1,w
  4628  04A5  1903               	btfsc	3,2
  4629                           
  4630                           ;lcd_hd44780_pic16.c: 323: {
  4631                           ;lcd_hd44780_pic16.c: 324: str[4] = 0;
  4632  04A6  01A7               	clrf	i1LCDWriteInt@str+4
  4633                           
  4634                           ;lcd_hd44780_pic16.c: 325: }
  4635                           ;lcd_hd44780_pic16.c: 327: if(val<0)
  4636  04A7  1FA1               	btfss	i1LCDWriteInt@val+1,7
  4637  04A8  2CB8               	goto	i1l2938
  4638                           
  4639                           ;lcd_hd44780_pic16.c: 328: {
  4640                           ;lcd_hd44780_pic16.c: 329: (LCDByte('-',1));
  4641  04A9  01F5               	clrf	i1LCDByte@isdata
  4642  04AA  0AF5               	incf	i1LCDByte@isdata,f
  4643  04AB  302D               	movlw	45
  4644  04AC  120A  158A  2698  120A  118A  	fcall	i1_LCDByte
  4645                           
  4646                           ;lcd_hd44780_pic16.c: 330: val=val*-1;
  4647  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  4648  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  4649  04B3  09A0               	comf	i1LCDWriteInt@val,f
  4650  04B4  09A1               	comf	i1LCDWriteInt@val+1,f
  4651  04B5  0AA0               	incf	i1LCDWriteInt@val,f
  4652  04B6  1903               	skipnz
  4653  04B7  0AA1               	incf	i1LCDWriteInt@val+1,f
  4654  04B8                     i1l2938:	
  4655                           ;lcd_hd44780_pic16.c: 331: }
  4656                           ;lcd_hd44780_pic16.c: 333: while(val)
  4657                           
  4658  04B8  0820               	movf	i1LCDWriteInt@val,w
  4659  04B9  0421               	iorwf	i1LCDWriteInt@val+1,w
  4660  04BA  1903               	btfsc	3,2
  4661  04BB  2CED               	goto	i1l2940
  4662                           
  4663                           ;lcd_hd44780_pic16.c: 334: {
  4664                           ;lcd_hd44780_pic16.c: 335: str[i]=val%10;
  4665  04BC  300A               	movlw	10
  4666  04BD  00F0               	movwf	i1___awmod@divisor
  4667  04BE  3000               	movlw	0
  4668  04BF  00F1               	movwf	i1___awmod@divisor+1
  4669  04C0  0821               	movf	i1LCDWriteInt@val+1,w
  4670  04C1  00F3               	movwf	i1___awmod@dividend+1
  4671  04C2  0820               	movf	i1LCDWriteInt@val,w
  4672  04C3  00F2               	movwf	i1___awmod@dividend
  4673  04C4  120A  158A  2552  120A  118A  	fcall	i1___awmod
  4674  04C9  0870               	movf	?i1___awmod,w
  4675  04CA  00FC               	movwf	??i1_LCDWriteInt
  4676  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  4677  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  4678  04CD  082A               	movf	i1LCDWriteInt@i,w
  4679  04CE  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4680  04CF  0084               	movwf	4
  4681  04D0  087C               	movf	??i1_LCDWriteInt,w
  4682  04D1  1383               	bcf	3,7	;select IRP bank0
  4683  04D2  0080               	movwf	0
  4684                           
  4685                           ;lcd_hd44780_pic16.c: 336: val=val/10;
  4686  04D3  300A               	movlw	10
  4687  04D4  00F0               	movwf	i1___awdiv@divisor
  4688  04D5  3000               	movlw	0
  4689  04D6  00F1               	movwf	i1___awdiv@divisor+1
  4690  04D7  0821               	movf	i1LCDWriteInt@val+1,w
  4691  04D8  00F3               	movwf	i1___awdiv@dividend+1
  4692  04D9  0820               	movf	i1LCDWriteInt@val,w
  4693  04DA  00F2               	movwf	i1___awdiv@dividend
  4694  04DB  120A  158A  26F1  120A  118A  	fcall	i1___awdiv
  4695  04E0  0871               	movf	?i1___awdiv+1,w
  4696  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  4697  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  4698  04E3  00A1               	movwf	i1LCDWriteInt@val+1
  4699  04E4  0870               	movf	?i1___awdiv,w
  4700  04E5  00A0               	movwf	i1LCDWriteInt@val
  4701                           
  4702                           ;lcd_hd44780_pic16.c: 337: i--;
  4703  04E6  30FF               	movlw	255
  4704  04E7  07AA               	addwf	i1LCDWriteInt@i,f
  4705  04E8  1803               	skipnc
  4706  04E9  0AAB               	incf	i1LCDWriteInt@i+1,f
  4707  04EA  30FF               	movlw	255
  4708  04EB  07AB               	addwf	i1LCDWriteInt@i+1,f
  4709  04EC  2CB8               	goto	i1l2938
  4710  04ED                     i1l2940:	
  4711                           
  4712                           ;lcd_hd44780_pic16.c: 338: }
  4713                           ;lcd_hd44780_pic16.c: 339: if(field_length==-1)
  4714  04ED  0A22               	incf	i1LCDWriteInt@field_length,w
  4715  04EE  1903               	btfsc	3,2
  4716  04EF  2D02               	goto	i1l2948
  4717                           
  4718                           ;lcd_hd44780_pic16.c: 341: else
  4719                           ;lcd_hd44780_pic16.c: 342: j=5-field_length;
  4720                           
  4721                           ;lcd_hd44780_pic16.c: 340: while(str[j]==-16) j++;
  4722  04F0  0822               	movf	i1LCDWriteInt@field_length,w
  4723  04F1  00FC               	movwf	??i1_LCDWriteInt
  4724  04F2  01FD               	clrf	??i1_LCDWriteInt+1
  4725  04F3  1BFC               	btfsc	??i1_LCDWriteInt,7
  4726  04F4  03FD               	decf	??i1_LCDWriteInt+1,f
  4727  04F5  09FC               	comf	??i1_LCDWriteInt,f
  4728  04F6  09FD               	comf	??i1_LCDWriteInt+1,f
  4729  04F7  0AFC               	incf	??i1_LCDWriteInt,f
  4730  04F8  1903               	skipnz
  4731  04F9  0AFD               	incf	??i1_LCDWriteInt+1,f
  4732  04FA  087C               	movf	??i1_LCDWriteInt,w
  4733  04FB  3E05               	addlw	5
  4734  04FC  00A8               	movwf	i1LCDWriteInt@j
  4735  04FD  087D               	movf	??i1_LCDWriteInt+1,w
  4736  04FE  1803               	skipnc
  4737  04FF  3E01               	addlw	1
  4738  0500  3E00               	addlw	0
  4739  0501  00A9               	movwf	i1LCDWriteInt@j+1
  4740  0502                     i1l2948:	
  4741                           
  4742                           ;lcd_hd44780_pic16.c: 345: for(i=j;i<5;i++)
  4743  0502  0829               	movf	i1LCDWriteInt@j+1,w
  4744  0503  00AB               	movwf	i1LCDWriteInt@i+1
  4745  0504  0828               	movf	i1LCDWriteInt@j,w
  4746  0505  00AA               	movwf	i1LCDWriteInt@i
  4747  0506                     L11:	
  4748  0506  082B               	movf	i1LCDWriteInt@i+1,w
  4749  0507  3A80               	xorlw	128
  4750  0508  00FF               	movwf	127
  4751  0509  3080               	movlw	128
  4752  050A  027F               	subwf	127,w
  4753  050B  1D03               	skipz
  4754  050C  2D0F               	goto	u407_25
  4755  050D  3005               	movlw	5
  4756  050E  022A               	subwf	i1LCDWriteInt@i,w
  4757  050F                     u407_25:	
  4758  050F  1803               	btfsc	3,0
  4759  0510  0008               	return
  4760                           
  4761                           ;lcd_hd44780_pic16.c: 346: {
  4762                           ;lcd_hd44780_pic16.c: 347: (LCDByte(48+str[i],1));
  4763  0511  01F5               	clrf	i1LCDByte@isdata
  4764  0512  0AF5               	incf	i1LCDByte@isdata,f
  4765  0513  1283               	bcf	3,5	;RP0=0, select bank0
  4766  0514  1303               	bcf	3,6	;RP1=0, select bank0
  4767  0515  082A               	movf	i1LCDWriteInt@i,w
  4768  0516  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4769  0517  0084               	movwf	4
  4770  0518  1383               	bcf	3,7	;select IRP bank0
  4771  0519  0800               	movf	0,w
  4772  051A  3E30               	addlw	48
  4773  051B  120A  158A  2698  120A  118A  	fcall	i1_LCDByte
  4774  0520  3001               	movlw	1
  4775  0521  1283               	bcf	3,5	;RP0=0, select bank0
  4776  0522  1303               	bcf	3,6	;RP1=0, select bank0
  4777  0523  07AA               	addwf	i1LCDWriteInt@i,f
  4778  0524  1803               	skipnc
  4779  0525  0AAB               	incf	i1LCDWriteInt@i+1,f
  4780  0526  3000               	movlw	0
  4781  0527  07AB               	addwf	i1LCDWriteInt@i+1,f
  4782  0528  2D06               	goto	L11
  4783  0529                     __end_ofi1_LCDWriteInt:	
  4784                           
  4785                           	psect	text20
  4786  0D52                     __ptext20:	
  4787 ;; *************** function i1___awmod *****************
  4788 ;; Defined at:
  4789 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  divisor         2    0[COMMON] int 
  4792 ;;  dividend        2    2[COMMON] int 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  __awmod         1    6[COMMON] unsigned char 
  4795 ;;  __awmod         1    5[COMMON] unsigned char 
  4796 ;; Return value:  Size  Location     Type
  4797 ;;                  2    0[COMMON] int 
  4798 ;; Registers used:
  4799 ;;		wreg, status,2, status,0
  4800 ;; Tracked objects:
  4801 ;;		On entry : 0/0
  4802 ;;		On exit  : 0/0
  4803 ;;		Unchanged: 0/0
  4804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4805 ;;      Params:         4       0       0       0       0
  4806 ;;      Locals:         2       0       0       0       0
  4807 ;;      Temps:          1       0       0       0       0
  4808 ;;      Totals:         7       0       0       0       0
  4809 ;;Total ram usage:        7 bytes
  4810 ;; Hardware stack levels used:    1
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		i1_LCDWriteInt
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           
  4819                           ;psect for function i1___awmod
  4820  0D52                     i1___awmod:	
  4821                           
  4822                           ;incstack = 0
  4823                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4824  0D52  01F6               	clrf	i1___awmod@sign
  4825  0D53  1FF3               	btfss	i1___awmod@dividend+1,7
  4826  0D54  2D5C               	goto	i1l2726
  4827  0D55  09F2               	comf	i1___awmod@dividend,f
  4828  0D56  09F3               	comf	i1___awmod@dividend+1,f
  4829  0D57  0AF2               	incf	i1___awmod@dividend,f
  4830  0D58  1903               	skipnz
  4831  0D59  0AF3               	incf	i1___awmod@dividend+1,f
  4832  0D5A  01F6               	clrf	i1___awmod@sign
  4833  0D5B  0AF6               	incf	i1___awmod@sign,f
  4834  0D5C                     i1l2726:	
  4835  0D5C  1FF1               	btfss	i1___awmod@divisor+1,7
  4836  0D5D  2D63               	goto	i1l2730
  4837  0D5E  09F0               	comf	i1___awmod@divisor,f
  4838  0D5F  09F1               	comf	i1___awmod@divisor+1,f
  4839  0D60  0AF0               	incf	i1___awmod@divisor,f
  4840  0D61  1903               	skipnz
  4841  0D62  0AF1               	incf	i1___awmod@divisor+1,f
  4842  0D63                     i1l2730:	
  4843  0D63  0870               	movf	i1___awmod@divisor,w
  4844  0D64  0471               	iorwf	i1___awmod@divisor+1,w
  4845  0D65  1903               	btfsc	3,2
  4846  0D66  2D90               	goto	i1l2748
  4847  0D67  01F5               	clrf	i1___awmod@counter
  4848  0D68  0AF5               	incf	i1___awmod@counter,f
  4849  0D69                     i1l2738:	
  4850  0D69  1BF1               	btfsc	i1___awmod@divisor+1,7
  4851  0D6A  2D77               	goto	i1l2740
  4852  0D6B  3001               	movlw	1
  4853  0D6C                     u380_25:	
  4854  0D6C  1003               	clrc
  4855  0D6D  0DF0               	rlf	i1___awmod@divisor,f
  4856  0D6E  0DF1               	rlf	i1___awmod@divisor+1,f
  4857  0D6F  3EFF               	addlw	-1
  4858  0D70  1D03               	skipz
  4859  0D71  2D6C               	goto	u380_25
  4860  0D72  3001               	movlw	1
  4861  0D73  00F4               	movwf	??i1___awmod
  4862  0D74  0874               	movf	??i1___awmod,w
  4863  0D75  07F5               	addwf	i1___awmod@counter,f
  4864  0D76  2D69               	goto	i1l2738
  4865  0D77                     i1l2740:	
  4866  0D77  0871               	movf	i1___awmod@divisor+1,w
  4867  0D78  0273               	subwf	i1___awmod@dividend+1,w
  4868  0D79  1D03               	skipz
  4869  0D7A  2D7D               	goto	u382_25
  4870  0D7B  0870               	movf	i1___awmod@divisor,w
  4871  0D7C  0272               	subwf	i1___awmod@dividend,w
  4872  0D7D                     u382_25:	
  4873  0D7D  1C03               	skipc
  4874  0D7E  2D85               	goto	i1l2744
  4875  0D7F  0870               	movf	i1___awmod@divisor,w
  4876  0D80  02F2               	subwf	i1___awmod@dividend,f
  4877  0D81  0871               	movf	i1___awmod@divisor+1,w
  4878  0D82  1C03               	skipc
  4879  0D83  03F3               	decf	i1___awmod@dividend+1,f
  4880  0D84  02F3               	subwf	i1___awmod@dividend+1,f
  4881  0D85                     i1l2744:	
  4882  0D85  3001               	movlw	1
  4883  0D86                     u383_25:	
  4884  0D86  1003               	clrc
  4885  0D87  0CF1               	rrf	i1___awmod@divisor+1,f
  4886  0D88  0CF0               	rrf	i1___awmod@divisor,f
  4887  0D89  3EFF               	addlw	-1
  4888  0D8A  1D03               	skipz
  4889  0D8B  2D86               	goto	u383_25
  4890  0D8C  3001               	movlw	1
  4891  0D8D  02F5               	subwf	i1___awmod@counter,f
  4892  0D8E  1D03               	btfss	3,2
  4893  0D8F  2D77               	goto	i1l2740
  4894  0D90                     i1l2748:	
  4895  0D90  0876               	movf	i1___awmod@sign,w
  4896  0D91  1903               	btfsc	3,2
  4897  0D92  2D98               	goto	i1l2752
  4898  0D93  09F2               	comf	i1___awmod@dividend,f
  4899  0D94  09F3               	comf	i1___awmod@dividend+1,f
  4900  0D95  0AF2               	incf	i1___awmod@dividend,f
  4901  0D96  1903               	skipnz
  4902  0D97  0AF3               	incf	i1___awmod@dividend+1,f
  4903  0D98                     i1l2752:	
  4904  0D98  0873               	movf	i1___awmod@dividend+1,w
  4905  0D99  00F1               	movwf	?i1___awmod+1
  4906  0D9A  0872               	movf	i1___awmod@dividend,w
  4907  0D9B  00F0               	movwf	?i1___awmod
  4908  0D9C  0008               	return
  4909  0D9D                     __end_ofi1___awmod:	
  4910                           
  4911                           	psect	text21
  4912  0EF1                     __ptext21:	
  4913 ;; *************** function i1___awdiv *****************
  4914 ;; Defined at:
  4915 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  divisor         2    0[COMMON] int 
  4918 ;;  dividend        2    2[COMMON] int 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;  __awdiv         2    7[COMMON] int 
  4921 ;;  __awdiv         1    6[COMMON] unsigned char 
  4922 ;;  __awdiv         1    5[COMMON] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  2    0[COMMON] int 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4932 ;;      Params:         4       0       0       0       0
  4933 ;;      Locals:         4       0       0       0       0
  4934 ;;      Temps:          1       0       0       0       0
  4935 ;;      Totals:         9       0       0       0       0
  4936 ;;Total ram usage:        9 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		i1_LCDWriteInt
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           
  4946                           ;psect for function i1___awdiv
  4947  0EF1                     i1___awdiv:	
  4948                           
  4949                           ;incstack = 0
  4950                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4951  0EF1  01F6               	clrf	i1___awdiv@sign
  4952  0EF2  1FF1               	btfss	i1___awdiv@divisor+1,7
  4953  0EF3  2EFB               	goto	i1l2682
  4954  0EF4  09F0               	comf	i1___awdiv@divisor,f
  4955  0EF5  09F1               	comf	i1___awdiv@divisor+1,f
  4956  0EF6  0AF0               	incf	i1___awdiv@divisor,f
  4957  0EF7  1903               	skipnz
  4958  0EF8  0AF1               	incf	i1___awdiv@divisor+1,f
  4959  0EF9  01F6               	clrf	i1___awdiv@sign
  4960  0EFA  0AF6               	incf	i1___awdiv@sign,f
  4961  0EFB                     i1l2682:	
  4962  0EFB  1FF3               	btfss	i1___awdiv@dividend+1,7
  4963  0EFC  2F06               	goto	i1l2688
  4964  0EFD  09F2               	comf	i1___awdiv@dividend,f
  4965  0EFE  09F3               	comf	i1___awdiv@dividend+1,f
  4966  0EFF  0AF2               	incf	i1___awdiv@dividend,f
  4967  0F00  1903               	skipnz
  4968  0F01  0AF3               	incf	i1___awdiv@dividend+1,f
  4969  0F02  3001               	movlw	1
  4970  0F03  00F4               	movwf	??i1___awdiv
  4971  0F04  0874               	movf	??i1___awdiv,w
  4972  0F05  06F6               	xorwf	i1___awdiv@sign,f
  4973  0F06                     i1l2688:	
  4974  0F06  01F7               	clrf	i1___awdiv@quotient
  4975  0F07  01F8               	clrf	i1___awdiv@quotient+1
  4976  0F08  0870               	movf	i1___awdiv@divisor,w
  4977  0F09  0471               	iorwf	i1___awdiv@divisor+1,w
  4978  0F0A  1903               	btfsc	3,2
  4979  0F0B  2F3D               	goto	i1l2710
  4980  0F0C  01F5               	clrf	i1___awdiv@counter
  4981  0F0D  0AF5               	incf	i1___awdiv@counter,f
  4982  0F0E                     i1l2698:	
  4983  0F0E  1BF1               	btfsc	i1___awdiv@divisor+1,7
  4984  0F0F  2F1C               	goto	i1l2700
  4985  0F10  3001               	movlw	1
  4986  0F11                     u370_25:	
  4987  0F11  1003               	clrc
  4988  0F12  0DF0               	rlf	i1___awdiv@divisor,f
  4989  0F13  0DF1               	rlf	i1___awdiv@divisor+1,f
  4990  0F14  3EFF               	addlw	-1
  4991  0F15  1D03               	skipz
  4992  0F16  2F11               	goto	u370_25
  4993  0F17  3001               	movlw	1
  4994  0F18  00F4               	movwf	??i1___awdiv
  4995  0F19  0874               	movf	??i1___awdiv,w
  4996  0F1A  07F5               	addwf	i1___awdiv@counter,f
  4997  0F1B  2F0E               	goto	i1l2698
  4998  0F1C                     i1l2700:	
  4999  0F1C  3001               	movlw	1
  5000  0F1D                     u372_25:	
  5001  0F1D  1003               	clrc
  5002  0F1E  0DF7               	rlf	i1___awdiv@quotient,f
  5003  0F1F  0DF8               	rlf	i1___awdiv@quotient+1,f
  5004  0F20  3EFF               	addlw	-1
  5005  0F21  1D03               	skipz
  5006  0F22  2F1D               	goto	u372_25
  5007  0F23  0871               	movf	i1___awdiv@divisor+1,w
  5008  0F24  0273               	subwf	i1___awdiv@dividend+1,w
  5009  0F25  1D03               	skipz
  5010  0F26  2F29               	goto	u373_25
  5011  0F27  0870               	movf	i1___awdiv@divisor,w
  5012  0F28  0272               	subwf	i1___awdiv@dividend,w
  5013  0F29                     u373_25:	
  5014  0F29  1C03               	skipc
  5015  0F2A  2F32               	goto	i1l2706
  5016  0F2B  0870               	movf	i1___awdiv@divisor,w
  5017  0F2C  02F2               	subwf	i1___awdiv@dividend,f
  5018  0F2D  0871               	movf	i1___awdiv@divisor+1,w
  5019  0F2E  1C03               	skipc
  5020  0F2F  03F3               	decf	i1___awdiv@dividend+1,f
  5021  0F30  02F3               	subwf	i1___awdiv@dividend+1,f
  5022  0F31  1477               	bsf	i1___awdiv@quotient,0
  5023  0F32                     i1l2706:	
  5024  0F32  3001               	movlw	1
  5025  0F33                     u374_25:	
  5026  0F33  1003               	clrc
  5027  0F34  0CF1               	rrf	i1___awdiv@divisor+1,f
  5028  0F35  0CF0               	rrf	i1___awdiv@divisor,f
  5029  0F36  3EFF               	addlw	-1
  5030  0F37  1D03               	skipz
  5031  0F38  2F33               	goto	u374_25
  5032  0F39  3001               	movlw	1
  5033  0F3A  02F5               	subwf	i1___awdiv@counter,f
  5034  0F3B  1D03               	btfss	3,2
  5035  0F3C  2F1C               	goto	i1l2700
  5036  0F3D                     i1l2710:	
  5037  0F3D  0876               	movf	i1___awdiv@sign,w
  5038  0F3E  1903               	btfsc	3,2
  5039  0F3F  2F45               	goto	i1l2714
  5040  0F40  09F7               	comf	i1___awdiv@quotient,f
  5041  0F41  09F8               	comf	i1___awdiv@quotient+1,f
  5042  0F42  0AF7               	incf	i1___awdiv@quotient,f
  5043  0F43  1903               	skipnz
  5044  0F44  0AF8               	incf	i1___awdiv@quotient+1,f
  5045  0F45                     i1l2714:	
  5046  0F45  0878               	movf	i1___awdiv@quotient+1,w
  5047  0F46  00F1               	movwf	?i1___awdiv+1
  5048  0F47  0877               	movf	i1___awdiv@quotient,w
  5049  0F48  00F0               	movwf	?i1___awdiv
  5050  0F49  0008               	return
  5051  0F4A                     __end_ofi1___awdiv:	
  5052                           
  5053                           	psect	text22
  5054  0C87                     __ptext22:	
  5055 ;; *************** function i1_LCDGotoXY *****************
  5056 ;; Defined at:
  5057 ;;		line 355 in file "lcd_hd44780_pic16.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  x               1    wreg     unsigned char 
  5060 ;;  y               1   12[COMMON] unsigned char 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  x               1    0[BANK0 ] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5072 ;;      Params:         1       0       0       0       0
  5073 ;;      Locals:         0       1       0       0       0
  5074 ;;      Temps:          1       0       0       0       0
  5075 ;;      Totals:         2       1       0       0       0
  5076 ;;Total ram usage:        3 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    2
  5079 ;; This function calls:
  5080 ;;		i1_LCDByte
  5081 ;; This function is called by:
  5082 ;;		_ISR
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           
  5087                           ;psect for function i1_LCDGotoXY
  5088  0C87                     i1_LCDGotoXY:	
  5089                           
  5090                           ;incstack = 0
  5091                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5092                           ;i1LCDGotoXY@x stored from wreg
  5093  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5094  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  5095  0C89  00A0               	movwf	i1LCDGotoXY@x
  5096                           
  5097                           ;lcd_hd44780_pic16.c: 357: if(x>=20) return;
  5098  0C8A  3014               	movlw	20
  5099  0C8B  0220               	subwf	i1LCDGotoXY@x,w
  5100  0C8C  1803               	btfsc	3,0
  5101  0C8D  0008               	return
  5102  0C8E  2C98               	goto	i1l2970
  5103  0C8F                     i1l167:	
  5104                           ;lcd_hd44780_pic16.c: 365: case 1:
  5105                           
  5106                           ;lcd_hd44780_pic16.c: 364: break;
  5107                           
  5108                           ;lcd_hd44780_pic16.c: 362: {
  5109                           ;lcd_hd44780_pic16.c: 363: case 0:
  5110                           
  5111                           ;lcd_hd44780_pic16.c: 361: switch(y)
  5112                           
  5113                           
  5114                           ;lcd_hd44780_pic16.c: 366: x|=0b01000000;
  5115  0C8F  1720               	bsf	i1LCDGotoXY@x,6
  5116                           
  5117                           ;lcd_hd44780_pic16.c: 367: break;
  5118  0C90  2CA6               	goto	i1l166
  5119  0C91                     i1l2964:	
  5120                           ;lcd_hd44780_pic16.c: 368: case 2:
  5121                           
  5122                           
  5123                           ;lcd_hd44780_pic16.c: 369: x+=0x14;
  5124  0C91  3014               	movlw	20
  5125  0C92  2C94               	goto	L12
  5126  0C93                     i1l2966:	
  5127                           ;lcd_hd44780_pic16.c: 371: case 3:
  5128                           
  5129                           ;lcd_hd44780_pic16.c: 370: break;
  5130                           
  5131                           
  5132                           ;lcd_hd44780_pic16.c: 372: x+=0x54;
  5133  0C93  3054               	movlw	84
  5134  0C94                     L12:	
  5135  0C94  00FD               	movwf	??i1_LCDGotoXY
  5136  0C95  087D               	movf	??i1_LCDGotoXY,w
  5137  0C96  07A0               	addwf	i1LCDGotoXY@x,f
  5138                           
  5139                           ;lcd_hd44780_pic16.c: 374: }
  5140                           
  5141                           ;lcd_hd44780_pic16.c: 373: break;
  5142  0C97  2CA6               	goto	i1l166
  5143  0C98                     i1l2970:	
  5144  0C98  087C               	movf	i1LCDGotoXY@y,w
  5145                           
  5146                           ; Switch size 1, requested type "space"
  5147                           ; Number of cases is 4, Range of values is 0 to 3
  5148                           ; switch strategies available:
  5149                           ; Name         Instructions Cycles
  5150                           ; simple_byte           13     7 (average)
  5151                           ; direct_byte           20     8 (fixed)
  5152                           ; jumptable            260     6 (fixed)
  5153                           ;	Chosen strategy is simple_byte
  5154  0C99  3A00               	xorlw	0	; case 0
  5155  0C9A  1903               	skipnz
  5156  0C9B  2CA6               	goto	i1l166
  5157  0C9C  3A01               	xorlw	1	; case 1
  5158  0C9D  1903               	skipnz
  5159  0C9E  2C8F               	goto	i1l167
  5160  0C9F  3A03               	xorlw	3	; case 2
  5161  0CA0  1903               	skipnz
  5162  0CA1  2C91               	goto	i1l2964
  5163  0CA2  3A01               	xorlw	1	; case 3
  5164  0CA3  1903               	skipnz
  5165  0CA4  2C93               	goto	i1l2966
  5166  0CA5  2CA6               	goto	i1l166
  5167  0CA6                     i1l166:	
  5168                           
  5169                           ;lcd_hd44780_pic16.c: 396: x|=0b10000000;
  5170  0CA6  17A0               	bsf	i1LCDGotoXY@x,7
  5171                           
  5172                           ;lcd_hd44780_pic16.c: 397: (LCDByte(x,0));
  5173  0CA7  01F5               	clrf	i1LCDByte@isdata
  5174  0CA8  0820               	movf	i1LCDGotoXY@x,w
  5175  0CA9  120A  158A  2698   	fcall	i1_LCDByte
  5176  0CAC  0008               	return
  5177  0CAD                     __end_ofi1_LCDGotoXY:	
  5178                           
  5179                           	psect	text23
  5180  0E98                     __ptext23:	
  5181 ;; *************** function i1_LCDByte *****************
  5182 ;; Defined at:
  5183 ;;		line 80 in file "lcd_hd44780_pic16.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  c               1    wreg     unsigned char 
  5186 ;;  isdata          1    5[COMMON] unsigned char 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  c               1    8[COMMON] unsigned char 
  5189 ;;  LCDByte         1   11[COMMON] unsigned char 
  5190 ;;  LCDByte         1   10[COMMON] unsigned char 
  5191 ;;  LCDByte         1    9[COMMON] unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0, pclath, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5201 ;;      Params:         1       0       0       0       0
  5202 ;;      Locals:         4       0       0       0       0
  5203 ;;      Temps:          2       0       0       0       0
  5204 ;;      Totals:         7       0       0       0       0
  5205 ;;Total ram usage:        7 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; Hardware stack levels required when called:    1
  5208 ;; This function calls:
  5209 ;;		i1_LCDBusyLoop
  5210 ;; This function is called by:
  5211 ;;		_ISR
  5212 ;;		i1_LCDWriteString
  5213 ;;		i1_LCDWriteInt
  5214 ;;		i1_LCDGotoXY
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           
  5219                           ;psect for function i1_LCDByte
  5220  0E98                     i1_LCDByte:	
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  5224                           ;i1LCDByte@c stored from wreg
  5225  0E98  00F8               	movwf	i1LCDByte@c
  5226                           
  5227                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  5228                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  5229                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  5230  0E99  0878               	movf	i1LCDByte@c,w
  5231  0E9A  00F6               	movwf	??i1_LCDByte
  5232  0E9B  3004               	movlw	4
  5233  0E9C                     u363_25:	
  5234  0E9C  1003               	clrc
  5235  0E9D  0CF6               	rrf	??i1_LCDByte,f
  5236  0E9E  3EFF               	addlw	-1
  5237  0E9F  1D03               	skipz
  5238  0EA0  2E9C               	goto	u363_25
  5239  0EA1  0876               	movf	??i1_LCDByte,w
  5240  0EA2  00F7               	movwf	??i1_LCDByte+1
  5241  0EA3  0877               	movf	??i1_LCDByte+1,w
  5242  0EA4  00F9               	movwf	i1LCDByte@hn
  5243                           
  5244                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  5245  0EA5  0878               	movf	i1LCDByte@c,w
  5246  0EA6  390F               	andlw	15
  5247  0EA7  00F6               	movwf	??i1_LCDByte
  5248  0EA8  0876               	movf	??i1_LCDByte,w
  5249  0EA9  00FA               	movwf	i1LCDByte@ln
  5250                           
  5251                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  5252  0EAA  0875               	movf	i1LCDByte@isdata,w
  5253  0EAB  1D03               	btfss	3,2
  5254  0EAC  2EB1               	goto	i1l120
  5255                           
  5256                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  5257  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0EAF  1087               	bcf	7,1	;volatile
  5260  0EB0  2EB4               	goto	i1l121
  5261  0EB1                     i1l120:	
  5262                           
  5263                           ;lcd_hd44780_pic16.c: 97: else
  5264                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  5265  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0EB2  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0EB3  1487               	bsf	7,1	;volatile
  5268  0EB4                     i1l121:	
  5269                           
  5270                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5271  0EB4  2EB5               	nop2	;2 cycle nop
  5272                           
  5273                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  5274  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  5275  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  5276  0EB7  1587               	bsf	7,3	;volatile
  5277                           
  5278                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  5279  0EB8  0879               	movf	i1LCDByte@hn,w
  5280  0EB9  00F6               	movwf	??i1_LCDByte
  5281  0EBA  3004               	movlw	4
  5282  0EBB                     u365_25:	
  5283  0EBB  1003               	clrc
  5284  0EBC  0DF6               	rlf	??i1_LCDByte,f
  5285  0EBD  3EFF               	addlw	-1
  5286  0EBE  1D03               	skipz
  5287  0EBF  2EBB               	goto	u365_25
  5288  0EC0  0807               	movf	7,w	;volatile
  5289  0EC1  390F               	andlw	15
  5290  0EC2  0476               	iorwf	??i1_LCDByte,w
  5291  0EC3  00F7               	movwf	??i1_LCDByte+1
  5292  0EC4  0877               	movf	??i1_LCDByte+1,w
  5293  0EC5  00FB               	movwf	i1LCDByte@temp
  5294                           
  5295                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  5296  0EC6  087B               	movf	i1LCDByte@temp,w
  5297  0EC7  0087               	movwf	7	;volatile
  5298                           
  5299                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5300  0EC8  2EC9               	nop2	;2 cycle nop
  5301  0EC9  2ECA               	nop2	;2 cycle nop
  5302  0ECA  0000               	nop
  5303                           
  5304                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  5305  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  5306  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  5307  0ECD  1187               	bcf	7,3	;volatile
  5308                           
  5309                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5310  0ECE  2ECF               	nop2	;2 cycle nop
  5311  0ECF  2ED0               	nop2	;2 cycle nop
  5312  0ED0  0000               	nop
  5313                           
  5314                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  5315  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  5316  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  5317  0ED3  1587               	bsf	7,3	;volatile
  5318                           
  5319                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  5320  0ED4  087A               	movf	i1LCDByte@ln,w
  5321  0ED5  00F6               	movwf	??i1_LCDByte
  5322  0ED6  3004               	movlw	4
  5323  0ED7                     u366_25:	
  5324  0ED7  1003               	clrc
  5325  0ED8  0DF6               	rlf	??i1_LCDByte,f
  5326  0ED9  3EFF               	addlw	-1
  5327  0EDA  1D03               	skipz
  5328  0EDB  2ED7               	goto	u366_25
  5329  0EDC  0807               	movf	7,w	;volatile
  5330  0EDD  390F               	andlw	15
  5331  0EDE  0476               	iorwf	??i1_LCDByte,w
  5332  0EDF  00F7               	movwf	??i1_LCDByte+1
  5333  0EE0  0877               	movf	??i1_LCDByte+1,w
  5334  0EE1  00FB               	movwf	i1LCDByte@temp
  5335                           
  5336                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  5337  0EE2  087B               	movf	i1LCDByte@temp,w
  5338  0EE3  0087               	movwf	7	;volatile
  5339                           
  5340                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5341  0EE4  2EE5               	nop2	;2 cycle nop
  5342  0EE5  2EE6               	nop2	;2 cycle nop
  5343  0EE6  0000               	nop
  5344                           
  5345                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  5346  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  5348  0EE9  1187               	bcf	7,3	;volatile
  5349                           
  5350                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5351  0EEA  2EEB               	nop2	;2 cycle nop
  5352  0EEB  2EEC               	nop2	;2 cycle nop
  5353  0EEC  0000               	nop
  5354                           
  5355                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  5356  0EED  120A  118A  275F   	fcall	i1_LCDBusyLoop
  5357  0EF0  0008               	return
  5358  0EF1                     __end_ofi1_LCDByte:	
  5359                           
  5360                           	psect	text24
  5361  075F                     __ptext24:	
  5362 ;; *************** function i1_LCDBusyLoop *****************
  5363 ;; Defined at:
  5364 ;;		line 135 in file "lcd_hd44780_pic16.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  5369 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  5370 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5380 ;;      Params:         0       0       0       0       0
  5381 ;;      Locals:         3       0       0       0       0
  5382 ;;      Temps:          2       0       0       0       0
  5383 ;;      Totals:         5       0       0       0       0
  5384 ;;Total ram usage:        5 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		i1_LCDByte
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           
  5394                           ;psect for function i1_LCDBusyLoop
  5395  075F                     i1_LCDBusyLoop:	
  5396                           
  5397                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  5398                           
  5399                           ;incstack = 0
  5400                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  5401  075F  01F4               	clrf	i1LCDBusyLoop@status
  5402                           
  5403                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  5404  0760  30F0               	movlw	240
  5405  0761  00F0               	movwf	??i1_LCDBusyLoop
  5406  0762  0870               	movf	??i1_LCDBusyLoop,w
  5407  0763  1683               	bsf	3,5	;RP0=1, select bank1
  5408  0764  1303               	bcf	3,6	;RP1=0, select bank1
  5409  0765  0487               	iorwf	7,f	;volatile
  5410                           
  5411                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  5412  0766  1283               	bcf	3,5	;RP0=0, select bank0
  5413  0767  1303               	bcf	3,6	;RP1=0, select bank0
  5414  0768  1507               	bsf	7,2	;volatile
  5415                           
  5416                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  5417  0769  1087               	bcf	7,1	;volatile
  5418                           
  5419                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5420  076A  2F6B               	nop2	;2 cycle nop
  5421  076B                     i1l2390:	
  5422                           ;lcd_hd44780_pic16.c: 153: do
  5423                           
  5424                           
  5425                           ;lcd_hd44780_pic16.c: 154: {
  5426                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  5427  076B  1283               	bcf	3,5	;RP0=0, select bank0
  5428  076C  1303               	bcf	3,6	;RP1=0, select bank0
  5429  076D  1587               	bsf	7,3	;volatile
  5430                           
  5431                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5432  076E  2F6F               	nop2	;2 cycle nop
  5433                           
  5434                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  5435  076F  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0770  1303               	bcf	3,6	;RP1=0, select bank0
  5437  0771  0807               	movf	7,w	;volatile
  5438  0772  00F0               	movwf	??i1_LCDBusyLoop
  5439  0773  3004               	movlw	4
  5440  0774                     u311_25:	
  5441  0774  1003               	clrc
  5442  0775  0CF0               	rrf	??i1_LCDBusyLoop,f
  5443  0776  3EFF               	addlw	-1
  5444  0777  1D03               	skipz
  5445  0778  2F74               	goto	u311_25
  5446  0779  0870               	movf	??i1_LCDBusyLoop,w
  5447  077A  00F1               	movwf	??i1_LCDBusyLoop+1
  5448  077B  0871               	movf	??i1_LCDBusyLoop+1,w
  5449  077C  00F4               	movwf	i1LCDBusyLoop@status
  5450                           
  5451                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  5452  077D  0874               	movf	i1LCDBusyLoop@status,w
  5453  077E  00F0               	movwf	??i1_LCDBusyLoop
  5454  077F  3003               	movlw	3
  5455  0780                     u312_25:	
  5456  0780  1003               	clrc
  5457  0781  0DF0               	rlf	??i1_LCDBusyLoop,f
  5458  0782  3EFF               	addlw	-1
  5459  0783  1D03               	skipz
  5460  0784  2F80               	goto	u312_25
  5461  0785  1003               	clrc
  5462  0786  0D70               	rlf	??i1_LCDBusyLoop,w
  5463  0787  00F1               	movwf	??i1_LCDBusyLoop+1
  5464  0788  0871               	movf	??i1_LCDBusyLoop+1,w
  5465  0789  00F4               	movwf	i1LCDBusyLoop@status
  5466                           
  5467                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5468  078A  2F8B               	nop2	;2 cycle nop
  5469                           
  5470                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  5471  078B  1283               	bcf	3,5	;RP0=0, select bank0
  5472  078C  1303               	bcf	3,6	;RP1=0, select bank0
  5473  078D  1187               	bcf	7,3	;volatile
  5474                           
  5475                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5476  078E  2F8F               	nop2	;2 cycle nop
  5477  078F  2F90               	nop2	;2 cycle nop
  5478  0790  0000               	nop
  5479                           
  5480                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  5481  0791  1283               	bcf	3,5	;RP0=0, select bank0
  5482  0792  1303               	bcf	3,6	;RP1=0, select bank0
  5483  0793  1587               	bsf	7,3	;volatile
  5484                           
  5485                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5486  0794  2F95               	nop2	;2 cycle nop
  5487                           
  5488                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  5489  0795  1283               	bcf	3,5	;RP0=0, select bank0
  5490  0796  1303               	bcf	3,6	;RP1=0, select bank0
  5491  0797  0807               	movf	7,w	;volatile
  5492  0798  00F0               	movwf	??i1_LCDBusyLoop
  5493  0799  3004               	movlw	4
  5494  079A                     u313_25:	
  5495  079A  1003               	clrc
  5496  079B  0CF0               	rrf	??i1_LCDBusyLoop,f
  5497  079C  3EFF               	addlw	-1
  5498  079D  1D03               	skipz
  5499  079E  2F9A               	goto	u313_25
  5500  079F  0870               	movf	??i1_LCDBusyLoop,w
  5501  07A0  00F1               	movwf	??i1_LCDBusyLoop+1
  5502  07A1  0871               	movf	??i1_LCDBusyLoop+1,w
  5503  07A2  00F3               	movwf	i1LCDBusyLoop@temp
  5504                           
  5505                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  5506  07A3  300F               	movlw	15
  5507  07A4  00F0               	movwf	??i1_LCDBusyLoop
  5508  07A5  0870               	movf	??i1_LCDBusyLoop,w
  5509  07A6  05F3               	andwf	i1LCDBusyLoop@temp,f
  5510                           
  5511                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  5512  07A7  0874               	movf	i1LCDBusyLoop@status,w
  5513  07A8  0473               	iorwf	i1LCDBusyLoop@temp,w
  5514  07A9  00F0               	movwf	??i1_LCDBusyLoop
  5515  07AA  0870               	movf	??i1_LCDBusyLoop,w
  5516  07AB  00F4               	movwf	i1LCDBusyLoop@status
  5517                           
  5518                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  5519  07AC  0874               	movf	i1LCDBusyLoop@status,w
  5520  07AD  3980               	andlw	128
  5521  07AE  00F0               	movwf	??i1_LCDBusyLoop
  5522  07AF  0870               	movf	??i1_LCDBusyLoop,w
  5523  07B0  00F2               	movwf	i1LCDBusyLoop@busy
  5524                           
  5525                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5526  07B1  2FB2               	nop2	;2 cycle nop
  5527                           
  5528                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  5529  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  5530  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  5531  07B4  1187               	bcf	7,3	;volatile
  5532                           
  5533                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5534  07B5  2FB6               	nop2	;2 cycle nop
  5535  07B6  2FB7               	nop2	;2 cycle nop
  5536  07B7  0000               	nop
  5537                           
  5538                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  5539  07B8  0872               	movf	i1LCDBusyLoop@busy,w
  5540  07B9  1D03               	btfss	3,2
  5541  07BA  2F6B               	goto	i1l2390
  5542                           
  5543                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  5544  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  5545  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  5546  07BD  1107               	bcf	7,2	;volatile
  5547                           
  5548                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  5549  07BE  300F               	movlw	15
  5550  07BF  00F0               	movwf	??i1_LCDBusyLoop
  5551  07C0  0870               	movf	??i1_LCDBusyLoop,w
  5552  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  5553  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  5554  07C3  0587               	andwf	7,f	;volatile
  5555  07C4  0008               	return
  5556  07C5                     __end_ofi1_LCDBusyLoop:	
  5557  007E                     btemp	set	126	;btemp
  5558  007E                     wtemp	set	126
  5559  007E                     wtemp0	set	126
  5560  0080                     wtemp1	set	128
  5561  0082                     wtemp2	set	130
  5562  0084                     wtemp3	set	132
  5563  0086                     wtemp4	set	134
  5564  0088                     wtemp5	set	136
  5565  007F                     wtemp6	set	127
  5566  007E                     ttemp	set	126
  5567  007E                     ttemp0	set	126
  5568  0081                     ttemp1	set	129
  5569  0084                     ttemp2	set	132
  5570  0087                     ttemp3	set	135
  5571  007F                     ttemp4	set	127
  5572  007E                     ltemp	set	126
  5573  007E                     ltemp0	set	126
  5574  0082                     ltemp1	set	130
  5575  0086                     ltemp2	set	134
  5576  0080                     ltemp3	set	128


Data Sizes:
    Strings     43
    Constant    0
    Data        47
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     43      60
    BANK1            80     28      62
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[5]), 
		 -> STR_2(CODE[4]), STR_1(CODE[17]), msg(BANK1[32]), 

    phMsg	PTR struct . size(1) Largest target is 32
		 -> msg(BANK1[32]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    _ISR->i1_LCDWriteString
    i1_LCDWriteString->i1_LCDByte
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LM35ReadTemp
    _LM35ReadTemp->___ftmul
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _main->_LM35ReadTemp
    _LM35ReadTemp->___fttol
    ___fttol->___ftmul

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   18230
                                             22 BANK1      6     6      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                       _LM35ReadTemp
                     _TuneButtonInit
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35ReadTemp                                         7     5      2    5951
                                             41 BANK0      2     2      0
                                             20 BANK1      2     0      2
                            _ReadADC
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2452
                                             27 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                              6 BANK1     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2986
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             19 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2      31
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    2405
                                             31 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    3813
                                             31 BANK0      5     2      3
                                              0 BANK1      9     9      0
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     599
                                             19 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1677
                                             31 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    2561
                                             31 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1371
                                             24 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     176
                                             19 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    4856
                                             12 BANK0      7     7      0
                          i1_LCDByte
                        i1_LCDGotoXY
                      i1_LCDWriteInt
                   i1_LCDWriteString
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteString                                     4     2      2    1012
                                             12 COMMON     2     0      2
                                              0 BANK0      2     2      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    2299
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     503
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     515
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     860
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     685
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     176
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LM35ReadTemp
     _ReadADC
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _TuneButtonInit

 _ISR (ROOT)
   i1_LCDByte
     i1_LCDBusyLoop
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod
   i1_LCDWriteString
     i1_LCDByte
       i1_LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1C      3E       7       77.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2B      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      88      12        0.0%
ABS                  0      0      88       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jun 18 19:24:31 2016

             ?_LCDBusyLoop 0070                 __CFG_CP$ON 0000         ??i1_LCDWriteString 0020  
                        pc 0002                         l20 0C5C                __CFG_CPD$ON 0000  
             ___awdiv@sign 0039                         fsr 0004                __CFG_LVP$ON 0000  
                      l120 0E5A                        l121 0E5B                        l166 0CCC  
                      l510 059D                        l167 0CB5                        l426 0604  
                      l427 060C                        l419 05EF                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RC1 0039  
                      _RB3 0033                        _RC2 003A                        _RA6 002E  
                      _RC3 003B                        _RA7 002F                        _ISR 0625  
                      _msg 00A0                        fsr0 0004            __end_of_ADCInit 0C30  
                      indf 0000               ___awmod@sign 0039               __CFG_IESO$ON 0000  
    LM35ReadTemp@adc_value 0049    LCDWriteInt@field_length 0041            __end_of_LCDByte 0E98  
          __end_of_LCDInit 06F7               ?_LCDWriteInt 003F                       ?_ISR 0070  
              LCDByte@temp 003E                       l2312 0705                       l3116 0285  
                     l3052 0142                       l2502 0F98                       l2360 05D9  
                     l2352 05C1                       l3072 018F                       l2506 0FA0  
                     l2530 0DB6                       l2522 0DB0                       l3074 01A2  
                     l3058 016D                       l2532 0DC4                       l2540 0DDD  
                     l2356 05C8                       l2604 0543                       l3092 01F7  
                     l3076 01B5                       l3068 017E                       l2518 0DA9  
                     l2366 05F4                       l2358 05D4                       l2630 0592  
                     l2622 0575                       l3094 020A                       l3078 01C8  
                     l2480 0F61                       l2544 0DE5                       l2536 0DD2  
                     l2368 05FE                       l2560 02D2                       l2632 05A0  
                     l2624 0585                       l3096 021D                       l2490 0F69  
                     l2474 0F56                       l2554 02B7                       l3098 0230  
                     l2492 0F77                       l2804 03F5                       l2572 032B  
                     l2636 05AE                       l2760 0CB7                       l2816 0407  
                     l2584 036C                       l2576 034D                       l2762 0CB9  
                     l2498 0F8D                       l2826 045F                       l2818 0443  
                     l2588 038E                       l2766 0CBE                       l2784 0FDD  
                     l2792 0FA5                       l2788 0FE7                       STR_1 07D5  
             __CFG_WDTE$ON 0000                       STR_2 07F8                       STR_3 07E6  
                     STR_4 07F8                       STR_5 07F4                       STR_6 07EB  
                     STR_7 07F8                       STR_8 07FC                       STR_9 07F0  
                     u3015 05CD                       u3035 05E8                       u3055 05F7  
                     u4210 019F                       u3235 0F6C                       u4300 01F4  
                     u3165 0E47                       u4205 0194                       u3255 0F78  
                     u3335 0DB9                       u3095 0613                       u3415 02E6  
                     u4135 0135                       u4240 01B2                       u3185 0E62  
                     u3265 0F84                       u3505 038F                       u3441 033E  
                     u3425 02FC                       u4145 0157                       u3442 0349  
                     u4330 0207                       u3195 0E7E                       u3275 0F8E  
                     u3355 0DCA                       u3515 0398                       u4235 01A7  
                     u4180 018C                       u3365 0DD3                       u3605 0594  
                     u4325 01FC                       u4270 01C5                       u3455 034E  
                     u4175 0175                       u4360 021A                       u3465 0357  
                     u3545 054A                       u4265 01BA                       u3491 037F  
                     u4355 020F                       u4427 01D7                       u3492 038A  
                     u4437 023F                       u4390 022D                       u3575 0576  
                     u4447 027E                       u4295 01E5                       u4457 0C56  
                     u4385 0222                       u2955 070E                       u4467 0696  
                     u2965 071A                       u2975 0734                       u3955 046E  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 0038  
             ___ftpack@arg 0033     __end_of_TuneButtonInit 0D0E         __size_of_LCDGotoXY 0026  
             ___ftpack@exp 0036                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0012                       ttemp 007E  
                     wtemp 007E  i1LCDWriteInt@field_length 0022              __CFG_MCLRE$ON 0000  
             ___ftmul@cntr 00C4               ___ftmul@sign 00C5            __end_of_ReadADC 0C67  
                    ??_ISR 002C         __size_ofi1_LCDByte 0059               ___fttol@exp1 00D3  
             ___fttol@lval 00CF               ?i1_LCDGotoXY 007C                      ?_main 0070  
           i1___awdiv@sign 0076            __end_of___awdiv 0FA5                      STR_10 07FC  
          __end_of___awmod 0DEA               LCDInit@style 0041            __end_of___ftmul 03D1  
          ___awdiv@divisor 0033            __end_of___fttol 05B7                      i1l120 0EB1  
                    i1l121 0EB4                      i1l166 0CA6                      i1l167 0C8F  
          ___awdiv@counter 0038                      _PORTC 0007                      _TRISC 0087  
           i1___awmod@sign 0076                      _phMsg 0058                      _count 005A  
            ___ftpack@sign 0037                      main@i 00DB                      main@t 00D9  
     __end_of_LM35ReadTemp 0D52                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            ?_TuneButtonInit 0070         __size_ofi1___awdiv 0059  
       __size_ofi1___awmod 004B            __initialization 0015               __end_of_main 029B  
                ??_ADCInit 0033                     ??_main 00D6              ___fttol@sign1 00CE  
        __end_of_LCDGotoXY 0CD3              LCDByte@isdata 0038                  ??_LCDByte 0039  
                ??_LCDInit 003F                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0035          __end_ofi1_LCDByte 0EF1           __end_of___ftpack 0625  
   __size_ofi1_LCDBusyLoop 0066                     i1l3000 067F                     i1l2700 0F1C  
                   i1l2390 076B                     i1l2710 0F3D                     i1l2714 0F45  
                   i1l2706 0F32                     i1l2730 0D63                     i1l2740 0D77  
                   i1l2726 0D5C                     i1l2910 0E2A                     i1l2752 0D98  
                   i1l2744 0D85                     i1l2682 0EFB                     i1l2738 0D69  
                   i1l2906 0E22                     i1l2914 0DEA                     i1l2748 0D90  
                   i1l2940 04ED                     i1l2688 0F06                     i1l2970 0C98  
                   i1l2698 0F0E                     i1l2938 04B8                     i1l2964 0C91  
                   i1l2948 0502        i1LCDBusyLoop@status 0074                     i1l2966 0C93  
                   u311_25 0774                     u312_25 0780                     u313_25 079A  
                   u407_25 050F           __end_of___lwtoft 0C48                     u370_25 0F11  
                   u363_25 0E9C                     u372_25 0F1D                     u380_25 0D6C  
                   u365_25 0EBB                     u373_25 0F29                     u366_25 0ED7  
                   u374_25 0F33                     u382_25 0D7D                     u383_25 0D86  
                   u447_27 0673                  ??_ReadADC 0035              _tuneUpTempDir 0059  
           __CFG_PWRTE$OFF 0000             _LCDWriteString 0FA5                  ??___awdiv 0037  
                ??___awmod 0037                  ??___ftmul 0045                  ??___fttol 00CA  
   __size_ofi1_LCDWriteInt 009F       __size_of_LCDBusyLoop 0068           i1LCDWriteInt@val 0020  
         i1LCDWriteInt@str 0023           ___awdiv@quotient 003A            ___awmod@divisor 0033  
          ___awmod@counter 0038      ___ftmul@f3_as_product 00C1          __end_ofi1___awdiv 0F4A  
        __end_ofi1___awmod 0D9D               LCDWriteInt@i 00C7               LCDWriteInt@j 00C5  
                   saved_w 007E       __size_of_LCDWriteInt 00B9    __end_of__initialization 0034  
   __end_of_LCDWriteString 1000                  LCDByte@hn 003B                  LCDByte@ln 003C  
               ___ftmul@f1 003F                 ___ftmul@f2 0042                 ___fttol@f1 00C6  
           __pcstackCOMMON 0070               __pidataBANK0 0BFC               __pidataBANK1 0C67  
            i1_LCDBusyLoop 075F                 ___lwtoft@c 003B               i1LCDGotoXY@x 0020  
             i1LCDGotoXY@y 007C          i1LCDBusyLoop@busy 0072          i1LCDBusyLoop@temp 0073  
     __size_ofi1_LCDGotoXY 0026  __size_ofi1_LCDWriteString 0057      __size_of_LM35ReadTemp 0044  
           i1LCDWriteInt@i 002A             i1LCDWriteInt@j 0028            i1LCDByte@isdata 0075  
            i1_LCDWriteInt 048A                 __pbssBANK0 005A                 __pbssBANK1 00DC  
          ?_LCDWriteString 003F                 __pmaintext 0038             ?i1_LCDBusyLoop 0070  
               __pintentry 0004                    _ADCInit 0C1C               _LM35ReadTemp 0D0E  
                ?___ftpack 0033                  ?___lwtoft 003B         i1___awdiv@dividend 0072  
                  _LCDByte 0E41                    _LCDInit 068F           ??_TuneButtonInit 0033  
           ?i1_LCDWriteInt 0020                 __stringtab 07C5                    _ReadADC 0C48  
       i1___awdiv@quotient 0077                    ___cgram 004B                    ___awdiv 0F4A  
                  ___awmod 0D9D                    ___ftmul 029B                    ___fttol 0529  
               ??___ftpack 0038                  _ANSELbits 0188                    __ptext1 0CD3  
                  __ptext2 0D0E                    __ptext3 0C30                    __ptext4 0529  
                  __ptext5 029B                    __ptext6 05B7                    __ptext7 0C48  
                  __ptext8 0FA5                    __ptext9 03D1                 ??___lwtoft 003E  
                  _curTemp 00DC               __size_of_ISR 006A           ___awmod@dividend 0035  
                _LCDGotoXY 0CAD       end_of_initialization 0034                  i1_LCDByte 0E98  
          ??i1_LCDBusyLoop 0070          LCDWriteString@msg 003F           i1_LCDWriteString 0DEA  
                _TRISAbits 0085                  _TRISBbits 0086                  _TRISCbits 0087  
          ??i1_LCDWriteInt 007C                 ?_LCDGotoXY 003F                  i1___awdiv 0EF1  
                i1___awmod 0D52                  ReadADC@ch 0036                 LCDInit@__i 0042  
               ?i1_LCDByte 0075                 LCDGotoXY@x 0041                 LCDGotoXY@y 003F  
               _tuneUpTemp 005B                ___ftmul@exp 00C0              ??_LCDBusyLoop 0033  
      start_initialization 0015                __end_of_ISR 068F                 ?i1___awdiv 0070  
               ?i1___awmod 0070              ??_LCDWriteInt 0042           ??_LCDWriteString 0041  
            i1LCDByte@temp 007B   __CFG_FOSC$INTRC_NOCLKOUT 0000                 init_fetch0 0C0B  
              __pdataBANK0 004B                __pdataBANK1 00A0         i1___awmod@dividend 0072  
                 ?_ADCInit 0070              ??i1_LCDGotoXY 007D        __end_of_LCDBusyLoop 075F  
                 ?_LCDByte 0038                   ?_LCDInit 0070          __size_of___ftpack 006E  
                 LCDByte@c 003D                  ___latbits 0002          __size_of___lwtoft 0018  
            __pcstackBANK0 0020              __pcstackBANK1 00C0                ??_LCDGotoXY 0040  
              i1LCDByte@hn 0079                i1LCDByte@ln 007A           LCDWriteInt@F1642 0053  
              ??i1_LCDByte 0076                   ?_ReadADC 0033        __end_of_LCDWriteInt 048A  
                 ?___awdiv 0033                   ?___awmod 0033                   ?___ftmul 003F  
                 ?___fttol 00C6          i1___awdiv@divisor 0070          i1___awdiv@counter 0075  
                __pstrings 07C5        __end_ofi1_LCDGotoXY 0CAD            LCDBusyLoop@busy 0035  
              ??i1___awdiv 0074                ??i1___awmod 0074            LCDBusyLoop@temp 0036  
        interrupt_function 0004                   _IOCBbits 0096   __end_ofi1_LCDWriteString 0E41  
              _LCDBusyLoop 06F7           LCDWriteString@cc 0042           __size_of_ADCInit 0014  
               _ADCON0bits 001F                __stringbase 07D4                 _ADCON1bits 009F  
                main@t_379 00DA           __size_of_LCDByte 0057           __size_of_LCDInit 0068  
              _LCDWriteInt 03D1           __size_of_ReadADC 001F    __size_of_TuneButtonInit 003B  
    __end_ofi1_LCDBusyLoop 07C5          i1___awmod@divisor 0070          i1___awmod@counter 0075  
         __size_of___awdiv 005B           __size_of___awmod 004D           __size_of___ftmul 0136  
         __size_of___fttol 008E          LCDBusyLoop@status 0037                   ___ftpack 05B7  
       __end_of__stringtab 07D5                i1_LCDGotoXY 0C87                   ___lwtoft 0C30  
               i1LCDByte@c 0078                 _ANSELHbits 0189                   __ptext10 0D9D  
                 __ptext11 0F4A                   __ptext20 0D52                   __ptext12 068F  
                 __ptext21 0EF1                   __ptext13 0CAD                   __ptext22 0C87  
                 __ptext14 0E41                   __ptext23 0E98                   __ptext15 06F7  
                 __ptext24 075F                   __ptext16 0C1C                   __ptext17 0625  
                 __ptext18 0DEA                   __ptext19 048A          __CFG_BOR4V$BOR21V 0000  
    __end_ofi1_LCDWriteInt 0529              __size_of_main 0263        i1LCDWriteString@msg 007C  
            ?_LM35ReadTemp 00D4                 _INTCONbits 000B                   init_ram0 0C0F  
                 intlevel1 0000             LCDWriteInt@val 003F             LCDWriteInt@str 00C0  
       i1LCDWriteString@cc 0021                  stringcode 07CF             ??_LM35ReadTemp 0049  
                 stringdir 07CF                   stringtab 07C5             _TuneButtonInit 0CD3  
        ?i1_LCDWriteString 007C    __size_of_LCDWriteString 005B  
