

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Aug 27 17:06:30 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x7E,2
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  0B62                     __pidataBANK0:	
   217                           
   218                           ;initializer for _randx
   219  0B62  3401               	retlw	1
   220  0B63  3400               	retlw	0
   221  0B64  3400               	retlw	0
   222  0B65  3400               	retlw	0
   223                           
   224                           ;initializer for _cur_x
   225  0B66  3402               	retlw	2
   226                           
   227                           	psect	idataBANK1
   228  0C08                     __pidataBANK1:	
   229                           
   230                           ;initializer for _g_char_info
   231  0C08  3400               	retlw	0
   232  0C09  3400               	retlw	0
   233  0C0A  3402               	retlw	2
   234  0C0B  3402               	retlw	2
   235  0C0C  3400               	retlw	0
   236  0C0D  3402               	retlw	2
   237  0C0E  3404               	retlw	4
   238  0C0F  3400               	retlw	0
   239  0C10  3402               	retlw	2
   240  0C11  3406               	retlw	6
   241  0C12  3400               	retlw	0
   242  0C13  3404               	retlw	4
   243  0C14  340A               	retlw	10
   244  0C15  3400               	retlw	0
   245  0C16  3404               	retlw	4
   246  0C17  340E               	retlw	14
   247  0C18  3400               	retlw	0
   248  0C19  3401               	retlw	1
   249  0C1A  340F               	retlw	15
   250  0C1B  3400               	retlw	0
   251  0C1C  3404               	retlw	4
   252  0C1D  3413               	retlw	19
   253  0C1E  3400               	retlw	0
   254  0C1F  3401               	retlw	1
   255  0C20  3414               	retlw	20
   256  0C21  3400               	retlw	0
   257  0C22  3404               	retlw	4
   258                           
   259                           	psect	stringtext
   260  0800                     __pstringtext:	
   261  0800                     stringtab:	
   262  0800                     __stringtab:	
   263                           
   264                           ;	String table - string pointers are 2 bytes each
   265  0800  1BFF               	btfsc	btemp+1,7
   266  0801  280A               	ljmp	stringcode
   267  0802  1383               	bcf	3,7
   268  0803  187F               	btfsc	btemp+1,0
   269  0804  1783               	bsf	3,7
   270  0805  0800               	movf	0,w
   271  0806  0A84               	incf	4,f
   272  0807  1903               	skipnz
   273  0808  0AFF               	incf	btemp+1,f
   274  0809  0008               	return
   275  080A                     stringcode:	
   276  080A  087F               	movf	btemp+1,w
   277  080B  397F               	andlw	127
   278  080C  008A               	movwf	10
   279  080D  0804               	movf	4,w
   280  080E  0A84               	incf	4,f
   281  080F  1903               	skipnz
   282  0810  0AFF               	incf	btemp+1,f
   283  0811  0082               	movwf	2
   284  0812                     __stringbase:	
   285  0812                     __end_of__stringtab:	
   286  0812                     _octpowers:	
   287  0812  3401               	retlw	1
   288  0813  3400               	retlw	0
   289  0814  3408               	retlw	8
   290  0815  3400               	retlw	0
   291  0816  3440               	retlw	64
   292  0817  3400               	retlw	0
   293  0818  3400               	retlw	0
   294  0819  3402               	retlw	2
   295  081A  3400               	retlw	0
   296  081B  3410               	retlw	16
   297  081C  3400               	retlw	0
   298  081D  3480               	retlw	128
   299  081E                     __end_of_octpowers:	
   300  081E                     _dpowers:	
   301  081E  3401               	retlw	1
   302  081F  3400               	retlw	0
   303  0820  340A               	retlw	10
   304  0821  3400               	retlw	0
   305  0822  3464               	retlw	100
   306  0823  3400               	retlw	0
   307  0824  34E8               	retlw	232
   308  0825  3403               	retlw	3
   309  0826  3410               	retlw	16
   310  0827  3427               	retlw	39
   311  0828                     __end_of_dpowers:	
   312  0828                     _hexpowers:	
   313  0828  3401               	retlw	1
   314  0829  3400               	retlw	0
   315  082A  3410               	retlw	16
   316  082B  3400               	retlw	0
   317  082C  3400               	retlw	0
   318  082D  3401               	retlw	1
   319  082E  3400               	retlw	0
   320  082F  3410               	retlw	16
   321  0830                     __end_of_hexpowers:	
   322  0830                     _g_matrix44:	
   323  0830  3400               	retlw	0
   324  0831  3401               	retlw	1
   325  0832  3400               	retlw	0
   326  0833  3400               	retlw	0
   327  0834  3400               	retlw	0
   328  0835  3401               	retlw	1
   329  0836  3400               	retlw	0
   330  0837  3400               	retlw	0
   331  0838  3400               	retlw	0
   332  0839  3401               	retlw	1
   333  083A  3400               	retlw	0
   334  083B  3400               	retlw	0
   335  083C  3400               	retlw	0
   336  083D  3401               	retlw	1
   337  083E  3400               	retlw	0
   338  083F  3400               	retlw	0
   339  0840  3400               	retlw	0
   340  0841  3400               	retlw	0
   341  0842  3400               	retlw	0
   342  0843  3400               	retlw	0
   343  0844  3401               	retlw	1
   344  0845  3401               	retlw	1
   345  0846  3401               	retlw	1
   346  0847  3401               	retlw	1
   347  0848  3400               	retlw	0
   348  0849  3400               	retlw	0
   349  084A  3400               	retlw	0
   350  084B  3400               	retlw	0
   351  084C  3400               	retlw	0
   352  084D  3400               	retlw	0
   353  084E  3400               	retlw	0
   354  084F  3400               	retlw	0
   355  0850  3400               	retlw	0
   356  0851  3401               	retlw	1
   357  0852  3401               	retlw	1
   358  0853  3400               	retlw	0
   359  0854  3401               	retlw	1
   360  0855  3401               	retlw	1
   361  0856  3400               	retlw	0
   362  0857  3400               	retlw	0
   363  0858  3400               	retlw	0
   364  0859  3400               	retlw	0
   365  085A  3400               	retlw	0
   366  085B  3400               	retlw	0
   367  085C  3400               	retlw	0
   368  085D  3400               	retlw	0
   369  085E  3400               	retlw	0
   370  085F  3400               	retlw	0
   371  0860  3400               	retlw	0
   372  0861  3401               	retlw	1
   373  0862  3400               	retlw	0
   374  0863  3400               	retlw	0
   375  0864  3400               	retlw	0
   376  0865  3401               	retlw	1
   377  0866  3401               	retlw	1
   378  0867  3400               	retlw	0
   379  0868  3400               	retlw	0
   380  0869  3400               	retlw	0
   381  086A  3401               	retlw	1
   382  086B  3400               	retlw	0
   383  086C  3400               	retlw	0
   384  086D  3400               	retlw	0
   385  086E  3400               	retlw	0
   386  086F  3400               	retlw	0
   387  0870  3401               	retlw	1
   388  0871  3401               	retlw	1
   389  0872  3400               	retlw	0
   390  0873  3400               	retlw	0
   391  0874  3400               	retlw	0
   392  0875  3401               	retlw	1
   393  0876  3401               	retlw	1
   394  0877  3400               	retlw	0
   395  0878  3400               	retlw	0
   396  0879  3400               	retlw	0
   397  087A  3400               	retlw	0
   398  087B  3400               	retlw	0
   399  087C  3400               	retlw	0
   400  087D  3400               	retlw	0
   401  087E  3400               	retlw	0
   402  087F  3400               	retlw	0
   403  0880  3400               	retlw	0
   404  0881  3401               	retlw	1
   405  0882  3400               	retlw	0
   406  0883  3400               	retlw	0
   407  0884  3401               	retlw	1
   408  0885  3401               	retlw	1
   409  0886  3400               	retlw	0
   410  0887  3400               	retlw	0
   411  0888  3401               	retlw	1
   412  0889  3400               	retlw	0
   413  088A  3400               	retlw	0
   414  088B  3400               	retlw	0
   415  088C  3400               	retlw	0
   416  088D  3400               	retlw	0
   417  088E  3400               	retlw	0
   418  088F  3400               	retlw	0
   419  0890  3400               	retlw	0
   420  0891  3400               	retlw	0
   421  0892  3400               	retlw	0
   422  0893  3400               	retlw	0
   423  0894  3401               	retlw	1
   424  0895  3401               	retlw	1
   425  0896  3401               	retlw	1
   426  0897  3400               	retlw	0
   427  0898  3400               	retlw	0
   428  0899  3400               	retlw	0
   429  089A  3401               	retlw	1
   430  089B  3400               	retlw	0
   431  089C  3400               	retlw	0
   432  089D  3400               	retlw	0
   433  089E  3400               	retlw	0
   434  089F  3400               	retlw	0
   435  08A0  3400               	retlw	0
   436  08A1  3401               	retlw	1
   437  08A2  3401               	retlw	1
   438  08A3  3400               	retlw	0
   439  08A4  3400               	retlw	0
   440  08A5  3401               	retlw	1
   441  08A6  3400               	retlw	0
   442  08A7  3400               	retlw	0
   443  08A8  3400               	retlw	0
   444  08A9  3401               	retlw	1
   445  08AA  3400               	retlw	0
   446  08AB  3400               	retlw	0
   447  08AC  3400               	retlw	0
   448  08AD  3400               	retlw	0
   449  08AE  3400               	retlw	0
   450  08AF  3400               	retlw	0
   451  08B0  3401               	retlw	1
   452  08B1  3400               	retlw	0
   453  08B2  3400               	retlw	0
   454  08B3  3400               	retlw	0
   455  08B4  3401               	retlw	1
   456  08B5  3401               	retlw	1
   457  08B6  3401               	retlw	1
   458  08B7  3400               	retlw	0
   459  08B8  3400               	retlw	0
   460  08B9  3400               	retlw	0
   461  08BA  3400               	retlw	0
   462  08BB  3400               	retlw	0
   463  08BC  3400               	retlw	0
   464  08BD  3400               	retlw	0
   465  08BE  3400               	retlw	0
   466  08BF  3400               	retlw	0
   467  08C0  3400               	retlw	0
   468  08C1  3401               	retlw	1
   469  08C2  3400               	retlw	0
   470  08C3  3400               	retlw	0
   471  08C4  3400               	retlw	0
   472  08C5  3401               	retlw	1
   473  08C6  3400               	retlw	0
   474  08C7  3400               	retlw	0
   475  08C8  3401               	retlw	1
   476  08C9  3401               	retlw	1
   477  08CA  3400               	retlw	0
   478  08CB  3400               	retlw	0
   479  08CC  3400               	retlw	0
   480  08CD  3400               	retlw	0
   481  08CE  3400               	retlw	0
   482  08CF  3400               	retlw	0
   483  08D0  3400               	retlw	0
   484  08D1  3400               	retlw	0
   485  08D2  3400               	retlw	0
   486  08D3  3400               	retlw	0
   487  08D4  3401               	retlw	1
   488  08D5  3401               	retlw	1
   489  08D6  3401               	retlw	1
   490  08D7  3400               	retlw	0
   491  08D8  3401               	retlw	1
   492  08D9  3400               	retlw	0
   493  08DA  3400               	retlw	0
   494  08DB  3400               	retlw	0
   495  08DC  3400               	retlw	0
   496  08DD  3400               	retlw	0
   497  08DE  3400               	retlw	0
   498  08DF  3400               	retlw	0
   499  08E0  3401               	retlw	1
   500  08E1  3401               	retlw	1
   501  08E2  3400               	retlw	0
   502  08E3  3400               	retlw	0
   503  08E4  3400               	retlw	0
   504  08E5  3401               	retlw	1
   505  08E6  3400               	retlw	0
   506  08E7  3400               	retlw	0
   507  08E8  3400               	retlw	0
   508  08E9  3401               	retlw	1
   509  08EA  3400               	retlw	0
   510  08EB  3400               	retlw	0
   511  08EC  3400               	retlw	0
   512  08ED  3400               	retlw	0
   513  08EE  3400               	retlw	0
   514  08EF  3400               	retlw	0
   515  08F0  3400               	retlw	0
   516  08F1  3400               	retlw	0
   517  08F2  3401               	retlw	1
   518  08F3  3400               	retlw	0
   519  08F4  3401               	retlw	1
   520  08F5  3401               	retlw	1
   521  08F6  3401               	retlw	1
   522  08F7  3400               	retlw	0
   523  08F8  3400               	retlw	0
   524  08F9  3400               	retlw	0
   525  08FA  3400               	retlw	0
   526  08FB  3400               	retlw	0
   527  08FC  3400               	retlw	0
   528  08FD  3400               	retlw	0
   529  08FE  3400               	retlw	0
   530  08FF  3400               	retlw	0
   531  0900  3400               	retlw	0
   532  0901  3401               	retlw	1
   533  0902  3400               	retlw	0
   534  0903  3400               	retlw	0
   535  0904  3400               	retlw	0
   536  0905  3401               	retlw	1
   537  0906  3400               	retlw	0
   538  0907  3400               	retlw	0
   539  0908  3400               	retlw	0
   540  0909  3401               	retlw	1
   541  090A  3401               	retlw	1
   542  090B  3400               	retlw	0
   543  090C  3400               	retlw	0
   544  090D  3400               	retlw	0
   545  090E  3400               	retlw	0
   546  090F  3400               	retlw	0
   547  0910  3400               	retlw	0
   548  0911  3401               	retlw	1
   549  0912  3401               	retlw	1
   550  0913  3400               	retlw	0
   551  0914  3400               	retlw	0
   552  0915  3401               	retlw	1
   553  0916  3401               	retlw	1
   554  0917  3400               	retlw	0
   555  0918  3400               	retlw	0
   556  0919  3400               	retlw	0
   557  091A  3400               	retlw	0
   558  091B  3400               	retlw	0
   559  091C  3400               	retlw	0
   560  091D  3400               	retlw	0
   561  091E  3400               	retlw	0
   562  091F  3400               	retlw	0
   563  0920  3400               	retlw	0
   564  0921  3400               	retlw	0
   565  0922  3400               	retlw	0
   566  0923  3400               	retlw	0
   567  0924  3400               	retlw	0
   568  0925  3401               	retlw	1
   569  0926  3401               	retlw	1
   570  0927  3400               	retlw	0
   571  0928  3400               	retlw	0
   572  0929  3401               	retlw	1
   573  092A  3400               	retlw	0
   574  092B  3400               	retlw	0
   575  092C  3400               	retlw	0
   576  092D  3400               	retlw	0
   577  092E  3400               	retlw	0
   578  092F  3400               	retlw	0
   579  0930  3400               	retlw	0
   580  0931  3400               	retlw	0
   581  0932  3400               	retlw	0
   582  0933  3400               	retlw	0
   583  0934  3401               	retlw	1
   584  0935  3401               	retlw	1
   585  0936  3400               	retlw	0
   586  0937  3400               	retlw	0
   587  0938  3400               	retlw	0
   588  0939  3401               	retlw	1
   589  093A  3400               	retlw	0
   590  093B  3400               	retlw	0
   591  093C  3400               	retlw	0
   592  093D  3400               	retlw	0
   593  093E  3400               	retlw	0
   594  093F  3400               	retlw	0
   595  0940  3400               	retlw	0
   596  0941  3401               	retlw	1
   597  0942  3400               	retlw	0
   598  0943  3400               	retlw	0
   599  0944  3401               	retlw	1
   600  0945  3401               	retlw	1
   601  0946  3400               	retlw	0
   602  0947  3400               	retlw	0
   603  0948  3400               	retlw	0
   604  0949  3400               	retlw	0
   605  094A  3400               	retlw	0
   606  094B  3400               	retlw	0
   607  094C  3400               	retlw	0
   608  094D  3400               	retlw	0
   609  094E  3400               	retlw	0
   610  094F  3400               	retlw	0
   611  0950  3400               	retlw	0
   612  0951  3401               	retlw	1
   613  0952  3400               	retlw	0
   614  0953  3400               	retlw	0
   615  0954  3400               	retlw	0
   616  0955  3401               	retlw	1
   617  0956  3401               	retlw	1
   618  0957  3400               	retlw	0
   619  0958  3400               	retlw	0
   620  0959  3400               	retlw	0
   621  095A  3400               	retlw	0
   622  095B  3400               	retlw	0
   623  095C  3400               	retlw	0
   624  095D  3400               	retlw	0
   625  095E  3400               	retlw	0
   626  095F  3400               	retlw	0
   627  0960  3400               	retlw	0
   628  0961  3401               	retlw	1
   629  0962  3400               	retlw	0
   630  0963  3400               	retlw	0
   631  0964  3401               	retlw	1
   632  0965  3401               	retlw	1
   633  0966  3401               	retlw	1
   634  0967  3400               	retlw	0
   635  0968  3400               	retlw	0
   636  0969  3401               	retlw	1
   637  096A  3400               	retlw	0
   638  096B  3400               	retlw	0
   639  096C  3400               	retlw	0
   640  096D  3400               	retlw	0
   641  096E  3400               	retlw	0
   642  096F  3400               	retlw	0
   643  0970  3401               	retlw	1
   644  0971  3401               	retlw	1
   645  0972  3401               	retlw	1
   646  0973  3400               	retlw	0
   647  0974  3400               	retlw	0
   648  0975  3401               	retlw	1
   649  0976  3400               	retlw	0
   650  0977  3400               	retlw	0
   651  0978  3400               	retlw	0
   652  0979  3401               	retlw	1
   653  097A  3400               	retlw	0
   654  097B  3400               	retlw	0
   655  097C  3400               	retlw	0
   656  097D  3400               	retlw	0
   657  097E  3400               	retlw	0
   658  097F  3400               	retlw	0
   659  0980  3400               	retlw	0
   660  0981  3400               	retlw	0
   661  0982  3401               	retlw	1
   662  0983  3400               	retlw	0
   663  0984  3401               	retlw	1
   664  0985  3401               	retlw	1
   665  0986  3401               	retlw	1
   666  0987  3400               	retlw	0
   667  0988  3400               	retlw	0
   668  0989  3400               	retlw	0
   669  098A  3401               	retlw	1
   670  098B  3400               	retlw	0
   671  098C  3400               	retlw	0
   672  098D  3400               	retlw	0
   673  098E  3400               	retlw	0
   674  098F  3400               	retlw	0
   675  0990  3400               	retlw	0
   676  0991  3401               	retlw	1
   677  0992  3400               	retlw	0
   678  0993  3400               	retlw	0
   679  0994  3400               	retlw	0
   680  0995  3401               	retlw	1
   681  0996  3400               	retlw	0
   682  0997  3400               	retlw	0
   683  0998  3401               	retlw	1
   684  0999  3401               	retlw	1
   685  099A  3401               	retlw	1
   686  099B  3400               	retlw	0
   687  099C  3400               	retlw	0
   688  099D  3400               	retlw	0
   689  099E  3400               	retlw	0
   690  099F  3400               	retlw	0
   691  09A0  3401               	retlw	1
   692  09A1  3400               	retlw	0
   693  09A2  3400               	retlw	0
   694  09A3  3400               	retlw	0
   695  09A4  3401               	retlw	1
   696  09A5  3401               	retlw	1
   697  09A6  3401               	retlw	1
   698  09A7  3400               	retlw	0
   699  09A8  3401               	retlw	1
   700  09A9  3400               	retlw	0
   701  09AA  3400               	retlw	0
   702  09AB  3400               	retlw	0
   703  09AC  3400               	retlw	0
   704  09AD  3400               	retlw	0
   705  09AE  3400               	retlw	0
   706  09AF  3400               	retlw	0
   707  09B0                     __end_of_g_matrix44:	
   708  09B0                     STR_6:	
   709  09B0  343C               	retlw	60	;'<'
   710  09B1  343C               	retlw	60	;'<'
   711  09B2  343C               	retlw	60	;'<'
   712  09B3  343C               	retlw	60	;'<'
   713  09B4  343C               	retlw	60	;'<'
   714  09B5  343C               	retlw	60	;'<'
   715  09B6  343C               	retlw	60	;'<'
   716  09B7  343C               	retlw	60	;'<'
   717  09B8  343C               	retlw	60	;'<'
   718  09B9  343C               	retlw	60	;'<'
   719  09BA  343C               	retlw	60	;'<'
   720  09BB  343C               	retlw	60	;'<'
   721  09BC  343C               	retlw	60	;'<'
   722  09BD  343C               	retlw	60	;'<'
   723  09BE  343C               	retlw	60	;'<'
   724  09BF  343C               	retlw	60	;'<'
   725  09C0  343C               	retlw	60	;'<'
   726  09C1  343C               	retlw	60	;'<'
   727  09C2  343C               	retlw	60	;'<'
   728  09C3  343C               	retlw	60	;'<'
   729  09C4  344D               	retlw	77	;'M'
   730  09C5  3441               	retlw	65	;'A'
   731  09C6  3454               	retlw	84	;'T'
   732  09C7  3452               	retlw	82	;'R'
   733  09C8  3449               	retlw	73	;'I'
   734  09C9  3458               	retlw	88	;'X'
   735  09CA  3434               	retlw	52	;'4'
   736  09CB  3434               	retlw	52	;'4'
   737  09CC  3400               	retlw	0
   738  09CD                     STR_22:	
   739  09CD  343C               	retlw	60	;'<'
   740  09CE  343C               	retlw	60	;'<'
   741  09CF  343C               	retlw	60	;'<'
   742  09D0  343C               	retlw	60	;'<'
   743  09D1  343C               	retlw	60	;'<'
   744  09D2  343C               	retlw	60	;'<'
   745  09D3  343C               	retlw	60	;'<'
   746  09D4  343C               	retlw	60	;'<'
   747  09D5  343C               	retlw	60	;'<'
   748  09D6  343C               	retlw	60	;'<'
   749  09D7  343C               	retlw	60	;'<'
   750  09D8  343C               	retlw	60	;'<'
   751  09D9  343C               	retlw	60	;'<'
   752  09DA  343C               	retlw	60	;'<'
   753  09DB  343C               	retlw	60	;'<'
   754  09DC  343C               	retlw	60	;'<'
   755  09DD  343C               	retlw	60	;'<'
   756  09DE  343C               	retlw	60	;'<'
   757  09DF  343C               	retlw	60	;'<'
   758  09E0  343C               	retlw	60	;'<'
   759  09E1  344D               	retlw	77	;'M'
   760  09E2  3441               	retlw	65	;'A'
   761  09E3  3454               	retlw	84	;'T'
   762  09E4  3452               	retlw	82	;'R'
   763  09E5  3449               	retlw	73	;'I'
   764  09E6  3458               	retlw	88	;'X'
   765  09E7  3438               	retlw	56	;'8'
   766  09E8  3438               	retlw	56	;'8'
   767  09E9  3400               	retlw	0
   768  09EA                     STR_14:	
   769  09EA  3469               	retlw	105	;'i'
   770  09EB  346E               	retlw	110	;'n'
   771  09EC  3464               	retlw	100	;'d'
   772  09ED  3465               	retlw	101	;'e'
   773  09EE  3478               	retlw	120	;'x'
   774  09EF  3420               	retlw	32	;' '
   775  09F0  343D               	retlw	61	;'='
   776  09F1  3420               	retlw	32	;' '
   777  09F2  3425               	retlw	37	;'%'
   778  09F3  3464               	retlw	100	;'d'
   779  09F4  342C               	retlw	44	;','
   780  09F5  3420               	retlw	32	;' '
   781  09F6  3473               	retlw	115	;'s'
   782  09F7  3475               	retlw	117	;'u'
   783  09F8  3462               	retlw	98	;'b'
   784  09F9  345F               	retlw	95	;'_'
   785  09FA  3469               	retlw	105	;'i'
   786  09FB  346E               	retlw	110	;'n'
   787  09FC  3464               	retlw	100	;'d'
   788  09FD  3465               	retlw	101	;'e'
   789  09FE  3478               	retlw	120	;'x'
   790  09FF  3420               	retlw	32	;' '
   791  0A00  343D               	retlw	61	;'='
   792  0A01  3420               	retlw	32	;' '
   793  0A02  3425               	retlw	37	;'%'
   794  0A03  3464               	retlw	100	;'d'
   795  0A04  3400               	retlw	0
   796  0A05                     STR_16:	
   797  0A05  343C               	retlw	60	;'<'
   798  0A06  343C               	retlw	60	;'<'
   799  0A07  343C               	retlw	60	;'<'
   800  0A08  343C               	retlw	60	;'<'
   801  0A09  343C               	retlw	60	;'<'
   802  0A0A  343C               	retlw	60	;'<'
   803  0A0B  343C               	retlw	60	;'<'
   804  0A0C  343C               	retlw	60	;'<'
   805  0A0D  343C               	retlw	60	;'<'
   806  0A0E  343C               	retlw	60	;'<'
   807  0A0F  343C               	retlw	60	;'<'
   808  0A10  343C               	retlw	60	;'<'
   809  0A11  343C               	retlw	60	;'<'
   810  0A12  343C               	retlw	60	;'<'
   811  0A13  343C               	retlw	60	;'<'
   812  0A14  343C               	retlw	60	;'<'
   813  0A15  343C               	retlw	60	;'<'
   814  0A16  343C               	retlw	60	;'<'
   815  0A17  343C               	retlw	60	;'<'
   816  0A18  343C               	retlw	60	;'<'
   817  0A19  3400               	retlw	0
   818  0A1A                     STR_10:	
   819  0A1A  343E               	retlw	62	;'>'
   820  0A1B  343E               	retlw	62	;'>'
   821  0A1C  343E               	retlw	62	;'>'
   822  0A1D  343E               	retlw	62	;'>'
   823  0A1E  343E               	retlw	62	;'>'
   824  0A1F  343E               	retlw	62	;'>'
   825  0A20  343E               	retlw	62	;'>'
   826  0A21  343E               	retlw	62	;'>'
   827  0A22  343E               	retlw	62	;'>'
   828  0A23  343E               	retlw	62	;'>'
   829  0A24  343E               	retlw	62	;'>'
   830  0A25  343E               	retlw	62	;'>'
   831  0A26  343E               	retlw	62	;'>'
   832  0A27  343E               	retlw	62	;'>'
   833  0A28  343E               	retlw	62	;'>'
   834  0A29  343E               	retlw	62	;'>'
   835  0A2A  343E               	retlw	62	;'>'
   836  0A2B  343E               	retlw	62	;'>'
   837  0A2C  343E               	retlw	62	;'>'
   838  0A2D  343E               	retlw	62	;'>'
   839  0A2E  3400               	retlw	0
   840  0A2F                     STR_12:	
   841  0A2F  3470               	retlw	112	;'p'
   842  0A30  3472               	retlw	114	;'r'
   843  0A31  3469               	retlw	105	;'i'
   844  0A32  346E               	retlw	110	;'n'
   845  0A33  3474               	retlw	116	;'t'
   846  0A34  3466               	retlw	102	;'f'
   847  0A35  345F               	retlw	95	;'_'
   848  0A36  3461               	retlw	97	;'a'
   849  0A37  346C               	retlw	108	;'l'
   850  0A38  346C               	retlw	108	;'l'
   851  0A39  345F               	retlw	95	;'_'
   852  0A3A  344D               	retlw	77	;'M'
   853  0A3B  3441               	retlw	65	;'A'
   854  0A3C  3454               	retlw	84	;'T'
   855  0A3D  3452               	retlw	82	;'R'
   856  0A3E  3449               	retlw	73	;'I'
   857  0A3F  3458               	retlw	88	;'X'
   858  0A40  3434               	retlw	52	;'4'
   859  0A41  3434               	retlw	52	;'4'
   860  0A42  3400               	retlw	0
   861  0A43                     STR_29:	
   862  0A43  3430               	retlw	48	;'0'
   863  0A44  3431               	retlw	49	;'1'
   864  0A45  3432               	retlw	50	;'2'
   865  0A46  3433               	retlw	51	;'3'
   866  0A47  3434               	retlw	52	;'4'
   867  0A48  3435               	retlw	53	;'5'
   868  0A49  3436               	retlw	54	;'6'
   869  0A4A  3437               	retlw	55	;'7'
   870  0A4B  3438               	retlw	56	;'8'
   871  0A4C  3439               	retlw	57	;'9'
   872  0A4D  3441               	retlw	65	;'A'
   873  0A4E  3442               	retlw	66	;'B'
   874  0A4F  3443               	retlw	67	;'C'
   875  0A50  3444               	retlw	68	;'D'
   876  0A51  3445               	retlw	69	;'E'
   877  0A52  3446               	retlw	70	;'F'
   878  0A53  3400               	retlw	0
   879  0A54                     STR_30:	
   880  0A54  3430               	retlw	48	;'0'
   881  0A55  3431               	retlw	49	;'1'
   882  0A56  3432               	retlw	50	;'2'
   883  0A57  3433               	retlw	51	;'3'
   884  0A58  3434               	retlw	52	;'4'
   885  0A59  3435               	retlw	53	;'5'
   886  0A5A  3436               	retlw	54	;'6'
   887  0A5B  3437               	retlw	55	;'7'
   888  0A5C  3438               	retlw	56	;'8'
   889  0A5D  3439               	retlw	57	;'9'
   890  0A5E  3461               	retlw	97	;'a'
   891  0A5F  3462               	retlw	98	;'b'
   892  0A60  3463               	retlw	99	;'c'
   893  0A61  3464               	retlw	100	;'d'
   894  0A62  3465               	retlw	101	;'e'
   895  0A63  3466               	retlw	102	;'f'
   896  0A64  3400               	retlw	0
   897  0A65                     STR_28:	
   898  0A65  344D               	retlw	77	;'M'
   899  0A66  3461               	retlw	97	;'a'
   900  0A67  3469               	retlw	105	;'i'
   901  0A68  346E               	retlw	110	;'n'
   902  0A69  3420               	retlw	32	;' '
   903  0A6A  3473               	retlw	115	;'s'
   904  0A6B  3463               	retlw	99	;'c'
   905  0A6C  3472               	retlw	114	;'r'
   906  0A6D  3465               	retlw	101	;'e'
   907  0A6E  3465               	retlw	101	;'e'
   908  0A6F  346E               	retlw	110	;'n'
   909  0A70  3400               	retlw	0
   910  0A71                     STR_13:	
   911  0A71  3473               	retlw	115	;'s'
   912  0A72  3469               	retlw	105	;'i'
   913  0A73  347A               	retlw	122	;'z'
   914  0A74  3465               	retlw	101	;'e'
   915  0A75  3420               	retlw	32	;' '
   916  0A76  343D               	retlw	61	;'='
   917  0A77  3420               	retlw	32	;' '
   918  0A78  3425               	retlw	37	;'%'
   919  0A79  3464               	retlw	100	;'d'
   920  0A7A  3400               	retlw	0
   921  0A7B                     STR_1:	
   922  0A7B  340D               	retlw	13
   923  0A7C  340A               	retlw	10
   924  0A7D  3400               	retlw	0
   925  0A7E                     STR_7:	
   926  0A7E  342A               	retlw	42	;'*'
   927  0A7F  3400               	retlw	0
   928  0A80                     STR_5:	
   929  0A80  343A               	retlw	58	;':'
   930  0A81  3400               	retlw	0
   931  0A82                     STR_8:	
   932  0A82  345F               	retlw	95	;'_'
   933  0A83  3400               	retlw	0
   934  0A7D                     
   935                           ; #config settings
   936  0000                     
   937                           	psect	nvBANK0
   938  0062                     __pnvBANK0:	
   939  0062                     _UQEnd:	
   940  0062                     	ds	1
   941  0063                     _UQFront:	
   942  0063                     	ds	1
   943  000C                     _PIR1bits	set	12
   944  001A                     _RCREG	set	26
   945  0018                     _RCSTAbits	set	24
   946  0019                     _TXREG	set	25
   947  005F                     _GIE	set	95
   948  005E                     _PEIE	set	94
   949  0029                     _RA1	set	41
   950  002A                     _RA2	set	42
   951  002B                     _RA3	set	43
   952  0099                     _SPBRG	set	153
   953  0085                     _TRISAbits	set	133
   954  0098                     _TXSTAbits	set	152
   955  0465                     _RCIE	set	1125
   956  0188                     _ANSELbits	set	392
   957                           
   958                           	psect	cinit
   959  07C1                     start_initialization:	
   960  07C1                     __initialization:	
   961                           
   962                           ; Clear objects allocated to BANK0
   963  07C1  1383               	bcf	3,7	;select IRP bank0
   964  07C2  3052               	movlw	low __pbssBANK0
   965  07C3  0084               	movwf	4
   966  07C4  305D               	movlw	low (__pbssBANK0+11)
   967  07C5  120A  158A  2377  120A  118A  	fcall	clear_ram0
   968                           
   969                           ; Clear objects allocated to BANK1
   970  07CA  30A0               	movlw	low __pbssBANK1
   971  07CB  0084               	movwf	4
   972  07CC  30C0               	movlw	low (__pbssBANK1+32)
   973  07CD  120A  158A  2377  120A  118A  	fcall	clear_ram0
   974                           
   975                           ; Clear objects allocated to BANK3
   976  07D2  1783               	bsf	3,7	;select IRP bank2
   977  07D3  3090               	movlw	low __pbssBANK3
   978  07D4  0084               	movwf	4
   979  07D5  30F0               	movlw	low (__pbssBANK3+96)
   980  07D6  120A  158A  2377  120A  118A  	fcall	clear_ram0
   981                           
   982                           ; Clear objects allocated to BANK2
   983  07DB  3010               	movlw	low __pbssBANK2
   984  07DC  0084               	movwf	4
   985  07DD  3050               	movlw	low (__pbssBANK2+64)
   986  07DE  120A  158A  2377  120A  118A  	fcall	clear_ram0
   987                           
   988                           ; Initialize objects allocated to BANK1
   989  07E3  1383               	bcf	3,7	;select IRP bank0
   990  07E4  30DB               	movlw	low (__pdataBANK1+27)
   991  07E5  00FD               	movwf	btemp+-1
   992  07E6  300C               	movlw	high __pidataBANK1
   993  07E7  00FE               	movwf	btemp
   994  07E8  3008               	movlw	low __pidataBANK1
   995  07E9  00FF               	movwf	btemp+1
   996  07EA  30C0               	movlw	low __pdataBANK1
   997  07EB  0084               	movwf	4
   998  07EC  120A  158A  23BF  120A  118A  	fcall	init_ram0
   999                           
  1000                           ; Initialize objects allocated to BANK0
  1001  07F1  3062               	movlw	low (__pdataBANK0+5)
  1002  07F2  00FD               	movwf	btemp+-1
  1003  07F3  300B               	movlw	high __pidataBANK0
  1004  07F4  00FE               	movwf	btemp
  1005  07F5  3062               	movlw	low __pidataBANK0
  1006  07F6  00FF               	movwf	btemp+1
  1007  07F7  305D               	movlw	low __pdataBANK0
  1008  07F8  0084               	movwf	4
  1009  07F9  120A  158A  23BF   	fcall	init_ram0
  1010  07FC                     end_of_initialization:	
  1011                           ;End of C runtime variable initialization code
  1012                           
  1013  07FC                     __end_of__initialization:	
  1014  07FC  0183               	clrf	3
  1015  07FD  120A  118A  2D27   	ljmp	_main	;jump to C main() function
  1016                           
  1017                           	psect	bssBANK0
  1018  0052                     __pbssBANK0:	
  1019  0052                     USARTWriteInt@F1617:	
  1020  0052                     	ds	5
  1021  0057                     _g_cur_matrix44:	
  1022  0057                     	ds	2
  1023  0059                     _temp_cur_matrix44:	
  1024  0059                     	ds	2
  1025  005B                     _cur_y:	
  1026  005B                     	ds	1
  1027  005C                     _g_char_info_index:	
  1028  005C                     	ds	1
  1029                           
  1030                           	psect	dataBANK0
  1031  005D                     __pdataBANK0:	
  1032  005D                     _randx:	
  1033  005D                     	ds	4
  1034  0061                     _cur_x:	
  1035  0061                     	ds	1
  1036                           
  1037                           	psect	bssBANK1
  1038  00A0                     __pbssBANK1:	
  1039  00A0                     _g_debug:	
  1040  00A0                     	ds	32
  1041                           
  1042                           	psect	dataBANK1
  1043  00C0                     __pdataBANK1:	
  1044  00C0                     _g_char_info:	
  1045  00C0                     	ds	27
  1046                           
  1047                           	psect	bssBANK3
  1048  0190                     __pbssBANK3:	
  1049  0190                     _URBuff:	
  1050  0190                     	ds	32
  1051  01B0                     _g_matrix88:	
  1052  01B0                     	ds	64
  1053                           
  1054                           	psect	bssBANK2
  1055  0110                     __pbssBANK2:	
  1056  0110                     _temp_matrix88:	
  1057  0110                     	ds	64
  1058                           
  1059                           	psect	clrtext
  1060  0B77                     clear_ram0:	
  1061                           ;	Called with FSR containing the base address, and
  1062                           ;	W with the last address+1
  1063                           
  1064  0B77  0064               	clrwdt	;clear the watchdog before getting into this loop
  1065  0B78                     clrloop0:	
  1066  0B78  0180               	clrf	0	;clear RAM location pointed to by FSR
  1067  0B79  0A84               	incf	4,f	;increment pointer
  1068  0B7A  0604               	xorwf	4,w	;XOR with final address
  1069  0B7B  1903               	btfsc	3,2	;have we reached the end yet?
  1070  0B7C  3400               	retlw	0	;all done for this memory range, return
  1071  0B7D  0604               	xorwf	4,w	;XOR again to restore value
  1072  0B7E  2B78               	goto	clrloop0	;do the next byte
  1073                           
  1074                           	psect	inittext
  1075  0BBB                     init_fetch0:	
  1076                           ;	Called with low address in FSR and high address in W
  1077                           
  1078  0BBB  087E               	movf	126,w
  1079  0BBC  008A               	movwf	10
  1080  0BBD  087F               	movf	127,w
  1081  0BBE  0082               	movwf	2
  1082  0BBF                     init_ram0:	
  1083                           ;Called with:
  1084                           ;	high address of idata address in btemp 
  1085                           ;	low address of idata address in btemp+1 
  1086                           ;	low address of data in FSR
  1087                           ;	high address + 1 of data in btemp-1
  1088                           
  1089  0BBF  23BB  120A  158A   	fcall	init_fetch0
  1090  0BC2  0080               	movwf	0
  1091  0BC3  0A84               	incf	4,f
  1092  0BC4  0804               	movf	4,w
  1093  0BC5  067D               	xorwf	125,w
  1094  0BC6  1903               	btfsc	3,2
  1095  0BC7  3400               	retlw	0
  1096  0BC8  0AFF               	incf	127,f
  1097  0BC9  1903               	btfsc	3,2
  1098  0BCA  0AFE               	incf	126,f
  1099  0BCB  2BBF               	goto	init_ram0
  1100                           
  1101                           	psect	cstackCOMMON
  1102  0070                     __pcstackCOMMON:	
  1103  0070                     ?_memset:	
  1104  0070                     ?_memcpy:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ?_srand:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?_USARTInit:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?_USARTWriteChar:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ??_USARTWriteChar:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_SPI1_write:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ??_SPI1_write:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_max7219_init1:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_printf_MATRIX7219:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_MATRIX88_to_MATRIX7219:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ?_printf_MATRIX88:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_printf_Screen:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_Clear_Matrix:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_is_row_full:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_delete_matrix:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_is_row_empty:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_hit_land:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_is_valid:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_is_left_boundary:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_is_right_boundary:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_fall_off:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ?_clear:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_merge:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ?_char_info_index_rand:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_get_high:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_get_high_after_merge:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0070                     ?_get_holes_after_merge:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0070                     ??_get_holes_after_merge:	
  1186                           ; 1 bytes @ 0x0
  1187                           
  1188  0070                     ?_find_best_solution:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?___bmul:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_evaluate:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?___lmul:	
  1198                           ; 2 bytes @ 0x0
  1199                           
  1200  0070                     USARTWriteChar@ch:	
  1201                           ; 4 bytes @ 0x0
  1202                           
  1203  0070                     MATRIX88_to_MATRIX7219@matrix7219:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     is_row_full@row:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     is_row_empty@row:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     hit_land@y:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     is_valid@y:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     fall_off@y:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     clear@y:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     merge@y:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ___bmul@multiplicand:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     memcpy@s1:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     USARTInit@baud_rate:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     is_left_boundary@matrix44:	
  1237                           ; 2 bytes @ 0x0
  1238                           
  1239  0070                     is_right_boundary@matrix44:	
  1240                           ; 2 bytes @ 0x0
  1241                           
  1242  0070                     get_high_after_merge@matrix:	
  1243                           ; 2 bytes @ 0x0
  1244                           
  1245  0070                     memset@c:	
  1246                           ; 2 bytes @ 0x0
  1247                           
  1248  0070                     srand@x:	
  1249                           ; 2 bytes @ 0x0
  1250                           
  1251  0070                     ___lmul@multiplier:	
  1252                           ; 2 bytes @ 0x0
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0x0
  1256  0070                     	ds	1
  1257  0071                     ?_USARTWriteString:	
  1258  0071                     ??_MATRIX88_to_MATRIX7219:	
  1259                           ; 1 bytes @ 0x1
  1260                           
  1261  0071                     ??_is_row_full:	
  1262                           ; 1 bytes @ 0x1
  1263                           
  1264  0071                     ??_is_row_empty:	
  1265                           ; 1 bytes @ 0x1
  1266                           
  1267  0071                     ??___bmul:	
  1268                           ; 1 bytes @ 0x1
  1269                           
  1270  0071                     SPI1_write@data:	
  1271                           ; 1 bytes @ 0x1
  1272                           
  1273  0071                     USARTWriteString@str:	
  1274                           ; 1 bytes @ 0x1
  1275                           
  1276  0071                     hit_land@matrix44:	
  1277                           ; 2 bytes @ 0x1
  1278                           
  1279  0071                     is_valid@matrix44:	
  1280                           ; 2 bytes @ 0x1
  1281                           
  1282  0071                     fall_off@matrix44:	
  1283                           ; 2 bytes @ 0x1
  1284                           
  1285  0071                     clear@matrix44:	
  1286                           ; 2 bytes @ 0x1
  1287                           
  1288  0071                     merge@matrix44:	
  1289                           ; 2 bytes @ 0x1
  1290                           
  1291  0071                     memcpy@n:	
  1292                           ; 2 bytes @ 0x1
  1293                           
  1294                           
  1295                           ; 2 bytes @ 0x1
  1296  0071                     	ds	1
  1297  0072                     ??_srand:	
  1298  0072                     ??_USARTInit:	
  1299                           ; 1 bytes @ 0x2
  1300                           
  1301  0072                     ??_evaluate:	
  1302                           ; 1 bytes @ 0x2
  1303                           
  1304  0072                     ??_get_high_after_merge:	
  1305                           ; 1 bytes @ 0x2
  1306                           
  1307  0072                     SPI1_write@mask:	
  1308                           ; 1 bytes @ 0x2
  1309                           
  1310  0072                     is_left_boundary@matrix88:	
  1311                           ; 1 bytes @ 0x2
  1312                           
  1313  0072                     is_right_boundary@matrix88:	
  1314                           ; 1 bytes @ 0x2
  1315                           
  1316  0072                     ___bmul@product:	
  1317                           ; 1 bytes @ 0x2
  1318                           
  1319  0072                     memset@n:	
  1320                           ; 1 bytes @ 0x2
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0x2
  1324  0072                     	ds	1
  1325  0073                     ??_memcpy:	
  1326  0073                     ??_USARTWriteString:	
  1327                           ; 1 bytes @ 0x3
  1328                           
  1329  0073                     ?_debug_str:	
  1330                           ; 1 bytes @ 0x3
  1331                           
  1332  0073                     ?_debug_line:	
  1333                           ; 1 bytes @ 0x3
  1334                           
  1335  0073                     ??_is_left_boundary:	
  1336                           ; 1 bytes @ 0x3
  1337                           
  1338  0073                     ??_is_right_boundary:	
  1339                           ; 1 bytes @ 0x3
  1340                           
  1341  0073                     SPI1_write@i:	
  1342                           ; 1 bytes @ 0x3
  1343                           
  1344  0073                     hit_land@matrix88:	
  1345                           ; 1 bytes @ 0x3
  1346                           
  1347  0073                     is_valid@matrix88:	
  1348                           ; 1 bytes @ 0x3
  1349                           
  1350  0073                     fall_off@matrix88:	
  1351                           ; 1 bytes @ 0x3
  1352                           
  1353  0073                     clear@matrix88:	
  1354                           ; 1 bytes @ 0x3
  1355                           
  1356  0073                     merge@matrix88:	
  1357                           ; 1 bytes @ 0x3
  1358                           
  1359  0073                     ___bmul@multiplier:	
  1360                           ; 1 bytes @ 0x3
  1361                           
  1362  0073                     debug_str@str:	
  1363                           ; 1 bytes @ 0x3
  1364                           
  1365  0073                     debug_line@str:	
  1366                           ; 2 bytes @ 0x3
  1367                           
  1368                           
  1369                           ; 2 bytes @ 0x3
  1370  0073                     	ds	1
  1371  0074                     ??_memset:	
  1372  0074                     ??_max7219_init1:	
  1373                           ; 1 bytes @ 0x4
  1374                           
  1375  0074                     ?_Write_Byte:	
  1376                           ; 1 bytes @ 0x4
  1377                           
  1378  0074                     ??_hit_land:	
  1379                           ; 1 bytes @ 0x4
  1380                           
  1381  0074                     ??_is_valid:	
  1382                           ; 1 bytes @ 0x4
  1383                           
  1384  0074                     ??_fall_off:	
  1385                           ; 1 bytes @ 0x4
  1386                           
  1387  0074                     ??_clear:	
  1388                           ; 1 bytes @ 0x4
  1389                           
  1390  0074                     ??_merge:	
  1391                           ; 1 bytes @ 0x4
  1392                           
  1393  0074                     Write_Byte@myValue:	
  1394                           ; 1 bytes @ 0x4
  1395                           
  1396  0074                     MATRIX88_to_MATRIX7219@matrix88:	
  1397                           ; 1 bytes @ 0x4
  1398                           
  1399  0074                     is_row_full@matrix:	
  1400                           ; 1 bytes @ 0x4
  1401                           
  1402  0074                     is_row_empty@matrix:	
  1403                           ; 1 bytes @ 0x4
  1404                           
  1405  0074                     memcpy@d:	
  1406                           ; 1 bytes @ 0x4
  1407                           
  1408  0074                     ___lmul@multiplicand:	
  1409                           ; 1 bytes @ 0x4
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0x4
  1413  0074                     	ds	1
  1414  0075                     ??_debug_str:	
  1415  0075                     ??_debug_line:	
  1416                           ; 1 bytes @ 0x5
  1417                           
  1418  0075                     ??_Write_Byte:	
  1419                           ; 1 bytes @ 0x5
  1420                           
  1421  0075                     ?_printf_debug_MATRIX88:	
  1422                           ; 1 bytes @ 0x5
  1423                           
  1424  0075                     Write_Byte@myColumn:	
  1425                           ; 1 bytes @ 0x5
  1426                           
  1427  0075                     MATRIX88_to_MATRIX7219@mask:	
  1428                           ; 1 bytes @ 0x5
  1429                           
  1430  0075                     is_row_full@col:	
  1431                           ; 1 bytes @ 0x5
  1432                           
  1433  0075                     is_row_empty@col:	
  1434                           ; 1 bytes @ 0x5
  1435                           
  1436  0075                     memcpy@s:	
  1437                           ; 1 bytes @ 0x5
  1438                           
  1439  0075                     memset@p:	
  1440                           ; 1 bytes @ 0x5
  1441                           
  1442  0075                     printf_debug_MATRIX88@lable:	
  1443                           ; 1 bytes @ 0x5
  1444                           
  1445                           
  1446                           ; 2 bytes @ 0x5
  1447  0075                     	ds	1
  1448  0076                     ??_printf_MATRIX7219:	
  1449  0076                     ??_get_high:	
  1450                           ; 1 bytes @ 0x6
  1451                           
  1452  0076                     MATRIX88_to_MATRIX7219@row:	
  1453                           ; 1 bytes @ 0x6
  1454                           
  1455  0076                     get_high_after_merge@y:	
  1456                           ; 1 bytes @ 0x6
  1457                           
  1458  0076                     get_holes_after_merge@num_hole:	
  1459                           ; 1 bytes @ 0x6
  1460                           
  1461  0076                     memcpy@d1:	
  1462                           ; 1 bytes @ 0x6
  1463                           
  1464  0076                     memset@p1:	
  1465                           ; 1 bytes @ 0x6
  1466                           
  1467  0076                     evaluate@risk:	
  1468                           ; 1 bytes @ 0x6
  1469                           
  1470                           
  1471                           ; 2 bytes @ 0x6
  1472  0076                     	ds	1
  1473  0077                     ?_delete_row:	
  1474  0077                     ?_merge1:	
  1475                           ; 1 bytes @ 0x7
  1476                           
  1477  0077                     MATRIX88_to_MATRIX7219@col:	
  1478                           ; 1 bytes @ 0x7
  1479                           
  1480  0077                     printf_debug_MATRIX88@matrix:	
  1481                           ; 1 bytes @ 0x7
  1482                           
  1483  0077                     delete_row@row:	
  1484                           ; 1 bytes @ 0x7
  1485                           
  1486  0077                     is_right_boundary@x:	
  1487                           ; 1 bytes @ 0x7
  1488                           
  1489  0077                     merge1@y:	
  1490                           ; 1 bytes @ 0x7
  1491                           
  1492  0077                     get_high@matrix:	
  1493                           ; 1 bytes @ 0x7
  1494                           
  1495  0077                     get_high_after_merge@col:	
  1496                           ; 1 bytes @ 0x7
  1497                           
  1498  0077                     get_holes_after_merge@stop:	
  1499                           ; 1 bytes @ 0x7
  1500                           
  1501                           
  1502                           ; 1 bytes @ 0x7
  1503  0077                     	ds	1
  1504  0078                     ??_printf_debug_MATRIX88:	
  1505  0078                     ??_delete_row:	
  1506                           ; 1 bytes @ 0x8
  1507                           
  1508  0078                     ??___lmul:	
  1509                           ; 1 bytes @ 0x8
  1510                           
  1511  0078                     printf_MATRIX7219@matrix:	
  1512                           ; 1 bytes @ 0x8
  1513                           
  1514  0078                     hit_land@x:	
  1515                           ; 1 bytes @ 0x8
  1516                           
  1517  0078                     is_valid@x:	
  1518                           ; 1 bytes @ 0x8
  1519                           
  1520  0078                     is_left_boundary@x:	
  1521                           ; 1 bytes @ 0x8
  1522                           
  1523  0078                     is_right_boundary@row:	
  1524                           ; 1 bytes @ 0x8
  1525                           
  1526  0078                     fall_off@x:	
  1527                           ; 1 bytes @ 0x8
  1528                           
  1529  0078                     clear@x:	
  1530                           ; 1 bytes @ 0x8
  1531                           
  1532  0078                     merge@x:	
  1533                           ; 1 bytes @ 0x8
  1534                           
  1535  0078                     evaluate@full:	
  1536                           ; 1 bytes @ 0x8
  1537                           
  1538  0078                     get_high@row:	
  1539                           ; 1 bytes @ 0x8
  1540                           
  1541  0078                     get_high_after_merge@row:	
  1542                           ; 1 bytes @ 0x8
  1543                           
  1544  0078                     get_holes_after_merge@start:	
  1545                           ; 1 bytes @ 0x8
  1546                           
  1547  0078                     merge1@matrix44:	
  1548                           ; 1 bytes @ 0x8
  1549                           
  1550                           
  1551                           ; 2 bytes @ 0x8
  1552  0078                     	ds	1
  1553  0079                     printf_MATRIX7219@col:	
  1554  0079                     hit_land@col:	
  1555                           ; 1 bytes @ 0x9
  1556                           
  1557  0079                     is_valid@row:	
  1558                           ; 1 bytes @ 0x9
  1559                           
  1560  0079                     is_left_boundary@row:	
  1561                           ; 1 bytes @ 0x9
  1562                           
  1563  0079                     is_right_boundary@col:	
  1564                           ; 1 bytes @ 0x9
  1565                           
  1566  0079                     fall_off@col:	
  1567                           ; 1 bytes @ 0x9
  1568                           
  1569  0079                     clear@row:	
  1570                           ; 1 bytes @ 0x9
  1571                           
  1572  0079                     merge@row:	
  1573                           ; 1 bytes @ 0x9
  1574                           
  1575  0079                     evaluate@matrix:	
  1576                           ; 1 bytes @ 0x9
  1577                           
  1578  0079                     get_holes_after_merge@matrix:	
  1579                           ; 1 bytes @ 0x9
  1580                           
  1581  0079                     ___lmul@product:	
  1582                           ; 1 bytes @ 0x9
  1583                           
  1584                           
  1585                           ; 4 bytes @ 0x9
  1586  0079                     	ds	1
  1587  007A                     ??_printf_MATRIX88:	
  1588  007A                     ?_right_most:	
  1589                           ; 1 bytes @ 0xA
  1590                           
  1591  007A                     hit_land@row:	
  1592                           ; 1 bytes @ 0xA
  1593                           
  1594  007A                     is_valid@col:	
  1595                           ; 1 bytes @ 0xA
  1596                           
  1597  007A                     is_left_boundary@col:	
  1598                           ; 1 bytes @ 0xA
  1599                           
  1600  007A                     fall_off@row:	
  1601                           ; 1 bytes @ 0xA
  1602                           
  1603  007A                     clear@col:	
  1604                           ; 1 bytes @ 0xA
  1605                           
  1606  007A                     merge@col:	
  1607                           ; 1 bytes @ 0xA
  1608                           
  1609  007A                     merge1@matrix88_in:	
  1610                           ; 1 bytes @ 0xA
  1611                           
  1612  007A                     evaluate@col:	
  1613                           ; 1 bytes @ 0xA
  1614                           
  1615  007A                     get_holes_after_merge@col:	
  1616                           ; 1 bytes @ 0xA
  1617                           
  1618  007A                     right_most@matrix44:	
  1619                           ; 1 bytes @ 0xA
  1620                           
  1621                           
  1622                           ; 2 bytes @ 0xA
  1623  007A                     	ds	1
  1624  007B                     ??_printf_Screen:	
  1625  007B                     ??_Clear_Matrix:	
  1626                           ; 1 bytes @ 0xB
  1627                           
  1628  007B                     ??_delete_matrix:	
  1629                           ; 1 bytes @ 0xB
  1630                           
  1631  007B                     ?_left_most:	
  1632                           ; 1 bytes @ 0xB
  1633                           
  1634  007B                     printf_debug_MATRIX88@row:	
  1635                           ; 1 bytes @ 0xB
  1636                           
  1637  007B                     merge1@matrix88_out:	
  1638                           ; 1 bytes @ 0xB
  1639                           
  1640  007B                     evaluate@row:	
  1641                           ; 1 bytes @ 0xB
  1642                           
  1643  007B                     get_holes_after_merge@row:	
  1644                           ; 1 bytes @ 0xB
  1645                           
  1646  007B                     left_most@matrix44:	
  1647                           ; 1 bytes @ 0xB
  1648                           
  1649                           
  1650                           ; 2 bytes @ 0xB
  1651  007B                     	ds	1
  1652  007C                     printf_debug_MATRIX88@col:	
  1653  007C                     right_most@matrix88:	
  1654                           ; 1 bytes @ 0xC
  1655                           
  1656                           
  1657                           ; 1 bytes @ 0xC
  1658  007C                     	ds	1
  1659  007D                     ??_right_most:	
  1660  007D                     ??___awmod:	
  1661                           ; 1 bytes @ 0xD
  1662                           
  1663  007D                     left_most@matrix88:	
  1664                           ; 1 bytes @ 0xD
  1665                           
  1666                           
  1667                           ; 1 bytes @ 0xD
  1668  007D                     	ds	1
  1669  007E                     ??_char_info_index_rand:	
  1670                           
  1671                           	psect	cstackBANK0
  1672  0020                     __pcstackBANK0:	
  1673                           ; 1 bytes @ 0xE
  1674                           
  1675  0020                     ??_merge1:	
  1676  0020                     ??_left_most:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0020                     ?_rand:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0020                     printf_MATRIX88@matrix88:	
  1683                           ; 2 bytes @ 0x0
  1684                           
  1685  0020                     right_most@x:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0020                     delete_row@len:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691                           
  1692                           ; 2 bytes @ 0x0
  1693  0020                     	ds	1
  1694  0021                     left_most@x:	
  1695  0021                     printf_MATRIX88@matrix7219:	
  1696                           ; 1 bytes @ 0x1
  1697                           
  1698                           
  1699                           ; 8 bytes @ 0x1
  1700  0021                     	ds	1
  1701  0022                     ??_rand:	
  1702  0022                     delete_row@matrix:	
  1703                           ; 1 bytes @ 0x2
  1704                           
  1705                           
  1706                           ; 1 bytes @ 0x2
  1707  0022                     	ds	1
  1708  0023                     delete_row@i:	
  1709                           
  1710                           ; 1 bytes @ 0x3
  1711  0023                     	ds	1
  1712  0024                     delete_matrix@count:	
  1713  0024                     merge1@len:	
  1714                           ; 1 bytes @ 0x4
  1715                           
  1716                           
  1717                           ; 2 bytes @ 0x4
  1718  0024                     	ds	1
  1719  0025                     delete_matrix@matrix:	
  1720                           
  1721                           ; 1 bytes @ 0x5
  1722  0025                     	ds	1
  1723  0026                     delete_matrix@row:	
  1724  0026                     merge1@x:	
  1725                           ; 1 bytes @ 0x6
  1726                           
  1727                           
  1728                           ; 1 bytes @ 0x6
  1729  0026                     	ds	1
  1730  0027                     ?___awmod:	
  1731  0027                     merge1@row:	
  1732                           ; 2 bytes @ 0x7
  1733                           
  1734  0027                     ___awmod@divisor:	
  1735                           ; 1 bytes @ 0x7
  1736                           
  1737                           
  1738                           ; 2 bytes @ 0x7
  1739  0027                     	ds	1
  1740  0028                     merge1@col:	
  1741                           
  1742                           ; 1 bytes @ 0x8
  1743  0028                     	ds	1
  1744  0029                     ??_find_best_solution:	
  1745  0029                     ___awmod@dividend:	
  1746                           ; 1 bytes @ 0x9
  1747                           
  1748                           
  1749                           ; 2 bytes @ 0x9
  1750  0029                     	ds	2
  1751  002B                     ___awmod@counter:	
  1752                           
  1753                           ; 1 bytes @ 0xB
  1754  002B                     	ds	1
  1755  002C                     ___awmod@sign:	
  1756                           
  1757                           ; 1 bytes @ 0xC
  1758  002C                     	ds	4
  1759  0030                     find_best_solution@left_most_index:	
  1760                           
  1761                           ; 1 bytes @ 0x10
  1762  0030                     	ds	1
  1763  0031                     find_best_solution@right_most_index:	
  1764                           
  1765                           ; 1 bytes @ 0x11
  1766  0031                     	ds	1
  1767  0032                     find_best_solution@res:	
  1768                           
  1769                           ; 1 bytes @ 0x12
  1770  0032                     	ds	1
  1771  0033                     find_best_solution@temp_pre_x:	
  1772                           
  1773                           ; 1 bytes @ 0x13
  1774  0033                     	ds	1
  1775  0034                     find_best_solution@tem_pre_sub_index:	
  1776                           
  1777                           ; 1 bytes @ 0x14
  1778  0034                     	ds	1
  1779  0035                     find_best_solution@temp_y:	
  1780                           
  1781                           ; 1 bytes @ 0x15
  1782  0035                     	ds	1
  1783  0036                     find_best_solution@temp_pre_count:	
  1784                           
  1785                           ; 1 bytes @ 0x16
  1786  0036                     	ds	1
  1787  0037                     find_best_solution@temp_pre_risk:	
  1788                           
  1789                           ; 2 bytes @ 0x17
  1790  0037                     	ds	2
  1791  0039                     find_best_solution@temp_pre_hole:	
  1792                           
  1793                           ; 1 bytes @ 0x19
  1794  0039                     	ds	1
  1795  003A                     find_best_solution@temp_pre_high:	
  1796                           
  1797                           ; 1 bytes @ 0x1A
  1798  003A                     	ds	1
  1799  003B                     find_best_solution@temp_count:	
  1800                           
  1801                           ; 1 bytes @ 0x1B
  1802  003B                     	ds	1
  1803  003C                     find_best_solution@tem_sub_index:	
  1804                           
  1805                           ; 1 bytes @ 0x1C
  1806  003C                     	ds	1
  1807  003D                     find_best_solution@temp_risk:	
  1808                           
  1809                           ; 2 bytes @ 0x1D
  1810  003D                     	ds	2
  1811  003F                     find_best_solution@temp_hole:	
  1812                           
  1813                           ; 1 bytes @ 0x1F
  1814  003F                     	ds	1
  1815  0040                     find_best_solution@temp_high:	
  1816                           
  1817                           ; 1 bytes @ 0x20
  1818  0040                     	ds	1
  1819  0041                     find_best_solution@temp_x:	
  1820                           
  1821                           ; 1 bytes @ 0x21
  1822  0041                     	ds	1
  1823  0042                     ?_main:	
  1824  0042                     main@argc:	
  1825                           ; 2 bytes @ 0x22
  1826                           
  1827                           
  1828                           ; 2 bytes @ 0x22
  1829  0042                     	ds	2
  1830  0044                     main@argv:	
  1831                           
  1832                           ; 2 bytes @ 0x24
  1833  0044                     	ds	2
  1834  0046                     ??_main:	
  1835                           
  1836                           ; 1 bytes @ 0x26
  1837  0046                     	ds	9
  1838  004F                     main@Seed:	
  1839                           
  1840                           ; 2 bytes @ 0x2F
  1841  004F                     	ds	2
  1842  0051                     main@hit_res:	
  1843                           
  1844                           ; 1 bytes @ 0x31
  1845  0051                     	ds	1
  1846                           
  1847                           	psect	maintext
  1848  0527                     __pmaintext:	
  1849 ;;
  1850 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
  1851 ;;
  1852 ;; *************** function _main *****************
  1853 ;; Defined at:
  1854 ;;		line 1350 in file "teris_16f886.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  argc            2   34[BANK0 ] int 
  1857 ;;  argv            2   36[BANK0 ] PTR PTR unsigned char 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  Seed            2   47[BANK0 ] unsigned int 
  1860 ;;  hit_res         1   49[BANK0 ] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  2   34[BANK0 ] int 
  1863 ;; Registers used:
  1864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : B00/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1870 ;;      Params:         0       4       0       0       0
  1871 ;;      Locals:         0       3       0       0       0
  1872 ;;      Temps:          0       9       0       0       0
  1873 ;;      Totals:         0      16       0       0       0
  1874 ;;Total ram usage:       16 bytes
  1875 ;; Hardware stack levels required when called:    6
  1876 ;; This function calls:
  1877 ;;		_Clear_Matrix
  1878 ;;		_USARTInit
  1879 ;;		___bmul
  1880 ;;		_char_info_index_rand
  1881 ;;		_clear
  1882 ;;		_delete_matrix
  1883 ;;		_find_best_solution
  1884 ;;		_hit_land
  1885 ;;		_max7219_init1
  1886 ;;		_merge
  1887 ;;		_printf_Screen
  1888 ;;		_printf_debug_MATRIX88
  1889 ;;		_srand
  1890 ;; This function is called by:
  1891 ;;		Startup code after reset
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           
  1896                           ;psect for function _main
  1897  0527                     _main:	
  1898                           
  1899                           ;teris_16f886.c: 1352: uint8_t hit_res;
  1900                           ;teris_16f886.c: 1364: (TRISAbits.TRISA3 = 0);
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1904  0527  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0528  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0529  1185               	bcf	5,3	;volatile
  1907                           
  1908                           ;teris_16f886.c: 1366: (TRISAbits.TRISA2 = 0);
  1909  052A  1105               	bcf	5,2	;volatile
  1910                           
  1911                           ;teris_16f886.c: 1368: (TRISAbits.TRISA1 = 0);
  1912  052B  1085               	bcf	5,1	;volatile
  1913                           
  1914                           ;teris_16f886.c: 1370: ANSELbits.ANS1 = 0;
  1915  052C  1683               	bsf	3,5	;RP0=1, select bank3
  1916  052D  1703               	bsf	3,6	;RP1=1, select bank3
  1917  052E  1088               	bcf	8,1	;volatile
  1918                           
  1919                           ;teris_16f886.c: 1371: ANSELbits.ANS2 = 0;
  1920  052F  1108               	bcf	8,2	;volatile
  1921                           
  1922                           ;teris_16f886.c: 1372: ANSELbits.ANS3 = 0;
  1923  0530  1188               	bcf	8,3	;volatile
  1924                           
  1925                           ;teris_16f886.c: 1373: RA2 = 1;
  1926  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0533  1505               	bsf	5,2	;volatile
  1929                           
  1930                           ;teris_16f886.c: 1374: RA1 = 0;
  1931  0534  1085               	bcf	5,1	;volatile
  1932                           
  1933                           ;teris_16f886.c: 1378: USARTInit(9600);
  1934  0535  3080               	movlw	128
  1935  0536  00F0               	movwf	USARTInit@baud_rate
  1936  0537  3025               	movlw	37
  1937  0538  00F1               	movwf	USARTInit@baud_rate+1
  1938  0539  120A  158A  2635  120A  118A  	fcall	_USARTInit
  1939                           
  1940                           ;teris_16f886.c: 1382: max7219_init1();
  1941  053E  120A  158A  27AF  120A  118A  	fcall	_max7219_init1
  1942                           
  1943                           ;teris_16f886.c: 1384: unsigned Seed;
  1944                           ;teris_16f886.c: 1385: srand(Seed);
  1945  0543  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0544  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0545  0850               	movf	main@Seed+1,w
  1948  0546  00F1               	movwf	srand@x+1
  1949  0547  084F               	movf	main@Seed,w
  1950  0548  00F0               	movwf	srand@x
  1951  0549  120A  158A  237F  120A  118A  	fcall	_srand
  1952  054E                     l472:	
  1953                           ;teris_16f886.c: 1387: __start:
  1954                           
  1955                           ;teris_16f886.c: 1399: {
  1956                           ;teris_16f886.c: 1403: goto __start;
  1957                           
  1958                           
  1959                           ;teris_16f886.c: 1388: Clear_Matrix();
  1960  054E  120A  158A  2388  120A  118A  	fcall	_Clear_Matrix
  1961  0553                     l3906:	
  1962                           ;teris_16f886.c: 1389: while(1)
  1963                           
  1964                           
  1965                           ;teris_16f886.c: 1390: {
  1966                           ;teris_16f886.c: 1391: cur_y = 0;
  1967  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0555  01DB               	clrf	_cur_y
  1970                           
  1971                           ;teris_16f886.c: 1392: cur_x = 2, cur_y = 0;
  1972  0556  3002               	movlw	2
  1973  0557  00C6               	movwf	??_main
  1974  0558  0846               	movf	??_main,w
  1975  0559  00E1               	movwf	_cur_x
  1976  055A  01DB               	clrf	_cur_y
  1977                           
  1978                           ;teris_16f886.c: 1393: g_char_info_index = char_info_index_rand();
  1979  055B  120A  158A  23F0  120A  118A  	fcall	_char_info_index_rand
  1980  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0562  00C6               	movwf	??_main
  1983  0563  0846               	movf	??_main,w
  1984  0564  00DC               	movwf	_g_char_info_index
  1985                           
  1986                           ;teris_16f886.c: 1398: if(find_best_solution() == 0)
  1987  0565  120A  118A  2637  120A  118A  	fcall	_find_best_solution
  1988  056A  3A00               	xorlw	0
  1989  056B  1903               	btfsc	3,2
  1990  056C  2D4E               	goto	l472
  1991                           
  1992                           ;teris_16f886.c: 1404: }
  1993                           ;teris_16f886.c: 1405: g_cur_matrix44 = &g_matrix44[g_char_info[g_char_info_index].start
      +                          _index + g_char_info[g_char_info_index].cur_index];
  1994  056D  3003               	movlw	3
  1995  056E  1283               	bcf	3,5	;RP0=0, select bank0
  1996  056F  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0570  00C6               	movwf	??_main
  1998  0571  0846               	movf	??_main,w
  1999  0572  00F0               	movwf	___bmul@multiplicand
  2000  0573  085C               	movf	_g_char_info_index,w
  2001  0574  120A  158A  2399  120A  118A  	fcall	___bmul
  2002  0579  3E01               	addlw	1
  2003  057A  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  2004  057B  0084               	movwf	4
  2005  057C  1383               	bcf	3,7	;select IRP bank1
  2006  057D  0800               	movf	0,w
  2007  057E  1283               	bcf	3,5	;RP0=0, select bank0
  2008  057F  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0580  00C7               	movwf	??_main+1
  2010  0581  3003               	movlw	3
  2011  0582  00C8               	movwf	??_main+2
  2012  0583  0848               	movf	??_main+2,w
  2013  0584  00F0               	movwf	___bmul@multiplicand
  2014  0585  085C               	movf	_g_char_info_index,w
  2015  0586  120A  158A  2399  120A  118A  	fcall	___bmul
  2016  058B  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  2017  058C  0084               	movwf	4
  2018  058D  1383               	bcf	3,7	;select IRP bank1
  2019  058E  0800               	movf	0,w
  2020  058F  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0591  0747               	addwf	??_main+1,w
  2023  0592  00C9               	movwf	??_main+3
  2024  0593  01CA               	clrf	??_main+4
  2025  0594  0DCA               	rlf	??_main+4,f
  2026  0595  0EC9               	swapf	??_main+3,f
  2027  0596  0ECA               	swapf	??_main+4,f
  2028  0597  30F0               	movlw	240
  2029  0598  05CA               	andwf	??_main+4,f
  2030  0599  0849               	movf	??_main+3,w
  2031  059A  390F               	andlw	15
  2032  059B  04CA               	iorwf	??_main+4,f
  2033  059C  30F0               	movlw	240
  2034  059D  05C9               	andwf	??_main+3,f
  2035  059E  3030               	movlw	low (_g_matrix44| (0+32768))
  2036  059F  00CB               	movwf	??_main+5
  2037  05A0  3088               	movlw	high (_g_matrix44| (0+32768))
  2038  05A1  00CC               	movwf	??_main+6
  2039  05A2  0849               	movf	??_main+3,w
  2040  05A3  074B               	addwf	??_main+5,w
  2041  05A4  00CD               	movwf	??_main+7
  2042  05A5  084A               	movf	??_main+4,w
  2043  05A6  1803               	skipnc
  2044  05A7  0A4A               	incf	??_main+4,w
  2045  05A8  074C               	addwf	??_main+6,w
  2046  05A9  00CE               	movwf	??_main+8
  2047  05AA  084D               	movf	??_main+7,w
  2048  05AB  00D7               	movwf	_g_cur_matrix44
  2049  05AC  084E               	movf	??_main+8,w
  2050  05AD  00D8               	movwf	_g_cur_matrix44+1
  2051  05AE                     l3920:	
  2052                           ;teris_16f886.c: 1406: while(1)
  2053                           
  2054                           
  2055                           ;teris_16f886.c: 1407: {
  2056                           ;teris_16f886.c: 1408: hit_res = hit_land(cur_x, cur_y, g_cur_matrix44, &g_matrix88);
  2057  05AE  085B               	movf	_cur_y,w
  2058  05AF  00C6               	movwf	??_main
  2059  05B0  0846               	movf	??_main,w
  2060  05B1  00F0               	movwf	hit_land@y
  2061  05B2  0857               	movf	_g_cur_matrix44,w
  2062  05B3  00F1               	movwf	hit_land@matrix44
  2063  05B4  0858               	movf	_g_cur_matrix44+1,w
  2064  05B5  00F2               	movwf	hit_land@matrix44+1
  2065  05B6  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2066  05B7  00C7               	movwf	??_main+1
  2067  05B8  0847               	movf	??_main+1,w
  2068  05B9  00F3               	movwf	hit_land@matrix88
  2069  05BA  0861               	movf	_cur_x,w
  2070  05BB  120A  118A  2230  120A  118A  	fcall	_hit_land
  2071  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2072  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2073  05C2  00C8               	movwf	??_main+2
  2074  05C3  0848               	movf	??_main+2,w
  2075  05C4  00D1               	movwf	main@hit_res
  2076                           
  2077                           ;teris_16f886.c: 1412: merge(cur_x, cur_y, g_cur_matrix44, &g_matrix88);
  2078  05C5  085B               	movf	_cur_y,w
  2079  05C6  00C6               	movwf	??_main
  2080  05C7  0846               	movf	??_main,w
  2081  05C8  00F0               	movwf	merge@y
  2082  05C9  0857               	movf	_g_cur_matrix44,w
  2083  05CA  00F1               	movwf	merge@matrix44
  2084  05CB  0858               	movf	_g_cur_matrix44+1,w
  2085  05CC  00F2               	movwf	merge@matrix44+1
  2086  05CD  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2087  05CE  00C7               	movwf	??_main+1
  2088  05CF  0847               	movf	??_main+1,w
  2089  05D0  00F3               	movwf	merge@matrix88
  2090  05D1  0861               	movf	_cur_x,w
  2091  05D2  120A  158A  275F  120A  118A  	fcall	_merge
  2092                           
  2093                           ;teris_16f886.c: 1413: if(hit_res == 1)
  2094  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2095  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2096  05D9  0351               	decf	main@hit_res,w
  2097  05DA  1D03               	btfss	3,2
  2098  05DB  2DF6               	goto	l3932
  2099                           
  2100                           ;teris_16f886.c: 1414: {
  2101                           ;teris_16f886.c: 1415: printf_Screen();
  2102  05DC  120A  158A  235D  120A  118A  	fcall	_printf_Screen
  2103                           
  2104                           ;teris_16f886.c: 1419: _delay((unsigned long)((100)*(20000000/4000.0)));
  2105  05E1  3003               	movlw	3
  2106  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2107  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2108  05E4  00C8               	movwf	??_main+2
  2109  05E5  308A               	movlw	138
  2110  05E6  00C7               	movwf	??_main+1
  2111  05E7  3056               	movlw	86
  2112  05E8  00C6               	movwf	??_main
  2113  05E9                     u6297:	
  2114  05E9  0BC6               	decfsz	??_main,f
  2115  05EA  2DE9               	goto	u6297
  2116  05EB  0BC7               	decfsz	??_main+1,f
  2117  05EC  2DE9               	goto	u6297
  2118  05ED  0BC8               	decfsz	??_main+2,f
  2119  05EE  2DE9               	goto	u6297
  2120  05EF  2DF0               	nop2
  2121                           
  2122                           ;teris_16f886.c: 1421: delete_matrix(&g_matrix88);
  2123  05F0  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2124  05F1  120A  158A  2580  120A  118A  	fcall	_delete_matrix
  2125  05F6                     l3932:	
  2126                           
  2127                           ;teris_16f886.c: 1422: }
  2128                           ;teris_16f886.c: 1424: printf_debug_MATRIX88("Main screen", &g_matrix88);
  2129  05F6  3065               	movlw	low (STR_28| (0+32768))
  2130  05F7  00F5               	movwf	printf_debug_MATRIX88@lable
  2131  05F8  308A               	movlw	high (STR_28| (0+32768))
  2132  05F9  00F6               	movwf	printf_debug_MATRIX88@lable+1
  2133  05FA  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2134  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  2135  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  2136  05FD  00C6               	movwf	??_main
  2137  05FE  0846               	movf	??_main,w
  2138  05FF  00F7               	movwf	printf_debug_MATRIX88@matrix
  2139  0600  120A  118A  21C4  120A  118A  	fcall	_printf_debug_MATRIX88
  2140                           
  2141                           ;teris_16f886.c: 1426: printf_Screen();
  2142  0605  120A  158A  235D  120A  118A  	fcall	_printf_Screen
  2143                           
  2144                           ;teris_16f886.c: 1427: if(hit_res == 0)
  2145  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2146  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2147  060C  0851               	movf	main@hit_res,w
  2148  060D  1D03               	btfss	3,2
  2149  060E  2D53               	goto	l3906
  2150                           
  2151                           ;teris_16f886.c: 1428: {
  2152                           ;teris_16f886.c: 1429: clear(cur_x, cur_y, g_cur_matrix44, &g_matrix88);
  2153  060F  085B               	movf	_cur_y,w
  2154  0610  00C6               	movwf	??_main
  2155  0611  0846               	movf	??_main,w
  2156  0612  00F0               	movwf	clear@y
  2157  0613  0857               	movf	_g_cur_matrix44,w
  2158  0614  00F1               	movwf	clear@matrix44
  2159  0615  0858               	movf	_g_cur_matrix44+1,w
  2160  0616  00F2               	movwf	clear@matrix44+1
  2161  0617  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2162  0618  00C7               	movwf	??_main+1
  2163  0619  0847               	movf	??_main+1,w
  2164  061A  00F3               	movwf	clear@matrix88
  2165  061B  0861               	movf	_cur_x,w
  2166  061C  120A  158A  2710  120A  118A  	fcall	_clear
  2167                           
  2168                           ;teris_16f886.c: 1434: }
  2169                           ;teris_16f886.c: 1438: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2170                           
  2171                           ;teris_16f886.c: 1431: else
  2172                           ;teris_16f886.c: 1432: {
  2173                           ;teris_16f886.c: 1433: break;
  2174                           
  2175                           ;teris_16f886.c: 1430: }
  2176  0621  301A               	movlw	26
  2177  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0624  00C8               	movwf	??_main+2
  2180  0625  305E               	movlw	94
  2181  0626  00C7               	movwf	??_main+1
  2182  0627  3086               	movlw	134
  2183  0628  00C6               	movwf	??_main
  2184  0629                     u6307:	
  2185  0629  0BC6               	decfsz	??_main,f
  2186  062A  2E29               	goto	u6307
  2187  062B  0BC7               	decfsz	??_main+1,f
  2188  062C  2E29               	goto	u6307
  2189  062D  0BC8               	decfsz	??_main+2,f
  2190  062E  2E29               	goto	u6307
  2191  062F  0000               	nop
  2192                           
  2193                           ;teris_16f886.c: 1440: cur_y++;
  2194  0630  3001               	movlw	1
  2195  0631  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0632  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0633  00C6               	movwf	??_main
  2198  0634  0846               	movf	??_main,w
  2199  0635  07DB               	addwf	_cur_y,f
  2200  0636  2DAE               	goto	l3920
  2201  0637                     __end_of_main:	
  2202                           ;teris_16f886.c: 1450: return 0;
  2203                           ;	Return value of _main is never used
  2204                           
  2205                           ;teris_16f886.c: 1441: }
  2206                           ;teris_16f886.c: 1442: }
  2207                           ;teris_16f886.c: 1443: __exit:
  2208                           
  2209                           
  2210                           	psect	text1
  2211  0B7F                     __ptext1:	
  2212 ;; *************** function _srand *****************
  2213 ;; Defined at:
  2214 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\rand.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  x               2    0[COMMON] unsigned int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2228 ;;      Params:         2       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0
  2231 ;;      Totals:         2       0       0       0       0
  2232 ;;Total ram usage:        2 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _srand
  2243  0B7F                     _srand:	
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in _srand: [wreg]
  2247  0B7F  0870               	movf	srand@x,w
  2248  0B80  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0B81  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0B82  00DD               	movwf	_randx
  2251  0B83  0871               	movf	srand@x+1,w
  2252  0B84  00DE               	movwf	_randx+1
  2253  0B85  01DF               	clrf	_randx+2
  2254  0B86  01E0               	clrf	_randx+3
  2255  0B87  0008               	return
  2256  0B88                     __end_of_srand:	
  2257                           
  2258                           	psect	text2
  2259  01C4                     __ptext2:	
  2260 ;; *************** function _printf_debug_MATRIX88 *****************
  2261 ;; Defined at:
  2262 ;;		line 533 in file "teris_16f886.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  lable           2    5[COMMON] PTR const unsigned char 
  2265 ;;		 -> STR_28(12), ROM(8192), 
  2266 ;;  matrix          1    7[COMMON] PTR const struct .
  2267 ;;		 -> g_matrix88(64), 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  col             1   12[COMMON] unsigned char 
  2270 ;;  row             1   11[COMMON] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2280 ;;      Params:         3       0       0       0       0
  2281 ;;      Locals:         2       0       0       0       0
  2282 ;;      Temps:          3       0       0       0       0
  2283 ;;      Totals:         8       0       0       0       0
  2284 ;;Total ram usage:        8 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    3
  2287 ;; This function calls:
  2288 ;;		_debug_line
  2289 ;;		_debug_str
  2290 ;; This function is called by:
  2291 ;;		_main
  2292 ;;		_printf_debug_Screen
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _printf_debug_MATRIX88
  2298  01C4                     _printf_debug_MATRIX88:	
  2299                           
  2300                           ;teris_16f886.c: 535: if(lable != (0))
  2301                           
  2302                           ;incstack = 0
  2303                           ; Regs used in _printf_debug_MATRIX88: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2304  01C4  0875               	movf	printf_debug_MATRIX88@lable,w
  2305  01C5  0476               	iorwf	printf_debug_MATRIX88@lable+1,w
  2306  01C6  1903               	btfsc	3,2
  2307  01C7  29DA               	goto	l235
  2308                           
  2309                           ;teris_16f886.c: 536: {
  2310                           ;teris_16f886.c: 537: debug_str(lable);
  2311  01C8  0875               	movf	printf_debug_MATRIX88@lable,w
  2312  01C9  00F3               	movwf	debug_str@str
  2313  01CA  0876               	movf	printf_debug_MATRIX88@lable+1,w
  2314  01CB  00F4               	movwf	debug_str@str+1
  2315  01CC  120A  158A  236F  120A  118A  	fcall	_debug_str
  2316                           
  2317                           ;teris_16f886.c: 538: debug_line(":");
  2318  01D1  3080               	movlw	low (STR_5| (0+32768))
  2319  01D2  00F3               	movwf	debug_line@str
  2320  01D3  308A               	movlw	high (STR_5| (0+32768))
  2321  01D4  00F4               	movwf	debug_line@str+1
  2322  01D5  120A  158A  23AA  120A  118A  	fcall	_debug_line
  2323  01DA                     l235:	
  2324                           
  2325                           ;teris_16f886.c: 539: }
  2326                           ;teris_16f886.c: 540: debug_line("<<<<<<<<<<<<<<<<<<<<MATRIX88");
  2327  01DA  30CD               	movlw	low (STR_22| (0+32768))
  2328  01DB  00F3               	movwf	debug_line@str
  2329  01DC  3089               	movlw	high (STR_22| (0+32768))
  2330  01DD  00F4               	movwf	debug_line@str+1
  2331  01DE  120A  158A  23AA  120A  118A  	fcall	_debug_line
  2332                           
  2333                           ;teris_16f886.c: 541: for(uint8_t row = 0; row < 8; row++)
  2334  01E3  01FB               	clrf	printf_debug_MATRIX88@row
  2335  01E4  3008               	movlw	8
  2336  01E5  027B               	subwf	printf_debug_MATRIX88@row,w
  2337  01E6  1803               	btfsc	3,0
  2338  01E7  2A28               	goto	l3212
  2339  01E8                     l3190:	
  2340                           
  2341                           ;teris_16f886.c: 542: {
  2342                           ;teris_16f886.c: 543: for(uint8_t col = 0; col < 8; col++)
  2343  01E8  01FC               	clrf	printf_debug_MATRIX88@col
  2344  01E9  3008               	movlw	8
  2345  01EA  027C               	subwf	printf_debug_MATRIX88@col,w
  2346  01EB  1803               	btfsc	3,0
  2347  01EC  2A17               	goto	l3206
  2348  01ED                     l3196:	
  2349                           
  2350                           ;teris_16f886.c: 544: {
  2351                           ;teris_16f886.c: 545: if(matrix->data[row][col] == 1)
  2352  01ED  087B               	movf	printf_debug_MATRIX88@row,w
  2353  01EE  00F8               	movwf	??_printf_debug_MATRIX88
  2354  01EF  3002               	movlw	2
  2355  01F0                     u4025:	
  2356  01F0  1003               	clrc
  2357  01F1  0DF8               	rlf	??_printf_debug_MATRIX88,f
  2358  01F2  3EFF               	addlw	-1
  2359  01F3  1D03               	skipz
  2360  01F4  29F0               	goto	u4025
  2361  01F5  1003               	clrc
  2362  01F6  0D78               	rlf	??_printf_debug_MATRIX88,w
  2363  01F7  0777               	addwf	printf_debug_MATRIX88@matrix,w
  2364  01F8  00F9               	movwf	??_printf_debug_MATRIX88+1
  2365  01F9  087C               	movf	printf_debug_MATRIX88@col,w
  2366  01FA  0779               	addwf	??_printf_debug_MATRIX88+1,w
  2367  01FB  00FA               	movwf	??_printf_debug_MATRIX88+2
  2368  01FC  087A               	movf	??_printf_debug_MATRIX88+2,w
  2369  01FD  0084               	movwf	4
  2370  01FE  1783               	bsf	3,7	;select IRP bank2
  2371  01FF  0300               	decf	0,w
  2372  0200  1D03               	btfss	3,2
  2373  0201  2A06               	goto	l3200
  2374                           
  2375                           ;teris_16f886.c: 546: {
  2376                           ;teris_16f886.c: 547: debug_str("*");
  2377  0202  307E               	movlw	low (STR_7| (0+32768))
  2378  0203  00F3               	movwf	debug_str@str
  2379  0204  308A               	movlw	high (STR_7| (0+32768))
  2380  0205  2A09               	goto	L1
  2381  0206                     l3200:	
  2382                           ;teris_16f886.c: 548: }
  2383                           
  2384                           
  2385                           ;teris_16f886.c: 549: else
  2386                           ;teris_16f886.c: 550: {
  2387                           ;teris_16f886.c: 551: debug_str("_");
  2388  0206  3082               	movlw	low (STR_8| (0+32768))
  2389  0207  00F3               	movwf	debug_str@str
  2390  0208  308A               	movlw	high (STR_8| (0+32768))
  2391  0209                     L1:	
  2392  0209  00F4               	movwf	debug_str@str+1
  2393  020A  120A  158A  236F  120A  118A  	fcall	_debug_str
  2394  020F  3001               	movlw	1
  2395  0210  00F8               	movwf	??_printf_debug_MATRIX88
  2396  0211  0878               	movf	??_printf_debug_MATRIX88,w
  2397  0212  07FC               	addwf	printf_debug_MATRIX88@col,f
  2398  0213  3008               	movlw	8
  2399  0214  027C               	subwf	printf_debug_MATRIX88@col,w
  2400  0215  1C03               	skipc
  2401  0216  29ED               	goto	l3196
  2402  0217                     l3206:	
  2403                           
  2404                           ;teris_16f886.c: 552: }
  2405                           ;teris_16f886.c: 553: }
  2406                           ;teris_16f886.c: 554: debug_line("");
  2407  0217  307D               	movlw	low ((STR_1+2)| (0+32768))
  2408  0218  00F3               	movwf	debug_line@str
  2409  0219  308A               	movlw	high ((STR_1+2)| (0+32768))
  2410  021A  00F4               	movwf	debug_line@str+1
  2411  021B  120A  158A  23AA  120A  118A  	fcall	_debug_line
  2412  0220  3001               	movlw	1
  2413  0221  00F8               	movwf	??_printf_debug_MATRIX88
  2414  0222  0878               	movf	??_printf_debug_MATRIX88,w
  2415  0223  07FB               	addwf	printf_debug_MATRIX88@row,f
  2416  0224  3008               	movlw	8
  2417  0225  027B               	subwf	printf_debug_MATRIX88@row,w
  2418  0226  1C03               	skipc
  2419  0227  29E8               	goto	l3190
  2420  0228                     l3212:	
  2421                           
  2422                           ;teris_16f886.c: 555: }
  2423                           ;teris_16f886.c: 556: debug_line(">>>>>>>>>>>>>>>>>>>>");
  2424  0228  301A               	movlw	low (STR_10| (0+32768))
  2425  0229  00F3               	movwf	debug_line@str
  2426  022A  308A               	movlw	high (STR_10| (0+32768))
  2427  022B  00F4               	movwf	debug_line@str+1
  2428  022C  120A  158A  23AA   	fcall	_debug_line
  2429  022F  0008               	return
  2430  0230                     __end_of_printf_debug_MATRIX88:	
  2431                           
  2432                           	psect	text3
  2433  0B6F                     __ptext3:	
  2434 ;; *************** function _debug_str *****************
  2435 ;; Defined at:
  2436 ;;		line 287 in file "teris_16f886.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  str             2    3[COMMON] PTR const unsigned char 
  2439 ;;		 -> STR_28(12), STR_24(2), STR_23(2), STR_18(2), 
  2440 ;;		 -> STR_17(2), STR_8(2), STR_7(2), ROM(8192), 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2452 ;;      Params:         2       0       0       0       0
  2453 ;;      Locals:         0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0
  2455 ;;      Totals:         2       0       0       0       0
  2456 ;;Total ram usage:        2 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    2
  2459 ;; This function calls:
  2460 ;;		_USARTWriteString
  2461 ;; This function is called by:
  2462 ;;		_printf_debug_MATRIX88
  2463 ;;		_printf_debug_MATRIX44
  2464 ;;		_printf_debug_cur_MATRIX44
  2465 ;;		_printf_debug_MATRIX7219
  2466 ;;		_printf_debug_Screen
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function _debug_str
  2472  0B6F                     _debug_str:	
  2473                           
  2474                           ;teris_16f886.c: 293: USARTWriteString(str);
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in _debug_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2478  0B6F  0873               	movf	debug_str@str,w
  2479  0B70  00F1               	movwf	USARTWriteString@str
  2480  0B71  0874               	movf	debug_str@str+1,w
  2481  0B72  00F2               	movwf	USARTWriteString@str+1
  2482  0B73  120A  158A  24BD   	fcall	_USARTWriteString
  2483  0B76  0008               	return
  2484  0B77                     __end_of_debug_str:	
  2485                           
  2486                           	psect	text4
  2487  0BAA                     __ptext4:	
  2488 ;; *************** function _debug_line *****************
  2489 ;; Defined at:
  2490 ;;		line 297 in file "teris_16f886.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  str             2    3[COMMON] PTR const unsigned char 
  2493 ;;		 -> STR_27(2), STR_26(21), STR_25(1), STR_22(29), 
  2494 ;;		 -> STR_21(2), STR_20(21), STR_19(1), STR_16(21), 
  2495 ;;		 -> STR_15(2), STR_12(20), STR_11(2), STR_10(21), 
  2496 ;;		 -> STR_9(1), STR_6(29), STR_5(2), 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         2       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0
  2511 ;;      Totals:         2       0       0       0       0
  2512 ;;Total ram usage:        2 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    2
  2515 ;; This function calls:
  2516 ;;		_USARTWriteString
  2517 ;; This function is called by:
  2518 ;;		_printf_debug_MATRIX88
  2519 ;;		_printf_debug_MATRIX44
  2520 ;;		_printf_debug_cur_MATRIX44
  2521 ;;		_printf_debug_all_MATRIX44
  2522 ;;		_printf_debug_MATRIX7219
  2523 ;;		_printf_debug_Screen
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           
  2528                           ;psect for function _debug_line
  2529  0BAA                     _debug_line:	
  2530                           
  2531                           ;teris_16f886.c: 304: USARTWriteString(str);
  2532                           
  2533                           ;incstack = 0
  2534                           ; Regs used in _debug_line: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2535  0BAA  0873               	movf	debug_line@str,w
  2536  0BAB  00F1               	movwf	USARTWriteString@str
  2537  0BAC  0874               	movf	debug_line@str+1,w
  2538  0BAD  00F2               	movwf	USARTWriteString@str+1
  2539  0BAE  120A  158A  24BD  120A  158A  	fcall	_USARTWriteString
  2540                           
  2541                           ;teris_16f886.c: 305: USARTWriteString("\r\n");
  2542  0BB3  307B               	movlw	low (STR_1| (0+32768))
  2543  0BB4  00F1               	movwf	USARTWriteString@str
  2544  0BB5  308A               	movlw	high (STR_1| (0+32768))
  2545  0BB6  00F2               	movwf	USARTWriteString@str+1
  2546  0BB7  120A  158A  24BD   	fcall	_USARTWriteString
  2547  0BBA  0008               	return
  2548  0BBB                     __end_of_debug_line:	
  2549                           
  2550                           	psect	text5
  2551  0CBD                     __ptext5:	
  2552 ;; *************** function _USARTWriteString *****************
  2553 ;; Defined at:
  2554 ;;		line 76 in file "usart_pic16.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  str             2    1[COMMON] PTR const unsigned char 
  2557 ;;		 -> STR_28(12), STR_27(2), STR_26(21), STR_25(1), 
  2558 ;;		 -> STR_24(2), STR_23(2), STR_22(29), STR_21(2), 
  2559 ;;		 -> STR_20(21), STR_19(1), STR_18(2), STR_17(2), 
  2560 ;;		 -> STR_16(21), STR_15(2), STR_12(20), STR_11(2), 
  2561 ;;		 -> STR_10(21), STR_9(1), STR_8(2), STR_7(2), 
  2562 ;;		 -> STR_6(29), STR_5(2), ROM(8192), STR_4(3), 
  2563 ;;		 -> STR_3(3), STR_2(3), g_debug(32), STR_1(3), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2575 ;;      Params:         2       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0
  2578 ;;      Totals:         2       0       0       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    1
  2582 ;; This function calls:
  2583 ;;		_USARTWriteChar
  2584 ;; This function is called by:
  2585 ;;		_debug_str
  2586 ;;		_debug_line
  2587 ;;		_USARTWriteLine
  2588 ;;		_debug_int1
  2589 ;;		_debug_int2
  2590 ;;		_debug_int3
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _USARTWriteString
  2596  0CBD                     _USARTWriteString:	
  2597  0CBD                     l2514:	
  2598                           ;usart_pic16.c: 77: while (*str != '\0') {
  2599                           
  2600                           ;incstack = 0
  2601                           ; Regs used in _USARTWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2602                           
  2603  0CBD  0872               	movf	USARTWriteString@str+1,w
  2604  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0CC0  00FF               	movwf	127
  2607  0CC1  0871               	movf	USARTWriteString@str,w
  2608  0CC2  0084               	movwf	4
  2609  0CC3  120A  158A  2000  120A  158A  	fcall	stringtab
  2610  0CC8  3A00               	xorlw	0
  2611  0CC9  1903               	btfsc	3,2
  2612  0CCA  0008               	return
  2613                           
  2614                           ;usart_pic16.c: 78: USARTWriteChar(*str);
  2615  0CCB  0872               	movf	USARTWriteString@str+1,w
  2616  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0CCE  00FF               	movwf	127
  2619  0CCF  0871               	movf	USARTWriteString@str,w
  2620  0CD0  0084               	movwf	4
  2621  0CD1  120A  158A  2000  120A  158A  	fcall	stringtab
  2622  0CD6  120A  158A  2367  120A  158A  	fcall	_USARTWriteChar
  2623                           
  2624                           ;usart_pic16.c: 79: str++;
  2625  0CDB  3001               	movlw	1
  2626  0CDC  07F1               	addwf	USARTWriteString@str,f
  2627  0CDD  1803               	skipnc
  2628  0CDE  0AF2               	incf	USARTWriteString@str+1,f
  2629  0CDF  3000               	movlw	0
  2630  0CE0  07F2               	addwf	USARTWriteString@str+1,f
  2631  0CE1  2CBD               	goto	l2514
  2632  0CE2                     __end_of_USARTWriteString:	
  2633                           
  2634                           	psect	text6
  2635  0B67                     __ptext6:	
  2636 ;; *************** function _USARTWriteChar *****************
  2637 ;; Defined at:
  2638 ;;		line 70 in file "usart_pic16.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  ch              1    wreg     unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  ch              1    0[COMMON] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2652 ;;      Params:         0       0       0       0       0
  2653 ;;      Locals:         1       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0
  2655 ;;      Totals:         1       0       0       0       0
  2656 ;;Total ram usage:        1 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_USARTWriteString
  2662 ;;		_USARTWriteLine
  2663 ;;		_USARTWriteInt
  2664 ;;		_USARTGotoNewLine
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _USARTWriteChar
  2670  0B67                     _USARTWriteChar:	
  2671                           
  2672                           ;incstack = 0
  2673                           ; Regs used in _USARTWriteChar: [wreg]
  2674                           ;USARTWriteChar@ch stored from wreg
  2675  0B67  00F0               	movwf	USARTWriteChar@ch
  2676  0B68                     l36:	
  2677                           ;usart_pic16.c: 71: while (!PIR1bits.TXIF);
  2678                           
  2679  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0B6A  1E0C               	btfss	12,4	;volatile
  2682  0B6B  2B68               	goto	l36
  2683                           
  2684                           ;usart_pic16.c: 73: TXREG = ch;
  2685  0B6C  0870               	movf	USARTWriteChar@ch,w
  2686  0B6D  0099               	movwf	25	;volatile
  2687  0B6E  0008               	return
  2688  0B6F                     __end_of_USARTWriteChar:	
  2689                           
  2690                           	psect	text7
  2691  0F5F                     __ptext7:	
  2692 ;; *************** function _merge *****************
  2693 ;; Defined at:
  2694 ;;		line 833 in file "teris_16f886.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;  x               1    wreg     char 
  2697 ;;  y               1    0[COMMON] char 
  2698 ;;  matrix44        2    1[COMMON] PTR const struct .
  2699 ;;		 -> NULL(0), g_matrix44(384), 
  2700 ;;  matrix88        1    3[COMMON] PTR struct .
  2701 ;;		 -> g_matrix88(64), 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  x               1    8[COMMON] char 
  2704 ;;  col             1   10[COMMON] unsigned char 
  2705 ;;  row             1    9[COMMON] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         4       0       0       0       0
  2716 ;;      Locals:         3       0       0       0       0
  2717 ;;      Temps:          4       0       0       0       0
  2718 ;;      Totals:        11       0       0       0       0
  2719 ;;Total ram usage:       11 bytes
  2720 ;; Hardware stack levels used:    2
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           
  2729                           ;psect for function _merge
  2730  0F5F                     _merge:	
  2731                           
  2732                           ;incstack = 0
  2733                           ; Regs used in _merge: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2734                           ;merge@x stored from wreg
  2735  0F5F  00F8               	movwf	merge@x
  2736                           
  2737                           ;teris_16f886.c: 835: for(uint8_t row = 0; row < 4; row++)
  2738  0F60  01F9               	clrf	merge@row
  2739  0F61                     L2:	
  2740  0F61  3004               	movlw	4
  2741  0F62  0279               	subwf	merge@row,w
  2742  0F63  1803               	btfsc	3,0
  2743  0F64  0008               	return
  2744                           
  2745                           ;teris_16f886.c: 836: {
  2746                           ;teris_16f886.c: 837: for(uint8_t col = 0; col < 4; col++)
  2747  0F65  01FA               	clrf	merge@col
  2748  0F66  3004               	movlw	4
  2749  0F67  027A               	subwf	merge@col,w
  2750  0F68  1803               	btfsc	3,0
  2751  0F69  2FAA               	goto	l3298
  2752  0F6A                     l3290:	
  2753                           
  2754                           ;teris_16f886.c: 838: {
  2755                           ;teris_16f886.c: 839: if(matrix44->data[row][col] == 1)
  2756  0F6A  0879               	movf	merge@row,w
  2757  0F6B  00F4               	movwf	??_merge
  2758  0F6C  01F5               	clrf	??_merge+1
  2759  0F6D  1003               	clrc
  2760  0F6E  0DF4               	rlf	??_merge,f
  2761  0F6F  0DF5               	rlf	??_merge+1,f
  2762  0F70  1003               	clrc
  2763  0F71  0DF4               	rlf	??_merge,f
  2764  0F72  0DF5               	rlf	??_merge+1,f
  2765  0F73  0874               	movf	??_merge,w
  2766  0F74  0771               	addwf	merge@matrix44,w
  2767  0F75  00F6               	movwf	??_merge+2
  2768  0F76  0875               	movf	??_merge+1,w
  2769  0F77  1803               	skipnc
  2770  0F78  0A75               	incf	??_merge+1,w
  2771  0F79  0772               	addwf	merge@matrix44+1,w
  2772  0F7A  00F7               	movwf	??_merge+3
  2773  0F7B  087A               	movf	merge@col,w
  2774  0F7C  0776               	addwf	??_merge+2,w
  2775  0F7D  0084               	movwf	4
  2776  0F7E  0877               	movf	??_merge+3,w
  2777  0F7F  1803               	skipnc
  2778  0F80  0A77               	incf	??_merge+3,w
  2779  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  2780  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  2781  0F83  00FF               	movwf	127
  2782  0F84  120A  158A  2000  120A  158A  	fcall	stringtab
  2783  0F89  3A01               	xorlw	1
  2784  0F8A  1D03               	skipz
  2785  0F8B  2FA2               	goto	l3294
  2786                           
  2787                           ;teris_16f886.c: 840: {
  2788                           ;teris_16f886.c: 841: matrix88->data[y + row][x + col] = 1;
  2789  0F8C  087A               	movf	merge@col,w
  2790  0F8D  0778               	addwf	merge@x,w
  2791  0F8E  0773               	addwf	merge@matrix88,w
  2792  0F8F  00F4               	movwf	??_merge
  2793  0F90  0879               	movf	merge@row,w
  2794  0F91  0770               	addwf	merge@y,w
  2795  0F92  00F5               	movwf	??_merge+1
  2796  0F93  3002               	movlw	2
  2797  0F94                     u4245:	
  2798  0F94  1003               	clrc
  2799  0F95  0DF5               	rlf	??_merge+1,f
  2800  0F96  3EFF               	addlw	-1
  2801  0F97  1D03               	skipz
  2802  0F98  2F94               	goto	u4245
  2803  0F99  1003               	clrc
  2804  0F9A  0D75               	rlf	??_merge+1,w
  2805  0F9B  0774               	addwf	??_merge,w
  2806  0F9C  00F6               	movwf	??_merge+2
  2807  0F9D  0876               	movf	??_merge+2,w
  2808  0F9E  0084               	movwf	4
  2809  0F9F  1783               	bsf	3,7	;select IRP bank2
  2810  0FA0  0180               	clrf	0
  2811  0FA1  0A80               	incf	0,f
  2812  0FA2                     l3294:	
  2813  0FA2  3001               	movlw	1
  2814  0FA3  00F4               	movwf	??_merge
  2815  0FA4  0874               	movf	??_merge,w
  2816  0FA5  07FA               	addwf	merge@col,f
  2817  0FA6  3004               	movlw	4
  2818  0FA7  027A               	subwf	merge@col,w
  2819  0FA8  1C03               	skipc
  2820  0FA9  2F6A               	goto	l3290
  2821  0FAA                     l3298:	
  2822  0FAA  3001               	movlw	1
  2823  0FAB  00F4               	movwf	??_merge
  2824  0FAC  0874               	movf	??_merge,w
  2825  0FAD  07F9               	addwf	merge@row,f
  2826  0FAE  2F61               	goto	L2
  2827  0FAF                     __end_of_merge:	
  2828                           
  2829                           	psect	text8
  2830  0FAF                     __ptext8:	
  2831 ;; *************** function _max7219_init1 *****************
  2832 ;; Defined at:
  2833 ;;		line 436 in file "teris_16f886.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;		None
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       0       0       0       0
  2848 ;;      Locals:         0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0
  2850 ;;      Totals:         0       0       0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    1
  2854 ;; This function calls:
  2855 ;;		_SPI1_write
  2856 ;; This function is called by:
  2857 ;;		_main
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           
  2862                           ;psect for function _max7219_init1
  2863  0FAF                     _max7219_init1:	
  2864                           
  2865                           ;teris_16f886.c: 438: RA2 = 0;
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in _max7219_init1: [wreg+status,2+status,0+pclath+cstack]
  2869  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0FB1  1105               	bcf	5,2	;volatile
  2872                           
  2873                           ;teris_16f886.c: 439: SPI1_write(0x09);
  2874  0FB2  3009               	movlw	9
  2875  0FB3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2876                           
  2877                           ;teris_16f886.c: 440: SPI1_write(0x00);
  2878  0FB8  3000               	movlw	0
  2879  0FB9  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2880                           
  2881                           ;teris_16f886.c: 441: RA2 = 1;
  2882  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0FC0  1505               	bsf	5,2	;volatile
  2885                           
  2886                           ;teris_16f886.c: 443: RA2 = 0;
  2887  0FC1  1105               	bcf	5,2	;volatile
  2888                           
  2889                           ;teris_16f886.c: 444: SPI1_write(0x0A);
  2890  0FC2  300A               	movlw	10
  2891  0FC3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2892                           
  2893                           ;teris_16f886.c: 445: SPI1_write(0x0F);
  2894  0FC8  300F               	movlw	15
  2895  0FC9  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2896                           
  2897                           ;teris_16f886.c: 446: RA2 = 1;
  2898  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0FD0  1505               	bsf	5,2	;volatile
  2901                           
  2902                           ;teris_16f886.c: 448: RA2 = 0;
  2903  0FD1  1105               	bcf	5,2	;volatile
  2904                           
  2905                           ;teris_16f886.c: 449: SPI1_write(0x0B);
  2906  0FD2  300B               	movlw	11
  2907  0FD3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2908                           
  2909                           ;teris_16f886.c: 450: SPI1_write(0x07);
  2910  0FD8  3007               	movlw	7
  2911  0FD9  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2912                           
  2913                           ;teris_16f886.c: 451: RA2 = 1;
  2914  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0FE0  1505               	bsf	5,2	;volatile
  2917                           
  2918                           ;teris_16f886.c: 453: RA2 = 0;
  2919  0FE1  1105               	bcf	5,2	;volatile
  2920                           
  2921                           ;teris_16f886.c: 454: SPI1_write(0x0C);
  2922  0FE2  300C               	movlw	12
  2923  0FE3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2924                           
  2925                           ;teris_16f886.c: 455: SPI1_write(0x01);
  2926  0FE8  3001               	movlw	1
  2927  0FE9  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2928                           
  2929                           ;teris_16f886.c: 456: RA2 = 1;
  2930  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0FF0  1505               	bsf	5,2	;volatile
  2933                           
  2934                           ;teris_16f886.c: 458: RA2 = 0;
  2935  0FF1  1105               	bcf	5,2	;volatile
  2936                           
  2937                           ;teris_16f886.c: 459: SPI1_write(0x00);
  2938  0FF2  3000               	movlw	0
  2939  0FF3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2940                           
  2941                           ;teris_16f886.c: 460: SPI1_write(0xFF);
  2942  0FF8  30FF               	movlw	255
  2943  0FF9  120A  158A  2556   	fcall	_SPI1_write
  2944                           
  2945                           ;teris_16f886.c: 461: RA2 = 1;
  2946  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0FFE  1505               	bsf	5,2	;volatile
  2949  0FFF  0008               	return
  2950  1000                     __end_of_max7219_init1:	
  2951                           
  2952                           	psect	text9
  2953  0230                     __ptext9:	
  2954 ;; *************** function _hit_land *****************
  2955 ;; Defined at:
  2956 ;;		line 669 in file "teris_16f886.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  x               1    wreg     char 
  2959 ;;  y               1    0[COMMON] char 
  2960 ;;  matrix44        2    1[COMMON] PTR const struct .
  2961 ;;		 -> NULL(0), g_matrix44(384), 
  2962 ;;  matrix88        1    3[COMMON] PTR const struct .
  2963 ;;		 -> g_matrix88(64), 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  x               1    8[COMMON] char 
  2966 ;;  col             1    9[COMMON] char 
  2967 ;;  row             1   10[COMMON] char 
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  1    wreg      unsigned char 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2977 ;;      Params:         4       0       0       0       0
  2978 ;;      Locals:         3       0       0       0       0
  2979 ;;      Temps:          4       0       0       0       0
  2980 ;;      Totals:        11       0       0       0       0
  2981 ;;Total ram usage:       11 bytes
  2982 ;; Hardware stack levels used:    2
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _hit_land
  2992  0230                     _hit_land:	
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in _hit_land: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2996                           ;hit_land@x stored from wreg
  2997  0230  00F8               	movwf	hit_land@x
  2998                           
  2999                           ;teris_16f886.c: 675: for(int8_t row = 4 - 1; row >= 0; row--)
  3000  0231  3003               	movlw	3
  3001  0232  00F4               	movwf	??_hit_land
  3002  0233  0874               	movf	??_hit_land,w
  3003  0234  00FA               	movwf	hit_land@row
  3004  0235  1BFA               	btfsc	hit_land@row,7
  3005  0236  2A9F               	goto	l3250
  3006  0237                     l3222:	
  3007                           
  3008                           ;teris_16f886.c: 676: {
  3009                           ;teris_16f886.c: 677: for(int8_t col = 0; col < 4; col++)
  3010  0237  01F9               	clrf	hit_land@col
  3011  0238  0879               	movf	hit_land@col,w
  3012  0239  3A80               	xorlw	128
  3013  023A  3E7C               	addlw	-132
  3014  023B  1803               	btfsc	3,0
  3015  023C  2A99               	goto	l3246
  3016  023D                     l3228:	
  3017                           
  3018                           ;teris_16f886.c: 678: {
  3019                           ;teris_16f886.c: 679: if(matrix44->data[row][col] == 1)
  3020  023D  087A               	movf	hit_land@row,w
  3021  023E  00F4               	movwf	??_hit_land
  3022  023F  01F5               	clrf	??_hit_land+1
  3023  0240  1003               	clrc
  3024  0241  0DF4               	rlf	??_hit_land,f
  3025  0242  0DF5               	rlf	??_hit_land+1,f
  3026  0243  1003               	clrc
  3027  0244  0DF4               	rlf	??_hit_land,f
  3028  0245  0DF5               	rlf	??_hit_land+1,f
  3029  0246  0874               	movf	??_hit_land,w
  3030  0247  0771               	addwf	hit_land@matrix44,w
  3031  0248  00F6               	movwf	??_hit_land+2
  3032  0249  0875               	movf	??_hit_land+1,w
  3033  024A  1803               	skipnc
  3034  024B  0A75               	incf	??_hit_land+1,w
  3035  024C  0772               	addwf	hit_land@matrix44+1,w
  3036  024D  00F7               	movwf	??_hit_land+3
  3037  024E  0879               	movf	hit_land@col,w
  3038  024F  0776               	addwf	??_hit_land+2,w
  3039  0250  0084               	movwf	4
  3040  0251  0877               	movf	??_hit_land+3,w
  3041  0252  1803               	skipnc
  3042  0253  0A77               	incf	??_hit_land+3,w
  3043  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0256  00FF               	movwf	127
  3046  0257  120A  158A  2000  120A  118A  	fcall	stringtab
  3047  025C  3A01               	xorlw	1
  3048  025D  1D03               	skipz
  3049  025E  2A90               	goto	l3242
  3050                           
  3051                           ;teris_16f886.c: 680: {
  3052                           ;teris_16f886.c: 681: if((y + row) >= (8 - 1))
  3053  025F  0870               	movf	hit_land@y,w
  3054  0260  077A               	addwf	hit_land@row,w
  3055  0261  00F4               	movwf	??_hit_land
  3056  0262  01F5               	clrf	??_hit_land+1
  3057  0263  1803               	skipnc
  3058  0264  0AF5               	incf	??_hit_land+1,f
  3059  0265  1BF0               	btfsc	hit_land@y,7
  3060  0266  03F5               	decf	??_hit_land+1,f
  3061  0267  1BFA               	btfsc	hit_land@row,7
  3062  0268  03F5               	decf	??_hit_land+1,f
  3063  0269  0875               	movf	??_hit_land+1,w
  3064  026A  3A80               	xorlw	128
  3065  026B  00FF               	movwf	127
  3066  026C  3080               	movlw	128
  3067  026D  027F               	subwf	127,w
  3068  026E  1D03               	skipz
  3069  026F  2A72               	goto	u4105
  3070  0270  3007               	movlw	7
  3071  0271  0274               	subwf	??_hit_land,w
  3072  0272                     u4105:	
  3073  0272  1C03               	skipc
  3074  0273  2A76               	goto	l3236
  3075                           
  3076                           ;teris_16f886.c: 682: {
  3077                           ;teris_16f886.c: 686: return 1;
  3078  0274  3001               	movlw	1
  3079  0275  0008               	return
  3080  0276                     l3236:	
  3081                           
  3082                           ;teris_16f886.c: 687: }
  3083                           ;teris_16f886.c: 689: if(matrix88->data[y + row + 1][x + col] == 1)
  3084  0276  0879               	movf	hit_land@col,w
  3085  0277  0778               	addwf	hit_land@x,w
  3086  0278  0773               	addwf	hit_land@matrix88,w
  3087  0279  00F4               	movwf	??_hit_land
  3088  027A  087A               	movf	hit_land@row,w
  3089  027B  0770               	addwf	hit_land@y,w
  3090  027C  00F5               	movwf	??_hit_land+1
  3091  027D  3002               	movlw	2
  3092  027E                     u4115:	
  3093  027E  1003               	clrc
  3094  027F  0DF5               	rlf	??_hit_land+1,f
  3095  0280  3EFF               	addlw	-1
  3096  0281  1D03               	skipz
  3097  0282  2A7E               	goto	u4115
  3098  0283  1003               	clrc
  3099  0284  0D75               	rlf	??_hit_land+1,w
  3100  0285  3E08               	addlw	8
  3101  0286  0774               	addwf	??_hit_land,w
  3102  0287  00F6               	movwf	??_hit_land+2
  3103  0288  0876               	movf	??_hit_land+2,w
  3104  0289  0084               	movwf	4
  3105  028A  1783               	bsf	3,7	;select IRP bank2
  3106  028B  0300               	decf	0,w
  3107  028C  1D03               	btfss	3,2
  3108  028D  2A90               	goto	l3242
  3109                           
  3110                           ;teris_16f886.c: 690: {
  3111                           ;teris_16f886.c: 694: return 1;
  3112  028E  3001               	movlw	1
  3113  028F  0008               	return
  3114  0290                     l3242:	
  3115  0290  3001               	movlw	1
  3116  0291  00F4               	movwf	??_hit_land
  3117  0292  0874               	movf	??_hit_land,w
  3118  0293  07F9               	addwf	hit_land@col,f
  3119  0294  0879               	movf	hit_land@col,w
  3120  0295  3A80               	xorlw	128
  3121  0296  3E7C               	addlw	-132
  3122  0297  1C03               	skipc
  3123  0298  2A3D               	goto	l3228
  3124  0299                     l3246:	
  3125  0299  30FF               	movlw	255
  3126  029A  00F4               	movwf	??_hit_land
  3127  029B  0874               	movf	??_hit_land,w
  3128  029C  07FA               	addwf	hit_land@row,f
  3129  029D  1FFA               	btfss	hit_land@row,7
  3130  029E  2A37               	goto	l3222
  3131  029F                     l3250:	
  3132                           
  3133                           ;teris_16f886.c: 695: }
  3134                           ;teris_16f886.c: 696: }
  3135                           ;teris_16f886.c: 697: }
  3136                           ;teris_16f886.c: 698: }
  3137                           ;teris_16f886.c: 702: return 0;
  3138  029F  3000               	movlw	0
  3139  02A0  0008               	return
  3140  02A1                     __end_of_hit_land:	
  3141                           
  3142                           	psect	text10
  3143  0637                     __ptext10:	
  3144 ;; *************** function _find_best_solution *****************
  3145 ;; Defined at:
  3146 ;;		line 1042 in file "teris_16f886.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  temp_x          1   33[BANK0 ] char 
  3151 ;;  tem_sub_inde    1   28[BANK0 ] unsigned char 
  3152 ;;  temp_risk       2   29[BANK0 ] unsigned int 
  3153 ;;  temp_pre_ris    2   23[BANK0 ] unsigned int 
  3154 ;;  temp_high       1   32[BANK0 ] unsigned char 
  3155 ;;  temp_hole       1   31[BANK0 ] unsigned char 
  3156 ;;  temp_count      1   27[BANK0 ] unsigned char 
  3157 ;;  temp_pre_hig    1   26[BANK0 ] unsigned char 
  3158 ;;  temp_pre_hol    1   25[BANK0 ] unsigned char 
  3159 ;;  temp_pre_cou    1   22[BANK0 ] unsigned char 
  3160 ;;  temp_y          1   21[BANK0 ] char 
  3161 ;;  tem_pre_sub_    1   20[BANK0 ] char 
  3162 ;;  temp_pre_x      1   19[BANK0 ] char 
  3163 ;;  res             1   18[BANK0 ] unsigned char 
  3164 ;;  right_most_i    1   17[BANK0 ] char 
  3165 ;;  left_most_in    1   16[BANK0 ] char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      unsigned char 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3175 ;;      Params:         0       0       0       0       0
  3176 ;;      Locals:         0      18       0       0       0
  3177 ;;      Temps:          0       7       0       0       0
  3178 ;;      Totals:         0      25       0       0       0
  3179 ;;Total ram usage:       25 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    3
  3182 ;; This function calls:
  3183 ;;		___bmul
  3184 ;;		_delete_matrix
  3185 ;;		_evaluate
  3186 ;;		_fall_off
  3187 ;;		_get_high
  3188 ;;		_get_high_after_merge
  3189 ;;		_get_holes_after_merge
  3190 ;;		_is_valid
  3191 ;;		_left_most
  3192 ;;		_merge1
  3193 ;;		_right_most
  3194 ;; This function is called by:
  3195 ;;		_main
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _find_best_solution
  3201  0637                     _find_best_solution:	
  3202                           
  3203                           ;teris_16f886.c: 1048: uint8_t res = 0;
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in _find_best_solution: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3207  0637  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0638  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0639  01B2               	clrf	find_best_solution@res
  3210                           
  3211                           ;teris_16f886.c: 1049: int8_t left_most_index, right_most_index;
  3212                           ;teris_16f886.c: 1051: int8_t temp_pre_x = 0xF, tem_pre_sub_index = 0xF;
  3213  063A  300F               	movlw	15
  3214  063B  00A9               	movwf	??_find_best_solution
  3215  063C  0829               	movf	??_find_best_solution,w
  3216  063D  00B3               	movwf	find_best_solution@temp_pre_x
  3217  063E  300F               	movlw	15
  3218  063F  00A9               	movwf	??_find_best_solution
  3219  0640  0829               	movf	??_find_best_solution,w
  3220  0641  00B4               	movwf	find_best_solution@tem_pre_sub_index
  3221                           
  3222                           ;teris_16f886.c: 1052: uint16_t temp_pre_risk = 0xFFFF;
  3223  0642  30FF               	movlw	255
  3224  0643  00B7               	movwf	find_best_solution@temp_pre_risk
  3225  0644  30FF               	movlw	255
  3226  0645  00B8               	movwf	find_best_solution@temp_pre_risk+1
  3227                           
  3228                           ;teris_16f886.c: 1053: int8_t temp_y;
  3229                           ;teris_16f886.c: 1054: uint16_t temp_risk;
  3230                           ;teris_16f886.c: 1055: uint8_t temp_count, temp_pre_count = 0;
  3231  0646  01B6               	clrf	find_best_solution@temp_pre_count
  3232                           
  3233                           ;teris_16f886.c: 1056: uint8_t temp_high, temp_pre_high = 0xFF;
  3234  0647  30FF               	movlw	255
  3235  0648  00A9               	movwf	??_find_best_solution
  3236  0649  0829               	movf	??_find_best_solution,w
  3237  064A  00BA               	movwf	find_best_solution@temp_pre_high
  3238                           
  3239                           ;teris_16f886.c: 1057: uint8_t temp_hole, temp_pre_hole = 0xFF;
  3240  064B  30FF               	movlw	255
  3241  064C  00A9               	movwf	??_find_best_solution
  3242  064D  0829               	movf	??_find_best_solution,w
  3243  064E  00B9               	movwf	find_best_solution@temp_pre_hole
  3244                           
  3245                           ;teris_16f886.c: 1060: for(uint8_t tem_sub_index = 0; tem_sub_index < g_char_info[g_char
      +                          _info_index].num; tem_sub_index++)
  3246  064F  01BC               	clrf	find_best_solution@tem_sub_index
  3247  0650                     l3382:	
  3248  0650  3003               	movlw	3
  3249  0651  00A9               	movwf	??_find_best_solution
  3250  0652  0829               	movf	??_find_best_solution,w
  3251  0653  00F0               	movwf	___bmul@multiplicand
  3252  0654  085C               	movf	_g_char_info_index,w
  3253  0655  120A  158A  2399  120A  118A  	fcall	___bmul
  3254  065A  3E02               	addlw	2
  3255  065B  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  3256  065C  0084               	movwf	4
  3257  065D  1383               	bcf	3,7	;select IRP bank1
  3258  065E  0800               	movf	0,w
  3259  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0661  023C               	subwf	find_best_solution@tem_sub_index,w
  3262  0662  1803               	btfsc	3,0
  3263  0663  2FA6               	goto	l3384
  3264                           
  3265                           ;teris_16f886.c: 1061: {
  3266                           ;teris_16f886.c: 1062: temp_cur_matrix44 = &g_matrix44[g_char_info[g_char_info_index].st
      +                          art_index + tem_sub_index];
  3267  0664  3003               	movlw	3
  3268  0665  00A9               	movwf	??_find_best_solution
  3269  0666  0829               	movf	??_find_best_solution,w
  3270  0667  00F0               	movwf	___bmul@multiplicand
  3271  0668  085C               	movf	_g_char_info_index,w
  3272  0669  120A  158A  2399  120A  118A  	fcall	___bmul
  3273  066E  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  3274  066F  0084               	movwf	4
  3275  0670  1383               	bcf	3,7	;select IRP bank1
  3276  0671  0800               	movf	0,w
  3277  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0674  073C               	addwf	find_best_solution@tem_sub_index,w
  3280  0675  00AA               	movwf	??_find_best_solution+1
  3281  0676  01AB               	clrf	??_find_best_solution+2
  3282  0677  0DAB               	rlf	??_find_best_solution+2,f
  3283  0678  0EAA               	swapf	??_find_best_solution+1,f
  3284  0679  0EAB               	swapf	??_find_best_solution+2,f
  3285  067A  30F0               	movlw	240
  3286  067B  05AB               	andwf	??_find_best_solution+2,f
  3287  067C  082A               	movf	??_find_best_solution+1,w
  3288  067D  390F               	andlw	15
  3289  067E  04AB               	iorwf	??_find_best_solution+2,f
  3290  067F  30F0               	movlw	240
  3291  0680  05AA               	andwf	??_find_best_solution+1,f
  3292  0681  3030               	movlw	low (_g_matrix44| (0+32768))
  3293  0682  00AC               	movwf	??_find_best_solution+3
  3294  0683  3088               	movlw	high (_g_matrix44| (0+32768))
  3295  0684  00AD               	movwf	??_find_best_solution+4
  3296  0685  082A               	movf	??_find_best_solution+1,w
  3297  0686  072C               	addwf	??_find_best_solution+3,w
  3298  0687  00AE               	movwf	??_find_best_solution+5
  3299  0688  082B               	movf	??_find_best_solution+2,w
  3300  0689  1803               	skipnc
  3301  068A  0A2B               	incf	??_find_best_solution+2,w
  3302  068B  072D               	addwf	??_find_best_solution+4,w
  3303  068C  00AF               	movwf	??_find_best_solution+6
  3304  068D  082E               	movf	??_find_best_solution+5,w
  3305  068E  00D9               	movwf	_temp_cur_matrix44
  3306  068F  082F               	movf	??_find_best_solution+6,w
  3307  0690  00DA               	movwf	_temp_cur_matrix44+1
  3308                           
  3309                           ;teris_16f886.c: 1063: left_most_index = left_most(cur_x, temp_cur_matrix44, &g_matrix88
      +                          );
  3310  0691  0859               	movf	_temp_cur_matrix44,w
  3311  0692  00FB               	movwf	left_most@matrix44
  3312  0693  085A               	movf	_temp_cur_matrix44+1,w
  3313  0694  00FC               	movwf	left_most@matrix44+1
  3314  0695  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3315  0696  00A9               	movwf	??_find_best_solution
  3316  0697  0829               	movf	??_find_best_solution,w
  3317  0698  00FD               	movwf	left_most@matrix88
  3318  0699  0861               	movf	_cur_x,w
  3319  069A  120A  158A  245B  120A  118A  	fcall	_left_most
  3320  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3321  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3322  06A1  00AA               	movwf	??_find_best_solution+1
  3323  06A2  082A               	movf	??_find_best_solution+1,w
  3324  06A3  00B0               	movwf	find_best_solution@left_most_index
  3325                           
  3326                           ;teris_16f886.c: 1064: right_most_index = right_most(cur_x, temp_cur_matrix44, &g_matrix
      +                          88);
  3327  06A4  0859               	movf	_temp_cur_matrix44,w
  3328  06A5  00FA               	movwf	right_most@matrix44
  3329  06A6  085A               	movf	_temp_cur_matrix44+1,w
  3330  06A7  00FB               	movwf	right_most@matrix44+1
  3331  06A8  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3332  06A9  00A9               	movwf	??_find_best_solution
  3333  06AA  0829               	movf	??_find_best_solution,w
  3334  06AB  00FC               	movwf	right_most@matrix88
  3335  06AC  0861               	movf	_cur_x,w
  3336  06AD  120A  158A  247B  120A  118A  	fcall	_right_most
  3337  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3338  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  3339  06B4  00AA               	movwf	??_find_best_solution+1
  3340  06B5  082A               	movf	??_find_best_solution+1,w
  3341  06B6  00B1               	movwf	find_best_solution@right_most_index
  3342                           
  3343                           ;teris_16f886.c: 1066: for(int8_t temp_x = left_most_index; temp_x <= right_most_index; 
      +                          temp_x++)
  3344  06B7  0830               	movf	find_best_solution@left_most_index,w
  3345  06B8  00A9               	movwf	??_find_best_solution
  3346  06B9  0829               	movf	??_find_best_solution,w
  3347  06BA  00C1               	movwf	find_best_solution@temp_x
  3348  06BB                     l3378:	
  3349  06BB  0831               	movf	find_best_solution@right_most_index,w
  3350  06BC  3A80               	xorlw	128
  3351  06BD  00A9               	movwf	??_find_best_solution
  3352  06BE  0841               	movf	find_best_solution@temp_x,w
  3353  06BF  3A80               	xorlw	128
  3354  06C0  02A9               	subwf	??_find_best_solution,f
  3355  06C1  1C03               	btfss	3,0
  3356  06C2  2FA1               	goto	l3380
  3357                           
  3358                           ;teris_16f886.c: 1067: {
  3359                           ;teris_16f886.c: 1068: temp_y = fall_off(temp_x, cur_y, temp_cur_matrix44, &g_matrix88);
  3360  06C3  085B               	movf	_cur_y,w
  3361  06C4  00A9               	movwf	??_find_best_solution
  3362  06C5  0829               	movf	??_find_best_solution,w
  3363  06C6  00F0               	movwf	fall_off@y
  3364  06C7  0859               	movf	_temp_cur_matrix44,w
  3365  06C8  00F1               	movwf	fall_off@matrix44
  3366  06C9  085A               	movf	_temp_cur_matrix44+1,w
  3367  06CA  00F2               	movwf	fall_off@matrix44+1
  3368  06CB  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3369  06CC  00AA               	movwf	??_find_best_solution+1
  3370  06CD  082A               	movf	??_find_best_solution+1,w
  3371  06CE  00F3               	movwf	fall_off@matrix88
  3372  06CF  0841               	movf	find_best_solution@temp_x,w
  3373  06D0  120A  118A  2313  120A  118A  	fcall	_fall_off
  3374  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  3375  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  3376  06D7  00AB               	movwf	??_find_best_solution+2
  3377  06D8  082B               	movf	??_find_best_solution+2,w
  3378  06D9  00B5               	movwf	find_best_solution@temp_y
  3379                           
  3380                           ;teris_16f886.c: 1075: if(is_valid(temp_x, temp_y, temp_cur_matrix44, &g_matrix88) == 0)
  3381  06DA  0835               	movf	find_best_solution@temp_y,w
  3382  06DB  00A9               	movwf	??_find_best_solution
  3383  06DC  0829               	movf	??_find_best_solution,w
  3384  06DD  00F0               	movwf	is_valid@y
  3385  06DE  0859               	movf	_temp_cur_matrix44,w
  3386  06DF  00F1               	movwf	is_valid@matrix44
  3387  06E0  085A               	movf	_temp_cur_matrix44+1,w
  3388  06E1  00F2               	movwf	is_valid@matrix44+1
  3389  06E2  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3390  06E3  00AA               	movwf	??_find_best_solution+1
  3391  06E4  082A               	movf	??_find_best_solution+1,w
  3392  06E5  00F3               	movwf	is_valid@matrix88
  3393  06E6  0841               	movf	find_best_solution@temp_x,w
  3394  06E7  120A  118A  2387  120A  118A  	fcall	_is_valid
  3395  06EC  3A00               	xorlw	0
  3396  06ED  1903               	btfsc	3,2
  3397  06EE  2F9A               	goto	l3376
  3398                           
  3399                           ;teris_16f886.c: 1078: }
  3400                           ;teris_16f886.c: 1079: res = 1;
  3401                           
  3402                           ;teris_16f886.c: 1076: {
  3403                           ;teris_16f886.c: 1077: continue;
  3404  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3405  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3406  06F1  01B2               	clrf	find_best_solution@res
  3407  06F2  0AB2               	incf	find_best_solution@res,f
  3408                           
  3409                           ;teris_16f886.c: 1080: merge1(temp_x, temp_y, temp_cur_matrix44, &g_matrix88, &temp_matr
      +                          ix88);
  3410  06F3  0835               	movf	find_best_solution@temp_y,w
  3411  06F4  00A9               	movwf	??_find_best_solution
  3412  06F5  0829               	movf	??_find_best_solution,w
  3413  06F6  00F7               	movwf	merge1@y
  3414  06F7  0859               	movf	_temp_cur_matrix44,w
  3415  06F8  00F8               	movwf	merge1@matrix44
  3416  06F9  085A               	movf	_temp_cur_matrix44+1,w
  3417  06FA  00F9               	movwf	merge1@matrix44+1
  3418  06FB  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3419  06FC  00AA               	movwf	??_find_best_solution+1
  3420  06FD  082A               	movf	??_find_best_solution+1,w
  3421  06FE  00FA               	movwf	merge1@matrix88_in
  3422  06FF  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3423  0700  00AB               	movwf	??_find_best_solution+2
  3424  0701  082B               	movf	??_find_best_solution+2,w
  3425  0702  00FB               	movwf	merge1@matrix88_out
  3426  0703  0841               	movf	find_best_solution@temp_x,w
  3427  0704  120A  118A  20FA  120A  118A  	fcall	_merge1
  3428                           
  3429                           ;teris_16f886.c: 1081: temp_count = delete_matrix(&temp_matrix88);
  3430  0709  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3431  070A  120A  158A  2580  120A  118A  	fcall	_delete_matrix
  3432  070F  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0710  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0711  00A9               	movwf	??_find_best_solution
  3435  0712  0829               	movf	??_find_best_solution,w
  3436  0713  00BB               	movwf	find_best_solution@temp_count
  3437                           
  3438                           ;teris_16f886.c: 1082: temp_risk = evaluate(&temp_matrix88);
  3439  0714  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3440  0715  120A  118A  22A1  120A  118A  	fcall	_evaluate
  3441  071A  0871               	movf	?_evaluate+1,w
  3442  071B  1283               	bcf	3,5	;RP0=0, select bank0
  3443  071C  1303               	bcf	3,6	;RP1=0, select bank0
  3444  071D  00BE               	movwf	find_best_solution@temp_risk+1
  3445  071E  0870               	movf	?_evaluate,w
  3446  071F  00BD               	movwf	find_best_solution@temp_risk
  3447                           
  3448                           ;teris_16f886.c: 1083: temp_high = get_high_after_merge(temp_y, temp_cur_matrix44);
  3449  0720  0859               	movf	_temp_cur_matrix44,w
  3450  0721  00F0               	movwf	get_high_after_merge@matrix
  3451  0722  085A               	movf	_temp_cur_matrix44+1,w
  3452  0723  00F1               	movwf	get_high_after_merge@matrix+1
  3453  0724  0835               	movf	find_best_solution@temp_y,w
  3454  0725  120A  158A  25F2  120A  118A  	fcall	_get_high_after_merge
  3455  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3456  072B  1303               	bcf	3,6	;RP1=0, select bank0
  3457  072C  00A9               	movwf	??_find_best_solution
  3458  072D  0829               	movf	??_find_best_solution,w
  3459  072E  00C0               	movwf	find_best_solution@temp_high
  3460                           
  3461                           ;teris_16f886.c: 1084: temp_hole = get_holes_after_merge(&temp_matrix88);
  3462  072F  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3463  0730  120A  118A  241A  120A  118A  	fcall	_get_holes_after_merge
  3464  0735  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0736  1303               	bcf	3,6	;RP1=0, select bank0
  3466  0737  00A9               	movwf	??_find_best_solution
  3467  0738  0829               	movf	??_find_best_solution,w
  3468  0739  00BF               	movwf	find_best_solution@temp_hole
  3469                           
  3470                           ;teris_16f886.c: 1091: if(temp_count > temp_pre_count)
  3471  073A  083B               	movf	find_best_solution@temp_count,w
  3472  073B  0236               	subwf	find_best_solution@temp_pre_count,w
  3473  073C  1C03               	btfss	3,0
  3474  073D  2F82               	goto	l3374
  3475                           
  3476                           ;teris_16f886.c: 1103: else if(temp_count == temp_pre_count)
  3477                           
  3478                           ;teris_16f886.c: 1102: }
  3479                           
  3480                           ;teris_16f886.c: 1101: temp_pre_x = temp_x;
  3481                           
  3482                           ;teris_16f886.c: 1100: tem_pre_sub_index = tem_sub_index;
  3483                           
  3484                           ;teris_16f886.c: 1099: temp_pre_hole = temp_hole;
  3485                           
  3486                           ;teris_16f886.c: 1098: temp_pre_high = temp_high;
  3487                           
  3488                           ;teris_16f886.c: 1097: temp_pre_risk = temp_risk;
  3489                           
  3490                           ;teris_16f886.c: 1092: {
  3491                           ;teris_16f886.c: 1096: temp_pre_count = temp_count;
  3492  073E  083B               	movf	find_best_solution@temp_count,w
  3493  073F  0636               	xorwf	find_best_solution@temp_pre_count,w
  3494  0740  1D03               	skipz
  3495  0741  2F9A               	goto	l3376
  3496                           
  3497                           ;teris_16f886.c: 1104: {
  3498                           ;teris_16f886.c: 1105: if(get_high(&g_matrix88) <= 8/2 + 1)
  3499  0742  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3500  0743  120A  158A  249B  120A  118A  	fcall	_get_high
  3501  0748  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0749  1303               	bcf	3,6	;RP1=0, select bank0
  3503  074A  00A9               	movwf	??_find_best_solution
  3504  074B  3006               	movlw	6
  3505  074C  0229               	subwf	??_find_best_solution,w
  3506  074D  1803               	skipnc
  3507  074E  2F6A               	goto	l3360
  3508                           
  3509                           ;teris_16f886.c: 1106: {
  3510                           ;teris_16f886.c: 1111: if(temp_risk < temp_pre_risk)
  3511  074F  0838               	movf	find_best_solution@temp_pre_risk+1,w
  3512  0750  023E               	subwf	find_best_solution@temp_risk+1,w
  3513  0751  1D03               	skipz
  3514  0752  2F55               	goto	u4315
  3515  0753  0837               	movf	find_best_solution@temp_pre_risk,w
  3516  0754  023D               	subwf	find_best_solution@temp_risk,w
  3517  0755                     u4315:	
  3518  0755  1C03               	btfss	3,0
  3519  0756  2F82               	goto	l3374
  3520                           
  3521                           ;teris_16f886.c: 1123: else if(temp_risk == temp_pre_risk)
  3522                           
  3523                           ;teris_16f886.c: 1122: }
  3524                           
  3525                           ;teris_16f886.c: 1121: temp_pre_x = temp_x;
  3526                           
  3527                           ;teris_16f886.c: 1120: tem_pre_sub_index = tem_sub_index;
  3528                           
  3529                           ;teris_16f886.c: 1119: temp_pre_hole = temp_hole;
  3530                           
  3531                           ;teris_16f886.c: 1118: temp_pre_high = temp_high;
  3532                           
  3533                           ;teris_16f886.c: 1117: temp_pre_risk = temp_risk;
  3534                           
  3535                           ;teris_16f886.c: 1112: {
  3536                           ;teris_16f886.c: 1116: temp_pre_count = temp_count;
  3537  0757  0838               	movf	find_best_solution@temp_pre_risk+1,w
  3538  0758  063E               	xorwf	find_best_solution@temp_risk+1,w
  3539  0759  1D03               	skipz
  3540  075A  2F5D               	goto	u4325
  3541  075B  0837               	movf	find_best_solution@temp_pre_risk,w
  3542  075C  063D               	xorwf	find_best_solution@temp_risk,w
  3543  075D                     u4325:	
  3544  075D  1D03               	skipz
  3545  075E  2F9A               	goto	l3376
  3546                           
  3547                           ;teris_16f886.c: 1124: {
  3548                           ;teris_16f886.c: 1128: if(temp_high < temp_pre_high)
  3549  075F  083A               	movf	find_best_solution@temp_pre_high,w
  3550  0760  0240               	subwf	find_best_solution@temp_high,w
  3551  0761  1C03               	btfss	3,0
  3552  0762  2F82               	goto	l3374
  3553                           
  3554                           ;teris_16f886.c: 1140: else if(temp_high == temp_pre_high)
  3555                           
  3556                           ;teris_16f886.c: 1139: }
  3557                           
  3558                           ;teris_16f886.c: 1138: temp_pre_x = temp_x;
  3559                           
  3560                           ;teris_16f886.c: 1137: tem_pre_sub_index = tem_sub_index;
  3561                           
  3562                           ;teris_16f886.c: 1136: temp_pre_hole = temp_hole;
  3563                           
  3564                           ;teris_16f886.c: 1135: temp_pre_high = temp_high;
  3565                           
  3566                           ;teris_16f886.c: 1134: temp_pre_risk = temp_risk;
  3567                           
  3568                           ;teris_16f886.c: 1129: {
  3569                           ;teris_16f886.c: 1133: temp_pre_count = temp_count;
  3570  0763  0840               	movf	find_best_solution@temp_high,w
  3571  0764  063A               	xorwf	find_best_solution@temp_pre_high,w
  3572  0765  1D03               	skipz
  3573  0766  2F9A               	goto	l3376
  3574                           
  3575                           ;teris_16f886.c: 1141: {
  3576                           ;teris_16f886.c: 1145: if(temp_hole < temp_pre_hole)
  3577  0767  0839               	movf	find_best_solution@temp_pre_hole,w
  3578  0768  023F               	subwf	find_best_solution@temp_hole,w
  3579  0769  2F80               	goto	u4405
  3580  076A                     l3360:	
  3581                           ;teris_16f886.c: 1156: }
  3582                           ;teris_16f886.c: 1158: }
  3583                           ;teris_16f886.c: 1160: }
  3584                           ;teris_16f886.c: 1161: }
  3585                           
  3586                           ;teris_16f886.c: 1155: temp_pre_x = temp_x;
  3587                           
  3588                           ;teris_16f886.c: 1154: tem_pre_sub_index = tem_sub_index;
  3589                           
  3590                           ;teris_16f886.c: 1153: temp_pre_hole = temp_hole;
  3591                           
  3592                           ;teris_16f886.c: 1152: temp_pre_high = temp_high;
  3593                           
  3594                           ;teris_16f886.c: 1151: temp_pre_risk = temp_risk;
  3595                           
  3596                           ;teris_16f886.c: 1146: {
  3597                           ;teris_16f886.c: 1150: temp_pre_count = temp_count;
  3598                           
  3599                           
  3600                           ;teris_16f886.c: 1162: else
  3601                           ;teris_16f886.c: 1163: {
  3602                           ;teris_16f886.c: 1168: if(temp_high < temp_pre_high)
  3603  076A  083A               	movf	find_best_solution@temp_pre_high,w
  3604  076B  0240               	subwf	find_best_solution@temp_high,w
  3605  076C  1C03               	btfss	3,0
  3606  076D  2F82               	goto	l3374
  3607                           
  3608                           ;teris_16f886.c: 1180: else if(temp_high == temp_pre_high)
  3609                           
  3610                           ;teris_16f886.c: 1179: }
  3611                           
  3612                           ;teris_16f886.c: 1178: temp_pre_x = temp_x;
  3613                           
  3614                           ;teris_16f886.c: 1177: tem_pre_sub_index = tem_sub_index;
  3615                           
  3616                           ;teris_16f886.c: 1176: temp_pre_hole = temp_hole;
  3617                           
  3618                           ;teris_16f886.c: 1175: temp_pre_high = temp_high;
  3619                           
  3620                           ;teris_16f886.c: 1174: temp_pre_risk = temp_risk;
  3621                           
  3622                           ;teris_16f886.c: 1169: {
  3623                           ;teris_16f886.c: 1173: temp_pre_count = temp_count;
  3624  076E  0840               	movf	find_best_solution@temp_high,w
  3625  076F  063A               	xorwf	find_best_solution@temp_pre_high,w
  3626  0770  1D03               	skipz
  3627  0771  2F9A               	goto	l3376
  3628                           
  3629                           ;teris_16f886.c: 1181: {
  3630                           ;teris_16f886.c: 1185: if(temp_hole < temp_pre_hole)
  3631  0772  0839               	movf	find_best_solution@temp_pre_hole,w
  3632  0773  023F               	subwf	find_best_solution@temp_hole,w
  3633  0774  1C03               	btfss	3,0
  3634  0775  2F82               	goto	l3374
  3635                           
  3636                           ;teris_16f886.c: 1197: else if(temp_hole == temp_pre_hole)
  3637                           
  3638                           ;teris_16f886.c: 1196: }
  3639                           
  3640                           ;teris_16f886.c: 1195: temp_pre_x = temp_x;
  3641                           
  3642                           ;teris_16f886.c: 1194: tem_pre_sub_index = tem_sub_index;
  3643                           
  3644                           ;teris_16f886.c: 1193: temp_pre_hole = temp_hole;
  3645                           
  3646                           ;teris_16f886.c: 1192: temp_pre_high = temp_high;
  3647                           
  3648                           ;teris_16f886.c: 1191: temp_pre_risk = temp_risk;
  3649                           
  3650                           ;teris_16f886.c: 1186: {
  3651                           ;teris_16f886.c: 1190: temp_pre_count = temp_count;
  3652  0776  083F               	movf	find_best_solution@temp_hole,w
  3653  0777  0639               	xorwf	find_best_solution@temp_pre_hole,w
  3654  0778  1D03               	skipz
  3655  0779  2F9A               	goto	l3376
  3656                           
  3657                           ;teris_16f886.c: 1198: {
  3658                           ;teris_16f886.c: 1202: if(temp_risk < temp_pre_risk)
  3659  077A  0838               	movf	find_best_solution@temp_pre_risk+1,w
  3660  077B  023E               	subwf	find_best_solution@temp_risk+1,w
  3661  077C  1D03               	skipz
  3662  077D  2F80               	goto	u4405
  3663  077E  0837               	movf	find_best_solution@temp_pre_risk,w
  3664  077F  023D               	subwf	find_best_solution@temp_risk,w
  3665  0780                     u4405:	
  3666  0780  1803               	skipnc
  3667  0781  2F9A               	goto	l3376
  3668  0782                     l3374:	
  3669                           
  3670                           ;teris_16f886.c: 1203: {
  3671                           ;teris_16f886.c: 1207: temp_pre_count = temp_count;
  3672  0782  083B               	movf	find_best_solution@temp_count,w
  3673  0783  00A9               	movwf	??_find_best_solution
  3674  0784  0829               	movf	??_find_best_solution,w
  3675  0785  00B6               	movwf	find_best_solution@temp_pre_count
  3676                           
  3677                           ;teris_16f886.c: 1208: temp_pre_risk = temp_risk;
  3678  0786  083E               	movf	find_best_solution@temp_risk+1,w
  3679  0787  00B8               	movwf	find_best_solution@temp_pre_risk+1
  3680  0788  083D               	movf	find_best_solution@temp_risk,w
  3681  0789  00B7               	movwf	find_best_solution@temp_pre_risk
  3682                           
  3683                           ;teris_16f886.c: 1209: temp_pre_high = temp_high;
  3684  078A  0840               	movf	find_best_solution@temp_high,w
  3685  078B  00A9               	movwf	??_find_best_solution
  3686  078C  0829               	movf	??_find_best_solution,w
  3687  078D  00BA               	movwf	find_best_solution@temp_pre_high
  3688                           
  3689                           ;teris_16f886.c: 1210: temp_pre_hole = temp_hole;
  3690  078E  083F               	movf	find_best_solution@temp_hole,w
  3691  078F  00A9               	movwf	??_find_best_solution
  3692  0790  0829               	movf	??_find_best_solution,w
  3693  0791  00B9               	movwf	find_best_solution@temp_pre_hole
  3694                           
  3695                           ;teris_16f886.c: 1211: tem_pre_sub_index = tem_sub_index;
  3696  0792  083C               	movf	find_best_solution@tem_sub_index,w
  3697  0793  00A9               	movwf	??_find_best_solution
  3698  0794  0829               	movf	??_find_best_solution,w
  3699  0795  00B4               	movwf	find_best_solution@tem_pre_sub_index
  3700                           
  3701                           ;teris_16f886.c: 1212: temp_pre_x = temp_x;
  3702  0796  0841               	movf	find_best_solution@temp_x,w
  3703  0797  00A9               	movwf	??_find_best_solution
  3704  0798  0829               	movf	??_find_best_solution,w
  3705  0799  00B3               	movwf	find_best_solution@temp_pre_x
  3706  079A                     l3376:	
  3707  079A  3001               	movlw	1
  3708  079B  1283               	bcf	3,5	;RP0=0, select bank0
  3709  079C  1303               	bcf	3,6	;RP1=0, select bank0
  3710  079D  00A9               	movwf	??_find_best_solution
  3711  079E  0829               	movf	??_find_best_solution,w
  3712  079F  07C1               	addwf	find_best_solution@temp_x,f
  3713  07A0  2EBB               	goto	l3378
  3714  07A1                     l3380:	
  3715  07A1  3001               	movlw	1
  3716  07A2  00A9               	movwf	??_find_best_solution
  3717  07A3  0829               	movf	??_find_best_solution,w
  3718  07A4  07BC               	addwf	find_best_solution@tem_sub_index,f
  3719  07A5  2E50               	goto	l3382
  3720  07A6                     l3384:	
  3721                           
  3722                           ;teris_16f886.c: 1213: }
  3723                           ;teris_16f886.c: 1214: }
  3724                           ;teris_16f886.c: 1215: }
  3725                           ;teris_16f886.c: 1216: }
  3726                           ;teris_16f886.c: 1217: }
  3727                           ;teris_16f886.c: 1233: }
  3728                           ;teris_16f886.c: 1234: }
  3729                           ;teris_16f886.c: 1235: if(res == 1)
  3730  07A6  0332               	decf	find_best_solution@res,w
  3731  07A7  1D03               	btfss	3,2
  3732  07A8  2FBF               	goto	l3390
  3733                           
  3734                           ;teris_16f886.c: 1236: {
  3735                           ;teris_16f886.c: 1237: g_char_info[g_char_info_index].cur_index = tem_pre_sub_index;
  3736  07A9  0834               	movf	find_best_solution@tem_pre_sub_index,w
  3737  07AA  00A9               	movwf	??_find_best_solution
  3738  07AB  3003               	movlw	3
  3739  07AC  00AA               	movwf	??_find_best_solution+1
  3740  07AD  082A               	movf	??_find_best_solution+1,w
  3741  07AE  00F0               	movwf	___bmul@multiplicand
  3742  07AF  085C               	movf	_g_char_info_index,w
  3743  07B0  120A  158A  2399   	fcall	___bmul
  3744  07B3  3E01               	addlw	1
  3745  07B4  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  3746  07B5  0084               	movwf	4
  3747  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  3748  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  3749  07B8  0829               	movf	??_find_best_solution,w
  3750  07B9  1383               	bcf	3,7	;select IRP bank1
  3751  07BA  0080               	movwf	0
  3752                           
  3753                           ;teris_16f886.c: 1238: cur_x = temp_pre_x;
  3754  07BB  0833               	movf	find_best_solution@temp_pre_x,w
  3755  07BC  00A9               	movwf	??_find_best_solution
  3756  07BD  0829               	movf	??_find_best_solution,w
  3757  07BE  00E1               	movwf	_cur_x
  3758  07BF                     l3390:	
  3759                           ;teris_16f886.c: 1256: else
  3760                           ;teris_16f886.c: 1257: {
  3761                           
  3762                           ;teris_16f886.c: 1255: }
  3763                           
  3764                           
  3765                           ;teris_16f886.c: 1261: }
  3766                           ;teris_16f886.c: 1262: return res;
  3767  07BF  0832               	movf	find_best_solution@res,w
  3768  07C0  0008               	return
  3769  07C1                     __end_of_find_best_solution:	
  3770                           
  3771                           	psect	text11
  3772  0C7B                     __ptext11:	
  3773 ;; *************** function _right_most *****************
  3774 ;; Defined at:
  3775 ;;		line 917 in file "teris_16f886.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  x               1    wreg     char 
  3778 ;;  matrix44        2   10[COMMON] PTR const struct .
  3779 ;;		 -> NULL(0), g_matrix44(384), 
  3780 ;;  matrix88        1   12[COMMON] PTR const struct .
  3781 ;;		 -> g_matrix88(64), 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  x               1    0[BANK0 ] char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      char 
  3786 ;; Registers used:
  3787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         3       0       0       0       0
  3794 ;;      Locals:         0       1       0       0       0
  3795 ;;      Temps:          1       0       0       0       0
  3796 ;;      Totals:         4       1       0       0       0
  3797 ;;Total ram usage:        5 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    2
  3800 ;; This function calls:
  3801 ;;		_is_right_boundary
  3802 ;; This function is called by:
  3803 ;;		_find_best_solution
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function _right_most
  3809  0C7B                     _right_most:	
  3810                           
  3811                           ;incstack = 0
  3812                           ; Regs used in _right_most: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3813                           ;right_most@x stored from wreg
  3814  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3815  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3816  0C7D  00A0               	movwf	right_most@x
  3817  0C7E                     l391:	
  3818                           ;teris_16f886.c: 919: while(1)
  3819                           
  3820                           
  3821                           ;teris_16f886.c: 920: {
  3822                           ;teris_16f886.c: 921: if(is_right_boundary(x, matrix44, matrix88) == RIGHT_OVER_BOUNDARY
      +                          )
  3823  0C7E  087A               	movf	right_most@matrix44,w
  3824  0C7F  00F0               	movwf	is_right_boundary@matrix44
  3825  0C80  087B               	movf	right_most@matrix44+1,w
  3826  0C81  00F1               	movwf	is_right_boundary@matrix44+1
  3827  0C82  087C               	movf	right_most@matrix88,w
  3828  0C83  00FD               	movwf	??_right_most
  3829  0C84  087D               	movf	??_right_most,w
  3830  0C85  00F2               	movwf	is_right_boundary@matrix88
  3831  0C86  0820               	movf	right_most@x,w
  3832  0C87  120A  118A  20A3  120A  158A  	fcall	_is_right_boundary
  3833  0C8C  3A03               	xorlw	3
  3834  0C8D  1D03               	skipz
  3835  0C8E  2C94               	goto	l2850
  3836                           
  3837                           ;teris_16f886.c: 922: {
  3838                           ;teris_16f886.c: 926: return x - 1;
  3839  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  3840  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  3841  0C91  0820               	movf	right_most@x,w
  3842  0C92  3EFF               	addlw	-1
  3843  0C93  0008               	return
  3844  0C94                     l2850:	
  3845                           
  3846                           ;teris_16f886.c: 927: }
  3847                           ;teris_16f886.c: 928: x++;
  3848  0C94  3001               	movlw	1
  3849  0C95  00FD               	movwf	??_right_most
  3850  0C96  087D               	movf	??_right_most,w
  3851  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  3852  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  3853  0C99  07A0               	addwf	right_most@x,f
  3854  0C9A  2C7E               	goto	l391
  3855  0C9B                     __end_of_right_most:	
  3856                           
  3857                           	psect	text12
  3858  00A3                     __ptext12:	
  3859 ;; *************** function _is_right_boundary *****************
  3860 ;; Defined at:
  3861 ;;		line 768 in file "teris_16f886.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  x               1    wreg     char 
  3864 ;;  matrix44        2    0[COMMON] PTR const struct .
  3865 ;;		 -> NULL(0), g_matrix44(384), 
  3866 ;;  matrix88        1    2[COMMON] PTR const struct .
  3867 ;;		 -> g_matrix88(64), 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  x               1    7[COMMON] char 
  3870 ;;  col             1    9[COMMON] char 
  3871 ;;  row             1    8[COMMON] char 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      unsigned char 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3881 ;;      Params:         3       0       0       0       0
  3882 ;;      Locals:         3       0       0       0       0
  3883 ;;      Temps:          4       0       0       0       0
  3884 ;;      Totals:        10       0       0       0       0
  3885 ;;Total ram usage:       10 bytes
  3886 ;; Hardware stack levels used:    2
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_right_most
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _is_right_boundary
  3896  00A3                     _is_right_boundary:	
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in _is_right_boundary: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3900                           ;is_right_boundary@x stored from wreg
  3901  00A3  00F7               	movwf	is_right_boundary@x
  3902                           
  3903                           ;teris_16f886.c: 770: for(int8_t row = 4 - 1; row >= 0; row--)
  3904  00A4  3003               	movlw	3
  3905  00A5  00F3               	movwf	??_is_right_boundary
  3906  00A6  0873               	movf	??_is_right_boundary,w
  3907  00A7  00F8               	movwf	is_right_boundary@row
  3908  00A8  1BF8               	btfsc	is_right_boundary@row,7
  3909  00A9  28F8               	goto	l2638
  3910  00AA                     l2616:	
  3911                           
  3912                           ;teris_16f886.c: 771: {
  3913                           ;teris_16f886.c: 772: for(int8_t col = 0; col < 4; col++)
  3914  00AA  01F9               	clrf	is_right_boundary@col
  3915  00AB  0879               	movf	is_right_boundary@col,w
  3916  00AC  3A80               	xorlw	128
  3917  00AD  3E7C               	addlw	-132
  3918  00AE  1803               	btfsc	3,0
  3919  00AF  28F2               	goto	l2634
  3920  00B0                     l2622:	
  3921                           
  3922                           ;teris_16f886.c: 773: {
  3923                           ;teris_16f886.c: 774: if(matrix44->data[row][col] == 1)
  3924  00B0  0878               	movf	is_right_boundary@row,w
  3925  00B1  00F3               	movwf	??_is_right_boundary
  3926  00B2  01F4               	clrf	??_is_right_boundary+1
  3927  00B3  1003               	clrc
  3928  00B4  0DF3               	rlf	??_is_right_boundary,f
  3929  00B5  0DF4               	rlf	??_is_right_boundary+1,f
  3930  00B6  1003               	clrc
  3931  00B7  0DF3               	rlf	??_is_right_boundary,f
  3932  00B8  0DF4               	rlf	??_is_right_boundary+1,f
  3933  00B9  0873               	movf	??_is_right_boundary,w
  3934  00BA  0770               	addwf	is_right_boundary@matrix44,w
  3935  00BB  00F5               	movwf	??_is_right_boundary+2
  3936  00BC  0874               	movf	??_is_right_boundary+1,w
  3937  00BD  1803               	skipnc
  3938  00BE  0A74               	incf	??_is_right_boundary+1,w
  3939  00BF  0771               	addwf	is_right_boundary@matrix44+1,w
  3940  00C0  00F6               	movwf	??_is_right_boundary+3
  3941  00C1  0879               	movf	is_right_boundary@col,w
  3942  00C2  0775               	addwf	??_is_right_boundary+2,w
  3943  00C3  0084               	movwf	4
  3944  00C4  0876               	movf	??_is_right_boundary+3,w
  3945  00C5  1803               	skipnc
  3946  00C6  0A76               	incf	??_is_right_boundary+3,w
  3947  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  3948  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  3949  00C9  00FF               	movwf	127
  3950  00CA  120A  158A  2000  120A  118A  	fcall	stringtab
  3951  00CF  3A01               	xorlw	1
  3952  00D0  1D03               	skipz
  3953  00D1  28E9               	goto	l2630
  3954                           
  3955                           ;teris_16f886.c: 775: {
  3956                           ;teris_16f886.c: 776: if(x + col > 8 - 1)
  3957  00D2  0877               	movf	is_right_boundary@x,w
  3958  00D3  0779               	addwf	is_right_boundary@col,w
  3959  00D4  00F3               	movwf	??_is_right_boundary
  3960  00D5  01F4               	clrf	??_is_right_boundary+1
  3961  00D6  1803               	skipnc
  3962  00D7  0AF4               	incf	??_is_right_boundary+1,f
  3963  00D8  1BF7               	btfsc	is_right_boundary@x,7
  3964  00D9  03F4               	decf	??_is_right_boundary+1,f
  3965  00DA  1BF9               	btfsc	is_right_boundary@col,7
  3966  00DB  03F4               	decf	??_is_right_boundary+1,f
  3967  00DC  0874               	movf	??_is_right_boundary+1,w
  3968  00DD  3A80               	xorlw	128
  3969  00DE  00FF               	movwf	127
  3970  00DF  3080               	movlw	128
  3971  00E0  027F               	subwf	127,w
  3972  00E1  1D03               	skipz
  3973  00E2  28E5               	goto	u2805
  3974  00E3  3008               	movlw	8
  3975  00E4  0273               	subwf	??_is_right_boundary,w
  3976  00E5                     u2805:	
  3977  00E5  1C03               	skipc
  3978  00E6  28E9               	goto	l2630
  3979                           
  3980                           ;teris_16f886.c: 777: {
  3981                           ;teris_16f886.c: 781: return RIGHT_OVER_BOUNDARY;
  3982  00E7  3003               	movlw	3
  3983  00E8  0008               	return
  3984  00E9                     l2630:	
  3985  00E9  3001               	movlw	1
  3986  00EA  00F3               	movwf	??_is_right_boundary
  3987  00EB  0873               	movf	??_is_right_boundary,w
  3988  00EC  07F9               	addwf	is_right_boundary@col,f
  3989  00ED  0879               	movf	is_right_boundary@col,w
  3990  00EE  3A80               	xorlw	128
  3991  00EF  3E7C               	addlw	-132
  3992  00F0  1C03               	skipc
  3993  00F1  28B0               	goto	l2622
  3994  00F2                     l2634:	
  3995  00F2  30FF               	movlw	255
  3996  00F3  00F3               	movwf	??_is_right_boundary
  3997  00F4  0873               	movf	??_is_right_boundary,w
  3998  00F5  07F8               	addwf	is_right_boundary@row,f
  3999  00F6  1FF8               	btfss	is_right_boundary@row,7
  4000  00F7  28AA               	goto	l2616
  4001  00F8                     l2638:	
  4002                           
  4003                           ;teris_16f886.c: 782: }
  4004                           ;teris_16f886.c: 783: }
  4005                           ;teris_16f886.c: 784: }
  4006                           ;teris_16f886.c: 785: }
  4007                           ;teris_16f886.c: 786: return OK;
  4008  00F8  3000               	movlw	0
  4009  00F9  0008               	return
  4010  00FA                     __end_of_is_right_boundary:	
  4011                           
  4012                           	psect	text13
  4013  00FA                     __ptext13:	
  4014 ;; *************** function _merge1 *****************
  4015 ;; Defined at:
  4016 ;;		line 846 in file "teris_16f886.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  x               1    wreg     char 
  4019 ;;  y               1    7[COMMON] char 
  4020 ;;  matrix44        2    8[COMMON] PTR const struct .
  4021 ;;		 -> NULL(0), g_matrix44(384), 
  4022 ;;  matrix88_in     1   10[COMMON] PTR const struct .
  4023 ;;		 -> g_matrix88(64), 
  4024 ;;  matrix88_out    1   11[COMMON] PTR struct .
  4025 ;;		 -> temp_matrix88(64), 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  x               1    6[BANK0 ] char 
  4028 ;;  col             1    8[BANK0 ] unsigned char 
  4029 ;;  row             1    7[BANK0 ] unsigned char 
  4030 ;;  len             2    4[BANK0 ] unsigned int 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4040 ;;      Params:         5       0       0       0       0
  4041 ;;      Locals:         0       5       0       0       0
  4042 ;;      Temps:          0       4       0       0       0
  4043 ;;      Totals:         5       9       0       0       0
  4044 ;;Total ram usage:       14 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    1
  4047 ;; This function calls:
  4048 ;;		_memcpy
  4049 ;; This function is called by:
  4050 ;;		_find_best_solution
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           
  4055                           ;psect for function _merge1
  4056  00FA                     _merge1:	
  4057                           
  4058                           ;incstack = 0
  4059                           ; Regs used in _merge1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4060                           ;merge1@x stored from wreg
  4061  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  4062  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  4063  00FC  00A6               	movwf	merge1@x
  4064                           
  4065                           ;teris_16f886.c: 851: register size_t len;
  4066                           ;teris_16f886.c: 853: len = sizeof(MATRIX88);
  4067  00FD  3040               	movlw	64
  4068  00FE  00A4               	movwf	merge1@len
  4069  00FF  3000               	movlw	0
  4070  0100  00A5               	movwf	merge1@len+1
  4071                           
  4072                           ;teris_16f886.c: 854: memcpy(matrix88_out, matrix88_in, len);
  4073  0101  087A               	movf	merge1@matrix88_in,w
  4074  0102  00A0               	movwf	??_merge1
  4075  0103  0820               	movf	??_merge1,w
  4076  0104  00F0               	movwf	memcpy@s1
  4077  0105  0825               	movf	merge1@len+1,w
  4078  0106  00F2               	movwf	memcpy@n+1
  4079  0107  0824               	movf	merge1@len,w
  4080  0108  00F1               	movwf	memcpy@n
  4081  0109  087B               	movf	merge1@matrix88_out,w
  4082  010A  120A  158A  24E2  120A  118A  	fcall	_memcpy
  4083                           
  4084                           ;teris_16f886.c: 856: for(uint8_t row = 0; row < 4; row++)
  4085  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4086  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4087  0111  01A7               	clrf	merge1@row
  4088  0112                     L3:	
  4089  0112  3004               	movlw	4
  4090  0113  0227               	subwf	merge1@row,w
  4091  0114  1803               	btfsc	3,0
  4092  0115  0008               	return
  4093                           
  4094                           ;teris_16f886.c: 857: {
  4095                           ;teris_16f886.c: 858: for(uint8_t col = 0; col < 4; col++)
  4096  0116  01A8               	clrf	merge1@col
  4097  0117  3004               	movlw	4
  4098  0118  0228               	subwf	merge1@col,w
  4099  0119  1803               	btfsc	3,0
  4100  011A  2959               	goto	l2786
  4101  011B                     l2778:	
  4102                           
  4103                           ;teris_16f886.c: 859: {
  4104                           ;teris_16f886.c: 860: if(matrix44->data[row][col] == 1)
  4105  011B  0827               	movf	merge1@row,w
  4106  011C  00A0               	movwf	??_merge1
  4107  011D  01A1               	clrf	??_merge1+1
  4108  011E  1003               	clrc
  4109  011F  0DA0               	rlf	??_merge1,f
  4110  0120  0DA1               	rlf	??_merge1+1,f
  4111  0121  1003               	clrc
  4112  0122  0DA0               	rlf	??_merge1,f
  4113  0123  0DA1               	rlf	??_merge1+1,f
  4114  0124  0820               	movf	??_merge1,w
  4115  0125  0778               	addwf	merge1@matrix44,w
  4116  0126  00A2               	movwf	??_merge1+2
  4117  0127  0821               	movf	??_merge1+1,w
  4118  0128  1803               	skipnc
  4119  0129  0A21               	incf	??_merge1+1,w
  4120  012A  0779               	addwf	merge1@matrix44+1,w
  4121  012B  00A3               	movwf	??_merge1+3
  4122  012C  0828               	movf	merge1@col,w
  4123  012D  0722               	addwf	??_merge1+2,w
  4124  012E  0084               	movwf	4
  4125  012F  0823               	movf	??_merge1+3,w
  4126  0130  1803               	skipnc
  4127  0131  0A23               	incf	??_merge1+3,w
  4128  0132  00FF               	movwf	127
  4129  0133  120A  158A  2000  120A  118A  	fcall	stringtab
  4130  0138  3A01               	xorlw	1
  4131  0139  1D03               	skipz
  4132  013A  2951               	goto	l2782
  4133                           
  4134                           ;teris_16f886.c: 861: {
  4135                           ;teris_16f886.c: 862: matrix88_out->data[y + row][x + col] = 1;
  4136  013B  0828               	movf	merge1@col,w
  4137  013C  0726               	addwf	merge1@x,w
  4138  013D  077B               	addwf	merge1@matrix88_out,w
  4139  013E  00A0               	movwf	??_merge1
  4140  013F  0827               	movf	merge1@row,w
  4141  0140  0777               	addwf	merge1@y,w
  4142  0141  00A1               	movwf	??_merge1+1
  4143  0142  3002               	movlw	2
  4144  0143                     u3155:	
  4145  0143  1003               	clrc
  4146  0144  0DA1               	rlf	??_merge1+1,f
  4147  0145  3EFF               	addlw	-1
  4148  0146  1D03               	skipz
  4149  0147  2943               	goto	u3155
  4150  0148  1003               	clrc
  4151  0149  0D21               	rlf	??_merge1+1,w
  4152  014A  0720               	addwf	??_merge1,w
  4153  014B  00A2               	movwf	??_merge1+2
  4154  014C  0822               	movf	??_merge1+2,w
  4155  014D  0084               	movwf	4
  4156  014E  1783               	bsf	3,7	;select IRP bank2
  4157  014F  0180               	clrf	0
  4158  0150  0A80               	incf	0,f
  4159  0151                     l2782:	
  4160  0151  3001               	movlw	1
  4161  0152  00A0               	movwf	??_merge1
  4162  0153  0820               	movf	??_merge1,w
  4163  0154  07A8               	addwf	merge1@col,f
  4164  0155  3004               	movlw	4
  4165  0156  0228               	subwf	merge1@col,w
  4166  0157  1C03               	skipc
  4167  0158  291B               	goto	l2778
  4168  0159                     l2786:	
  4169  0159  3001               	movlw	1
  4170  015A  00A0               	movwf	??_merge1
  4171  015B  0820               	movf	??_merge1,w
  4172  015C  07A7               	addwf	merge1@row,f
  4173  015D  2912               	goto	L3
  4174  015E                     __end_of_merge1:	
  4175                           
  4176                           	psect	text14
  4177  0C5B                     __ptext14:	
  4178 ;; *************** function _left_most *****************
  4179 ;; Defined at:
  4180 ;;		line 903 in file "teris_16f886.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  x               1    wreg     char 
  4183 ;;  matrix44        2   11[COMMON] PTR const struct .
  4184 ;;		 -> NULL(0), g_matrix44(384), 
  4185 ;;  matrix88        1   13[COMMON] PTR const struct .
  4186 ;;		 -> g_matrix88(64), 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  x               1    1[BANK0 ] char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      char 
  4191 ;; Registers used:
  4192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4198 ;;      Params:         3       0       0       0       0
  4199 ;;      Locals:         0       1       0       0       0
  4200 ;;      Temps:          0       1       0       0       0
  4201 ;;      Totals:         3       2       0       0       0
  4202 ;;Total ram usage:        5 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    2
  4205 ;; This function calls:
  4206 ;;		_is_left_boundary
  4207 ;; This function is called by:
  4208 ;;		_find_best_solution
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           
  4213                           ;psect for function _left_most
  4214  0C5B                     _left_most:	
  4215                           
  4216                           ;incstack = 0
  4217                           ; Regs used in _left_most: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4218                           ;left_most@x stored from wreg
  4219  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0C5D  00A1               	movwf	left_most@x
  4222  0C5E                     l384:	
  4223                           ;teris_16f886.c: 905: while(1)
  4224                           
  4225                           
  4226                           ;teris_16f886.c: 906: {
  4227                           ;teris_16f886.c: 907: if(is_left_boundary(x, matrix44, matrix88) == LEFT_OVER_BOUNDARY)
  4228  0C5E  087B               	movf	left_most@matrix44,w
  4229  0C5F  00F0               	movwf	is_left_boundary@matrix44
  4230  0C60  087C               	movf	left_most@matrix44+1,w
  4231  0C61  00F1               	movwf	is_left_boundary@matrix44+1
  4232  0C62  087D               	movf	left_most@matrix88,w
  4233  0C63  00A0               	movwf	??_left_most
  4234  0C64  0820               	movf	??_left_most,w
  4235  0C65  00F2               	movwf	is_left_boundary@matrix88
  4236  0C66  0821               	movf	left_most@x,w
  4237  0C67  120A  118A  204E  120A  158A  	fcall	_is_left_boundary
  4238  0C6C  3A02               	xorlw	2
  4239  0C6D  1D03               	skipz
  4240  0C6E  2C74               	goto	l2842
  4241                           
  4242                           ;teris_16f886.c: 908: {
  4243                           ;teris_16f886.c: 912: return x + 1;
  4244  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  4245  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  4246  0C71  0821               	movf	left_most@x,w
  4247  0C72  3E01               	addlw	1
  4248  0C73  0008               	return
  4249  0C74                     l2842:	
  4250                           
  4251                           ;teris_16f886.c: 913: }
  4252                           ;teris_16f886.c: 914: x--;
  4253  0C74  30FF               	movlw	255
  4254  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  4255  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  4256  0C77  00A0               	movwf	??_left_most
  4257  0C78  0820               	movf	??_left_most,w
  4258  0C79  07A1               	addwf	left_most@x,f
  4259  0C7A  2C5E               	goto	l384
  4260  0C7B                     __end_of_left_most:	
  4261                           
  4262                           	psect	text15
  4263  004E                     __ptext15:	
  4264 ;; *************** function _is_left_boundary *****************
  4265 ;; Defined at:
  4266 ;;		line 748 in file "teris_16f886.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  x               1    wreg     char 
  4269 ;;  matrix44        2    0[COMMON] PTR const struct .
  4270 ;;		 -> NULL(0), g_matrix44(384), 
  4271 ;;  matrix88        1    2[COMMON] PTR const struct .
  4272 ;;		 -> g_matrix88(64), 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  x               1    8[COMMON] char 
  4275 ;;  col             1   10[COMMON] char 
  4276 ;;  row             1    9[COMMON] char 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      unsigned char 
  4279 ;; Registers used:
  4280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4286 ;;      Params:         3       0       0       0       0
  4287 ;;      Locals:         3       0       0       0       0
  4288 ;;      Temps:          5       0       0       0       0
  4289 ;;      Totals:        11       0       0       0       0
  4290 ;;Total ram usage:       11 bytes
  4291 ;; Hardware stack levels used:    2
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_left_most
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           
  4300                           ;psect for function _is_left_boundary
  4301  004E                     _is_left_boundary:	
  4302                           
  4303                           ;incstack = 0
  4304                           ; Regs used in _is_left_boundary: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4305                           ;is_left_boundary@x stored from wreg
  4306  004E  00F8               	movwf	is_left_boundary@x
  4307                           
  4308                           ;teris_16f886.c: 750: for(int8_t row = 4 - 1; row >= 0; row--)
  4309  004F  3003               	movlw	3
  4310  0050  00F3               	movwf	??_is_left_boundary
  4311  0051  0873               	movf	??_is_left_boundary,w
  4312  0052  00F9               	movwf	is_left_boundary@row
  4313  0053  1BF9               	btfsc	is_left_boundary@row,7
  4314  0054  28A1               	goto	l2606
  4315  0055                     l2584:	
  4316                           
  4317                           ;teris_16f886.c: 751: {
  4318                           ;teris_16f886.c: 752: for(int8_t col = 0; col < 4; col++)
  4319  0055  01FA               	clrf	is_left_boundary@col
  4320  0056  087A               	movf	is_left_boundary@col,w
  4321  0057  3A80               	xorlw	128
  4322  0058  3E7C               	addlw	-132
  4323  0059  1803               	btfsc	3,0
  4324  005A  289B               	goto	l2602
  4325  005B                     l2590:	
  4326                           
  4327                           ;teris_16f886.c: 753: {
  4328                           ;teris_16f886.c: 754: if(matrix44->data[row][col] == 1)
  4329  005B  0879               	movf	is_left_boundary@row,w
  4330  005C  00F3               	movwf	??_is_left_boundary
  4331  005D  01F4               	clrf	??_is_left_boundary+1
  4332  005E  1003               	clrc
  4333  005F  0DF3               	rlf	??_is_left_boundary,f
  4334  0060  0DF4               	rlf	??_is_left_boundary+1,f
  4335  0061  1003               	clrc
  4336  0062  0DF3               	rlf	??_is_left_boundary,f
  4337  0063  0DF4               	rlf	??_is_left_boundary+1,f
  4338  0064  0873               	movf	??_is_left_boundary,w
  4339  0065  0770               	addwf	is_left_boundary@matrix44,w
  4340  0066  00F5               	movwf	??_is_left_boundary+2
  4341  0067  0874               	movf	??_is_left_boundary+1,w
  4342  0068  1803               	skipnc
  4343  0069  0A74               	incf	??_is_left_boundary+1,w
  4344  006A  0771               	addwf	is_left_boundary@matrix44+1,w
  4345  006B  00F6               	movwf	??_is_left_boundary+3
  4346  006C  087A               	movf	is_left_boundary@col,w
  4347  006D  0775               	addwf	??_is_left_boundary+2,w
  4348  006E  0084               	movwf	4
  4349  006F  0876               	movf	??_is_left_boundary+3,w
  4350  0070  1803               	skipnc
  4351  0071  0A76               	incf	??_is_left_boundary+3,w
  4352  0072  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0073  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0074  00FF               	movwf	127
  4355  0075  120A  158A  2000  120A  118A  	fcall	stringtab
  4356  007A  3A01               	xorlw	1
  4357  007B  1D03               	skipz
  4358  007C  2892               	goto	l2598
  4359                           
  4360                           ;teris_16f886.c: 755: {
  4361                           ;teris_16f886.c: 756: if( x + col < 0)
  4362  007D  087A               	movf	is_left_boundary@col,w
  4363  007E  00F3               	movwf	??_is_left_boundary
  4364  007F  01F4               	clrf	??_is_left_boundary+1
  4365  0080  1BF3               	btfsc	??_is_left_boundary,7
  4366  0081  03F4               	decf	??_is_left_boundary+1,f
  4367  0082  0878               	movf	is_left_boundary@x,w
  4368  0083  00F5               	movwf	??_is_left_boundary+2
  4369  0084  01F6               	clrf	??_is_left_boundary+3
  4370  0085  1BF5               	btfsc	??_is_left_boundary+2,7
  4371  0086  03F6               	decf	??_is_left_boundary+3,f
  4372  0087  0873               	movf	??_is_left_boundary,w
  4373  0088  0775               	addwf	??_is_left_boundary+2,w
  4374  0089  0876               	movf	??_is_left_boundary+3,w
  4375  008A  1803               	skipnc
  4376  008B  0A76               	incf	??_is_left_boundary+3,w
  4377  008C  0774               	addwf	??_is_left_boundary+1,w
  4378  008D  00F7               	movwf	??_is_left_boundary+4
  4379  008E  1FF7               	btfss	??_is_left_boundary+4,7
  4380  008F  2892               	goto	l2598
  4381                           
  4382                           ;teris_16f886.c: 757: {
  4383                           ;teris_16f886.c: 761: return LEFT_OVER_BOUNDARY;
  4384  0090  3002               	movlw	2
  4385  0091  0008               	return
  4386  0092                     l2598:	
  4387  0092  3001               	movlw	1
  4388  0093  00F3               	movwf	??_is_left_boundary
  4389  0094  0873               	movf	??_is_left_boundary,w
  4390  0095  07FA               	addwf	is_left_boundary@col,f
  4391  0096  087A               	movf	is_left_boundary@col,w
  4392  0097  3A80               	xorlw	128
  4393  0098  3E7C               	addlw	-132
  4394  0099  1C03               	skipc
  4395  009A  285B               	goto	l2590
  4396  009B                     l2602:	
  4397  009B  30FF               	movlw	255
  4398  009C  00F3               	movwf	??_is_left_boundary
  4399  009D  0873               	movf	??_is_left_boundary,w
  4400  009E  07F9               	addwf	is_left_boundary@row,f
  4401  009F  1FF9               	btfss	is_left_boundary@row,7
  4402  00A0  2855               	goto	l2584
  4403  00A1                     l2606:	
  4404                           
  4405                           ;teris_16f886.c: 762: }
  4406                           ;teris_16f886.c: 763: }
  4407                           ;teris_16f886.c: 764: }
  4408                           ;teris_16f886.c: 765: }
  4409                           ;teris_16f886.c: 766: return OK;
  4410  00A1  3000               	movlw	0
  4411  00A2  0008               	return
  4412  00A3                     __end_of_is_left_boundary:	
  4413                           
  4414                           	psect	text16
  4415  0387                     __ptext16:	
  4416 ;; *************** function _is_valid *****************
  4417 ;; Defined at:
  4418 ;;		line 704 in file "teris_16f886.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  x               1    wreg     char 
  4421 ;;  y               1    0[COMMON] char 
  4422 ;;  matrix44        2    1[COMMON] PTR const struct .
  4423 ;;		 -> NULL(0), g_matrix44(384), 
  4424 ;;  matrix88        1    3[COMMON] PTR const struct .
  4425 ;;		 -> g_matrix88(64), 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  x               1    8[COMMON] char 
  4428 ;;  col             1   10[COMMON] char 
  4429 ;;  row             1    9[COMMON] char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      unsigned char 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4439 ;;      Params:         4       0       0       0       0
  4440 ;;      Locals:         3       0       0       0       0
  4441 ;;      Temps:          4       0       0       0       0
  4442 ;;      Totals:        11       0       0       0       0
  4443 ;;Total ram usage:       11 bytes
  4444 ;; Hardware stack levels used:    2
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_find_best_solution
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function _is_valid
  4454  0387                     _is_valid:	
  4455                           
  4456                           ;incstack = 0
  4457                           ; Regs used in _is_valid: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4458                           ;is_valid@x stored from wreg
  4459  0387  00F8               	movwf	is_valid@x
  4460                           
  4461                           ;teris_16f886.c: 709: for(int8_t row = 4 - 1; row >= 0; row--)
  4462  0388  3003               	movlw	3
  4463  0389  00F4               	movwf	??_is_valid
  4464  038A  0874               	movf	??_is_valid,w
  4465  038B  00F9               	movwf	is_valid@row
  4466  038C  1BF9               	btfsc	is_valid@row,7
  4467  038D  2C18               	goto	l2722
  4468  038E                     l2686:	
  4469                           
  4470                           ;teris_16f886.c: 710: {
  4471                           ;teris_16f886.c: 711: for(int8_t col = 0; col < 4; col++)
  4472  038E  01FA               	clrf	is_valid@col
  4473  038F  087A               	movf	is_valid@col,w
  4474  0390  3A80               	xorlw	128
  4475  0391  3E7C               	addlw	-132
  4476  0392  1803               	btfsc	3,0
  4477  0393  2C12               	goto	l2718
  4478  0394                     l2692:	
  4479                           
  4480                           ;teris_16f886.c: 712: {
  4481                           ;teris_16f886.c: 713: if(matrix44->data[row][col] == 1)
  4482  0394  0879               	movf	is_valid@row,w
  4483  0395  00F4               	movwf	??_is_valid
  4484  0396  01F5               	clrf	??_is_valid+1
  4485  0397  1003               	clrc
  4486  0398  0DF4               	rlf	??_is_valid,f
  4487  0399  0DF5               	rlf	??_is_valid+1,f
  4488  039A  1003               	clrc
  4489  039B  0DF4               	rlf	??_is_valid,f
  4490  039C  0DF5               	rlf	??_is_valid+1,f
  4491  039D  0874               	movf	??_is_valid,w
  4492  039E  0771               	addwf	is_valid@matrix44,w
  4493  039F  00F6               	movwf	??_is_valid+2
  4494  03A0  0875               	movf	??_is_valid+1,w
  4495  03A1  1803               	skipnc
  4496  03A2  0A75               	incf	??_is_valid+1,w
  4497  03A3  0772               	addwf	is_valid@matrix44+1,w
  4498  03A4  00F7               	movwf	??_is_valid+3
  4499  03A5  087A               	movf	is_valid@col,w
  4500  03A6  0776               	addwf	??_is_valid+2,w
  4501  03A7  0084               	movwf	4
  4502  03A8  0877               	movf	??_is_valid+3,w
  4503  03A9  1803               	skipnc
  4504  03AA  0A77               	incf	??_is_valid+3,w
  4505  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  4506  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  4507  03AD  00FF               	movwf	127
  4508  03AE  120A  158A  2000  120A  118A  	fcall	stringtab
  4509  03B3  3A01               	xorlw	1
  4510  03B4  1D03               	skipz
  4511  03B5  2C09               	goto	l2714
  4512                           
  4513                           ;teris_16f886.c: 714: {
  4514                           ;teris_16f886.c: 715: if(matrix88->data[y + row][x + col] == 1)
  4515  03B6  087A               	movf	is_valid@col,w
  4516  03B7  0778               	addwf	is_valid@x,w
  4517  03B8  0773               	addwf	is_valid@matrix88,w
  4518  03B9  00F4               	movwf	??_is_valid
  4519  03BA  0879               	movf	is_valid@row,w
  4520  03BB  0770               	addwf	is_valid@y,w
  4521  03BC  00F5               	movwf	??_is_valid+1
  4522  03BD  3002               	movlw	2
  4523  03BE                     u2935:	
  4524  03BE  1003               	clrc
  4525  03BF  0DF5               	rlf	??_is_valid+1,f
  4526  03C0  3EFF               	addlw	-1
  4527  03C1  1D03               	skipz
  4528  03C2  2BBE               	goto	u2935
  4529  03C3  1003               	clrc
  4530  03C4  0D75               	rlf	??_is_valid+1,w
  4531  03C5  0774               	addwf	??_is_valid,w
  4532  03C6  00F6               	movwf	??_is_valid+2
  4533  03C7  0876               	movf	??_is_valid+2,w
  4534  03C8  0084               	movwf	4
  4535  03C9  1783               	bsf	3,7	;select IRP bank2
  4536  03CA  0300               	decf	0,w
  4537  03CB  1D03               	btfss	3,2
  4538  03CC  2BCF               	goto	l2700
  4539                           
  4540                           ;teris_16f886.c: 716: {
  4541                           ;teris_16f886.c: 721: return 0;
  4542  03CD  3000               	movlw	0
  4543  03CE  0008               	return
  4544  03CF                     l2700:	
  4545                           
  4546                           ;teris_16f886.c: 722: }
  4547                           ;teris_16f886.c: 724: if(( x + col < 0) || (x + col >= 8))
  4548  03CF  0878               	movf	is_valid@x,w
  4549  03D0  077A               	addwf	is_valid@col,w
  4550  03D1  00F4               	movwf	??_is_valid
  4551  03D2  01F5               	clrf	??_is_valid+1
  4552  03D3  1803               	skipnc
  4553  03D4  0AF5               	incf	??_is_valid+1,f
  4554  03D5  1BF8               	btfsc	is_valid@x,7
  4555  03D6  03F5               	decf	??_is_valid+1,f
  4556  03D7  1BFA               	btfsc	is_valid@col,7
  4557  03D8  03F5               	decf	??_is_valid+1,f
  4558  03D9  1BF5               	btfsc	??_is_valid+1,7
  4559  03DA  2BF0               	goto	l2704
  4560  03DB  0878               	movf	is_valid@x,w
  4561  03DC  077A               	addwf	is_valid@col,w
  4562  03DD  00F4               	movwf	??_is_valid
  4563  03DE  01F5               	clrf	??_is_valid+1
  4564  03DF  1803               	skipnc
  4565  03E0  0AF5               	incf	??_is_valid+1,f
  4566  03E1  1BF8               	btfsc	is_valid@x,7
  4567  03E2  03F5               	decf	??_is_valid+1,f
  4568  03E3  1BFA               	btfsc	is_valid@col,7
  4569  03E4  03F5               	decf	??_is_valid+1,f
  4570  03E5  0875               	movf	??_is_valid+1,w
  4571  03E6  3A80               	xorlw	128
  4572  03E7  00FF               	movwf	127
  4573  03E8  3080               	movlw	128
  4574  03E9  027F               	subwf	127,w
  4575  03EA  1D03               	skipz
  4576  03EB  2BEE               	goto	u2985
  4577  03EC  3008               	movlw	8
  4578  03ED  0274               	subwf	??_is_valid,w
  4579  03EE                     u2985:	
  4580  03EE  1C03               	skipc
  4581  03EF  2BF2               	goto	l2708
  4582  03F0                     l2704:	
  4583                           
  4584                           ;teris_16f886.c: 725: {
  4585                           ;teris_16f886.c: 730: return 0;
  4586  03F0  3000               	movlw	0
  4587  03F1  0008               	return
  4588  03F2                     l2708:	
  4589                           
  4590                           ;teris_16f886.c: 731: }
  4591                           ;teris_16f886.c: 732: if((y + row) > (8 - 1))
  4592  03F2  0870               	movf	is_valid@y,w
  4593  03F3  0779               	addwf	is_valid@row,w
  4594  03F4  00F4               	movwf	??_is_valid
  4595  03F5  01F5               	clrf	??_is_valid+1
  4596  03F6  1803               	skipnc
  4597  03F7  0AF5               	incf	??_is_valid+1,f
  4598  03F8  1BF0               	btfsc	is_valid@y,7
  4599  03F9  03F5               	decf	??_is_valid+1,f
  4600  03FA  1BF9               	btfsc	is_valid@row,7
  4601  03FB  03F5               	decf	??_is_valid+1,f
  4602  03FC  0875               	movf	??_is_valid+1,w
  4603  03FD  3A80               	xorlw	128
  4604  03FE  00FF               	movwf	127
  4605  03FF  3080               	movlw	128
  4606  0400  027F               	subwf	127,w
  4607  0401  1D03               	skipz
  4608  0402  2C05               	goto	u3005
  4609  0403  3008               	movlw	8
  4610  0404  0274               	subwf	??_is_valid,w
  4611  0405                     u3005:	
  4612  0405  1C03               	skipc
  4613  0406  2C09               	goto	l2714
  4614                           
  4615                           ;teris_16f886.c: 733: {
  4616                           ;teris_16f886.c: 738: return 0;
  4617  0407  3000               	movlw	0
  4618  0408  0008               	return
  4619  0409                     l2714:	
  4620  0409  3001               	movlw	1
  4621  040A  00F4               	movwf	??_is_valid
  4622  040B  0874               	movf	??_is_valid,w
  4623  040C  07FA               	addwf	is_valid@col,f
  4624  040D  087A               	movf	is_valid@col,w
  4625  040E  3A80               	xorlw	128
  4626  040F  3E7C               	addlw	-132
  4627  0410  1C03               	skipc
  4628  0411  2B94               	goto	l2692
  4629  0412                     l2718:	
  4630  0412  30FF               	movlw	255
  4631  0413  00F4               	movwf	??_is_valid
  4632  0414  0874               	movf	??_is_valid,w
  4633  0415  07F9               	addwf	is_valid@row,f
  4634  0416  1FF9               	btfss	is_valid@row,7
  4635  0417  2B8E               	goto	l2686
  4636  0418                     l2722:	
  4637                           
  4638                           ;teris_16f886.c: 739: }
  4639                           ;teris_16f886.c: 740: }
  4640                           ;teris_16f886.c: 741: }
  4641                           ;teris_16f886.c: 742: }
  4642                           ;teris_16f886.c: 746: return 1;
  4643  0418  3001               	movlw	1
  4644  0419  0008               	return
  4645  041A                     __end_of_is_valid:	
  4646                           
  4647                           	psect	text17
  4648  041A                     __ptext17:	
  4649 ;; *************** function _get_holes_after_merge *****************
  4650 ;; Defined at:
  4651 ;;		line 966 in file "teris_16f886.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  matrix          1    wreg     PTR struct .
  4654 ;;		 -> temp_matrix88(64), 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  matrix          1    9[COMMON] PTR struct .
  4657 ;;		 -> temp_matrix88(64), 
  4658 ;;  row             1   11[COMMON] char 
  4659 ;;  col             1   10[COMMON] char 
  4660 ;;  start           1    8[COMMON] char 
  4661 ;;  stop            1    7[COMMON] char 
  4662 ;;  num_hole        1    6[COMMON] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      unsigned char 
  4665 ;; Registers used:
  4666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4672 ;;      Params:         0       0       0       0       0
  4673 ;;      Locals:         6       0       0       0       0
  4674 ;;      Temps:          6       0       0       0       0
  4675 ;;      Totals:        12       0       0       0       0
  4676 ;;Total ram usage:       12 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_find_best_solution
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           
  4686                           ;psect for function _get_holes_after_merge
  4687  041A                     _get_holes_after_merge:	
  4688                           
  4689                           ;incstack = 0
  4690                           ; Regs used in _get_holes_after_merge: [wreg-fsr0h+status,2+status,0+btemp+1]
  4691                           ;get_holes_after_merge@matrix stored from wreg
  4692  041A  00F9               	movwf	get_holes_after_merge@matrix
  4693                           
  4694                           ;teris_16f886.c: 968: int8_t start = -1;
  4695  041B  01F8               	clrf	get_holes_after_merge@start
  4696  041C  03F8               	decf	get_holes_after_merge@start,f
  4697                           
  4698                           ;teris_16f886.c: 969: int8_t stop = -1;
  4699  041D  01F7               	clrf	get_holes_after_merge@stop
  4700  041E  03F7               	decf	get_holes_after_merge@stop,f
  4701                           
  4702                           ;teris_16f886.c: 970: uint8_t num_hole = 0;
  4703  041F  01F6               	clrf	get_holes_after_merge@num_hole
  4704                           
  4705                           ;teris_16f886.c: 971: for(int8_t col = 0; col < 8; col++)
  4706  0420  01FA               	clrf	get_holes_after_merge@col
  4707  0421  087A               	movf	get_holes_after_merge@col,w
  4708  0422  3A80               	xorlw	128
  4709  0423  3E78               	addlw	-136
  4710  0424  1803               	btfsc	3,0
  4711  0425  2D25               	goto	l2968
  4712  0426                     l2906:	
  4713                           
  4714                           ;teris_16f886.c: 972: {
  4715                           ;teris_16f886.c: 973: start = stop = -1;
  4716  0426  30FF               	movlw	255
  4717  0427  00F7               	movwf	get_holes_after_merge@stop
  4718  0428  00F0               	movwf	??_get_holes_after_merge
  4719  0429  0870               	movf	??_get_holes_after_merge,w
  4720  042A  00F8               	movwf	get_holes_after_merge@start
  4721                           
  4722                           ;teris_16f886.c: 974: for(int8_t row = 0; row < 8; row++)
  4723  042B  01FB               	clrf	get_holes_after_merge@row
  4724  042C  087B               	movf	get_holes_after_merge@row,w
  4725  042D  3A80               	xorlw	128
  4726  042E  3E78               	addlw	-136
  4727  042F  1803               	btfsc	3,0
  4728  0430  2CF3               	goto	l415
  4729  0431                     l2914:	
  4730                           
  4731                           ;teris_16f886.c: 975: {
  4732                           ;teris_16f886.c: 976: if(col == 0)
  4733  0431  087A               	movf	get_holes_after_merge@col,w
  4734  0432  1D03               	btfss	3,2
  4735  0433  2C56               	goto	l2924
  4736                           
  4737                           ;teris_16f886.c: 977: {
  4738                           ;teris_16f886.c: 978: if((matrix->data[row][col] == 0) && (matrix->data[row][col + 1] ==
      +                           1))
  4739  0434  087B               	movf	get_holes_after_merge@row,w
  4740  0435  00F0               	movwf	??_get_holes_after_merge
  4741  0436  3002               	movlw	2
  4742  0437                     u3425:	
  4743  0437  1003               	clrc
  4744  0438  0DF0               	rlf	??_get_holes_after_merge,f
  4745  0439  3EFF               	addlw	-1
  4746  043A  1D03               	skipz
  4747  043B  2C37               	goto	u3425
  4748  043C  1003               	clrc
  4749  043D  0D70               	rlf	??_get_holes_after_merge,w
  4750  043E  0779               	addwf	get_holes_after_merge@matrix,w
  4751  043F  00F1               	movwf	??_get_holes_after_merge+1
  4752  0440  087A               	movf	get_holes_after_merge@col,w
  4753  0441  0771               	addwf	??_get_holes_after_merge+1,w
  4754  0442  00F2               	movwf	??_get_holes_after_merge+2
  4755  0443  0872               	movf	??_get_holes_after_merge+2,w
  4756  0444  0084               	movwf	4
  4757  0445  1783               	bsf	3,7	;select IRP bank2
  4758  0446  0800               	movf	0,w
  4759  0447  1D03               	btfss	3,2
  4760  0448  2CC2               	goto	l2944
  4761  0449  087A               	movf	get_holes_after_merge@col,w
  4762  044A  3E01               	addlw	1
  4763  044B  0779               	addwf	get_holes_after_merge@matrix,w
  4764  044C  00F0               	movwf	??_get_holes_after_merge
  4765  044D  087B               	movf	get_holes_after_merge@row,w
  4766  044E  00F1               	movwf	??_get_holes_after_merge+1
  4767  044F  3002               	movlw	2
  4768  0450                     u3445:	
  4769  0450  1003               	clrc
  4770  0451  0DF1               	rlf	??_get_holes_after_merge+1,f
  4771  0452  3EFF               	addlw	-1
  4772  0453  1D03               	skipz
  4773  0454  2C50               	goto	u3445
  4774  0455  2CB2               	goto	L5
  4775  0456                     l2924:	
  4776                           ;teris_16f886.c: 983: }
  4777                           ;teris_16f886.c: 984: }
  4778                           ;teris_16f886.c: 985: }
  4779                           
  4780                           ;teris_16f886.c: 981: {
  4781                           ;teris_16f886.c: 982: start = row;
  4782                           
  4783                           ;teris_16f886.c: 979: {
  4784                           ;teris_16f886.c: 980: if(start == -1)
  4785                           
  4786                           
  4787                           ;teris_16f886.c: 986: else if(col == 8 - 1)
  4788  0456  3007               	movlw	7
  4789  0457  067A               	xorwf	get_holes_after_merge@col,w
  4790  0458  1D03               	btfss	3,2
  4791  0459  2C7C               	goto	l2934
  4792                           
  4793                           ;teris_16f886.c: 987: {
  4794                           ;teris_16f886.c: 988: if((matrix->data[row][col] == 0) && (matrix->data[row][col - 1] ==
      +                           1))
  4795  045A  087B               	movf	get_holes_after_merge@row,w
  4796  045B  00F0               	movwf	??_get_holes_after_merge
  4797  045C  3002               	movlw	2
  4798  045D                     u3485:	
  4799  045D  1003               	clrc
  4800  045E  0DF0               	rlf	??_get_holes_after_merge,f
  4801  045F  3EFF               	addlw	-1
  4802  0460  1D03               	skipz
  4803  0461  2C5D               	goto	u3485
  4804  0462  1003               	clrc
  4805  0463  0D70               	rlf	??_get_holes_after_merge,w
  4806  0464  0779               	addwf	get_holes_after_merge@matrix,w
  4807  0465  00F1               	movwf	??_get_holes_after_merge+1
  4808  0466  087A               	movf	get_holes_after_merge@col,w
  4809  0467  0771               	addwf	??_get_holes_after_merge+1,w
  4810  0468  00F2               	movwf	??_get_holes_after_merge+2
  4811  0469  0872               	movf	??_get_holes_after_merge+2,w
  4812  046A  0084               	movwf	4
  4813  046B  1783               	bsf	3,7	;select IRP bank2
  4814  046C  0800               	movf	0,w
  4815  046D  1D03               	btfss	3,2
  4816  046E  2CC2               	goto	l2944
  4817  046F  087A               	movf	get_holes_after_merge@col,w
  4818  0470  3EFF               	addlw	255
  4819  0471  0779               	addwf	get_holes_after_merge@matrix,w
  4820  0472  00F0               	movwf	??_get_holes_after_merge
  4821  0473  087B               	movf	get_holes_after_merge@row,w
  4822  0474  00F1               	movwf	??_get_holes_after_merge+1
  4823  0475  3002               	movlw	2
  4824  0476                     u3505:	
  4825  0476  1003               	clrc
  4826  0477  0DF1               	rlf	??_get_holes_after_merge+1,f
  4827  0478  3EFF               	addlw	-1
  4828  0479  1D03               	skipz
  4829  047A  2C76               	goto	u3505
  4830  047B  2CB2               	goto	L5
  4831  047C                     l2934:	
  4832                           ;teris_16f886.c: 993: }
  4833                           ;teris_16f886.c: 994: }
  4834                           ;teris_16f886.c: 995: }
  4835                           
  4836                           ;teris_16f886.c: 991: {
  4837                           ;teris_16f886.c: 992: start = row;
  4838                           
  4839                           ;teris_16f886.c: 989: {
  4840                           ;teris_16f886.c: 990: if(start == -1)
  4841                           
  4842                           
  4843                           ;teris_16f886.c: 996: else
  4844                           ;teris_16f886.c: 997: {
  4845                           ;teris_16f886.c: 998: if((matrix->data[row][col] == 0) && (matrix->data[row][col - 1] ==
      +                           1) && (matrix->data[row][col + 1] == 1))
  4846  047C  087B               	movf	get_holes_after_merge@row,w
  4847  047D  00F0               	movwf	??_get_holes_after_merge
  4848  047E  3002               	movlw	2
  4849  047F                     u3535:	
  4850  047F  1003               	clrc
  4851  0480  0DF0               	rlf	??_get_holes_after_merge,f
  4852  0481  3EFF               	addlw	-1
  4853  0482  1D03               	skipz
  4854  0483  2C7F               	goto	u3535
  4855  0484  1003               	clrc
  4856  0485  0D70               	rlf	??_get_holes_after_merge,w
  4857  0486  0779               	addwf	get_holes_after_merge@matrix,w
  4858  0487  00F1               	movwf	??_get_holes_after_merge+1
  4859  0488  087A               	movf	get_holes_after_merge@col,w
  4860  0489  0771               	addwf	??_get_holes_after_merge+1,w
  4861  048A  00F2               	movwf	??_get_holes_after_merge+2
  4862  048B  0872               	movf	??_get_holes_after_merge+2,w
  4863  048C  0084               	movwf	4
  4864  048D  1783               	bsf	3,7	;select IRP bank2
  4865  048E  0800               	movf	0,w
  4866  048F  1D03               	btfss	3,2
  4867  0490  2CC2               	goto	l2944
  4868  0491  087A               	movf	get_holes_after_merge@col,w
  4869  0492  3EFF               	addlw	255
  4870  0493  0779               	addwf	get_holes_after_merge@matrix,w
  4871  0494  00F0               	movwf	??_get_holes_after_merge
  4872  0495  087B               	movf	get_holes_after_merge@row,w
  4873  0496  00F1               	movwf	??_get_holes_after_merge+1
  4874  0497  3002               	movlw	2
  4875  0498                     u3555:	
  4876  0498  1003               	clrc
  4877  0499  0DF1               	rlf	??_get_holes_after_merge+1,f
  4878  049A  3EFF               	addlw	-1
  4879  049B  1D03               	skipz
  4880  049C  2C98               	goto	u3555
  4881  049D  1003               	clrc
  4882  049E  0D71               	rlf	??_get_holes_after_merge+1,w
  4883  049F  0770               	addwf	??_get_holes_after_merge,w
  4884  04A0  00F2               	movwf	??_get_holes_after_merge+2
  4885  04A1  0872               	movf	??_get_holes_after_merge+2,w
  4886  04A2  0084               	movwf	4
  4887  04A3  0300               	decf	0,w
  4888  04A4  1D03               	btfss	3,2
  4889  04A5  2CC2               	goto	l2944
  4890  04A6  087A               	movf	get_holes_after_merge@col,w
  4891  04A7  3E01               	addlw	1
  4892  04A8  0779               	addwf	get_holes_after_merge@matrix,w
  4893  04A9  00F0               	movwf	??_get_holes_after_merge
  4894  04AA  087B               	movf	get_holes_after_merge@row,w
  4895  04AB  00F1               	movwf	??_get_holes_after_merge+1
  4896  04AC  3002               	movlw	2
  4897  04AD                     u3575:	
  4898  04AD  1003               	clrc
  4899  04AE  0DF1               	rlf	??_get_holes_after_merge+1,f
  4900  04AF  3EFF               	addlw	-1
  4901  04B0  1D03               	skipz
  4902  04B1  2CAD               	goto	u3575
  4903  04B2                     L5:	
  4904  04B2  1003               	clrc
  4905  04B3  0D71               	rlf	??_get_holes_after_merge+1,w
  4906  04B4  0770               	addwf	??_get_holes_after_merge,w
  4907  04B5  00F2               	movwf	??_get_holes_after_merge+2
  4908  04B6  0872               	movf	??_get_holes_after_merge+2,w
  4909  04B7  0084               	movwf	4
  4910  04B8  0300               	decf	0,w
  4911  04B9  1D03               	btfss	3,2
  4912  04BA  2CC2               	goto	l2944
  4913                           
  4914                           ;teris_16f886.c: 999: {
  4915                           ;teris_16f886.c: 1000: if(start == -1)
  4916  04BB  0A78               	incf	get_holes_after_merge@start,w
  4917  04BC  1D03               	btfss	3,2
  4918  04BD  2CC2               	goto	l2944
  4919                           
  4920                           ;teris_16f886.c: 1001: {
  4921                           ;teris_16f886.c: 1002: start = row;
  4922  04BE  087B               	movf	get_holes_after_merge@row,w
  4923  04BF  00F0               	movwf	??_get_holes_after_merge
  4924  04C0  0870               	movf	??_get_holes_after_merge,w
  4925  04C1  00F8               	movwf	get_holes_after_merge@start
  4926  04C2                     l2944:	
  4927                           
  4928                           ;teris_16f886.c: 1003: }
  4929                           ;teris_16f886.c: 1004: }
  4930                           ;teris_16f886.c: 1005: }
  4931                           ;teris_16f886.c: 1006: if(start >= 0)
  4932  04C2  1BF8               	btfsc	get_holes_after_merge@start,7
  4933  04C3  2CEA               	goto	l426
  4934                           
  4935                           ;teris_16f886.c: 1007: {
  4936                           ;teris_16f886.c: 1008: if(row == 8 - 1)
  4937  04C4  3007               	movlw	7
  4938  04C5  067B               	xorwf	get_holes_after_merge@row,w
  4939  04C6  1D03               	btfss	3,2
  4940  04C7  2CCD               	goto	l2952
  4941                           
  4942                           ;teris_16f886.c: 1009: {
  4943                           ;teris_16f886.c: 1010: if(stop == -1)
  4944  04C8  0A77               	incf	get_holes_after_merge@stop,w
  4945  04C9  1D03               	btfss	3,2
  4946  04CA  2CEA               	goto	l426
  4947                           
  4948                           ;teris_16f886.c: 1011: {
  4949                           ;teris_16f886.c: 1012: stop = 8;
  4950  04CB  3008               	movlw	8
  4951  04CC  2CE7               	goto	L4
  4952  04CD                     l2952:	
  4953                           ;teris_16f886.c: 1013: }
  4954                           ;teris_16f886.c: 1014: }
  4955                           
  4956                           
  4957                           ;teris_16f886.c: 1015: else if(matrix->data[row + 1][col] == 1)
  4958  04CD  087B               	movf	get_holes_after_merge@row,w
  4959  04CE  00F0               	movwf	??_get_holes_after_merge
  4960  04CF  3002               	movlw	2
  4961  04D0                     u3635:	
  4962  04D0  1003               	clrc
  4963  04D1  0DF0               	rlf	??_get_holes_after_merge,f
  4964  04D2  3EFF               	addlw	-1
  4965  04D3  1D03               	skipz
  4966  04D4  2CD0               	goto	u3635
  4967  04D5  1003               	clrc
  4968  04D6  0D70               	rlf	??_get_holes_after_merge,w
  4969  04D7  3E08               	addlw	8
  4970  04D8  0779               	addwf	get_holes_after_merge@matrix,w
  4971  04D9  00F1               	movwf	??_get_holes_after_merge+1
  4972  04DA  087A               	movf	get_holes_after_merge@col,w
  4973  04DB  0771               	addwf	??_get_holes_after_merge+1,w
  4974  04DC  00F2               	movwf	??_get_holes_after_merge+2
  4975  04DD  0872               	movf	??_get_holes_after_merge+2,w
  4976  04DE  0084               	movwf	4
  4977  04DF  0300               	decf	0,w
  4978  04E0  1D03               	btfss	3,2
  4979  04E1  2CEA               	goto	l426
  4980                           
  4981                           ;teris_16f886.c: 1016: {
  4982                           ;teris_16f886.c: 1017: if(stop == -1)
  4983  04E2  0A77               	incf	get_holes_after_merge@stop,w
  4984  04E3  1D03               	btfss	3,2
  4985  04E4  2CEA               	goto	l426
  4986                           
  4987                           ;teris_16f886.c: 1018: {
  4988                           ;teris_16f886.c: 1019: stop = row + 1;
  4989  04E5  087B               	movf	get_holes_after_merge@row,w
  4990  04E6  3E01               	addlw	1
  4991  04E7                     L4:	
  4992  04E7  00F0               	movwf	??_get_holes_after_merge
  4993  04E8  0870               	movf	??_get_holes_after_merge,w
  4994  04E9  00F7               	movwf	get_holes_after_merge@stop
  4995  04EA                     l426:	
  4996  04EA  3001               	movlw	1
  4997  04EB  00F0               	movwf	??_get_holes_after_merge
  4998  04EC  0870               	movf	??_get_holes_after_merge,w
  4999  04ED  07FB               	addwf	get_holes_after_merge@row,f
  5000  04EE  087B               	movf	get_holes_after_merge@row,w
  5001  04EF  3A80               	xorlw	128
  5002  04F0  3E78               	addlw	-136
  5003  04F1  1C03               	skipc
  5004  04F2  2C31               	goto	l2914
  5005  04F3                     l415:	
  5006                           
  5007                           ;teris_16f886.c: 1020: }
  5008                           ;teris_16f886.c: 1021: }
  5009                           ;teris_16f886.c: 1022: }
  5010                           ;teris_16f886.c: 1024: }
  5011                           ;teris_16f886.c: 1025: if((start >= 0) && (stop >= 0) && (stop - start >= 3))
  5012  04F3  1FF8               	btfss	get_holes_after_merge@start,7
  5013  04F4  1BF7               	btfsc	get_holes_after_merge@stop,7
  5014  04F5  2D1C               	goto	l432
  5015  04F6  0878               	movf	get_holes_after_merge@start,w
  5016  04F7  00F0               	movwf	??_get_holes_after_merge
  5017  04F8  01F1               	clrf	??_get_holes_after_merge+1
  5018  04F9  1BF0               	btfsc	??_get_holes_after_merge,7
  5019  04FA  03F1               	decf	??_get_holes_after_merge+1,f
  5020  04FB  09F0               	comf	??_get_holes_after_merge,f
  5021  04FC  09F1               	comf	??_get_holes_after_merge+1,f
  5022  04FD  0AF0               	incf	??_get_holes_after_merge,f
  5023  04FE  1903               	skipnz
  5024  04FF  0AF1               	incf	??_get_holes_after_merge+1,f
  5025  0500  0877               	movf	get_holes_after_merge@stop,w
  5026  0501  00F2               	movwf	??_get_holes_after_merge+2
  5027  0502  01F3               	clrf	??_get_holes_after_merge+3
  5028  0503  1BF2               	btfsc	??_get_holes_after_merge+2,7
  5029  0504  03F3               	decf	??_get_holes_after_merge+3,f
  5030  0505  0870               	movf	??_get_holes_after_merge,w
  5031  0506  0772               	addwf	??_get_holes_after_merge+2,w
  5032  0507  00F4               	movwf	??_get_holes_after_merge+4
  5033  0508  0871               	movf	??_get_holes_after_merge+1,w
  5034  0509  1803               	skipnc
  5035  050A  0A71               	incf	??_get_holes_after_merge+1,w
  5036  050B  0773               	addwf	??_get_holes_after_merge+3,w
  5037  050C  00F5               	movwf	??_get_holes_after_merge+5
  5038  050D  0875               	movf	??_get_holes_after_merge+5,w
  5039  050E  3A80               	xorlw	128
  5040  050F  00FF               	movwf	127
  5041  0510  3080               	movlw	128
  5042  0511  027F               	subwf	127,w
  5043  0512  1D03               	skipz
  5044  0513  2D16               	goto	u3695
  5045  0514  3003               	movlw	3
  5046  0515  0274               	subwf	??_get_holes_after_merge+4,w
  5047  0516                     u3695:	
  5048  0516  1C03               	skipc
  5049  0517  2D1C               	goto	l432
  5050                           
  5051                           ;teris_16f886.c: 1026: {
  5052                           ;teris_16f886.c: 1032: num_hole++;
  5053  0518  3001               	movlw	1
  5054  0519  00F0               	movwf	??_get_holes_after_merge
  5055  051A  0870               	movf	??_get_holes_after_merge,w
  5056  051B  07F6               	addwf	get_holes_after_merge@num_hole,f
  5057  051C                     l432:	
  5058  051C  3001               	movlw	1
  5059  051D  00F0               	movwf	??_get_holes_after_merge
  5060  051E  0870               	movf	??_get_holes_after_merge,w
  5061  051F  07FA               	addwf	get_holes_after_merge@col,f
  5062  0520  087A               	movf	get_holes_after_merge@col,w
  5063  0521  3A80               	xorlw	128
  5064  0522  3E78               	addlw	-136
  5065  0523  1C03               	skipc
  5066  0524  2C26               	goto	l2906
  5067  0525                     l2968:	
  5068                           
  5069                           ;teris_16f886.c: 1033: }
  5070                           ;teris_16f886.c: 1034: }
  5071                           ;teris_16f886.c: 1038: return num_hole;
  5072  0525  0876               	movf	get_holes_after_merge@num_hole,w
  5073  0526  0008               	return
  5074  0527                     __end_of_get_holes_after_merge:	
  5075                           
  5076                           	psect	text18
  5077  0DF2                     __ptext18:	
  5078 ;; *************** function _get_high_after_merge *****************
  5079 ;; Defined at:
  5080 ;;		line 945 in file "teris_16f886.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  y               1    wreg     char 
  5083 ;;  matrix          2    0[COMMON] PTR struct .
  5084 ;;		 -> NULL(0), g_matrix44(384), 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  y               1    6[COMMON] char 
  5087 ;;  col             1    7[COMMON] char 
  5088 ;;  row             1    8[COMMON] char 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      unsigned char 
  5091 ;; Registers used:
  5092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5098 ;;      Params:         2       0       0       0       0
  5099 ;;      Locals:         3       0       0       0       0
  5100 ;;      Temps:          4       0       0       0       0
  5101 ;;      Totals:         9       0       0       0       0
  5102 ;;Total ram usage:        9 bytes
  5103 ;; Hardware stack levels used:    2
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_find_best_solution
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           
  5112                           ;psect for function _get_high_after_merge
  5113  0DF2                     _get_high_after_merge:	
  5114                           
  5115                           ;incstack = 0
  5116                           ; Regs used in _get_high_after_merge: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5117                           ;get_high_after_merge@y stored from wreg
  5118  0DF2  00F6               	movwf	get_high_after_merge@y
  5119                           
  5120                           ;teris_16f886.c: 950: for(int8_t row = 0; row < 4; row++)
  5121  0DF3  01F8               	clrf	get_high_after_merge@row
  5122  0DF4                     L6:	
  5123  0DF4  0878               	movf	get_high_after_merge@row,w
  5124  0DF5  3A80               	xorlw	128
  5125  0DF6  3E7C               	addlw	-132
  5126  0DF7  1803               	btfsc	3,0
  5127  0DF8  0008               	return
  5128                           
  5129                           ;teris_16f886.c: 951: {
  5130                           ;teris_16f886.c: 952: for(int8_t col = 0; col < 4; col++)
  5131  0DF9  01F7               	clrf	get_high_after_merge@col
  5132  0DFA  0877               	movf	get_high_after_merge@col,w
  5133  0DFB  3A80               	xorlw	128
  5134  0DFC  3E7C               	addlw	-132
  5135  0DFD  1803               	btfsc	3,0
  5136  0DFE  2E30               	goto	l2894
  5137  0DFF                     l2884:	
  5138                           
  5139                           ;teris_16f886.c: 953: {
  5140                           ;teris_16f886.c: 954: if(matrix->data[row][col] == 1)
  5141  0DFF  0878               	movf	get_high_after_merge@row,w
  5142  0E00  00F2               	movwf	??_get_high_after_merge
  5143  0E01  01F3               	clrf	??_get_high_after_merge+1
  5144  0E02  1003               	clrc
  5145  0E03  0DF2               	rlf	??_get_high_after_merge,f
  5146  0E04  0DF3               	rlf	??_get_high_after_merge+1,f
  5147  0E05  1003               	clrc
  5148  0E06  0DF2               	rlf	??_get_high_after_merge,f
  5149  0E07  0DF3               	rlf	??_get_high_after_merge+1,f
  5150  0E08  0872               	movf	??_get_high_after_merge,w
  5151  0E09  0770               	addwf	get_high_after_merge@matrix,w
  5152  0E0A  00F4               	movwf	??_get_high_after_merge+2
  5153  0E0B  0873               	movf	??_get_high_after_merge+1,w
  5154  0E0C  1803               	skipnc
  5155  0E0D  0A73               	incf	??_get_high_after_merge+1,w
  5156  0E0E  0771               	addwf	get_high_after_merge@matrix+1,w
  5157  0E0F  00F5               	movwf	??_get_high_after_merge+3
  5158  0E10  0877               	movf	get_high_after_merge@col,w
  5159  0E11  0774               	addwf	??_get_high_after_merge+2,w
  5160  0E12  0084               	movwf	4
  5161  0E13  0875               	movf	??_get_high_after_merge+3,w
  5162  0E14  1803               	skipnc
  5163  0E15  0A75               	incf	??_get_high_after_merge+3,w
  5164  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  5165  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  5166  0E18  00FF               	movwf	127
  5167  0E19  120A  158A  2000  120A  158A  	fcall	stringtab
  5168  0E1E  3A01               	xorlw	1
  5169  0E1F  1D03               	skipz
  5170  0E20  2E27               	goto	l2890
  5171                           
  5172                           ;teris_16f886.c: 955: {
  5173                           ;teris_16f886.c: 961: return (uint8_t)(8 - y - row);
  5174  0E21  0878               	movf	get_high_after_merge@row,w
  5175  0E22  0776               	addwf	get_high_after_merge@y,w
  5176  0E23  3AFF               	xorlw	255
  5177  0E24  3E01               	addlw	1
  5178  0E25  3E08               	addlw	8
  5179  0E26  0008               	return
  5180  0E27                     l2890:	
  5181  0E27  3001               	movlw	1
  5182  0E28  00F2               	movwf	??_get_high_after_merge
  5183  0E29  0872               	movf	??_get_high_after_merge,w
  5184  0E2A  07F7               	addwf	get_high_after_merge@col,f
  5185  0E2B  0877               	movf	get_high_after_merge@col,w
  5186  0E2C  3A80               	xorlw	128
  5187  0E2D  3E7C               	addlw	-132
  5188  0E2E  1C03               	skipc
  5189  0E2F  2DFF               	goto	l2884
  5190  0E30                     l2894:	
  5191  0E30  3001               	movlw	1
  5192  0E31  00F2               	movwf	??_get_high_after_merge
  5193  0E32  0872               	movf	??_get_high_after_merge,w
  5194  0E33  07F8               	addwf	get_high_after_merge@row,f
  5195  0E34  2DF4               	goto	L6
  5196  0E35                     __end_of_get_high_after_merge:	
  5197                           
  5198                           	psect	text19
  5199  0C9B                     __ptext19:	
  5200 ;; *************** function _get_high *****************
  5201 ;; Defined at:
  5202 ;;		line 931 in file "teris_16f886.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  matrix          1    wreg     PTR struct .
  5205 ;;		 -> g_matrix88(64), 
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  matrix          1    7[COMMON] PTR struct .
  5208 ;;		 -> g_matrix88(64), 
  5209 ;;  row             1    8[COMMON] char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      unsigned char 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5219 ;;      Params:         0       0       0       0       0
  5220 ;;      Locals:         2       0       0       0       0
  5221 ;;      Temps:          1       0       0       0       0
  5222 ;;      Totals:         3       0       0       0       0
  5223 ;;Total ram usage:        3 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    1
  5226 ;; This function calls:
  5227 ;;		_is_row_empty
  5228 ;; This function is called by:
  5229 ;;		_find_best_solution
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           
  5234                           ;psect for function _get_high
  5235  0C9B                     _get_high:	
  5236                           
  5237                           ;incstack = 0
  5238                           ; Regs used in _get_high: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5239                           ;get_high@matrix stored from wreg
  5240  0C9B  00F7               	movwf	get_high@matrix
  5241                           
  5242                           ;teris_16f886.c: 933: for(int8_t row = 8 - 1; row >= 0; row--)
  5243  0C9C  3007               	movlw	7
  5244  0C9D  00F6               	movwf	??_get_high
  5245  0C9E  0876               	movf	??_get_high,w
  5246  0C9F  00F8               	movwf	get_high@row
  5247  0CA0  1BF8               	btfsc	get_high@row,7
  5248  0CA1  2CBB               	goto	l2868
  5249  0CA2                     l2858:	
  5250                           
  5251                           ;teris_16f886.c: 934: {
  5252                           ;teris_16f886.c: 935: if(is_row_empty(matrix, row) == 1)
  5253  0CA2  0878               	movf	get_high@row,w
  5254  0CA3  00F6               	movwf	??_get_high
  5255  0CA4  0876               	movf	??_get_high,w
  5256  0CA5  00F0               	movwf	is_row_empty@row
  5257  0CA6  0877               	movf	get_high@matrix,w
  5258  0CA7  120A  158A  252F  120A  158A  	fcall	_is_row_empty
  5259  0CAC  3A01               	xorlw	1
  5260  0CAD  1D03               	skipz
  5261  0CAE  2CB5               	goto	l2864
  5262                           
  5263                           ;teris_16f886.c: 936: {
  5264                           ;teris_16f886.c: 940: return (uint8_t)(8 - row - 1);
  5265  0CAF  0878               	movf	get_high@row,w
  5266  0CB0  3E01               	addlw	1
  5267  0CB1  3AFF               	xorlw	255
  5268  0CB2  3E01               	addlw	1
  5269  0CB3  3E08               	addlw	8
  5270  0CB4  0008               	return
  5271  0CB5                     l2864:	
  5272  0CB5  30FF               	movlw	255
  5273  0CB6  00F6               	movwf	??_get_high
  5274  0CB7  0876               	movf	??_get_high,w
  5275  0CB8  07F8               	addwf	get_high@row,f
  5276  0CB9  1FF8               	btfss	get_high@row,7
  5277  0CBA  2CA2               	goto	l2858
  5278  0CBB                     l2868:	
  5279                           
  5280                           ;teris_16f886.c: 941: }
  5281                           ;teris_16f886.c: 942: }
  5282                           ;teris_16f886.c: 943: return 8;
  5283  0CBB  3008               	movlw	8
  5284  0CBC  0008               	return
  5285  0CBD                     __end_of_get_high:	
  5286                           
  5287                           	psect	text20
  5288  0D2F                     __ptext20:	
  5289 ;; *************** function _is_row_empty *****************
  5290 ;; Defined at:
  5291 ;;		line 647 in file "teris_16f886.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  matrix          1    wreg     PTR const struct .
  5294 ;;		 -> g_matrix88(64), 
  5295 ;;  row             1    0[COMMON] unsigned char 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  matrix          1    4[COMMON] PTR const struct .
  5298 ;;		 -> g_matrix88(64), 
  5299 ;;  col             1    5[COMMON] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      unsigned char 
  5302 ;; Registers used:
  5303 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5309 ;;      Params:         1       0       0       0       0
  5310 ;;      Locals:         2       0       0       0       0
  5311 ;;      Temps:          3       0       0       0       0
  5312 ;;      Totals:         6       0       0       0       0
  5313 ;;Total ram usage:        6 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; This function calls:
  5316 ;;		Nothing
  5317 ;; This function is called by:
  5318 ;;		_get_high
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           
  5323                           ;psect for function _is_row_empty
  5324  0D2F                     _is_row_empty:	
  5325                           
  5326                           ;incstack = 0
  5327                           ; Regs used in _is_row_empty: [wreg-fsr0h+status,2+status,0]
  5328                           ;is_row_empty@matrix stored from wreg
  5329  0D2F  00F4               	movwf	is_row_empty@matrix
  5330                           
  5331                           ;teris_16f886.c: 649: for(uint8_t col = 0; col < 8; col++)
  5332  0D30  01F5               	clrf	is_row_empty@col
  5333  0D31  3008               	movlw	8
  5334  0D32  0275               	subwf	is_row_empty@col,w
  5335  0D33  1803               	btfsc	3,0
  5336  0D34  2D54               	goto	l2574
  5337  0D35                     l2564:	
  5338                           
  5339                           ;teris_16f886.c: 650: {
  5340                           ;teris_16f886.c: 651: if(matrix->data[row][col] == 1)
  5341  0D35  0870               	movf	is_row_empty@row,w
  5342  0D36  00F1               	movwf	??_is_row_empty
  5343  0D37  3002               	movlw	2
  5344  0D38                     u2675:	
  5345  0D38  1003               	clrc
  5346  0D39  0DF1               	rlf	??_is_row_empty,f
  5347  0D3A  3EFF               	addlw	-1
  5348  0D3B  1D03               	skipz
  5349  0D3C  2D38               	goto	u2675
  5350  0D3D  1003               	clrc
  5351  0D3E  0D71               	rlf	??_is_row_empty,w
  5352  0D3F  0774               	addwf	is_row_empty@matrix,w
  5353  0D40  00F2               	movwf	??_is_row_empty+1
  5354  0D41  0875               	movf	is_row_empty@col,w
  5355  0D42  0772               	addwf	??_is_row_empty+1,w
  5356  0D43  00F3               	movwf	??_is_row_empty+2
  5357  0D44  0873               	movf	??_is_row_empty+2,w
  5358  0D45  0084               	movwf	4
  5359  0D46  1783               	bsf	3,7	;select IRP bank2
  5360  0D47  0300               	decf	0,w
  5361  0D48  1D03               	btfss	3,2
  5362  0D49  2D4C               	goto	l2570
  5363                           
  5364                           ;teris_16f886.c: 652: {
  5365                           ;teris_16f886.c: 653: return 0;
  5366  0D4A  3000               	movlw	0
  5367  0D4B  0008               	return
  5368  0D4C                     l2570:	
  5369  0D4C  3001               	movlw	1
  5370  0D4D  00F1               	movwf	??_is_row_empty
  5371  0D4E  0871               	movf	??_is_row_empty,w
  5372  0D4F  07F5               	addwf	is_row_empty@col,f
  5373  0D50  3008               	movlw	8
  5374  0D51  0275               	subwf	is_row_empty@col,w
  5375  0D52  1C03               	skipc
  5376  0D53  2D35               	goto	l2564
  5377  0D54                     l2574:	
  5378                           
  5379                           ;teris_16f886.c: 654: }
  5380                           ;teris_16f886.c: 655: }
  5381                           ;teris_16f886.c: 656: return 1;
  5382  0D54  3001               	movlw	1
  5383  0D55  0008               	return
  5384  0D56                     __end_of_is_row_empty:	
  5385                           
  5386                           	psect	text21
  5387  0313                     __ptext21:	
  5388 ;; *************** function _fall_off *****************
  5389 ;; Defined at:
  5390 ;;		line 788 in file "teris_16f886.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  x               1    wreg     char 
  5393 ;;  y               1    0[COMMON] char 
  5394 ;;  matrix44        2    1[COMMON] PTR const struct .
  5395 ;;		 -> NULL(0), g_matrix44(384), 
  5396 ;;  matrix88        1    3[COMMON] PTR const struct .
  5397 ;;		 -> g_matrix88(64), 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  x               1    8[COMMON] char 
  5400 ;;  col             1    9[COMMON] char 
  5401 ;;  row             1   10[COMMON] char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      unsigned char 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5411 ;;      Params:         4       0       0       0       0
  5412 ;;      Locals:         3       0       0       0       0
  5413 ;;      Temps:          4       0       0       0       0
  5414 ;;      Totals:        11       0       0       0       0
  5415 ;;Total ram usage:       11 bytes
  5416 ;; Hardware stack levels used:    2
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		_find_best_solution
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           
  5425                           ;psect for function _fall_off
  5426  0313                     _fall_off:	
  5427                           
  5428                           ;incstack = 0
  5429                           ; Regs used in _fall_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5430                           ;fall_off@x stored from wreg
  5431  0313  00F8               	movwf	fall_off@x
  5432  0314                     l333:	
  5433                           ;teris_16f886.c: 790: while(1)
  5434                           
  5435                           
  5436                           ;teris_16f886.c: 791: {
  5437                           ;teris_16f886.c: 792: for(int8_t row = 4 - 1; row >= 0; row--)
  5438  0314  3003               	movlw	3
  5439  0315  00F4               	movwf	??_fall_off
  5440  0316  0874               	movf	??_fall_off,w
  5441  0317  00FA               	movwf	fall_off@row
  5442  0318  1BFA               	btfsc	fall_off@row,7
  5443  0319  2B82               	goto	l2760
  5444  031A                     l2732:	
  5445                           
  5446                           ;teris_16f886.c: 793: {
  5447                           ;teris_16f886.c: 794: for(int8_t col = 0; col < 4; col++)
  5448  031A  01F9               	clrf	fall_off@col
  5449  031B  0879               	movf	fall_off@col,w
  5450  031C  3A80               	xorlw	128
  5451  031D  3E7C               	addlw	-132
  5452  031E  1803               	btfsc	3,0
  5453  031F  2B7C               	goto	l2756
  5454  0320                     l2738:	
  5455                           
  5456                           ;teris_16f886.c: 795: {
  5457                           ;teris_16f886.c: 796: if(matrix44->data[row][col] == 1)
  5458  0320  087A               	movf	fall_off@row,w
  5459  0321  00F4               	movwf	??_fall_off
  5460  0322  01F5               	clrf	??_fall_off+1
  5461  0323  1003               	clrc
  5462  0324  0DF4               	rlf	??_fall_off,f
  5463  0325  0DF5               	rlf	??_fall_off+1,f
  5464  0326  1003               	clrc
  5465  0327  0DF4               	rlf	??_fall_off,f
  5466  0328  0DF5               	rlf	??_fall_off+1,f
  5467  0329  0874               	movf	??_fall_off,w
  5468  032A  0771               	addwf	fall_off@matrix44,w
  5469  032B  00F6               	movwf	??_fall_off+2
  5470  032C  0875               	movf	??_fall_off+1,w
  5471  032D  1803               	skipnc
  5472  032E  0A75               	incf	??_fall_off+1,w
  5473  032F  0772               	addwf	fall_off@matrix44+1,w
  5474  0330  00F7               	movwf	??_fall_off+3
  5475  0331  0879               	movf	fall_off@col,w
  5476  0332  0776               	addwf	??_fall_off+2,w
  5477  0333  0084               	movwf	4
  5478  0334  0877               	movf	??_fall_off+3,w
  5479  0335  1803               	skipnc
  5480  0336  0A77               	incf	??_fall_off+3,w
  5481  0337  1283               	bcf	3,5	;RP0=0, select bank0
  5482  0338  1303               	bcf	3,6	;RP1=0, select bank0
  5483  0339  00FF               	movwf	127
  5484  033A  120A  158A  2000  120A  118A  	fcall	stringtab
  5485  033F  3A01               	xorlw	1
  5486  0340  1D03               	skipz
  5487  0341  2B73               	goto	l2752
  5488                           
  5489                           ;teris_16f886.c: 797: {
  5490                           ;teris_16f886.c: 798: if(matrix88->data[y + row + 1][x + col] == 1)
  5491  0342  0879               	movf	fall_off@col,w
  5492  0343  0778               	addwf	fall_off@x,w
  5493  0344  0773               	addwf	fall_off@matrix88,w
  5494  0345  00F4               	movwf	??_fall_off
  5495  0346  087A               	movf	fall_off@row,w
  5496  0347  0770               	addwf	fall_off@y,w
  5497  0348  00F5               	movwf	??_fall_off+1
  5498  0349  3002               	movlw	2
  5499  034A                     u3065:	
  5500  034A  1003               	clrc
  5501  034B  0DF5               	rlf	??_fall_off+1,f
  5502  034C  3EFF               	addlw	-1
  5503  034D  1D03               	skipz
  5504  034E  2B4A               	goto	u3065
  5505  034F  1003               	clrc
  5506  0350  0D75               	rlf	??_fall_off+1,w
  5507  0351  3E08               	addlw	8
  5508  0352  0774               	addwf	??_fall_off,w
  5509  0353  00F6               	movwf	??_fall_off+2
  5510  0354  0876               	movf	??_fall_off+2,w
  5511  0355  0084               	movwf	4
  5512  0356  1783               	bsf	3,7	;select IRP bank2
  5513  0357  0300               	decf	0,w
  5514  0358  1D03               	btfss	3,2
  5515  0359  2B5C               	goto	l2746
  5516                           
  5517                           ;teris_16f886.c: 799: {
  5518                           ;teris_16f886.c: 804: return y;
  5519  035A  0870               	movf	fall_off@y,w
  5520  035B  0008               	return
  5521  035C                     l2746:	
  5522                           
  5523                           ;teris_16f886.c: 805: }
  5524                           ;teris_16f886.c: 806: if((y + row) >= (8 - 1))
  5525  035C  0870               	movf	fall_off@y,w
  5526  035D  077A               	addwf	fall_off@row,w
  5527  035E  00F4               	movwf	??_fall_off
  5528  035F  01F5               	clrf	??_fall_off+1
  5529  0360  1803               	skipnc
  5530  0361  0AF5               	incf	??_fall_off+1,f
  5531  0362  1BF0               	btfsc	fall_off@y,7
  5532  0363  03F5               	decf	??_fall_off+1,f
  5533  0364  1BFA               	btfsc	fall_off@row,7
  5534  0365  03F5               	decf	??_fall_off+1,f
  5535  0366  0875               	movf	??_fall_off+1,w
  5536  0367  3A80               	xorlw	128
  5537  0368  00FF               	movwf	127
  5538  0369  3080               	movlw	128
  5539  036A  027F               	subwf	127,w
  5540  036B  1D03               	skipz
  5541  036C  2B6F               	goto	u3095
  5542  036D  3007               	movlw	7
  5543  036E  0274               	subwf	??_fall_off,w
  5544  036F                     u3095:	
  5545  036F  1C03               	skipc
  5546  0370  2B73               	goto	l2752
  5547                           
  5548                           ;teris_16f886.c: 807: {
  5549                           ;teris_16f886.c: 812: return y;
  5550  0371  0870               	movf	fall_off@y,w
  5551  0372  0008               	return
  5552  0373                     l2752:	
  5553  0373  3001               	movlw	1
  5554  0374  00F4               	movwf	??_fall_off
  5555  0375  0874               	movf	??_fall_off,w
  5556  0376  07F9               	addwf	fall_off@col,f
  5557  0377  0879               	movf	fall_off@col,w
  5558  0378  3A80               	xorlw	128
  5559  0379  3E7C               	addlw	-132
  5560  037A  1C03               	skipc
  5561  037B  2B20               	goto	l2738
  5562  037C                     l2756:	
  5563  037C  30FF               	movlw	255
  5564  037D  00F4               	movwf	??_fall_off
  5565  037E  0874               	movf	??_fall_off,w
  5566  037F  07FA               	addwf	fall_off@row,f
  5567  0380  1FFA               	btfss	fall_off@row,7
  5568  0381  2B1A               	goto	l2732
  5569  0382                     l2760:	
  5570                           
  5571                           ;teris_16f886.c: 813: }
  5572                           ;teris_16f886.c: 814: }
  5573                           ;teris_16f886.c: 815: }
  5574                           ;teris_16f886.c: 816: }
  5575                           ;teris_16f886.c: 817: y++;
  5576  0382  3001               	movlw	1
  5577  0383  00F4               	movwf	??_fall_off
  5578  0384  0874               	movf	??_fall_off,w
  5579  0385  07F0               	addwf	fall_off@y,f
  5580  0386  2B14               	goto	l333
  5581  0387                     __end_of_fall_off:	
  5582                           
  5583                           	psect	text22
  5584  02A1                     __ptext22:	
  5585 ;; *************** function _evaluate *****************
  5586 ;; Defined at:
  5587 ;;		line 867 in file "teris_16f886.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  matrix          1    wreg     PTR const struct .
  5590 ;;		 -> temp_matrix88(64), 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  matrix          1    9[COMMON] PTR const struct .
  5593 ;;		 -> temp_matrix88(64), 
  5594 ;;  row             1   11[COMMON] char 
  5595 ;;  col             1   10[COMMON] unsigned char 
  5596 ;;  risk            2    6[COMMON] unsigned int 
  5597 ;;  full            1    8[COMMON] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  2    0[COMMON] unsigned int 
  5600 ;; Registers used:
  5601 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5607 ;;      Params:         2       0       0       0       0
  5608 ;;      Locals:         6       0       0       0       0
  5609 ;;      Temps:          4       0       0       0       0
  5610 ;;      Totals:        12       0       0       0       0
  5611 ;;Total ram usage:       12 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_find_best_solution
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           
  5621                           ;psect for function _evaluate
  5622  02A1                     _evaluate:	
  5623                           
  5624                           ;incstack = 0
  5625                           ; Regs used in _evaluate: [wreg-fsr0h+status,2+status,0]
  5626                           ;evaluate@matrix stored from wreg
  5627  02A1  00F9               	movwf	evaluate@matrix
  5628                           
  5629                           ;teris_16f886.c: 869: uint16_t risk = 0;
  5630  02A2  01F6               	clrf	evaluate@risk
  5631  02A3  01F7               	clrf	evaluate@risk+1
  5632                           
  5633                           ;teris_16f886.c: 870: uint8_t full = 0xFF;
  5634  02A4  30FF               	movlw	255
  5635  02A5  00F2               	movwf	??_evaluate
  5636  02A6  0872               	movf	??_evaluate,w
  5637  02A7  00F8               	movwf	evaluate@full
  5638                           
  5639                           ;teris_16f886.c: 871: for(uint8_t col = 0; col < 8; col++)
  5640  02A8  01FA               	clrf	evaluate@col
  5641  02A9  3008               	movlw	8
  5642  02AA  027A               	subwf	evaluate@col,w
  5643  02AB  1803               	btfsc	3,0
  5644  02AC  2B0E               	goto	l2824
  5645  02AD                     l2798:	
  5646                           
  5647                           ;teris_16f886.c: 872: {
  5648                           ;teris_16f886.c: 873: full = 0xFF;
  5649  02AD  30FF               	movlw	255
  5650  02AE  00F2               	movwf	??_evaluate
  5651  02AF  0872               	movf	??_evaluate,w
  5652  02B0  00F8               	movwf	evaluate@full
  5653                           
  5654                           ;teris_16f886.c: 874: for(int8_t row = 8 - 1; row >= 0; row--)
  5655  02B1  3007               	movlw	7
  5656  02B2  00F2               	movwf	??_evaluate
  5657  02B3  0872               	movf	??_evaluate,w
  5658  02B4  00FB               	movwf	evaluate@row
  5659  02B5  1BFB               	btfsc	evaluate@row,7
  5660  02B6  2B06               	goto	l2820
  5661  02B7                     l2804:	
  5662                           
  5663                           ;teris_16f886.c: 875: {
  5664                           ;teris_16f886.c: 876: if(full == 0xFF)
  5665  02B7  0A78               	incf	evaluate@full,w
  5666  02B8  1D03               	btfss	3,2
  5667  02B9  2ACD               	goto	l2808
  5668                           
  5669                           ;teris_16f886.c: 877: {
  5670                           ;teris_16f886.c: 878: full = matrix->data[row][col];
  5671  02BA  087B               	movf	evaluate@row,w
  5672  02BB  00F2               	movwf	??_evaluate
  5673  02BC  3002               	movlw	2
  5674  02BD                     u3215:	
  5675  02BD  1003               	clrc
  5676  02BE  0DF2               	rlf	??_evaluate,f
  5677  02BF  3EFF               	addlw	-1
  5678  02C0  1D03               	skipz
  5679  02C1  2ABD               	goto	u3215
  5680  02C2  1003               	clrc
  5681  02C3  0D72               	rlf	??_evaluate,w
  5682  02C4  0779               	addwf	evaluate@matrix,w
  5683  02C5  00F3               	movwf	??_evaluate+1
  5684  02C6  087A               	movf	evaluate@col,w
  5685  02C7  0773               	addwf	??_evaluate+1,w
  5686  02C8  00F4               	movwf	??_evaluate+2
  5687  02C9  0874               	movf	??_evaluate+2,w
  5688  02CA  0084               	movwf	4
  5689  02CB  1783               	bsf	3,7	;select IRP bank2
  5690  02CC  2AFC               	goto	L7
  5691  02CD                     l2808:	
  5692                           ;teris_16f886.c: 879: }
  5693                           
  5694                           
  5695                           ;teris_16f886.c: 880: else
  5696                           ;teris_16f886.c: 881: {
  5697                           ;teris_16f886.c: 882: if(matrix->data[row][col] == 1)
  5698  02CD  087B               	movf	evaluate@row,w
  5699  02CE  00F2               	movwf	??_evaluate
  5700  02CF  3002               	movlw	2
  5701  02D0                     u3225:	
  5702  02D0  1003               	clrc
  5703  02D1  0DF2               	rlf	??_evaluate,f
  5704  02D2  3EFF               	addlw	-1
  5705  02D3  1D03               	skipz
  5706  02D4  2AD0               	goto	u3225
  5707  02D5  1003               	clrc
  5708  02D6  0D72               	rlf	??_evaluate,w
  5709  02D7  0779               	addwf	evaluate@matrix,w
  5710  02D8  00F3               	movwf	??_evaluate+1
  5711  02D9  087A               	movf	evaluate@col,w
  5712  02DA  0773               	addwf	??_evaluate+1,w
  5713  02DB  00F4               	movwf	??_evaluate+2
  5714  02DC  0874               	movf	??_evaluate+2,w
  5715  02DD  0084               	movwf	4
  5716  02DE  1783               	bsf	3,7	;select IRP bank2
  5717  02DF  0300               	decf	0,w
  5718  02E0  1D03               	btfss	3,2
  5719  02E1  2AEB               	goto	l2814
  5720                           
  5721                           ;teris_16f886.c: 883: {
  5722                           ;teris_16f886.c: 884: if(full == 0)
  5723  02E2  0878               	movf	evaluate@full,w
  5724  02E3  1D03               	btfss	3,2
  5725  02E4  2AEB               	goto	l2814
  5726                           
  5727                           ;teris_16f886.c: 885: {
  5728                           ;teris_16f886.c: 886: risk++;
  5729  02E5  3001               	movlw	1
  5730  02E6  07F6               	addwf	evaluate@risk,f
  5731  02E7  1803               	skipnc
  5732  02E8  0AF7               	incf	evaluate@risk+1,f
  5733  02E9  3000               	movlw	0
  5734  02EA  07F7               	addwf	evaluate@risk+1,f
  5735  02EB                     l2814:	
  5736                           
  5737                           ;teris_16f886.c: 887: }
  5738                           ;teris_16f886.c: 888: }
  5739                           ;teris_16f886.c: 889: full = matrix->data[row][col];
  5740  02EB  087B               	movf	evaluate@row,w
  5741  02EC  00F2               	movwf	??_evaluate
  5742  02ED  3002               	movlw	2
  5743  02EE                     u3255:	
  5744  02EE  1003               	clrc
  5745  02EF  0DF2               	rlf	??_evaluate,f
  5746  02F0  3EFF               	addlw	-1
  5747  02F1  1D03               	skipz
  5748  02F2  2AEE               	goto	u3255
  5749  02F3  1003               	clrc
  5750  02F4  0D72               	rlf	??_evaluate,w
  5751  02F5  0779               	addwf	evaluate@matrix,w
  5752  02F6  00F3               	movwf	??_evaluate+1
  5753  02F7  087A               	movf	evaluate@col,w
  5754  02F8  0773               	addwf	??_evaluate+1,w
  5755  02F9  00F4               	movwf	??_evaluate+2
  5756  02FA  0874               	movf	??_evaluate+2,w
  5757  02FB  0084               	movwf	4
  5758  02FC                     L7:	
  5759  02FC  0800               	movf	0,w
  5760  02FD  00F5               	movwf	??_evaluate+3
  5761  02FE  0875               	movf	??_evaluate+3,w
  5762  02FF  00F8               	movwf	evaluate@full
  5763  0300  30FF               	movlw	255
  5764  0301  00F2               	movwf	??_evaluate
  5765  0302  0872               	movf	??_evaluate,w
  5766  0303  07FB               	addwf	evaluate@row,f
  5767  0304  1FFB               	btfss	evaluate@row,7
  5768  0305  2AB7               	goto	l2804
  5769  0306                     l2820:	
  5770  0306  3001               	movlw	1
  5771  0307  00F2               	movwf	??_evaluate
  5772  0308  0872               	movf	??_evaluate,w
  5773  0309  07FA               	addwf	evaluate@col,f
  5774  030A  3008               	movlw	8
  5775  030B  027A               	subwf	evaluate@col,w
  5776  030C  1C03               	skipc
  5777  030D  2AAD               	goto	l2798
  5778  030E                     l2824:	
  5779                           
  5780                           ;teris_16f886.c: 890: }
  5781                           ;teris_16f886.c: 891: }
  5782                           ;teris_16f886.c: 892: }
  5783                           ;teris_16f886.c: 897: return risk;
  5784  030E  0877               	movf	evaluate@risk+1,w
  5785  030F  00F1               	movwf	?_evaluate+1
  5786  0310  0876               	movf	evaluate@risk,w
  5787  0311  00F0               	movwf	?_evaluate
  5788  0312  0008               	return
  5789  0313                     __end_of_evaluate:	
  5790                           
  5791                           	psect	text23
  5792  0D80                     __ptext23:	
  5793 ;; *************** function _delete_matrix *****************
  5794 ;; Defined at:
  5795 ;;		line 625 in file "teris_16f886.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  matrix          1    wreg     PTR struct .
  5798 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  matrix          1    5[BANK0 ] PTR struct .
  5801 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5802 ;;  row             1    6[BANK0 ] char 
  5803 ;;  count           1    4[BANK0 ] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      unsigned char 
  5806 ;; Registers used:
  5807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5813 ;;      Params:         0       0       0       0       0
  5814 ;;      Locals:         0       3       0       0       0
  5815 ;;      Temps:          1       0       0       0       0
  5816 ;;      Totals:         1       3       0       0       0
  5817 ;;Total ram usage:        4 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    2
  5820 ;; This function calls:
  5821 ;;		_delete_row
  5822 ;;		_is_row_full
  5823 ;; This function is called by:
  5824 ;;		_find_best_solution
  5825 ;;		_main
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           
  5830                           ;psect for function _delete_matrix
  5831  0D80                     _delete_matrix:	
  5832                           
  5833                           ;incstack = 0
  5834                           ; Regs used in _delete_matrix: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5835                           ;delete_matrix@matrix stored from wreg
  5836  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  5837  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  5838  0D82  00A5               	movwf	delete_matrix@matrix
  5839                           
  5840                           ;teris_16f886.c: 627: uint8_t count = 0;
  5841  0D83  01A4               	clrf	delete_matrix@count
  5842                           
  5843                           ;teris_16f886.c: 628: int8_t row = 8 - 1;
  5844  0D84  3007               	movlw	7
  5845  0D85  00FB               	movwf	??_delete_matrix
  5846  0D86  087B               	movf	??_delete_matrix,w
  5847  0D87  00A6               	movwf	delete_matrix@row
  5848  0D88                     l2674:	
  5849                           ;teris_16f886.c: 629: while(row >= 0)
  5850                           
  5851  0D88  1BA6               	btfsc	delete_matrix@row,7
  5852  0D89  2DB1               	goto	l2676
  5853                           
  5854                           ;teris_16f886.c: 630: {
  5855                           ;teris_16f886.c: 631: if(is_row_full(matrix, row))
  5856  0D8A  0826               	movf	delete_matrix@row,w
  5857  0D8B  00FB               	movwf	??_delete_matrix
  5858  0D8C  087B               	movf	??_delete_matrix,w
  5859  0D8D  00F0               	movwf	is_row_full@row
  5860  0D8E  0825               	movf	delete_matrix@matrix,w
  5861  0D8F  120A  158A  2508  120A  158A  	fcall	_is_row_full
  5862  0D94  3A00               	xorlw	0
  5863  0D95  1903               	skipnz
  5864  0D96  2DAA               	goto	l2672
  5865                           
  5866                           ;teris_16f886.c: 632: {
  5867                           ;teris_16f886.c: 633: delete_row(matrix, row);
  5868  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  5869  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  5870  0D99  0826               	movf	delete_matrix@row,w
  5871  0D9A  00FB               	movwf	??_delete_matrix
  5872  0D9B  087B               	movf	??_delete_matrix,w
  5873  0D9C  00F7               	movwf	delete_row@row
  5874  0D9D  0825               	movf	delete_matrix@matrix,w
  5875  0D9E  120A  118A  215E  120A  158A  	fcall	_delete_row
  5876                           
  5877                           ;teris_16f886.c: 634: count++;
  5878  0DA3  3001               	movlw	1
  5879  0DA4  00FB               	movwf	??_delete_matrix
  5880  0DA5  087B               	movf	??_delete_matrix,w
  5881  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  5882  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  5883  0DA8  07A4               	addwf	delete_matrix@count,f
  5884                           
  5885                           ;teris_16f886.c: 635: }
  5886  0DA9  2D88               	goto	l2674
  5887  0DAA                     l2672:	
  5888                           
  5889                           ;teris_16f886.c: 636: else
  5890                           ;teris_16f886.c: 637: {
  5891                           ;teris_16f886.c: 638: row--;
  5892  0DAA  30FF               	movlw	255
  5893  0DAB  00FB               	movwf	??_delete_matrix
  5894  0DAC  087B               	movf	??_delete_matrix,w
  5895  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  5896  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  5897  0DAF  07A6               	addwf	delete_matrix@row,f
  5898  0DB0  2D88               	goto	l2674
  5899  0DB1                     l2676:	
  5900                           
  5901                           ;teris_16f886.c: 639: }
  5902                           ;teris_16f886.c: 640: }
  5903                           ;teris_16f886.c: 644: return count;
  5904  0DB1  0824               	movf	delete_matrix@count,w
  5905  0DB2  0008               	return
  5906  0DB3                     __end_of_delete_matrix:	
  5907                           
  5908                           	psect	text24
  5909  0D08                     __ptext24:	
  5910 ;; *************** function _is_row_full *****************
  5911 ;; Defined at:
  5912 ;;		line 591 in file "teris_16f886.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  matrix          1    wreg     PTR const struct .
  5915 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5916 ;;  row             1    0[COMMON] unsigned char 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  matrix          1    4[COMMON] PTR const struct .
  5919 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5920 ;;  col             1    5[COMMON] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      unsigned char 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5930 ;;      Params:         1       0       0       0       0
  5931 ;;      Locals:         2       0       0       0       0
  5932 ;;      Temps:          3       0       0       0       0
  5933 ;;      Totals:         6       0       0       0       0
  5934 ;;Total ram usage:        6 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_delete_matrix
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           
  5944                           ;psect for function _is_row_full
  5945  0D08                     _is_row_full:	
  5946                           
  5947                           ;incstack = 0
  5948                           ; Regs used in _is_row_full: [wreg-fsr0h+status,2+status,0]
  5949                           ;is_row_full@matrix stored from wreg
  5950  0D08  00F4               	movwf	is_row_full@matrix
  5951                           
  5952                           ;teris_16f886.c: 593: for(uint8_t col = 0; col < 8; col++)
  5953  0D09  01F5               	clrf	is_row_full@col
  5954  0D0A  3008               	movlw	8
  5955  0D0B  0275               	subwf	is_row_full@col,w
  5956  0D0C  1803               	btfsc	3,0
  5957  0D0D  2D2D               	goto	l2534
  5958  0D0E                     l2524:	
  5959                           
  5960                           ;teris_16f886.c: 594: {
  5961                           ;teris_16f886.c: 595: if(matrix->data[row][col] == 0)
  5962  0D0E  0870               	movf	is_row_full@row,w
  5963  0D0F  00F1               	movwf	??_is_row_full
  5964  0D10  3002               	movlw	2
  5965  0D11                     u2565:	
  5966  0D11  1003               	clrc
  5967  0D12  0DF1               	rlf	??_is_row_full,f
  5968  0D13  3EFF               	addlw	-1
  5969  0D14  1D03               	skipz
  5970  0D15  2D11               	goto	u2565
  5971  0D16  1003               	clrc
  5972  0D17  0D71               	rlf	??_is_row_full,w
  5973  0D18  0774               	addwf	is_row_full@matrix,w
  5974  0D19  00F2               	movwf	??_is_row_full+1
  5975  0D1A  0875               	movf	is_row_full@col,w
  5976  0D1B  0772               	addwf	??_is_row_full+1,w
  5977  0D1C  00F3               	movwf	??_is_row_full+2
  5978  0D1D  0873               	movf	??_is_row_full+2,w
  5979  0D1E  0084               	movwf	4
  5980  0D1F  1783               	bsf	3,7	;select IRP bank2
  5981  0D20  0800               	movf	0,w
  5982  0D21  1D03               	btfss	3,2
  5983  0D22  2D25               	goto	l2530
  5984                           
  5985                           ;teris_16f886.c: 596: {
  5986                           ;teris_16f886.c: 597: return 0;
  5987  0D23  3000               	movlw	0
  5988  0D24  0008               	return
  5989  0D25                     l2530:	
  5990  0D25  3001               	movlw	1
  5991  0D26  00F1               	movwf	??_is_row_full
  5992  0D27  0871               	movf	??_is_row_full,w
  5993  0D28  07F5               	addwf	is_row_full@col,f
  5994  0D29  3008               	movlw	8
  5995  0D2A  0275               	subwf	is_row_full@col,w
  5996  0D2B  1C03               	skipc
  5997  0D2C  2D0E               	goto	l2524
  5998  0D2D                     l2534:	
  5999                           
  6000                           ;teris_16f886.c: 598: }
  6001                           ;teris_16f886.c: 599: }
  6002                           ;teris_16f886.c: 600: return 1;
  6003  0D2D  3001               	movlw	1
  6004  0D2E  0008               	return
  6005  0D2F                     __end_of_is_row_full:	
  6006                           
  6007                           	psect	text25
  6008  015E                     __ptext25:	
  6009 ;; *************** function _delete_row *****************
  6010 ;; Defined at:
  6011 ;;		line 602 in file "teris_16f886.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  matrix          1    wreg     PTR struct .
  6014 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  6015 ;;  row             1    7[COMMON] unsigned char 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;  matrix          1    2[BANK0 ] PTR struct .
  6018 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  6019 ;;  len             2    0[BANK0 ] unsigned int 
  6020 ;;  i               1    3[BANK0 ] char 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6030 ;;      Params:         1       0       0       0       0
  6031 ;;      Locals:         0       4       0       0       0
  6032 ;;      Temps:          3       0       0       0       0
  6033 ;;      Totals:         4       4       0       0       0
  6034 ;;Total ram usage:        8 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    1
  6037 ;; This function calls:
  6038 ;;		_memcpy
  6039 ;;		_memset
  6040 ;; This function is called by:
  6041 ;;		_delete_matrix
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           
  6046                           ;psect for function _delete_row
  6047  015E                     _delete_row:	
  6048                           
  6049                           ;incstack = 0
  6050                           ; Regs used in _delete_row: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6051                           ;delete_row@matrix stored from wreg
  6052  015E  1283               	bcf	3,5	;RP0=0, select bank0
  6053  015F  1303               	bcf	3,6	;RP1=0, select bank0
  6054  0160  00A2               	movwf	delete_row@matrix
  6055                           
  6056                           ;teris_16f886.c: 604: for(int8_t i = 8 - 1; i >= 0; i--)
  6057  0161  3007               	movlw	7
  6058  0162  00F8               	movwf	??_delete_row
  6059  0163  0878               	movf	??_delete_row,w
  6060  0164  00A3               	movwf	delete_row@i
  6061  0165                     L8:	
  6062  0165  1BA3               	btfsc	delete_row@i,7
  6063  0166  0008               	return
  6064                           
  6065                           ;teris_16f886.c: 605: {
  6066                           ;teris_16f886.c: 606: if(i <= row)
  6067  0167  0823               	movf	delete_row@i,w
  6068  0168  00F8               	movwf	??_delete_row
  6069  0169  01F9               	clrf	??_delete_row+1
  6070  016A  1BF8               	btfsc	??_delete_row,7
  6071  016B  03F9               	decf	??_delete_row+1,f
  6072  016C  0879               	movf	??_delete_row+1,w
  6073  016D  3A80               	xorlw	128
  6074  016E  3C80               	sublw	128
  6075  016F  1D03               	skipz
  6076  0170  2973               	goto	u2605
  6077  0171  0878               	movf	??_delete_row,w
  6078  0172  0277               	subwf	delete_row@row,w
  6079  0173                     u2605:	
  6080  0173  1C03               	skipc
  6081  0174  29BD               	goto	l2554
  6082                           
  6083                           ;teris_16f886.c: 607: {
  6084                           ;teris_16f886.c: 608: if(i > 0)
  6085  0175  1283               	bcf	3,5	;RP0=0, select bank0
  6086  0176  1303               	bcf	3,6	;RP1=0, select bank0
  6087  0177  0823               	movf	delete_row@i,w
  6088  0178  3A80               	xorlw	128
  6089  0179  3E7F               	addlw	-129
  6090  017A  1C03               	skipc
  6091  017B  29A4               	goto	l2552
  6092                           
  6093                           ;teris_16f886.c: 609: {
  6094                           ;teris_16f886.c: 613: register size_t len;
  6095                           ;teris_16f886.c: 615: len = 8*sizeof(uint8_t);
  6096  017C  3008               	movlw	8
  6097  017D  00A0               	movwf	delete_row@len
  6098  017E  3000               	movlw	0
  6099  017F  00A1               	movwf	delete_row@len+1
  6100                           
  6101                           ;teris_16f886.c: 616: memcpy(matrix->data[i], matrix->data[i - 1], len);
  6102  0180  0823               	movf	delete_row@i,w
  6103  0181  00F8               	movwf	??_delete_row
  6104  0182  3002               	movlw	2
  6105  0183                     u2625:	
  6106  0183  1003               	clrc
  6107  0184  0DF8               	rlf	??_delete_row,f
  6108  0185  3EFF               	addlw	-1
  6109  0186  1D03               	skipz
  6110  0187  2983               	goto	u2625
  6111  0188  1003               	clrc
  6112  0189  0D78               	rlf	??_delete_row,w
  6113  018A  3EF8               	addlw	248
  6114  018B  0722               	addwf	delete_row@matrix,w
  6115  018C  00F9               	movwf	??_delete_row+1
  6116  018D  0879               	movf	??_delete_row+1,w
  6117  018E  00F0               	movwf	memcpy@s1
  6118  018F  0821               	movf	delete_row@len+1,w
  6119  0190  00F2               	movwf	memcpy@n+1
  6120  0191  0820               	movf	delete_row@len,w
  6121  0192  00F1               	movwf	memcpy@n
  6122  0193  0823               	movf	delete_row@i,w
  6123  0194  00FA               	movwf	??_delete_row+2
  6124  0195  3002               	movlw	2
  6125  0196                     u2635:	
  6126  0196  1003               	clrc
  6127  0197  0DFA               	rlf	??_delete_row+2,f
  6128  0198  3EFF               	addlw	-1
  6129  0199  1D03               	skipz
  6130  019A  2996               	goto	u2635
  6131  019B  1003               	clrc
  6132  019C  0D7A               	rlf	??_delete_row+2,w
  6133  019D  0722               	addwf	delete_row@matrix,w
  6134  019E  120A  158A  24E2  120A  118A  	fcall	_memcpy
  6135                           
  6136                           ;teris_16f886.c: 617: }
  6137  01A3  29BD               	goto	l2554
  6138  01A4                     l2552:	
  6139                           
  6140                           ;teris_16f886.c: 618: else
  6141                           ;teris_16f886.c: 619: {
  6142                           ;teris_16f886.c: 620: memset(matrix->data[i], 0, 8*sizeof(uint8_t));
  6143  01A4  3000               	movlw	0
  6144  01A5  00F0               	movwf	memset@c
  6145  01A6  00F1               	movwf	memset@c+1
  6146  01A7  3008               	movlw	8
  6147  01A8  00F2               	movwf	memset@n
  6148  01A9  3000               	movlw	0
  6149  01AA  00F3               	movwf	memset@n+1
  6150  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  6151  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  6152  01AD  0823               	movf	delete_row@i,w
  6153  01AE  00F8               	movwf	??_delete_row
  6154  01AF  3002               	movlw	2
  6155  01B0                     u2645:	
  6156  01B0  1003               	clrc
  6157  01B1  0DF8               	rlf	??_delete_row,f
  6158  01B2  3EFF               	addlw	-1
  6159  01B3  1D03               	skipz
  6160  01B4  29B0               	goto	u2645
  6161  01B5  1003               	clrc
  6162  01B6  0D78               	rlf	??_delete_row,w
  6163  01B7  0722               	addwf	delete_row@matrix,w
  6164  01B8  120A  158A  2423  120A  118A  	fcall	_memset
  6165  01BD                     l2554:	
  6166  01BD  30FF               	movlw	255
  6167  01BE  00F8               	movwf	??_delete_row
  6168  01BF  0878               	movf	??_delete_row,w
  6169  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  6170  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  6171  01C2  07A3               	addwf	delete_row@i,f
  6172  01C3  2965               	goto	L8
  6173  01C4                     __end_of_delete_row:	
  6174                           
  6175                           	psect	text26
  6176  0CE2                     __ptext26:	
  6177 ;; *************** function _memcpy *****************
  6178 ;; Defined at:
  6179 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memcpy.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  d1              1    wreg     PTR void 
  6182 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6183 ;;  s1              1    0[COMMON] PTR const void 
  6184 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6185 ;;  n               2    1[COMMON] unsigned int 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  d1              1    6[COMMON] PTR void 
  6188 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6189 ;;  s               1    5[COMMON] PTR const unsigned char 
  6190 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6191 ;;  d               1    4[COMMON] PTR unsigned char 
  6192 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      PTR void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6202 ;;      Params:         3       0       0       0       0
  6203 ;;      Locals:         3       0       0       0       0
  6204 ;;      Temps:          1       0       0       0       0
  6205 ;;      Totals:         7       0       0       0       0
  6206 ;;Total ram usage:        7 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; This function calls:
  6209 ;;		Nothing
  6210 ;; This function is called by:
  6211 ;;		_delete_row
  6212 ;;		_merge1
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           
  6217                           ;psect for function _memcpy
  6218  0CE2                     _memcpy:	
  6219                           
  6220                           ;incstack = 0
  6221                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  6222                           ;memcpy@d1 stored from wreg
  6223  0CE2  00F6               	movwf	memcpy@d1
  6224  0CE3  0870               	movf	memcpy@s1,w
  6225  0CE4  00F3               	movwf	??_memcpy
  6226  0CE5  0873               	movf	??_memcpy,w
  6227  0CE6  00F5               	movwf	memcpy@s
  6228  0CE7  0876               	movf	memcpy@d1,w
  6229  0CE8  00F3               	movwf	??_memcpy
  6230  0CE9  0873               	movf	??_memcpy,w
  6231  0CEA  00F4               	movwf	memcpy@d
  6232  0CEB                     l2506:	
  6233  0CEB  3001               	movlw	1
  6234  0CEC  02F1               	subwf	memcpy@n,f
  6235  0CED  3000               	movlw	0
  6236  0CEE  1C03               	skipc
  6237  0CEF  03F2               	decf	memcpy@n+1,f
  6238  0CF0  02F2               	subwf	memcpy@n+1,f
  6239  0CF1  0A71               	incf	memcpy@n,w
  6240  0CF2  1903               	btfsc	3,2
  6241  0CF3  0A72               	incf	memcpy@n+1,w
  6242  0CF4  1903               	btfsc	3,2
  6243  0CF5  0008               	return
  6244  0CF6  0875               	movf	memcpy@s,w
  6245  0CF7  0084               	movwf	4
  6246  0CF8  1783               	bsf	3,7	;select IRP bank2
  6247  0CF9  0800               	movf	0,w
  6248  0CFA  00F3               	movwf	??_memcpy
  6249  0CFB  0874               	movf	memcpy@d,w
  6250  0CFC  0084               	movwf	4
  6251  0CFD  0873               	movf	??_memcpy,w
  6252  0CFE  0080               	movwf	0
  6253  0CFF  3001               	movlw	1
  6254  0D00  00F3               	movwf	??_memcpy
  6255  0D01  0873               	movf	??_memcpy,w
  6256  0D02  07F5               	addwf	memcpy@s,f
  6257  0D03  3001               	movlw	1
  6258  0D04  00F3               	movwf	??_memcpy
  6259  0D05  0873               	movf	??_memcpy,w
  6260  0D06  07F4               	addwf	memcpy@d,f
  6261  0D07  2CEB               	goto	l2506
  6262  0D08                     __end_of_memcpy:	
  6263                           ;	Return value of _memcpy is never used
  6264                           
  6265                           
  6266                           	psect	text27
  6267  0B99                     __ptext27:	
  6268 ;; *************** function ___bmul *****************
  6269 ;; Defined at:
  6270 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  multiplier      1    wreg     unsigned char 
  6273 ;;  multiplicand    1    0[COMMON] unsigned char 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  multiplier      1    3[COMMON] unsigned char 
  6276 ;;  product         1    2[COMMON] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      unsigned char 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6286 ;;      Params:         1       0       0       0       0
  6287 ;;      Locals:         2       0       0       0       0
  6288 ;;      Temps:          1       0       0       0       0
  6289 ;;      Totals:         4       0       0       0       0
  6290 ;;Total ram usage:        4 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_find_best_solution
  6296 ;;		_main
  6297 ;;		_printf_debug_cur_MATRIX44
  6298 ;;		_get_MATRIX44
  6299 ;;		_printf_debug_all_MATRIX44
  6300 ;;		_sprintf
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           
  6305                           ;psect for function ___bmul
  6306  0B99                     ___bmul:	
  6307                           
  6308                           ;incstack = 0
  6309                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6310                           ;___bmul@multiplier stored from wreg
  6311  0B99  00F3               	movwf	___bmul@multiplier
  6312  0B9A  01F2               	clrf	___bmul@product
  6313  0B9B                     l2974:	
  6314  0B9B  1C73               	btfss	___bmul@multiplier,0
  6315  0B9C  2BA1               	goto	l2978
  6316  0B9D  0870               	movf	___bmul@multiplicand,w
  6317  0B9E  00F1               	movwf	??___bmul
  6318  0B9F  0871               	movf	??___bmul,w
  6319  0BA0  07F2               	addwf	___bmul@product,f
  6320  0BA1                     l2978:	
  6321  0BA1  1003               	clrc
  6322  0BA2  0DF0               	rlf	___bmul@multiplicand,f
  6323  0BA3  1003               	clrc
  6324  0BA4  0CF3               	rrf	___bmul@multiplier,f
  6325  0BA5  0873               	movf	___bmul@multiplier,w
  6326  0BA6  1D03               	btfss	3,2
  6327  0BA7  2B9B               	goto	l2974
  6328  0BA8  0872               	movf	___bmul@product,w
  6329  0BA9  0008               	return
  6330  0BAA                     __end_of___bmul:	
  6331                           
  6332                           	psect	text28
  6333  0F10                     __ptext28:	
  6334 ;; *************** function _clear *****************
  6335 ;; Defined at:
  6336 ;;		line 820 in file "teris_16f886.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  x               1    wreg     char 
  6339 ;;  y               1    0[COMMON] char 
  6340 ;;  matrix44        2    1[COMMON] PTR const struct .
  6341 ;;		 -> NULL(0), g_matrix44(384), 
  6342 ;;  matrix88        1    3[COMMON] PTR struct .
  6343 ;;		 -> g_matrix88(64), 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;  x               1    8[COMMON] char 
  6346 ;;  col             1   10[COMMON] unsigned char 
  6347 ;;  row             1    9[COMMON] unsigned char 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      void 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6357 ;;      Params:         4       0       0       0       0
  6358 ;;      Locals:         3       0       0       0       0
  6359 ;;      Temps:          4       0       0       0       0
  6360 ;;      Totals:        11       0       0       0       0
  6361 ;;Total ram usage:       11 bytes
  6362 ;; Hardware stack levels used:    2
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_main
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function _clear
  6372  0F10                     _clear:	
  6373                           
  6374                           ;incstack = 0
  6375                           ; Regs used in _clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6376                           ;clear@x stored from wreg
  6377  0F10  00F8               	movwf	clear@x
  6378                           
  6379                           ;teris_16f886.c: 822: for(uint8_t row = 0; row < 4; row++)
  6380  0F11  01F9               	clrf	clear@row
  6381  0F12                     L9:	
  6382  0F12  3004               	movlw	4
  6383  0F13  0279               	subwf	clear@row,w
  6384  0F14  1803               	btfsc	3,0
  6385  0F15  0008               	return
  6386                           
  6387                           ;teris_16f886.c: 823: {
  6388                           ;teris_16f886.c: 824: for(uint8_t col = 0; col < 4; col++)
  6389  0F16  01FA               	clrf	clear@col
  6390  0F17  3004               	movlw	4
  6391  0F18  027A               	subwf	clear@col,w
  6392  0F19  1803               	btfsc	3,0
  6393  0F1A  2F5A               	goto	l3274
  6394  0F1B                     l3266:	
  6395                           
  6396                           ;teris_16f886.c: 825: {
  6397                           ;teris_16f886.c: 826: if(matrix44->data[row][col] == 1)
  6398  0F1B  0879               	movf	clear@row,w
  6399  0F1C  00F4               	movwf	??_clear
  6400  0F1D  01F5               	clrf	??_clear+1
  6401  0F1E  1003               	clrc
  6402  0F1F  0DF4               	rlf	??_clear,f
  6403  0F20  0DF5               	rlf	??_clear+1,f
  6404  0F21  1003               	clrc
  6405  0F22  0DF4               	rlf	??_clear,f
  6406  0F23  0DF5               	rlf	??_clear+1,f
  6407  0F24  0874               	movf	??_clear,w
  6408  0F25  0771               	addwf	clear@matrix44,w
  6409  0F26  00F6               	movwf	??_clear+2
  6410  0F27  0875               	movf	??_clear+1,w
  6411  0F28  1803               	skipnc
  6412  0F29  0A75               	incf	??_clear+1,w
  6413  0F2A  0772               	addwf	clear@matrix44+1,w
  6414  0F2B  00F7               	movwf	??_clear+3
  6415  0F2C  087A               	movf	clear@col,w
  6416  0F2D  0776               	addwf	??_clear+2,w
  6417  0F2E  0084               	movwf	4
  6418  0F2F  0877               	movf	??_clear+3,w
  6419  0F30  1803               	skipnc
  6420  0F31  0A77               	incf	??_clear+3,w
  6421  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  6422  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  6423  0F34  00FF               	movwf	127
  6424  0F35  120A  158A  2000  120A  158A  	fcall	stringtab
  6425  0F3A  3A01               	xorlw	1
  6426  0F3B  1D03               	skipz
  6427  0F3C  2F52               	goto	l3270
  6428                           
  6429                           ;teris_16f886.c: 827: {
  6430                           ;teris_16f886.c: 828: matrix88->data[y + row][x + col] = 0;
  6431  0F3D  087A               	movf	clear@col,w
  6432  0F3E  0778               	addwf	clear@x,w
  6433  0F3F  0773               	addwf	clear@matrix88,w
  6434  0F40  00F4               	movwf	??_clear
  6435  0F41  0879               	movf	clear@row,w
  6436  0F42  0770               	addwf	clear@y,w
  6437  0F43  00F5               	movwf	??_clear+1
  6438  0F44  3002               	movlw	2
  6439  0F45                     u4185:	
  6440  0F45  1003               	clrc
  6441  0F46  0DF5               	rlf	??_clear+1,f
  6442  0F47  3EFF               	addlw	-1
  6443  0F48  1D03               	skipz
  6444  0F49  2F45               	goto	u4185
  6445  0F4A  1003               	clrc
  6446  0F4B  0D75               	rlf	??_clear+1,w
  6447  0F4C  0774               	addwf	??_clear,w
  6448  0F4D  00F6               	movwf	??_clear+2
  6449  0F4E  0876               	movf	??_clear+2,w
  6450  0F4F  0084               	movwf	4
  6451  0F50  1783               	bsf	3,7	;select IRP bank2
  6452  0F51  0180               	clrf	0
  6453  0F52                     l3270:	
  6454  0F52  3001               	movlw	1
  6455  0F53  00F4               	movwf	??_clear
  6456  0F54  0874               	movf	??_clear,w
  6457  0F55  07FA               	addwf	clear@col,f
  6458  0F56  3004               	movlw	4
  6459  0F57  027A               	subwf	clear@col,w
  6460  0F58  1C03               	skipc
  6461  0F59  2F1B               	goto	l3266
  6462  0F5A                     l3274:	
  6463  0F5A  3001               	movlw	1
  6464  0F5B  00F4               	movwf	??_clear
  6465  0F5C  0874               	movf	??_clear,w
  6466  0F5D  07F9               	addwf	clear@row,f
  6467  0F5E  2F12               	goto	L9
  6468  0F5F                     __end_of_clear:	
  6469                           
  6470                           	psect	text29
  6471  0BF0                     __ptext29:	
  6472 ;; *************** function _char_info_index_rand *****************
  6473 ;; Defined at:
  6474 ;;		line 899 in file "teris_16f886.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      unsigned char 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0, pclath, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6488 ;;      Params:         0       0       0       0       0
  6489 ;;      Locals:         0       0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0
  6491 ;;      Totals:         0       0       0       0       0
  6492 ;;Total ram usage:        0 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    2
  6495 ;; This function calls:
  6496 ;;		___awmod
  6497 ;;		_rand
  6498 ;; This function is called by:
  6499 ;;		_main
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           
  6504                           ;psect for function _char_info_index_rand
  6505  0BF0                     _char_info_index_rand:	
  6506                           
  6507                           ;teris_16f886.c: 901: return (uint8_t)(rand()%9);
  6508                           
  6509                           ;incstack = 0
  6510                           ; Regs used in _char_info_index_rand: [wreg+status,2+status,0+pclath+cstack]
  6511  0BF0  3009               	movlw	9
  6512  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  6513  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  6514  0BF3  00A7               	movwf	___awmod@divisor
  6515  0BF4  3000               	movlw	0
  6516  0BF5  00A8               	movwf	___awmod@divisor+1
  6517  0BF6  120A  158A  267C  120A  158A  	fcall	_rand
  6518  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  6519  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  6520  0BFD  0821               	movf	?_rand+1,w
  6521  0BFE  00AA               	movwf	___awmod@dividend+1
  6522  0BFF  0820               	movf	?_rand,w
  6523  0C00  00A9               	movwf	___awmod@dividend
  6524  0C01  120A  158A  26C3   	fcall	___awmod
  6525  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  6526  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  6527  0C06  0827               	movf	?___awmod,w
  6528  0C07  0008               	return
  6529  0C08                     __end_of_char_info_index_rand:	
  6530                           
  6531                           	psect	text30
  6532  0E7C                     __ptext30:	
  6533 ;; *************** function _rand *****************
  6534 ;; Defined at:
  6535 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\rand.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;		None
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  2    0[BANK0 ] int 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0, pclath, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6549 ;;      Params:         0       2       0       0       0
  6550 ;;      Locals:         0       0       0       0       0
  6551 ;;      Temps:          0       5       0       0       0
  6552 ;;      Totals:         0       7       0       0       0
  6553 ;;Total ram usage:        7 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    1
  6556 ;; This function calls:
  6557 ;;		___lmul
  6558 ;; This function is called by:
  6559 ;;		_char_info_index_rand
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           
  6564                           ;psect for function _rand
  6565  0E7C                     _rand:	
  6566                           
  6567                           ;incstack = 0
  6568                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  6569  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  6570  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  6571  0E7E  0860               	movf	_randx+3,w
  6572  0E7F  00F3               	movwf	___lmul@multiplier+3
  6573  0E80  085F               	movf	_randx+2,w
  6574  0E81  00F2               	movwf	___lmul@multiplier+2
  6575  0E82  085E               	movf	_randx+1,w
  6576  0E83  00F1               	movwf	___lmul@multiplier+1
  6577  0E84  085D               	movf	_randx,w
  6578  0E85  00F0               	movwf	___lmul@multiplier
  6579  0E86  3041               	movlw	65
  6580  0E87  00F7               	movwf	___lmul@multiplicand+3
  6581  0E88  30C6               	movlw	198
  6582  0E89  00F6               	movwf	___lmul@multiplicand+2
  6583  0E8A  304E               	movlw	78
  6584  0E8B  00F5               	movwf	___lmul@multiplicand+1
  6585  0E8C  306D               	movlw	109
  6586  0E8D  00F4               	movwf	___lmul@multiplicand
  6587  0E8E  120A  158A  25B3  120A  158A  	fcall	___lmul
  6588  0E93  0873               	movf	?___lmul+3,w
  6589  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  6590  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  6591  0E96  00E0               	movwf	_randx+3
  6592  0E97  0872               	movf	?___lmul+2,w
  6593  0E98  00DF               	movwf	_randx+2
  6594  0E99  0871               	movf	?___lmul+1,w
  6595  0E9A  00DE               	movwf	_randx+1
  6596  0E9B  0870               	movf	?___lmul,w
  6597  0E9C  00DD               	movwf	_randx
  6598  0E9D  3039               	movlw	57
  6599  0E9E  07DD               	addwf	_randx,f
  6600  0E9F  3030               	movlw	48
  6601  0EA0  1803               	skipnc
  6602  0EA1  3031               	movlw	49
  6603  0EA2  07DE               	addwf	_randx+1,f
  6604  0EA3  3000               	movlw	0
  6605  0EA4  1803               	skipnc
  6606  0EA5  3001               	movlw	1
  6607  0EA6  07DF               	addwf	_randx+2,f
  6608  0EA7  3000               	movlw	0
  6609  0EA8  1803               	skipnc
  6610  0EA9  3001               	movlw	1
  6611  0EAA  07E0               	addwf	_randx+3,f
  6612  0EAB  085D               	movf	_randx,w
  6613  0EAC  00A2               	movwf	??_rand
  6614  0EAD  085E               	movf	_randx+1,w
  6615  0EAE  00A3               	movwf	??_rand+1
  6616  0EAF  085F               	movf	_randx+2,w
  6617  0EB0  00A4               	movwf	??_rand+2
  6618  0EB1  0860               	movf	_randx+3,w
  6619  0EB2  00A5               	movwf	??_rand+3
  6620  0EB3  3010               	movlw	16
  6621  0EB4  00A6               	movwf	??_rand+4
  6622  0EB5                     u3285:	
  6623  0EB5  0D25               	rlf	??_rand+3,w
  6624  0EB6  0CA5               	rrf	??_rand+3,f
  6625  0EB7  0CA4               	rrf	??_rand+2,f
  6626  0EB8  0CA3               	rrf	??_rand+1,f
  6627  0EB9  0CA2               	rrf	??_rand,f
  6628  0EBA  0BA6               	decfsz	??_rand+4,f
  6629  0EBB  2EB5               	goto	u3285
  6630  0EBC  30FF               	movlw	255
  6631  0EBD  0522               	andwf	??_rand,w
  6632  0EBE  00A0               	movwf	?_rand
  6633  0EBF  307F               	movlw	127
  6634  0EC0  0523               	andwf	??_rand+1,w
  6635  0EC1  00A1               	movwf	?_rand+1
  6636  0EC2  0008               	return
  6637  0EC3                     __end_of_rand:	
  6638                           
  6639                           	psect	text31
  6640  0DB3                     __ptext31:	
  6641 ;; *************** function ___lmul *****************
  6642 ;; Defined at:
  6643 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  multiplier      4    0[COMMON] unsigned long 
  6646 ;;  multiplicand    4    4[COMMON] unsigned long 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  product         4    9[COMMON] unsigned long 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  4    0[COMMON] unsigned long 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6658 ;;      Params:         8       0       0       0       0
  6659 ;;      Locals:         4       0       0       0       0
  6660 ;;      Temps:          1       0       0       0       0
  6661 ;;      Totals:        13       0       0       0       0
  6662 ;;Total ram usage:       13 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_rand
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           
  6672                           ;psect for function ___lmul
  6673  0DB3                     ___lmul:	
  6674                           
  6675                           ;incstack = 0
  6676                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6677  0DB3  3000               	movlw	0
  6678  0DB4  00FC               	movwf	___lmul@product+3
  6679  0DB5  3000               	movlw	0
  6680  0DB6  00FB               	movwf	___lmul@product+2
  6681  0DB7  3000               	movlw	0
  6682  0DB8  00FA               	movwf	___lmul@product+1
  6683  0DB9  3000               	movlw	0
  6684  0DBA  00F9               	movwf	___lmul@product
  6685  0DBB                     l2644:	
  6686  0DBB  1C70               	btfss	___lmul@multiplier,0
  6687  0DBC  2DD1               	goto	l2648
  6688  0DBD  0874               	movf	___lmul@multiplicand,w
  6689  0DBE  07F9               	addwf	___lmul@product,f
  6690  0DBF  0875               	movf	___lmul@multiplicand+1,w
  6691  0DC0  1103               	clrz
  6692  0DC1  1803               	skipnc
  6693  0DC2  3E01               	addlw	1
  6694  0DC3  1D03               	btfss	3,2
  6695  0DC4  07FA               	addwf	___lmul@product+1,f
  6696  0DC5  0876               	movf	___lmul@multiplicand+2,w
  6697  0DC6  1103               	clrz
  6698  0DC7  1803               	skipnc
  6699  0DC8  3E01               	addlw	1
  6700  0DC9  1D03               	btfss	3,2
  6701  0DCA  07FB               	addwf	___lmul@product+2,f
  6702  0DCB  0877               	movf	___lmul@multiplicand+3,w
  6703  0DCC  1103               	clrz
  6704  0DCD  1803               	skipnc
  6705  0DCE  3E01               	addlw	1
  6706  0DCF  1D03               	btfss	3,2
  6707  0DD0  07FC               	addwf	___lmul@product+3,f
  6708  0DD1                     l2648:	
  6709  0DD1  3001               	movlw	1
  6710  0DD2  00F8               	movwf	??___lmul
  6711  0DD3                     u2855:	
  6712  0DD3  1003               	clrc
  6713  0DD4  0DF4               	rlf	___lmul@multiplicand,f
  6714  0DD5  0DF5               	rlf	___lmul@multiplicand+1,f
  6715  0DD6  0DF6               	rlf	___lmul@multiplicand+2,f
  6716  0DD7  0DF7               	rlf	___lmul@multiplicand+3,f
  6717  0DD8  0BF8               	decfsz	??___lmul,f
  6718  0DD9  2DD3               	goto	u2855
  6719  0DDA  3001               	movlw	1
  6720  0DDB                     u2865:	
  6721  0DDB  1003               	clrc
  6722  0DDC  0CF3               	rrf	___lmul@multiplier+3,f
  6723  0DDD  0CF2               	rrf	___lmul@multiplier+2,f
  6724  0DDE  0CF1               	rrf	___lmul@multiplier+1,f
  6725  0DDF  0CF0               	rrf	___lmul@multiplier,f
  6726  0DE0  3EFF               	addlw	-1
  6727  0DE1  1D03               	skipz
  6728  0DE2  2DDB               	goto	u2865
  6729  0DE3  0873               	movf	___lmul@multiplier+3,w
  6730  0DE4  0472               	iorwf	___lmul@multiplier+2,w
  6731  0DE5  0471               	iorwf	___lmul@multiplier+1,w
  6732  0DE6  0470               	iorwf	___lmul@multiplier,w
  6733  0DE7  1D03               	skipz
  6734  0DE8  2DBB               	goto	l2644
  6735  0DE9  087C               	movf	___lmul@product+3,w
  6736  0DEA  00F3               	movwf	?___lmul+3
  6737  0DEB  087B               	movf	___lmul@product+2,w
  6738  0DEC  00F2               	movwf	?___lmul+2
  6739  0DED  087A               	movf	___lmul@product+1,w
  6740  0DEE  00F1               	movwf	?___lmul+1
  6741  0DEF  0879               	movf	___lmul@product,w
  6742  0DF0  00F0               	movwf	?___lmul
  6743  0DF1  0008               	return
  6744  0DF2                     __end_of___lmul:	
  6745                           
  6746                           	psect	text32
  6747  0EC3                     __ptext32:	
  6748 ;; *************** function ___awmod *****************
  6749 ;; Defined at:
  6750 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  divisor         2    7[BANK0 ] int 
  6753 ;;  dividend        2    9[BANK0 ] int 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  sign            1   12[BANK0 ] unsigned char 
  6756 ;;  counter         1   11[BANK0 ] unsigned char 
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  2    7[BANK0 ] int 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6766 ;;      Params:         0       4       0       0       0
  6767 ;;      Locals:         0       2       0       0       0
  6768 ;;      Temps:          1       0       0       0       0
  6769 ;;      Totals:         1       6       0       0       0
  6770 ;;Total ram usage:        7 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_char_info_index_rand
  6776 ;;		_USARTWriteInt
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           
  6781                           ;psect for function ___awmod
  6782  0EC3                     ___awmod:	
  6783                           
  6784                           ;incstack = 0
  6785                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6786  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  6787  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  6788  0EC5  01AC               	clrf	___awmod@sign
  6789  0EC6  1FAA               	btfss	___awmod@dividend+1,7
  6790  0EC7  2ECF               	goto	l2994
  6791  0EC8  09A9               	comf	___awmod@dividend,f
  6792  0EC9  09AA               	comf	___awmod@dividend+1,f
  6793  0ECA  0AA9               	incf	___awmod@dividend,f
  6794  0ECB  1903               	skipnz
  6795  0ECC  0AAA               	incf	___awmod@dividend+1,f
  6796  0ECD  01AC               	clrf	___awmod@sign
  6797  0ECE  0AAC               	incf	___awmod@sign,f
  6798  0ECF                     l2994:	
  6799  0ECF  1FA8               	btfss	___awmod@divisor+1,7
  6800  0ED0  2ED6               	goto	l2998
  6801  0ED1  09A7               	comf	___awmod@divisor,f
  6802  0ED2  09A8               	comf	___awmod@divisor+1,f
  6803  0ED3  0AA7               	incf	___awmod@divisor,f
  6804  0ED4  1903               	skipnz
  6805  0ED5  0AA8               	incf	___awmod@divisor+1,f
  6806  0ED6                     l2998:	
  6807  0ED6  0827               	movf	___awmod@divisor,w
  6808  0ED7  0428               	iorwf	___awmod@divisor+1,w
  6809  0ED8  1903               	btfsc	3,2
  6810  0ED9  2F03               	goto	l3016
  6811  0EDA  01AB               	clrf	___awmod@counter
  6812  0EDB  0AAB               	incf	___awmod@counter,f
  6813  0EDC                     l3006:	
  6814  0EDC  1BA8               	btfsc	___awmod@divisor+1,7
  6815  0EDD  2EEA               	goto	l3008
  6816  0EDE  3001               	movlw	1
  6817  0EDF                     u3765:	
  6818  0EDF  1003               	clrc
  6819  0EE0  0DA7               	rlf	___awmod@divisor,f
  6820  0EE1  0DA8               	rlf	___awmod@divisor+1,f
  6821  0EE2  3EFF               	addlw	-1
  6822  0EE3  1D03               	skipz
  6823  0EE4  2EDF               	goto	u3765
  6824  0EE5  3001               	movlw	1
  6825  0EE6  00FD               	movwf	??___awmod
  6826  0EE7  087D               	movf	??___awmod,w
  6827  0EE8  07AB               	addwf	___awmod@counter,f
  6828  0EE9  2EDC               	goto	l3006
  6829  0EEA                     l3008:	
  6830  0EEA  0828               	movf	___awmod@divisor+1,w
  6831  0EEB  022A               	subwf	___awmod@dividend+1,w
  6832  0EEC  1D03               	skipz
  6833  0EED  2EF0               	goto	u3785
  6834  0EEE  0827               	movf	___awmod@divisor,w
  6835  0EEF  0229               	subwf	___awmod@dividend,w
  6836  0EF0                     u3785:	
  6837  0EF0  1C03               	skipc
  6838  0EF1  2EF8               	goto	l3012
  6839  0EF2  0827               	movf	___awmod@divisor,w
  6840  0EF3  02A9               	subwf	___awmod@dividend,f
  6841  0EF4  0828               	movf	___awmod@divisor+1,w
  6842  0EF5  1C03               	skipc
  6843  0EF6  03AA               	decf	___awmod@dividend+1,f
  6844  0EF7  02AA               	subwf	___awmod@dividend+1,f
  6845  0EF8                     l3012:	
  6846  0EF8  3001               	movlw	1
  6847  0EF9                     u3795:	
  6848  0EF9  1003               	clrc
  6849  0EFA  0CA8               	rrf	___awmod@divisor+1,f
  6850  0EFB  0CA7               	rrf	___awmod@divisor,f
  6851  0EFC  3EFF               	addlw	-1
  6852  0EFD  1D03               	skipz
  6853  0EFE  2EF9               	goto	u3795
  6854  0EFF  3001               	movlw	1
  6855  0F00  02AB               	subwf	___awmod@counter,f
  6856  0F01  1D03               	btfss	3,2
  6857  0F02  2EEA               	goto	l3008
  6858  0F03                     l3016:	
  6859  0F03  082C               	movf	___awmod@sign,w
  6860  0F04  1903               	btfsc	3,2
  6861  0F05  2F0B               	goto	l3020
  6862  0F06  09A9               	comf	___awmod@dividend,f
  6863  0F07  09AA               	comf	___awmod@dividend+1,f
  6864  0F08  0AA9               	incf	___awmod@dividend,f
  6865  0F09  1903               	skipnz
  6866  0F0A  0AAA               	incf	___awmod@dividend+1,f
  6867  0F0B                     l3020:	
  6868  0F0B  082A               	movf	___awmod@dividend+1,w
  6869  0F0C  00A8               	movwf	?___awmod+1
  6870  0F0D  0829               	movf	___awmod@dividend,w
  6871  0F0E  00A7               	movwf	?___awmod
  6872  0F0F  0008               	return
  6873  0F10                     __end_of___awmod:	
  6874                           
  6875                           	psect	text33
  6876  0E35                     __ptext33:	
  6877 ;; *************** function _USARTInit *****************
  6878 ;; Defined at:
  6879 ;;		line 31 in file "usart_pic16.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;  baud_rate       2    0[COMMON] unsigned int 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;		None
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      void 
  6886 ;; Registers used:
  6887 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6893 ;;      Params:         2       0       0       0       0
  6894 ;;      Locals:         0       0       0       0       0
  6895 ;;      Temps:          1       0       0       0       0
  6896 ;;      Totals:         3       0       0       0       0
  6897 ;;Total ram usage:        3 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_main
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           
  6907                           ;psect for function _USARTInit
  6908  0E35                     _USARTInit:	
  6909                           
  6910                           ;usart_pic16.c: 33: UQFront = UQEnd = -1;
  6911                           
  6912                           ;incstack = 0
  6913                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  6914  0E35  30FF               	movlw	255
  6915  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  6916  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  6917  0E38  00E2               	movwf	_UQEnd	;volatile
  6918  0E39  00F2               	movwf	??_USARTInit
  6919  0E3A  0872               	movf	??_USARTInit,w
  6920  0E3B  00E3               	movwf	_UQFront	;volatile
  6921                           
  6922                           ;usart_pic16.c: 36: switch (baud_rate) {
  6923  0E3C  2E48               	goto	l3036
  6924  0E3D                     l3026:	
  6925                           ;usart_pic16.c: 37: case 9600:
  6926                           
  6927                           
  6928                           ;usart_pic16.c: 38: SPBRG = 129;
  6929  0E3D  3081               	movlw	129
  6930  0E3E  2E44               	goto	L12
  6931  0E3F                     l3028:	
  6932                           ;usart_pic16.c: 40: case 19200:
  6933                           
  6934                           ;usart_pic16.c: 39: break;
  6935                           
  6936                           
  6937                           ;usart_pic16.c: 41: SPBRG = 64;
  6938  0E3F  3040               	movlw	64
  6939  0E40  2E44               	goto	L12
  6940  0E41                     l3030:	
  6941                           ;usart_pic16.c: 43: case 28800:
  6942                           
  6943                           ;usart_pic16.c: 42: break;
  6944                           
  6945                           
  6946                           ;usart_pic16.c: 44: SPBRG = 42;
  6947  0E41  302A               	movlw	42
  6948  0E42  2E44               	goto	L12
  6949  0E43                     l3032:	
  6950                           ;usart_pic16.c: 46: case 33600:
  6951                           
  6952                           ;usart_pic16.c: 45: break;
  6953                           
  6954                           
  6955                           ;usart_pic16.c: 47: SPBRG = 36;
  6956  0E43  3024               	movlw	36
  6957  0E44                     L12:	
  6958  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  6959  0E45  1303               	bcf	3,6	;RP1=0, select bank1
  6960  0E46  0099               	movwf	25	;volatile
  6961                           
  6962                           ;usart_pic16.c: 49: }
  6963                           
  6964                           ;usart_pic16.c: 48: break;
  6965  0E47  2E6A               	goto	l29
  6966  0E48                     l3036:	
  6967                           
  6968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  6969                           ; Switch size 1, requested type "space"
  6970                           ; Number of cases is 4, Range of values is 37 to 131
  6971                           ; switch strategies available:
  6972                           ; Name         Instructions Cycles
  6973                           ; simple_byte           13     7 (average)
  6974                           ; jumptable            263     9 (fixed)
  6975                           ;	Chosen strategy is simple_byte
  6976  0E48  0871               	movf	USARTInit@baud_rate+1,w
  6977  0E49  3A25               	xorlw	37	; case 37
  6978  0E4A  1903               	skipnz
  6979  0E4B  2E56               	goto	l4584
  6980  0E4C  3A6E               	xorlw	110	; case 75
  6981  0E4D  1903               	skipnz
  6982  0E4E  2E5B               	goto	l4586
  6983  0E4F  3A3B               	xorlw	59	; case 112
  6984  0E50  1903               	skipnz
  6985  0E51  2E60               	goto	l4588
  6986  0E52  3AF3               	xorlw	243	; case 131
  6987  0E53  1903               	skipnz
  6988  0E54  2E65               	goto	l4590
  6989  0E55  2E6A               	goto	l29
  6990  0E56                     l4584:	
  6991                           
  6992                           ; Switch size 1, requested type "space"
  6993                           ; Number of cases is 1, Range of values is 128 to 128
  6994                           ; switch strategies available:
  6995                           ; Name         Instructions Cycles
  6996                           ; simple_byte            4     3 (average)
  6997                           ; direct_byte           14    11 (fixed)
  6998                           ; jumptable            263     9 (fixed)
  6999                           ;	Chosen strategy is simple_byte
  7000  0E56  0870               	movf	USARTInit@baud_rate,w
  7001  0E57  3A80               	xorlw	128	; case 128
  7002  0E58  1903               	skipnz
  7003  0E59  2E3D               	goto	l3026
  7004  0E5A  2E6A               	goto	l29
  7005  0E5B                     l4586:	
  7006                           
  7007                           ; Switch size 1, requested type "space"
  7008                           ; Number of cases is 1, Range of values is 0 to 0
  7009                           ; switch strategies available:
  7010                           ; Name         Instructions Cycles
  7011                           ; simple_byte            4     3 (average)
  7012                           ; direct_byte           11     8 (fixed)
  7013                           ; jumptable            260     6 (fixed)
  7014                           ;	Chosen strategy is simple_byte
  7015  0E5B  0870               	movf	USARTInit@baud_rate,w
  7016  0E5C  3A00               	xorlw	0	; case 0
  7017  0E5D  1903               	skipnz
  7018  0E5E  2E3F               	goto	l3028
  7019  0E5F  2E6A               	goto	l29
  7020  0E60                     l4588:	
  7021                           
  7022                           ; Switch size 1, requested type "space"
  7023                           ; Number of cases is 1, Range of values is 128 to 128
  7024                           ; switch strategies available:
  7025                           ; Name         Instructions Cycles
  7026                           ; simple_byte            4     3 (average)
  7027                           ; direct_byte           14    11 (fixed)
  7028                           ; jumptable            263     9 (fixed)
  7029                           ;	Chosen strategy is simple_byte
  7030  0E60  0870               	movf	USARTInit@baud_rate,w
  7031  0E61  3A80               	xorlw	128	; case 128
  7032  0E62  1903               	skipnz
  7033  0E63  2E41               	goto	l3030
  7034  0E64  2E6A               	goto	l29
  7035  0E65                     l4590:	
  7036                           
  7037                           ; Switch size 1, requested type "space"
  7038                           ; Number of cases is 1, Range of values is 64 to 64
  7039                           ; switch strategies available:
  7040                           ; Name         Instructions Cycles
  7041                           ; simple_byte            4     3 (average)
  7042                           ; direct_byte           14    11 (fixed)
  7043                           ; jumptable            263     9 (fixed)
  7044                           ;	Chosen strategy is simple_byte
  7045  0E65  0870               	movf	USARTInit@baud_rate,w
  7046  0E66  3A40               	xorlw	64	; case 64
  7047  0E67  1903               	skipnz
  7048  0E68  2E43               	goto	l3032
  7049  0E69  2E6A               	goto	l29
  7050  0E6A                     l29:	
  7051                           
  7052                           ;usart_pic16.c: 52: TXSTAbits.TX9 = 0;
  7053  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  7054  0E6B  1303               	bcf	3,6	;RP1=0, select bank1
  7055  0E6C  1318               	bcf	24,6	;volatile
  7056                           
  7057                           ;usart_pic16.c: 53: TXSTAbits.TXEN = 1;
  7058  0E6D  1698               	bsf	24,5	;volatile
  7059                           
  7060                           ;usart_pic16.c: 54: TXSTAbits.SYNC = 0;
  7061  0E6E  1218               	bcf	24,4	;volatile
  7062                           
  7063                           ;usart_pic16.c: 55: TXSTAbits.BRGH = 1;
  7064  0E6F  1518               	bsf	24,2	;volatile
  7065                           
  7066                           ;usart_pic16.c: 58: RCSTAbits.SPEN = 1;
  7067  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  7068  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  7069  0E72  1798               	bsf	24,7	;volatile
  7070                           
  7071                           ;usart_pic16.c: 59: RCSTAbits.RX9 = 0;
  7072  0E73  1318               	bcf	24,6	;volatile
  7073                           
  7074                           ;usart_pic16.c: 60: RCSTAbits.CREN = 1;
  7075  0E74  1618               	bsf	24,4	;volatile
  7076                           
  7077                           ;usart_pic16.c: 61: RCSTAbits.ADDEN = 0;
  7078  0E75  1198               	bcf	24,3	;volatile
  7079                           
  7080                           ;usart_pic16.c: 64: RCIE = 1;
  7081  0E76  1683               	bsf	3,5	;RP0=1, select bank1
  7082  0E77  1303               	bcf	3,6	;RP1=0, select bank1
  7083  0E78  168C               	bsf	12,5	;volatile
  7084                           
  7085                           ;usart_pic16.c: 65: PEIE = 1;
  7086  0E79  170B               	bsf	11,6	;volatile
  7087                           
  7088                           ;usart_pic16.c: 67: (GIE = 1);
  7089  0E7A  178B               	bsf	11,7	;volatile
  7090  0E7B  0008               	return
  7091  0E7C                     __end_of_USARTInit:	
  7092                           
  7093                           	psect	text34
  7094  0B88                     __ptext34:	
  7095 ;; *************** function _Clear_Matrix *****************
  7096 ;; Defined at:
  7097 ;;		line 585 in file "teris_16f886.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;		None
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7111 ;;      Params:         0       0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0
  7114 ;;      Totals:         0       0       0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    5
  7118 ;; This function calls:
  7119 ;;		_memset
  7120 ;;		_printf_Screen
  7121 ;; This function is called by:
  7122 ;;		_main
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           
  7127                           ;psect for function _Clear_Matrix
  7128  0B88                     _Clear_Matrix:	
  7129                           
  7130                           ;teris_16f886.c: 587: memset(&g_matrix88, 0, sizeof(MATRIX88));
  7131                           
  7132                           ;incstack = 0
  7133                           ; Regs used in _Clear_Matrix: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7134  0B88  3000               	movlw	0
  7135  0B89  00F0               	movwf	memset@c
  7136  0B8A  00F1               	movwf	memset@c+1
  7137  0B8B  3040               	movlw	64
  7138  0B8C  00F2               	movwf	memset@n
  7139  0B8D  3000               	movlw	0
  7140  0B8E  00F3               	movwf	memset@n+1
  7141  0B8F  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  7142  0B90  120A  158A  2423  120A  158A  	fcall	_memset
  7143                           
  7144                           ;teris_16f886.c: 588: printf_Screen();
  7145  0B95  120A  158A  235D   	fcall	_printf_Screen
  7146  0B98  0008               	return
  7147  0B99                     __end_of_Clear_Matrix:	
  7148                           
  7149                           	psect	text35
  7150  0B5D                     __ptext35:	
  7151 ;; *************** function _printf_Screen *****************
  7152 ;; Defined at:
  7153 ;;		line 569 in file "teris_16f886.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;		None
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7167 ;;      Params:         0       0       0       0       0
  7168 ;;      Locals:         0       0       0       0       0
  7169 ;;      Temps:          0       0       0       0       0
  7170 ;;      Totals:         0       0       0       0       0
  7171 ;;Total ram usage:        0 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:    4
  7174 ;; This function calls:
  7175 ;;		_printf_MATRIX88
  7176 ;; This function is called by:
  7177 ;;		_Clear_Matrix
  7178 ;;		_main
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _printf_Screen
  7184  0B5D                     _printf_Screen:	
  7185                           
  7186                           ;teris_16f886.c: 571: printf_MATRIX88(&g_matrix88);
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _printf_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7190  0B5D  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  7191  0B5E  120A  158A  23DE   	fcall	_printf_MATRIX88
  7192  0B61  0008               	return
  7193  0B62                     __end_of_printf_Screen:	
  7194                           
  7195                           	psect	text36
  7196  0BDE                     __ptext36:	
  7197 ;; *************** function _printf_MATRIX88 *****************
  7198 ;; Defined at:
  7199 ;;		line 559 in file "teris_16f886.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  matrix88        1    wreg     PTR const struct .
  7202 ;;		 -> g_matrix88(64), 
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;  matrix88        1    0[BANK0 ] PTR const struct .
  7205 ;;		 -> g_matrix88(64), 
  7206 ;;  matrix7219      8    1[BANK0 ] struct .
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  1    wreg      void 
  7209 ;; Registers used:
  7210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7216 ;;      Params:         0       0       0       0       0
  7217 ;;      Locals:         0       9       0       0       0
  7218 ;;      Temps:          1       0       0       0       0
  7219 ;;      Totals:         1       9       0       0       0
  7220 ;;Total ram usage:       10 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    3
  7223 ;; This function calls:
  7224 ;;		_MATRIX88_to_MATRIX7219
  7225 ;;		_printf_MATRIX7219
  7226 ;; This function is called by:
  7227 ;;		_printf_Screen
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           
  7232                           ;psect for function _printf_MATRIX88
  7233  0BDE                     _printf_MATRIX88:	
  7234                           
  7235                           ;incstack = 0
  7236                           ; Regs used in _printf_MATRIX88: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7237                           ;printf_MATRIX88@matrix88 stored from wreg
  7238  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  7239  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  7240  0BE0  00A0               	movwf	printf_MATRIX88@matrix88
  7241                           
  7242                           ;teris_16f886.c: 561: MATRIX7219 matrix7219;
  7243                           ;teris_16f886.c: 562: MATRIX88_to_MATRIX7219(matrix88, &matrix7219);
  7244  0BE1  3021               	movlw	(low (printf_MATRIX88@matrix7219| 0))& (0+255)
  7245  0BE2  00FA               	movwf	??_printf_MATRIX88
  7246  0BE3  087A               	movf	??_printf_MATRIX88,w
  7247  0BE4  00F0               	movwf	MATRIX88_to_MATRIX7219@matrix7219
  7248  0BE5  0820               	movf	printf_MATRIX88@matrix88,w
  7249  0BE6  120A  118A  2006  120A  158A  	fcall	_MATRIX88_to_MATRIX7219
  7250                           
  7251                           ;teris_16f886.c: 566: printf_MATRIX7219(&matrix7219);
  7252  0BEB  3021               	movlw	(low (printf_MATRIX88@matrix7219| 0))& (0+255)
  7253  0BEC  120A  158A  243F   	fcall	_printf_MATRIX7219
  7254  0BEF  0008               	return
  7255  0BF0                     __end_of_printf_MATRIX88:	
  7256                           
  7257                           	psect	text37
  7258  0C3F                     __ptext37:	
  7259 ;; *************** function _printf_MATRIX7219 *****************
  7260 ;; Defined at:
  7261 ;;		line 505 in file "teris_16f886.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  matrix          1    wreg     PTR const struct .
  7264 ;;		 -> printf_MATRIX88@matrix7219(8), 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  matrix          1    8[COMMON] PTR const struct .
  7267 ;;		 -> printf_MATRIX88@matrix7219(8), 
  7268 ;;  col             1    9[COMMON] unsigned char 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      void 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7278 ;;      Params:         0       0       0       0       0
  7279 ;;      Locals:         2       0       0       0       0
  7280 ;;      Temps:          2       0       0       0       0
  7281 ;;      Totals:         4       0       0       0       0
  7282 ;;Total ram usage:        4 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    2
  7285 ;; This function calls:
  7286 ;;		_Write_Byte
  7287 ;; This function is called by:
  7288 ;;		_printf_MATRIX88
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           
  7293                           ;psect for function _printf_MATRIX7219
  7294  0C3F                     _printf_MATRIX7219:	
  7295                           
  7296                           ;incstack = 0
  7297                           ; Regs used in _printf_MATRIX7219: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7298                           ;printf_MATRIX7219@matrix stored from wreg
  7299  0C3F  00F8               	movwf	printf_MATRIX7219@matrix
  7300                           
  7301                           ;teris_16f886.c: 507: uint8_t col;
  7302                           ;teris_16f886.c: 509: for (col = 0; col < 8; col++)
  7303  0C40  01F9               	clrf	printf_MATRIX7219@col
  7304  0C41                     L13:	
  7305  0C41  3008               	movlw	8
  7306  0C42  0279               	subwf	printf_MATRIX7219@col,w
  7307  0C43  1803               	btfsc	3,0
  7308  0C44  0008               	return
  7309                           
  7310                           ;teris_16f886.c: 510: {
  7311                           ;teris_16f886.c: 511: Write_Byte(col + 1, matrix->col[col]);
  7312  0C45  0879               	movf	printf_MATRIX7219@col,w
  7313  0C46  0778               	addwf	printf_MATRIX7219@matrix,w
  7314  0C47  00F6               	movwf	??_printf_MATRIX7219
  7315  0C48  0876               	movf	??_printf_MATRIX7219,w
  7316  0C49  0084               	movwf	4
  7317  0C4A  1383               	bcf	3,7	;select IRP bank0
  7318  0C4B  0800               	movf	0,w
  7319  0C4C  00F7               	movwf	??_printf_MATRIX7219+1
  7320  0C4D  0877               	movf	??_printf_MATRIX7219+1,w
  7321  0C4E  00F4               	movwf	Write_Byte@myValue
  7322  0C4F  0879               	movf	printf_MATRIX7219@col,w
  7323  0C50  3E01               	addlw	1
  7324  0C51  120A  158A  23CC  120A  158A  	fcall	_Write_Byte
  7325  0C56  3001               	movlw	1
  7326  0C57  00F6               	movwf	??_printf_MATRIX7219
  7327  0C58  0876               	movf	??_printf_MATRIX7219,w
  7328  0C59  07F9               	addwf	printf_MATRIX7219@col,f
  7329  0C5A  2C41               	goto	L13
  7330  0C5B                     __end_of_printf_MATRIX7219:	
  7331                           
  7332                           	psect	text38
  7333  0BCC                     __ptext38:	
  7334 ;; *************** function _Write_Byte *****************
  7335 ;; Defined at:
  7336 ;;		line 466 in file "teris_16f886.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  myColumn        1    wreg     unsigned char 
  7339 ;;  myValue         1    4[COMMON] unsigned char 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  myColumn        1    5[COMMON] unsigned char 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1    wreg      void 
  7344 ;; Registers used:
  7345 ;;		wreg, status,2, status,0, pclath, cstack
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7351 ;;      Params:         1       0       0       0       0
  7352 ;;      Locals:         1       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0
  7354 ;;      Totals:         2       0       0       0       0
  7355 ;;Total ram usage:        2 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    1
  7358 ;; This function calls:
  7359 ;;		_SPI1_write
  7360 ;; This function is called by:
  7361 ;;		_printf_MATRIX7219
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           
  7366                           ;psect for function _Write_Byte
  7367  0BCC                     _Write_Byte:	
  7368                           
  7369                           ;incstack = 0
  7370                           ; Regs used in _Write_Byte: [wreg+status,2+status,0+pclath+cstack]
  7371                           ;Write_Byte@myColumn stored from wreg
  7372  0BCC  00F5               	movwf	Write_Byte@myColumn
  7373                           
  7374                           ;teris_16f886.c: 467: RA2 = 0;
  7375  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  7376  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  7377  0BCF  1105               	bcf	5,2	;volatile
  7378                           
  7379                           ;teris_16f886.c: 468: SPI1_write(myColumn);
  7380  0BD0  0875               	movf	Write_Byte@myColumn,w
  7381  0BD1  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  7382                           
  7383                           ;teris_16f886.c: 469: SPI1_write(myValue);
  7384  0BD6  0874               	movf	Write_Byte@myValue,w
  7385  0BD7  120A  158A  2556   	fcall	_SPI1_write
  7386                           
  7387                           ;teris_16f886.c: 470: RA2 = 1;
  7388  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  7389  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  7390  0BDC  1505               	bsf	5,2	;volatile
  7391  0BDD  0008               	return
  7392  0BDE                     __end_of_Write_Byte:	
  7393                           
  7394                           	psect	text39
  7395  0D56                     __ptext39:	
  7396 ;; *************** function _SPI1_write *****************
  7397 ;; Defined at:
  7398 ;;		line 412 in file "teris_16f886.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;  data            1    wreg     unsigned char 
  7401 ;; Auto vars:     Size  Location     Type
  7402 ;;  data            1    1[COMMON] unsigned char 
  7403 ;;  i               1    3[COMMON] unsigned char 
  7404 ;;  mask            1    2[COMMON] unsigned char 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg, status,2, status,0
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7414 ;;      Params:         0       0       0       0       0
  7415 ;;      Locals:         3       0       0       0       0
  7416 ;;      Temps:          1       0       0       0       0
  7417 ;;      Totals:         4       0       0       0       0
  7418 ;;Total ram usage:        4 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_max7219_init1
  7424 ;;		_Write_Byte
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           
  7429                           ;psect for function _SPI1_write
  7430  0D56                     _SPI1_write:	
  7431                           
  7432                           ;incstack = 0
  7433                           ; Regs used in _SPI1_write: [wreg+status,2+status,0]
  7434                           ;SPI1_write@data stored from wreg
  7435  0D56  00F1               	movwf	SPI1_write@data
  7436                           
  7437                           ;teris_16f886.c: 414: uint8_t mask = 0b10000000;
  7438  0D57  3080               	movlw	128
  7439  0D58  00F0               	movwf	??_SPI1_write
  7440  0D59  0870               	movf	??_SPI1_write,w
  7441  0D5A  00F2               	movwf	SPI1_write@mask
  7442                           
  7443                           ;teris_16f886.c: 415: for(uint8_t i = 0; i < 8; i++)
  7444  0D5B  01F3               	clrf	SPI1_write@i
  7445  0D5C                     L14:	
  7446  0D5C  3008               	movlw	8
  7447  0D5D  0273               	subwf	SPI1_write@i,w
  7448  0D5E  1803               	btfsc	3,0
  7449  0D5F  0008               	return
  7450                           
  7451                           ;teris_16f886.c: 416: {
  7452                           ;teris_16f886.c: 417: if((data & mask) > 0)
  7453  0D60  0871               	movf	SPI1_write@data,w
  7454  0D61  0572               	andwf	SPI1_write@mask,w
  7455  0D62  1903               	btfsc	3,2
  7456  0D63  2D68               	goto	l201
  7457                           
  7458                           ;teris_16f886.c: 418: {
  7459                           ;teris_16f886.c: 419: RA3 = 1;
  7460  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  7461  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  7462  0D66  1585               	bsf	5,3	;volatile
  7463                           
  7464                           ;teris_16f886.c: 421: }
  7465  0D67  2D6B               	goto	l2426
  7466  0D68                     l201:	
  7467                           
  7468                           ;teris_16f886.c: 422: else
  7469                           ;teris_16f886.c: 423: {
  7470                           ;teris_16f886.c: 424: RA3 = 0;
  7471  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  7472  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  7473  0D6A  1185               	bcf	5,3	;volatile
  7474  0D6B                     l2426:	
  7475                           
  7476                           ;teris_16f886.c: 426: }
  7477                           ;teris_16f886.c: 427: mask >>= 1;
  7478  0D6B  1003               	clrc
  7479  0D6C  0CF2               	rrf	SPI1_write@mask,f
  7480                           
  7481                           ;teris_16f886.c: 428: RA1 = 1;
  7482  0D6D  1485               	bsf	5,1	;volatile
  7483                           
  7484                           ;teris_16f886.c: 429: _delay((unsigned long)((10)*(20000000/4000000.0)));
  7485  0D6E  3010               	movlw	16
  7486  0D6F  00F0               	movwf	??_SPI1_write
  7487  0D70                     u6317:	
  7488  0D70  0BF0               	decfsz	??_SPI1_write,f
  7489  0D71  2D70               	goto	u6317
  7490  0D72  0000               	nop
  7491                           
  7492                           ;teris_16f886.c: 430: RA1 = 0;
  7493  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  7494  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  7495  0D75  1085               	bcf	5,1	;volatile
  7496                           
  7497                           ;teris_16f886.c: 431: _delay((unsigned long)((10)*(20000000/4000000.0)));
  7498  0D76  3010               	movlw	16
  7499  0D77  00F0               	movwf	??_SPI1_write
  7500  0D78                     u6327:	
  7501  0D78  0BF0               	decfsz	??_SPI1_write,f
  7502  0D79  2D78               	goto	u6327
  7503  0D7A  0000               	nop
  7504  0D7B  3001               	movlw	1
  7505  0D7C  00F0               	movwf	??_SPI1_write
  7506  0D7D  0870               	movf	??_SPI1_write,w
  7507  0D7E  07F3               	addwf	SPI1_write@i,f
  7508  0D7F  2D5C               	goto	L14
  7509  0D80                     __end_of_SPI1_write:	
  7510                           
  7511                           	psect	text40
  7512  0006                     __ptext40:	
  7513 ;; *************** function _MATRIX88_to_MATRIX7219 *****************
  7514 ;; Defined at:
  7515 ;;		line 514 in file "teris_16f886.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  matrix88        1    wreg     PTR const struct .
  7518 ;;		 -> g_matrix88(64), 
  7519 ;;  matrix7219      1    0[COMMON] PTR struct .
  7520 ;;		 -> printf_MATRIX88@matrix7219(8), 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  matrix88        1    4[COMMON] PTR const struct .
  7523 ;;		 -> g_matrix88(64), 
  7524 ;;  row             1    6[COMMON] unsigned char 
  7525 ;;  col             1    7[COMMON] unsigned char 
  7526 ;;  mask            1    5[COMMON] unsigned char 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      void 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7536 ;;      Params:         1       0       0       0       0
  7537 ;;      Locals:         4       0       0       0       0
  7538 ;;      Temps:          3       0       0       0       0
  7539 ;;      Totals:         8       0       0       0       0
  7540 ;;Total ram usage:        8 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; This function calls:
  7543 ;;		Nothing
  7544 ;; This function is called by:
  7545 ;;		_printf_MATRIX88
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function _MATRIX88_to_MATRIX7219
  7551  0006                     _MATRIX88_to_MATRIX7219:	
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _MATRIX88_to_MATRIX7219: [wreg-fsr0h+status,2+status,0]
  7555                           ;MATRIX88_to_MATRIX7219@matrix88 stored from wreg
  7556  0006  00F4               	movwf	MATRIX88_to_MATRIX7219@matrix88
  7557                           
  7558                           ;teris_16f886.c: 516: uint8_t mask = 0x80;
  7559  0007  3080               	movlw	128
  7560  0008  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7561  0009  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7562  000A  00F5               	movwf	MATRIX88_to_MATRIX7219@mask
  7563                           
  7564                           ;teris_16f886.c: 518: for(uint8_t col = 0; col < 8; col++)
  7565  000B  01F7               	clrf	MATRIX88_to_MATRIX7219@col
  7566  000C                     L15:	
  7567  000C  3008               	movlw	8
  7568  000D  0277               	subwf	MATRIX88_to_MATRIX7219@col,w
  7569  000E  1803               	btfsc	3,0
  7570  000F  0008               	return
  7571                           
  7572                           ;teris_16f886.c: 519: {
  7573                           ;teris_16f886.c: 520: mask = 0x80;
  7574  0010  3080               	movlw	128
  7575  0011  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7576  0012  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7577  0013  00F5               	movwf	MATRIX88_to_MATRIX7219@mask
  7578                           
  7579                           ;teris_16f886.c: 521: matrix7219->col[col] = 0;
  7580  0014  0877               	movf	MATRIX88_to_MATRIX7219@col,w
  7581  0015  0770               	addwf	MATRIX88_to_MATRIX7219@matrix7219,w
  7582  0016  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7583  0017  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7584  0018  0084               	movwf	4
  7585  0019  1383               	bcf	3,7	;select IRP bank0
  7586  001A  0180               	clrf	0
  7587                           
  7588                           ;teris_16f886.c: 522: for(uint8_t row = 0; row < 8; row++)
  7589  001B  01F6               	clrf	MATRIX88_to_MATRIX7219@row
  7590  001C  3008               	movlw	8
  7591  001D  0276               	subwf	MATRIX88_to_MATRIX7219@row,w
  7592  001E  1803               	btfsc	3,0
  7593  001F  2849               	goto	l2486
  7594  0020                     l2476:	
  7595                           
  7596                           ;teris_16f886.c: 523: {
  7597                           ;teris_16f886.c: 524: if(matrix88->data[row][col] == 1)
  7598  0020  0876               	movf	MATRIX88_to_MATRIX7219@row,w
  7599  0021  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7600  0022  3002               	movlw	2
  7601  0023                     u2485:	
  7602  0023  1003               	clrc
  7603  0024  0DF1               	rlf	??_MATRIX88_to_MATRIX7219,f
  7604  0025  3EFF               	addlw	-1
  7605  0026  1D03               	skipz
  7606  0027  2823               	goto	u2485
  7607  0028  1003               	clrc
  7608  0029  0D71               	rlf	??_MATRIX88_to_MATRIX7219,w
  7609  002A  0774               	addwf	MATRIX88_to_MATRIX7219@matrix88,w
  7610  002B  00F2               	movwf	??_MATRIX88_to_MATRIX7219+1
  7611  002C  0877               	movf	MATRIX88_to_MATRIX7219@col,w
  7612  002D  0772               	addwf	??_MATRIX88_to_MATRIX7219+1,w
  7613  002E  00F3               	movwf	??_MATRIX88_to_MATRIX7219+2
  7614  002F  0873               	movf	??_MATRIX88_to_MATRIX7219+2,w
  7615  0030  0084               	movwf	4
  7616  0031  1783               	bsf	3,7	;select IRP bank2
  7617  0032  0300               	decf	0,w
  7618  0033  1D03               	btfss	3,2
  7619  0034  283F               	goto	l2480
  7620                           
  7621                           ;teris_16f886.c: 525: {
  7622                           ;teris_16f886.c: 526: matrix7219->col[col] |= mask;
  7623  0035  0875               	movf	MATRIX88_to_MATRIX7219@mask,w
  7624  0036  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7625  0037  0877               	movf	MATRIX88_to_MATRIX7219@col,w
  7626  0038  0770               	addwf	MATRIX88_to_MATRIX7219@matrix7219,w
  7627  0039  00F2               	movwf	??_MATRIX88_to_MATRIX7219+1
  7628  003A  0872               	movf	??_MATRIX88_to_MATRIX7219+1,w
  7629  003B  0084               	movwf	4
  7630  003C  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7631  003D  1383               	bcf	3,7	;select IRP bank0
  7632  003E  0480               	iorwf	0,f
  7633  003F                     l2480:	
  7634                           
  7635                           ;teris_16f886.c: 527: }
  7636                           ;teris_16f886.c: 528: mask >>= 1;
  7637  003F  1003               	clrc
  7638  0040  0CF5               	rrf	MATRIX88_to_MATRIX7219@mask,f
  7639  0041  3001               	movlw	1
  7640  0042  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7641  0043  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7642  0044  07F6               	addwf	MATRIX88_to_MATRIX7219@row,f
  7643  0045  3008               	movlw	8
  7644  0046  0276               	subwf	MATRIX88_to_MATRIX7219@row,w
  7645  0047  1C03               	skipc
  7646  0048  2820               	goto	l2476
  7647  0049                     l2486:	
  7648  0049  3001               	movlw	1
  7649  004A  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7650  004B  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7651  004C  07F7               	addwf	MATRIX88_to_MATRIX7219@col,f
  7652  004D  280C               	goto	L15
  7653  004E                     __end_of_MATRIX88_to_MATRIX7219:	
  7654                           
  7655                           	psect	text41
  7656  0C23                     __ptext41:	
  7657 ;; *************** function _memset *****************
  7658 ;; Defined at:
  7659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  p1              1    wreg     PTR void 
  7662 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  7663 ;;  c               2    0[COMMON] int 
  7664 ;;  n               2    2[COMMON] unsigned int 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  p1              1    6[COMMON] PTR void 
  7667 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  7668 ;;  p               1    5[COMMON] PTR unsigned char 
  7669 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      PTR void 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7679 ;;      Params:         4       0       0       0       0
  7680 ;;      Locals:         2       0       0       0       0
  7681 ;;      Temps:          1       0       0       0       0
  7682 ;;      Totals:         7       0       0       0       0
  7683 ;;Total ram usage:        7 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; This function calls:
  7686 ;;		Nothing
  7687 ;; This function is called by:
  7688 ;;		_Clear_Matrix
  7689 ;;		_delete_row
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _memset
  7695  0C23                     _memset:	
  7696                           
  7697                           ;incstack = 0
  7698                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  7699                           ;memset@p1 stored from wreg
  7700  0C23  00F6               	movwf	memset@p1
  7701  0C24  0876               	movf	memset@p1,w
  7702  0C25  00F4               	movwf	??_memset
  7703  0C26  0874               	movf	??_memset,w
  7704  0C27  00F5               	movwf	memset@p
  7705  0C28                     l2496:	
  7706  0C28  3001               	movlw	1
  7707  0C29  02F2               	subwf	memset@n,f
  7708  0C2A  3000               	movlw	0
  7709  0C2B  1C03               	skipc
  7710  0C2C  03F3               	decf	memset@n+1,f
  7711  0C2D  02F3               	subwf	memset@n+1,f
  7712  0C2E  0A72               	incf	memset@n,w
  7713  0C2F  1903               	btfsc	3,2
  7714  0C30  0A73               	incf	memset@n+1,w
  7715  0C31  1903               	btfsc	3,2
  7716  0C32  0008               	return
  7717  0C33  0870               	movf	memset@c,w
  7718  0C34  00F4               	movwf	??_memset
  7719  0C35  0875               	movf	memset@p,w
  7720  0C36  0084               	movwf	4
  7721  0C37  0874               	movf	??_memset,w
  7722  0C38  1783               	bsf	3,7	;select IRP bank2
  7723  0C39  0080               	movwf	0
  7724  0C3A  3001               	movlw	1
  7725  0C3B  00F4               	movwf	??_memset
  7726  0C3C  0874               	movf	??_memset,w
  7727  0C3D  07F5               	addwf	memset@p,f
  7728  0C3E  2C28               	goto	l2496
  7729  0C3F                     __end_of_memset:	
  7730                           ;	Return value of _memset is never used
  7731                           
  7732  007E                     btemp	set	126	;btemp
  7733  007E                     wtemp	set	126
  7734  007E                     wtemp0	set	126
  7735  0080                     wtemp1	set	128
  7736  0082                     wtemp2	set	130
  7737  0084                     wtemp3	set	132
  7738  0086                     wtemp4	set	134
  7739  0088                     wtemp5	set	136
  7740  007F                     wtemp6	set	127
  7741  007E                     ttemp	set	126
  7742  007E                     ttemp0	set	126
  7743  0081                     ttemp1	set	129
  7744  0084                     ttemp2	set	132
  7745  0087                     ttemp3	set	135
  7746  007F                     ttemp4	set	127
  7747  007E                     ltemp	set	126
  7748  007E                     ltemp0	set	126
  7749  0082                     ltemp1	set	130
  7750  0086                     ltemp2	set	134
  7751  0080                     ltemp3	set	128


Data Sizes:
    Strings     212
    Constant    414
    Data        32
    BSS         203
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      68
    BANK1            80      0      59
    BANK3            96      0      96
    BANK2            96      0      64

Pointer List with Targets:

    is_right_boundary@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    is_left_boundary@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    memset@p1	PTR void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memset@p	PTR unsigned char  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@d1	PTR void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@s1	PTR const void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    g_cur_matrix44	PTR struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    temp_cur_matrix44	PTR struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    get_holes_after_merge@matrix	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    get_high_after_merge@matrix	PTR struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    get_high@matrix	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    right_most@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    right_most@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    left_most@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    left_most@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    evaluate@matrix	PTR const struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    merge1@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    merge1@matrix88_in	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    merge1@matrix88_out	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    merge@matrix88	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    merge@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    clear@matrix88	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    clear@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    fall_off@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    fall_off@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_right_boundary@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_left_boundary@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_valid@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    is_valid@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    hit_land@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    hit_land@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_row_empty@matrix	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    delete_matrix@matrix	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88(BANK3[64]), 

    sp__memcpy	PTR void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    delete_row@matrix	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88(BANK3[64]), 

    is_row_full@matrix	PTR const struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88(BANK3[64]), 

    sp__memset	PTR void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    printf_MATRIX88@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    printf_debug_MATRIX88@matrix	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    printf_debug_MATRIX88@lable	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_28(CODE[12]), ROM(CODE[8192]), 

    MATRIX88_to_MATRIX7219@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    MATRIX88_to_MATRIX7219@matrix7219	PTR struct . size(1) Largest target is 8
		 -> printf_MATRIX88@matrix7219(BANK0[8]), 

    printf_MATRIX7219@matrix	PTR const struct . size(1) Largest target is 8
		 -> printf_MATRIX88@matrix7219(BANK0[8]), 

    sp__get_MATRIX44	PTR struct . size(2) Largest target is 384
		 -> g_matrix44(CODE[384]), 

    debug_line@str	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_27(CODE[2]), STR_26(CODE[21]), STR_25(CODE[1]), STR_22(CODE[29]), 
		 -> STR_21(CODE[2]), STR_20(CODE[21]), STR_19(CODE[1]), STR_16(CODE[21]), 
		 -> STR_15(CODE[2]), STR_12(CODE[20]), STR_11(CODE[2]), STR_10(CODE[21]), 
		 -> STR_9(CODE[1]), STR_6(CODE[29]), STR_5(CODE[2]), 

    debug_str@str	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_28(CODE[12]), STR_24(CODE[2]), STR_23(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), ROM(CODE[8192]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_28(CODE[12]), STR_27(CODE[2]), STR_26(CODE[21]), STR_25(CODE[1]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[29]), STR_21(CODE[2]), 
		 -> STR_20(CODE[21]), STR_19(CODE[1]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[21]), STR_15(CODE[2]), STR_12(CODE[20]), STR_11(CODE[2]), 
		 -> STR_10(CODE[21]), STR_9(CODE[1]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[29]), STR_5(CODE[2]), ROM(CODE[8192]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), g_debug(BANK1[32]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _printf_debug_MATRIX88->_debug_line
    _printf_debug_MATRIX88->_debug_str
    _debug_str->_USARTWriteString
    _debug_line->_USARTWriteString
    _USARTWriteString->_USARTWriteChar
    _max7219_init1->_SPI1_write
    _find_best_solution->_left_most
    _find_best_solution->_right_most
    _right_most->_is_right_boundary
    _merge1->_memcpy
    _left_most->_is_left_boundary
    _get_high->_is_row_empty
    _delete_matrix->_delete_row
    _delete_row->_memcpy
    _delete_row->_memset
    _char_info_index_rand->___awmod
    _rand->___lmul
    _printf_Screen->_printf_MATRIX88
    _printf_MATRIX88->_printf_MATRIX7219
    _printf_MATRIX7219->_Write_Byte
    _Write_Byte->_SPI1_write

Critical Paths under _main in BANK0

    _main->_find_best_solution
    _find_best_solution->_merge1
    _delete_matrix->_delete_row
    _char_info_index_rand->___awmod
    ___awmod->_rand
    _printf_Screen->_printf_MATRIX88

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    12      4   17856
                                             34 BANK0     16    12      4
                       _Clear_Matrix
                          _USARTInit
                             ___bmul
               _char_info_index_rand
                              _clear
                      _delete_matrix
                 _find_best_solution
                           _hit_land
                      _max7219_init1
                              _merge
                      _printf_Screen
              _printf_debug_MATRIX88
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _printf_debug_MATRIX88                                8     5      3    3030
                                              5 COMMON     8     5      3
                         _debug_line
                          _debug_str
 ---------------------------------------------------------------------------------
 (2) _debug_str                                            2     0      2    1202
                                              3 COMMON     2     0      2
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (2) _debug_line                                           2     0      2    1414
                                              3 COMMON     2     0      2
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (3) _USARTWriteString                                     2     0      2     597
                                              1 COMMON     2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (4) _USARTWriteChar                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _merge                                               11     7      4     427
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _max7219_init1                                        0     0      0      92
                         _SPI1_write
 ---------------------------------------------------------------------------------
 (2) _hit_land                                            11     7      4     471
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _find_best_solution                                  25    25      0    8730
                                              9 BANK0     25    25      0
                             ___bmul
                      _delete_matrix
                           _evaluate
                           _fall_off
                           _get_high
               _get_high_after_merge
              _get_holes_after_merge
                           _is_valid
                          _left_most
                             _merge1
                         _right_most
 ---------------------------------------------------------------------------------
 (2) _right_most                                           5     2      3     503
                                             10 COMMON     4     1      3
                                              0 BANK0      1     1      0
                  _is_right_boundary
 ---------------------------------------------------------------------------------
 (4) _is_right_boundary                                   10     7      3     308
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (2) _merge1                                              14     9      5     933
                                              7 COMMON     5     0      5
                                              0 BANK0      9     9      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _left_most                                            5     2      3     503
                                             11 COMMON     3     0      3
                                              0 BANK0      2     2      0
                   _is_left_boundary
 ---------------------------------------------------------------------------------
 (4) _is_left_boundary                                    11     8      3     308
                                              0 COMMON    11     8      3
 ---------------------------------------------------------------------------------
 (3) _is_valid                                            11     7      4     559
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (2) _get_holes_after_merge                               12    12      0    1054
                                              0 COMMON    12    12      0
 ---------------------------------------------------------------------------------
 (3) _get_high_after_merge                                 9     7      2     255
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _get_high                                             3     3      0     331
                                              6 COMMON     3     3      0
                       _is_row_empty
 ---------------------------------------------------------------------------------
 (3) _is_row_empty                                         6     5      1     192
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) _fall_off                                            11     7      4     516
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (2) _evaluate                                            12    10      2     389
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (2) _delete_matrix                                        4     4      0    1477
                                             11 COMMON     1     1      0
                                              4 BANK0      3     3      0
                         _delete_row
                        _is_row_full
 ---------------------------------------------------------------------------------
 (3) _is_row_full                                          6     5      1     192
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) _delete_row                                           8     7      1    1095
                                              7 COMMON     4     3      1
                                              0 BANK0      4     4      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     386
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     367
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _clear                                               11     7      4     427
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _char_info_index_rand                                 0     0      0     706
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     198
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     198
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                             13 COMMON     1     1      0
                                              7 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _USARTInit                                            3     1      2      75
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Clear_Matrix                                         0     0      0    1137
                             _memset
                      _printf_Screen
 ---------------------------------------------------------------------------------
 (1) _printf_Screen                                        0     0      0     775
                    _printf_MATRIX88
 ---------------------------------------------------------------------------------
 (2) _printf_MATRIX88                                     10    10      0     775
                                             10 COMMON     1     1      0
                                              0 BANK0      9     9      0
             _MATRIX88_to_MATRIX7219
                  _printf_MATRIX7219
 ---------------------------------------------------------------------------------
 (3) _printf_MATRIX7219                                    4     4      0     328
                                              6 COMMON     4     4      0
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (4) _Write_Byte                                           2     1      1     189
                                              4 COMMON     2     1      1
                         _SPI1_write
 ---------------------------------------------------------------------------------
 (5) _SPI1_write                                           4     4      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (3) _MATRIX88_to_MATRIX7219                               8     7      1     351
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     362
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear_Matrix
     _memset
     _printf_Screen
       _printf_MATRIX88
         _MATRIX88_to_MATRIX7219
         _printf_MATRIX7219
           _Write_Byte
             _SPI1_write
   _USARTInit
   ___bmul
   _char_info_index_rand
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
   _clear
   _delete_matrix
     _delete_row
       _memcpy
       _memset
     _is_row_full
   _find_best_solution
     ___bmul
     _delete_matrix
       _delete_row
         _memcpy
         _memset
       _is_row_full
     _evaluate
     _fall_off
     _get_high
       _is_row_empty
     _get_high_after_merge
     _get_holes_after_merge
     _is_valid
     _left_most
       _is_left_boundary
     _merge1
       _memcpy
     _right_most
       _is_right_boundary
   _hit_land
   _max7219_init1
     _SPI1_write
   _merge
   _printf_Screen
     _printf_MATRIX88
       _MATRIX88_to_MATRIX7219
       _printf_MATRIX7219
         _Write_Byte
           _SPI1_write
   _printf_debug_MATRIX88
     _debug_line
       _USARTWriteString
         _USARTWriteChar
     _debug_str
       _USARTWriteString
         _USARTWriteChar
   _srand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60       9      100.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      40      11       66.7%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3B       7       73.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     32      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     12D      12        0.0%
ABS                  0      0     12D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Aug 27 17:06:30 2016

                         __CFG_CP$ON 0000                                    pc 0002  
                     ___bmul@product 0072        get_holes_after_merge@num_hole 0076  
                                 l36 0B68                                   l29 0E6A  
                        __CFG_CPD$ON 0000                    merge1@matrix88_in 007A  
     __end_of_MATRIX88_to_MATRIX7219 004E                                   fsr 0004  
                 USARTInit@baud_rate 0070                ?_char_info_index_rand 0070  
                        get_high@row 0078                          __CFG_LVP$ON 0000  
                                l201 0D68                                  l235 01DA  
                                l333 0314                                  l415 04F3  
                                l432 051C                                  l426 04EA  
                                l391 0C7E                                  l384 0C5E  
                                l472 054E                                  _GIE 005F  
                                _RA1 0029                                  _RA2 002A  
                                _RA3 002B                   merge1@matrix88_out 007B  
                                fsr0 0004                                  indf 0000  
                       ___awmod@sign 002C                         __CFG_IESO$ON 0000  
              __end_of_max7219_init1 1000                       is_row_full@col 0075  
                     is_row_full@row 0070                                 l3020 0F0B  
                               l3012 0EF8                                 l3030 0E41  
                               l3006 0EDC                                 l3032 0E43  
                               l3008 0EEA                                 l3016 0F03  
                               l3200 0206                                 l3026 0E3D  
                               l3028 0E3F                                 l3036 0E48  
                               l3212 0228                                 l3222 0237  
                               l3206 0217                                 l2426 0D6B  
                               l2506 0CEB                                 l2530 0D25  
                               l2602 009B                                 l3242 0290  
                               l3250 029F                                 l2514 0CBD  
                               l2524 0D0E                                 l2700 03CF  
                               l3236 0276                                 l3228 023D  
                               l3270 0F52                                 l2534 0D2D  
                               l2606 00A1                                 l2630 00E9  
                               l2622 00B0                                 l3246 0299  
                               l3190 01E8                                 l2480 003F  
                               l2552 01A4                                 l2704 03F0  
                               l2616 00AA                                 l3360 076A  
                               l3274 0F5A                                 l3266 0F1B  
                               l2554 01BD                                 l2570 0D4C  
                               l2714 0409                                 l2722 0418  
                               l2634 00F2                                 l3290 0F6A  
                               l2476 0020                                 l2644 0DBB  
                               l2820 0306                                 l2804 02B7  
                               l2732 031A                                 l2564 0D35  
                               l2708 03F2                                 l3380 07A1  
                               l3196 01ED                                 l2486 0049  
                               l2814 02EB                                 l2574 0D54  
                               l2718 0412                                 l2590 005B  
                               l2638 00F8                                 l3390 07BF  
                               l3374 0782                                 l3382 0650  
                               l3294 0FA2                                 l2496 0C28  
                               l2648 0DD1                                 l2672 0DAA  
                               l2808 02CD                                 l2824 030E  
                               l2752 0373                                 l2760 0382  
                               l2584 0055                                 l3384 07A6  
                               l3376 079A                                 l2674 0D88  
                               l2746 035C                                 l2738 0320  
                               l2914 0431                                 l2906 0426  
                               l2842 0C74                                 l2850 0C94  
                               l3378 06BB                                 l3298 0FAA  
                               l2676 0DB1                                 l2756 037C  
                               l2924 0456                                 l2692 0394  
                               l2934 047C                                 l2686 038E  
                               l2598 0092                                 l2782 0151  
                               l2864 0CB5                                 l2952 04CD  
                               l2944 04C2                                 l3920 05AE  
                               l2858 0CA2                                 l2890 0E27  
                               l2786 0159                                 l2778 011B  
                               l3906 0553                                 l2868 0CBB  
                               l2884 0DFF                                 l3932 05F6  
                               l4590 0E65                                 l2974 0B9B  
                               l2798 02AD                                 l2894 0E30  
                               l4584 0E56                                 l2968 0525  
                               l4586 0E5B                                 l2994 0ECF  
                               l2978 0BA1                                 l4588 0E60  
                               l2998 0ED6                                 STR_1 0A7B  
                       __CFG_WDTE$ON 0000                                 STR_5 0A80  
                               STR_6 09B0                                 STR_7 0A7E  
                               STR_8 0A82                                 u3005 0405  
                        main@hit_res 0051                                 u3215 02BD  
                               u3225 02D0                                 u3065 034A  
                               u4105 0272                                 u4025 01F0  
                               u3155 0143                                 u4115 027E  
                               u2605 0173                                 u3255 02EE  
                               u3095 036F                                 u2625 0183  
                               u3505 0476                                 u3425 0437  
                               u2635 0196                                 u4315 0755  
                               u2485 0023                                 u3285 0EB5  
                               u2645 01B0                                 u2565 0D11  
                               u3445 0450                                 u2805 00E5  
                               u4405 0780                                 u4325 075D  
                               u4245 0F94                                 u3535 047F  
                               u4185 0F45                                 u2675 0D38  
                               u3635 04D0                                 u3555 0498  
                               _PEIE 005E                                 u3485 045D  
                               u2855 0DD3                                 u3575 04AD  
                               u2935 03BE                                 u2865 0DDB  
                               u6307 0629                                 _RCIE 0465  
                               u6317 0D70                                 u3765 0EDF  
                               u6327 0D78                                 u3695 0516  
                               u3785 0EF0                                 u2985 03EE  
                               u3795 0EF9                                 u6297 05E9  
                       __CFG_WRT$OFF 0000               __end_of_USARTWriteChar 0B6F  
                      __CFG_FCMEN$ON 0000                                 _main 0527  
                               _rand 0E7C                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0000                                 ttemp 007E  
                               wtemp 007E                    ___bmul@multiplier 0073  
                      __CFG_MCLRE$ON 0000      find_best_solution@tem_sub_index 003C  
                    is_row_empty@col 0075                      is_row_empty@row 0070  
         get_high_after_merge@matrix 0070                                ?_main 0042  
                              ?_rand 0020                                STR_10 0A1A  
                              STR_12 0A2F                                STR_21 0A80  
                              STR_13 0A71                                STR_30 0A54  
                              STR_14 09EA                                STR_22 09CD  
                              STR_23 0A7E                                STR_24 0A82  
                              STR_16 0A05                                STR_25 0A7D  
                              STR_26 0A1A                                STR_28 0A65  
                    __end_of___awmod 0F10                                STR_29 0A43  
                   USARTWriteChar@ch 0070                                _RCREG 001A  
                              _SPBRG 0099                     _is_left_boundary 004E  
                              _TXREG 0019                                _UQEnd 0062  
                ___lmul@multiplicand 0074                          ?_SPI1_write 0070  
                              _clear 0F10                      __end_of_dpowers 0828  
                              _cur_x 0061                                _cur_y 005B  
                              _merge 0F5F                                _randx 005D  
                              _srand 0B7F                         ?_is_row_full 0070  
                    ??_printf_Screen 007B                                pclath 000A  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                 __size_of_USARTInit 0047                      ?_USARTWriteChar 0070  
           printf_debug_MATRIX88@col 007C                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
           printf_debug_MATRIX88@row 007B                                status 0003  
                        hit_land@col 0079                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
                        hit_land@row 007A                _printf_debug_MATRIX88 01C4  
                     get_high@matrix 0077      find_best_solution@temp_pre_high 003A  
    find_best_solution@temp_pre_hole 0039                      __initialization 07C1  
    find_best_solution@temp_pre_risk 0037                         __end_of_main 0637  
                       __end_of_rand 0EC3               ??_char_info_index_rand 007E  
                             ??_main 0046                               ??_rand 0022  
                        evaluate@col 007A                          evaluate@row 007B  
           find_best_solution@temp_x 0041             find_best_solution@temp_y 0035  
                             ?_clear 0070                               ?_merge 0070  
                             ?_srand 0070                __size_of_Clear_Matrix 0011  
              __end_of_delete_matrix 0DB3                               _URBuff 0190  
                   __end_of_fall_off 0387                       __CFG_PWRTE$OFF 0000  
              get_high_after_merge@y 0076                     __end_of_get_high 0CBD  
                             ___bmul 0B99                  __size_of_SPI1_write 002A  
                             ___lmul 0DB3                            ??___awmod 007D  
                   __end_of_hit_land 02A1                     __end_of_evaluate 0313  
                             _merge1 00FA             __end_of_USARTWriteString 0CE2  
                             _memcpy 0CE2                               _memset 0C23  
                   __end_of_is_valid 041A                               clear@x 0078  
                             clear@y 0070                      ___awmod@divisor 0027  
           __size_of_printf_MATRIX88 0012                      ___awmod@counter 002B  
                  __end_of_USARTInit 0E7C                        ?_is_row_empty 0070  
        __size_of_find_best_solution 018A                               merge@x 0078  
                             merge@y 0070                          is_valid@col 007A  
                        is_valid@row 0079                         _Clear_Matrix 0B88  
                             srand@x 0070                    _is_right_boundary 00A3  
            ??_get_holes_after_merge 0070           printf_debug_MATRIX88@lable 0075  
                 ?_is_right_boundary 0070                       evaluate@matrix 0079  
            __end_of__initialization 07FC                       merge1@matrix44 0078  
             ?_printf_debug_MATRIX88 0075                       _g_cur_matrix44 0057  
                ??_is_right_boundary 0073                  ___bmul@multiplicand 0070  
   find_best_solution@temp_pre_count 0036                       __pcstackCOMMON 0070  
                       __pidataBANK0 0B62                         __pidataBANK1 0C08  
                      __end_of_clear 0F5F                           _Write_Byte 0BCC  
                      __end_of_merge 0FAF                        __end_of_srand 0B88  
                 __size_of_debug_str 0008                       ??_is_row_empty 0071  
          __end_of_is_right_boundary 00FA        __size_of_get_high_after_merge 0043  
         get_holes_after_merge@start 0078                              ??_clear 0074  
                            ??_merge 0074                              ??_srand 0072  
                       evaluate@full 0078                           __pbssBANK0 0052  
                         __pbssBANK1 00A0                           __pbssBANK2 0110  
                         __pbssBANK3 0190                         evaluate@risk 0076  
                 __size_of_left_most 0020                    is_row_full@matrix 0074  
               __size_of_is_row_full 0027                           _debug_line 0BAA  
                delete_matrix@matrix 0025                     is_valid@matrix44 0071  
                   is_valid@matrix88 0073             __end_of_is_left_boundary 00A3  
                         _g_matrix44 0830                           _delete_row 015E  
                         _g_matrix88 01B0                           __pmaintext 0527  
                            ?___bmul 0070                              ?___lmul 0070  
                            ?_merge1 0077                              ?_memcpy 0070  
                            ?_memset 0070                       ___lmul@product 0079  
          get_holes_after_merge@stop 0077                         ??_SPI1_write 0070  
                          ?_fall_off 0070                    ??_printf_MATRIX88 007A  
          printf_MATRIX88@matrix7219 0021                     ??_USARTWriteChar 0070  
               is_right_boundary@col 0079                 is_right_boundary@row 0078  
                          ?_get_high 0070                   USARTWriteInt@F1617 0052  
                         __stringtab 0800                            ?_hit_land 0070  
                  __end_of_debug_str 0B77                              _UQFront 0063  
                          ?_evaluate 0070                            ?_is_valid 0070  
                      debug_line@str 0073                      __size_of___bmul 0011  
                    __size_of___lmul 003F                          ?_Write_Byte 0074  
                            ___awmod 0EC3                   __end_of_SPI1_write 0D80  
             __size_of_max7219_init1 0051                          right_most@x 0020  
                            _g_debug 00A0                      __size_of_merge1 0064  
                    __size_of_memcpy 0026                            _ANSELbits 0188  
                    __size_of_memset 001C                    __end_of_left_most 0C7B  
                            __ptext1 0B7F                              __ptext2 01C4  
                            __ptext3 0B6F                              __ptext4 0BAA  
                            __ptext5 0CBD                              __ptext6 0B67  
                            __ptext7 0F5F                              __ptext8 0FAF  
                            __ptext9 0230  find_best_solution@tem_pre_sub_index 0034  
                  __end_of_hexpowers 0830                     fall_off@matrix44 0071  
                   fall_off@matrix88 0073                              _dpowers 081E  
                   ___awmod@dividend 0029           __size_of_is_right_boundary 0057  
                        SPI1_write@i 0073                           ??_fall_off 0074  
                         ??_get_high 0076                              clrloop0 0B78  
               end_of_initialization 07FC                    __end_of_octpowers 081E  
                  _printf_MATRIX7219 0C3F                           ??_hit_land 0074  
                            merge1@x 0026                              merge1@y 0077  
                         ??_evaluate 0072                              memcpy@d 0074  
                            memcpy@n 0071                              memcpy@s 0075  
              __end_of_printf_Screen 0B62                              memset@c 0070  
               __end_of_is_row_empty 0D56                              memset@n 0072  
                            memset@p 0075                           ??_is_valid 0074  
                        ?_debug_line 0073                   ?_printf_MATRIX7219 0070  
                     SPI1_write@data 0071                       SPI1_write@mask 0072  
                         _right_most 0C7B             ??_MATRIX88_to_MATRIX7219 0071  
                        ?_delete_row 0077                        clear@matrix44 0071  
                      clear@matrix88 0073                            _RCSTAbits 0018  
                  Write_Byte@myValue 0074                  ??_printf_MATRIX7219 0076  
                       __pstringtext 0800                    ?_USARTWriteString 0071  
      __size_of_char_info_index_rand 0018          printf_debug_MATRIX88@matrix 0077  
                 ??_USARTWriteString 0073                    _temp_cur_matrix44 0059  
          is_right_boundary@matrix44 0070            is_right_boundary@matrix88 0072  
                          _USARTInit 0E35                            _TRISAbits 0085  
          __end_of_printf_MATRIX7219 0C5B                        _max7219_init1 0FAF  
            ??_printf_debug_MATRIX88 0078                  __size_of_Write_Byte 0012  
                 right_most@matrix44 007A                   right_most@matrix88 007C  
     __size_of_get_holes_after_merge 010D        __end_of_get_holes_after_merge 0527  
              find_best_solution@res 0032                            _TXSTAbits 0098  
                     __end_of___bmul 0BAA           __end_of_find_best_solution 07C1  
                     __end_of___lmul 0DF2                       __end_of_merge1 015E  
                     __end_of_memcpy 0D08                       __end_of_memset 0C3F  
   MATRIX88_to_MATRIX7219@matrix7219 0070               __size_of_delete_matrix 0033  
                __size_of_debug_line 0011                  start_initialization 07C1  
                         ?_USARTInit 0070                  __size_of_delete_row 0066  
                     ?_max7219_init1 0070                           left_most@x 0021  
                      delete_row@len 0020                        delete_row@row 0077  
           __CFG_FOSC$INTRC_NOCLKOUT 0000                   is_right_boundary@x 0077  
       __end_of_get_high_after_merge 0E35                          ?_right_most 007A  
                  ?_is_left_boundary 0070      __size_of_MATRIX88_to_MATRIX7219 0048  
        get_holes_after_merge@matrix 0079                             ??___bmul 0071  
                           ??___lmul 0078                   ??_is_left_boundary 0073  
                         init_fetch0 0BBB                   is_row_empty@matrix 0074  
                        __pdataBANK0 005D                          __pdataBANK1 00C0  
                  _g_char_info_index 005C                      _printf_MATRIX88 0BDE  
                           ??_merge1 0020                             ??_memcpy 0073  
                           ??_memset 0074                          _g_char_info 00C0  
       find_best_solution@temp_count 003B         find_best_solution@temp_pre_x 0033  
  find_best_solution@left_most_index 0030                            ___latbits 0002  
                      __pcstackBANK0 0020           __size_of_printf_MATRIX7219 001C  
              __size_of_is_row_empty 0027                        ??_is_row_full 0071  
                  __size_of_fall_off 0074                    __size_of_get_high 0022  
                  __size_of_hit_land 0071                        _delete_matrix 0D80  
                          __pnvBANK0 0062                    __size_of_evaluate 0072  
                          _debug_str 0B6F                   delete_matrix@count 0024  
                  __size_of_is_valid 0093              printf_MATRIX7219@matrix 0078  
                   delete_matrix@row 0026                         ??_Write_Byte 0075  
                           ?___awmod 0027                         _is_row_empty 0D2F  
                  is_left_boundary@x 0078                      ??_max7219_init1 0074  
                        ??_USARTInit 0072               _MATRIX88_to_MATRIX7219 0006  
                          _left_most 0C5B                  __size_of_right_most 0020  
                          _hexpowers 0828                       __size_of_clear 004F  
               printf_MATRIX7219@col 0079                       __size_of_merge 0050  
                     __size_of_srand 0009                         debug_str@str 0073  
                 __end_of_Write_Byte 0BDE                         ??_debug_line 0075  
                     ?_delete_matrix 0070                            fall_off@x 0078  
                          fall_off@y 0070                     delete_row@matrix 0022  
                          clear_ram0 0B77                            _octpowers 0812  
                __end_of_is_row_full 0D2F                           ?_debug_str 0073  
            __end_of_printf_MATRIX88 0BF0                         ??_delete_row 0078  
                           _PIR1bits 000C                    left_most@matrix44 007B  
                  left_most@matrix88 007D                          __stringbase 0812  
                 __end_of_debug_line 0BBB                        ?_Clear_Matrix 0070  
               _get_high_after_merge 0DF2                           ?_left_most 007B  
                 __end_of_g_matrix44 09B0                   __end_of_delete_row 01C4  
                  ___lmul@multiplier 0070                  is_left_boundary@col 007A  
                is_left_boundary@row 0079                        merge@matrix44 0071  
                      merge@matrix88 0073            __size_of_USARTWriteString 0025  
                          hit_land@x 0078                            hit_land@y 0070  
     __size_of_printf_debug_MATRIX88 006C         __end_of_char_info_index_rand 0C08  
      __end_of_printf_debug_MATRIX88 0230                        _temp_matrix88 0110  
            get_high_after_merge@col 0077                            merge1@col 0028  
                          merge1@len 0024              get_high_after_merge@row 0078  
                          merge1@row 0027              __size_of_USARTWriteChar 0008  
                          is_valid@x 0078                            is_valid@y 0070  
        find_best_solution@temp_high 0040          find_best_solution@temp_hole 003F  
                   __size_of___awmod 004D          find_best_solution@temp_risk 003D  
                 __end_of__stringtab 0812               __size_of_printf_Screen 0005  
                     ??_Clear_Matrix 007B                ?_get_high_after_merge 0070  
           is_left_boundary@matrix44 0070             is_left_boundary@matrix88 0072  
                           _fall_off 0313                   _find_best_solution 0637  
                           __ptext10 0637                             __ptext11 0C7B  
                           __ptext20 0D2F                             __ptext12 00A3  
                           __ptext21 0313                             __ptext13 00FA  
                           __ptext30 0E7C                             __ptext22 02A1  
                           __ptext14 0C5B                             __ptext31 0DB3  
                           __ptext23 0D80                             __ptext15 004E  
                           __ptext40 0006                             __ptext32 0EC3  
                           __ptext24 0D08                             __ptext16 0387  
                           __ptext41 0C23                             __ptext33 0E35  
                           __ptext25 015E                             __ptext17 041A  
                           __ptext34 0B88                             __ptext26 0CE2  
                           __ptext18 0DF2                             __ptext35 0B5D  
                           __ptext27 0B99                             __ptext19 0C9B  
                           __ptext36 0BDE                             __ptext28 0F10  
                           __ptext37 0C3F                             __ptext29 0BF0  
                           __ptext38 0BCC                             __ptext39 0D56  
                  __CFG_BOR4V$BOR21V 0000                             _get_high 0C9B  
                        _is_row_full 0D08       MATRIX88_to_MATRIX7219@matrix88 0074  
                    ??_delete_matrix 007B                             _hit_land 0230  
                           _evaluate 02A1                  ?_find_best_solution 0070  
                      __size_of_main 0110                             _is_valid 0387  
                      __size_of_rand 0047                     hit_land@matrix44 0071  
                   hit_land@matrix88 0073                             clear@col 007A  
                           clear@row 0079                         ??_right_most 007D  
              _get_holes_after_merge 041A                          ??_debug_str 0075  
                   ?_printf_MATRIX88 0070                             main@Seed 004F  
                           main@argc 0042                             main@argv 0044  
           get_holes_after_merge@col 007A             get_holes_after_merge@row 007B  
               ??_find_best_solution 0029                          fall_off@col 0079  
                        fall_off@row 007A            __size_of_is_left_boundary 0055  
                        delete_row@i 0023                          ??_left_most 0020  
                           memcpy@d1 0076                             memcpy@s1 0070  
                           merge@col 007A                             merge@row 0079  
                 __end_of_right_most 0C9B                             init_ram0 0BBF  
                           memset@p1 0076                        _printf_Screen 0B5D  
                          stringcode 080A                   Write_Byte@myColumn 0075  
                USARTWriteString@str 0071              printf_MATRIX88@matrix88 0020  
               _char_info_index_rand 0BF0              ?_MATRIX88_to_MATRIX7219 0070  
             ??_get_high_after_merge 0072   find_best_solution@right_most_index 0031  
                           stringtab 0800                           _SPI1_write 0D56  
                   _USARTWriteString 0CBD                       ?_printf_Screen 0070  
             ?_get_holes_after_merge 0070                       _USARTWriteChar 0B67  
         MATRIX88_to_MATRIX7219@mask 0075            MATRIX88_to_MATRIX7219@col 0077  
               __end_of_Clear_Matrix 0B99            MATRIX88_to_MATRIX7219@row 0076  
