

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Aug 28 21:09:09 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	dabs	1,0x7E,2
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217                           
   218                           	psect	idataBANK0
   219  0A70                     __pidataBANK0:	
   220                           
   221                           ;initializer for _randx
   222  0A70  3401               	retlw	1
   223  0A71  3400               	retlw	0
   224  0A72  3400               	retlw	0
   225  0A73  3400               	retlw	0
   226                           
   227                           ;initializer for _cur_x
   228  0A74  3402               	retlw	2
   229                           
   230                           	psect	idataBANK1
   231  0ABA                     __pidataBANK1:	
   232                           
   233                           ;initializer for _g_char_info
   234  0ABA  3400               	retlw	0
   235  0ABB  3400               	retlw	0
   236  0ABC  3402               	retlw	2
   237  0ABD  3402               	retlw	2
   238  0ABE  3400               	retlw	0
   239  0ABF  3402               	retlw	2
   240  0AC0  3404               	retlw	4
   241  0AC1  3400               	retlw	0
   242  0AC2  3402               	retlw	2
   243  0AC3  3406               	retlw	6
   244  0AC4  3400               	retlw	0
   245  0AC5  3404               	retlw	4
   246  0AC6  340A               	retlw	10
   247  0AC7  3400               	retlw	0
   248  0AC8  3404               	retlw	4
   249  0AC9  340E               	retlw	14
   250  0ACA  3400               	retlw	0
   251  0ACB  3401               	retlw	1
   252  0ACC  340F               	retlw	15
   253  0ACD  3400               	retlw	0
   254  0ACE  3404               	retlw	4
   255  0ACF  3413               	retlw	19
   256  0AD0  3400               	retlw	0
   257  0AD1  3401               	retlw	1
   258  0AD2  3414               	retlw	20
   259  0AD3  3400               	retlw	0
   260  0AD4  3404               	retlw	4
   261                           
   262                           	psect	stringtext
   263  0800                     __pstringtext:	
   264  0800                     stringtab:	
   265  0800                     __stringtab:	
   266                           
   267                           ;	String table - string pointers are 2 bytes each
   268  0800  1BFF               	btfsc	btemp+1,7
   269  0801  280A               	ljmp	stringcode
   270  0802  1383               	bcf	3,7
   271  0803  187F               	btfsc	btemp+1,0
   272  0804  1783               	bsf	3,7
   273  0805  0800               	movf	0,w
   274  0806  0A84               	incf	4,f
   275  0807  1903               	skipnz
   276  0808  0AFF               	incf	btemp+1,f
   277  0809  0008               	return
   278  080A                     stringcode:	
   279  080A  087F               	movf	btemp+1,w
   280  080B  397F               	andlw	127
   281  080C  008A               	movwf	10
   282  080D  0804               	movf	4,w
   283  080E  0A84               	incf	4,f
   284  080F  1903               	skipnz
   285  0810  0AFF               	incf	btemp+1,f
   286  0811  0082               	movwf	2
   287  0812                     __stringbase:	
   288  0812                     __end_of__stringtab:	
   289  0812                     _octpowers:	
   290  0812  3401               	retlw	1
   291  0813  3400               	retlw	0
   292  0814  3408               	retlw	8
   293  0815  3400               	retlw	0
   294  0816  3440               	retlw	64
   295  0817  3400               	retlw	0
   296  0818  3400               	retlw	0
   297  0819  3402               	retlw	2
   298  081A  3400               	retlw	0
   299  081B  3410               	retlw	16
   300  081C  3400               	retlw	0
   301  081D  3480               	retlw	128
   302  081E                     __end_of_octpowers:	
   303  081E                     _dpowers:	
   304  081E  3401               	retlw	1
   305  081F  3400               	retlw	0
   306  0820  340A               	retlw	10
   307  0821  3400               	retlw	0
   308  0822  3464               	retlw	100
   309  0823  3400               	retlw	0
   310  0824  34E8               	retlw	232
   311  0825  3403               	retlw	3
   312  0826  3410               	retlw	16
   313  0827  3427               	retlw	39
   314  0828                     __end_of_dpowers:	
   315  0828                     _hexpowers:	
   316  0828  3401               	retlw	1
   317  0829  3400               	retlw	0
   318  082A  3410               	retlw	16
   319  082B  3400               	retlw	0
   320  082C  3400               	retlw	0
   321  082D  3401               	retlw	1
   322  082E  3400               	retlw	0
   323  082F  3410               	retlw	16
   324  0830                     __end_of_hexpowers:	
   325  0830                     _g_matrix44:	
   326  0830  3400               	retlw	0
   327  0831  3401               	retlw	1
   328  0832  3400               	retlw	0
   329  0833  3400               	retlw	0
   330  0834  3400               	retlw	0
   331  0835  3401               	retlw	1
   332  0836  3400               	retlw	0
   333  0837  3400               	retlw	0
   334  0838  3400               	retlw	0
   335  0839  3401               	retlw	1
   336  083A  3400               	retlw	0
   337  083B  3400               	retlw	0
   338  083C  3400               	retlw	0
   339  083D  3401               	retlw	1
   340  083E  3400               	retlw	0
   341  083F  3400               	retlw	0
   342  0840  3400               	retlw	0
   343  0841  3400               	retlw	0
   344  0842  3400               	retlw	0
   345  0843  3400               	retlw	0
   346  0844  3401               	retlw	1
   347  0845  3401               	retlw	1
   348  0846  3401               	retlw	1
   349  0847  3401               	retlw	1
   350  0848  3400               	retlw	0
   351  0849  3400               	retlw	0
   352  084A  3400               	retlw	0
   353  084B  3400               	retlw	0
   354  084C  3400               	retlw	0
   355  084D  3400               	retlw	0
   356  084E  3400               	retlw	0
   357  084F  3400               	retlw	0
   358  0850  3400               	retlw	0
   359  0851  3401               	retlw	1
   360  0852  3401               	retlw	1
   361  0853  3400               	retlw	0
   362  0854  3401               	retlw	1
   363  0855  3401               	retlw	1
   364  0856  3400               	retlw	0
   365  0857  3400               	retlw	0
   366  0858  3400               	retlw	0
   367  0859  3400               	retlw	0
   368  085A  3400               	retlw	0
   369  085B  3400               	retlw	0
   370  085C  3400               	retlw	0
   371  085D  3400               	retlw	0
   372  085E  3400               	retlw	0
   373  085F  3400               	retlw	0
   374  0860  3400               	retlw	0
   375  0861  3401               	retlw	1
   376  0862  3400               	retlw	0
   377  0863  3400               	retlw	0
   378  0864  3400               	retlw	0
   379  0865  3401               	retlw	1
   380  0866  3401               	retlw	1
   381  0867  3400               	retlw	0
   382  0868  3400               	retlw	0
   383  0869  3400               	retlw	0
   384  086A  3401               	retlw	1
   385  086B  3400               	retlw	0
   386  086C  3400               	retlw	0
   387  086D  3400               	retlw	0
   388  086E  3400               	retlw	0
   389  086F  3400               	retlw	0
   390  0870  3401               	retlw	1
   391  0871  3401               	retlw	1
   392  0872  3400               	retlw	0
   393  0873  3400               	retlw	0
   394  0874  3400               	retlw	0
   395  0875  3401               	retlw	1
   396  0876  3401               	retlw	1
   397  0877  3400               	retlw	0
   398  0878  3400               	retlw	0
   399  0879  3400               	retlw	0
   400  087A  3400               	retlw	0
   401  087B  3400               	retlw	0
   402  087C  3400               	retlw	0
   403  087D  3400               	retlw	0
   404  087E  3400               	retlw	0
   405  087F  3400               	retlw	0
   406  0880  3400               	retlw	0
   407  0881  3401               	retlw	1
   408  0882  3400               	retlw	0
   409  0883  3400               	retlw	0
   410  0884  3401               	retlw	1
   411  0885  3401               	retlw	1
   412  0886  3400               	retlw	0
   413  0887  3400               	retlw	0
   414  0888  3401               	retlw	1
   415  0889  3400               	retlw	0
   416  088A  3400               	retlw	0
   417  088B  3400               	retlw	0
   418  088C  3400               	retlw	0
   419  088D  3400               	retlw	0
   420  088E  3400               	retlw	0
   421  088F  3400               	retlw	0
   422  0890  3400               	retlw	0
   423  0891  3400               	retlw	0
   424  0892  3400               	retlw	0
   425  0893  3400               	retlw	0
   426  0894  3401               	retlw	1
   427  0895  3401               	retlw	1
   428  0896  3401               	retlw	1
   429  0897  3400               	retlw	0
   430  0898  3400               	retlw	0
   431  0899  3400               	retlw	0
   432  089A  3401               	retlw	1
   433  089B  3400               	retlw	0
   434  089C  3400               	retlw	0
   435  089D  3400               	retlw	0
   436  089E  3400               	retlw	0
   437  089F  3400               	retlw	0
   438  08A0  3400               	retlw	0
   439  08A1  3401               	retlw	1
   440  08A2  3401               	retlw	1
   441  08A3  3400               	retlw	0
   442  08A4  3400               	retlw	0
   443  08A5  3401               	retlw	1
   444  08A6  3400               	retlw	0
   445  08A7  3400               	retlw	0
   446  08A8  3400               	retlw	0
   447  08A9  3401               	retlw	1
   448  08AA  3400               	retlw	0
   449  08AB  3400               	retlw	0
   450  08AC  3400               	retlw	0
   451  08AD  3400               	retlw	0
   452  08AE  3400               	retlw	0
   453  08AF  3400               	retlw	0
   454  08B0  3401               	retlw	1
   455  08B1  3400               	retlw	0
   456  08B2  3400               	retlw	0
   457  08B3  3400               	retlw	0
   458  08B4  3401               	retlw	1
   459  08B5  3401               	retlw	1
   460  08B6  3401               	retlw	1
   461  08B7  3400               	retlw	0
   462  08B8  3400               	retlw	0
   463  08B9  3400               	retlw	0
   464  08BA  3400               	retlw	0
   465  08BB  3400               	retlw	0
   466  08BC  3400               	retlw	0
   467  08BD  3400               	retlw	0
   468  08BE  3400               	retlw	0
   469  08BF  3400               	retlw	0
   470  08C0  3400               	retlw	0
   471  08C1  3401               	retlw	1
   472  08C2  3400               	retlw	0
   473  08C3  3400               	retlw	0
   474  08C4  3400               	retlw	0
   475  08C5  3401               	retlw	1
   476  08C6  3400               	retlw	0
   477  08C7  3400               	retlw	0
   478  08C8  3401               	retlw	1
   479  08C9  3401               	retlw	1
   480  08CA  3400               	retlw	0
   481  08CB  3400               	retlw	0
   482  08CC  3400               	retlw	0
   483  08CD  3400               	retlw	0
   484  08CE  3400               	retlw	0
   485  08CF  3400               	retlw	0
   486  08D0  3400               	retlw	0
   487  08D1  3400               	retlw	0
   488  08D2  3400               	retlw	0
   489  08D3  3400               	retlw	0
   490  08D4  3401               	retlw	1
   491  08D5  3401               	retlw	1
   492  08D6  3401               	retlw	1
   493  08D7  3400               	retlw	0
   494  08D8  3401               	retlw	1
   495  08D9  3400               	retlw	0
   496  08DA  3400               	retlw	0
   497  08DB  3400               	retlw	0
   498  08DC  3400               	retlw	0
   499  08DD  3400               	retlw	0
   500  08DE  3400               	retlw	0
   501  08DF  3400               	retlw	0
   502  08E0  3401               	retlw	1
   503  08E1  3401               	retlw	1
   504  08E2  3400               	retlw	0
   505  08E3  3400               	retlw	0
   506  08E4  3400               	retlw	0
   507  08E5  3401               	retlw	1
   508  08E6  3400               	retlw	0
   509  08E7  3400               	retlw	0
   510  08E8  3400               	retlw	0
   511  08E9  3401               	retlw	1
   512  08EA  3400               	retlw	0
   513  08EB  3400               	retlw	0
   514  08EC  3400               	retlw	0
   515  08ED  3400               	retlw	0
   516  08EE  3400               	retlw	0
   517  08EF  3400               	retlw	0
   518  08F0  3400               	retlw	0
   519  08F1  3400               	retlw	0
   520  08F2  3401               	retlw	1
   521  08F3  3400               	retlw	0
   522  08F4  3401               	retlw	1
   523  08F5  3401               	retlw	1
   524  08F6  3401               	retlw	1
   525  08F7  3400               	retlw	0
   526  08F8  3400               	retlw	0
   527  08F9  3400               	retlw	0
   528  08FA  3400               	retlw	0
   529  08FB  3400               	retlw	0
   530  08FC  3400               	retlw	0
   531  08FD  3400               	retlw	0
   532  08FE  3400               	retlw	0
   533  08FF  3400               	retlw	0
   534  0900  3400               	retlw	0
   535  0901  3401               	retlw	1
   536  0902  3400               	retlw	0
   537  0903  3400               	retlw	0
   538  0904  3400               	retlw	0
   539  0905  3401               	retlw	1
   540  0906  3400               	retlw	0
   541  0907  3400               	retlw	0
   542  0908  3400               	retlw	0
   543  0909  3401               	retlw	1
   544  090A  3401               	retlw	1
   545  090B  3400               	retlw	0
   546  090C  3400               	retlw	0
   547  090D  3400               	retlw	0
   548  090E  3400               	retlw	0
   549  090F  3400               	retlw	0
   550  0910  3400               	retlw	0
   551  0911  3401               	retlw	1
   552  0912  3401               	retlw	1
   553  0913  3400               	retlw	0
   554  0914  3400               	retlw	0
   555  0915  3401               	retlw	1
   556  0916  3401               	retlw	1
   557  0917  3400               	retlw	0
   558  0918  3400               	retlw	0
   559  0919  3400               	retlw	0
   560  091A  3400               	retlw	0
   561  091B  3400               	retlw	0
   562  091C  3400               	retlw	0
   563  091D  3400               	retlw	0
   564  091E  3400               	retlw	0
   565  091F  3400               	retlw	0
   566  0920  3400               	retlw	0
   567  0921  3400               	retlw	0
   568  0922  3400               	retlw	0
   569  0923  3400               	retlw	0
   570  0924  3400               	retlw	0
   571  0925  3401               	retlw	1
   572  0926  3401               	retlw	1
   573  0927  3400               	retlw	0
   574  0928  3400               	retlw	0
   575  0929  3401               	retlw	1
   576  092A  3400               	retlw	0
   577  092B  3400               	retlw	0
   578  092C  3400               	retlw	0
   579  092D  3400               	retlw	0
   580  092E  3400               	retlw	0
   581  092F  3400               	retlw	0
   582  0930  3400               	retlw	0
   583  0931  3400               	retlw	0
   584  0932  3400               	retlw	0
   585  0933  3400               	retlw	0
   586  0934  3401               	retlw	1
   587  0935  3401               	retlw	1
   588  0936  3400               	retlw	0
   589  0937  3400               	retlw	0
   590  0938  3400               	retlw	0
   591  0939  3401               	retlw	1
   592  093A  3400               	retlw	0
   593  093B  3400               	retlw	0
   594  093C  3400               	retlw	0
   595  093D  3400               	retlw	0
   596  093E  3400               	retlw	0
   597  093F  3400               	retlw	0
   598  0940  3400               	retlw	0
   599  0941  3401               	retlw	1
   600  0942  3400               	retlw	0
   601  0943  3400               	retlw	0
   602  0944  3401               	retlw	1
   603  0945  3401               	retlw	1
   604  0946  3400               	retlw	0
   605  0947  3400               	retlw	0
   606  0948  3400               	retlw	0
   607  0949  3400               	retlw	0
   608  094A  3400               	retlw	0
   609  094B  3400               	retlw	0
   610  094C  3400               	retlw	0
   611  094D  3400               	retlw	0
   612  094E  3400               	retlw	0
   613  094F  3400               	retlw	0
   614  0950  3400               	retlw	0
   615  0951  3401               	retlw	1
   616  0952  3400               	retlw	0
   617  0953  3400               	retlw	0
   618  0954  3400               	retlw	0
   619  0955  3401               	retlw	1
   620  0956  3401               	retlw	1
   621  0957  3400               	retlw	0
   622  0958  3400               	retlw	0
   623  0959  3400               	retlw	0
   624  095A  3400               	retlw	0
   625  095B  3400               	retlw	0
   626  095C  3400               	retlw	0
   627  095D  3400               	retlw	0
   628  095E  3400               	retlw	0
   629  095F  3400               	retlw	0
   630  0960  3400               	retlw	0
   631  0961  3401               	retlw	1
   632  0962  3400               	retlw	0
   633  0963  3400               	retlw	0
   634  0964  3401               	retlw	1
   635  0965  3401               	retlw	1
   636  0966  3401               	retlw	1
   637  0967  3400               	retlw	0
   638  0968  3400               	retlw	0
   639  0969  3401               	retlw	1
   640  096A  3400               	retlw	0
   641  096B  3400               	retlw	0
   642  096C  3400               	retlw	0
   643  096D  3400               	retlw	0
   644  096E  3400               	retlw	0
   645  096F  3400               	retlw	0
   646  0970  3401               	retlw	1
   647  0971  3401               	retlw	1
   648  0972  3401               	retlw	1
   649  0973  3400               	retlw	0
   650  0974  3400               	retlw	0
   651  0975  3401               	retlw	1
   652  0976  3400               	retlw	0
   653  0977  3400               	retlw	0
   654  0978  3400               	retlw	0
   655  0979  3401               	retlw	1
   656  097A  3400               	retlw	0
   657  097B  3400               	retlw	0
   658  097C  3400               	retlw	0
   659  097D  3400               	retlw	0
   660  097E  3400               	retlw	0
   661  097F  3400               	retlw	0
   662  0980  3400               	retlw	0
   663  0981  3400               	retlw	0
   664  0982  3401               	retlw	1
   665  0983  3400               	retlw	0
   666  0984  3401               	retlw	1
   667  0985  3401               	retlw	1
   668  0986  3401               	retlw	1
   669  0987  3400               	retlw	0
   670  0988  3400               	retlw	0
   671  0989  3400               	retlw	0
   672  098A  3401               	retlw	1
   673  098B  3400               	retlw	0
   674  098C  3400               	retlw	0
   675  098D  3400               	retlw	0
   676  098E  3400               	retlw	0
   677  098F  3400               	retlw	0
   678  0990  3400               	retlw	0
   679  0991  3401               	retlw	1
   680  0992  3400               	retlw	0
   681  0993  3400               	retlw	0
   682  0994  3400               	retlw	0
   683  0995  3401               	retlw	1
   684  0996  3400               	retlw	0
   685  0997  3400               	retlw	0
   686  0998  3401               	retlw	1
   687  0999  3401               	retlw	1
   688  099A  3401               	retlw	1
   689  099B  3400               	retlw	0
   690  099C  3400               	retlw	0
   691  099D  3400               	retlw	0
   692  099E  3400               	retlw	0
   693  099F  3400               	retlw	0
   694  09A0  3401               	retlw	1
   695  09A1  3400               	retlw	0
   696  09A2  3400               	retlw	0
   697  09A3  3400               	retlw	0
   698  09A4  3401               	retlw	1
   699  09A5  3401               	retlw	1
   700  09A6  3401               	retlw	1
   701  09A7  3400               	retlw	0
   702  09A8  3401               	retlw	1
   703  09A9  3400               	retlw	0
   704  09AA  3400               	retlw	0
   705  09AB  3400               	retlw	0
   706  09AC  3400               	retlw	0
   707  09AD  3400               	retlw	0
   708  09AE  3400               	retlw	0
   709  09AF  3400               	retlw	0
   710  09B0                     __end_of_g_matrix44:	
   711  09B0                     STR_6:	
   712  09B0  343C               	retlw	60	;'<'
   713  09B1  343C               	retlw	60	;'<'
   714  09B2  343C               	retlw	60	;'<'
   715  09B3  343C               	retlw	60	;'<'
   716  09B4  343C               	retlw	60	;'<'
   717  09B5  343C               	retlw	60	;'<'
   718  09B6  343C               	retlw	60	;'<'
   719  09B7  343C               	retlw	60	;'<'
   720  09B8  343C               	retlw	60	;'<'
   721  09B9  343C               	retlw	60	;'<'
   722  09BA  343C               	retlw	60	;'<'
   723  09BB  343C               	retlw	60	;'<'
   724  09BC  343C               	retlw	60	;'<'
   725  09BD  343C               	retlw	60	;'<'
   726  09BE  343C               	retlw	60	;'<'
   727  09BF  343C               	retlw	60	;'<'
   728  09C0  343C               	retlw	60	;'<'
   729  09C1  343C               	retlw	60	;'<'
   730  09C2  343C               	retlw	60	;'<'
   731  09C3  343C               	retlw	60	;'<'
   732  09C4  344D               	retlw	77	;'M'
   733  09C5  3441               	retlw	65	;'A'
   734  09C6  3454               	retlw	84	;'T'
   735  09C7  3452               	retlw	82	;'R'
   736  09C8  3449               	retlw	73	;'I'
   737  09C9  3458               	retlw	88	;'X'
   738  09CA  3434               	retlw	52	;'4'
   739  09CB  3434               	retlw	52	;'4'
   740  09CC  3400               	retlw	0
   741  09CD                     STR_16:	
   742  09CD  343C               	retlw	60	;'<'
   743  09CE  343C               	retlw	60	;'<'
   744  09CF  343C               	retlw	60	;'<'
   745  09D0  343C               	retlw	60	;'<'
   746  09D1  343C               	retlw	60	;'<'
   747  09D2  343C               	retlw	60	;'<'
   748  09D3  343C               	retlw	60	;'<'
   749  09D4  343C               	retlw	60	;'<'
   750  09D5  343C               	retlw	60	;'<'
   751  09D6  343C               	retlw	60	;'<'
   752  09D7  343C               	retlw	60	;'<'
   753  09D8  343C               	retlw	60	;'<'
   754  09D9  343C               	retlw	60	;'<'
   755  09DA  343C               	retlw	60	;'<'
   756  09DB  343C               	retlw	60	;'<'
   757  09DC  343C               	retlw	60	;'<'
   758  09DD  343C               	retlw	60	;'<'
   759  09DE  343C               	retlw	60	;'<'
   760  09DF  343C               	retlw	60	;'<'
   761  09E0  343C               	retlw	60	;'<'
   762  09E1  344D               	retlw	77	;'M'
   763  09E2  3441               	retlw	65	;'A'
   764  09E3  3454               	retlw	84	;'T'
   765  09E4  3452               	retlw	82	;'R'
   766  09E5  3449               	retlw	73	;'I'
   767  09E6  3458               	retlw	88	;'X'
   768  09E7  3438               	retlw	56	;'8'
   769  09E8  3438               	retlw	56	;'8'
   770  09E9  3400               	retlw	0
   771  09EA                     STR_14:	
   772  09EA  3469               	retlw	105	;'i'
   773  09EB  346E               	retlw	110	;'n'
   774  09EC  3464               	retlw	100	;'d'
   775  09ED  3465               	retlw	101	;'e'
   776  09EE  3478               	retlw	120	;'x'
   777  09EF  3420               	retlw	32	;' '
   778  09F0  343D               	retlw	61	;'='
   779  09F1  3420               	retlw	32	;' '
   780  09F2  3425               	retlw	37	;'%'
   781  09F3  3464               	retlw	100	;'d'
   782  09F4  342C               	retlw	44	;','
   783  09F5  3420               	retlw	32	;' '
   784  09F6  3473               	retlw	115	;'s'
   785  09F7  3475               	retlw	117	;'u'
   786  09F8  3462               	retlw	98	;'b'
   787  09F9  345F               	retlw	95	;'_'
   788  09FA  3469               	retlw	105	;'i'
   789  09FB  346E               	retlw	110	;'n'
   790  09FC  3464               	retlw	100	;'d'
   791  09FD  3465               	retlw	101	;'e'
   792  09FE  3478               	retlw	120	;'x'
   793  09FF  3420               	retlw	32	;' '
   794  0A00  343D               	retlw	61	;'='
   795  0A01  3420               	retlw	32	;' '
   796  0A02  3425               	retlw	37	;'%'
   797  0A03  3464               	retlw	100	;'d'
   798  0A04  3400               	retlw	0
   799  0A05                     STR_10:	
   800  0A05  343E               	retlw	62	;'>'
   801  0A06  343E               	retlw	62	;'>'
   802  0A07  343E               	retlw	62	;'>'
   803  0A08  343E               	retlw	62	;'>'
   804  0A09  343E               	retlw	62	;'>'
   805  0A0A  343E               	retlw	62	;'>'
   806  0A0B  343E               	retlw	62	;'>'
   807  0A0C  343E               	retlw	62	;'>'
   808  0A0D  343E               	retlw	62	;'>'
   809  0A0E  343E               	retlw	62	;'>'
   810  0A0F  343E               	retlw	62	;'>'
   811  0A10  343E               	retlw	62	;'>'
   812  0A11  343E               	retlw	62	;'>'
   813  0A12  343E               	retlw	62	;'>'
   814  0A13  343E               	retlw	62	;'>'
   815  0A14  343E               	retlw	62	;'>'
   816  0A15  343E               	retlw	62	;'>'
   817  0A16  343E               	retlw	62	;'>'
   818  0A17  343E               	retlw	62	;'>'
   819  0A18  343E               	retlw	62	;'>'
   820  0A19  3400               	retlw	0
   821  0A1A                     STR_12:	
   822  0A1A  3470               	retlw	112	;'p'
   823  0A1B  3472               	retlw	114	;'r'
   824  0A1C  3469               	retlw	105	;'i'
   825  0A1D  346E               	retlw	110	;'n'
   826  0A1E  3474               	retlw	116	;'t'
   827  0A1F  3466               	retlw	102	;'f'
   828  0A20  345F               	retlw	95	;'_'
   829  0A21  3461               	retlw	97	;'a'
   830  0A22  346C               	retlw	108	;'l'
   831  0A23  346C               	retlw	108	;'l'
   832  0A24  345F               	retlw	95	;'_'
   833  0A25  344D               	retlw	77	;'M'
   834  0A26  3441               	retlw	65	;'A'
   835  0A27  3454               	retlw	84	;'T'
   836  0A28  3452               	retlw	82	;'R'
   837  0A29  3449               	retlw	73	;'I'
   838  0A2A  3458               	retlw	88	;'X'
   839  0A2B  3434               	retlw	52	;'4'
   840  0A2C  3434               	retlw	52	;'4'
   841  0A2D  3400               	retlw	0
   842  0A2E                     STR_23:	
   843  0A2E  3430               	retlw	48	;'0'
   844  0A2F  3431               	retlw	49	;'1'
   845  0A30  3432               	retlw	50	;'2'
   846  0A31  3433               	retlw	51	;'3'
   847  0A32  3434               	retlw	52	;'4'
   848  0A33  3435               	retlw	53	;'5'
   849  0A34  3436               	retlw	54	;'6'
   850  0A35  3437               	retlw	55	;'7'
   851  0A36  3438               	retlw	56	;'8'
   852  0A37  3439               	retlw	57	;'9'
   853  0A38  3441               	retlw	65	;'A'
   854  0A39  3442               	retlw	66	;'B'
   855  0A3A  3443               	retlw	67	;'C'
   856  0A3B  3444               	retlw	68	;'D'
   857  0A3C  3445               	retlw	69	;'E'
   858  0A3D  3446               	retlw	70	;'F'
   859  0A3E  3400               	retlw	0
   860  0A3F                     STR_24:	
   861  0A3F  3430               	retlw	48	;'0'
   862  0A40  3431               	retlw	49	;'1'
   863  0A41  3432               	retlw	50	;'2'
   864  0A42  3433               	retlw	51	;'3'
   865  0A43  3434               	retlw	52	;'4'
   866  0A44  3435               	retlw	53	;'5'
   867  0A45  3436               	retlw	54	;'6'
   868  0A46  3437               	retlw	55	;'7'
   869  0A47  3438               	retlw	56	;'8'
   870  0A48  3439               	retlw	57	;'9'
   871  0A49  3461               	retlw	97	;'a'
   872  0A4A  3462               	retlw	98	;'b'
   873  0A4B  3463               	retlw	99	;'c'
   874  0A4C  3464               	retlw	100	;'d'
   875  0A4D  3465               	retlw	101	;'e'
   876  0A4E  3466               	retlw	102	;'f'
   877  0A4F  3400               	retlw	0
   878  0A50                     STR_22:	
   879  0A50  344D               	retlw	77	;'M'
   880  0A51  3461               	retlw	97	;'a'
   881  0A52  3469               	retlw	105	;'i'
   882  0A53  346E               	retlw	110	;'n'
   883  0A54  3420               	retlw	32	;' '
   884  0A55  3473               	retlw	115	;'s'
   885  0A56  3463               	retlw	99	;'c'
   886  0A57  3472               	retlw	114	;'r'
   887  0A58  3465               	retlw	101	;'e'
   888  0A59  3465               	retlw	101	;'e'
   889  0A5A  346E               	retlw	110	;'n'
   890  0A5B  3400               	retlw	0
   891  0A5C                     STR_13:	
   892  0A5C  3473               	retlw	115	;'s'
   893  0A5D  3469               	retlw	105	;'i'
   894  0A5E  347A               	retlw	122	;'z'
   895  0A5F  3465               	retlw	101	;'e'
   896  0A60  3420               	retlw	32	;' '
   897  0A61  343D               	retlw	61	;'='
   898  0A62  3420               	retlw	32	;' '
   899  0A63  3425               	retlw	37	;'%'
   900  0A64  3464               	retlw	100	;'d'
   901  0A65  3400               	retlw	0
   902  0A66                     STR_1:	
   903  0A66  340D               	retlw	13
   904  0A67  340A               	retlw	10
   905  0A68  3400               	retlw	0
   906  0A69                     STR_7:	
   907  0A69  342A               	retlw	42	;'*'
   908  0A6A  3400               	retlw	0
   909  0A6B                     STR_5:	
   910  0A6B  343A               	retlw	58	;':'
   911  0A6C  3400               	retlw	0
   912  0A6D                     STR_8:	
   913  0A6D  345F               	retlw	95	;'_'
   914  0A6E  3400               	retlw	0
   915  0A68                     
   916                           ; #config settings
   917  0000                     
   918                           	psect	nvBANK0
   919  0069                     __pnvBANK0:	
   920  0069                     _UQEnd:	
   921  0069                     	ds	1
   922  006A                     _UQFront:	
   923  006A                     	ds	1
   924  000C                     _PIR1bits	set	12
   925  001A                     _RCREG	set	26
   926  0018                     _RCSTAbits	set	24
   927  0019                     _TXREG	set	25
   928  005F                     _GIE	set	95
   929  005E                     _PEIE	set	94
   930  0029                     _RA1	set	41
   931  002A                     _RA2	set	42
   932  002B                     _RA3	set	43
   933  0099                     _SPBRG	set	153
   934  0085                     _TRISAbits	set	133
   935  0098                     _TXSTAbits	set	152
   936  0465                     _RCIE	set	1125
   937  0188                     _ANSELbits	set	392
   938                           
   939                           	psect	cinit
   940  07C1                     start_initialization:	
   941  07C1                     __initialization:	
   942                           
   943                           ; Clear objects allocated to BANK0
   944  07C1  1383               	bcf	3,7	;select IRP bank0
   945  07C2  3059               	movlw	low __pbssBANK0
   946  07C3  0084               	movwf	4
   947  07C4  3064               	movlw	low (__pbssBANK0+11)
   948  07C5  160A  118A  27B4  120A  118A  	fcall	clear_ram0
   949                           
   950                           ; Clear objects allocated to BANK1
   951  07CA  30A0               	movlw	low __pbssBANK1
   952  07CB  0084               	movwf	4
   953  07CC  30C0               	movlw	low (__pbssBANK1+32)
   954  07CD  160A  118A  27B4  120A  118A  	fcall	clear_ram0
   955                           
   956                           ; Clear objects allocated to BANK3
   957  07D2  1783               	bsf	3,7	;select IRP bank2
   958  07D3  3090               	movlw	low __pbssBANK3
   959  07D4  0084               	movwf	4
   960  07D5  30F0               	movlw	low (__pbssBANK3+96)
   961  07D6  160A  118A  27B4  120A  118A  	fcall	clear_ram0
   962                           
   963                           ; Clear objects allocated to BANK2
   964  07DB  3010               	movlw	low __pbssBANK2
   965  07DC  0084               	movwf	4
   966  07DD  3050               	movlw	low (__pbssBANK2+64)
   967  07DE  160A  118A  27B4  120A  118A  	fcall	clear_ram0
   968                           
   969                           ; Initialize objects allocated to BANK1
   970  07E3  1383               	bcf	3,7	;select IRP bank0
   971  07E4  30DB               	movlw	low (__pdataBANK1+27)
   972  07E5  00FD               	movwf	btemp+-1
   973  07E6  300A               	movlw	high __pidataBANK1
   974  07E7  00FE               	movwf	btemp
   975  07E8  30BA               	movlw	low __pidataBANK1
   976  07E9  00FF               	movwf	btemp+1
   977  07EA  30C0               	movlw	low __pdataBANK1
   978  07EB  0084               	movwf	4
   979  07EC  160A  118A  27F3  120A  118A  	fcall	init_ram0
   980                           
   981                           ; Initialize objects allocated to BANK0
   982  07F1  3069               	movlw	low (__pdataBANK0+5)
   983  07F2  00FD               	movwf	btemp+-1
   984  07F3  300A               	movlw	high __pidataBANK0
   985  07F4  00FE               	movwf	btemp
   986  07F5  3070               	movlw	low __pidataBANK0
   987  07F6  00FF               	movwf	btemp+1
   988  07F7  3064               	movlw	low __pdataBANK0
   989  07F8  0084               	movwf	4
   990  07F9  160A  118A  27F3   	fcall	init_ram0
   991  07FC                     end_of_initialization:	
   992                           ;End of C runtime variable initialization code
   993                           
   994  07FC                     __end_of__initialization:	
   995  07FC  0183               	clrf	3
   996  07FD  120A  118A  2C76   	ljmp	_main	;jump to C main() function
   997                           
   998                           	psect	bssBANK0
   999  0059                     __pbssBANK0:	
  1000  0059                     USARTWriteInt@F1617:	
  1001  0059                     	ds	5
  1002  005E                     _g_cur_matrix44:	
  1003  005E                     	ds	2
  1004  0060                     _temp_cur_matrix44:	
  1005  0060                     	ds	2
  1006  0062                     _cur_y:	
  1007  0062                     	ds	1
  1008  0063                     _g_char_info_index:	
  1009  0063                     	ds	1
  1010                           
  1011                           	psect	dataBANK0
  1012  0064                     __pdataBANK0:	
  1013  0064                     _randx:	
  1014  0064                     	ds	4
  1015  0068                     _cur_x:	
  1016  0068                     	ds	1
  1017                           
  1018                           	psect	bssBANK1
  1019  00A0                     __pbssBANK1:	
  1020  00A0                     _g_debug:	
  1021  00A0                     	ds	32
  1022                           
  1023                           	psect	dataBANK1
  1024  00C0                     __pdataBANK1:	
  1025  00C0                     _g_char_info:	
  1026  00C0                     	ds	27
  1027                           
  1028                           	psect	bssBANK3
  1029  0190                     __pbssBANK3:	
  1030  0190                     _URBuff:	
  1031  0190                     	ds	32
  1032  01B0                     _g_matrix88:	
  1033  01B0                     	ds	64
  1034                           
  1035                           	psect	bssBANK2
  1036  0110                     __pbssBANK2:	
  1037  0110                     _temp_matrix88:	
  1038  0110                     	ds	64
  1039                           
  1040                           	psect	clrtext
  1041  17B4                     clear_ram0:	
  1042                           ;	Called with FSR containing the base address, and
  1043                           ;	W with the last address+1
  1044                           
  1045  17B4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1046  17B5                     clrloop0:	
  1047  17B5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1048  17B6  0A84               	incf	4,f	;increment pointer
  1049  17B7  0604               	xorwf	4,w	;XOR with final address
  1050  17B8  1903               	btfsc	3,2	;have we reached the end yet?
  1051  17B9  3400               	retlw	0	;all done for this memory range, return
  1052  17BA  0604               	xorwf	4,w	;XOR again to restore value
  1053  17BB  2FB5               	goto	clrloop0	;do the next byte
  1054                           
  1055                           	psect	inittext
  1056  17EF                     init_fetch0:	
  1057                           ;	Called with low address in FSR and high address in W
  1058                           
  1059  17EF  087E               	movf	126,w
  1060  17F0  008A               	movwf	10
  1061  17F1  087F               	movf	127,w
  1062  17F2  0082               	movwf	2
  1063  17F3                     init_ram0:	
  1064                           ;Called with:
  1065                           ;	high address of idata address in btemp 
  1066                           ;	low address of idata address in btemp+1 
  1067                           ;	low address of data in FSR
  1068                           ;	high address + 1 of data in btemp-1
  1069                           
  1070  17F3  27EF  160A  118A   	fcall	init_fetch0
  1071  17F6  0080               	movwf	0
  1072  17F7  0A84               	incf	4,f
  1073  17F8  0804               	movf	4,w
  1074  17F9  067D               	xorwf	125,w
  1075  17FA  1903               	btfsc	3,2
  1076  17FB  3400               	retlw	0
  1077  17FC  0AFF               	incf	127,f
  1078  17FD  1903               	btfsc	3,2
  1079  17FE  0AFE               	incf	126,f
  1080  17FF  2FF3               	goto	init_ram0
  1081                           
  1082                           	psect	cstackCOMMON
  1083  0070                     __pcstackCOMMON:	
  1084  0070                     ?_memset:	
  1085  0070                     ?_memcpy:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     ?_srand:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ?_USARTInit:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ?_USARTWriteChar:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0070                     ??_USARTWriteChar:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0070                     ?_SPI1_write:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0070                     ??_SPI1_write:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0070                     ?_max7219_init1:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0070                     ?_MATRIX88_to_MATRIX7219:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0070                     ?_printf_MATRIX7219:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0070                     ?_printf_MATRIX88:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?_printf_Screen:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ?_Clear_Matrix:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_is_row_full:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ?_delete_matrix:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?_get_num_removed_rows:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?_is_row_empty:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?_hit_land:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ?_is_valid:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_is_left_boundary:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?_is_right_boundary:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?_fall_off:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?_clear:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     ?_merge:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ?_char_info_index_rand:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     ?_get_high:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     ?_get_high_after_merge:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ?_get_holes_after_merge:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ??_get_holes_after_merge:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ?_find_best_solution:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?___bmul:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ?_get_num_of_orphan:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_get_heavy:	
  1182                           ; 2 bytes @ 0x0
  1183                           
  1184  0070                     ?___lmul:	
  1185                           ; 2 bytes @ 0x0
  1186                           
  1187  0070                     USARTWriteChar@ch:	
  1188                           ; 4 bytes @ 0x0
  1189                           
  1190  0070                     MATRIX88_to_MATRIX7219@matrix7219:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     is_row_full@row:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     is_row_empty@row:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     hit_land@y:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     is_valid@y:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     fall_off@y:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     clear@y:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     merge@y:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ___bmul@multiplicand:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0070                     memcpy@s1:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     USARTInit@baud_rate:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0070                     is_left_boundary@matrix44:	
  1224                           ; 2 bytes @ 0x0
  1225                           
  1226  0070                     is_right_boundary@matrix44:	
  1227                           ; 2 bytes @ 0x0
  1228                           
  1229  0070                     get_high_after_merge@matrix:	
  1230                           ; 2 bytes @ 0x0
  1231                           
  1232  0070                     memset@c:	
  1233                           ; 2 bytes @ 0x0
  1234                           
  1235  0070                     srand@x:	
  1236                           ; 2 bytes @ 0x0
  1237                           
  1238  0070                     ___lmul@multiplier:	
  1239                           ; 2 bytes @ 0x0
  1240                           
  1241                           
  1242                           ; 4 bytes @ 0x0
  1243  0070                     	ds	1
  1244  0071                     ?_USARTWriteString:	
  1245  0071                     ??_MATRIX88_to_MATRIX7219:	
  1246                           ; 1 bytes @ 0x1
  1247                           
  1248  0071                     ??_is_row_full:	
  1249                           ; 1 bytes @ 0x1
  1250                           
  1251  0071                     ??_is_row_empty:	
  1252                           ; 1 bytes @ 0x1
  1253                           
  1254  0071                     ??___bmul:	
  1255                           ; 1 bytes @ 0x1
  1256                           
  1257  0071                     SPI1_write@data:	
  1258                           ; 1 bytes @ 0x1
  1259                           
  1260  0071                     USARTWriteString@str:	
  1261                           ; 1 bytes @ 0x1
  1262                           
  1263  0071                     hit_land@matrix44:	
  1264                           ; 2 bytes @ 0x1
  1265                           
  1266  0071                     is_valid@matrix44:	
  1267                           ; 2 bytes @ 0x1
  1268                           
  1269  0071                     fall_off@matrix44:	
  1270                           ; 2 bytes @ 0x1
  1271                           
  1272  0071                     clear@matrix44:	
  1273                           ; 2 bytes @ 0x1
  1274                           
  1275  0071                     merge@matrix44:	
  1276                           ; 2 bytes @ 0x1
  1277                           
  1278  0071                     memcpy@n:	
  1279                           ; 2 bytes @ 0x1
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0x1
  1283  0071                     	ds	1
  1284  0072                     ??_srand:	
  1285  0072                     ??_USARTInit:	
  1286                           ; 1 bytes @ 0x2
  1287                           
  1288  0072                     ??_get_num_of_orphan:	
  1289                           ; 1 bytes @ 0x2
  1290                           
  1291  0072                     ??_get_heavy:	
  1292                           ; 1 bytes @ 0x2
  1293                           
  1294  0072                     ??_get_high_after_merge:	
  1295                           ; 1 bytes @ 0x2
  1296                           
  1297  0072                     SPI1_write@mask:	
  1298                           ; 1 bytes @ 0x2
  1299                           
  1300  0072                     is_left_boundary@matrix88:	
  1301                           ; 1 bytes @ 0x2
  1302                           
  1303  0072                     is_right_boundary@matrix88:	
  1304                           ; 1 bytes @ 0x2
  1305                           
  1306  0072                     ___bmul@product:	
  1307                           ; 1 bytes @ 0x2
  1308                           
  1309  0072                     memset@n:	
  1310                           ; 1 bytes @ 0x2
  1311                           
  1312                           
  1313                           ; 2 bytes @ 0x2
  1314  0072                     	ds	1
  1315  0073                     ??_memcpy:	
  1316  0073                     ??_USARTWriteString:	
  1317                           ; 1 bytes @ 0x3
  1318                           
  1319  0073                     ?_debug_str:	
  1320                           ; 1 bytes @ 0x3
  1321                           
  1322  0073                     ?_debug_line:	
  1323                           ; 1 bytes @ 0x3
  1324                           
  1325  0073                     ??_is_left_boundary:	
  1326                           ; 1 bytes @ 0x3
  1327                           
  1328  0073                     ??_is_right_boundary:	
  1329                           ; 1 bytes @ 0x3
  1330                           
  1331  0073                     SPI1_write@i:	
  1332                           ; 1 bytes @ 0x3
  1333                           
  1334  0073                     hit_land@matrix88:	
  1335                           ; 1 bytes @ 0x3
  1336                           
  1337  0073                     is_valid@matrix88:	
  1338                           ; 1 bytes @ 0x3
  1339                           
  1340  0073                     fall_off@matrix88:	
  1341                           ; 1 bytes @ 0x3
  1342                           
  1343  0073                     clear@matrix88:	
  1344                           ; 1 bytes @ 0x3
  1345                           
  1346  0073                     merge@matrix88:	
  1347                           ; 1 bytes @ 0x3
  1348                           
  1349  0073                     ___bmul@multiplier:	
  1350                           ; 1 bytes @ 0x3
  1351                           
  1352  0073                     debug_str@str:	
  1353                           ; 1 bytes @ 0x3
  1354                           
  1355  0073                     debug_line@str:	
  1356                           ; 2 bytes @ 0x3
  1357                           
  1358                           
  1359                           ; 2 bytes @ 0x3
  1360  0073                     	ds	1
  1361  0074                     ??_memset:	
  1362  0074                     ?_Write_Byte:	
  1363                           ; 1 bytes @ 0x4
  1364                           
  1365  0074                     ??_hit_land:	
  1366                           ; 1 bytes @ 0x4
  1367                           
  1368  0074                     ??_is_valid:	
  1369                           ; 1 bytes @ 0x4
  1370                           
  1371  0074                     ??_fall_off:	
  1372                           ; 1 bytes @ 0x4
  1373                           
  1374  0074                     ??_clear:	
  1375                           ; 1 bytes @ 0x4
  1376                           
  1377  0074                     ??_merge:	
  1378                           ; 1 bytes @ 0x4
  1379                           
  1380  0074                     Write_Byte@myValue:	
  1381                           ; 1 bytes @ 0x4
  1382                           
  1383  0074                     MATRIX88_to_MATRIX7219@matrix88:	
  1384                           ; 1 bytes @ 0x4
  1385                           
  1386  0074                     is_row_full@matrix:	
  1387                           ; 1 bytes @ 0x4
  1388                           
  1389  0074                     is_row_empty@matrix:	
  1390                           ; 1 bytes @ 0x4
  1391                           
  1392  0074                     memcpy@d:	
  1393                           ; 1 bytes @ 0x4
  1394                           
  1395  0074                     ___lmul@multiplicand:	
  1396                           ; 1 bytes @ 0x4
  1397                           
  1398                           
  1399                           ; 4 bytes @ 0x4
  1400  0074                     	ds	1
  1401  0075                     ??_debug_str:	
  1402  0075                     ??_debug_line:	
  1403                           ; 1 bytes @ 0x5
  1404                           
  1405  0075                     ??_Write_Byte:	
  1406                           ; 1 bytes @ 0x5
  1407                           
  1408  0075                     ?_printf_debug_MATRIX88:	
  1409                           ; 1 bytes @ 0x5
  1410                           
  1411  0075                     Write_Byte@myColumn:	
  1412                           ; 1 bytes @ 0x5
  1413                           
  1414  0075                     MATRIX88_to_MATRIX7219@mask:	
  1415                           ; 1 bytes @ 0x5
  1416                           
  1417  0075                     is_row_full@col:	
  1418                           ; 1 bytes @ 0x5
  1419                           
  1420  0075                     is_row_empty@col:	
  1421                           ; 1 bytes @ 0x5
  1422                           
  1423  0075                     memcpy@s:	
  1424                           ; 1 bytes @ 0x5
  1425                           
  1426  0075                     memset@p:	
  1427                           ; 1 bytes @ 0x5
  1428                           
  1429  0075                     printf_debug_MATRIX88@lable:	
  1430                           ; 1 bytes @ 0x5
  1431                           
  1432                           
  1433                           ; 2 bytes @ 0x5
  1434  0075                     	ds	1
  1435  0076                     ??_max7219_init1:	
  1436  0076                     ??_printf_MATRIX7219:	
  1437                           ; 1 bytes @ 0x6
  1438                           
  1439  0076                     ??_get_num_removed_rows:	
  1440                           ; 1 bytes @ 0x6
  1441                           
  1442  0076                     ??_get_high:	
  1443                           ; 1 bytes @ 0x6
  1444                           
  1445  0076                     MATRIX88_to_MATRIX7219@row:	
  1446                           ; 1 bytes @ 0x6
  1447                           
  1448  0076                     get_high_after_merge@y:	
  1449                           ; 1 bytes @ 0x6
  1450                           
  1451  0076                     get_holes_after_merge@num_hole:	
  1452                           ; 1 bytes @ 0x6
  1453                           
  1454  0076                     memcpy@d1:	
  1455                           ; 1 bytes @ 0x6
  1456                           
  1457  0076                     memset@p1:	
  1458                           ; 1 bytes @ 0x6
  1459                           
  1460  0076                     get_num_of_orphan@risk:	
  1461                           ; 1 bytes @ 0x6
  1462                           
  1463  0076                     get_heavy@risk:	
  1464                           ; 2 bytes @ 0x6
  1465                           
  1466                           
  1467                           ; 2 bytes @ 0x6
  1468  0076                     	ds	1
  1469  0077                     ?_delete_row:	
  1470  0077                     ?_merge1:	
  1471                           ; 1 bytes @ 0x7
  1472                           
  1473  0077                     MATRIX88_to_MATRIX7219@col:	
  1474                           ; 1 bytes @ 0x7
  1475                           
  1476  0077                     printf_debug_MATRIX88@matrix:	
  1477                           ; 1 bytes @ 0x7
  1478                           
  1479  0077                     delete_row@row:	
  1480                           ; 1 bytes @ 0x7
  1481                           
  1482  0077                     get_num_removed_rows@count:	
  1483                           ; 1 bytes @ 0x7
  1484                           
  1485  0077                     is_right_boundary@x:	
  1486                           ; 1 bytes @ 0x7
  1487                           
  1488  0077                     merge1@y:	
  1489                           ; 1 bytes @ 0x7
  1490                           
  1491  0077                     get_high@matrix:	
  1492                           ; 1 bytes @ 0x7
  1493                           
  1494  0077                     get_high_after_merge@col:	
  1495                           ; 1 bytes @ 0x7
  1496                           
  1497  0077                     get_holes_after_merge@stop:	
  1498                           ; 1 bytes @ 0x7
  1499                           
  1500                           
  1501                           ; 1 bytes @ 0x7
  1502  0077                     	ds	1
  1503  0078                     ??_printf_debug_MATRIX88:	
  1504  0078                     ??_delete_row:	
  1505                           ; 1 bytes @ 0x8
  1506                           
  1507  0078                     ??___lmul:	
  1508                           ; 1 bytes @ 0x8
  1509                           
  1510  0078                     printf_MATRIX7219@matrix:	
  1511                           ; 1 bytes @ 0x8
  1512                           
  1513  0078                     get_num_removed_rows@matrix:	
  1514                           ; 1 bytes @ 0x8
  1515                           
  1516  0078                     hit_land@x:	
  1517                           ; 1 bytes @ 0x8
  1518                           
  1519  0078                     is_valid@x:	
  1520                           ; 1 bytes @ 0x8
  1521                           
  1522  0078                     is_left_boundary@x:	
  1523                           ; 1 bytes @ 0x8
  1524                           
  1525  0078                     is_right_boundary@row:	
  1526                           ; 1 bytes @ 0x8
  1527                           
  1528  0078                     fall_off@x:	
  1529                           ; 1 bytes @ 0x8
  1530                           
  1531  0078                     clear@x:	
  1532                           ; 1 bytes @ 0x8
  1533                           
  1534  0078                     merge@x:	
  1535                           ; 1 bytes @ 0x8
  1536                           
  1537  0078                     get_num_of_orphan@full:	
  1538                           ; 1 bytes @ 0x8
  1539                           
  1540  0078                     get_heavy@start:	
  1541                           ; 1 bytes @ 0x8
  1542                           
  1543  0078                     get_high@row:	
  1544                           ; 1 bytes @ 0x8
  1545                           
  1546  0078                     get_high_after_merge@row:	
  1547                           ; 1 bytes @ 0x8
  1548                           
  1549  0078                     get_holes_after_merge@start:	
  1550                           ; 1 bytes @ 0x8
  1551                           
  1552  0078                     merge1@matrix44:	
  1553                           ; 1 bytes @ 0x8
  1554                           
  1555                           
  1556                           ; 2 bytes @ 0x8
  1557  0078                     	ds	1
  1558  0079                     printf_MATRIX7219@col:	
  1559  0079                     get_num_removed_rows@row:	
  1560                           ; 1 bytes @ 0x9
  1561                           
  1562  0079                     hit_land@col:	
  1563                           ; 1 bytes @ 0x9
  1564                           
  1565  0079                     is_valid@row:	
  1566                           ; 1 bytes @ 0x9
  1567                           
  1568  0079                     is_left_boundary@row:	
  1569                           ; 1 bytes @ 0x9
  1570                           
  1571  0079                     is_right_boundary@col:	
  1572                           ; 1 bytes @ 0x9
  1573                           
  1574  0079                     fall_off@col:	
  1575                           ; 1 bytes @ 0x9
  1576                           
  1577  0079                     clear@row:	
  1578                           ; 1 bytes @ 0x9
  1579                           
  1580  0079                     merge@row:	
  1581                           ; 1 bytes @ 0x9
  1582                           
  1583  0079                     get_num_of_orphan@matrix:	
  1584                           ; 1 bytes @ 0x9
  1585                           
  1586  0079                     get_heavy@matrix:	
  1587                           ; 1 bytes @ 0x9
  1588                           
  1589  0079                     get_holes_after_merge@matrix:	
  1590                           ; 1 bytes @ 0x9
  1591                           
  1592  0079                     ___lmul@product:	
  1593                           ; 1 bytes @ 0x9
  1594                           
  1595                           
  1596                           ; 4 bytes @ 0x9
  1597  0079                     	ds	1
  1598  007A                     ??_printf_MATRIX88:	
  1599  007A                     ?_right_most:	
  1600                           ; 1 bytes @ 0xA
  1601                           
  1602  007A                     hit_land@row:	
  1603                           ; 1 bytes @ 0xA
  1604                           
  1605  007A                     is_valid@col:	
  1606                           ; 1 bytes @ 0xA
  1607                           
  1608  007A                     is_left_boundary@col:	
  1609                           ; 1 bytes @ 0xA
  1610                           
  1611  007A                     fall_off@row:	
  1612                           ; 1 bytes @ 0xA
  1613                           
  1614  007A                     clear@col:	
  1615                           ; 1 bytes @ 0xA
  1616                           
  1617  007A                     merge@col:	
  1618                           ; 1 bytes @ 0xA
  1619                           
  1620  007A                     merge1@matrix88_in:	
  1621                           ; 1 bytes @ 0xA
  1622                           
  1623  007A                     get_num_of_orphan@col:	
  1624                           ; 1 bytes @ 0xA
  1625                           
  1626  007A                     get_heavy@pre:	
  1627                           ; 1 bytes @ 0xA
  1628                           
  1629  007A                     get_holes_after_merge@col:	
  1630                           ; 1 bytes @ 0xA
  1631                           
  1632  007A                     right_most@matrix44:	
  1633                           ; 1 bytes @ 0xA
  1634                           
  1635                           
  1636                           ; 2 bytes @ 0xA
  1637  007A                     	ds	1
  1638  007B                     ??_printf_Screen:	
  1639  007B                     ??_Clear_Matrix:	
  1640                           ; 1 bytes @ 0xB
  1641                           
  1642  007B                     ??_delete_matrix:	
  1643                           ; 1 bytes @ 0xB
  1644                           
  1645  007B                     ?_left_most:	
  1646                           ; 1 bytes @ 0xB
  1647                           
  1648  007B                     printf_debug_MATRIX88@row:	
  1649                           ; 1 bytes @ 0xB
  1650                           
  1651  007B                     merge1@matrix88_out:	
  1652                           ; 1 bytes @ 0xB
  1653                           
  1654  007B                     get_num_of_orphan@row:	
  1655                           ; 1 bytes @ 0xB
  1656                           
  1657  007B                     get_heavy@col:	
  1658                           ; 1 bytes @ 0xB
  1659                           
  1660  007B                     get_holes_after_merge@row:	
  1661                           ; 1 bytes @ 0xB
  1662                           
  1663  007B                     left_most@matrix44:	
  1664                           ; 1 bytes @ 0xB
  1665                           
  1666                           
  1667                           ; 2 bytes @ 0xB
  1668  007B                     	ds	1
  1669  007C                     ??___wmul:	
  1670  007C                     printf_debug_MATRIX88@col:	
  1671                           ; 1 bytes @ 0xC
  1672                           
  1673  007C                     get_heavy@row:	
  1674                           ; 1 bytes @ 0xC
  1675                           
  1676  007C                     right_most@matrix88:	
  1677                           ; 1 bytes @ 0xC
  1678                           
  1679  007C                     ___wmul@product:	
  1680                           ; 1 bytes @ 0xC
  1681                           
  1682                           
  1683                           ; 2 bytes @ 0xC
  1684  007C                     	ds	1
  1685  007D                     ??_right_most:	
  1686  007D                     ??___awmod:	
  1687                           ; 1 bytes @ 0xD
  1688                           
  1689  007D                     left_most@matrix88:	
  1690                           ; 1 bytes @ 0xD
  1691                           
  1692                           
  1693                           ; 1 bytes @ 0xD
  1694  007D                     	ds	1
  1695  007E                     ??_char_info_index_rand:	
  1696                           
  1697                           	psect	cstackBANK0
  1698  0020                     __pcstackBANK0:	
  1699                           ; 1 bytes @ 0xE
  1700                           
  1701  0020                     ??_merge1:	
  1702  0020                     ??_left_most:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705  0020                     ?_rand:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0020                     ?___wmul:	
  1709                           ; 2 bytes @ 0x0
  1710                           
  1711  0020                     printf_MATRIX88@matrix88:	
  1712                           ; 2 bytes @ 0x0
  1713                           
  1714  0020                     right_most@x:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0020                     delete_row@len:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0020                     ___wmul@multiplier:	
  1721                           ; 2 bytes @ 0x0
  1722                           
  1723                           
  1724                           ; 2 bytes @ 0x0
  1725  0020                     	ds	1
  1726  0021                     left_most@x:	
  1727  0021                     printf_MATRIX88@matrix7219:	
  1728                           ; 1 bytes @ 0x1
  1729                           
  1730                           
  1731                           ; 8 bytes @ 0x1
  1732  0021                     	ds	1
  1733  0022                     ??_rand:	
  1734  0022                     delete_row@matrix:	
  1735                           ; 1 bytes @ 0x2
  1736                           
  1737  0022                     ___wmul@multiplicand:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740                           
  1741                           ; 2 bytes @ 0x2
  1742  0022                     	ds	1
  1743  0023                     delete_row@i:	
  1744                           
  1745                           ; 1 bytes @ 0x3
  1746  0023                     	ds	1
  1747  0024                     delete_matrix@count:	
  1748  0024                     merge1@len:	
  1749                           ; 1 bytes @ 0x4
  1750                           
  1751                           
  1752                           ; 2 bytes @ 0x4
  1753  0024                     	ds	1
  1754  0025                     delete_matrix@matrix:	
  1755                           
  1756                           ; 1 bytes @ 0x5
  1757  0025                     	ds	1
  1758  0026                     delete_matrix@row:	
  1759  0026                     merge1@x:	
  1760                           ; 1 bytes @ 0x6
  1761                           
  1762                           
  1763                           ; 1 bytes @ 0x6
  1764  0026                     	ds	1
  1765  0027                     ?___awmod:	
  1766  0027                     merge1@row:	
  1767                           ; 2 bytes @ 0x7
  1768                           
  1769  0027                     ___awmod@divisor:	
  1770                           ; 1 bytes @ 0x7
  1771                           
  1772                           
  1773                           ; 2 bytes @ 0x7
  1774  0027                     	ds	1
  1775  0028                     merge1@col:	
  1776                           
  1777                           ; 1 bytes @ 0x8
  1778  0028                     	ds	1
  1779  0029                     ??_find_best_solution:	
  1780  0029                     ___awmod@dividend:	
  1781                           ; 1 bytes @ 0x9
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x9
  1785  0029                     	ds	2
  1786  002B                     ___awmod@counter:	
  1787                           
  1788                           ; 1 bytes @ 0xB
  1789  002B                     	ds	1
  1790  002C                     ___awmod@sign:	
  1791                           
  1792                           ; 1 bytes @ 0xC
  1793  002C                     	ds	15
  1794  003B                     find_best_solution@temp_pre_risk:	
  1795                           
  1796                           ; 2 bytes @ 0x1B
  1797  003B                     	ds	2
  1798  003D                     find_best_solution@left_most_index:	
  1799                           
  1800                           ; 1 bytes @ 0x1D
  1801  003D                     	ds	1
  1802  003E                     find_best_solution@right_most_index:	
  1803                           
  1804                           ; 1 bytes @ 0x1E
  1805  003E                     	ds	1
  1806  003F                     find_best_solution@temp_pre_x:	
  1807                           
  1808                           ; 1 bytes @ 0x1F
  1809  003F                     	ds	1
  1810  0040                     find_best_solution@tem_pre_sub_index:	
  1811                           
  1812                           ; 1 bytes @ 0x20
  1813  0040                     	ds	1
  1814  0041                     find_best_solution@temp_risk:	
  1815                           
  1816                           ; 2 bytes @ 0x21
  1817  0041                     	ds	2
  1818  0043                     find_best_solution@res:	
  1819                           
  1820                           ; 1 bytes @ 0x23
  1821  0043                     	ds	1
  1822  0044                     find_best_solution@temp_high:	
  1823                           
  1824                           ; 2 bytes @ 0x24
  1825  0044                     	ds	2
  1826  0046                     find_best_solution@temp_y:	
  1827                           
  1828                           ; 1 bytes @ 0x26
  1829  0046                     	ds	1
  1830  0047                     find_best_solution@tem_sub_index:	
  1831                           
  1832                           ; 1 bytes @ 0x27
  1833  0047                     	ds	1
  1834  0048                     find_best_solution@temp_x:	
  1835                           
  1836                           ; 1 bytes @ 0x28
  1837  0048                     	ds	1
  1838  0049                     ?_main:	
  1839  0049                     main@argc:	
  1840                           ; 2 bytes @ 0x29
  1841                           
  1842                           
  1843                           ; 2 bytes @ 0x29
  1844  0049                     	ds	2
  1845  004B                     main@argv:	
  1846                           
  1847                           ; 2 bytes @ 0x2B
  1848  004B                     	ds	2
  1849  004D                     ??_main:	
  1850                           
  1851                           ; 1 bytes @ 0x2D
  1852  004D                     	ds	9
  1853  0056                     main@Seed:	
  1854                           
  1855                           ; 2 bytes @ 0x36
  1856  0056                     	ds	2
  1857  0058                     main@hit_res:	
  1858                           
  1859                           ; 1 bytes @ 0x38
  1860  0058                     	ds	1
  1861                           
  1862                           	psect	maintext
  1863  0476                     __pmaintext:	
  1864 ;;
  1865 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
  1866 ;;
  1867 ;; *************** function _main *****************
  1868 ;; Defined at:
  1869 ;;		line 1302 in file "teris_16f886.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  argc            2   41[BANK0 ] int 
  1872 ;;  argv            2   43[BANK0 ] PTR PTR unsigned char 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  Seed            2   54[BANK0 ] unsigned int 
  1875 ;;  hit_res         1   56[BANK0 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2   41[BANK0 ] int 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : B00/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       4       0       0       0
  1886 ;;      Locals:         0       3       0       0       0
  1887 ;;      Temps:          0       9       0       0       0
  1888 ;;      Totals:         0      16       0       0       0
  1889 ;;Total ram usage:       16 bytes
  1890 ;; Hardware stack levels required when called:    6
  1891 ;; This function calls:
  1892 ;;		_Clear_Matrix
  1893 ;;		_USARTInit
  1894 ;;		___bmul
  1895 ;;		_char_info_index_rand
  1896 ;;		_clear
  1897 ;;		_delete_matrix
  1898 ;;		_find_best_solution
  1899 ;;		_hit_land
  1900 ;;		_max7219_init1
  1901 ;;		_merge
  1902 ;;		_printf_Screen
  1903 ;;		_printf_debug_MATRIX88
  1904 ;;		_srand
  1905 ;; This function is called by:
  1906 ;;		Startup code after reset
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _main
  1912  0476                     _main:	
  1913                           
  1914                           ;teris_16f886.c: 1304: uint8_t hit_res;
  1915                           ;teris_16f886.c: 1316: (TRISAbits.TRISA3 = 0);
  1916                           
  1917                           ;incstack = 0
  1918                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1919  0476  1683               	bsf	3,5	;RP0=1, select bank1
  1920  0477  1303               	bcf	3,6	;RP1=0, select bank1
  1921  0478  1185               	bcf	5,3	;volatile
  1922                           
  1923                           ;teris_16f886.c: 1318: (TRISAbits.TRISA2 = 0);
  1924  0479  1105               	bcf	5,2	;volatile
  1925                           
  1926                           ;teris_16f886.c: 1320: (TRISAbits.TRISA1 = 0);
  1927  047A  1085               	bcf	5,1	;volatile
  1928                           
  1929                           ;teris_16f886.c: 1322: ANSELbits.ANS1 = 0;
  1930  047B  1683               	bsf	3,5	;RP0=1, select bank3
  1931  047C  1703               	bsf	3,6	;RP1=1, select bank3
  1932  047D  1088               	bcf	8,1	;volatile
  1933                           
  1934                           ;teris_16f886.c: 1323: ANSELbits.ANS2 = 0;
  1935  047E  1108               	bcf	8,2	;volatile
  1936                           
  1937                           ;teris_16f886.c: 1324: ANSELbits.ANS3 = 0;
  1938  047F  1188               	bcf	8,3	;volatile
  1939                           
  1940                           ;teris_16f886.c: 1325: RA2 = 1;
  1941  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0482  1505               	bsf	5,2	;volatile
  1944                           
  1945                           ;teris_16f886.c: 1326: RA1 = 0;
  1946  0483  1085               	bcf	5,1	;volatile
  1947                           
  1948                           ;teris_16f886.c: 1330: USARTInit(9600);
  1949  0484  3080               	movlw	128
  1950  0485  00F0               	movwf	USARTInit@baud_rate
  1951  0486  3025               	movlw	37
  1952  0487  00F1               	movwf	USARTInit@baud_rate+1
  1953  0488  120A  158A  252E  120A  118A  	fcall	_USARTInit
  1954                           
  1955                           ;teris_16f886.c: 1334: max7219_init1();
  1956  048D  120A  158A  244F  120A  118A  	fcall	_max7219_init1
  1957                           
  1958                           ;teris_16f886.c: 1336: unsigned Seed;
  1959                           ;teris_16f886.c: 1337: srand(Seed);
  1960  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0494  0857               	movf	main@Seed+1,w
  1963  0495  00F1               	movwf	srand@x+1
  1964  0496  0856               	movf	main@Seed,w
  1965  0497  00F0               	movwf	srand@x
  1966  0498  120A  158A  2275  120A  118A  	fcall	_srand
  1967  049D                     l465:	
  1968                           ;teris_16f886.c: 1339: __start:
  1969                           
  1970                           ;teris_16f886.c: 1351: {
  1971                           ;teris_16f886.c: 1355: goto __start;
  1972                           
  1973                           
  1974                           ;teris_16f886.c: 1340: Clear_Matrix();
  1975  049D  160A  118A  27BC  120A  118A  	fcall	_Clear_Matrix
  1976  04A2                     l3859:	
  1977                           ;teris_16f886.c: 1341: while(1)
  1978                           
  1979                           
  1980                           ;teris_16f886.c: 1342: {
  1981                           ;teris_16f886.c: 1343: cur_y = 0;
  1982  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  1983  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1984  04A4  01E2               	clrf	_cur_y
  1985                           
  1986                           ;teris_16f886.c: 1344: cur_x = 2, cur_y = 0;
  1987  04A5  3002               	movlw	2
  1988  04A6  00CD               	movwf	??_main
  1989  04A7  084D               	movf	??_main,w
  1990  04A8  00E8               	movwf	_cur_x
  1991  04A9  01E2               	clrf	_cur_y
  1992                           
  1993                           ;teris_16f886.c: 1345: g_char_info_index = char_info_index_rand();
  1994  04AA  120A  158A  22A2  120A  118A  	fcall	_char_info_index_rand
  1995  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1996  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1997  04B1  00CD               	movwf	??_main
  1998  04B2  084D               	movf	??_main,w
  1999  04B3  00E3               	movwf	_g_char_info_index
  2000                           
  2001                           ;teris_16f886.c: 1350: if(find_best_solution() == 0)
  2002  04B4  120A  118A  2586  120A  118A  	fcall	_find_best_solution
  2003  04B9  3A00               	xorlw	0
  2004  04BA  1903               	btfsc	3,2
  2005  04BB  2C9D               	goto	l465
  2006                           
  2007                           ;teris_16f886.c: 1356: }
  2008                           ;teris_16f886.c: 1357: g_cur_matrix44 = &g_matrix44[g_char_info[g_char_info_index].start
      +                          _index + g_char_info[g_char_info_index].cur_index];
  2009  04BC  3003               	movlw	3
  2010  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2011  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2012  04BF  00CD               	movwf	??_main
  2013  04C0  084D               	movf	??_main,w
  2014  04C1  00F0               	movwf	___bmul@multiplicand
  2015  04C2  0863               	movf	_g_char_info_index,w
  2016  04C3  160A  118A  27CD  120A  118A  	fcall	___bmul
  2017  04C8  3E01               	addlw	1
  2018  04C9  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  2019  04CA  0084               	movwf	4
  2020  04CB  1383               	bcf	3,7	;select IRP bank1
  2021  04CC  0800               	movf	0,w
  2022  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2023  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2024  04CF  00CE               	movwf	??_main+1
  2025  04D0  3003               	movlw	3
  2026  04D1  00CF               	movwf	??_main+2
  2027  04D2  084F               	movf	??_main+2,w
  2028  04D3  00F0               	movwf	___bmul@multiplicand
  2029  04D4  0863               	movf	_g_char_info_index,w
  2030  04D5  160A  118A  27CD  120A  118A  	fcall	___bmul
  2031  04DA  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  2032  04DB  0084               	movwf	4
  2033  04DC  1383               	bcf	3,7	;select IRP bank1
  2034  04DD  0800               	movf	0,w
  2035  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2036  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2037  04E0  074E               	addwf	??_main+1,w
  2038  04E1  00D0               	movwf	??_main+3
  2039  04E2  01D1               	clrf	??_main+4
  2040  04E3  0DD1               	rlf	??_main+4,f
  2041  04E4  0ED0               	swapf	??_main+3,f
  2042  04E5  0ED1               	swapf	??_main+4,f
  2043  04E6  30F0               	movlw	240
  2044  04E7  05D1               	andwf	??_main+4,f
  2045  04E8  0850               	movf	??_main+3,w
  2046  04E9  390F               	andlw	15
  2047  04EA  04D1               	iorwf	??_main+4,f
  2048  04EB  30F0               	movlw	240
  2049  04EC  05D0               	andwf	??_main+3,f
  2050  04ED  3030               	movlw	low (_g_matrix44| (0+32768))
  2051  04EE  00D2               	movwf	??_main+5
  2052  04EF  3088               	movlw	high (_g_matrix44| (0+32768))
  2053  04F0  00D3               	movwf	??_main+6
  2054  04F1  0850               	movf	??_main+3,w
  2055  04F2  0752               	addwf	??_main+5,w
  2056  04F3  00D4               	movwf	??_main+7
  2057  04F4  0851               	movf	??_main+4,w
  2058  04F5  1803               	skipnc
  2059  04F6  0A51               	incf	??_main+4,w
  2060  04F7  0753               	addwf	??_main+6,w
  2061  04F8  00D5               	movwf	??_main+8
  2062  04F9  0854               	movf	??_main+7,w
  2063  04FA  00DE               	movwf	_g_cur_matrix44
  2064  04FB  0855               	movf	??_main+8,w
  2065  04FC  00DF               	movwf	_g_cur_matrix44+1
  2066  04FD                     l3873:	
  2067                           ;teris_16f886.c: 1358: while(1)
  2068                           
  2069                           
  2070                           ;teris_16f886.c: 1359: {
  2071                           ;teris_16f886.c: 1360: hit_res = hit_land(cur_x, cur_y, g_cur_matrix44, &g_matrix88);
  2072  04FD  0862               	movf	_cur_y,w
  2073  04FE  00CD               	movwf	??_main
  2074  04FF  084D               	movf	??_main,w
  2075  0500  00F0               	movwf	hit_land@y
  2076  0501  085E               	movf	_g_cur_matrix44,w
  2077  0502  00F1               	movwf	hit_land@matrix44
  2078  0503  085F               	movf	_g_cur_matrix44+1,w
  2079  0504  00F2               	movwf	hit_land@matrix44+1
  2080  0505  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2081  0506  00CE               	movwf	??_main+1
  2082  0507  084E               	movf	??_main+1,w
  2083  0508  00F3               	movwf	hit_land@matrix88
  2084  0509  0868               	movf	_cur_x,w
  2085  050A  120A  118A  2100  120A  118A  	fcall	_hit_land
  2086  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0511  00CF               	movwf	??_main+2
  2089  0512  084F               	movf	??_main+2,w
  2090  0513  00D8               	movwf	main@hit_res
  2091                           
  2092                           ;teris_16f886.c: 1364: merge(cur_x, cur_y, g_cur_matrix44, &g_matrix88);
  2093  0514  0862               	movf	_cur_y,w
  2094  0515  00CD               	movwf	??_main
  2095  0516  084D               	movf	??_main,w
  2096  0517  00F0               	movwf	merge@y
  2097  0518  085E               	movf	_g_cur_matrix44,w
  2098  0519  00F1               	movwf	merge@matrix44
  2099  051A  085F               	movf	_g_cur_matrix44+1,w
  2100  051B  00F2               	movwf	merge@matrix44+1
  2101  051C  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2102  051D  00CE               	movwf	??_main+1
  2103  051E  084E               	movf	??_main+1,w
  2104  051F  00F3               	movwf	merge@matrix88
  2105  0520  0868               	movf	_cur_x,w
  2106  0521  120A  158A  26A0  120A  118A  	fcall	_merge
  2107                           
  2108                           ;teris_16f886.c: 1365: if(hit_res == 1)
  2109  0526  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0527  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0528  0358               	decf	main@hit_res,w
  2112  0529  1D03               	btfss	3,2
  2113  052A  2D45               	goto	l3885
  2114                           
  2115                           ;teris_16f886.c: 1366: {
  2116                           ;teris_16f886.c: 1367: printf_Screen();
  2117  052B  160A  118A  279F  120A  118A  	fcall	_printf_Screen
  2118                           
  2119                           ;teris_16f886.c: 1371: _delay((unsigned long)((100)*(20000000/4000.0)));
  2120  0530  3003               	movlw	3
  2121  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0532  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0533  00CF               	movwf	??_main+2
  2124  0534  308A               	movlw	138
  2125  0535  00CE               	movwf	??_main+1
  2126  0536  3056               	movlw	86
  2127  0537  00CD               	movwf	??_main
  2128  0538                     u6337:	
  2129  0538  0BCD               	decfsz	??_main,f
  2130  0539  2D38               	goto	u6337
  2131  053A  0BCE               	decfsz	??_main+1,f
  2132  053B  2D38               	goto	u6337
  2133  053C  0BCF               	decfsz	??_main+2,f
  2134  053D  2D38               	goto	u6337
  2135  053E  2D3F               	nop2
  2136                           
  2137                           ;teris_16f886.c: 1373: delete_matrix(&g_matrix88);
  2138  053F  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2139  0540  120A  158A  247B  120A  118A  	fcall	_delete_matrix
  2140  0545                     l3885:	
  2141                           
  2142                           ;teris_16f886.c: 1374: }
  2143                           ;teris_16f886.c: 1376: printf_debug_MATRIX88("Main screen", &g_matrix88);
  2144  0545  3050               	movlw	low (STR_22| (0+32768))
  2145  0546  00F5               	movwf	printf_debug_MATRIX88@lable
  2146  0547  308A               	movlw	high (STR_22| (0+32768))
  2147  0548  00F6               	movwf	printf_debug_MATRIX88@lable+1
  2148  0549  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2149  054A  1283               	bcf	3,5	;RP0=0, select bank0
  2150  054B  1303               	bcf	3,6	;RP1=0, select bank0
  2151  054C  00CD               	movwf	??_main
  2152  054D  084D               	movf	??_main,w
  2153  054E  00F7               	movwf	printf_debug_MATRIX88@matrix
  2154  054F  120A  118A  2094  120A  118A  	fcall	_printf_debug_MATRIX88
  2155                           
  2156                           ;teris_16f886.c: 1378: printf_Screen();
  2157  0554  160A  118A  279F  120A  118A  	fcall	_printf_Screen
  2158                           
  2159                           ;teris_16f886.c: 1379: if(hit_res == 0)
  2160  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2161  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2162  055B  0858               	movf	main@hit_res,w
  2163  055C  1D03               	btfss	3,2
  2164  055D  2CA2               	goto	l3859
  2165                           
  2166                           ;teris_16f886.c: 1380: {
  2167                           ;teris_16f886.c: 1381: clear(cur_x, cur_y, g_cur_matrix44, &g_matrix88);
  2168  055E  0862               	movf	_cur_y,w
  2169  055F  00CD               	movwf	??_main
  2170  0560  084D               	movf	??_main,w
  2171  0561  00F0               	movwf	clear@y
  2172  0562  085E               	movf	_g_cur_matrix44,w
  2173  0563  00F1               	movwf	clear@matrix44
  2174  0564  085F               	movf	_g_cur_matrix44+1,w
  2175  0565  00F2               	movwf	clear@matrix44+1
  2176  0566  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2177  0567  00CE               	movwf	??_main+1
  2178  0568  084E               	movf	??_main+1,w
  2179  0569  00F3               	movwf	clear@matrix88
  2180  056A  0868               	movf	_cur_x,w
  2181  056B  120A  158A  2651  120A  118A  	fcall	_clear
  2182                           
  2183                           ;teris_16f886.c: 1386: }
  2184                           ;teris_16f886.c: 1390: _delay((unsigned long)((500)*(20000000/4000.0)));
  2185                           
  2186                           ;teris_16f886.c: 1383: else
  2187                           ;teris_16f886.c: 1384: {
  2188                           ;teris_16f886.c: 1385: break;
  2189                           
  2190                           ;teris_16f886.c: 1382: }
  2191  0570  300D               	movlw	13
  2192  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0573  00CF               	movwf	??_main+2
  2195  0574  30AF               	movlw	175
  2196  0575  00CE               	movwf	??_main+1
  2197  0576  30C1               	movlw	193
  2198  0577  00CD               	movwf	??_main
  2199  0578                     u6347:	
  2200  0578  0BCD               	decfsz	??_main,f
  2201  0579  2D78               	goto	u6347
  2202  057A  0BCE               	decfsz	??_main+1,f
  2203  057B  2D78               	goto	u6347
  2204  057C  0BCF               	decfsz	??_main+2,f
  2205  057D  2D78               	goto	u6347
  2206  057E  0000               	nop
  2207                           
  2208                           ;teris_16f886.c: 1392: cur_y++;
  2209  057F  3001               	movlw	1
  2210  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2212  0582  00CD               	movwf	??_main
  2213  0583  084D               	movf	??_main,w
  2214  0584  07E2               	addwf	_cur_y,f
  2215  0585  2CFD               	goto	l3873
  2216  0586                     __end_of_main:	
  2217                           ;teris_16f886.c: 1402: return 0;
  2218                           ;	Return value of _main is never used
  2219                           
  2220                           ;teris_16f886.c: 1393: }
  2221                           ;teris_16f886.c: 1394: }
  2222                           ;teris_16f886.c: 1395: __exit:
  2223                           
  2224                           
  2225                           	psect	text1
  2226  0A75                     __ptext1:	
  2227 ;; *************** function _srand *****************
  2228 ;; Defined at:
  2229 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\rand.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  x               2    0[COMMON] unsigned int 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         2       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0
  2246 ;;      Totals:         2       0       0       0       0
  2247 ;;Total ram usage:        2 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _srand
  2258  0A75                     _srand:	
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in _srand: [wreg]
  2262  0A75  0870               	movf	srand@x,w
  2263  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0A78  00E4               	movwf	_randx
  2266  0A79  0871               	movf	srand@x+1,w
  2267  0A7A  00E5               	movwf	_randx+1
  2268  0A7B  01E6               	clrf	_randx+2
  2269  0A7C  01E7               	clrf	_randx+3
  2270  0A7D  0008               	return
  2271  0A7E                     __end_of_srand:	
  2272                           
  2273                           	psect	text2
  2274  0094                     __ptext2:	
  2275 ;; *************** function _printf_debug_MATRIX88 *****************
  2276 ;; Defined at:
  2277 ;;		line 473 in file "teris_16f886.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  lable           2    5[COMMON] PTR const unsigned char 
  2280 ;;		 -> STR_22(12), ROM(8192), 
  2281 ;;  matrix          1    7[COMMON] PTR const struct .
  2282 ;;		 -> g_matrix88(64), 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  col             1   12[COMMON] unsigned char 
  2285 ;;  row             1   11[COMMON] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         3       0       0       0       0
  2296 ;;      Locals:         2       0       0       0       0
  2297 ;;      Temps:          3       0       0       0       0
  2298 ;;      Totals:         8       0       0       0       0
  2299 ;;Total ram usage:        8 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    3
  2302 ;; This function calls:
  2303 ;;		_debug_line
  2304 ;;		_debug_str
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;;		_printf_debug_Screen
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _printf_debug_MATRIX88
  2313  0094                     _printf_debug_MATRIX88:	
  2314                           
  2315                           ;teris_16f886.c: 475: if(lable != (0))
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _printf_debug_MATRIX88: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2319  0094  0875               	movf	printf_debug_MATRIX88@lable,w
  2320  0095  0476               	iorwf	printf_debug_MATRIX88@lable+1,w
  2321  0096  1903               	btfsc	3,2
  2322  0097  28AA               	goto	l220
  2323                           
  2324                           ;teris_16f886.c: 476: {
  2325                           ;teris_16f886.c: 477: debug_str(lable);
  2326  0098  0875               	movf	printf_debug_MATRIX88@lable,w
  2327  0099  00F3               	movwf	debug_str@str
  2328  009A  0876               	movf	printf_debug_MATRIX88@lable+1,w
  2329  009B  00F4               	movwf	debug_str@str+1
  2330  009C  160A  118A  27AC  120A  118A  	fcall	_debug_str
  2331                           
  2332                           ;teris_16f886.c: 478: debug_line(":");
  2333  00A1  306B               	movlw	low (STR_5| (0+32768))
  2334  00A2  00F3               	movwf	debug_line@str
  2335  00A3  308A               	movlw	high (STR_5| (0+32768))
  2336  00A4  00F4               	movwf	debug_line@str+1
  2337  00A5  160A  118A  27DE  120A  118A  	fcall	_debug_line
  2338  00AA                     l220:	
  2339                           
  2340                           ;teris_16f886.c: 479: }
  2341                           ;teris_16f886.c: 480: debug_line("<<<<<<<<<<<<<<<<<<<<MATRIX88");
  2342  00AA  30CD               	movlw	low (STR_16| (0+32768))
  2343  00AB  00F3               	movwf	debug_line@str
  2344  00AC  3089               	movlw	high (STR_16| (0+32768))
  2345  00AD  00F4               	movwf	debug_line@str+1
  2346  00AE  160A  118A  27DE  120A  118A  	fcall	_debug_line
  2347                           
  2348                           ;teris_16f886.c: 481: for(uint8_t row = 0; row < 8; row++)
  2349  00B3  01FB               	clrf	printf_debug_MATRIX88@row
  2350  00B4  3008               	movlw	8
  2351  00B5  027B               	subwf	printf_debug_MATRIX88@row,w
  2352  00B6  1803               	btfsc	3,0
  2353  00B7  28F8               	goto	l3223
  2354  00B8                     l3201:	
  2355                           
  2356                           ;teris_16f886.c: 482: {
  2357                           ;teris_16f886.c: 483: for(uint8_t col = 0; col < 8; col++)
  2358  00B8  01FC               	clrf	printf_debug_MATRIX88@col
  2359  00B9  3008               	movlw	8
  2360  00BA  027C               	subwf	printf_debug_MATRIX88@col,w
  2361  00BB  1803               	btfsc	3,0
  2362  00BC  28E7               	goto	l3217
  2363  00BD                     l3207:	
  2364                           
  2365                           ;teris_16f886.c: 484: {
  2366                           ;teris_16f886.c: 485: if(matrix->data[row][col] == 1)
  2367  00BD  087B               	movf	printf_debug_MATRIX88@row,w
  2368  00BE  00F8               	movwf	??_printf_debug_MATRIX88
  2369  00BF  3002               	movlw	2
  2370  00C0                     u4225:	
  2371  00C0  1003               	clrc
  2372  00C1  0DF8               	rlf	??_printf_debug_MATRIX88,f
  2373  00C2  3EFF               	addlw	-1
  2374  00C3  1D03               	skipz
  2375  00C4  28C0               	goto	u4225
  2376  00C5  1003               	clrc
  2377  00C6  0D78               	rlf	??_printf_debug_MATRIX88,w
  2378  00C7  0777               	addwf	printf_debug_MATRIX88@matrix,w
  2379  00C8  00F9               	movwf	??_printf_debug_MATRIX88+1
  2380  00C9  087C               	movf	printf_debug_MATRIX88@col,w
  2381  00CA  0779               	addwf	??_printf_debug_MATRIX88+1,w
  2382  00CB  00FA               	movwf	??_printf_debug_MATRIX88+2
  2383  00CC  087A               	movf	??_printf_debug_MATRIX88+2,w
  2384  00CD  0084               	movwf	4
  2385  00CE  1783               	bsf	3,7	;select IRP bank2
  2386  00CF  0300               	decf	0,w
  2387  00D0  1D03               	btfss	3,2
  2388  00D1  28D6               	goto	l3211
  2389                           
  2390                           ;teris_16f886.c: 486: {
  2391                           ;teris_16f886.c: 487: debug_str("*");
  2392  00D2  3069               	movlw	low (STR_7| (0+32768))
  2393  00D3  00F3               	movwf	debug_str@str
  2394  00D4  308A               	movlw	high (STR_7| (0+32768))
  2395  00D5  28D9               	goto	L1
  2396  00D6                     l3211:	
  2397                           ;teris_16f886.c: 488: }
  2398                           
  2399                           
  2400                           ;teris_16f886.c: 489: else
  2401                           ;teris_16f886.c: 490: {
  2402                           ;teris_16f886.c: 491: debug_str("_");
  2403  00D6  306D               	movlw	low (STR_8| (0+32768))
  2404  00D7  00F3               	movwf	debug_str@str
  2405  00D8  308A               	movlw	high (STR_8| (0+32768))
  2406  00D9                     L1:	
  2407  00D9  00F4               	movwf	debug_str@str+1
  2408  00DA  160A  118A  27AC  120A  118A  	fcall	_debug_str
  2409  00DF  3001               	movlw	1
  2410  00E0  00F8               	movwf	??_printf_debug_MATRIX88
  2411  00E1  0878               	movf	??_printf_debug_MATRIX88,w
  2412  00E2  07FC               	addwf	printf_debug_MATRIX88@col,f
  2413  00E3  3008               	movlw	8
  2414  00E4  027C               	subwf	printf_debug_MATRIX88@col,w
  2415  00E5  1C03               	skipc
  2416  00E6  28BD               	goto	l3207
  2417  00E7                     l3217:	
  2418                           
  2419                           ;teris_16f886.c: 492: }
  2420                           ;teris_16f886.c: 493: }
  2421                           ;teris_16f886.c: 494: debug_line("");
  2422  00E7  3068               	movlw	low ((STR_1+2)| (0+32768))
  2423  00E8  00F3               	movwf	debug_line@str
  2424  00E9  308A               	movlw	high ((STR_1+2)| (0+32768))
  2425  00EA  00F4               	movwf	debug_line@str+1
  2426  00EB  160A  118A  27DE  120A  118A  	fcall	_debug_line
  2427  00F0  3001               	movlw	1
  2428  00F1  00F8               	movwf	??_printf_debug_MATRIX88
  2429  00F2  0878               	movf	??_printf_debug_MATRIX88,w
  2430  00F3  07FB               	addwf	printf_debug_MATRIX88@row,f
  2431  00F4  3008               	movlw	8
  2432  00F5  027B               	subwf	printf_debug_MATRIX88@row,w
  2433  00F6  1C03               	skipc
  2434  00F7  28B8               	goto	l3201
  2435  00F8                     l3223:	
  2436                           
  2437                           ;teris_16f886.c: 495: }
  2438                           ;teris_16f886.c: 496: debug_line(">>>>>>>>>>>>>>>>>>>>");
  2439  00F8  3005               	movlw	low (STR_10| (0+32768))
  2440  00F9  00F3               	movwf	debug_line@str
  2441  00FA  308A               	movlw	high (STR_10| (0+32768))
  2442  00FB  00F4               	movwf	debug_line@str+1
  2443  00FC  160A  118A  27DE   	fcall	_debug_line
  2444  00FF  0008               	return
  2445  0100                     __end_of_printf_debug_MATRIX88:	
  2446                           
  2447                           	psect	text3
  2448  17AC                     __ptext3:	
  2449 ;; *************** function _debug_str *****************
  2450 ;; Defined at:
  2451 ;;		line 287 in file "teris_16f886.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  str             2    3[COMMON] PTR const unsigned char 
  2454 ;;		 -> STR_22(12), STR_18(2), STR_17(2), STR_8(2), 
  2455 ;;		 -> STR_7(2), ROM(8192), 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;		None
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2467 ;;      Params:         2       0       0       0       0
  2468 ;;      Locals:         0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0
  2470 ;;      Totals:         2       0       0       0       0
  2471 ;;Total ram usage:        2 bytes
  2472 ;; Hardware stack levels used:    1
  2473 ;; Hardware stack levels required when called:    2
  2474 ;; This function calls:
  2475 ;;		_USARTWriteString
  2476 ;; This function is called by:
  2477 ;;		_printf_debug_MATRIX88
  2478 ;;		_printf_debug_MATRIX44
  2479 ;;		_printf_debug_cur_MATRIX44
  2480 ;;		_printf_debug_Screen
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _debug_str
  2486  17AC                     _debug_str:	
  2487                           
  2488                           ;teris_16f886.c: 293: USARTWriteString(str);
  2489                           
  2490                           ;incstack = 0
  2491                           ; Regs used in _debug_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2492  17AC  0873               	movf	debug_str@str,w
  2493  17AD  00F1               	movwf	USARTWriteString@str
  2494  17AE  0874               	movf	debug_str@str+1,w
  2495  17AF  00F2               	movwf	USARTWriteString@str+1
  2496  17B0  120A  158A  23B6   	fcall	_USARTWriteString
  2497  17B3  0008               	return
  2498  17B4                     __end_of_debug_str:	
  2499                           
  2500                           	psect	text4
  2501  17DE                     __ptext4:	
  2502 ;; *************** function _debug_line *****************
  2503 ;; Defined at:
  2504 ;;		line 297 in file "teris_16f886.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  str             2    3[COMMON] PTR const unsigned char 
  2507 ;;		 -> STR_21(2), STR_20(21), STR_19(1), STR_16(29), 
  2508 ;;		 -> STR_15(2), STR_12(20), STR_11(2), STR_10(21), 
  2509 ;;		 -> STR_9(1), STR_6(29), STR_5(2), 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         2       0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0
  2524 ;;      Totals:         2       0       0       0       0
  2525 ;;Total ram usage:        2 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    2
  2528 ;; This function calls:
  2529 ;;		_USARTWriteString
  2530 ;; This function is called by:
  2531 ;;		_printf_debug_MATRIX88
  2532 ;;		_printf_debug_MATRIX44
  2533 ;;		_printf_debug_cur_MATRIX44
  2534 ;;		_printf_debug_all_MATRIX44
  2535 ;;		_printf_debug_Screen
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _debug_line
  2541  17DE                     _debug_line:	
  2542                           
  2543                           ;teris_16f886.c: 304: USARTWriteString(str);
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _debug_line: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2547  17DE  0873               	movf	debug_line@str,w
  2548  17DF  00F1               	movwf	USARTWriteString@str
  2549  17E0  0874               	movf	debug_line@str+1,w
  2550  17E1  00F2               	movwf	USARTWriteString@str+1
  2551  17E2  120A  158A  23B6  160A  118A  	fcall	_USARTWriteString
  2552                           
  2553                           ;teris_16f886.c: 305: USARTWriteString("\r\n");
  2554  17E7  3066               	movlw	low (STR_1| (0+32768))
  2555  17E8  00F1               	movwf	USARTWriteString@str
  2556  17E9  308A               	movlw	high (STR_1| (0+32768))
  2557  17EA  00F2               	movwf	USARTWriteString@str+1
  2558  17EB  120A  158A  23B6   	fcall	_USARTWriteString
  2559  17EE  0008               	return
  2560  17EF                     __end_of_debug_line:	
  2561                           
  2562                           	psect	text5
  2563  0BB6                     __ptext5:	
  2564 ;; *************** function _USARTWriteString *****************
  2565 ;; Defined at:
  2566 ;;		line 76 in file "usart_pic16.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  str             2    1[COMMON] PTR const unsigned char 
  2569 ;;		 -> STR_22(12), STR_21(2), STR_20(21), STR_19(1), 
  2570 ;;		 -> STR_18(2), STR_17(2), STR_16(29), STR_15(2), 
  2571 ;;		 -> STR_12(20), STR_11(2), STR_10(21), STR_9(1), 
  2572 ;;		 -> STR_8(2), STR_7(2), STR_6(29), STR_5(2), 
  2573 ;;		 -> ROM(8192), STR_4(3), STR_3(3), STR_2(3), 
  2574 ;;		 -> g_debug(32), STR_1(3), 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         2       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0
  2589 ;;      Totals:         2       0       0       0       0
  2590 ;;Total ram usage:        2 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    1
  2593 ;; This function calls:
  2594 ;;		_USARTWriteChar
  2595 ;; This function is called by:
  2596 ;;		_debug_str
  2597 ;;		_debug_line
  2598 ;;		_USARTWriteLine
  2599 ;;		_debug_int1
  2600 ;;		_debug_int2
  2601 ;;		_debug_int3
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _USARTWriteString
  2607  0BB6                     _USARTWriteString:	
  2608  0BB6                     l2469:	
  2609                           ;usart_pic16.c: 77: while (*str != '\0') {
  2610                           
  2611                           ;incstack = 0
  2612                           ; Regs used in _USARTWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2613                           
  2614  0BB6  0872               	movf	USARTWriteString@str+1,w
  2615  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0BB9  00FF               	movwf	127
  2618  0BBA  0871               	movf	USARTWriteString@str,w
  2619  0BBB  0084               	movwf	4
  2620  0BBC  120A  158A  2000  120A  158A  	fcall	stringtab
  2621  0BC1  3A00               	xorlw	0
  2622  0BC2  1903               	btfsc	3,2
  2623  0BC3  0008               	return
  2624                           
  2625                           ;usart_pic16.c: 78: USARTWriteChar(*str);
  2626  0BC4  0872               	movf	USARTWriteString@str+1,w
  2627  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  2629  0BC7  00FF               	movwf	127
  2630  0BC8  0871               	movf	USARTWriteString@str,w
  2631  0BC9  0084               	movwf	4
  2632  0BCA  120A  158A  2000  120A  158A  	fcall	stringtab
  2633  0BCF  160A  118A  27A4  120A  158A  	fcall	_USARTWriteChar
  2634                           
  2635                           ;usart_pic16.c: 79: str++;
  2636  0BD4  3001               	movlw	1
  2637  0BD5  07F1               	addwf	USARTWriteString@str,f
  2638  0BD6  1803               	skipnc
  2639  0BD7  0AF2               	incf	USARTWriteString@str+1,f
  2640  0BD8  3000               	movlw	0
  2641  0BD9  07F2               	addwf	USARTWriteString@str+1,f
  2642  0BDA  2BB6               	goto	l2469
  2643  0BDB                     __end_of_USARTWriteString:	
  2644                           
  2645                           	psect	text6
  2646  17A4                     __ptext6:	
  2647 ;; *************** function _USARTWriteChar *****************
  2648 ;; Defined at:
  2649 ;;		line 70 in file "usart_pic16.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  ch              1    wreg     unsigned char 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;  ch              1    0[COMMON] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2663 ;;      Params:         0       0       0       0       0
  2664 ;;      Locals:         1       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0
  2666 ;;      Totals:         1       0       0       0       0
  2667 ;;Total ram usage:        1 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_USARTWriteString
  2673 ;;		_USARTWriteLine
  2674 ;;		_USARTWriteInt
  2675 ;;		_USARTGotoNewLine
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _USARTWriteChar
  2681  17A4                     _USARTWriteChar:	
  2682                           
  2683                           ;incstack = 0
  2684                           ; Regs used in _USARTWriteChar: [wreg]
  2685                           ;USARTWriteChar@ch stored from wreg
  2686  17A4  00F0               	movwf	USARTWriteChar@ch
  2687  17A5                     l36:	
  2688                           ;usart_pic16.c: 71: while (!PIR1bits.TXIF);
  2689                           
  2690  17A5  1283               	bcf	3,5	;RP0=0, select bank0
  2691  17A6  1303               	bcf	3,6	;RP1=0, select bank0
  2692  17A7  1E0C               	btfss	12,4	;volatile
  2693  17A8  2FA5               	goto	l36
  2694                           
  2695                           ;usart_pic16.c: 73: TXREG = ch;
  2696  17A9  0870               	movf	USARTWriteChar@ch,w
  2697  17AA  0099               	movwf	25	;volatile
  2698  17AB  0008               	return
  2699  17AC                     __end_of_USARTWriteChar:	
  2700                           
  2701                           	psect	text7
  2702  0EA0                     __ptext7:	
  2703 ;; *************** function _merge *****************
  2704 ;; Defined at:
  2705 ;;		line 851 in file "teris_16f886.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  x               1    wreg     char 
  2708 ;;  y               1    0[COMMON] char 
  2709 ;;  matrix44        2    1[COMMON] PTR const struct .
  2710 ;;		 -> NULL(0), g_matrix44(384), 
  2711 ;;  matrix88        1    3[COMMON] PTR struct .
  2712 ;;		 -> g_matrix88(64), 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  x               1    8[COMMON] char 
  2715 ;;  col             1   10[COMMON] unsigned char 
  2716 ;;  row             1    9[COMMON] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2726 ;;      Params:         4       0       0       0       0
  2727 ;;      Locals:         3       0       0       0       0
  2728 ;;      Temps:          4       0       0       0       0
  2729 ;;      Totals:        11       0       0       0       0
  2730 ;;Total ram usage:       11 bytes
  2731 ;; Hardware stack levels used:    2
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           
  2740                           ;psect for function _merge
  2741  0EA0                     _merge:	
  2742                           
  2743                           ;incstack = 0
  2744                           ; Regs used in _merge: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2745                           ;merge@x stored from wreg
  2746  0EA0  00F8               	movwf	merge@x
  2747                           
  2748                           ;teris_16f886.c: 853: for(uint8_t row = 0; row < 4; row++)
  2749  0EA1  01F9               	clrf	merge@row
  2750  0EA2                     L2:	
  2751  0EA2  3004               	movlw	4
  2752  0EA3  0279               	subwf	merge@row,w
  2753  0EA4  1803               	btfsc	3,0
  2754  0EA5  0008               	return
  2755                           
  2756                           ;teris_16f886.c: 854: {
  2757                           ;teris_16f886.c: 855: for(uint8_t col = 0; col < 4; col++)
  2758  0EA6  01FA               	clrf	merge@col
  2759  0EA7  3004               	movlw	4
  2760  0EA8  027A               	subwf	merge@col,w
  2761  0EA9  1803               	btfsc	3,0
  2762  0EAA  2EEB               	goto	l3323
  2763  0EAB                     l3315:	
  2764                           
  2765                           ;teris_16f886.c: 856: {
  2766                           ;teris_16f886.c: 857: if(matrix44->data[row][col] == 1)
  2767  0EAB  0879               	movf	merge@row,w
  2768  0EAC  00F4               	movwf	??_merge
  2769  0EAD  01F5               	clrf	??_merge+1
  2770  0EAE  1003               	clrc
  2771  0EAF  0DF4               	rlf	??_merge,f
  2772  0EB0  0DF5               	rlf	??_merge+1,f
  2773  0EB1  1003               	clrc
  2774  0EB2  0DF4               	rlf	??_merge,f
  2775  0EB3  0DF5               	rlf	??_merge+1,f
  2776  0EB4  0874               	movf	??_merge,w
  2777  0EB5  0771               	addwf	merge@matrix44,w
  2778  0EB6  00F6               	movwf	??_merge+2
  2779  0EB7  0875               	movf	??_merge+1,w
  2780  0EB8  1803               	skipnc
  2781  0EB9  0A75               	incf	??_merge+1,w
  2782  0EBA  0772               	addwf	merge@matrix44+1,w
  2783  0EBB  00F7               	movwf	??_merge+3
  2784  0EBC  087A               	movf	merge@col,w
  2785  0EBD  0776               	addwf	??_merge+2,w
  2786  0EBE  0084               	movwf	4
  2787  0EBF  0877               	movf	??_merge+3,w
  2788  0EC0  1803               	skipnc
  2789  0EC1  0A77               	incf	??_merge+3,w
  2790  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0EC4  00FF               	movwf	127
  2793  0EC5  120A  158A  2000  120A  158A  	fcall	stringtab
  2794  0ECA  3A01               	xorlw	1
  2795  0ECB  1D03               	skipz
  2796  0ECC  2EE3               	goto	l3319
  2797                           
  2798                           ;teris_16f886.c: 858: {
  2799                           ;teris_16f886.c: 859: matrix88->data[y + row][x + col] = 1;
  2800  0ECD  087A               	movf	merge@col,w
  2801  0ECE  0778               	addwf	merge@x,w
  2802  0ECF  0773               	addwf	merge@matrix88,w
  2803  0ED0  00F4               	movwf	??_merge
  2804  0ED1  0879               	movf	merge@row,w
  2805  0ED2  0770               	addwf	merge@y,w
  2806  0ED3  00F5               	movwf	??_merge+1
  2807  0ED4  3002               	movlw	2
  2808  0ED5                     u4465:	
  2809  0ED5  1003               	clrc
  2810  0ED6  0DF5               	rlf	??_merge+1,f
  2811  0ED7  3EFF               	addlw	-1
  2812  0ED8  1D03               	skipz
  2813  0ED9  2ED5               	goto	u4465
  2814  0EDA  1003               	clrc
  2815  0EDB  0D75               	rlf	??_merge+1,w
  2816  0EDC  0774               	addwf	??_merge,w
  2817  0EDD  00F6               	movwf	??_merge+2
  2818  0EDE  0876               	movf	??_merge+2,w
  2819  0EDF  0084               	movwf	4
  2820  0EE0  1783               	bsf	3,7	;select IRP bank2
  2821  0EE1  0180               	clrf	0
  2822  0EE2  0A80               	incf	0,f
  2823  0EE3                     l3319:	
  2824  0EE3  3001               	movlw	1
  2825  0EE4  00F4               	movwf	??_merge
  2826  0EE5  0874               	movf	??_merge,w
  2827  0EE6  07FA               	addwf	merge@col,f
  2828  0EE7  3004               	movlw	4
  2829  0EE8  027A               	subwf	merge@col,w
  2830  0EE9  1C03               	skipc
  2831  0EEA  2EAB               	goto	l3315
  2832  0EEB                     l3323:	
  2833  0EEB  3001               	movlw	1
  2834  0EEC  00F4               	movwf	??_merge
  2835  0EED  0874               	movf	??_merge,w
  2836  0EEE  07F9               	addwf	merge@row,f
  2837  0EEF  2EA2               	goto	L2
  2838  0EF0                     __end_of_merge:	
  2839                           
  2840                           	psect	text8
  2841  0C4F                     __ptext8:	
  2842 ;; *************** function _max7219_init1 *****************
  2843 ;; Defined at:
  2844 ;;		line 445 in file "teris_16f886.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0
  2860 ;;      Temps:          1       0       0       0       0
  2861 ;;      Totals:         1       0       0       0       0
  2862 ;;Total ram usage:        1 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    2
  2865 ;; This function calls:
  2866 ;;		_Write_Byte
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _max7219_init1
  2874  0C4F                     _max7219_init1:	
  2875                           
  2876                           ;teris_16f886.c: 447: Write_Byte(0x09, 0x00);
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _max7219_init1: [wreg+status,2+status,0+pclath+cstack]
  2880  0C4F  01F4               	clrf	Write_Byte@myValue
  2881  0C50  3009               	movlw	9
  2882  0C51  120A  158A  227E  120A  158A  	fcall	_Write_Byte
  2883                           
  2884                           ;teris_16f886.c: 448: Write_Byte(0x0A, 0x0F);
  2885  0C56  300F               	movlw	15
  2886  0C57  00F6               	movwf	??_max7219_init1
  2887  0C58  0876               	movf	??_max7219_init1,w
  2888  0C59  00F4               	movwf	Write_Byte@myValue
  2889  0C5A  300A               	movlw	10
  2890  0C5B  120A  158A  227E  120A  158A  	fcall	_Write_Byte
  2891                           
  2892                           ;teris_16f886.c: 449: Write_Byte(0x0B, 0x07);
  2893  0C60  3007               	movlw	7
  2894  0C61  00F6               	movwf	??_max7219_init1
  2895  0C62  0876               	movf	??_max7219_init1,w
  2896  0C63  00F4               	movwf	Write_Byte@myValue
  2897  0C64  300B               	movlw	11
  2898  0C65  120A  158A  227E  120A  158A  	fcall	_Write_Byte
  2899                           
  2900                           ;teris_16f886.c: 450: Write_Byte(0x0C, 0x01);
  2901  0C6A  01F4               	clrf	Write_Byte@myValue
  2902  0C6B  0AF4               	incf	Write_Byte@myValue,f
  2903  0C6C  300C               	movlw	12
  2904  0C6D  120A  158A  227E  120A  158A  	fcall	_Write_Byte
  2905                           
  2906                           ;teris_16f886.c: 451: Write_Byte(0x00, 0xFF);
  2907  0C72  30FF               	movlw	255
  2908  0C73  00F6               	movwf	??_max7219_init1
  2909  0C74  0876               	movf	??_max7219_init1,w
  2910  0C75  00F4               	movwf	Write_Byte@myValue
  2911  0C76  3000               	movlw	0
  2912  0C77  120A  158A  227E   	fcall	_Write_Byte
  2913  0C7A  0008               	return
  2914  0C7B                     __end_of_max7219_init1:	
  2915                           
  2916                           	psect	text9
  2917  0100                     __ptext9:	
  2918 ;; *************** function _hit_land *****************
  2919 ;; Defined at:
  2920 ;;		line 687 in file "teris_16f886.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  x               1    wreg     char 
  2923 ;;  y               1    0[COMMON] char 
  2924 ;;  matrix44        2    1[COMMON] PTR const struct .
  2925 ;;		 -> NULL(0), g_matrix44(384), 
  2926 ;;  matrix88        1    3[COMMON] PTR const struct .
  2927 ;;		 -> g_matrix88(64), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  x               1    8[COMMON] char 
  2930 ;;  col             1    9[COMMON] char 
  2931 ;;  row             1   10[COMMON] char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1    wreg      unsigned char 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         4       0       0       0       0
  2942 ;;      Locals:         3       0       0       0       0
  2943 ;;      Temps:          4       0       0       0       0
  2944 ;;      Totals:        11       0       0       0       0
  2945 ;;Total ram usage:       11 bytes
  2946 ;; Hardware stack levels used:    2
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function _hit_land
  2956  0100                     _hit_land:	
  2957                           
  2958                           ;incstack = 0
  2959                           ; Regs used in _hit_land: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2960                           ;hit_land@x stored from wreg
  2961  0100  00F8               	movwf	hit_land@x
  2962                           
  2963                           ;teris_16f886.c: 693: for(int8_t row = 4 - 1; row >= 0; row--)
  2964  0101  3003               	movlw	3
  2965  0102  00F4               	movwf	??_hit_land
  2966  0103  0874               	movf	??_hit_land,w
  2967  0104  00FA               	movwf	hit_land@row
  2968  0105  1BFA               	btfsc	hit_land@row,7
  2969  0106  296F               	goto	l3275
  2970  0107                     l3247:	
  2971                           
  2972                           ;teris_16f886.c: 694: {
  2973                           ;teris_16f886.c: 695: for(int8_t col = 0; col < 4; col++)
  2974  0107  01F9               	clrf	hit_land@col
  2975  0108  0879               	movf	hit_land@col,w
  2976  0109  3A80               	xorlw	128
  2977  010A  3E7C               	addlw	-132
  2978  010B  1803               	btfsc	3,0
  2979  010C  2969               	goto	l3271
  2980  010D                     l3253:	
  2981                           
  2982                           ;teris_16f886.c: 696: {
  2983                           ;teris_16f886.c: 697: if(matrix44->data[row][col] == 1)
  2984  010D  087A               	movf	hit_land@row,w
  2985  010E  00F4               	movwf	??_hit_land
  2986  010F  01F5               	clrf	??_hit_land+1
  2987  0110  1003               	clrc
  2988  0111  0DF4               	rlf	??_hit_land,f
  2989  0112  0DF5               	rlf	??_hit_land+1,f
  2990  0113  1003               	clrc
  2991  0114  0DF4               	rlf	??_hit_land,f
  2992  0115  0DF5               	rlf	??_hit_land+1,f
  2993  0116  0874               	movf	??_hit_land,w
  2994  0117  0771               	addwf	hit_land@matrix44,w
  2995  0118  00F6               	movwf	??_hit_land+2
  2996  0119  0875               	movf	??_hit_land+1,w
  2997  011A  1803               	skipnc
  2998  011B  0A75               	incf	??_hit_land+1,w
  2999  011C  0772               	addwf	hit_land@matrix44+1,w
  3000  011D  00F7               	movwf	??_hit_land+3
  3001  011E  0879               	movf	hit_land@col,w
  3002  011F  0776               	addwf	??_hit_land+2,w
  3003  0120  0084               	movwf	4
  3004  0121  0877               	movf	??_hit_land+3,w
  3005  0122  1803               	skipnc
  3006  0123  0A77               	incf	??_hit_land+3,w
  3007  0124  1283               	bcf	3,5	;RP0=0, select bank0
  3008  0125  1303               	bcf	3,6	;RP1=0, select bank0
  3009  0126  00FF               	movwf	127
  3010  0127  120A  158A  2000  120A  118A  	fcall	stringtab
  3011  012C  3A01               	xorlw	1
  3012  012D  1D03               	skipz
  3013  012E  2960               	goto	l3267
  3014                           
  3015                           ;teris_16f886.c: 698: {
  3016                           ;teris_16f886.c: 699: if((y + row) >= (8 - 1))
  3017  012F  0870               	movf	hit_land@y,w
  3018  0130  077A               	addwf	hit_land@row,w
  3019  0131  00F4               	movwf	??_hit_land
  3020  0132  01F5               	clrf	??_hit_land+1
  3021  0133  1803               	skipnc
  3022  0134  0AF5               	incf	??_hit_land+1,f
  3023  0135  1BF0               	btfsc	hit_land@y,7
  3024  0136  03F5               	decf	??_hit_land+1,f
  3025  0137  1BFA               	btfsc	hit_land@row,7
  3026  0138  03F5               	decf	??_hit_land+1,f
  3027  0139  0875               	movf	??_hit_land+1,w
  3028  013A  3A80               	xorlw	128
  3029  013B  00FF               	movwf	127
  3030  013C  3080               	movlw	128
  3031  013D  027F               	subwf	127,w
  3032  013E  1D03               	skipz
  3033  013F  2942               	goto	u4325
  3034  0140  3007               	movlw	7
  3035  0141  0274               	subwf	??_hit_land,w
  3036  0142                     u4325:	
  3037  0142  1C03               	skipc
  3038  0143  2946               	goto	l3261
  3039                           
  3040                           ;teris_16f886.c: 700: {
  3041                           ;teris_16f886.c: 704: return 1;
  3042  0144  3001               	movlw	1
  3043  0145  0008               	return
  3044  0146                     l3261:	
  3045                           
  3046                           ;teris_16f886.c: 705: }
  3047                           ;teris_16f886.c: 707: if(matrix88->data[y + row + 1][x + col] == 1)
  3048  0146  0879               	movf	hit_land@col,w
  3049  0147  0778               	addwf	hit_land@x,w
  3050  0148  0773               	addwf	hit_land@matrix88,w
  3051  0149  00F4               	movwf	??_hit_land
  3052  014A  087A               	movf	hit_land@row,w
  3053  014B  0770               	addwf	hit_land@y,w
  3054  014C  00F5               	movwf	??_hit_land+1
  3055  014D  3002               	movlw	2
  3056  014E                     u4335:	
  3057  014E  1003               	clrc
  3058  014F  0DF5               	rlf	??_hit_land+1,f
  3059  0150  3EFF               	addlw	-1
  3060  0151  1D03               	skipz
  3061  0152  294E               	goto	u4335
  3062  0153  1003               	clrc
  3063  0154  0D75               	rlf	??_hit_land+1,w
  3064  0155  3E08               	addlw	8
  3065  0156  0774               	addwf	??_hit_land,w
  3066  0157  00F6               	movwf	??_hit_land+2
  3067  0158  0876               	movf	??_hit_land+2,w
  3068  0159  0084               	movwf	4
  3069  015A  1783               	bsf	3,7	;select IRP bank2
  3070  015B  0300               	decf	0,w
  3071  015C  1D03               	btfss	3,2
  3072  015D  2960               	goto	l3267
  3073                           
  3074                           ;teris_16f886.c: 708: {
  3075                           ;teris_16f886.c: 712: return 1;
  3076  015E  3001               	movlw	1
  3077  015F  0008               	return
  3078  0160                     l3267:	
  3079  0160  3001               	movlw	1
  3080  0161  00F4               	movwf	??_hit_land
  3081  0162  0874               	movf	??_hit_land,w
  3082  0163  07F9               	addwf	hit_land@col,f
  3083  0164  0879               	movf	hit_land@col,w
  3084  0165  3A80               	xorlw	128
  3085  0166  3E7C               	addlw	-132
  3086  0167  1C03               	skipc
  3087  0168  290D               	goto	l3253
  3088  0169                     l3271:	
  3089  0169  30FF               	movlw	255
  3090  016A  00F4               	movwf	??_hit_land
  3091  016B  0874               	movf	??_hit_land,w
  3092  016C  07FA               	addwf	hit_land@row,f
  3093  016D  1FFA               	btfss	hit_land@row,7
  3094  016E  2907               	goto	l3247
  3095  016F                     l3275:	
  3096                           
  3097                           ;teris_16f886.c: 713: }
  3098                           ;teris_16f886.c: 714: }
  3099                           ;teris_16f886.c: 715: }
  3100                           ;teris_16f886.c: 716: }
  3101                           ;teris_16f886.c: 720: return 0;
  3102  016F  3000               	movlw	0
  3103  0170  0008               	return
  3104  0171                     __end_of_hit_land:	
  3105                           
  3106                           	psect	text10
  3107  0586                     __ptext10:	
  3108 ;; *************** function _find_best_solution *****************
  3109 ;; Defined at:
  3110 ;;		line 1103 in file "teris_16f886.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  temp_x          1   40[BANK0 ] char 
  3115 ;;  tem_sub_inde    1   39[BANK0 ] unsigned char 
  3116 ;;  temp_high       2   36[BANK0 ] unsigned int 
  3117 ;;  temp_risk       2   33[BANK0 ] int 
  3118 ;;  temp_pre_ris    2   27[BANK0 ] int 
  3119 ;;  temp_y          1   38[BANK0 ] char 
  3120 ;;  res             1   35[BANK0 ] unsigned char 
  3121 ;;  tem_pre_sub_    1   32[BANK0 ] char 
  3122 ;;  temp_pre_x      1   31[BANK0 ] char 
  3123 ;;  right_most_i    1   30[BANK0 ] char 
  3124 ;;  left_most_in    1   29[BANK0 ] char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      unsigned char 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3134 ;;      Params:         0       0       0       0       0
  3135 ;;      Locals:         0      14       0       0       0
  3136 ;;      Temps:          0      18       0       0       0
  3137 ;;      Totals:         0      32       0       0       0
  3138 ;;Total ram usage:       32 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    3
  3141 ;; This function calls:
  3142 ;;		___bmul
  3143 ;;		___wmul
  3144 ;;		_fall_off
  3145 ;;		_get_heavy
  3146 ;;		_get_high
  3147 ;;		_get_high_after_merge
  3148 ;;		_get_holes_after_merge
  3149 ;;		_get_num_of_orphan
  3150 ;;		_get_num_removed_rows
  3151 ;;		_is_valid
  3152 ;;		_left_most
  3153 ;;		_merge1
  3154 ;;		_right_most
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           
  3161                           ;psect for function _find_best_solution
  3162  0586                     _find_best_solution:	
  3163                           
  3164                           ;teris_16f886.c: 1109: uint8_t res = 0;
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in _find_best_solution: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3168  0586  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0587  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0588  01C3               	clrf	find_best_solution@res
  3171                           
  3172                           ;teris_16f886.c: 1110: int8_t left_most_index, right_most_index;
  3173                           ;teris_16f886.c: 1112: int8_t temp_pre_x = 0xF, tem_pre_sub_index = 0xF;
  3174  0589  300F               	movlw	15
  3175  058A  00A9               	movwf	??_find_best_solution
  3176  058B  0829               	movf	??_find_best_solution,w
  3177  058C  00BF               	movwf	find_best_solution@temp_pre_x
  3178  058D  300F               	movlw	15
  3179  058E  00A9               	movwf	??_find_best_solution
  3180  058F  0829               	movf	??_find_best_solution,w
  3181  0590  00C0               	movwf	find_best_solution@tem_pre_sub_index
  3182                           
  3183                           ;teris_16f886.c: 1113: int16_t temp_pre_risk = -30000;
  3184  0591  30D0               	movlw	208
  3185  0592  00BB               	movwf	find_best_solution@temp_pre_risk
  3186  0593  308A               	movlw	138
  3187  0594  00BC               	movwf	find_best_solution@temp_pre_risk+1
  3188                           
  3189                           ;teris_16f886.c: 1114: int8_t temp_y;
  3190                           ;teris_16f886.c: 1115: int16_t temp_risk;
  3191                           ;teris_16f886.c: 1116: uint16_t temp_high;
  3192                           ;teris_16f886.c: 1119: for(uint8_t tem_sub_index = 0; tem_sub_index < g_char_info[g_char
      +                          _info_index].num; tem_sub_index++)
  3193  0595  01C7               	clrf	find_best_solution@tem_sub_index
  3194  0596                     l3373:	
  3195  0596  3003               	movlw	3
  3196  0597  00A9               	movwf	??_find_best_solution
  3197  0598  0829               	movf	??_find_best_solution,w
  3198  0599  00F0               	movwf	___bmul@multiplicand
  3199  059A  0863               	movf	_g_char_info_index,w
  3200  059B  160A  118A  27CD  120A  118A  	fcall	___bmul
  3201  05A0  3E02               	addlw	2
  3202  05A1  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  3203  05A2  0084               	movwf	4
  3204  05A3  1383               	bcf	3,7	;select IRP bank1
  3205  05A4  0800               	movf	0,w
  3206  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3207  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  3208  05A7  0247               	subwf	find_best_solution@tem_sub_index,w
  3209  05A8  1803               	btfsc	3,0
  3210  05A9  2FA6               	goto	l3375
  3211                           
  3212                           ;teris_16f886.c: 1120: {
  3213                           ;teris_16f886.c: 1121: temp_cur_matrix44 = &g_matrix44[g_char_info[g_char_info_index].st
      +                          art_index + tem_sub_index];
  3214  05AA  3003               	movlw	3
  3215  05AB  00A9               	movwf	??_find_best_solution
  3216  05AC  0829               	movf	??_find_best_solution,w
  3217  05AD  00F0               	movwf	___bmul@multiplicand
  3218  05AE  0863               	movf	_g_char_info_index,w
  3219  05AF  160A  118A  27CD  120A  118A  	fcall	___bmul
  3220  05B4  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  3221  05B5  0084               	movwf	4
  3222  05B6  1383               	bcf	3,7	;select IRP bank1
  3223  05B7  0800               	movf	0,w
  3224  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3225  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3226  05BA  0747               	addwf	find_best_solution@tem_sub_index,w
  3227  05BB  00AA               	movwf	??_find_best_solution+1
  3228  05BC  01AB               	clrf	??_find_best_solution+2
  3229  05BD  0DAB               	rlf	??_find_best_solution+2,f
  3230  05BE  0EAA               	swapf	??_find_best_solution+1,f
  3231  05BF  0EAB               	swapf	??_find_best_solution+2,f
  3232  05C0  30F0               	movlw	240
  3233  05C1  05AB               	andwf	??_find_best_solution+2,f
  3234  05C2  082A               	movf	??_find_best_solution+1,w
  3235  05C3  390F               	andlw	15
  3236  05C4  04AB               	iorwf	??_find_best_solution+2,f
  3237  05C5  30F0               	movlw	240
  3238  05C6  05AA               	andwf	??_find_best_solution+1,f
  3239  05C7  3030               	movlw	low (_g_matrix44| (0+32768))
  3240  05C8  00AC               	movwf	??_find_best_solution+3
  3241  05C9  3088               	movlw	high (_g_matrix44| (0+32768))
  3242  05CA  00AD               	movwf	??_find_best_solution+4
  3243  05CB  082A               	movf	??_find_best_solution+1,w
  3244  05CC  072C               	addwf	??_find_best_solution+3,w
  3245  05CD  00AE               	movwf	??_find_best_solution+5
  3246  05CE  082B               	movf	??_find_best_solution+2,w
  3247  05CF  1803               	skipnc
  3248  05D0  0A2B               	incf	??_find_best_solution+2,w
  3249  05D1  072D               	addwf	??_find_best_solution+4,w
  3250  05D2  00AF               	movwf	??_find_best_solution+6
  3251  05D3  082E               	movf	??_find_best_solution+5,w
  3252  05D4  00E0               	movwf	_temp_cur_matrix44
  3253  05D5  082F               	movf	??_find_best_solution+6,w
  3254  05D6  00E1               	movwf	_temp_cur_matrix44+1
  3255                           
  3256                           ;teris_16f886.c: 1122: left_most_index = left_most(cur_x, temp_cur_matrix44, &g_matrix88
      +                          );
  3257  05D7  0860               	movf	_temp_cur_matrix44,w
  3258  05D8  00FB               	movwf	left_most@matrix44
  3259  05D9  0861               	movf	_temp_cur_matrix44+1,w
  3260  05DA  00FC               	movwf	left_most@matrix44+1
  3261  05DB  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3262  05DC  00A9               	movwf	??_find_best_solution
  3263  05DD  0829               	movf	??_find_best_solution,w
  3264  05DE  00FD               	movwf	left_most@matrix88
  3265  05DF  0868               	movf	_cur_x,w
  3266  05E0  120A  158A  230D  120A  118A  	fcall	_left_most
  3267  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3268  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3269  05E7  00AA               	movwf	??_find_best_solution+1
  3270  05E8  082A               	movf	??_find_best_solution+1,w
  3271  05E9  00BD               	movwf	find_best_solution@left_most_index
  3272                           
  3273                           ;teris_16f886.c: 1123: right_most_index = right_most(cur_x, temp_cur_matrix44, &g_matrix
      +                          88);
  3274  05EA  0860               	movf	_temp_cur_matrix44,w
  3275  05EB  00FA               	movwf	right_most@matrix44
  3276  05EC  0861               	movf	_temp_cur_matrix44+1,w
  3277  05ED  00FB               	movwf	right_most@matrix44+1
  3278  05EE  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3279  05EF  00A9               	movwf	??_find_best_solution
  3280  05F0  0829               	movf	??_find_best_solution,w
  3281  05F1  00FC               	movwf	right_most@matrix88
  3282  05F2  0868               	movf	_cur_x,w
  3283  05F3  120A  158A  232D  120A  118A  	fcall	_right_most
  3284  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3285  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3286  05FA  00AA               	movwf	??_find_best_solution+1
  3287  05FB  082A               	movf	??_find_best_solution+1,w
  3288  05FC  00BE               	movwf	find_best_solution@right_most_index
  3289                           
  3290                           ;teris_16f886.c: 1125: for(int8_t temp_x = left_most_index; temp_x <= right_most_index; 
      +                          temp_x++)
  3291  05FD  083D               	movf	find_best_solution@left_most_index,w
  3292  05FE  00A9               	movwf	??_find_best_solution
  3293  05FF  0829               	movf	??_find_best_solution,w
  3294  0600  00C8               	movwf	find_best_solution@temp_x
  3295  0601                     l3369:	
  3296  0601  083E               	movf	find_best_solution@right_most_index,w
  3297  0602  3A80               	xorlw	128
  3298  0603  00A9               	movwf	??_find_best_solution
  3299  0604  0848               	movf	find_best_solution@temp_x,w
  3300  0605  3A80               	xorlw	128
  3301  0606  02A9               	subwf	??_find_best_solution,f
  3302  0607  1C03               	btfss	3,0
  3303  0608  2FA1               	goto	l3371
  3304                           
  3305                           ;teris_16f886.c: 1126: {
  3306                           ;teris_16f886.c: 1127: temp_y = fall_off(temp_x, cur_y, temp_cur_matrix44, &g_matrix88);
  3307  0609  0862               	movf	_cur_y,w
  3308  060A  00A9               	movwf	??_find_best_solution
  3309  060B  0829               	movf	??_find_best_solution,w
  3310  060C  00F0               	movwf	fall_off@y
  3311  060D  0860               	movf	_temp_cur_matrix44,w
  3312  060E  00F1               	movwf	fall_off@matrix44
  3313  060F  0861               	movf	_temp_cur_matrix44+1,w
  3314  0610  00F2               	movwf	fall_off@matrix44+1
  3315  0611  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3316  0612  00AA               	movwf	??_find_best_solution+1
  3317  0613  082A               	movf	??_find_best_solution+1,w
  3318  0614  00F3               	movwf	fall_off@matrix88
  3319  0615  0848               	movf	find_best_solution@temp_x,w
  3320  0616  120A  118A  21E3  120A  118A  	fcall	_fall_off
  3321  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3322  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3323  061D  00AB               	movwf	??_find_best_solution+2
  3324  061E  082B               	movf	??_find_best_solution+2,w
  3325  061F  00C6               	movwf	find_best_solution@temp_y
  3326                           
  3327                           ;teris_16f886.c: 1134: if(is_valid(temp_x, temp_y, temp_cur_matrix44, &g_matrix88) == 0)
  3328  0620  0846               	movf	find_best_solution@temp_y,w
  3329  0621  00A9               	movwf	??_find_best_solution
  3330  0622  0829               	movf	??_find_best_solution,w
  3331  0623  00F0               	movwf	is_valid@y
  3332  0624  0860               	movf	_temp_cur_matrix44,w
  3333  0625  00F1               	movwf	is_valid@matrix44
  3334  0626  0861               	movf	_temp_cur_matrix44+1,w
  3335  0627  00F2               	movwf	is_valid@matrix44+1
  3336  0628  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3337  0629  00AA               	movwf	??_find_best_solution+1
  3338  062A  082A               	movf	??_find_best_solution+1,w
  3339  062B  00F3               	movwf	is_valid@matrix88
  3340  062C  0848               	movf	find_best_solution@temp_x,w
  3341  062D  120A  118A  22D6  120A  118A  	fcall	_is_valid
  3342  0632  3A00               	xorlw	0
  3343  0633  1903               	btfsc	3,2
  3344  0634  2F9A               	goto	l3367
  3345                           
  3346                           ;teris_16f886.c: 1137: }
  3347                           ;teris_16f886.c: 1138: res = 1;
  3348                           
  3349                           ;teris_16f886.c: 1135: {
  3350                           ;teris_16f886.c: 1136: continue;
  3351  0635  1283               	bcf	3,5	;RP0=0, select bank0
  3352  0636  1303               	bcf	3,6	;RP1=0, select bank0
  3353  0637  01C3               	clrf	find_best_solution@res
  3354  0638  0AC3               	incf	find_best_solution@res,f
  3355                           
  3356                           ;teris_16f886.c: 1139: merge1(temp_x, temp_y, temp_cur_matrix44, &g_matrix88, &temp_matr
      +                          ix88);
  3357  0639  0846               	movf	find_best_solution@temp_y,w
  3358  063A  00A9               	movwf	??_find_best_solution
  3359  063B  0829               	movf	??_find_best_solution,w
  3360  063C  00F7               	movwf	merge1@y
  3361  063D  0860               	movf	_temp_cur_matrix44,w
  3362  063E  00F8               	movwf	merge1@matrix44
  3363  063F  0861               	movf	_temp_cur_matrix44+1,w
  3364  0640  00F9               	movwf	merge1@matrix44+1
  3365  0641  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3366  0642  00AA               	movwf	??_find_best_solution+1
  3367  0643  082A               	movf	??_find_best_solution+1,w
  3368  0644  00FA               	movwf	merge1@matrix88_in
  3369  0645  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3370  0646  00AB               	movwf	??_find_best_solution+2
  3371  0647  082B               	movf	??_find_best_solution+2,w
  3372  0648  00FB               	movwf	merge1@matrix88_out
  3373  0649  0848               	movf	find_best_solution@temp_x,w
  3374  064A  120A  158A  279C  120A  118A  	fcall	_merge1
  3375                           
  3376                           ;teris_16f886.c: 1140: temp_high = get_high_after_merge(temp_y, temp_cur_matrix44);
  3377  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3378  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3379  0651  0860               	movf	_temp_cur_matrix44,w
  3380  0652  00F0               	movwf	get_high_after_merge@matrix
  3381  0653  0861               	movf	_temp_cur_matrix44+1,w
  3382  0654  00F1               	movwf	get_high_after_merge@matrix+1
  3383  0655  0846               	movf	find_best_solution@temp_y,w
  3384  0656  120A  158A  24EB  120A  118A  	fcall	_get_high_after_merge
  3385  065B  1283               	bcf	3,5	;RP0=0, select bank0
  3386  065C  1303               	bcf	3,6	;RP1=0, select bank0
  3387  065D  00A9               	movwf	??_find_best_solution
  3388  065E  01AA               	clrf	??_find_best_solution+1
  3389  065F  0829               	movf	??_find_best_solution,w
  3390  0660  00C4               	movwf	find_best_solution@temp_high
  3391  0661  082A               	movf	??_find_best_solution+1,w
  3392  0662  00C5               	movwf	find_best_solution@temp_high+1
  3393                           
  3394                           ;teris_16f886.c: 1141: if((get_high(&g_matrix88) <= 8/2 + 1)
  3395                           ;teris_16f886.c: 1142: && (temp_high <= 8/2 + 1))
  3396  0663  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3397  0664  120A  158A  234D  120A  118A  	fcall	_get_high
  3398  0669  1283               	bcf	3,5	;RP0=0, select bank0
  3399  066A  1303               	bcf	3,6	;RP1=0, select bank0
  3400  066B  00A9               	movwf	??_find_best_solution
  3401  066C  3006               	movlw	6
  3402  066D  0229               	subwf	??_find_best_solution,w
  3403  066E  1803               	skipnc
  3404  066F  2EF6               	goto	l3361
  3405  0670  3000               	movlw	0
  3406  0671  0245               	subwf	find_best_solution@temp_high+1,w
  3407  0672  3006               	movlw	6
  3408  0673  1903               	skipnz
  3409  0674  0244               	subwf	find_best_solution@temp_high,w
  3410  0675  1803               	skipnc
  3411  0676  2EF6               	goto	l3361
  3412                           
  3413                           ;teris_16f886.c: 1143: {
  3414                           ;teris_16f886.c: 1144: temp_risk = (((int16_t)get_num_removed_rows(&temp_matrix88)) << 1
      +                          0)
  3415                           ;teris_16f886.c: 1145: - get_num_of_orphan(&temp_matrix88)*4
  3416                           ;teris_16f886.c: 1146: - temp_high*3
  3417                           ;teris_16f886.c: 1147: - get_holes_after_merge(&temp_matrix88)*2
  3418                           ;teris_16f886.c: 1148: - get_heavy(&temp_matrix88);
  3419  0677  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3420  0678  120A  118A  2257  120A  118A  	fcall	_get_heavy
  3421  067D  0970               	comf	?_get_heavy,w
  3422  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3423  067F  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0680  00A9               	movwf	??_find_best_solution
  3425  0681  0971               	comf	?_get_heavy+1,w
  3426  0682  00AA               	movwf	??_find_best_solution+1
  3427  0683  0AA9               	incf	??_find_best_solution,f
  3428  0684  1903               	skipnz
  3429  0685  0AAA               	incf	??_find_best_solution+1,f
  3430  0686  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3431  0687  120A  118A  2369  120A  118A  	fcall	_get_holes_after_merge
  3432  068C  1283               	bcf	3,5	;RP0=0, select bank0
  3433  068D  1303               	bcf	3,6	;RP1=0, select bank0
  3434  068E  00AB               	movwf	??_find_best_solution+2
  3435  068F  01AC               	clrf	??_find_best_solution+3
  3436  0690  1003               	clrc
  3437  0691  0DAB               	rlf	??_find_best_solution+2,f
  3438  0692  0DAC               	rlf	??_find_best_solution+3,f
  3439  0693  09AB               	comf	??_find_best_solution+2,f
  3440  0694  09AC               	comf	??_find_best_solution+3,f
  3441  0695  0AAB               	incf	??_find_best_solution+2,f
  3442  0696  1903               	skipnz
  3443  0697  0AAC               	incf	??_find_best_solution+3,f
  3444  0698  0845               	movf	find_best_solution@temp_high+1,w
  3445  0699  00A1               	movwf	___wmul@multiplier+1
  3446  069A  0844               	movf	find_best_solution@temp_high,w
  3447  069B  00A0               	movwf	___wmul@multiplier
  3448  069C  3003               	movlw	3
  3449  069D  00A2               	movwf	___wmul@multiplicand
  3450  069E  3000               	movlw	0
  3451  069F  00A3               	movwf	___wmul@multiplicand+1
  3452  06A0  120A  158A  236F  120A  118A  	fcall	___wmul
  3453  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  3454  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  3455  06A7  0920               	comf	?___wmul,w
  3456  06A8  00AD               	movwf	??_find_best_solution+4
  3457  06A9  0921               	comf	?___wmul+1,w
  3458  06AA  00AE               	movwf	??_find_best_solution+5
  3459  06AB  0AAD               	incf	??_find_best_solution+4,f
  3460  06AC  1903               	skipnz
  3461  06AD  0AAE               	incf	??_find_best_solution+5,f
  3462  06AE  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3463  06AF  120A  118A  2171  120A  118A  	fcall	_get_num_of_orphan
  3464  06B4  0870               	movf	?_get_num_of_orphan,w
  3465  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  3466  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  3467  06B7  00AF               	movwf	??_find_best_solution+6
  3468  06B8  0871               	movf	?_get_num_of_orphan+1,w
  3469  06B9  00B0               	movwf	??_find_best_solution+7
  3470  06BA  1003               	clrc
  3471  06BB  0DAF               	rlf	??_find_best_solution+6,f
  3472  06BC  0DB0               	rlf	??_find_best_solution+7,f
  3473  06BD  1003               	clrc
  3474  06BE  0DAF               	rlf	??_find_best_solution+6,f
  3475  06BF  0DB0               	rlf	??_find_best_solution+7,f
  3476  06C0  09AF               	comf	??_find_best_solution+6,f
  3477  06C1  09B0               	comf	??_find_best_solution+7,f
  3478  06C2  0AAF               	incf	??_find_best_solution+6,f
  3479  06C3  1903               	skipnz
  3480  06C4  0AB0               	incf	??_find_best_solution+7,f
  3481  06C5  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3482  06C6  120A  158A  2392  120A  118A  	fcall	_get_num_removed_rows
  3483  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3484  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3485  06CD  00B1               	movwf	??_find_best_solution+8
  3486  06CE  01B2               	clrf	??_find_best_solution+9
  3487  06CF  300A               	movlw	10
  3488  06D0  00FF               	movwf	127
  3489  06D1                     u4525:	
  3490  06D1  1003               	clrc
  3491  06D2  0DB1               	rlf	??_find_best_solution+8,f
  3492  06D3  0DB2               	rlf	??_find_best_solution+9,f
  3493  06D4  0BFF               	decfsz	127,f
  3494  06D5  2ED1               	goto	u4525
  3495  06D6  082F               	movf	??_find_best_solution+6,w
  3496  06D7  0731               	addwf	??_find_best_solution+8,w
  3497  06D8  00B3               	movwf	??_find_best_solution+10
  3498  06D9  0830               	movf	??_find_best_solution+7,w
  3499  06DA  1803               	skipnc
  3500  06DB  0A30               	incf	??_find_best_solution+7,w
  3501  06DC  0732               	addwf	??_find_best_solution+9,w
  3502  06DD  00B4               	movwf	??_find_best_solution+11
  3503  06DE  082D               	movf	??_find_best_solution+4,w
  3504  06DF  0733               	addwf	??_find_best_solution+10,w
  3505  06E0  00B5               	movwf	??_find_best_solution+12
  3506  06E1  082E               	movf	??_find_best_solution+5,w
  3507  06E2  1803               	skipnc
  3508  06E3  0A2E               	incf	??_find_best_solution+5,w
  3509  06E4  0734               	addwf	??_find_best_solution+11,w
  3510  06E5  00B6               	movwf	??_find_best_solution+13
  3511  06E6  082B               	movf	??_find_best_solution+2,w
  3512  06E7  0735               	addwf	??_find_best_solution+12,w
  3513  06E8  00B7               	movwf	??_find_best_solution+14
  3514  06E9  082C               	movf	??_find_best_solution+3,w
  3515  06EA  1803               	skipnc
  3516  06EB  0A2C               	incf	??_find_best_solution+3,w
  3517  06EC  0736               	addwf	??_find_best_solution+13,w
  3518  06ED  00B8               	movwf	??_find_best_solution+15
  3519  06EE  0829               	movf	??_find_best_solution,w
  3520  06EF  0737               	addwf	??_find_best_solution+14,w
  3521  06F0  00C1               	movwf	find_best_solution@temp_risk
  3522  06F1  082A               	movf	??_find_best_solution+1,w
  3523  06F2  1803               	skipnc
  3524  06F3  0A2A               	incf	??_find_best_solution+1,w
  3525  06F4  0738               	addwf	??_find_best_solution+15,w
  3526  06F5  2F7F               	goto	L3
  3527  06F6                     l3361:	
  3528                           ;teris_16f886.c: 1149: }
  3529                           
  3530                           
  3531                           ;teris_16f886.c: 1150: else
  3532                           ;teris_16f886.c: 1151: {
  3533                           ;teris_16f886.c: 1152: temp_risk = (((int16_t)get_num_removed_rows(&temp_matrix88)) << 1
      +                          0)
  3534                           ;teris_16f886.c: 1153: - get_num_of_orphan(&temp_matrix88)*2
  3535                           ;teris_16f886.c: 1154: - temp_high*5
  3536                           ;teris_16f886.c: 1155: - get_holes_after_merge(&temp_matrix88)*3
  3537                           ;teris_16f886.c: 1156: - get_heavy(&temp_matrix88);
  3538  06F6  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3539  06F7  120A  118A  2257  120A  118A  	fcall	_get_heavy
  3540  06FC  0970               	comf	?_get_heavy,w
  3541  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3542  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  3543  06FF  00A9               	movwf	??_find_best_solution
  3544  0700  0971               	comf	?_get_heavy+1,w
  3545  0701  00AA               	movwf	??_find_best_solution+1
  3546  0702  0AA9               	incf	??_find_best_solution,f
  3547  0703  1903               	skipnz
  3548  0704  0AAA               	incf	??_find_best_solution+1,f
  3549  0705  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3550  0706  120A  118A  2369  120A  118A  	fcall	_get_holes_after_merge
  3551  070B  1283               	bcf	3,5	;RP0=0, select bank0
  3552  070C  1303               	bcf	3,6	;RP1=0, select bank0
  3553  070D  00AB               	movwf	??_find_best_solution+2
  3554  070E  01AC               	clrf	??_find_best_solution+3
  3555  070F  082B               	movf	??_find_best_solution+2,w
  3556  0710  00A0               	movwf	___wmul@multiplier
  3557  0711  082C               	movf	??_find_best_solution+3,w
  3558  0712  00A1               	movwf	___wmul@multiplier+1
  3559  0713  3003               	movlw	3
  3560  0714  00A2               	movwf	___wmul@multiplicand
  3561  0715  3000               	movlw	0
  3562  0716  00A3               	movwf	___wmul@multiplicand+1
  3563  0717  120A  158A  236F  120A  118A  	fcall	___wmul
  3564  071C  1283               	bcf	3,5	;RP0=0, select bank0
  3565  071D  1303               	bcf	3,6	;RP1=0, select bank0
  3566  071E  0920               	comf	?___wmul,w
  3567  071F  00AD               	movwf	??_find_best_solution+4
  3568  0720  0921               	comf	?___wmul+1,w
  3569  0721  00AE               	movwf	??_find_best_solution+5
  3570  0722  0AAD               	incf	??_find_best_solution+4,f
  3571  0723  1903               	skipnz
  3572  0724  0AAE               	incf	??_find_best_solution+5,f
  3573  0725  0845               	movf	find_best_solution@temp_high+1,w
  3574  0726  00A1               	movwf	___wmul@multiplier+1
  3575  0727  0844               	movf	find_best_solution@temp_high,w
  3576  0728  00A0               	movwf	___wmul@multiplier
  3577  0729  3005               	movlw	5
  3578  072A  00A2               	movwf	___wmul@multiplicand
  3579  072B  3000               	movlw	0
  3580  072C  00A3               	movwf	___wmul@multiplicand+1
  3581  072D  120A  158A  236F  120A  118A  	fcall	___wmul
  3582  0732  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0733  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0734  0920               	comf	?___wmul,w
  3585  0735  00AF               	movwf	??_find_best_solution+6
  3586  0736  0921               	comf	?___wmul+1,w
  3587  0737  00B0               	movwf	??_find_best_solution+7
  3588  0738  0AAF               	incf	??_find_best_solution+6,f
  3589  0739  1903               	skipnz
  3590  073A  0AB0               	incf	??_find_best_solution+7,f
  3591  073B  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3592  073C  120A  118A  2171  120A  118A  	fcall	_get_num_of_orphan
  3593  0741  0870               	movf	?_get_num_of_orphan,w
  3594  0742  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0743  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0744  00B1               	movwf	??_find_best_solution+8
  3597  0745  0871               	movf	?_get_num_of_orphan+1,w
  3598  0746  00B2               	movwf	??_find_best_solution+9
  3599  0747  1003               	clrc
  3600  0748  0DB1               	rlf	??_find_best_solution+8,f
  3601  0749  0DB2               	rlf	??_find_best_solution+9,f
  3602  074A  09B1               	comf	??_find_best_solution+8,f
  3603  074B  09B2               	comf	??_find_best_solution+9,f
  3604  074C  0AB1               	incf	??_find_best_solution+8,f
  3605  074D  1903               	skipnz
  3606  074E  0AB2               	incf	??_find_best_solution+9,f
  3607  074F  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3608  0750  120A  158A  2392  120A  118A  	fcall	_get_num_removed_rows
  3609  0755  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0756  1303               	bcf	3,6	;RP1=0, select bank0
  3611  0757  00B3               	movwf	??_find_best_solution+10
  3612  0758  01B4               	clrf	??_find_best_solution+11
  3613  0759  300A               	movlw	10
  3614  075A  00FF               	movwf	127
  3615  075B                     u4535:	
  3616  075B  1003               	clrc
  3617  075C  0DB3               	rlf	??_find_best_solution+10,f
  3618  075D  0DB4               	rlf	??_find_best_solution+11,f
  3619  075E  0BFF               	decfsz	127,f
  3620  075F  2F5B               	goto	u4535
  3621  0760  0831               	movf	??_find_best_solution+8,w
  3622  0761  0733               	addwf	??_find_best_solution+10,w
  3623  0762  00B5               	movwf	??_find_best_solution+12
  3624  0763  0832               	movf	??_find_best_solution+9,w
  3625  0764  1803               	skipnc
  3626  0765  0A32               	incf	??_find_best_solution+9,w
  3627  0766  0734               	addwf	??_find_best_solution+11,w
  3628  0767  00B6               	movwf	??_find_best_solution+13
  3629  0768  082F               	movf	??_find_best_solution+6,w
  3630  0769  0735               	addwf	??_find_best_solution+12,w
  3631  076A  00B7               	movwf	??_find_best_solution+14
  3632  076B  0830               	movf	??_find_best_solution+7,w
  3633  076C  1803               	skipnc
  3634  076D  0A30               	incf	??_find_best_solution+7,w
  3635  076E  0736               	addwf	??_find_best_solution+13,w
  3636  076F  00B8               	movwf	??_find_best_solution+15
  3637  0770  082D               	movf	??_find_best_solution+4,w
  3638  0771  0737               	addwf	??_find_best_solution+14,w
  3639  0772  00B9               	movwf	??_find_best_solution+16
  3640  0773  082E               	movf	??_find_best_solution+5,w
  3641  0774  1803               	skipnc
  3642  0775  0A2E               	incf	??_find_best_solution+5,w
  3643  0776  0738               	addwf	??_find_best_solution+15,w
  3644  0777  00BA               	movwf	??_find_best_solution+17
  3645  0778  0829               	movf	??_find_best_solution,w
  3646  0779  0739               	addwf	??_find_best_solution+16,w
  3647  077A  00C1               	movwf	find_best_solution@temp_risk
  3648  077B  082A               	movf	??_find_best_solution+1,w
  3649  077C  1803               	skipnc
  3650  077D  0A2A               	incf	??_find_best_solution+1,w
  3651  077E  073A               	addwf	??_find_best_solution+17,w
  3652  077F                     L3:	
  3653  077F  00C2               	movwf	find_best_solution@temp_risk+1
  3654                           
  3655                           ;teris_16f886.c: 1157: }
  3656                           ;teris_16f886.c: 1166: if(temp_risk > temp_pre_risk)
  3657  0780  083C               	movf	find_best_solution@temp_pre_risk+1,w
  3658  0781  3A80               	xorlw	128
  3659  0782  00A9               	movwf	??_find_best_solution
  3660  0783  0842               	movf	find_best_solution@temp_risk+1,w
  3661  0784  3A80               	xorlw	128
  3662  0785  0229               	subwf	??_find_best_solution,w
  3663  0786  1D03               	skipz
  3664  0787  2F8A               	goto	u4545
  3665  0788  0841               	movf	find_best_solution@temp_risk,w
  3666  0789  023B               	subwf	find_best_solution@temp_pre_risk,w
  3667  078A                     u4545:	
  3668  078A  1803               	skipnc
  3669  078B  2F9A               	goto	l3367
  3670                           
  3671                           ;teris_16f886.c: 1167: {
  3672                           ;teris_16f886.c: 1171: temp_pre_risk = temp_risk;
  3673  078C  1283               	bcf	3,5	;RP0=0, select bank0
  3674  078D  1303               	bcf	3,6	;RP1=0, select bank0
  3675  078E  0842               	movf	find_best_solution@temp_risk+1,w
  3676  078F  00BC               	movwf	find_best_solution@temp_pre_risk+1
  3677  0790  0841               	movf	find_best_solution@temp_risk,w
  3678  0791  00BB               	movwf	find_best_solution@temp_pre_risk
  3679                           
  3680                           ;teris_16f886.c: 1172: tem_pre_sub_index = tem_sub_index;
  3681  0792  0847               	movf	find_best_solution@tem_sub_index,w
  3682  0793  00A9               	movwf	??_find_best_solution
  3683  0794  0829               	movf	??_find_best_solution,w
  3684  0795  00C0               	movwf	find_best_solution@tem_pre_sub_index
  3685                           
  3686                           ;teris_16f886.c: 1173: temp_pre_x = temp_x;
  3687  0796  0848               	movf	find_best_solution@temp_x,w
  3688  0797  00A9               	movwf	??_find_best_solution
  3689  0798  0829               	movf	??_find_best_solution,w
  3690  0799  00BF               	movwf	find_best_solution@temp_pre_x
  3691  079A                     l3367:	
  3692  079A  3001               	movlw	1
  3693  079B  1283               	bcf	3,5	;RP0=0, select bank0
  3694  079C  1303               	bcf	3,6	;RP1=0, select bank0
  3695  079D  00A9               	movwf	??_find_best_solution
  3696  079E  0829               	movf	??_find_best_solution,w
  3697  079F  07C8               	addwf	find_best_solution@temp_x,f
  3698  07A0  2E01               	goto	l3369
  3699  07A1                     l3371:	
  3700  07A1  3001               	movlw	1
  3701  07A2  00A9               	movwf	??_find_best_solution
  3702  07A3  0829               	movf	??_find_best_solution,w
  3703  07A4  07C7               	addwf	find_best_solution@tem_sub_index,f
  3704  07A5  2D96               	goto	l3373
  3705  07A6                     l3375:	
  3706                           
  3707                           ;teris_16f886.c: 1174: }
  3708                           ;teris_16f886.c: 1188: }
  3709                           ;teris_16f886.c: 1189: }
  3710                           ;teris_16f886.c: 1190: if(res == 1)
  3711  07A6  0343               	decf	find_best_solution@res,w
  3712  07A7  1D03               	btfss	3,2
  3713  07A8  2FBF               	goto	l3381
  3714                           
  3715                           ;teris_16f886.c: 1191: {
  3716                           ;teris_16f886.c: 1192: g_char_info[g_char_info_index].cur_index = tem_pre_sub_index;
  3717  07A9  0840               	movf	find_best_solution@tem_pre_sub_index,w
  3718  07AA  00A9               	movwf	??_find_best_solution
  3719  07AB  3003               	movlw	3
  3720  07AC  00AA               	movwf	??_find_best_solution+1
  3721  07AD  082A               	movf	??_find_best_solution+1,w
  3722  07AE  00F0               	movwf	___bmul@multiplicand
  3723  07AF  0863               	movf	_g_char_info_index,w
  3724  07B0  160A  118A  27CD   	fcall	___bmul
  3725  07B3  3E01               	addlw	1
  3726  07B4  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  3727  07B5  0084               	movwf	4
  3728  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  3729  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  3730  07B8  0829               	movf	??_find_best_solution,w
  3731  07B9  1383               	bcf	3,7	;select IRP bank1
  3732  07BA  0080               	movwf	0
  3733                           
  3734                           ;teris_16f886.c: 1193: cur_x = temp_pre_x;
  3735  07BB  083F               	movf	find_best_solution@temp_pre_x,w
  3736  07BC  00A9               	movwf	??_find_best_solution
  3737  07BD  0829               	movf	??_find_best_solution,w
  3738  07BE  00E8               	movwf	_cur_x
  3739  07BF                     l3381:	
  3740                           ;teris_16f886.c: 1208: else
  3741                           ;teris_16f886.c: 1209: {
  3742                           
  3743                           ;teris_16f886.c: 1207: }
  3744                           
  3745                           
  3746                           ;teris_16f886.c: 1213: }
  3747                           ;teris_16f886.c: 1214: return res;
  3748  07BF  0843               	movf	find_best_solution@res,w
  3749  07C0  0008               	return
  3750  07C1                     __end_of_find_best_solution:	
  3751                           
  3752                           	psect	text11
  3753  0B2D                     __ptext11:	
  3754 ;; *************** function _right_most *****************
  3755 ;; Defined at:
  3756 ;;		line 978 in file "teris_16f886.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  x               1    wreg     char 
  3759 ;;  matrix44        2   10[COMMON] PTR const struct .
  3760 ;;		 -> NULL(0), g_matrix44(384), 
  3761 ;;  matrix88        1   12[COMMON] PTR const struct .
  3762 ;;		 -> g_matrix88(64), 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  x               1    0[BANK0 ] char 
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      char 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3774 ;;      Params:         3       0       0       0       0
  3775 ;;      Locals:         0       1       0       0       0
  3776 ;;      Temps:          1       0       0       0       0
  3777 ;;      Totals:         4       1       0       0       0
  3778 ;;Total ram usage:        5 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    2
  3781 ;; This function calls:
  3782 ;;		_is_right_boundary
  3783 ;; This function is called by:
  3784 ;;		_find_best_solution
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           
  3789                           ;psect for function _right_most
  3790  0B2D                     _right_most:	
  3791                           
  3792                           ;incstack = 0
  3793                           ; Regs used in _right_most: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3794                           ;right_most@x stored from wreg
  3795  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0B2F  00A0               	movwf	right_most@x
  3798  0B30                     l400:	
  3799                           ;teris_16f886.c: 980: while(1)
  3800                           
  3801                           
  3802                           ;teris_16f886.c: 981: {
  3803                           ;teris_16f886.c: 982: if(is_right_boundary(x, matrix44, matrix88) == RIGHT_OVER_BOUNDARY
      +                          )
  3804  0B30  087A               	movf	right_most@matrix44,w
  3805  0B31  00F0               	movwf	is_right_boundary@matrix44
  3806  0B32  087B               	movf	right_most@matrix44+1,w
  3807  0B33  00F1               	movwf	is_right_boundary@matrix44+1
  3808  0B34  087C               	movf	right_most@matrix88,w
  3809  0B35  00FD               	movwf	??_right_most
  3810  0B36  087D               	movf	??_right_most,w
  3811  0B37  00F2               	movwf	is_right_boundary@matrix88
  3812  0B38  0820               	movf	right_most@x,w
  3813  0B39  120A  158A  2745  120A  158A  	fcall	_is_right_boundary
  3814  0B3E  3A03               	xorlw	3
  3815  0B3F  1D03               	skipz
  3816  0B40  2B46               	goto	l2867
  3817                           
  3818                           ;teris_16f886.c: 983: {
  3819                           ;teris_16f886.c: 987: return x - 1;
  3820  0B41  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0B42  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0B43  0820               	movf	right_most@x,w
  3823  0B44  3EFF               	addlw	-1
  3824  0B45  0008               	return
  3825  0B46                     l2867:	
  3826                           
  3827                           ;teris_16f886.c: 988: }
  3828                           ;teris_16f886.c: 989: x++;
  3829  0B46  3001               	movlw	1
  3830  0B47  00FD               	movwf	??_right_most
  3831  0B48  087D               	movf	??_right_most,w
  3832  0B49  1283               	bcf	3,5	;RP0=0, select bank0
  3833  0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  3834  0B4B  07A0               	addwf	right_most@x,f
  3835  0B4C  2B30               	goto	l400
  3836  0B4D                     __end_of_right_most:	
  3837                           
  3838                           	psect	text12
  3839  0F45                     __ptext12:	
  3840 ;; *************** function _is_right_boundary *****************
  3841 ;; Defined at:
  3842 ;;		line 786 in file "teris_16f886.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  x               1    wreg     char 
  3845 ;;  matrix44        2    0[COMMON] PTR const struct .
  3846 ;;		 -> NULL(0), g_matrix44(384), 
  3847 ;;  matrix88        1    2[COMMON] PTR const struct .
  3848 ;;		 -> g_matrix88(64), 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  x               1    7[COMMON] char 
  3851 ;;  col             1    9[COMMON] char 
  3852 ;;  row             1    8[COMMON] char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      unsigned char 
  3855 ;; Registers used:
  3856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3862 ;;      Params:         3       0       0       0       0
  3863 ;;      Locals:         3       0       0       0       0
  3864 ;;      Temps:          4       0       0       0       0
  3865 ;;      Totals:        10       0       0       0       0
  3866 ;;Total ram usage:       10 bytes
  3867 ;; Hardware stack levels used:    2
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_right_most
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _is_right_boundary
  3877  0F45                     _is_right_boundary:	
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in _is_right_boundary: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3881                           ;is_right_boundary@x stored from wreg
  3882  0F45  00F7               	movwf	is_right_boundary@x
  3883                           
  3884                           ;teris_16f886.c: 788: for(int8_t row = 4 - 1; row >= 0; row--)
  3885  0F46  3003               	movlw	3
  3886  0F47  00F3               	movwf	??_is_right_boundary
  3887  0F48  0873               	movf	??_is_right_boundary,w
  3888  0F49  00F8               	movwf	is_right_boundary@row
  3889  0F4A  1BF8               	btfsc	is_right_boundary@row,7
  3890  0F4B  2F9A               	goto	l2591
  3891  0F4C                     l2569:	
  3892                           
  3893                           ;teris_16f886.c: 789: {
  3894                           ;teris_16f886.c: 790: for(int8_t col = 0; col < 4; col++)
  3895  0F4C  01F9               	clrf	is_right_boundary@col
  3896  0F4D  0879               	movf	is_right_boundary@col,w
  3897  0F4E  3A80               	xorlw	128
  3898  0F4F  3E7C               	addlw	-132
  3899  0F50  1803               	btfsc	3,0
  3900  0F51  2F94               	goto	l2587
  3901  0F52                     l2575:	
  3902                           
  3903                           ;teris_16f886.c: 791: {
  3904                           ;teris_16f886.c: 792: if(matrix44->data[row][col] == 1)
  3905  0F52  0878               	movf	is_right_boundary@row,w
  3906  0F53  00F3               	movwf	??_is_right_boundary
  3907  0F54  01F4               	clrf	??_is_right_boundary+1
  3908  0F55  1003               	clrc
  3909  0F56  0DF3               	rlf	??_is_right_boundary,f
  3910  0F57  0DF4               	rlf	??_is_right_boundary+1,f
  3911  0F58  1003               	clrc
  3912  0F59  0DF3               	rlf	??_is_right_boundary,f
  3913  0F5A  0DF4               	rlf	??_is_right_boundary+1,f
  3914  0F5B  0873               	movf	??_is_right_boundary,w
  3915  0F5C  0770               	addwf	is_right_boundary@matrix44,w
  3916  0F5D  00F5               	movwf	??_is_right_boundary+2
  3917  0F5E  0874               	movf	??_is_right_boundary+1,w
  3918  0F5F  1803               	skipnc
  3919  0F60  0A74               	incf	??_is_right_boundary+1,w
  3920  0F61  0771               	addwf	is_right_boundary@matrix44+1,w
  3921  0F62  00F6               	movwf	??_is_right_boundary+3
  3922  0F63  0879               	movf	is_right_boundary@col,w
  3923  0F64  0775               	addwf	??_is_right_boundary+2,w
  3924  0F65  0084               	movwf	4
  3925  0F66  0876               	movf	??_is_right_boundary+3,w
  3926  0F67  1803               	skipnc
  3927  0F68  0A76               	incf	??_is_right_boundary+3,w
  3928  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  3930  0F6B  00FF               	movwf	127
  3931  0F6C  120A  158A  2000  120A  158A  	fcall	stringtab
  3932  0F71  3A01               	xorlw	1
  3933  0F72  1D03               	skipz
  3934  0F73  2F8B               	goto	l2583
  3935                           
  3936                           ;teris_16f886.c: 793: {
  3937                           ;teris_16f886.c: 794: if(x + col > 8 - 1)
  3938  0F74  0877               	movf	is_right_boundary@x,w
  3939  0F75  0779               	addwf	is_right_boundary@col,w
  3940  0F76  00F3               	movwf	??_is_right_boundary
  3941  0F77  01F4               	clrf	??_is_right_boundary+1
  3942  0F78  1803               	skipnc
  3943  0F79  0AF4               	incf	??_is_right_boundary+1,f
  3944  0F7A  1BF7               	btfsc	is_right_boundary@x,7
  3945  0F7B  03F4               	decf	??_is_right_boundary+1,f
  3946  0F7C  1BF9               	btfsc	is_right_boundary@col,7
  3947  0F7D  03F4               	decf	??_is_right_boundary+1,f
  3948  0F7E  0874               	movf	??_is_right_boundary+1,w
  3949  0F7F  3A80               	xorlw	128
  3950  0F80  00FF               	movwf	127
  3951  0F81  3080               	movlw	128
  3952  0F82  027F               	subwf	127,w
  3953  0F83  1D03               	skipz
  3954  0F84  2F87               	goto	u2775
  3955  0F85  3008               	movlw	8
  3956  0F86  0273               	subwf	??_is_right_boundary,w
  3957  0F87                     u2775:	
  3958  0F87  1C03               	skipc
  3959  0F88  2F8B               	goto	l2583
  3960                           
  3961                           ;teris_16f886.c: 795: {
  3962                           ;teris_16f886.c: 799: return RIGHT_OVER_BOUNDARY;
  3963  0F89  3003               	movlw	3
  3964  0F8A  0008               	return
  3965  0F8B                     l2583:	
  3966  0F8B  3001               	movlw	1
  3967  0F8C  00F3               	movwf	??_is_right_boundary
  3968  0F8D  0873               	movf	??_is_right_boundary,w
  3969  0F8E  07F9               	addwf	is_right_boundary@col,f
  3970  0F8F  0879               	movf	is_right_boundary@col,w
  3971  0F90  3A80               	xorlw	128
  3972  0F91  3E7C               	addlw	-132
  3973  0F92  1C03               	skipc
  3974  0F93  2F52               	goto	l2575
  3975  0F94                     l2587:	
  3976  0F94  30FF               	movlw	255
  3977  0F95  00F3               	movwf	??_is_right_boundary
  3978  0F96  0873               	movf	??_is_right_boundary,w
  3979  0F97  07F8               	addwf	is_right_boundary@row,f
  3980  0F98  1FF8               	btfss	is_right_boundary@row,7
  3981  0F99  2F4C               	goto	l2569
  3982  0F9A                     l2591:	
  3983                           
  3984                           ;teris_16f886.c: 800: }
  3985                           ;teris_16f886.c: 801: }
  3986                           ;teris_16f886.c: 802: }
  3987                           ;teris_16f886.c: 803: }
  3988                           ;teris_16f886.c: 804: return OK;
  3989  0F9A  3000               	movlw	0
  3990  0F9B  0008               	return
  3991  0F9C                     __end_of_is_right_boundary:	
  3992                           
  3993                           	psect	text13
  3994  0F9C                     __ptext13:	
  3995 ;; *************** function _merge1 *****************
  3996 ;; Defined at:
  3997 ;;		line 864 in file "teris_16f886.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  x               1    wreg     char 
  4000 ;;  y               1    7[COMMON] char 
  4001 ;;  matrix44        2    8[COMMON] PTR const struct .
  4002 ;;		 -> NULL(0), g_matrix44(384), 
  4003 ;;  matrix88_in     1   10[COMMON] PTR const struct .
  4004 ;;		 -> g_matrix88(64), 
  4005 ;;  matrix88_out    1   11[COMMON] PTR struct .
  4006 ;;		 -> temp_matrix88(64), 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  x               1    6[BANK0 ] char 
  4009 ;;  col             1    8[BANK0 ] unsigned char 
  4010 ;;  row             1    7[BANK0 ] unsigned char 
  4011 ;;  len             2    4[BANK0 ] unsigned int 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4021 ;;      Params:         5       0       0       0       0
  4022 ;;      Locals:         0       5       0       0       0
  4023 ;;      Temps:          0       4       0       0       0
  4024 ;;      Totals:         5       9       0       0       0
  4025 ;;Total ram usage:       14 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    1
  4028 ;; This function calls:
  4029 ;;		_memcpy
  4030 ;; This function is called by:
  4031 ;;		_find_best_solution
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _merge1
  4037  0F9C                     _merge1:	
  4038                           
  4039                           ;incstack = 0
  4040                           ; Regs used in _merge1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4041                           ;merge1@x stored from wreg
  4042  0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  4043  0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  4044  0F9E  00A6               	movwf	merge1@x
  4045                           
  4046                           ;teris_16f886.c: 869: register size_t len;
  4047                           ;teris_16f886.c: 871: len = sizeof(MATRIX88);
  4048  0F9F  3040               	movlw	64
  4049  0FA0  00A4               	movwf	merge1@len
  4050  0FA1  3000               	movlw	0
  4051  0FA2  00A5               	movwf	merge1@len+1
  4052                           
  4053                           ;teris_16f886.c: 872: memcpy(matrix88_out, matrix88_in, len);
  4054  0FA3  087A               	movf	merge1@matrix88_in,w
  4055  0FA4  00A0               	movwf	??_merge1
  4056  0FA5  0820               	movf	??_merge1,w
  4057  0FA6  00F0               	movwf	memcpy@s1
  4058  0FA7  0825               	movf	merge1@len+1,w
  4059  0FA8  00F2               	movwf	memcpy@n+1
  4060  0FA9  0824               	movf	merge1@len,w
  4061  0FAA  00F1               	movwf	memcpy@n
  4062  0FAB  087B               	movf	merge1@matrix88_out,w
  4063  0FAC  120A  158A  23DB  120A  158A  	fcall	_memcpy
  4064                           
  4065                           ;teris_16f886.c: 874: for(uint8_t row = 0; row < 4; row++)
  4066  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  4067  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  4068  0FB3  01A7               	clrf	merge1@row
  4069  0FB4                     L4:	
  4070  0FB4  3004               	movlw	4
  4071  0FB5  0227               	subwf	merge1@row,w
  4072  0FB6  1803               	btfsc	3,0
  4073  0FB7  0008               	return
  4074                           
  4075                           ;teris_16f886.c: 875: {
  4076                           ;teris_16f886.c: 876: for(uint8_t col = 0; col < 4; col++)
  4077  0FB8  01A8               	clrf	merge1@col
  4078  0FB9  3004               	movlw	4
  4079  0FBA  0228               	subwf	merge1@col,w
  4080  0FBB  1803               	btfsc	3,0
  4081  0FBC  2FFB               	goto	l2757
  4082  0FBD                     l2749:	
  4083                           
  4084                           ;teris_16f886.c: 877: {
  4085                           ;teris_16f886.c: 878: if(matrix44->data[row][col] == 1)
  4086  0FBD  0827               	movf	merge1@row,w
  4087  0FBE  00A0               	movwf	??_merge1
  4088  0FBF  01A1               	clrf	??_merge1+1
  4089  0FC0  1003               	clrc
  4090  0FC1  0DA0               	rlf	??_merge1,f
  4091  0FC2  0DA1               	rlf	??_merge1+1,f
  4092  0FC3  1003               	clrc
  4093  0FC4  0DA0               	rlf	??_merge1,f
  4094  0FC5  0DA1               	rlf	??_merge1+1,f
  4095  0FC6  0820               	movf	??_merge1,w
  4096  0FC7  0778               	addwf	merge1@matrix44,w
  4097  0FC8  00A2               	movwf	??_merge1+2
  4098  0FC9  0821               	movf	??_merge1+1,w
  4099  0FCA  1803               	skipnc
  4100  0FCB  0A21               	incf	??_merge1+1,w
  4101  0FCC  0779               	addwf	merge1@matrix44+1,w
  4102  0FCD  00A3               	movwf	??_merge1+3
  4103  0FCE  0828               	movf	merge1@col,w
  4104  0FCF  0722               	addwf	??_merge1+2,w
  4105  0FD0  0084               	movwf	4
  4106  0FD1  0823               	movf	??_merge1+3,w
  4107  0FD2  1803               	skipnc
  4108  0FD3  0A23               	incf	??_merge1+3,w
  4109  0FD4  00FF               	movwf	127
  4110  0FD5  120A  158A  2000  120A  158A  	fcall	stringtab
  4111  0FDA  3A01               	xorlw	1
  4112  0FDB  1D03               	skipz
  4113  0FDC  2FF3               	goto	l2753
  4114                           
  4115                           ;teris_16f886.c: 879: {
  4116                           ;teris_16f886.c: 880: matrix88_out->data[y + row][x + col] = 1;
  4117  0FDD  0828               	movf	merge1@col,w
  4118  0FDE  0726               	addwf	merge1@x,w
  4119  0FDF  077B               	addwf	merge1@matrix88_out,w
  4120  0FE0  00A0               	movwf	??_merge1
  4121  0FE1  0827               	movf	merge1@row,w
  4122  0FE2  0777               	addwf	merge1@y,w
  4123  0FE3  00A1               	movwf	??_merge1+1
  4124  0FE4  3002               	movlw	2
  4125  0FE5                     u3205:	
  4126  0FE5  1003               	clrc
  4127  0FE6  0DA1               	rlf	??_merge1+1,f
  4128  0FE7  3EFF               	addlw	-1
  4129  0FE8  1D03               	skipz
  4130  0FE9  2FE5               	goto	u3205
  4131  0FEA  1003               	clrc
  4132  0FEB  0D21               	rlf	??_merge1+1,w
  4133  0FEC  0720               	addwf	??_merge1,w
  4134  0FED  00A2               	movwf	??_merge1+2
  4135  0FEE  0822               	movf	??_merge1+2,w
  4136  0FEF  0084               	movwf	4
  4137  0FF0  1783               	bsf	3,7	;select IRP bank2
  4138  0FF1  0180               	clrf	0
  4139  0FF2  0A80               	incf	0,f
  4140  0FF3                     l2753:	
  4141  0FF3  3001               	movlw	1
  4142  0FF4  00A0               	movwf	??_merge1
  4143  0FF5  0820               	movf	??_merge1,w
  4144  0FF6  07A8               	addwf	merge1@col,f
  4145  0FF7  3004               	movlw	4
  4146  0FF8  0228               	subwf	merge1@col,w
  4147  0FF9  1C03               	skipc
  4148  0FFA  2FBD               	goto	l2749
  4149  0FFB                     l2757:	
  4150  0FFB  3001               	movlw	1
  4151  0FFC  00A0               	movwf	??_merge1
  4152  0FFD  0820               	movf	??_merge1,w
  4153  0FFE  07A7               	addwf	merge1@row,f
  4154  0FFF  2FB4               	goto	L4
  4155  1000                     __end_of_merge1:	
  4156                           
  4157                           	psect	text14
  4158  0B0D                     __ptext14:	
  4159 ;; *************** function _left_most *****************
  4160 ;; Defined at:
  4161 ;;		line 964 in file "teris_16f886.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  x               1    wreg     char 
  4164 ;;  matrix44        2   11[COMMON] PTR const struct .
  4165 ;;		 -> NULL(0), g_matrix44(384), 
  4166 ;;  matrix88        1   13[COMMON] PTR const struct .
  4167 ;;		 -> g_matrix88(64), 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  x               1    1[BANK0 ] char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      char 
  4172 ;; Registers used:
  4173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4179 ;;      Params:         3       0       0       0       0
  4180 ;;      Locals:         0       1       0       0       0
  4181 ;;      Temps:          0       1       0       0       0
  4182 ;;      Totals:         3       2       0       0       0
  4183 ;;Total ram usage:        5 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; Hardware stack levels required when called:    2
  4186 ;; This function calls:
  4187 ;;		_is_left_boundary
  4188 ;; This function is called by:
  4189 ;;		_find_best_solution
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           
  4194                           ;psect for function _left_most
  4195  0B0D                     _left_most:	
  4196                           
  4197                           ;incstack = 0
  4198                           ; Regs used in _left_most: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4199                           ;left_most@x stored from wreg
  4200  0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0B0F  00A1               	movwf	left_most@x
  4203  0B10                     l393:	
  4204                           ;teris_16f886.c: 966: while(1)
  4205                           
  4206                           
  4207                           ;teris_16f886.c: 967: {
  4208                           ;teris_16f886.c: 968: if(is_left_boundary(x, matrix44, matrix88) == LEFT_OVER_BOUNDARY)
  4209  0B10  087B               	movf	left_most@matrix44,w
  4210  0B11  00F0               	movwf	is_left_boundary@matrix44
  4211  0B12  087C               	movf	left_most@matrix44+1,w
  4212  0B13  00F1               	movwf	is_left_boundary@matrix44+1
  4213  0B14  087D               	movf	left_most@matrix88,w
  4214  0B15  00A0               	movwf	??_left_most
  4215  0B16  0820               	movf	??_left_most,w
  4216  0B17  00F2               	movwf	is_left_boundary@matrix88
  4217  0B18  0821               	movf	left_most@x,w
  4218  0B19  120A  158A  26F0  120A  158A  	fcall	_is_left_boundary
  4219  0B1E  3A02               	xorlw	2
  4220  0B1F  1D03               	skipz
  4221  0B20  2B26               	goto	l2859
  4222                           
  4223                           ;teris_16f886.c: 969: {
  4224                           ;teris_16f886.c: 973: return x + 1;
  4225  0B21  1283               	bcf	3,5	;RP0=0, select bank0
  4226  0B22  1303               	bcf	3,6	;RP1=0, select bank0
  4227  0B23  0821               	movf	left_most@x,w
  4228  0B24  3E01               	addlw	1
  4229  0B25  0008               	return
  4230  0B26                     l2859:	
  4231                           
  4232                           ;teris_16f886.c: 974: }
  4233                           ;teris_16f886.c: 975: x--;
  4234  0B26  30FF               	movlw	255
  4235  0B27  1283               	bcf	3,5	;RP0=0, select bank0
  4236  0B28  1303               	bcf	3,6	;RP1=0, select bank0
  4237  0B29  00A0               	movwf	??_left_most
  4238  0B2A  0820               	movf	??_left_most,w
  4239  0B2B  07A1               	addwf	left_most@x,f
  4240  0B2C  2B10               	goto	l393
  4241  0B2D                     __end_of_left_most:	
  4242                           
  4243                           	psect	text15
  4244  0EF0                     __ptext15:	
  4245 ;; *************** function _is_left_boundary *****************
  4246 ;; Defined at:
  4247 ;;		line 766 in file "teris_16f886.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;  x               1    wreg     char 
  4250 ;;  matrix44        2    0[COMMON] PTR const struct .
  4251 ;;		 -> NULL(0), g_matrix44(384), 
  4252 ;;  matrix88        1    2[COMMON] PTR const struct .
  4253 ;;		 -> g_matrix88(64), 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  x               1    8[COMMON] char 
  4256 ;;  col             1   10[COMMON] char 
  4257 ;;  row             1    9[COMMON] char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      unsigned char 
  4260 ;; Registers used:
  4261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4267 ;;      Params:         3       0       0       0       0
  4268 ;;      Locals:         3       0       0       0       0
  4269 ;;      Temps:          5       0       0       0       0
  4270 ;;      Totals:        11       0       0       0       0
  4271 ;;Total ram usage:       11 bytes
  4272 ;; Hardware stack levels used:    2
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_left_most
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _is_left_boundary
  4282  0EF0                     _is_left_boundary:	
  4283                           
  4284                           ;incstack = 0
  4285                           ; Regs used in _is_left_boundary: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4286                           ;is_left_boundary@x stored from wreg
  4287  0EF0  00F8               	movwf	is_left_boundary@x
  4288                           
  4289                           ;teris_16f886.c: 768: for(int8_t row = 4 - 1; row >= 0; row--)
  4290  0EF1  3003               	movlw	3
  4291  0EF2  00F3               	movwf	??_is_left_boundary
  4292  0EF3  0873               	movf	??_is_left_boundary,w
  4293  0EF4  00F9               	movwf	is_left_boundary@row
  4294  0EF5  1BF9               	btfsc	is_left_boundary@row,7
  4295  0EF6  2F43               	goto	l2559
  4296  0EF7                     l2537:	
  4297                           
  4298                           ;teris_16f886.c: 769: {
  4299                           ;teris_16f886.c: 770: for(int8_t col = 0; col < 4; col++)
  4300  0EF7  01FA               	clrf	is_left_boundary@col
  4301  0EF8  087A               	movf	is_left_boundary@col,w
  4302  0EF9  3A80               	xorlw	128
  4303  0EFA  3E7C               	addlw	-132
  4304  0EFB  1803               	btfsc	3,0
  4305  0EFC  2F3D               	goto	l2555
  4306  0EFD                     l2543:	
  4307                           
  4308                           ;teris_16f886.c: 771: {
  4309                           ;teris_16f886.c: 772: if(matrix44->data[row][col] == 1)
  4310  0EFD  0879               	movf	is_left_boundary@row,w
  4311  0EFE  00F3               	movwf	??_is_left_boundary
  4312  0EFF  01F4               	clrf	??_is_left_boundary+1
  4313  0F00  1003               	clrc
  4314  0F01  0DF3               	rlf	??_is_left_boundary,f
  4315  0F02  0DF4               	rlf	??_is_left_boundary+1,f
  4316  0F03  1003               	clrc
  4317  0F04  0DF3               	rlf	??_is_left_boundary,f
  4318  0F05  0DF4               	rlf	??_is_left_boundary+1,f
  4319  0F06  0873               	movf	??_is_left_boundary,w
  4320  0F07  0770               	addwf	is_left_boundary@matrix44,w
  4321  0F08  00F5               	movwf	??_is_left_boundary+2
  4322  0F09  0874               	movf	??_is_left_boundary+1,w
  4323  0F0A  1803               	skipnc
  4324  0F0B  0A74               	incf	??_is_left_boundary+1,w
  4325  0F0C  0771               	addwf	is_left_boundary@matrix44+1,w
  4326  0F0D  00F6               	movwf	??_is_left_boundary+3
  4327  0F0E  087A               	movf	is_left_boundary@col,w
  4328  0F0F  0775               	addwf	??_is_left_boundary+2,w
  4329  0F10  0084               	movwf	4
  4330  0F11  0876               	movf	??_is_left_boundary+3,w
  4331  0F12  1803               	skipnc
  4332  0F13  0A76               	incf	??_is_left_boundary+3,w
  4333  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  4335  0F16  00FF               	movwf	127
  4336  0F17  120A  158A  2000  120A  158A  	fcall	stringtab
  4337  0F1C  3A01               	xorlw	1
  4338  0F1D  1D03               	skipz
  4339  0F1E  2F34               	goto	l2551
  4340                           
  4341                           ;teris_16f886.c: 773: {
  4342                           ;teris_16f886.c: 774: if( x + col < 0)
  4343  0F1F  087A               	movf	is_left_boundary@col,w
  4344  0F20  00F3               	movwf	??_is_left_boundary
  4345  0F21  01F4               	clrf	??_is_left_boundary+1
  4346  0F22  1BF3               	btfsc	??_is_left_boundary,7
  4347  0F23  03F4               	decf	??_is_left_boundary+1,f
  4348  0F24  0878               	movf	is_left_boundary@x,w
  4349  0F25  00F5               	movwf	??_is_left_boundary+2
  4350  0F26  01F6               	clrf	??_is_left_boundary+3
  4351  0F27  1BF5               	btfsc	??_is_left_boundary+2,7
  4352  0F28  03F6               	decf	??_is_left_boundary+3,f
  4353  0F29  0873               	movf	??_is_left_boundary,w
  4354  0F2A  0775               	addwf	??_is_left_boundary+2,w
  4355  0F2B  0876               	movf	??_is_left_boundary+3,w
  4356  0F2C  1803               	skipnc
  4357  0F2D  0A76               	incf	??_is_left_boundary+3,w
  4358  0F2E  0774               	addwf	??_is_left_boundary+1,w
  4359  0F2F  00F7               	movwf	??_is_left_boundary+4
  4360  0F30  1FF7               	btfss	??_is_left_boundary+4,7
  4361  0F31  2F34               	goto	l2551
  4362                           
  4363                           ;teris_16f886.c: 775: {
  4364                           ;teris_16f886.c: 779: return LEFT_OVER_BOUNDARY;
  4365  0F32  3002               	movlw	2
  4366  0F33  0008               	return
  4367  0F34                     l2551:	
  4368  0F34  3001               	movlw	1
  4369  0F35  00F3               	movwf	??_is_left_boundary
  4370  0F36  0873               	movf	??_is_left_boundary,w
  4371  0F37  07FA               	addwf	is_left_boundary@col,f
  4372  0F38  087A               	movf	is_left_boundary@col,w
  4373  0F39  3A80               	xorlw	128
  4374  0F3A  3E7C               	addlw	-132
  4375  0F3B  1C03               	skipc
  4376  0F3C  2EFD               	goto	l2543
  4377  0F3D                     l2555:	
  4378  0F3D  30FF               	movlw	255
  4379  0F3E  00F3               	movwf	??_is_left_boundary
  4380  0F3F  0873               	movf	??_is_left_boundary,w
  4381  0F40  07F9               	addwf	is_left_boundary@row,f
  4382  0F41  1FF9               	btfss	is_left_boundary@row,7
  4383  0F42  2EF7               	goto	l2537
  4384  0F43                     l2559:	
  4385                           
  4386                           ;teris_16f886.c: 780: }
  4387                           ;teris_16f886.c: 781: }
  4388                           ;teris_16f886.c: 782: }
  4389                           ;teris_16f886.c: 783: }
  4390                           ;teris_16f886.c: 784: return OK;
  4391  0F43  3000               	movlw	0
  4392  0F44  0008               	return
  4393  0F45                     __end_of_is_left_boundary:	
  4394                           
  4395                           	psect	text16
  4396  02D6                     __ptext16:	
  4397 ;; *************** function _is_valid *****************
  4398 ;; Defined at:
  4399 ;;		line 722 in file "teris_16f886.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  x               1    wreg     char 
  4402 ;;  y               1    0[COMMON] char 
  4403 ;;  matrix44        2    1[COMMON] PTR const struct .
  4404 ;;		 -> NULL(0), g_matrix44(384), 
  4405 ;;  matrix88        1    3[COMMON] PTR const struct .
  4406 ;;		 -> g_matrix88(64), 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  x               1    8[COMMON] char 
  4409 ;;  col             1   10[COMMON] char 
  4410 ;;  row             1    9[COMMON] char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      unsigned char 
  4413 ;; Registers used:
  4414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4420 ;;      Params:         4       0       0       0       0
  4421 ;;      Locals:         3       0       0       0       0
  4422 ;;      Temps:          4       0       0       0       0
  4423 ;;      Totals:        11       0       0       0       0
  4424 ;;Total ram usage:       11 bytes
  4425 ;; Hardware stack levels used:    2
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_find_best_solution
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           
  4434                           ;psect for function _is_valid
  4435  02D6                     _is_valid:	
  4436                           
  4437                           ;incstack = 0
  4438                           ; Regs used in _is_valid: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4439                           ;is_valid@x stored from wreg
  4440  02D6  00F8               	movwf	is_valid@x
  4441                           
  4442                           ;teris_16f886.c: 727: for(int8_t row = 4 - 1; row >= 0; row--)
  4443  02D7  3003               	movlw	3
  4444  02D8  00F4               	movwf	??_is_valid
  4445  02D9  0874               	movf	??_is_valid,w
  4446  02DA  00F9               	movwf	is_valid@row
  4447  02DB  1BF9               	btfsc	is_valid@row,7
  4448  02DC  2B67               	goto	l2693
  4449  02DD                     l2657:	
  4450                           
  4451                           ;teris_16f886.c: 728: {
  4452                           ;teris_16f886.c: 729: for(int8_t col = 0; col < 4; col++)
  4453  02DD  01FA               	clrf	is_valid@col
  4454  02DE  087A               	movf	is_valid@col,w
  4455  02DF  3A80               	xorlw	128
  4456  02E0  3E7C               	addlw	-132
  4457  02E1  1803               	btfsc	3,0
  4458  02E2  2B61               	goto	l2689
  4459  02E3                     l2663:	
  4460                           
  4461                           ;teris_16f886.c: 730: {
  4462                           ;teris_16f886.c: 731: if(matrix44->data[row][col] == 1)
  4463  02E3  0879               	movf	is_valid@row,w
  4464  02E4  00F4               	movwf	??_is_valid
  4465  02E5  01F5               	clrf	??_is_valid+1
  4466  02E6  1003               	clrc
  4467  02E7  0DF4               	rlf	??_is_valid,f
  4468  02E8  0DF5               	rlf	??_is_valid+1,f
  4469  02E9  1003               	clrc
  4470  02EA  0DF4               	rlf	??_is_valid,f
  4471  02EB  0DF5               	rlf	??_is_valid+1,f
  4472  02EC  0874               	movf	??_is_valid,w
  4473  02ED  0771               	addwf	is_valid@matrix44,w
  4474  02EE  00F6               	movwf	??_is_valid+2
  4475  02EF  0875               	movf	??_is_valid+1,w
  4476  02F0  1803               	skipnc
  4477  02F1  0A75               	incf	??_is_valid+1,w
  4478  02F2  0772               	addwf	is_valid@matrix44+1,w
  4479  02F3  00F7               	movwf	??_is_valid+3
  4480  02F4  087A               	movf	is_valid@col,w
  4481  02F5  0776               	addwf	??_is_valid+2,w
  4482  02F6  0084               	movwf	4
  4483  02F7  0877               	movf	??_is_valid+3,w
  4484  02F8  1803               	skipnc
  4485  02F9  0A77               	incf	??_is_valid+3,w
  4486  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  4487  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  4488  02FC  00FF               	movwf	127
  4489  02FD  120A  158A  2000  120A  118A  	fcall	stringtab
  4490  0302  3A01               	xorlw	1
  4491  0303  1D03               	skipz
  4492  0304  2B58               	goto	l2685
  4493                           
  4494                           ;teris_16f886.c: 732: {
  4495                           ;teris_16f886.c: 733: if(matrix88->data[y + row][x + col] == 1)
  4496  0305  087A               	movf	is_valid@col,w
  4497  0306  0778               	addwf	is_valid@x,w
  4498  0307  0773               	addwf	is_valid@matrix88,w
  4499  0308  00F4               	movwf	??_is_valid
  4500  0309  0879               	movf	is_valid@row,w
  4501  030A  0770               	addwf	is_valid@y,w
  4502  030B  00F5               	movwf	??_is_valid+1
  4503  030C  3002               	movlw	2
  4504  030D                     u2985:	
  4505  030D  1003               	clrc
  4506  030E  0DF5               	rlf	??_is_valid+1,f
  4507  030F  3EFF               	addlw	-1
  4508  0310  1D03               	skipz
  4509  0311  2B0D               	goto	u2985
  4510  0312  1003               	clrc
  4511  0313  0D75               	rlf	??_is_valid+1,w
  4512  0314  0774               	addwf	??_is_valid,w
  4513  0315  00F6               	movwf	??_is_valid+2
  4514  0316  0876               	movf	??_is_valid+2,w
  4515  0317  0084               	movwf	4
  4516  0318  1783               	bsf	3,7	;select IRP bank2
  4517  0319  0300               	decf	0,w
  4518  031A  1D03               	btfss	3,2
  4519  031B  2B1E               	goto	l2671
  4520                           
  4521                           ;teris_16f886.c: 734: {
  4522                           ;teris_16f886.c: 739: return 0;
  4523  031C  3000               	movlw	0
  4524  031D  0008               	return
  4525  031E                     l2671:	
  4526                           
  4527                           ;teris_16f886.c: 740: }
  4528                           ;teris_16f886.c: 742: if(( x + col < 0) || (x + col >= 8))
  4529  031E  0878               	movf	is_valid@x,w
  4530  031F  077A               	addwf	is_valid@col,w
  4531  0320  00F4               	movwf	??_is_valid
  4532  0321  01F5               	clrf	??_is_valid+1
  4533  0322  1803               	skipnc
  4534  0323  0AF5               	incf	??_is_valid+1,f
  4535  0324  1BF8               	btfsc	is_valid@x,7
  4536  0325  03F5               	decf	??_is_valid+1,f
  4537  0326  1BFA               	btfsc	is_valid@col,7
  4538  0327  03F5               	decf	??_is_valid+1,f
  4539  0328  1BF5               	btfsc	??_is_valid+1,7
  4540  0329  2B3F               	goto	l2675
  4541  032A  0878               	movf	is_valid@x,w
  4542  032B  077A               	addwf	is_valid@col,w
  4543  032C  00F4               	movwf	??_is_valid
  4544  032D  01F5               	clrf	??_is_valid+1
  4545  032E  1803               	skipnc
  4546  032F  0AF5               	incf	??_is_valid+1,f
  4547  0330  1BF8               	btfsc	is_valid@x,7
  4548  0331  03F5               	decf	??_is_valid+1,f
  4549  0332  1BFA               	btfsc	is_valid@col,7
  4550  0333  03F5               	decf	??_is_valid+1,f
  4551  0334  0875               	movf	??_is_valid+1,w
  4552  0335  3A80               	xorlw	128
  4553  0336  00FF               	movwf	127
  4554  0337  3080               	movlw	128
  4555  0338  027F               	subwf	127,w
  4556  0339  1D03               	skipz
  4557  033A  2B3D               	goto	u3035
  4558  033B  3008               	movlw	8
  4559  033C  0274               	subwf	??_is_valid,w
  4560  033D                     u3035:	
  4561  033D  1C03               	skipc
  4562  033E  2B41               	goto	l2679
  4563  033F                     l2675:	
  4564                           
  4565                           ;teris_16f886.c: 743: {
  4566                           ;teris_16f886.c: 748: return 0;
  4567  033F  3000               	movlw	0
  4568  0340  0008               	return
  4569  0341                     l2679:	
  4570                           
  4571                           ;teris_16f886.c: 749: }
  4572                           ;teris_16f886.c: 750: if((y + row) > (8 - 1))
  4573  0341  0870               	movf	is_valid@y,w
  4574  0342  0779               	addwf	is_valid@row,w
  4575  0343  00F4               	movwf	??_is_valid
  4576  0344  01F5               	clrf	??_is_valid+1
  4577  0345  1803               	skipnc
  4578  0346  0AF5               	incf	??_is_valid+1,f
  4579  0347  1BF0               	btfsc	is_valid@y,7
  4580  0348  03F5               	decf	??_is_valid+1,f
  4581  0349  1BF9               	btfsc	is_valid@row,7
  4582  034A  03F5               	decf	??_is_valid+1,f
  4583  034B  0875               	movf	??_is_valid+1,w
  4584  034C  3A80               	xorlw	128
  4585  034D  00FF               	movwf	127
  4586  034E  3080               	movlw	128
  4587  034F  027F               	subwf	127,w
  4588  0350  1D03               	skipz
  4589  0351  2B54               	goto	u3055
  4590  0352  3008               	movlw	8
  4591  0353  0274               	subwf	??_is_valid,w
  4592  0354                     u3055:	
  4593  0354  1C03               	skipc
  4594  0355  2B58               	goto	l2685
  4595                           
  4596                           ;teris_16f886.c: 751: {
  4597                           ;teris_16f886.c: 756: return 0;
  4598  0356  3000               	movlw	0
  4599  0357  0008               	return
  4600  0358                     l2685:	
  4601  0358  3001               	movlw	1
  4602  0359  00F4               	movwf	??_is_valid
  4603  035A  0874               	movf	??_is_valid,w
  4604  035B  07FA               	addwf	is_valid@col,f
  4605  035C  087A               	movf	is_valid@col,w
  4606  035D  3A80               	xorlw	128
  4607  035E  3E7C               	addlw	-132
  4608  035F  1C03               	skipc
  4609  0360  2AE3               	goto	l2663
  4610  0361                     l2689:	
  4611  0361  30FF               	movlw	255
  4612  0362  00F4               	movwf	??_is_valid
  4613  0363  0874               	movf	??_is_valid,w
  4614  0364  07F9               	addwf	is_valid@row,f
  4615  0365  1FF9               	btfss	is_valid@row,7
  4616  0366  2ADD               	goto	l2657
  4617  0367                     l2693:	
  4618                           
  4619                           ;teris_16f886.c: 757: }
  4620                           ;teris_16f886.c: 758: }
  4621                           ;teris_16f886.c: 759: }
  4622                           ;teris_16f886.c: 760: }
  4623                           ;teris_16f886.c: 764: return 1;
  4624  0367  3001               	movlw	1
  4625  0368  0008               	return
  4626  0369                     __end_of_is_valid:	
  4627                           
  4628                           	psect	text17
  4629  0B92                     __ptext17:	
  4630 ;; *************** function _get_num_removed_rows *****************
  4631 ;; Defined at:
  4632 ;;		line 649 in file "teris_16f886.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  matrix          1    wreg     PTR struct .
  4635 ;;		 -> temp_matrix88(64), 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  matrix          1    8[COMMON] PTR struct .
  4638 ;;		 -> temp_matrix88(64), 
  4639 ;;  row             1    9[COMMON] char 
  4640 ;;  count           1    7[COMMON] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      unsigned char 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         0       0       0       0       0
  4651 ;;      Locals:         3       0       0       0       0
  4652 ;;      Temps:          1       0       0       0       0
  4653 ;;      Totals:         4       0       0       0       0
  4654 ;;Total ram usage:        4 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    1
  4657 ;; This function calls:
  4658 ;;		_is_row_full
  4659 ;; This function is called by:
  4660 ;;		_find_best_solution
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function _get_num_removed_rows
  4666  0B92                     _get_num_removed_rows:	
  4667                           
  4668                           ;incstack = 0
  4669                           ; Regs used in _get_num_removed_rows: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4670                           ;get_num_removed_rows@matrix stored from wreg
  4671  0B92  00F8               	movwf	get_num_removed_rows@matrix
  4672                           
  4673                           ;teris_16f886.c: 651: uint8_t count = 0;
  4674  0B93  01F7               	clrf	get_num_removed_rows@count
  4675                           
  4676                           ;teris_16f886.c: 652: for(int8_t row = 0; row < 8; row++)
  4677  0B94  01F9               	clrf	get_num_removed_rows@row
  4678  0B95  0879               	movf	get_num_removed_rows@row,w
  4679  0B96  3A80               	xorlw	128
  4680  0B97  3E78               	addlw	-136
  4681  0B98  1803               	btfsc	3,0
  4682  0B99  2BB4               	goto	l2647
  4683  0B9A                     l2641:	
  4684                           
  4685                           ;teris_16f886.c: 653: {
  4686                           ;teris_16f886.c: 654: if(is_row_full(matrix, row) == 1)
  4687  0B9A  0879               	movf	get_num_removed_rows@row,w
  4688  0B9B  00F6               	movwf	??_get_num_removed_rows
  4689  0B9C  0876               	movf	??_get_num_removed_rows,w
  4690  0B9D  00F0               	movwf	is_row_full@row
  4691  0B9E  0878               	movf	get_num_removed_rows@matrix,w
  4692  0B9F  120A  158A  2401  120A  158A  	fcall	_is_row_full
  4693  0BA4  3A01               	xorlw	1
  4694  0BA5  1D03               	skipz
  4695  0BA6  2BAB               	goto	l272
  4696                           
  4697                           ;teris_16f886.c: 655: {
  4698                           ;teris_16f886.c: 656: count++;
  4699  0BA7  3001               	movlw	1
  4700  0BA8  00F6               	movwf	??_get_num_removed_rows
  4701  0BA9  0876               	movf	??_get_num_removed_rows,w
  4702  0BAA  07F7               	addwf	get_num_removed_rows@count,f
  4703  0BAB                     l272:	
  4704  0BAB  3001               	movlw	1
  4705  0BAC  00F6               	movwf	??_get_num_removed_rows
  4706  0BAD  0876               	movf	??_get_num_removed_rows,w
  4707  0BAE  07F9               	addwf	get_num_removed_rows@row,f
  4708  0BAF  0879               	movf	get_num_removed_rows@row,w
  4709  0BB0  3A80               	xorlw	128
  4710  0BB1  3E78               	addlw	-136
  4711  0BB2  1C03               	skipc
  4712  0BB3  2B9A               	goto	l2641
  4713  0BB4                     l2647:	
  4714                           
  4715                           ;teris_16f886.c: 657: }
  4716                           ;teris_16f886.c: 658: }
  4717                           ;teris_16f886.c: 662: return count;
  4718  0BB4  0877               	movf	get_num_removed_rows@count,w
  4719  0BB5  0008               	return
  4720  0BB6                     __end_of_get_num_removed_rows:	
  4721                           
  4722                           	psect	text18
  4723  0171                     __ptext18:	
  4724 ;; *************** function _get_num_of_orphan *****************
  4725 ;; Defined at:
  4726 ;;		line 885 in file "teris_16f886.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;  matrix          1    wreg     PTR const struct .
  4729 ;;		 -> temp_matrix88(64), 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  matrix          1    9[COMMON] PTR const struct .
  4732 ;;		 -> temp_matrix88(64), 
  4733 ;;  row             1   11[COMMON] char 
  4734 ;;  col             1   10[COMMON] unsigned char 
  4735 ;;  risk            2    6[COMMON] unsigned int 
  4736 ;;  full            1    8[COMMON] unsigned char 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  2    0[COMMON] unsigned int 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4746 ;;      Params:         2       0       0       0       0
  4747 ;;      Locals:         6       0       0       0       0
  4748 ;;      Temps:          4       0       0       0       0
  4749 ;;      Totals:        12       0       0       0       0
  4750 ;;Total ram usage:       12 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_find_best_solution
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           
  4760                           ;psect for function _get_num_of_orphan
  4761  0171                     _get_num_of_orphan:	
  4762                           
  4763                           ;incstack = 0
  4764                           ; Regs used in _get_num_of_orphan: [wreg-fsr0h+status,2+status,0]
  4765                           ;get_num_of_orphan@matrix stored from wreg
  4766  0171  00F9               	movwf	get_num_of_orphan@matrix
  4767                           
  4768                           ;teris_16f886.c: 887: uint16_t risk = 0;
  4769  0172  01F6               	clrf	get_num_of_orphan@risk
  4770  0173  01F7               	clrf	get_num_of_orphan@risk+1
  4771                           
  4772                           ;teris_16f886.c: 888: uint8_t full = 0xFF;
  4773  0174  30FF               	movlw	255
  4774  0175  00F2               	movwf	??_get_num_of_orphan
  4775  0176  0872               	movf	??_get_num_of_orphan,w
  4776  0177  00F8               	movwf	get_num_of_orphan@full
  4777                           
  4778                           ;teris_16f886.c: 889: for(uint8_t col = 0; col < 8; col++)
  4779  0178  01FA               	clrf	get_num_of_orphan@col
  4780  0179  3008               	movlw	8
  4781  017A  027A               	subwf	get_num_of_orphan@col,w
  4782  017B  1803               	btfsc	3,0
  4783  017C  29DE               	goto	l2795
  4784  017D                     l2769:	
  4785                           
  4786                           ;teris_16f886.c: 890: {
  4787                           ;teris_16f886.c: 891: full = 0xFF;
  4788  017D  30FF               	movlw	255
  4789  017E  00F2               	movwf	??_get_num_of_orphan
  4790  017F  0872               	movf	??_get_num_of_orphan,w
  4791  0180  00F8               	movwf	get_num_of_orphan@full
  4792                           
  4793                           ;teris_16f886.c: 892: for(int8_t row = 8 - 1; row >= 0; row--)
  4794  0181  3007               	movlw	7
  4795  0182  00F2               	movwf	??_get_num_of_orphan
  4796  0183  0872               	movf	??_get_num_of_orphan,w
  4797  0184  00FB               	movwf	get_num_of_orphan@row
  4798  0185  1BFB               	btfsc	get_num_of_orphan@row,7
  4799  0186  29D6               	goto	l2791
  4800  0187                     l2775:	
  4801                           
  4802                           ;teris_16f886.c: 893: {
  4803                           ;teris_16f886.c: 894: if(full == 0xFF)
  4804  0187  0A78               	incf	get_num_of_orphan@full,w
  4805  0188  1D03               	btfss	3,2
  4806  0189  299D               	goto	l2779
  4807                           
  4808                           ;teris_16f886.c: 895: {
  4809                           ;teris_16f886.c: 896: full = matrix->data[row][col];
  4810  018A  087B               	movf	get_num_of_orphan@row,w
  4811  018B  00F2               	movwf	??_get_num_of_orphan
  4812  018C  3002               	movlw	2
  4813  018D                     u3265:	
  4814  018D  1003               	clrc
  4815  018E  0DF2               	rlf	??_get_num_of_orphan,f
  4816  018F  3EFF               	addlw	-1
  4817  0190  1D03               	skipz
  4818  0191  298D               	goto	u3265
  4819  0192  1003               	clrc
  4820  0193  0D72               	rlf	??_get_num_of_orphan,w
  4821  0194  0779               	addwf	get_num_of_orphan@matrix,w
  4822  0195  00F3               	movwf	??_get_num_of_orphan+1
  4823  0196  087A               	movf	get_num_of_orphan@col,w
  4824  0197  0773               	addwf	??_get_num_of_orphan+1,w
  4825  0198  00F4               	movwf	??_get_num_of_orphan+2
  4826  0199  0874               	movf	??_get_num_of_orphan+2,w
  4827  019A  0084               	movwf	4
  4828  019B  1783               	bsf	3,7	;select IRP bank2
  4829  019C  29CC               	goto	L5
  4830  019D                     l2779:	
  4831                           ;teris_16f886.c: 897: }
  4832                           
  4833                           
  4834                           ;teris_16f886.c: 898: else
  4835                           ;teris_16f886.c: 899: {
  4836                           ;teris_16f886.c: 900: if(matrix->data[row][col] == 1)
  4837  019D  087B               	movf	get_num_of_orphan@row,w
  4838  019E  00F2               	movwf	??_get_num_of_orphan
  4839  019F  3002               	movlw	2
  4840  01A0                     u3275:	
  4841  01A0  1003               	clrc
  4842  01A1  0DF2               	rlf	??_get_num_of_orphan,f
  4843  01A2  3EFF               	addlw	-1
  4844  01A3  1D03               	skipz
  4845  01A4  29A0               	goto	u3275
  4846  01A5  1003               	clrc
  4847  01A6  0D72               	rlf	??_get_num_of_orphan,w
  4848  01A7  0779               	addwf	get_num_of_orphan@matrix,w
  4849  01A8  00F3               	movwf	??_get_num_of_orphan+1
  4850  01A9  087A               	movf	get_num_of_orphan@col,w
  4851  01AA  0773               	addwf	??_get_num_of_orphan+1,w
  4852  01AB  00F4               	movwf	??_get_num_of_orphan+2
  4853  01AC  0874               	movf	??_get_num_of_orphan+2,w
  4854  01AD  0084               	movwf	4
  4855  01AE  1783               	bsf	3,7	;select IRP bank2
  4856  01AF  0300               	decf	0,w
  4857  01B0  1D03               	btfss	3,2
  4858  01B1  29BB               	goto	l2785
  4859                           
  4860                           ;teris_16f886.c: 901: {
  4861                           ;teris_16f886.c: 902: if(full == 0)
  4862  01B2  0878               	movf	get_num_of_orphan@full,w
  4863  01B3  1D03               	btfss	3,2
  4864  01B4  29BB               	goto	l2785
  4865                           
  4866                           ;teris_16f886.c: 903: {
  4867                           ;teris_16f886.c: 904: risk++;
  4868  01B5  3001               	movlw	1
  4869  01B6  07F6               	addwf	get_num_of_orphan@risk,f
  4870  01B7  1803               	skipnc
  4871  01B8  0AF7               	incf	get_num_of_orphan@risk+1,f
  4872  01B9  3000               	movlw	0
  4873  01BA  07F7               	addwf	get_num_of_orphan@risk+1,f
  4874  01BB                     l2785:	
  4875                           
  4876                           ;teris_16f886.c: 905: }
  4877                           ;teris_16f886.c: 906: }
  4878                           ;teris_16f886.c: 907: full = matrix->data[row][col];
  4879  01BB  087B               	movf	get_num_of_orphan@row,w
  4880  01BC  00F2               	movwf	??_get_num_of_orphan
  4881  01BD  3002               	movlw	2
  4882  01BE                     u3305:	
  4883  01BE  1003               	clrc
  4884  01BF  0DF2               	rlf	??_get_num_of_orphan,f
  4885  01C0  3EFF               	addlw	-1
  4886  01C1  1D03               	skipz
  4887  01C2  29BE               	goto	u3305
  4888  01C3  1003               	clrc
  4889  01C4  0D72               	rlf	??_get_num_of_orphan,w
  4890  01C5  0779               	addwf	get_num_of_orphan@matrix,w
  4891  01C6  00F3               	movwf	??_get_num_of_orphan+1
  4892  01C7  087A               	movf	get_num_of_orphan@col,w
  4893  01C8  0773               	addwf	??_get_num_of_orphan+1,w
  4894  01C9  00F4               	movwf	??_get_num_of_orphan+2
  4895  01CA  0874               	movf	??_get_num_of_orphan+2,w
  4896  01CB  0084               	movwf	4
  4897  01CC                     L5:	
  4898  01CC  0800               	movf	0,w
  4899  01CD  00F5               	movwf	??_get_num_of_orphan+3
  4900  01CE  0875               	movf	??_get_num_of_orphan+3,w
  4901  01CF  00F8               	movwf	get_num_of_orphan@full
  4902  01D0  30FF               	movlw	255
  4903  01D1  00F2               	movwf	??_get_num_of_orphan
  4904  01D2  0872               	movf	??_get_num_of_orphan,w
  4905  01D3  07FB               	addwf	get_num_of_orphan@row,f
  4906  01D4  1FFB               	btfss	get_num_of_orphan@row,7
  4907  01D5  2987               	goto	l2775
  4908  01D6                     l2791:	
  4909  01D6  3001               	movlw	1
  4910  01D7  00F2               	movwf	??_get_num_of_orphan
  4911  01D8  0872               	movf	??_get_num_of_orphan,w
  4912  01D9  07FA               	addwf	get_num_of_orphan@col,f
  4913  01DA  3008               	movlw	8
  4914  01DB  027A               	subwf	get_num_of_orphan@col,w
  4915  01DC  1C03               	skipc
  4916  01DD  297D               	goto	l2769
  4917  01DE                     l2795:	
  4918                           
  4919                           ;teris_16f886.c: 908: }
  4920                           ;teris_16f886.c: 909: }
  4921                           ;teris_16f886.c: 910: }
  4922                           ;teris_16f886.c: 915: return risk;
  4923  01DE  0877               	movf	get_num_of_orphan@risk+1,w
  4924  01DF  00F1               	movwf	?_get_num_of_orphan+1
  4925  01E0  0876               	movf	get_num_of_orphan@risk,w
  4926  01E1  00F0               	movwf	?_get_num_of_orphan
  4927  01E2  0008               	return
  4928  01E3                     __end_of_get_num_of_orphan:	
  4929                           
  4930                           	psect	text19
  4931  0369                     __ptext19:	
  4932 ;; *************** function _get_holes_after_merge *****************
  4933 ;; Defined at:
  4934 ;;		line 1027 in file "teris_16f886.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  matrix          1    wreg     PTR struct .
  4937 ;;		 -> temp_matrix88(64), 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  matrix          1    9[COMMON] PTR struct .
  4940 ;;		 -> temp_matrix88(64), 
  4941 ;;  row             1   11[COMMON] char 
  4942 ;;  col             1   10[COMMON] char 
  4943 ;;  start           1    8[COMMON] char 
  4944 ;;  stop            1    7[COMMON] char 
  4945 ;;  num_hole        1    6[COMMON] unsigned char 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      unsigned char 
  4948 ;; Registers used:
  4949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4955 ;;      Params:         0       0       0       0       0
  4956 ;;      Locals:         6       0       0       0       0
  4957 ;;      Temps:          6       0       0       0       0
  4958 ;;      Totals:        12       0       0       0       0
  4959 ;;Total ram usage:       12 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_find_best_solution
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           
  4969                           ;psect for function _get_holes_after_merge
  4970  0369                     _get_holes_after_merge:	
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in _get_holes_after_merge: [wreg-fsr0h+status,2+status,0+btemp+1]
  4974                           ;get_holes_after_merge@matrix stored from wreg
  4975  0369  00F9               	movwf	get_holes_after_merge@matrix
  4976                           
  4977                           ;teris_16f886.c: 1029: int8_t start = -1;
  4978  036A  01F8               	clrf	get_holes_after_merge@start
  4979  036B  03F8               	decf	get_holes_after_merge@start,f
  4980                           
  4981                           ;teris_16f886.c: 1030: int8_t stop = -1;
  4982  036C  01F7               	clrf	get_holes_after_merge@stop
  4983  036D  03F7               	decf	get_holes_after_merge@stop,f
  4984                           
  4985                           ;teris_16f886.c: 1031: uint8_t num_hole = 0;
  4986  036E  01F6               	clrf	get_holes_after_merge@num_hole
  4987                           
  4988                           ;teris_16f886.c: 1032: for(int8_t col = 0; col < 8; col++)
  4989  036F  01FA               	clrf	get_holes_after_merge@col
  4990  0370  087A               	movf	get_holes_after_merge@col,w
  4991  0371  3A80               	xorlw	128
  4992  0372  3E78               	addlw	-136
  4993  0373  1803               	btfsc	3,0
  4994  0374  2C74               	goto	l2985
  4995  0375                     l2923:	
  4996                           
  4997                           ;teris_16f886.c: 1033: {
  4998                           ;teris_16f886.c: 1034: start = stop = -1;
  4999  0375  30FF               	movlw	255
  5000  0376  00F7               	movwf	get_holes_after_merge@stop
  5001  0377  00F0               	movwf	??_get_holes_after_merge
  5002  0378  0870               	movf	??_get_holes_after_merge,w
  5003  0379  00F8               	movwf	get_holes_after_merge@start
  5004                           
  5005                           ;teris_16f886.c: 1035: for(int8_t row = 0; row < 8; row++)
  5006  037A  01FB               	clrf	get_holes_after_merge@row
  5007  037B  087B               	movf	get_holes_after_merge@row,w
  5008  037C  3A80               	xorlw	128
  5009  037D  3E78               	addlw	-136
  5010  037E  1803               	btfsc	3,0
  5011  037F  2C42               	goto	l424
  5012  0380                     l2931:	
  5013                           
  5014                           ;teris_16f886.c: 1036: {
  5015                           ;teris_16f886.c: 1037: if(col == 0)
  5016  0380  087A               	movf	get_holes_after_merge@col,w
  5017  0381  1D03               	btfss	3,2
  5018  0382  2BA5               	goto	l2941
  5019                           
  5020                           ;teris_16f886.c: 1038: {
  5021                           ;teris_16f886.c: 1039: if((matrix->data[row][col] == 0) && (matrix->data[row][col + 1] =
      +                          = 1))
  5022  0383  087B               	movf	get_holes_after_merge@row,w
  5023  0384  00F0               	movwf	??_get_holes_after_merge
  5024  0385  3002               	movlw	2
  5025  0386                     u3585:	
  5026  0386  1003               	clrc
  5027  0387  0DF0               	rlf	??_get_holes_after_merge,f
  5028  0388  3EFF               	addlw	-1
  5029  0389  1D03               	skipz
  5030  038A  2B86               	goto	u3585
  5031  038B  1003               	clrc
  5032  038C  0D70               	rlf	??_get_holes_after_merge,w
  5033  038D  0779               	addwf	get_holes_after_merge@matrix,w
  5034  038E  00F1               	movwf	??_get_holes_after_merge+1
  5035  038F  087A               	movf	get_holes_after_merge@col,w
  5036  0390  0771               	addwf	??_get_holes_after_merge+1,w
  5037  0391  00F2               	movwf	??_get_holes_after_merge+2
  5038  0392  0872               	movf	??_get_holes_after_merge+2,w
  5039  0393  0084               	movwf	4
  5040  0394  1783               	bsf	3,7	;select IRP bank2
  5041  0395  0800               	movf	0,w
  5042  0396  1D03               	btfss	3,2
  5043  0397  2C11               	goto	l2961
  5044  0398  087A               	movf	get_holes_after_merge@col,w
  5045  0399  3E01               	addlw	1
  5046  039A  0779               	addwf	get_holes_after_merge@matrix,w
  5047  039B  00F0               	movwf	??_get_holes_after_merge
  5048  039C  087B               	movf	get_holes_after_merge@row,w
  5049  039D  00F1               	movwf	??_get_holes_after_merge+1
  5050  039E  3002               	movlw	2
  5051  039F                     u3605:	
  5052  039F  1003               	clrc
  5053  03A0  0DF1               	rlf	??_get_holes_after_merge+1,f
  5054  03A1  3EFF               	addlw	-1
  5055  03A2  1D03               	skipz
  5056  03A3  2B9F               	goto	u3605
  5057  03A4  2C01               	goto	L7
  5058  03A5                     l2941:	
  5059                           ;teris_16f886.c: 1044: }
  5060                           ;teris_16f886.c: 1045: }
  5061                           ;teris_16f886.c: 1046: }
  5062                           
  5063                           ;teris_16f886.c: 1042: {
  5064                           ;teris_16f886.c: 1043: start = row;
  5065                           
  5066                           ;teris_16f886.c: 1040: {
  5067                           ;teris_16f886.c: 1041: if(start == -1)
  5068                           
  5069                           
  5070                           ;teris_16f886.c: 1047: else if(col == 8 - 1)
  5071  03A5  3007               	movlw	7
  5072  03A6  067A               	xorwf	get_holes_after_merge@col,w
  5073  03A7  1D03               	btfss	3,2
  5074  03A8  2BCB               	goto	l2951
  5075                           
  5076                           ;teris_16f886.c: 1048: {
  5077                           ;teris_16f886.c: 1049: if((matrix->data[row][col] == 0) && (matrix->data[row][col - 1] =
      +                          = 1))
  5078  03A9  087B               	movf	get_holes_after_merge@row,w
  5079  03AA  00F0               	movwf	??_get_holes_after_merge
  5080  03AB  3002               	movlw	2
  5081  03AC                     u3645:	
  5082  03AC  1003               	clrc
  5083  03AD  0DF0               	rlf	??_get_holes_after_merge,f
  5084  03AE  3EFF               	addlw	-1
  5085  03AF  1D03               	skipz
  5086  03B0  2BAC               	goto	u3645
  5087  03B1  1003               	clrc
  5088  03B2  0D70               	rlf	??_get_holes_after_merge,w
  5089  03B3  0779               	addwf	get_holes_after_merge@matrix,w
  5090  03B4  00F1               	movwf	??_get_holes_after_merge+1
  5091  03B5  087A               	movf	get_holes_after_merge@col,w
  5092  03B6  0771               	addwf	??_get_holes_after_merge+1,w
  5093  03B7  00F2               	movwf	??_get_holes_after_merge+2
  5094  03B8  0872               	movf	??_get_holes_after_merge+2,w
  5095  03B9  0084               	movwf	4
  5096  03BA  1783               	bsf	3,7	;select IRP bank2
  5097  03BB  0800               	movf	0,w
  5098  03BC  1D03               	btfss	3,2
  5099  03BD  2C11               	goto	l2961
  5100  03BE  087A               	movf	get_holes_after_merge@col,w
  5101  03BF  3EFF               	addlw	255
  5102  03C0  0779               	addwf	get_holes_after_merge@matrix,w
  5103  03C1  00F0               	movwf	??_get_holes_after_merge
  5104  03C2  087B               	movf	get_holes_after_merge@row,w
  5105  03C3  00F1               	movwf	??_get_holes_after_merge+1
  5106  03C4  3002               	movlw	2
  5107  03C5                     u3665:	
  5108  03C5  1003               	clrc
  5109  03C6  0DF1               	rlf	??_get_holes_after_merge+1,f
  5110  03C7  3EFF               	addlw	-1
  5111  03C8  1D03               	skipz
  5112  03C9  2BC5               	goto	u3665
  5113  03CA  2C01               	goto	L7
  5114  03CB                     l2951:	
  5115                           ;teris_16f886.c: 1054: }
  5116                           ;teris_16f886.c: 1055: }
  5117                           ;teris_16f886.c: 1056: }
  5118                           
  5119                           ;teris_16f886.c: 1052: {
  5120                           ;teris_16f886.c: 1053: start = row;
  5121                           
  5122                           ;teris_16f886.c: 1050: {
  5123                           ;teris_16f886.c: 1051: if(start == -1)
  5124                           
  5125                           
  5126                           ;teris_16f886.c: 1057: else
  5127                           ;teris_16f886.c: 1058: {
  5128                           ;teris_16f886.c: 1059: if((matrix->data[row][col] == 0) && (matrix->data[row][col - 1] =
      +                          = 1) && (matrix->data[row][col + 1] == 1))
  5129  03CB  087B               	movf	get_holes_after_merge@row,w
  5130  03CC  00F0               	movwf	??_get_holes_after_merge
  5131  03CD  3002               	movlw	2
  5132  03CE                     u3695:	
  5133  03CE  1003               	clrc
  5134  03CF  0DF0               	rlf	??_get_holes_after_merge,f
  5135  03D0  3EFF               	addlw	-1
  5136  03D1  1D03               	skipz
  5137  03D2  2BCE               	goto	u3695
  5138  03D3  1003               	clrc
  5139  03D4  0D70               	rlf	??_get_holes_after_merge,w
  5140  03D5  0779               	addwf	get_holes_after_merge@matrix,w
  5141  03D6  00F1               	movwf	??_get_holes_after_merge+1
  5142  03D7  087A               	movf	get_holes_after_merge@col,w
  5143  03D8  0771               	addwf	??_get_holes_after_merge+1,w
  5144  03D9  00F2               	movwf	??_get_holes_after_merge+2
  5145  03DA  0872               	movf	??_get_holes_after_merge+2,w
  5146  03DB  0084               	movwf	4
  5147  03DC  1783               	bsf	3,7	;select IRP bank2
  5148  03DD  0800               	movf	0,w
  5149  03DE  1D03               	btfss	3,2
  5150  03DF  2C11               	goto	l2961
  5151  03E0  087A               	movf	get_holes_after_merge@col,w
  5152  03E1  3EFF               	addlw	255
  5153  03E2  0779               	addwf	get_holes_after_merge@matrix,w
  5154  03E3  00F0               	movwf	??_get_holes_after_merge
  5155  03E4  087B               	movf	get_holes_after_merge@row,w
  5156  03E5  00F1               	movwf	??_get_holes_after_merge+1
  5157  03E6  3002               	movlw	2
  5158  03E7                     u3715:	
  5159  03E7  1003               	clrc
  5160  03E8  0DF1               	rlf	??_get_holes_after_merge+1,f
  5161  03E9  3EFF               	addlw	-1
  5162  03EA  1D03               	skipz
  5163  03EB  2BE7               	goto	u3715
  5164  03EC  1003               	clrc
  5165  03ED  0D71               	rlf	??_get_holes_after_merge+1,w
  5166  03EE  0770               	addwf	??_get_holes_after_merge,w
  5167  03EF  00F2               	movwf	??_get_holes_after_merge+2
  5168  03F0  0872               	movf	??_get_holes_after_merge+2,w
  5169  03F1  0084               	movwf	4
  5170  03F2  0300               	decf	0,w
  5171  03F3  1D03               	btfss	3,2
  5172  03F4  2C11               	goto	l2961
  5173  03F5  087A               	movf	get_holes_after_merge@col,w
  5174  03F6  3E01               	addlw	1
  5175  03F7  0779               	addwf	get_holes_after_merge@matrix,w
  5176  03F8  00F0               	movwf	??_get_holes_after_merge
  5177  03F9  087B               	movf	get_holes_after_merge@row,w
  5178  03FA  00F1               	movwf	??_get_holes_after_merge+1
  5179  03FB  3002               	movlw	2
  5180  03FC                     u3735:	
  5181  03FC  1003               	clrc
  5182  03FD  0DF1               	rlf	??_get_holes_after_merge+1,f
  5183  03FE  3EFF               	addlw	-1
  5184  03FF  1D03               	skipz
  5185  0400  2BFC               	goto	u3735
  5186  0401                     L7:	
  5187  0401  1003               	clrc
  5188  0402  0D71               	rlf	??_get_holes_after_merge+1,w
  5189  0403  0770               	addwf	??_get_holes_after_merge,w
  5190  0404  00F2               	movwf	??_get_holes_after_merge+2
  5191  0405  0872               	movf	??_get_holes_after_merge+2,w
  5192  0406  0084               	movwf	4
  5193  0407  0300               	decf	0,w
  5194  0408  1D03               	btfss	3,2
  5195  0409  2C11               	goto	l2961
  5196                           
  5197                           ;teris_16f886.c: 1060: {
  5198                           ;teris_16f886.c: 1061: if(start == -1)
  5199  040A  0A78               	incf	get_holes_after_merge@start,w
  5200  040B  1D03               	btfss	3,2
  5201  040C  2C11               	goto	l2961
  5202                           
  5203                           ;teris_16f886.c: 1062: {
  5204                           ;teris_16f886.c: 1063: start = row;
  5205  040D  087B               	movf	get_holes_after_merge@row,w
  5206  040E  00F0               	movwf	??_get_holes_after_merge
  5207  040F  0870               	movf	??_get_holes_after_merge,w
  5208  0410  00F8               	movwf	get_holes_after_merge@start
  5209  0411                     l2961:	
  5210                           
  5211                           ;teris_16f886.c: 1064: }
  5212                           ;teris_16f886.c: 1065: }
  5213                           ;teris_16f886.c: 1066: }
  5214                           ;teris_16f886.c: 1067: if(start >= 0)
  5215  0411  1BF8               	btfsc	get_holes_after_merge@start,7
  5216  0412  2C39               	goto	l435
  5217                           
  5218                           ;teris_16f886.c: 1068: {
  5219                           ;teris_16f886.c: 1069: if(row == 8 - 1)
  5220  0413  3007               	movlw	7
  5221  0414  067B               	xorwf	get_holes_after_merge@row,w
  5222  0415  1D03               	btfss	3,2
  5223  0416  2C1C               	goto	l2969
  5224                           
  5225                           ;teris_16f886.c: 1070: {
  5226                           ;teris_16f886.c: 1071: if(stop == -1)
  5227  0417  0A77               	incf	get_holes_after_merge@stop,w
  5228  0418  1D03               	btfss	3,2
  5229  0419  2C39               	goto	l435
  5230                           
  5231                           ;teris_16f886.c: 1072: {
  5232                           ;teris_16f886.c: 1073: stop = 8;
  5233  041A  3008               	movlw	8
  5234  041B  2C36               	goto	L6
  5235  041C                     l2969:	
  5236                           ;teris_16f886.c: 1074: }
  5237                           ;teris_16f886.c: 1075: }
  5238                           
  5239                           
  5240                           ;teris_16f886.c: 1076: else if(matrix->data[row + 1][col] == 1)
  5241  041C  087B               	movf	get_holes_after_merge@row,w
  5242  041D  00F0               	movwf	??_get_holes_after_merge
  5243  041E  3002               	movlw	2
  5244  041F                     u3795:	
  5245  041F  1003               	clrc
  5246  0420  0DF0               	rlf	??_get_holes_after_merge,f
  5247  0421  3EFF               	addlw	-1
  5248  0422  1D03               	skipz
  5249  0423  2C1F               	goto	u3795
  5250  0424  1003               	clrc
  5251  0425  0D70               	rlf	??_get_holes_after_merge,w
  5252  0426  3E08               	addlw	8
  5253  0427  0779               	addwf	get_holes_after_merge@matrix,w
  5254  0428  00F1               	movwf	??_get_holes_after_merge+1
  5255  0429  087A               	movf	get_holes_after_merge@col,w
  5256  042A  0771               	addwf	??_get_holes_after_merge+1,w
  5257  042B  00F2               	movwf	??_get_holes_after_merge+2
  5258  042C  0872               	movf	??_get_holes_after_merge+2,w
  5259  042D  0084               	movwf	4
  5260  042E  0300               	decf	0,w
  5261  042F  1D03               	btfss	3,2
  5262  0430  2C39               	goto	l435
  5263                           
  5264                           ;teris_16f886.c: 1077: {
  5265                           ;teris_16f886.c: 1078: if(stop == -1)
  5266  0431  0A77               	incf	get_holes_after_merge@stop,w
  5267  0432  1D03               	btfss	3,2
  5268  0433  2C39               	goto	l435
  5269                           
  5270                           ;teris_16f886.c: 1079: {
  5271                           ;teris_16f886.c: 1080: stop = row + 1;
  5272  0434  087B               	movf	get_holes_after_merge@row,w
  5273  0435  3E01               	addlw	1
  5274  0436                     L6:	
  5275  0436  00F0               	movwf	??_get_holes_after_merge
  5276  0437  0870               	movf	??_get_holes_after_merge,w
  5277  0438  00F7               	movwf	get_holes_after_merge@stop
  5278  0439                     l435:	
  5279  0439  3001               	movlw	1
  5280  043A  00F0               	movwf	??_get_holes_after_merge
  5281  043B  0870               	movf	??_get_holes_after_merge,w
  5282  043C  07FB               	addwf	get_holes_after_merge@row,f
  5283  043D  087B               	movf	get_holes_after_merge@row,w
  5284  043E  3A80               	xorlw	128
  5285  043F  3E78               	addlw	-136
  5286  0440  1C03               	skipc
  5287  0441  2B80               	goto	l2931
  5288  0442                     l424:	
  5289                           
  5290                           ;teris_16f886.c: 1081: }
  5291                           ;teris_16f886.c: 1082: }
  5292                           ;teris_16f886.c: 1083: }
  5293                           ;teris_16f886.c: 1085: }
  5294                           ;teris_16f886.c: 1086: if((start >= 0) && (stop >= 0) && (stop - start >= 3))
  5295  0442  1FF8               	btfss	get_holes_after_merge@start,7
  5296  0443  1BF7               	btfsc	get_holes_after_merge@stop,7
  5297  0444  2C6B               	goto	l441
  5298  0445  0878               	movf	get_holes_after_merge@start,w
  5299  0446  00F0               	movwf	??_get_holes_after_merge
  5300  0447  01F1               	clrf	??_get_holes_after_merge+1
  5301  0448  1BF0               	btfsc	??_get_holes_after_merge,7
  5302  0449  03F1               	decf	??_get_holes_after_merge+1,f
  5303  044A  09F0               	comf	??_get_holes_after_merge,f
  5304  044B  09F1               	comf	??_get_holes_after_merge+1,f
  5305  044C  0AF0               	incf	??_get_holes_after_merge,f
  5306  044D  1903               	skipnz
  5307  044E  0AF1               	incf	??_get_holes_after_merge+1,f
  5308  044F  0877               	movf	get_holes_after_merge@stop,w
  5309  0450  00F2               	movwf	??_get_holes_after_merge+2
  5310  0451  01F3               	clrf	??_get_holes_after_merge+3
  5311  0452  1BF2               	btfsc	??_get_holes_after_merge+2,7
  5312  0453  03F3               	decf	??_get_holes_after_merge+3,f
  5313  0454  0870               	movf	??_get_holes_after_merge,w
  5314  0455  0772               	addwf	??_get_holes_after_merge+2,w
  5315  0456  00F4               	movwf	??_get_holes_after_merge+4
  5316  0457  0871               	movf	??_get_holes_after_merge+1,w
  5317  0458  1803               	skipnc
  5318  0459  0A71               	incf	??_get_holes_after_merge+1,w
  5319  045A  0773               	addwf	??_get_holes_after_merge+3,w
  5320  045B  00F5               	movwf	??_get_holes_after_merge+5
  5321  045C  0875               	movf	??_get_holes_after_merge+5,w
  5322  045D  3A80               	xorlw	128
  5323  045E  00FF               	movwf	127
  5324  045F  3080               	movlw	128
  5325  0460  027F               	subwf	127,w
  5326  0461  1D03               	skipz
  5327  0462  2C65               	goto	u3855
  5328  0463  3003               	movlw	3
  5329  0464  0274               	subwf	??_get_holes_after_merge+4,w
  5330  0465                     u3855:	
  5331  0465  1C03               	skipc
  5332  0466  2C6B               	goto	l441
  5333                           
  5334                           ;teris_16f886.c: 1087: {
  5335                           ;teris_16f886.c: 1093: num_hole++;
  5336  0467  3001               	movlw	1
  5337  0468  00F0               	movwf	??_get_holes_after_merge
  5338  0469  0870               	movf	??_get_holes_after_merge,w
  5339  046A  07F6               	addwf	get_holes_after_merge@num_hole,f
  5340  046B                     l441:	
  5341  046B  3001               	movlw	1
  5342  046C  00F0               	movwf	??_get_holes_after_merge
  5343  046D  0870               	movf	??_get_holes_after_merge,w
  5344  046E  07FA               	addwf	get_holes_after_merge@col,f
  5345  046F  087A               	movf	get_holes_after_merge@col,w
  5346  0470  3A80               	xorlw	128
  5347  0471  3E78               	addlw	-136
  5348  0472  1C03               	skipc
  5349  0473  2B75               	goto	l2923
  5350  0474                     l2985:	
  5351                           
  5352                           ;teris_16f886.c: 1094: }
  5353                           ;teris_16f886.c: 1095: }
  5354                           ;teris_16f886.c: 1099: return num_hole;
  5355  0474  0876               	movf	get_holes_after_merge@num_hole,w
  5356  0475  0008               	return
  5357  0476                     __end_of_get_holes_after_merge:	
  5358                           
  5359                           	psect	text20
  5360  0CEB                     __ptext20:	
  5361 ;; *************** function _get_high_after_merge *****************
  5362 ;; Defined at:
  5363 ;;		line 1006 in file "teris_16f886.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  y               1    wreg     char 
  5366 ;;  matrix          2    0[COMMON] PTR struct .
  5367 ;;		 -> NULL(0), g_matrix44(384), 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  y               1    6[COMMON] char 
  5370 ;;  col             1    7[COMMON] char 
  5371 ;;  row             1    8[COMMON] char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      unsigned char 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5381 ;;      Params:         2       0       0       0       0
  5382 ;;      Locals:         3       0       0       0       0
  5383 ;;      Temps:          4       0       0       0       0
  5384 ;;      Totals:         9       0       0       0       0
  5385 ;;Total ram usage:        9 bytes
  5386 ;; Hardware stack levels used:    2
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_find_best_solution
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           
  5395                           ;psect for function _get_high_after_merge
  5396  0CEB                     _get_high_after_merge:	
  5397                           
  5398                           ;incstack = 0
  5399                           ; Regs used in _get_high_after_merge: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5400                           ;get_high_after_merge@y stored from wreg
  5401  0CEB  00F6               	movwf	get_high_after_merge@y
  5402                           
  5403                           ;teris_16f886.c: 1011: for(int8_t row = 0; row < 4; row++)
  5404  0CEC  01F8               	clrf	get_high_after_merge@row
  5405  0CED                     L8:	
  5406  0CED  0878               	movf	get_high_after_merge@row,w
  5407  0CEE  3A80               	xorlw	128
  5408  0CEF  3E7C               	addlw	-132
  5409  0CF0  1803               	btfsc	3,0
  5410  0CF1  0008               	return
  5411                           
  5412                           ;teris_16f886.c: 1012: {
  5413                           ;teris_16f886.c: 1013: for(int8_t col = 0; col < 4; col++)
  5414  0CF2  01F7               	clrf	get_high_after_merge@col
  5415  0CF3  0877               	movf	get_high_after_merge@col,w
  5416  0CF4  3A80               	xorlw	128
  5417  0CF5  3E7C               	addlw	-132
  5418  0CF6  1803               	btfsc	3,0
  5419  0CF7  2D29               	goto	l2911
  5420  0CF8                     l2901:	
  5421                           
  5422                           ;teris_16f886.c: 1014: {
  5423                           ;teris_16f886.c: 1015: if(matrix->data[row][col] == 1)
  5424  0CF8  0878               	movf	get_high_after_merge@row,w
  5425  0CF9  00F2               	movwf	??_get_high_after_merge
  5426  0CFA  01F3               	clrf	??_get_high_after_merge+1
  5427  0CFB  1003               	clrc
  5428  0CFC  0DF2               	rlf	??_get_high_after_merge,f
  5429  0CFD  0DF3               	rlf	??_get_high_after_merge+1,f
  5430  0CFE  1003               	clrc
  5431  0CFF  0DF2               	rlf	??_get_high_after_merge,f
  5432  0D00  0DF3               	rlf	??_get_high_after_merge+1,f
  5433  0D01  0872               	movf	??_get_high_after_merge,w
  5434  0D02  0770               	addwf	get_high_after_merge@matrix,w
  5435  0D03  00F4               	movwf	??_get_high_after_merge+2
  5436  0D04  0873               	movf	??_get_high_after_merge+1,w
  5437  0D05  1803               	skipnc
  5438  0D06  0A73               	incf	??_get_high_after_merge+1,w
  5439  0D07  0771               	addwf	get_high_after_merge@matrix+1,w
  5440  0D08  00F5               	movwf	??_get_high_after_merge+3
  5441  0D09  0877               	movf	get_high_after_merge@col,w
  5442  0D0A  0774               	addwf	??_get_high_after_merge+2,w
  5443  0D0B  0084               	movwf	4
  5444  0D0C  0875               	movf	??_get_high_after_merge+3,w
  5445  0D0D  1803               	skipnc
  5446  0D0E  0A75               	incf	??_get_high_after_merge+3,w
  5447  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  5448  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  5449  0D11  00FF               	movwf	127
  5450  0D12  120A  158A  2000  120A  158A  	fcall	stringtab
  5451  0D17  3A01               	xorlw	1
  5452  0D18  1D03               	skipz
  5453  0D19  2D20               	goto	l2907
  5454                           
  5455                           ;teris_16f886.c: 1016: {
  5456                           ;teris_16f886.c: 1022: return (uint8_t)(8 - y - row);
  5457  0D1A  0878               	movf	get_high_after_merge@row,w
  5458  0D1B  0776               	addwf	get_high_after_merge@y,w
  5459  0D1C  3AFF               	xorlw	255
  5460  0D1D  3E01               	addlw	1
  5461  0D1E  3E08               	addlw	8
  5462  0D1F  0008               	return
  5463  0D20                     l2907:	
  5464  0D20  3001               	movlw	1
  5465  0D21  00F2               	movwf	??_get_high_after_merge
  5466  0D22  0872               	movf	??_get_high_after_merge,w
  5467  0D23  07F7               	addwf	get_high_after_merge@col,f
  5468  0D24  0877               	movf	get_high_after_merge@col,w
  5469  0D25  3A80               	xorlw	128
  5470  0D26  3E7C               	addlw	-132
  5471  0D27  1C03               	skipc
  5472  0D28  2CF8               	goto	l2901
  5473  0D29                     l2911:	
  5474  0D29  3001               	movlw	1
  5475  0D2A  00F2               	movwf	??_get_high_after_merge
  5476  0D2B  0872               	movf	??_get_high_after_merge,w
  5477  0D2C  07F8               	addwf	get_high_after_merge@row,f
  5478  0D2D  2CED               	goto	L8
  5479  0D2E                     __end_of_get_high_after_merge:	
  5480                           
  5481                           	psect	text21
  5482  0B4D                     __ptext21:	
  5483 ;; *************** function _get_high *****************
  5484 ;; Defined at:
  5485 ;;		line 992 in file "teris_16f886.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  matrix          1    wreg     PTR struct .
  5488 ;;		 -> g_matrix88(64), 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  matrix          1    7[COMMON] PTR struct .
  5491 ;;		 -> g_matrix88(64), 
  5492 ;;  row             1    8[COMMON] char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      unsigned char 
  5495 ;; Registers used:
  5496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5502 ;;      Params:         0       0       0       0       0
  5503 ;;      Locals:         2       0       0       0       0
  5504 ;;      Temps:          1       0       0       0       0
  5505 ;;      Totals:         3       0       0       0       0
  5506 ;;Total ram usage:        3 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    1
  5509 ;; This function calls:
  5510 ;;		_is_row_empty
  5511 ;; This function is called by:
  5512 ;;		_find_best_solution
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           
  5517                           ;psect for function _get_high
  5518  0B4D                     _get_high:	
  5519                           
  5520                           ;incstack = 0
  5521                           ; Regs used in _get_high: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5522                           ;get_high@matrix stored from wreg
  5523  0B4D  00F7               	movwf	get_high@matrix
  5524                           
  5525                           ;teris_16f886.c: 994: for(int8_t row = 8 - 1; row >= 0; row--)
  5526  0B4E  3007               	movlw	7
  5527  0B4F  00F6               	movwf	??_get_high
  5528  0B50  0876               	movf	??_get_high,w
  5529  0B51  00F8               	movwf	get_high@row
  5530  0B52  1BF8               	btfsc	get_high@row,7
  5531  0B53  2B6D               	goto	l2885
  5532  0B54                     l2875:	
  5533                           
  5534                           ;teris_16f886.c: 995: {
  5535                           ;teris_16f886.c: 996: if(is_row_empty(matrix, row) == 1)
  5536  0B54  0878               	movf	get_high@row,w
  5537  0B55  00F6               	movwf	??_get_high
  5538  0B56  0876               	movf	??_get_high,w
  5539  0B57  00F0               	movwf	is_row_empty@row
  5540  0B58  0877               	movf	get_high@matrix,w
  5541  0B59  120A  158A  2428  120A  158A  	fcall	_is_row_empty
  5542  0B5E  3A01               	xorlw	1
  5543  0B5F  1D03               	skipz
  5544  0B60  2B67               	goto	l2881
  5545                           
  5546                           ;teris_16f886.c: 997: {
  5547                           ;teris_16f886.c: 1001: return (uint8_t)(8 - row - 1);
  5548  0B61  0878               	movf	get_high@row,w
  5549  0B62  3E01               	addlw	1
  5550  0B63  3AFF               	xorlw	255
  5551  0B64  3E01               	addlw	1
  5552  0B65  3E08               	addlw	8
  5553  0B66  0008               	return
  5554  0B67                     l2881:	
  5555  0B67  30FF               	movlw	255
  5556  0B68  00F6               	movwf	??_get_high
  5557  0B69  0876               	movf	??_get_high,w
  5558  0B6A  07F8               	addwf	get_high@row,f
  5559  0B6B  1FF8               	btfss	get_high@row,7
  5560  0B6C  2B54               	goto	l2875
  5561  0B6D                     l2885:	
  5562                           
  5563                           ;teris_16f886.c: 1002: }
  5564                           ;teris_16f886.c: 1003: }
  5565                           ;teris_16f886.c: 1004: return 8;
  5566  0B6D  3008               	movlw	8
  5567  0B6E  0008               	return
  5568  0B6F                     __end_of_get_high:	
  5569                           
  5570                           	psect	text22
  5571  0C28                     __ptext22:	
  5572 ;; *************** function _is_row_empty *****************
  5573 ;; Defined at:
  5574 ;;		line 665 in file "teris_16f886.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  matrix          1    wreg     PTR const struct .
  5577 ;;		 -> g_matrix88(64), 
  5578 ;;  row             1    0[COMMON] unsigned char 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  matrix          1    4[COMMON] PTR const struct .
  5581 ;;		 -> g_matrix88(64), 
  5582 ;;  col             1    5[COMMON] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      unsigned char 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5592 ;;      Params:         1       0       0       0       0
  5593 ;;      Locals:         2       0       0       0       0
  5594 ;;      Temps:          3       0       0       0       0
  5595 ;;      Totals:         6       0       0       0       0
  5596 ;;Total ram usage:        6 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_get_high
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function _is_row_empty
  5607  0C28                     _is_row_empty:	
  5608                           
  5609                           ;incstack = 0
  5610                           ; Regs used in _is_row_empty: [wreg-fsr0h+status,2+status,0]
  5611                           ;is_row_empty@matrix stored from wreg
  5612  0C28  00F4               	movwf	is_row_empty@matrix
  5613                           
  5614                           ;teris_16f886.c: 667: for(uint8_t col = 0; col < 8; col++)
  5615  0C29  01F5               	clrf	is_row_empty@col
  5616  0C2A  3008               	movlw	8
  5617  0C2B  0275               	subwf	is_row_empty@col,w
  5618  0C2C  1803               	btfsc	3,0
  5619  0C2D  2C4D               	goto	l2527
  5620  0C2E                     l2517:	
  5621                           
  5622                           ;teris_16f886.c: 668: {
  5623                           ;teris_16f886.c: 669: if(matrix->data[row][col] == 1)
  5624  0C2E  0870               	movf	is_row_empty@row,w
  5625  0C2F  00F1               	movwf	??_is_row_empty
  5626  0C30  3002               	movlw	2
  5627  0C31                     u2645:	
  5628  0C31  1003               	clrc
  5629  0C32  0DF1               	rlf	??_is_row_empty,f
  5630  0C33  3EFF               	addlw	-1
  5631  0C34  1D03               	skipz
  5632  0C35  2C31               	goto	u2645
  5633  0C36  1003               	clrc
  5634  0C37  0D71               	rlf	??_is_row_empty,w
  5635  0C38  0774               	addwf	is_row_empty@matrix,w
  5636  0C39  00F2               	movwf	??_is_row_empty+1
  5637  0C3A  0875               	movf	is_row_empty@col,w
  5638  0C3B  0772               	addwf	??_is_row_empty+1,w
  5639  0C3C  00F3               	movwf	??_is_row_empty+2
  5640  0C3D  0873               	movf	??_is_row_empty+2,w
  5641  0C3E  0084               	movwf	4
  5642  0C3F  1783               	bsf	3,7	;select IRP bank2
  5643  0C40  0300               	decf	0,w
  5644  0C41  1D03               	btfss	3,2
  5645  0C42  2C45               	goto	l2523
  5646                           
  5647                           ;teris_16f886.c: 670: {
  5648                           ;teris_16f886.c: 671: return 0;
  5649  0C43  3000               	movlw	0
  5650  0C44  0008               	return
  5651  0C45                     l2523:	
  5652  0C45  3001               	movlw	1
  5653  0C46  00F1               	movwf	??_is_row_empty
  5654  0C47  0871               	movf	??_is_row_empty,w
  5655  0C48  07F5               	addwf	is_row_empty@col,f
  5656  0C49  3008               	movlw	8
  5657  0C4A  0275               	subwf	is_row_empty@col,w
  5658  0C4B  1C03               	skipc
  5659  0C4C  2C2E               	goto	l2517
  5660  0C4D                     l2527:	
  5661                           
  5662                           ;teris_16f886.c: 672: }
  5663                           ;teris_16f886.c: 673: }
  5664                           ;teris_16f886.c: 674: return 1;
  5665  0C4D  3001               	movlw	1
  5666  0C4E  0008               	return
  5667  0C4F                     __end_of_is_row_empty:	
  5668                           
  5669                           	psect	text23
  5670  0257                     __ptext23:	
  5671 ;; *************** function _get_heavy *****************
  5672 ;; Defined at:
  5673 ;;		line 917 in file "teris_16f886.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  matrix          1    wreg     PTR const struct .
  5676 ;;		 -> temp_matrix88(64), 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  matrix          1    9[COMMON] PTR const struct .
  5679 ;;		 -> temp_matrix88(64), 
  5680 ;;  row             1   12[COMMON] char 
  5681 ;;  col             1   11[COMMON] unsigned char 
  5682 ;;  risk            2    6[COMMON] unsigned int 
  5683 ;;  pre             1   10[COMMON] unsigned char 
  5684 ;;  start           1    8[COMMON] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  2    0[COMMON] unsigned int 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5694 ;;      Params:         2       0       0       0       0
  5695 ;;      Locals:         7       0       0       0       0
  5696 ;;      Temps:          4       0       0       0       0
  5697 ;;      Totals:        13       0       0       0       0
  5698 ;;Total ram usage:       13 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_find_best_solution
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           
  5708                           ;psect for function _get_heavy
  5709  0257                     _get_heavy:	
  5710                           
  5711                           ;incstack = 0
  5712                           ; Regs used in _get_heavy: [wreg-fsr0h+status,2+status,0]
  5713                           ;get_heavy@matrix stored from wreg
  5714  0257  00F9               	movwf	get_heavy@matrix
  5715                           
  5716                           ;teris_16f886.c: 919: uint8_t start;
  5717                           ;teris_16f886.c: 920: uint16_t risk = 0;
  5718  0258  01F6               	clrf	get_heavy@risk
  5719  0259  01F7               	clrf	get_heavy@risk+1
  5720                           
  5721                           ;teris_16f886.c: 921: uint8_t pre = 0xFF;
  5722  025A  30FF               	movlw	255
  5723  025B  00F2               	movwf	??_get_heavy
  5724  025C  0872               	movf	??_get_heavy,w
  5725  025D  00FA               	movwf	get_heavy@pre
  5726                           
  5727                           ;teris_16f886.c: 922: for(uint8_t col = 0; col < 8; col++)
  5728  025E  01FB               	clrf	get_heavy@col
  5729  025F  3008               	movlw	8
  5730  0260  027B               	subwf	get_heavy@col,w
  5731  0261  1803               	btfsc	3,0
  5732  0262  2AD1               	goto	l2841
  5733  0263                     l2807:	
  5734                           
  5735                           ;teris_16f886.c: 923: {
  5736                           ;teris_16f886.c: 924: pre = 0xFF;
  5737  0263  30FF               	movlw	255
  5738  0264  00F2               	movwf	??_get_heavy
  5739  0265  0872               	movf	??_get_heavy,w
  5740  0266  00FA               	movwf	get_heavy@pre
  5741                           
  5742                           ;teris_16f886.c: 925: start = 0;
  5743  0267  01F8               	clrf	get_heavy@start
  5744                           
  5745                           ;teris_16f886.c: 926: for(int8_t row = 8 - 1; row >= 0; row--)
  5746  0268  3007               	movlw	7
  5747  0269  00F2               	movwf	??_get_heavy
  5748  026A  0872               	movf	??_get_heavy,w
  5749  026B  00FC               	movwf	get_heavy@row
  5750  026C  1BFC               	btfsc	get_heavy@row,7
  5751  026D  2AC9               	goto	l2837
  5752  026E                     l2817:	
  5753                           
  5754                           ;teris_16f886.c: 927: {
  5755                           ;teris_16f886.c: 928: if(pre == 0xFF)
  5756  026E  0A7A               	incf	get_heavy@pre,w
  5757  026F  1D03               	btfss	3,2
  5758  0270  2A88               	goto	l2821
  5759                           
  5760                           ;teris_16f886.c: 929: {
  5761                           ;teris_16f886.c: 930: pre = matrix->data[row][col];
  5762  0271  087C               	movf	get_heavy@row,w
  5763  0272  00F2               	movwf	??_get_heavy
  5764  0273  3002               	movlw	2
  5765  0274                     u3365:	
  5766  0274  1003               	clrc
  5767  0275  0DF2               	rlf	??_get_heavy,f
  5768  0276  3EFF               	addlw	-1
  5769  0277  1D03               	skipz
  5770  0278  2A74               	goto	u3365
  5771  0279  1003               	clrc
  5772  027A  0D72               	rlf	??_get_heavy,w
  5773  027B  0779               	addwf	get_heavy@matrix,w
  5774  027C  00F3               	movwf	??_get_heavy+1
  5775  027D  087B               	movf	get_heavy@col,w
  5776  027E  0773               	addwf	??_get_heavy+1,w
  5777  027F  00F4               	movwf	??_get_heavy+2
  5778  0280  0874               	movf	??_get_heavy+2,w
  5779  0281  0084               	movwf	4
  5780  0282  1783               	bsf	3,7	;select IRP bank2
  5781  0283  0800               	movf	0,w
  5782  0284  00F5               	movwf	??_get_heavy+3
  5783  0285  0875               	movf	??_get_heavy+3,w
  5784  0286  00FA               	movwf	get_heavy@pre
  5785                           
  5786                           ;teris_16f886.c: 931: }
  5787  0287  2AC3               	goto	l2833
  5788  0288                     l2821:	
  5789                           
  5790                           ;teris_16f886.c: 932: else
  5791                           ;teris_16f886.c: 933: {
  5792                           ;teris_16f886.c: 934: if(pre != matrix->data[row][col])
  5793  0288  087C               	movf	get_heavy@row,w
  5794  0289  00F2               	movwf	??_get_heavy
  5795  028A  3002               	movlw	2
  5796  028B                     u3375:	
  5797  028B  1003               	clrc
  5798  028C  0DF2               	rlf	??_get_heavy,f
  5799  028D  3EFF               	addlw	-1
  5800  028E  1D03               	skipz
  5801  028F  2A8B               	goto	u3375
  5802  0290  1003               	clrc
  5803  0291  0D72               	rlf	??_get_heavy,w
  5804  0292  0779               	addwf	get_heavy@matrix,w
  5805  0293  00F3               	movwf	??_get_heavy+1
  5806  0294  087B               	movf	get_heavy@col,w
  5807  0295  0773               	addwf	??_get_heavy+1,w
  5808  0296  00F4               	movwf	??_get_heavy+2
  5809  0297  0874               	movf	??_get_heavy+2,w
  5810  0298  0084               	movwf	4
  5811  0299  1783               	bsf	3,7	;select IRP bank2
  5812  029A  0800               	movf	0,w
  5813  029B  067A               	xorwf	get_heavy@pre,w
  5814  029C  1903               	skipnz
  5815  029D  2ABA               	goto	l2829
  5816                           
  5817                           ;teris_16f886.c: 935: {
  5818                           ;teris_16f886.c: 936: pre = matrix->data[row][col];
  5819  029E  087C               	movf	get_heavy@row,w
  5820  029F  00F2               	movwf	??_get_heavy
  5821  02A0  3002               	movlw	2
  5822  02A1                     u3395:	
  5823  02A1  1003               	clrc
  5824  02A2  0DF2               	rlf	??_get_heavy,f
  5825  02A3  3EFF               	addlw	-1
  5826  02A4  1D03               	skipz
  5827  02A5  2AA1               	goto	u3395
  5828  02A6  1003               	clrc
  5829  02A7  0D72               	rlf	??_get_heavy,w
  5830  02A8  0779               	addwf	get_heavy@matrix,w
  5831  02A9  00F3               	movwf	??_get_heavy+1
  5832  02AA  087B               	movf	get_heavy@col,w
  5833  02AB  0773               	addwf	??_get_heavy+1,w
  5834  02AC  00F4               	movwf	??_get_heavy+2
  5835  02AD  0874               	movf	??_get_heavy+2,w
  5836  02AE  0084               	movwf	4
  5837  02AF  0800               	movf	0,w
  5838  02B0  00F5               	movwf	??_get_heavy+3
  5839  02B1  0875               	movf	??_get_heavy+3,w
  5840  02B2  00FA               	movwf	get_heavy@pre
  5841                           
  5842                           ;teris_16f886.c: 937: if(pre == 0)
  5843  02B3  087A               	movf	get_heavy@pre,w
  5844  02B4  1D03               	btfss	3,2
  5845  02B5  2AB8               	goto	l384
  5846                           
  5847                           ;teris_16f886.c: 938: {
  5848                           ;teris_16f886.c: 939: start = 0;
  5849  02B6  01F8               	clrf	get_heavy@start
  5850                           
  5851                           ;teris_16f886.c: 940: }
  5852  02B7  2ABA               	goto	l2829
  5853  02B8                     l384:	
  5854                           
  5855                           ;teris_16f886.c: 941: else
  5856                           ;teris_16f886.c: 942: {
  5857                           ;teris_16f886.c: 943: start = 1;
  5858  02B8  01F8               	clrf	get_heavy@start
  5859  02B9  0AF8               	incf	get_heavy@start,f
  5860  02BA                     l2829:	
  5861                           
  5862                           ;teris_16f886.c: 944: }
  5863                           ;teris_16f886.c: 945: }
  5864                           ;teris_16f886.c: 946: if(start == 1)
  5865  02BA  0378               	decf	get_heavy@start,w
  5866  02BB  1D03               	btfss	3,2
  5867  02BC  2AC3               	goto	l2833
  5868                           
  5869                           ;teris_16f886.c: 947: {
  5870                           ;teris_16f886.c: 948: risk++;
  5871  02BD  3001               	movlw	1
  5872  02BE  07F6               	addwf	get_heavy@risk,f
  5873  02BF  1803               	skipnc
  5874  02C0  0AF7               	incf	get_heavy@risk+1,f
  5875  02C1  3000               	movlw	0
  5876  02C2  07F7               	addwf	get_heavy@risk+1,f
  5877  02C3                     l2833:	
  5878  02C3  30FF               	movlw	255
  5879  02C4  00F2               	movwf	??_get_heavy
  5880  02C5  0872               	movf	??_get_heavy,w
  5881  02C6  07FC               	addwf	get_heavy@row,f
  5882  02C7  1FFC               	btfss	get_heavy@row,7
  5883  02C8  2A6E               	goto	l2817
  5884  02C9                     l2837:	
  5885  02C9  3001               	movlw	1
  5886  02CA  00F2               	movwf	??_get_heavy
  5887  02CB  0872               	movf	??_get_heavy,w
  5888  02CC  07FB               	addwf	get_heavy@col,f
  5889  02CD  3008               	movlw	8
  5890  02CE  027B               	subwf	get_heavy@col,w
  5891  02CF  1C03               	skipc
  5892  02D0  2A63               	goto	l2807
  5893  02D1                     l2841:	
  5894                           
  5895                           ;teris_16f886.c: 949: }
  5896                           ;teris_16f886.c: 950: }
  5897                           ;teris_16f886.c: 951: }
  5898                           ;teris_16f886.c: 952: }
  5899                           ;teris_16f886.c: 957: return risk;
  5900  02D1  0877               	movf	get_heavy@risk+1,w
  5901  02D2  00F1               	movwf	?_get_heavy+1
  5902  02D3  0876               	movf	get_heavy@risk,w
  5903  02D4  00F0               	movwf	?_get_heavy
  5904  02D5  0008               	return
  5905  02D6                     __end_of_get_heavy:	
  5906                           
  5907                           	psect	text24
  5908  01E3                     __ptext24:	
  5909 ;; *************** function _fall_off *****************
  5910 ;; Defined at:
  5911 ;;		line 806 in file "teris_16f886.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  x               1    wreg     char 
  5914 ;;  y               1    0[COMMON] char 
  5915 ;;  matrix44        2    1[COMMON] PTR const struct .
  5916 ;;		 -> NULL(0), g_matrix44(384), 
  5917 ;;  matrix88        1    3[COMMON] PTR const struct .
  5918 ;;		 -> g_matrix88(64), 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;  x               1    8[COMMON] char 
  5921 ;;  col             1    9[COMMON] char 
  5922 ;;  row             1   10[COMMON] char 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      unsigned char 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5932 ;;      Params:         4       0       0       0       0
  5933 ;;      Locals:         3       0       0       0       0
  5934 ;;      Temps:          4       0       0       0       0
  5935 ;;      Totals:        11       0       0       0       0
  5936 ;;Total ram usage:       11 bytes
  5937 ;; Hardware stack levels used:    2
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_find_best_solution
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function _fall_off
  5947  01E3                     _fall_off:	
  5948                           
  5949                           ;incstack = 0
  5950                           ; Regs used in _fall_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5951                           ;fall_off@x stored from wreg
  5952  01E3  00F8               	movwf	fall_off@x
  5953  01E4                     l329:	
  5954                           ;teris_16f886.c: 808: while(1)
  5955                           
  5956                           
  5957                           ;teris_16f886.c: 809: {
  5958                           ;teris_16f886.c: 810: for(int8_t row = 4 - 1; row >= 0; row--)
  5959  01E4  3003               	movlw	3
  5960  01E5  00F4               	movwf	??_fall_off
  5961  01E6  0874               	movf	??_fall_off,w
  5962  01E7  00FA               	movwf	fall_off@row
  5963  01E8  1BFA               	btfsc	fall_off@row,7
  5964  01E9  2A52               	goto	l2731
  5965  01EA                     l2703:	
  5966                           
  5967                           ;teris_16f886.c: 811: {
  5968                           ;teris_16f886.c: 812: for(int8_t col = 0; col < 4; col++)
  5969  01EA  01F9               	clrf	fall_off@col
  5970  01EB  0879               	movf	fall_off@col,w
  5971  01EC  3A80               	xorlw	128
  5972  01ED  3E7C               	addlw	-132
  5973  01EE  1803               	btfsc	3,0
  5974  01EF  2A4C               	goto	l2727
  5975  01F0                     l2709:	
  5976                           
  5977                           ;teris_16f886.c: 813: {
  5978                           ;teris_16f886.c: 814: if(matrix44->data[row][col] == 1)
  5979  01F0  087A               	movf	fall_off@row,w
  5980  01F1  00F4               	movwf	??_fall_off
  5981  01F2  01F5               	clrf	??_fall_off+1
  5982  01F3  1003               	clrc
  5983  01F4  0DF4               	rlf	??_fall_off,f
  5984  01F5  0DF5               	rlf	??_fall_off+1,f
  5985  01F6  1003               	clrc
  5986  01F7  0DF4               	rlf	??_fall_off,f
  5987  01F8  0DF5               	rlf	??_fall_off+1,f
  5988  01F9  0874               	movf	??_fall_off,w
  5989  01FA  0771               	addwf	fall_off@matrix44,w
  5990  01FB  00F6               	movwf	??_fall_off+2
  5991  01FC  0875               	movf	??_fall_off+1,w
  5992  01FD  1803               	skipnc
  5993  01FE  0A75               	incf	??_fall_off+1,w
  5994  01FF  0772               	addwf	fall_off@matrix44+1,w
  5995  0200  00F7               	movwf	??_fall_off+3
  5996  0201  0879               	movf	fall_off@col,w
  5997  0202  0776               	addwf	??_fall_off+2,w
  5998  0203  0084               	movwf	4
  5999  0204  0877               	movf	??_fall_off+3,w
  6000  0205  1803               	skipnc
  6001  0206  0A77               	incf	??_fall_off+3,w
  6002  0207  1283               	bcf	3,5	;RP0=0, select bank0
  6003  0208  1303               	bcf	3,6	;RP1=0, select bank0
  6004  0209  00FF               	movwf	127
  6005  020A  120A  158A  2000  120A  118A  	fcall	stringtab
  6006  020F  3A01               	xorlw	1
  6007  0210  1D03               	skipz
  6008  0211  2A43               	goto	l2723
  6009                           
  6010                           ;teris_16f886.c: 815: {
  6011                           ;teris_16f886.c: 816: if(matrix88->data[y + row + 1][x + col] == 1)
  6012  0212  0879               	movf	fall_off@col,w
  6013  0213  0778               	addwf	fall_off@x,w
  6014  0214  0773               	addwf	fall_off@matrix88,w
  6015  0215  00F4               	movwf	??_fall_off
  6016  0216  087A               	movf	fall_off@row,w
  6017  0217  0770               	addwf	fall_off@y,w
  6018  0218  00F5               	movwf	??_fall_off+1
  6019  0219  3002               	movlw	2
  6020  021A                     u3115:	
  6021  021A  1003               	clrc
  6022  021B  0DF5               	rlf	??_fall_off+1,f
  6023  021C  3EFF               	addlw	-1
  6024  021D  1D03               	skipz
  6025  021E  2A1A               	goto	u3115
  6026  021F  1003               	clrc
  6027  0220  0D75               	rlf	??_fall_off+1,w
  6028  0221  3E08               	addlw	8
  6029  0222  0774               	addwf	??_fall_off,w
  6030  0223  00F6               	movwf	??_fall_off+2
  6031  0224  0876               	movf	??_fall_off+2,w
  6032  0225  0084               	movwf	4
  6033  0226  1783               	bsf	3,7	;select IRP bank2
  6034  0227  0300               	decf	0,w
  6035  0228  1D03               	btfss	3,2
  6036  0229  2A2C               	goto	l2717
  6037                           
  6038                           ;teris_16f886.c: 817: {
  6039                           ;teris_16f886.c: 822: return y;
  6040  022A  0870               	movf	fall_off@y,w
  6041  022B  0008               	return
  6042  022C                     l2717:	
  6043                           
  6044                           ;teris_16f886.c: 823: }
  6045                           ;teris_16f886.c: 824: if((y + row) >= (8 - 1))
  6046  022C  0870               	movf	fall_off@y,w
  6047  022D  077A               	addwf	fall_off@row,w
  6048  022E  00F4               	movwf	??_fall_off
  6049  022F  01F5               	clrf	??_fall_off+1
  6050  0230  1803               	skipnc
  6051  0231  0AF5               	incf	??_fall_off+1,f
  6052  0232  1BF0               	btfsc	fall_off@y,7
  6053  0233  03F5               	decf	??_fall_off+1,f
  6054  0234  1BFA               	btfsc	fall_off@row,7
  6055  0235  03F5               	decf	??_fall_off+1,f
  6056  0236  0875               	movf	??_fall_off+1,w
  6057  0237  3A80               	xorlw	128
  6058  0238  00FF               	movwf	127
  6059  0239  3080               	movlw	128
  6060  023A  027F               	subwf	127,w
  6061  023B  1D03               	skipz
  6062  023C  2A3F               	goto	u3145
  6063  023D  3007               	movlw	7
  6064  023E  0274               	subwf	??_fall_off,w
  6065  023F                     u3145:	
  6066  023F  1C03               	skipc
  6067  0240  2A43               	goto	l2723
  6068                           
  6069                           ;teris_16f886.c: 825: {
  6070                           ;teris_16f886.c: 830: return y;
  6071  0241  0870               	movf	fall_off@y,w
  6072  0242  0008               	return
  6073  0243                     l2723:	
  6074  0243  3001               	movlw	1
  6075  0244  00F4               	movwf	??_fall_off
  6076  0245  0874               	movf	??_fall_off,w
  6077  0246  07F9               	addwf	fall_off@col,f
  6078  0247  0879               	movf	fall_off@col,w
  6079  0248  3A80               	xorlw	128
  6080  0249  3E7C               	addlw	-132
  6081  024A  1C03               	skipc
  6082  024B  29F0               	goto	l2709
  6083  024C                     l2727:	
  6084  024C  30FF               	movlw	255
  6085  024D  00F4               	movwf	??_fall_off
  6086  024E  0874               	movf	??_fall_off,w
  6087  024F  07FA               	addwf	fall_off@row,f
  6088  0250  1FFA               	btfss	fall_off@row,7
  6089  0251  29EA               	goto	l2703
  6090  0252                     l2731:	
  6091                           
  6092                           ;teris_16f886.c: 831: }
  6093                           ;teris_16f886.c: 832: }
  6094                           ;teris_16f886.c: 833: }
  6095                           ;teris_16f886.c: 834: }
  6096                           ;teris_16f886.c: 835: y++;
  6097  0252  3001               	movlw	1
  6098  0253  00F4               	movwf	??_fall_off
  6099  0254  0874               	movf	??_fall_off,w
  6100  0255  07F0               	addwf	fall_off@y,f
  6101  0256  29E4               	goto	l329
  6102  0257                     __end_of_fall_off:	
  6103                           
  6104                           	psect	text25
  6105  0B6F                     __ptext25:	
  6106 ;; *************** function ___wmul *****************
  6107 ;; Defined at:
  6108 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6111 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  product         2   12[COMMON] unsigned int 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  2    0[BANK0 ] unsigned int 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2, status,0
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6123 ;;      Params:         0       4       0       0       0
  6124 ;;      Locals:         2       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0
  6126 ;;      Totals:         2       4       0       0       0
  6127 ;;Total ram usage:        6 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		_find_best_solution
  6133 ;;		_sprintf
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           
  6138                           ;psect for function ___wmul
  6139  0B6F                     ___wmul:	
  6140                           
  6141                           ;incstack = 0
  6142                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6143  0B6F  01FC               	clrf	___wmul@product
  6144  0B70  01FD               	clrf	___wmul@product+1
  6145  0B71                     l2991:	
  6146  0B71  1283               	bcf	3,5	;RP0=0, select bank0
  6147  0B72  1303               	bcf	3,6	;RP1=0, select bank0
  6148  0B73  1C20               	btfss	___wmul@multiplier,0
  6149  0B74  2B7B               	goto	l706
  6150  0B75  0822               	movf	___wmul@multiplicand,w
  6151  0B76  07FC               	addwf	___wmul@product,f
  6152  0B77  1803               	skipnc
  6153  0B78  0AFD               	incf	___wmul@product+1,f
  6154  0B79  0823               	movf	___wmul@multiplicand+1,w
  6155  0B7A  07FD               	addwf	___wmul@product+1,f
  6156  0B7B                     l706:	
  6157  0B7B  3001               	movlw	1
  6158  0B7C                     u3885:	
  6159  0B7C  1003               	clrc
  6160  0B7D  0DA2               	rlf	___wmul@multiplicand,f
  6161  0B7E  0DA3               	rlf	___wmul@multiplicand+1,f
  6162  0B7F  3EFF               	addlw	-1
  6163  0B80  1D03               	skipz
  6164  0B81  2B7C               	goto	u3885
  6165  0B82  3001               	movlw	1
  6166  0B83                     u3895:	
  6167  0B83  1003               	clrc
  6168  0B84  0CA1               	rrf	___wmul@multiplier+1,f
  6169  0B85  0CA0               	rrf	___wmul@multiplier,f
  6170  0B86  3EFF               	addlw	-1
  6171  0B87  1D03               	skipz
  6172  0B88  2B83               	goto	u3895
  6173  0B89  0820               	movf	___wmul@multiplier,w
  6174  0B8A  0421               	iorwf	___wmul@multiplier+1,w
  6175  0B8B  1D03               	btfss	3,2
  6176  0B8C  2B71               	goto	l2991
  6177  0B8D  087D               	movf	___wmul@product+1,w
  6178  0B8E  00A1               	movwf	?___wmul+1
  6179  0B8F  087C               	movf	___wmul@product,w
  6180  0B90  00A0               	movwf	?___wmul
  6181  0B91  0008               	return
  6182  0B92                     __end_of___wmul:	
  6183                           
  6184                           	psect	text26
  6185  17CD                     __ptext26:	
  6186 ;; *************** function ___bmul *****************
  6187 ;; Defined at:
  6188 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  multiplier      1    wreg     unsigned char 
  6191 ;;  multiplicand    1    0[COMMON] unsigned char 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;  multiplier      1    3[COMMON] unsigned char 
  6194 ;;  product         1    2[COMMON] unsigned char 
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      unsigned char 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6204 ;;      Params:         1       0       0       0       0
  6205 ;;      Locals:         2       0       0       0       0
  6206 ;;      Temps:          1       0       0       0       0
  6207 ;;      Totals:         4       0       0       0       0
  6208 ;;Total ram usage:        4 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_find_best_solution
  6214 ;;		_main
  6215 ;;		_printf_debug_cur_MATRIX44
  6216 ;;		_get_MATRIX44
  6217 ;;		_printf_debug_all_MATRIX44
  6218 ;;		_sprintf
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           
  6223                           ;psect for function ___bmul
  6224  17CD                     ___bmul:	
  6225                           
  6226                           ;incstack = 0
  6227                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6228                           ;___bmul@multiplier stored from wreg
  6229  17CD  00F3               	movwf	___bmul@multiplier
  6230  17CE  01F2               	clrf	___bmul@product
  6231  17CF                     l3005:	
  6232  17CF  1C73               	btfss	___bmul@multiplier,0
  6233  17D0  2FD5               	goto	l3009
  6234  17D1  0870               	movf	___bmul@multiplicand,w
  6235  17D2  00F1               	movwf	??___bmul
  6236  17D3  0871               	movf	??___bmul,w
  6237  17D4  07F2               	addwf	___bmul@product,f
  6238  17D5                     l3009:	
  6239  17D5  1003               	clrc
  6240  17D6  0DF0               	rlf	___bmul@multiplicand,f
  6241  17D7  1003               	clrc
  6242  17D8  0CF3               	rrf	___bmul@multiplier,f
  6243  17D9  0873               	movf	___bmul@multiplier,w
  6244  17DA  1D03               	btfss	3,2
  6245  17DB  2FCF               	goto	l3005
  6246  17DC  0872               	movf	___bmul@product,w
  6247  17DD  0008               	return
  6248  17DE                     __end_of___bmul:	
  6249                           
  6250                           	psect	text27
  6251  0C7B                     __ptext27:	
  6252 ;; *************** function _delete_matrix *****************
  6253 ;; Defined at:
  6254 ;;		line 628 in file "teris_16f886.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  matrix          1    wreg     PTR struct .
  6257 ;;		 -> g_matrix88(64), 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  matrix          1    5[BANK0 ] PTR struct .
  6260 ;;		 -> g_matrix88(64), 
  6261 ;;  row             1    6[BANK0 ] char 
  6262 ;;  count           1    4[BANK0 ] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  1    wreg      unsigned char 
  6265 ;; Registers used:
  6266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6272 ;;      Params:         0       0       0       0       0
  6273 ;;      Locals:         0       3       0       0       0
  6274 ;;      Temps:          1       0       0       0       0
  6275 ;;      Totals:         1       3       0       0       0
  6276 ;;Total ram usage:        4 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    2
  6279 ;; This function calls:
  6280 ;;		_delete_row
  6281 ;;		_is_row_full
  6282 ;; This function is called by:
  6283 ;;		_main
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           
  6288                           ;psect for function _delete_matrix
  6289  0C7B                     _delete_matrix:	
  6290                           
  6291                           ;incstack = 0
  6292                           ; Regs used in _delete_matrix: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6293                           ;delete_matrix@matrix stored from wreg
  6294  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  6295  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  6296  0C7D  00A5               	movwf	delete_matrix@matrix
  6297                           
  6298                           ;teris_16f886.c: 630: uint8_t count = 0;
  6299  0C7E  01A4               	clrf	delete_matrix@count
  6300                           
  6301                           ;teris_16f886.c: 631: int8_t row = 8 - 1;
  6302  0C7F  3007               	movlw	7
  6303  0C80  00FB               	movwf	??_delete_matrix
  6304  0C81  087B               	movf	??_delete_matrix,w
  6305  0C82  00A6               	movwf	delete_matrix@row
  6306  0C83                     l3239:	
  6307                           ;teris_16f886.c: 632: while(row >= 0)
  6308                           
  6309  0C83  1BA6               	btfsc	delete_matrix@row,7
  6310  0C84  0008               	return
  6311                           
  6312                           ;teris_16f886.c: 633: {
  6313                           ;teris_16f886.c: 634: if(is_row_full(matrix, row))
  6314  0C85  0826               	movf	delete_matrix@row,w
  6315  0C86  00FB               	movwf	??_delete_matrix
  6316  0C87  087B               	movf	??_delete_matrix,w
  6317  0C88  00F0               	movwf	is_row_full@row
  6318  0C89  0825               	movf	delete_matrix@matrix,w
  6319  0C8A  120A  158A  2401  120A  158A  	fcall	_is_row_full
  6320  0C8F  3A00               	xorlw	0
  6321  0C90  1903               	skipnz
  6322  0C91  2CA5               	goto	l3237
  6323                           
  6324                           ;teris_16f886.c: 635: {
  6325                           ;teris_16f886.c: 636: delete_row(matrix, row);
  6326  0C92  1283               	bcf	3,5	;RP0=0, select bank0
  6327  0C93  1303               	bcf	3,6	;RP1=0, select bank0
  6328  0C94  0826               	movf	delete_matrix@row,w
  6329  0C95  00FB               	movwf	??_delete_matrix
  6330  0C96  087B               	movf	??_delete_matrix,w
  6331  0C97  00F7               	movwf	delete_row@row
  6332  0C98  0825               	movf	delete_matrix@matrix,w
  6333  0C99  120A  118A  202E  120A  158A  	fcall	_delete_row
  6334                           
  6335                           ;teris_16f886.c: 637: count++;
  6336  0C9E  3001               	movlw	1
  6337  0C9F  00FB               	movwf	??_delete_matrix
  6338  0CA0  087B               	movf	??_delete_matrix,w
  6339  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  6341  0CA3  07A4               	addwf	delete_matrix@count,f
  6342                           
  6343                           ;teris_16f886.c: 638: }
  6344  0CA4  2C83               	goto	l3239
  6345  0CA5                     l3237:	
  6346                           
  6347                           ;teris_16f886.c: 639: else
  6348                           ;teris_16f886.c: 640: {
  6349                           ;teris_16f886.c: 641: row--;
  6350  0CA5  30FF               	movlw	255
  6351  0CA6  00FB               	movwf	??_delete_matrix
  6352  0CA7  087B               	movf	??_delete_matrix,w
  6353  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  6354  0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  6355  0CAA  07A6               	addwf	delete_matrix@row,f
  6356  0CAB  2C83               	goto	l3239
  6357  0CAC                     __end_of_delete_matrix:	
  6358                           ;teris_16f886.c: 642: }
  6359                           ;teris_16f886.c: 643: }
  6360                           ;teris_16f886.c: 647: return count;
  6361                           ;	Return value of _delete_matrix is never used
  6362                           
  6363                           
  6364                           	psect	text28
  6365  0C01                     __ptext28:	
  6366 ;; *************** function _is_row_full *****************
  6367 ;; Defined at:
  6368 ;;		line 594 in file "teris_16f886.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  matrix          1    wreg     PTR const struct .
  6371 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  6372 ;;  row             1    0[COMMON] unsigned char 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  matrix          1    4[COMMON] PTR const struct .
  6375 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  6376 ;;  col             1    5[COMMON] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      unsigned char 
  6379 ;; Registers used:
  6380 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6386 ;;      Params:         1       0       0       0       0
  6387 ;;      Locals:         2       0       0       0       0
  6388 ;;      Temps:          3       0       0       0       0
  6389 ;;      Totals:         6       0       0       0       0
  6390 ;;Total ram usage:        6 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_delete_matrix
  6396 ;;		_get_num_removed_rows
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           
  6401                           ;psect for function _is_row_full
  6402  0C01                     _is_row_full:	
  6403                           
  6404                           ;incstack = 0
  6405                           ; Regs used in _is_row_full: [wreg-fsr0h+status,2+status,0]
  6406                           ;is_row_full@matrix stored from wreg
  6407  0C01  00F4               	movwf	is_row_full@matrix
  6408                           
  6409                           ;teris_16f886.c: 596: for(uint8_t col = 0; col < 8; col++)
  6410  0C02  01F5               	clrf	is_row_full@col
  6411  0C03  3008               	movlw	8
  6412  0C04  0275               	subwf	is_row_full@col,w
  6413  0C05  1803               	btfsc	3,0
  6414  0C06  2C26               	goto	l2497
  6415  0C07                     l2487:	
  6416                           
  6417                           ;teris_16f886.c: 597: {
  6418                           ;teris_16f886.c: 598: if(matrix->data[row][col] == 0)
  6419  0C07  0870               	movf	is_row_full@row,w
  6420  0C08  00F1               	movwf	??_is_row_full
  6421  0C09  3002               	movlw	2
  6422  0C0A                     u2595:	
  6423  0C0A  1003               	clrc
  6424  0C0B  0DF1               	rlf	??_is_row_full,f
  6425  0C0C  3EFF               	addlw	-1
  6426  0C0D  1D03               	skipz
  6427  0C0E  2C0A               	goto	u2595
  6428  0C0F  1003               	clrc
  6429  0C10  0D71               	rlf	??_is_row_full,w
  6430  0C11  0774               	addwf	is_row_full@matrix,w
  6431  0C12  00F2               	movwf	??_is_row_full+1
  6432  0C13  0875               	movf	is_row_full@col,w
  6433  0C14  0772               	addwf	??_is_row_full+1,w
  6434  0C15  00F3               	movwf	??_is_row_full+2
  6435  0C16  0873               	movf	??_is_row_full+2,w
  6436  0C17  0084               	movwf	4
  6437  0C18  1783               	bsf	3,7	;select IRP bank2
  6438  0C19  0800               	movf	0,w
  6439  0C1A  1D03               	btfss	3,2
  6440  0C1B  2C1E               	goto	l2493
  6441                           
  6442                           ;teris_16f886.c: 599: {
  6443                           ;teris_16f886.c: 600: return 0;
  6444  0C1C  3000               	movlw	0
  6445  0C1D  0008               	return
  6446  0C1E                     l2493:	
  6447  0C1E  3001               	movlw	1
  6448  0C1F  00F1               	movwf	??_is_row_full
  6449  0C20  0871               	movf	??_is_row_full,w
  6450  0C21  07F5               	addwf	is_row_full@col,f
  6451  0C22  3008               	movlw	8
  6452  0C23  0275               	subwf	is_row_full@col,w
  6453  0C24  1C03               	skipc
  6454  0C25  2C07               	goto	l2487
  6455  0C26                     l2497:	
  6456                           
  6457                           ;teris_16f886.c: 601: }
  6458                           ;teris_16f886.c: 602: }
  6459                           ;teris_16f886.c: 603: return 1;
  6460  0C26  3001               	movlw	1
  6461  0C27  0008               	return
  6462  0C28                     __end_of_is_row_full:	
  6463                           
  6464                           	psect	text29
  6465  002E                     __ptext29:	
  6466 ;; *************** function _delete_row *****************
  6467 ;; Defined at:
  6468 ;;		line 605 in file "teris_16f886.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  matrix          1    wreg     PTR struct .
  6471 ;;		 -> g_matrix88(64), 
  6472 ;;  row             1    7[COMMON] unsigned char 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  matrix          1    2[BANK0 ] PTR struct .
  6475 ;;		 -> g_matrix88(64), 
  6476 ;;  len             2    0[BANK0 ] unsigned int 
  6477 ;;  i               1    3[BANK0 ] char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6487 ;;      Params:         1       0       0       0       0
  6488 ;;      Locals:         0       4       0       0       0
  6489 ;;      Temps:          3       0       0       0       0
  6490 ;;      Totals:         4       4       0       0       0
  6491 ;;Total ram usage:        8 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    1
  6494 ;; This function calls:
  6495 ;;		_memcpy
  6496 ;;		_memset
  6497 ;; This function is called by:
  6498 ;;		_delete_matrix
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           
  6503                           ;psect for function _delete_row
  6504  002E                     _delete_row:	
  6505                           
  6506                           ;incstack = 0
  6507                           ; Regs used in _delete_row: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6508                           ;delete_row@matrix stored from wreg
  6509  002E  1283               	bcf	3,5	;RP0=0, select bank0
  6510  002F  1303               	bcf	3,6	;RP1=0, select bank0
  6511  0030  00A2               	movwf	delete_row@matrix
  6512                           
  6513                           ;teris_16f886.c: 607: for(int8_t i = 8 - 1; i >= 0; i--)
  6514  0031  3007               	movlw	7
  6515  0032  00F8               	movwf	??_delete_row
  6516  0033  0878               	movf	??_delete_row,w
  6517  0034  00A3               	movwf	delete_row@i
  6518  0035                     L9:	
  6519  0035  1BA3               	btfsc	delete_row@i,7
  6520  0036  0008               	return
  6521                           
  6522                           ;teris_16f886.c: 608: {
  6523                           ;teris_16f886.c: 609: if(i <= row)
  6524  0037  0823               	movf	delete_row@i,w
  6525  0038  00F8               	movwf	??_delete_row
  6526  0039  01F9               	clrf	??_delete_row+1
  6527  003A  1BF8               	btfsc	??_delete_row,7
  6528  003B  03F9               	decf	??_delete_row+1,f
  6529  003C  0879               	movf	??_delete_row+1,w
  6530  003D  3A80               	xorlw	128
  6531  003E  3C80               	sublw	128
  6532  003F  1D03               	skipz
  6533  0040  2843               	goto	u2865
  6534  0041  0878               	movf	??_delete_row,w
  6535  0042  0277               	subwf	delete_row@row,w
  6536  0043                     u2865:	
  6537  0043  1C03               	skipc
  6538  0044  288D               	goto	l2631
  6539                           
  6540                           ;teris_16f886.c: 610: {
  6541                           ;teris_16f886.c: 611: if(i > 0)
  6542  0045  1283               	bcf	3,5	;RP0=0, select bank0
  6543  0046  1303               	bcf	3,6	;RP1=0, select bank0
  6544  0047  0823               	movf	delete_row@i,w
  6545  0048  3A80               	xorlw	128
  6546  0049  3E7F               	addlw	-129
  6547  004A  1C03               	skipc
  6548  004B  2874               	goto	l2629
  6549                           
  6550                           ;teris_16f886.c: 612: {
  6551                           ;teris_16f886.c: 616: register size_t len;
  6552                           ;teris_16f886.c: 618: len = 8*sizeof(uint8_t);
  6553  004C  3008               	movlw	8
  6554  004D  00A0               	movwf	delete_row@len
  6555  004E  3000               	movlw	0
  6556  004F  00A1               	movwf	delete_row@len+1
  6557                           
  6558                           ;teris_16f886.c: 619: memcpy(matrix->data[i], matrix->data[i - 1], len);
  6559  0050  0823               	movf	delete_row@i,w
  6560  0051  00F8               	movwf	??_delete_row
  6561  0052  3002               	movlw	2
  6562  0053                     u2885:	
  6563  0053  1003               	clrc
  6564  0054  0DF8               	rlf	??_delete_row,f
  6565  0055  3EFF               	addlw	-1
  6566  0056  1D03               	skipz
  6567  0057  2853               	goto	u2885
  6568  0058  1003               	clrc
  6569  0059  0D78               	rlf	??_delete_row,w
  6570  005A  3EF8               	addlw	248
  6571  005B  0722               	addwf	delete_row@matrix,w
  6572  005C  00F9               	movwf	??_delete_row+1
  6573  005D  0879               	movf	??_delete_row+1,w
  6574  005E  00F0               	movwf	memcpy@s1
  6575  005F  0821               	movf	delete_row@len+1,w
  6576  0060  00F2               	movwf	memcpy@n+1
  6577  0061  0820               	movf	delete_row@len,w
  6578  0062  00F1               	movwf	memcpy@n
  6579  0063  0823               	movf	delete_row@i,w
  6580  0064  00FA               	movwf	??_delete_row+2
  6581  0065  3002               	movlw	2
  6582  0066                     u2895:	
  6583  0066  1003               	clrc
  6584  0067  0DFA               	rlf	??_delete_row+2,f
  6585  0068  3EFF               	addlw	-1
  6586  0069  1D03               	skipz
  6587  006A  2866               	goto	u2895
  6588  006B  1003               	clrc
  6589  006C  0D7A               	rlf	??_delete_row+2,w
  6590  006D  0722               	addwf	delete_row@matrix,w
  6591  006E  120A  158A  23DB  120A  118A  	fcall	_memcpy
  6592                           
  6593                           ;teris_16f886.c: 620: }
  6594  0073  288D               	goto	l2631
  6595  0074                     l2629:	
  6596                           
  6597                           ;teris_16f886.c: 621: else
  6598                           ;teris_16f886.c: 622: {
  6599                           ;teris_16f886.c: 623: memset(matrix->data[i], 0, 8*sizeof(uint8_t));
  6600  0074  3000               	movlw	0
  6601  0075  00F0               	movwf	memset@c
  6602  0076  00F1               	movwf	memset@c+1
  6603  0077  3008               	movlw	8
  6604  0078  00F2               	movwf	memset@n
  6605  0079  3000               	movlw	0
  6606  007A  00F3               	movwf	memset@n+1
  6607  007B  1283               	bcf	3,5	;RP0=0, select bank0
  6608  007C  1303               	bcf	3,6	;RP1=0, select bank0
  6609  007D  0823               	movf	delete_row@i,w
  6610  007E  00F8               	movwf	??_delete_row
  6611  007F  3002               	movlw	2
  6612  0080                     u2905:	
  6613  0080  1003               	clrc
  6614  0081  0DF8               	rlf	??_delete_row,f
  6615  0082  3EFF               	addlw	-1
  6616  0083  1D03               	skipz
  6617  0084  2880               	goto	u2905
  6618  0085  1003               	clrc
  6619  0086  0D78               	rlf	??_delete_row,w
  6620  0087  0722               	addwf	delete_row@matrix,w
  6621  0088  120A  158A  22D5  120A  118A  	fcall	_memset
  6622  008D                     l2631:	
  6623  008D  30FF               	movlw	255
  6624  008E  00F8               	movwf	??_delete_row
  6625  008F  0878               	movf	??_delete_row,w
  6626  0090  1283               	bcf	3,5	;RP0=0, select bank0
  6627  0091  1303               	bcf	3,6	;RP1=0, select bank0
  6628  0092  07A3               	addwf	delete_row@i,f
  6629  0093  2835               	goto	L9
  6630  0094                     __end_of_delete_row:	
  6631                           
  6632                           	psect	text30
  6633  0BDB                     __ptext30:	
  6634 ;; *************** function _memcpy *****************
  6635 ;; Defined at:
  6636 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memcpy.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  d1              1    wreg     PTR void 
  6639 ;;		 -> temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6640 ;;  s1              1    0[COMMON] PTR const void 
  6641 ;;		 -> g_matrix88.data(64), g_matrix88(64), 
  6642 ;;  n               2    1[COMMON] unsigned int 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  d1              1    6[COMMON] PTR void 
  6645 ;;		 -> temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6646 ;;  s               1    5[COMMON] PTR const unsigned char 
  6647 ;;		 -> g_matrix88.data(64), g_matrix88(64), 
  6648 ;;  d               1    4[COMMON] PTR unsigned char 
  6649 ;;		 -> temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      PTR void 
  6652 ;; Registers used:
  6653 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6659 ;;      Params:         3       0       0       0       0
  6660 ;;      Locals:         3       0       0       0       0
  6661 ;;      Temps:          1       0       0       0       0
  6662 ;;      Totals:         7       0       0       0       0
  6663 ;;Total ram usage:        7 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_delete_row
  6669 ;;		_merge1
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           
  6674                           ;psect for function _memcpy
  6675  0BDB                     _memcpy:	
  6676                           
  6677                           ;incstack = 0
  6678                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  6679                           ;memcpy@d1 stored from wreg
  6680  0BDB  00F6               	movwf	memcpy@d1
  6681  0BDC  0870               	movf	memcpy@s1,w
  6682  0BDD  00F3               	movwf	??_memcpy
  6683  0BDE  0873               	movf	??_memcpy,w
  6684  0BDF  00F5               	movwf	memcpy@s
  6685  0BE0  0876               	movf	memcpy@d1,w
  6686  0BE1  00F3               	movwf	??_memcpy
  6687  0BE2  0873               	movf	??_memcpy,w
  6688  0BE3  00F4               	movwf	memcpy@d
  6689  0BE4                     l2509:	
  6690  0BE4  3001               	movlw	1
  6691  0BE5  02F1               	subwf	memcpy@n,f
  6692  0BE6  3000               	movlw	0
  6693  0BE7  1C03               	skipc
  6694  0BE8  03F2               	decf	memcpy@n+1,f
  6695  0BE9  02F2               	subwf	memcpy@n+1,f
  6696  0BEA  0A71               	incf	memcpy@n,w
  6697  0BEB  1903               	btfsc	3,2
  6698  0BEC  0A72               	incf	memcpy@n+1,w
  6699  0BED  1903               	btfsc	3,2
  6700  0BEE  0008               	return
  6701  0BEF  0875               	movf	memcpy@s,w
  6702  0BF0  0084               	movwf	4
  6703  0BF1  1783               	bsf	3,7	;select IRP bank2
  6704  0BF2  0800               	movf	0,w
  6705  0BF3  00F3               	movwf	??_memcpy
  6706  0BF4  0874               	movf	memcpy@d,w
  6707  0BF5  0084               	movwf	4
  6708  0BF6  0873               	movf	??_memcpy,w
  6709  0BF7  0080               	movwf	0
  6710  0BF8  3001               	movlw	1
  6711  0BF9  00F3               	movwf	??_memcpy
  6712  0BFA  0873               	movf	??_memcpy,w
  6713  0BFB  07F5               	addwf	memcpy@s,f
  6714  0BFC  3001               	movlw	1
  6715  0BFD  00F3               	movwf	??_memcpy
  6716  0BFE  0873               	movf	??_memcpy,w
  6717  0BFF  07F4               	addwf	memcpy@d,f
  6718  0C00  2BE4               	goto	l2509
  6719  0C01                     __end_of_memcpy:	
  6720                           ;	Return value of _memcpy is never used
  6721                           
  6722                           
  6723                           	psect	text31
  6724  0E51                     __ptext31:	
  6725 ;; *************** function _clear *****************
  6726 ;; Defined at:
  6727 ;;		line 838 in file "teris_16f886.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;  x               1    wreg     char 
  6730 ;;  y               1    0[COMMON] char 
  6731 ;;  matrix44        2    1[COMMON] PTR const struct .
  6732 ;;		 -> NULL(0), g_matrix44(384), 
  6733 ;;  matrix88        1    3[COMMON] PTR struct .
  6734 ;;		 -> g_matrix88(64), 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  x               1    8[COMMON] char 
  6737 ;;  col             1   10[COMMON] unsigned char 
  6738 ;;  row             1    9[COMMON] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6748 ;;      Params:         4       0       0       0       0
  6749 ;;      Locals:         3       0       0       0       0
  6750 ;;      Temps:          4       0       0       0       0
  6751 ;;      Totals:        11       0       0       0       0
  6752 ;;Total ram usage:       11 bytes
  6753 ;; Hardware stack levels used:    2
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_main
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           
  6762                           ;psect for function _clear
  6763  0E51                     _clear:	
  6764                           
  6765                           ;incstack = 0
  6766                           ; Regs used in _clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6767                           ;clear@x stored from wreg
  6768  0E51  00F8               	movwf	clear@x
  6769                           
  6770                           ;teris_16f886.c: 840: for(uint8_t row = 0; row < 4; row++)
  6771  0E52  01F9               	clrf	clear@row
  6772  0E53                     L10:	
  6773  0E53  3004               	movlw	4
  6774  0E54  0279               	subwf	clear@row,w
  6775  0E55  1803               	btfsc	3,0
  6776  0E56  0008               	return
  6777                           
  6778                           ;teris_16f886.c: 841: {
  6779                           ;teris_16f886.c: 842: for(uint8_t col = 0; col < 4; col++)
  6780  0E57  01FA               	clrf	clear@col
  6781  0E58  3004               	movlw	4
  6782  0E59  027A               	subwf	clear@col,w
  6783  0E5A  1803               	btfsc	3,0
  6784  0E5B  2E9B               	goto	l3299
  6785  0E5C                     l3291:	
  6786                           
  6787                           ;teris_16f886.c: 843: {
  6788                           ;teris_16f886.c: 844: if(matrix44->data[row][col] == 1)
  6789  0E5C  0879               	movf	clear@row,w
  6790  0E5D  00F4               	movwf	??_clear
  6791  0E5E  01F5               	clrf	??_clear+1
  6792  0E5F  1003               	clrc
  6793  0E60  0DF4               	rlf	??_clear,f
  6794  0E61  0DF5               	rlf	??_clear+1,f
  6795  0E62  1003               	clrc
  6796  0E63  0DF4               	rlf	??_clear,f
  6797  0E64  0DF5               	rlf	??_clear+1,f
  6798  0E65  0874               	movf	??_clear,w
  6799  0E66  0771               	addwf	clear@matrix44,w
  6800  0E67  00F6               	movwf	??_clear+2
  6801  0E68  0875               	movf	??_clear+1,w
  6802  0E69  1803               	skipnc
  6803  0E6A  0A75               	incf	??_clear+1,w
  6804  0E6B  0772               	addwf	clear@matrix44+1,w
  6805  0E6C  00F7               	movwf	??_clear+3
  6806  0E6D  087A               	movf	clear@col,w
  6807  0E6E  0776               	addwf	??_clear+2,w
  6808  0E6F  0084               	movwf	4
  6809  0E70  0877               	movf	??_clear+3,w
  6810  0E71  1803               	skipnc
  6811  0E72  0A77               	incf	??_clear+3,w
  6812  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  6813  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  6814  0E75  00FF               	movwf	127
  6815  0E76  120A  158A  2000  120A  158A  	fcall	stringtab
  6816  0E7B  3A01               	xorlw	1
  6817  0E7C  1D03               	skipz
  6818  0E7D  2E93               	goto	l3295
  6819                           
  6820                           ;teris_16f886.c: 845: {
  6821                           ;teris_16f886.c: 846: matrix88->data[y + row][x + col] = 0;
  6822  0E7E  087A               	movf	clear@col,w
  6823  0E7F  0778               	addwf	clear@x,w
  6824  0E80  0773               	addwf	clear@matrix88,w
  6825  0E81  00F4               	movwf	??_clear
  6826  0E82  0879               	movf	clear@row,w
  6827  0E83  0770               	addwf	clear@y,w
  6828  0E84  00F5               	movwf	??_clear+1
  6829  0E85  3002               	movlw	2
  6830  0E86                     u4405:	
  6831  0E86  1003               	clrc
  6832  0E87  0DF5               	rlf	??_clear+1,f
  6833  0E88  3EFF               	addlw	-1
  6834  0E89  1D03               	skipz
  6835  0E8A  2E86               	goto	u4405
  6836  0E8B  1003               	clrc
  6837  0E8C  0D75               	rlf	??_clear+1,w
  6838  0E8D  0774               	addwf	??_clear,w
  6839  0E8E  00F6               	movwf	??_clear+2
  6840  0E8F  0876               	movf	??_clear+2,w
  6841  0E90  0084               	movwf	4
  6842  0E91  1783               	bsf	3,7	;select IRP bank2
  6843  0E92  0180               	clrf	0
  6844  0E93                     l3295:	
  6845  0E93  3001               	movlw	1
  6846  0E94  00F4               	movwf	??_clear
  6847  0E95  0874               	movf	??_clear,w
  6848  0E96  07FA               	addwf	clear@col,f
  6849  0E97  3004               	movlw	4
  6850  0E98  027A               	subwf	clear@col,w
  6851  0E99  1C03               	skipc
  6852  0E9A  2E5C               	goto	l3291
  6853  0E9B                     l3299:	
  6854  0E9B  3001               	movlw	1
  6855  0E9C  00F4               	movwf	??_clear
  6856  0E9D  0874               	movf	??_clear,w
  6857  0E9E  07F9               	addwf	clear@row,f
  6858  0E9F  2E53               	goto	L10
  6859  0EA0                     __end_of_clear:	
  6860                           
  6861                           	psect	text32
  6862  0AA2                     __ptext32:	
  6863 ;; *************** function _char_info_index_rand *****************
  6864 ;; Defined at:
  6865 ;;		line 960 in file "teris_16f886.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;		None
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;		None
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      unsigned char 
  6872 ;; Registers used:
  6873 ;;		wreg, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6879 ;;      Params:         0       0       0       0       0
  6880 ;;      Locals:         0       0       0       0       0
  6881 ;;      Temps:          0       0       0       0       0
  6882 ;;      Totals:         0       0       0       0       0
  6883 ;;Total ram usage:        0 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    2
  6886 ;; This function calls:
  6887 ;;		___awmod
  6888 ;;		_rand
  6889 ;; This function is called by:
  6890 ;;		_main
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           
  6895                           ;psect for function _char_info_index_rand
  6896  0AA2                     _char_info_index_rand:	
  6897                           
  6898                           ;teris_16f886.c: 962: return (uint8_t)(rand()%9);
  6899                           
  6900                           ;incstack = 0
  6901                           ; Regs used in _char_info_index_rand: [wreg+status,2+status,0+pclath+cstack]
  6902  0AA2  3009               	movlw	9
  6903  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  6905  0AA5  00A7               	movwf	___awmod@divisor
  6906  0AA6  3000               	movlw	0
  6907  0AA7  00A8               	movwf	___awmod@divisor+1
  6908  0AA8  120A  158A  2575  120A  158A  	fcall	_rand
  6909  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  6910  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  6911  0AAF  0821               	movf	?_rand+1,w
  6912  0AB0  00AA               	movwf	___awmod@dividend+1
  6913  0AB1  0820               	movf	?_rand,w
  6914  0AB2  00A9               	movwf	___awmod@dividend
  6915  0AB3  120A  158A  2604   	fcall	___awmod
  6916  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  6917  0AB7  1303               	bcf	3,6	;RP1=0, select bank0
  6918  0AB8  0827               	movf	?___awmod,w
  6919  0AB9  0008               	return
  6920  0ABA                     __end_of_char_info_index_rand:	
  6921                           
  6922                           	psect	text33
  6923  0D75                     __ptext33:	
  6924 ;; *************** function _rand *****************
  6925 ;; Defined at:
  6926 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\rand.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  2    0[BANK0 ] int 
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0, pclath, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6940 ;;      Params:         0       2       0       0       0
  6941 ;;      Locals:         0       0       0       0       0
  6942 ;;      Temps:          0       5       0       0       0
  6943 ;;      Totals:         0       7       0       0       0
  6944 ;;Total ram usage:        7 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    1
  6947 ;; This function calls:
  6948 ;;		___lmul
  6949 ;; This function is called by:
  6950 ;;		_char_info_index_rand
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           
  6955                           ;psect for function _rand
  6956  0D75                     _rand:	
  6957                           
  6958                           ;incstack = 0
  6959                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  6960  0D75  1283               	bcf	3,5	;RP0=0, select bank0
  6961  0D76  1303               	bcf	3,6	;RP1=0, select bank0
  6962  0D77  0867               	movf	_randx+3,w
  6963  0D78  00F3               	movwf	___lmul@multiplier+3
  6964  0D79  0866               	movf	_randx+2,w
  6965  0D7A  00F2               	movwf	___lmul@multiplier+2
  6966  0D7B  0865               	movf	_randx+1,w
  6967  0D7C  00F1               	movwf	___lmul@multiplier+1
  6968  0D7D  0864               	movf	_randx,w
  6969  0D7E  00F0               	movwf	___lmul@multiplier
  6970  0D7F  3041               	movlw	65
  6971  0D80  00F7               	movwf	___lmul@multiplicand+3
  6972  0D81  30C6               	movlw	198
  6973  0D82  00F6               	movwf	___lmul@multiplicand+2
  6974  0D83  304E               	movlw	78
  6975  0D84  00F5               	movwf	___lmul@multiplicand+1
  6976  0D85  306D               	movlw	109
  6977  0D86  00F4               	movwf	___lmul@multiplicand
  6978  0D87  120A  158A  24AC  120A  158A  	fcall	___lmul
  6979  0D8C  0873               	movf	?___lmul+3,w
  6980  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  6981  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  6982  0D8F  00E7               	movwf	_randx+3
  6983  0D90  0872               	movf	?___lmul+2,w
  6984  0D91  00E6               	movwf	_randx+2
  6985  0D92  0871               	movf	?___lmul+1,w
  6986  0D93  00E5               	movwf	_randx+1
  6987  0D94  0870               	movf	?___lmul,w
  6988  0D95  00E4               	movwf	_randx
  6989  0D96  3039               	movlw	57
  6990  0D97  07E4               	addwf	_randx,f
  6991  0D98  3030               	movlw	48
  6992  0D99  1803               	skipnc
  6993  0D9A  3031               	movlw	49
  6994  0D9B  07E5               	addwf	_randx+1,f
  6995  0D9C  3000               	movlw	0
  6996  0D9D  1803               	skipnc
  6997  0D9E  3001               	movlw	1
  6998  0D9F  07E6               	addwf	_randx+2,f
  6999  0DA0  3000               	movlw	0
  7000  0DA1  1803               	skipnc
  7001  0DA2  3001               	movlw	1
  7002  0DA3  07E7               	addwf	_randx+3,f
  7003  0DA4  0864               	movf	_randx,w
  7004  0DA5  00A2               	movwf	??_rand
  7005  0DA6  0865               	movf	_randx+1,w
  7006  0DA7  00A3               	movwf	??_rand+1
  7007  0DA8  0866               	movf	_randx+2,w
  7008  0DA9  00A4               	movwf	??_rand+2
  7009  0DAA  0867               	movf	_randx+3,w
  7010  0DAB  00A5               	movwf	??_rand+3
  7011  0DAC  3010               	movlw	16
  7012  0DAD  00A6               	movwf	??_rand+4
  7013  0DAE                     u3445:	
  7014  0DAE  0D25               	rlf	??_rand+3,w
  7015  0DAF  0CA5               	rrf	??_rand+3,f
  7016  0DB0  0CA4               	rrf	??_rand+2,f
  7017  0DB1  0CA3               	rrf	??_rand+1,f
  7018  0DB2  0CA2               	rrf	??_rand,f
  7019  0DB3  0BA6               	decfsz	??_rand+4,f
  7020  0DB4  2DAE               	goto	u3445
  7021  0DB5  30FF               	movlw	255
  7022  0DB6  0522               	andwf	??_rand,w
  7023  0DB7  00A0               	movwf	?_rand
  7024  0DB8  307F               	movlw	127
  7025  0DB9  0523               	andwf	??_rand+1,w
  7026  0DBA  00A1               	movwf	?_rand+1
  7027  0DBB  0008               	return
  7028  0DBC                     __end_of_rand:	
  7029                           
  7030                           	psect	text34
  7031  0CAC                     __ptext34:	
  7032 ;; *************** function ___lmul *****************
  7033 ;; Defined at:
  7034 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  multiplier      4    0[COMMON] unsigned long 
  7037 ;;  multiplicand    4    4[COMMON] unsigned long 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  product         4    9[COMMON] unsigned long 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  4    0[COMMON] unsigned long 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2, status,0
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7049 ;;      Params:         8       0       0       0       0
  7050 ;;      Locals:         4       0       0       0       0
  7051 ;;      Temps:          1       0       0       0       0
  7052 ;;      Totals:        13       0       0       0       0
  7053 ;;Total ram usage:       13 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_rand
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           
  7063                           ;psect for function ___lmul
  7064  0CAC                     ___lmul:	
  7065                           
  7066                           ;incstack = 0
  7067                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7068  0CAC  3000               	movlw	0
  7069  0CAD  00FC               	movwf	___lmul@product+3
  7070  0CAE  3000               	movlw	0
  7071  0CAF  00FB               	movwf	___lmul@product+2
  7072  0CB0  3000               	movlw	0
  7073  0CB1  00FA               	movwf	___lmul@product+1
  7074  0CB2  3000               	movlw	0
  7075  0CB3  00F9               	movwf	___lmul@product
  7076  0CB4                     l2597:	
  7077  0CB4  1C70               	btfss	___lmul@multiplier,0
  7078  0CB5  2CCA               	goto	l2601
  7079  0CB6  0874               	movf	___lmul@multiplicand,w
  7080  0CB7  07F9               	addwf	___lmul@product,f
  7081  0CB8  0875               	movf	___lmul@multiplicand+1,w
  7082  0CB9  1103               	clrz
  7083  0CBA  1803               	skipnc
  7084  0CBB  3E01               	addlw	1
  7085  0CBC  1D03               	btfss	3,2
  7086  0CBD  07FA               	addwf	___lmul@product+1,f
  7087  0CBE  0876               	movf	___lmul@multiplicand+2,w
  7088  0CBF  1103               	clrz
  7089  0CC0  1803               	skipnc
  7090  0CC1  3E01               	addlw	1
  7091  0CC2  1D03               	btfss	3,2
  7092  0CC3  07FB               	addwf	___lmul@product+2,f
  7093  0CC4  0877               	movf	___lmul@multiplicand+3,w
  7094  0CC5  1103               	clrz
  7095  0CC6  1803               	skipnc
  7096  0CC7  3E01               	addlw	1
  7097  0CC8  1D03               	btfss	3,2
  7098  0CC9  07FC               	addwf	___lmul@product+3,f
  7099  0CCA                     l2601:	
  7100  0CCA  3001               	movlw	1
  7101  0CCB  00F8               	movwf	??___lmul
  7102  0CCC                     u2825:	
  7103  0CCC  1003               	clrc
  7104  0CCD  0DF4               	rlf	___lmul@multiplicand,f
  7105  0CCE  0DF5               	rlf	___lmul@multiplicand+1,f
  7106  0CCF  0DF6               	rlf	___lmul@multiplicand+2,f
  7107  0CD0  0DF7               	rlf	___lmul@multiplicand+3,f
  7108  0CD1  0BF8               	decfsz	??___lmul,f
  7109  0CD2  2CCC               	goto	u2825
  7110  0CD3  3001               	movlw	1
  7111  0CD4                     u2835:	
  7112  0CD4  1003               	clrc
  7113  0CD5  0CF3               	rrf	___lmul@multiplier+3,f
  7114  0CD6  0CF2               	rrf	___lmul@multiplier+2,f
  7115  0CD7  0CF1               	rrf	___lmul@multiplier+1,f
  7116  0CD8  0CF0               	rrf	___lmul@multiplier,f
  7117  0CD9  3EFF               	addlw	-1
  7118  0CDA  1D03               	skipz
  7119  0CDB  2CD4               	goto	u2835
  7120  0CDC  0873               	movf	___lmul@multiplier+3,w
  7121  0CDD  0472               	iorwf	___lmul@multiplier+2,w
  7122  0CDE  0471               	iorwf	___lmul@multiplier+1,w
  7123  0CDF  0470               	iorwf	___lmul@multiplier,w
  7124  0CE0  1D03               	skipz
  7125  0CE1  2CB4               	goto	l2597
  7126  0CE2  087C               	movf	___lmul@product+3,w
  7127  0CE3  00F3               	movwf	?___lmul+3
  7128  0CE4  087B               	movf	___lmul@product+2,w
  7129  0CE5  00F2               	movwf	?___lmul+2
  7130  0CE6  087A               	movf	___lmul@product+1,w
  7131  0CE7  00F1               	movwf	?___lmul+1
  7132  0CE8  0879               	movf	___lmul@product,w
  7133  0CE9  00F0               	movwf	?___lmul
  7134  0CEA  0008               	return
  7135  0CEB                     __end_of___lmul:	
  7136                           
  7137                           	psect	text35
  7138  0E04                     __ptext35:	
  7139 ;; *************** function ___awmod *****************
  7140 ;; Defined at:
  7141 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  divisor         2    7[BANK0 ] int 
  7144 ;;  dividend        2    9[BANK0 ] int 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  sign            1   12[BANK0 ] unsigned char 
  7147 ;;  counter         1   11[BANK0 ] unsigned char 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  2    7[BANK0 ] int 
  7150 ;; Registers used:
  7151 ;;		wreg, status,2, status,0
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7157 ;;      Params:         0       4       0       0       0
  7158 ;;      Locals:         0       2       0       0       0
  7159 ;;      Temps:          1       0       0       0       0
  7160 ;;      Totals:         1       6       0       0       0
  7161 ;;Total ram usage:        7 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		_char_info_index_rand
  7167 ;;		_USARTWriteInt
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           
  7172                           ;psect for function ___awmod
  7173  0E04                     ___awmod:	
  7174                           
  7175                           ;incstack = 0
  7176                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7177  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  7178  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  7179  0E06  01AC               	clrf	___awmod@sign
  7180  0E07  1FAA               	btfss	___awmod@dividend+1,7
  7181  0E08  2E10               	goto	l3025
  7182  0E09  09A9               	comf	___awmod@dividend,f
  7183  0E0A  09AA               	comf	___awmod@dividend+1,f
  7184  0E0B  0AA9               	incf	___awmod@dividend,f
  7185  0E0C  1903               	skipnz
  7186  0E0D  0AAA               	incf	___awmod@dividend+1,f
  7187  0E0E  01AC               	clrf	___awmod@sign
  7188  0E0F  0AAC               	incf	___awmod@sign,f
  7189  0E10                     l3025:	
  7190  0E10  1FA8               	btfss	___awmod@divisor+1,7
  7191  0E11  2E17               	goto	l3029
  7192  0E12  09A7               	comf	___awmod@divisor,f
  7193  0E13  09A8               	comf	___awmod@divisor+1,f
  7194  0E14  0AA7               	incf	___awmod@divisor,f
  7195  0E15  1903               	skipnz
  7196  0E16  0AA8               	incf	___awmod@divisor+1,f
  7197  0E17                     l3029:	
  7198  0E17  0827               	movf	___awmod@divisor,w
  7199  0E18  0428               	iorwf	___awmod@divisor+1,w
  7200  0E19  1903               	btfsc	3,2
  7201  0E1A  2E44               	goto	l3047
  7202  0E1B  01AB               	clrf	___awmod@counter
  7203  0E1C  0AAB               	incf	___awmod@counter,f
  7204  0E1D                     l3037:	
  7205  0E1D  1BA8               	btfsc	___awmod@divisor+1,7
  7206  0E1E  2E2B               	goto	l3039
  7207  0E1F  3001               	movlw	1
  7208  0E20                     u3965:	
  7209  0E20  1003               	clrc
  7210  0E21  0DA7               	rlf	___awmod@divisor,f
  7211  0E22  0DA8               	rlf	___awmod@divisor+1,f
  7212  0E23  3EFF               	addlw	-1
  7213  0E24  1D03               	skipz
  7214  0E25  2E20               	goto	u3965
  7215  0E26  3001               	movlw	1
  7216  0E27  00FD               	movwf	??___awmod
  7217  0E28  087D               	movf	??___awmod,w
  7218  0E29  07AB               	addwf	___awmod@counter,f
  7219  0E2A  2E1D               	goto	l3037
  7220  0E2B                     l3039:	
  7221  0E2B  0828               	movf	___awmod@divisor+1,w
  7222  0E2C  022A               	subwf	___awmod@dividend+1,w
  7223  0E2D  1D03               	skipz
  7224  0E2E  2E31               	goto	u3985
  7225  0E2F  0827               	movf	___awmod@divisor,w
  7226  0E30  0229               	subwf	___awmod@dividend,w
  7227  0E31                     u3985:	
  7228  0E31  1C03               	skipc
  7229  0E32  2E39               	goto	l3043
  7230  0E33  0827               	movf	___awmod@divisor,w
  7231  0E34  02A9               	subwf	___awmod@dividend,f
  7232  0E35  0828               	movf	___awmod@divisor+1,w
  7233  0E36  1C03               	skipc
  7234  0E37  03AA               	decf	___awmod@dividend+1,f
  7235  0E38  02AA               	subwf	___awmod@dividend+1,f
  7236  0E39                     l3043:	
  7237  0E39  3001               	movlw	1
  7238  0E3A                     u3995:	
  7239  0E3A  1003               	clrc
  7240  0E3B  0CA8               	rrf	___awmod@divisor+1,f
  7241  0E3C  0CA7               	rrf	___awmod@divisor,f
  7242  0E3D  3EFF               	addlw	-1
  7243  0E3E  1D03               	skipz
  7244  0E3F  2E3A               	goto	u3995
  7245  0E40  3001               	movlw	1
  7246  0E41  02AB               	subwf	___awmod@counter,f
  7247  0E42  1D03               	btfss	3,2
  7248  0E43  2E2B               	goto	l3039
  7249  0E44                     l3047:	
  7250  0E44  082C               	movf	___awmod@sign,w
  7251  0E45  1903               	btfsc	3,2
  7252  0E46  2E4C               	goto	l3051
  7253  0E47  09A9               	comf	___awmod@dividend,f
  7254  0E48  09AA               	comf	___awmod@dividend+1,f
  7255  0E49  0AA9               	incf	___awmod@dividend,f
  7256  0E4A  1903               	skipnz
  7257  0E4B  0AAA               	incf	___awmod@dividend+1,f
  7258  0E4C                     l3051:	
  7259  0E4C  082A               	movf	___awmod@dividend+1,w
  7260  0E4D  00A8               	movwf	?___awmod+1
  7261  0E4E  0829               	movf	___awmod@dividend,w
  7262  0E4F  00A7               	movwf	?___awmod
  7263  0E50  0008               	return
  7264  0E51                     __end_of___awmod:	
  7265                           
  7266                           	psect	text36
  7267  0D2E                     __ptext36:	
  7268 ;; *************** function _USARTInit *****************
  7269 ;; Defined at:
  7270 ;;		line 31 in file "usart_pic16.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;  baud_rate       2    0[COMMON] unsigned int 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7284 ;;      Params:         2       0       0       0       0
  7285 ;;      Locals:         0       0       0       0       0
  7286 ;;      Temps:          1       0       0       0       0
  7287 ;;      Totals:         3       0       0       0       0
  7288 ;;Total ram usage:        3 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; This function calls:
  7291 ;;		Nothing
  7292 ;; This function is called by:
  7293 ;;		_main
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           
  7298                           ;psect for function _USARTInit
  7299  0D2E                     _USARTInit:	
  7300                           
  7301                           ;usart_pic16.c: 33: UQFront = UQEnd = -1;
  7302                           
  7303                           ;incstack = 0
  7304                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  7305  0D2E  30FF               	movlw	255
  7306  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  7307  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  7308  0D31  00E9               	movwf	_UQEnd	;volatile
  7309  0D32  00F2               	movwf	??_USARTInit
  7310  0D33  0872               	movf	??_USARTInit,w
  7311  0D34  00EA               	movwf	_UQFront	;volatile
  7312                           
  7313                           ;usart_pic16.c: 36: switch (baud_rate) {
  7314  0D35  2D41               	goto	l3067
  7315  0D36                     l3057:	
  7316                           ;usart_pic16.c: 37: case 9600:
  7317                           
  7318                           
  7319                           ;usart_pic16.c: 38: SPBRG = 129;
  7320  0D36  3081               	movlw	129
  7321  0D37  2D3D               	goto	L13
  7322  0D38                     l3059:	
  7323                           ;usart_pic16.c: 40: case 19200:
  7324                           
  7325                           ;usart_pic16.c: 39: break;
  7326                           
  7327                           
  7328                           ;usart_pic16.c: 41: SPBRG = 64;
  7329  0D38  3040               	movlw	64
  7330  0D39  2D3D               	goto	L13
  7331  0D3A                     l3061:	
  7332                           ;usart_pic16.c: 43: case 28800:
  7333                           
  7334                           ;usart_pic16.c: 42: break;
  7335                           
  7336                           
  7337                           ;usart_pic16.c: 44: SPBRG = 42;
  7338  0D3A  302A               	movlw	42
  7339  0D3B  2D3D               	goto	L13
  7340  0D3C                     l3063:	
  7341                           ;usart_pic16.c: 46: case 33600:
  7342                           
  7343                           ;usart_pic16.c: 45: break;
  7344                           
  7345                           
  7346                           ;usart_pic16.c: 47: SPBRG = 36;
  7347  0D3C  3024               	movlw	36
  7348  0D3D                     L13:	
  7349  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  7350  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  7351  0D3F  0099               	movwf	25	;volatile
  7352                           
  7353                           ;usart_pic16.c: 49: }
  7354                           
  7355                           ;usart_pic16.c: 48: break;
  7356  0D40  2D63               	goto	l29
  7357  0D41                     l3067:	
  7358                           
  7359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  7360                           ; Switch size 1, requested type "space"
  7361                           ; Number of cases is 4, Range of values is 37 to 131
  7362                           ; switch strategies available:
  7363                           ; Name         Instructions Cycles
  7364                           ; simple_byte           13     7 (average)
  7365                           ; jumptable            263     9 (fixed)
  7366                           ;	Chosen strategy is simple_byte
  7367  0D41  0871               	movf	USARTInit@baud_rate+1,w
  7368  0D42  3A25               	xorlw	37	; case 37
  7369  0D43  1903               	skipnz
  7370  0D44  2D4F               	goto	l4523
  7371  0D45  3A6E               	xorlw	110	; case 75
  7372  0D46  1903               	skipnz
  7373  0D47  2D54               	goto	l4525
  7374  0D48  3A3B               	xorlw	59	; case 112
  7375  0D49  1903               	skipnz
  7376  0D4A  2D59               	goto	l4527
  7377  0D4B  3AF3               	xorlw	243	; case 131
  7378  0D4C  1903               	skipnz
  7379  0D4D  2D5E               	goto	l4529
  7380  0D4E  2D63               	goto	l29
  7381  0D4F                     l4523:	
  7382                           
  7383                           ; Switch size 1, requested type "space"
  7384                           ; Number of cases is 1, Range of values is 128 to 128
  7385                           ; switch strategies available:
  7386                           ; Name         Instructions Cycles
  7387                           ; simple_byte            4     3 (average)
  7388                           ; direct_byte           14    11 (fixed)
  7389                           ; jumptable            263     9 (fixed)
  7390                           ;	Chosen strategy is simple_byte
  7391  0D4F  0870               	movf	USARTInit@baud_rate,w
  7392  0D50  3A80               	xorlw	128	; case 128
  7393  0D51  1903               	skipnz
  7394  0D52  2D36               	goto	l3057
  7395  0D53  2D63               	goto	l29
  7396  0D54                     l4525:	
  7397                           
  7398                           ; Switch size 1, requested type "space"
  7399                           ; Number of cases is 1, Range of values is 0 to 0
  7400                           ; switch strategies available:
  7401                           ; Name         Instructions Cycles
  7402                           ; simple_byte            4     3 (average)
  7403                           ; direct_byte           11     8 (fixed)
  7404                           ; jumptable            260     6 (fixed)
  7405                           ;	Chosen strategy is simple_byte
  7406  0D54  0870               	movf	USARTInit@baud_rate,w
  7407  0D55  3A00               	xorlw	0	; case 0
  7408  0D56  1903               	skipnz
  7409  0D57  2D38               	goto	l3059
  7410  0D58  2D63               	goto	l29
  7411  0D59                     l4527:	
  7412                           
  7413                           ; Switch size 1, requested type "space"
  7414                           ; Number of cases is 1, Range of values is 128 to 128
  7415                           ; switch strategies available:
  7416                           ; Name         Instructions Cycles
  7417                           ; simple_byte            4     3 (average)
  7418                           ; direct_byte           14    11 (fixed)
  7419                           ; jumptable            263     9 (fixed)
  7420                           ;	Chosen strategy is simple_byte
  7421  0D59  0870               	movf	USARTInit@baud_rate,w
  7422  0D5A  3A80               	xorlw	128	; case 128
  7423  0D5B  1903               	skipnz
  7424  0D5C  2D3A               	goto	l3061
  7425  0D5D  2D63               	goto	l29
  7426  0D5E                     l4529:	
  7427                           
  7428                           ; Switch size 1, requested type "space"
  7429                           ; Number of cases is 1, Range of values is 64 to 64
  7430                           ; switch strategies available:
  7431                           ; Name         Instructions Cycles
  7432                           ; simple_byte            4     3 (average)
  7433                           ; direct_byte           14    11 (fixed)
  7434                           ; jumptable            263     9 (fixed)
  7435                           ;	Chosen strategy is simple_byte
  7436  0D5E  0870               	movf	USARTInit@baud_rate,w
  7437  0D5F  3A40               	xorlw	64	; case 64
  7438  0D60  1903               	skipnz
  7439  0D61  2D3C               	goto	l3063
  7440  0D62  2D63               	goto	l29
  7441  0D63                     l29:	
  7442                           
  7443                           ;usart_pic16.c: 52: TXSTAbits.TX9 = 0;
  7444  0D63  1683               	bsf	3,5	;RP0=1, select bank1
  7445  0D64  1303               	bcf	3,6	;RP1=0, select bank1
  7446  0D65  1318               	bcf	24,6	;volatile
  7447                           
  7448                           ;usart_pic16.c: 53: TXSTAbits.TXEN = 1;
  7449  0D66  1698               	bsf	24,5	;volatile
  7450                           
  7451                           ;usart_pic16.c: 54: TXSTAbits.SYNC = 0;
  7452  0D67  1218               	bcf	24,4	;volatile
  7453                           
  7454                           ;usart_pic16.c: 55: TXSTAbits.BRGH = 1;
  7455  0D68  1518               	bsf	24,2	;volatile
  7456                           
  7457                           ;usart_pic16.c: 58: RCSTAbits.SPEN = 1;
  7458  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  7459  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  7460  0D6B  1798               	bsf	24,7	;volatile
  7461                           
  7462                           ;usart_pic16.c: 59: RCSTAbits.RX9 = 0;
  7463  0D6C  1318               	bcf	24,6	;volatile
  7464                           
  7465                           ;usart_pic16.c: 60: RCSTAbits.CREN = 1;
  7466  0D6D  1618               	bsf	24,4	;volatile
  7467                           
  7468                           ;usart_pic16.c: 61: RCSTAbits.ADDEN = 0;
  7469  0D6E  1198               	bcf	24,3	;volatile
  7470                           
  7471                           ;usart_pic16.c: 64: RCIE = 1;
  7472  0D6F  1683               	bsf	3,5	;RP0=1, select bank1
  7473  0D70  1303               	bcf	3,6	;RP1=0, select bank1
  7474  0D71  168C               	bsf	12,5	;volatile
  7475                           
  7476                           ;usart_pic16.c: 65: PEIE = 1;
  7477  0D72  170B               	bsf	11,6	;volatile
  7478                           
  7479                           ;usart_pic16.c: 67: (GIE = 1);
  7480  0D73  178B               	bsf	11,7	;volatile
  7481  0D74  0008               	return
  7482  0D75                     __end_of_USARTInit:	
  7483                           
  7484                           	psect	text37
  7485  17BC                     __ptext37:	
  7486 ;; *************** function _Clear_Matrix *****************
  7487 ;; Defined at:
  7488 ;;		line 588 in file "teris_16f886.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;		None
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  1    wreg      void 
  7495 ;; Registers used:
  7496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7502 ;;      Params:         0       0       0       0       0
  7503 ;;      Locals:         0       0       0       0       0
  7504 ;;      Temps:          0       0       0       0       0
  7505 ;;      Totals:         0       0       0       0       0
  7506 ;;Total ram usage:        0 bytes
  7507 ;; Hardware stack levels used:    1
  7508 ;; Hardware stack levels required when called:    5
  7509 ;; This function calls:
  7510 ;;		_memset
  7511 ;;		_printf_Screen
  7512 ;; This function is called by:
  7513 ;;		_main
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           
  7518                           ;psect for function _Clear_Matrix
  7519  17BC                     _Clear_Matrix:	
  7520                           
  7521                           ;teris_16f886.c: 590: memset(&g_matrix88, 0, sizeof(MATRIX88));
  7522                           
  7523                           ;incstack = 0
  7524                           ; Regs used in _Clear_Matrix: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7525  17BC  3000               	movlw	0
  7526  17BD  00F0               	movwf	memset@c
  7527  17BE  00F1               	movwf	memset@c+1
  7528  17BF  3040               	movlw	64
  7529  17C0  00F2               	movwf	memset@n
  7530  17C1  3000               	movlw	0
  7531  17C2  00F3               	movwf	memset@n+1
  7532  17C3  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  7533  17C4  120A  158A  22D5  160A  118A  	fcall	_memset
  7534                           
  7535                           ;teris_16f886.c: 591: printf_Screen();
  7536  17C9  160A  118A  279F   	fcall	_printf_Screen
  7537  17CC  0008               	return
  7538  17CD                     __end_of_Clear_Matrix:	
  7539                           
  7540                           	psect	text38
  7541  179F                     __ptext38:	
  7542 ;; *************** function _printf_Screen *****************
  7543 ;; Defined at:
  7544 ;;		line 572 in file "teris_16f886.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7558 ;;      Params:         0       0       0       0       0
  7559 ;;      Locals:         0       0       0       0       0
  7560 ;;      Temps:          0       0       0       0       0
  7561 ;;      Totals:         0       0       0       0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    4
  7565 ;; This function calls:
  7566 ;;		_printf_MATRIX88
  7567 ;; This function is called by:
  7568 ;;		_Clear_Matrix
  7569 ;;		_main
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           
  7574                           ;psect for function _printf_Screen
  7575  179F                     _printf_Screen:	
  7576                           
  7577                           ;teris_16f886.c: 574: printf_MATRIX88(&g_matrix88);
  7578                           
  7579                           ;incstack = 0
  7580                           ; Regs used in _printf_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7581  179F  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  7582  17A0  120A  158A  2290   	fcall	_printf_MATRIX88
  7583  17A3  0008               	return
  7584  17A4                     __end_of_printf_Screen:	
  7585                           
  7586                           	psect	text39
  7587  0A90                     __ptext39:	
  7588 ;; *************** function _printf_MATRIX88 *****************
  7589 ;; Defined at:
  7590 ;;		line 545 in file "teris_16f886.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  matrix88        1    wreg     PTR const struct .
  7593 ;;		 -> g_matrix88(64), 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  matrix88        1    0[BANK0 ] PTR const struct .
  7596 ;;		 -> g_matrix88(64), 
  7597 ;;  matrix7219      8    1[BANK0 ] struct .
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  1    wreg      void 
  7600 ;; Registers used:
  7601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 0/0
  7604 ;;		On exit  : 0/0
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7607 ;;      Params:         0       0       0       0       0
  7608 ;;      Locals:         0       9       0       0       0
  7609 ;;      Temps:          1       0       0       0       0
  7610 ;;      Totals:         1       9       0       0       0
  7611 ;;Total ram usage:       10 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    3
  7614 ;; This function calls:
  7615 ;;		_MATRIX88_to_MATRIX7219
  7616 ;;		_printf_MATRIX7219
  7617 ;; This function is called by:
  7618 ;;		_printf_Screen
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622                           
  7623                           ;psect for function _printf_MATRIX88
  7624  0A90                     _printf_MATRIX88:	
  7625                           
  7626                           ;incstack = 0
  7627                           ; Regs used in _printf_MATRIX88: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7628                           ;printf_MATRIX88@matrix88 stored from wreg
  7629  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  7630  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  7631  0A92  00A0               	movwf	printf_MATRIX88@matrix88
  7632                           
  7633                           ;teris_16f886.c: 567: MATRIX7219 matrix7219;
  7634                           ;teris_16f886.c: 568: MATRIX88_to_MATRIX7219(matrix88, &matrix7219);
  7635  0A93  3021               	movlw	(low (printf_MATRIX88@matrix7219| 0))& (0+255)
  7636  0A94  00FA               	movwf	??_printf_MATRIX88
  7637  0A95  087A               	movf	??_printf_MATRIX88,w
  7638  0A96  00F0               	movwf	MATRIX88_to_MATRIX7219@matrix7219
  7639  0A97  0820               	movf	printf_MATRIX88@matrix88,w
  7640  0A98  120A  158A  25BC  120A  158A  	fcall	_MATRIX88_to_MATRIX7219
  7641                           
  7642                           ;teris_16f886.c: 569: printf_MATRIX7219(&matrix7219);
  7643  0A9D  3021               	movlw	(low (printf_MATRIX88@matrix7219| 0))& (0+255)
  7644  0A9E  120A  158A  22F1   	fcall	_printf_MATRIX7219
  7645  0AA1  0008               	return
  7646  0AA2                     __end_of_printf_MATRIX88:	
  7647                           
  7648                           	psect	text40
  7649  0AF1                     __ptext40:	
  7650 ;; *************** function _printf_MATRIX7219 *****************
  7651 ;; Defined at:
  7652 ;;		line 532 in file "teris_16f886.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  matrix          1    wreg     PTR const struct .
  7655 ;;		 -> printf_MATRIX88@matrix7219(8), 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;  matrix          1    8[COMMON] PTR const struct .
  7658 ;;		 -> printf_MATRIX88@matrix7219(8), 
  7659 ;;  col             1    9[COMMON] unsigned char 
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1    wreg      void 
  7662 ;; Registers used:
  7663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7669 ;;      Params:         0       0       0       0       0
  7670 ;;      Locals:         2       0       0       0       0
  7671 ;;      Temps:          2       0       0       0       0
  7672 ;;      Totals:         4       0       0       0       0
  7673 ;;Total ram usage:        4 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    2
  7676 ;; This function calls:
  7677 ;;		_Write_Byte
  7678 ;; This function is called by:
  7679 ;;		_printf_MATRIX88
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           
  7684                           ;psect for function _printf_MATRIX7219
  7685  0AF1                     _printf_MATRIX7219:	
  7686                           
  7687                           ;incstack = 0
  7688                           ; Regs used in _printf_MATRIX7219: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7689                           ;printf_MATRIX7219@matrix stored from wreg
  7690  0AF1  00F8               	movwf	printf_MATRIX7219@matrix
  7691                           
  7692                           ;teris_16f886.c: 534: uint8_t col;
  7693                           ;teris_16f886.c: 536: for (col = 0; col < 8; col++)
  7694  0AF2  01F9               	clrf	printf_MATRIX7219@col
  7695  0AF3                     L14:	
  7696  0AF3  3008               	movlw	8
  7697  0AF4  0279               	subwf	printf_MATRIX7219@col,w
  7698  0AF5  1803               	btfsc	3,0
  7699  0AF6  0008               	return
  7700                           
  7701                           ;teris_16f886.c: 537: {
  7702                           ;teris_16f886.c: 538: Write_Byte(col + 1, matrix->col[col]);
  7703  0AF7  0879               	movf	printf_MATRIX7219@col,w
  7704  0AF8  0778               	addwf	printf_MATRIX7219@matrix,w
  7705  0AF9  00F6               	movwf	??_printf_MATRIX7219
  7706  0AFA  0876               	movf	??_printf_MATRIX7219,w
  7707  0AFB  0084               	movwf	4
  7708  0AFC  1383               	bcf	3,7	;select IRP bank0
  7709  0AFD  0800               	movf	0,w
  7710  0AFE  00F7               	movwf	??_printf_MATRIX7219+1
  7711  0AFF  0877               	movf	??_printf_MATRIX7219+1,w
  7712  0B00  00F4               	movwf	Write_Byte@myValue
  7713  0B01  0879               	movf	printf_MATRIX7219@col,w
  7714  0B02  3E01               	addlw	1
  7715  0B03  120A  158A  227E  120A  158A  	fcall	_Write_Byte
  7716  0B08  3001               	movlw	1
  7717  0B09  00F6               	movwf	??_printf_MATRIX7219
  7718  0B0A  0876               	movf	??_printf_MATRIX7219,w
  7719  0B0B  07F9               	addwf	printf_MATRIX7219@col,f
  7720  0B0C  2AF3               	goto	L14
  7721  0B0D                     __end_of_printf_MATRIX7219:	
  7722                           
  7723                           	psect	text41
  7724  0A7E                     __ptext41:	
  7725 ;; *************** function _Write_Byte *****************
  7726 ;; Defined at:
  7727 ;;		line 437 in file "teris_16f886.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  myColumn        1    wreg     unsigned char 
  7730 ;;  myValue         1    4[COMMON] unsigned char 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  myColumn        1    5[COMMON] unsigned char 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0, pclath, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7742 ;;      Params:         1       0       0       0       0
  7743 ;;      Locals:         1       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0
  7745 ;;      Totals:         2       0       0       0       0
  7746 ;;Total ram usage:        2 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:    1
  7749 ;; This function calls:
  7750 ;;		_SPI1_write
  7751 ;; This function is called by:
  7752 ;;		_max7219_init1
  7753 ;;		_printf_MATRIX7219
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function _Write_Byte
  7759  0A7E                     _Write_Byte:	
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in _Write_Byte: [wreg+status,2+status,0+pclath+cstack]
  7763                           ;Write_Byte@myColumn stored from wreg
  7764  0A7E  00F5               	movwf	Write_Byte@myColumn
  7765                           
  7766                           ;teris_16f886.c: 439: RA2 = 0;
  7767  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  7768  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  7769  0A81  1105               	bcf	5,2	;volatile
  7770                           
  7771                           ;teris_16f886.c: 440: SPI1_write(myColumn);
  7772  0A82  0875               	movf	Write_Byte@myColumn,w
  7773  0A83  120A  118A  2004  120A  158A  	fcall	_SPI1_write
  7774                           
  7775                           ;teris_16f886.c: 441: SPI1_write(myValue);
  7776  0A88  0874               	movf	Write_Byte@myValue,w
  7777  0A89  120A  118A  2004   	fcall	_SPI1_write
  7778                           
  7779                           ;teris_16f886.c: 442: RA2 = 1;
  7780  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  7781  0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  7782  0A8E  1505               	bsf	5,2	;volatile
  7783  0A8F  0008               	return
  7784  0A90                     __end_of_Write_Byte:	
  7785                           
  7786                           	psect	text42
  7787  0004                     __ptext42:	
  7788 ;; *************** function _SPI1_write *****************
  7789 ;; Defined at:
  7790 ;;		line 412 in file "teris_16f886.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  data            1    wreg     unsigned char 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  data            1    1[COMMON] unsigned char 
  7795 ;;  i               1    3[COMMON] unsigned char 
  7796 ;;  mask            1    2[COMMON] unsigned char 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1    wreg      void 
  7799 ;; Registers used:
  7800 ;;		wreg, status,2, status,0
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7806 ;;      Params:         0       0       0       0       0
  7807 ;;      Locals:         3       0       0       0       0
  7808 ;;      Temps:          1       0       0       0       0
  7809 ;;      Totals:         4       0       0       0       0
  7810 ;;Total ram usage:        4 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_Write_Byte
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           
  7820                           ;psect for function _SPI1_write
  7821  0004                     _SPI1_write:	
  7822                           
  7823                           ;incstack = 0
  7824                           ; Regs used in _SPI1_write: [wreg+status,2+status,0]
  7825                           ;SPI1_write@data stored from wreg
  7826  0004  00F1               	movwf	SPI1_write@data
  7827                           
  7828                           ;teris_16f886.c: 414: uint8_t mask = 0b10000000;
  7829  0005  3080               	movlw	128
  7830  0006  00F0               	movwf	??_SPI1_write
  7831  0007  0870               	movf	??_SPI1_write,w
  7832  0008  00F2               	movwf	SPI1_write@mask
  7833                           
  7834                           ;teris_16f886.c: 415: for(uint8_t i = 0; i < 8; i++)
  7835  0009  01F3               	clrf	SPI1_write@i
  7836  000A                     L15:	
  7837  000A  3008               	movlw	8
  7838  000B  0273               	subwf	SPI1_write@i,w
  7839  000C  1803               	btfsc	3,0
  7840  000D  0008               	return
  7841                           
  7842                           ;teris_16f886.c: 416: {
  7843                           ;teris_16f886.c: 417: if((data & mask) > 0)
  7844  000E  0871               	movf	SPI1_write@data,w
  7845  000F  0572               	andwf	SPI1_write@mask,w
  7846  0010  1903               	btfsc	3,2
  7847  0011  2816               	goto	l201
  7848                           
  7849                           ;teris_16f886.c: 418: {
  7850                           ;teris_16f886.c: 419: RA3 = 1;
  7851  0012  1283               	bcf	3,5	;RP0=0, select bank0
  7852  0013  1303               	bcf	3,6	;RP1=0, select bank0
  7853  0014  1585               	bsf	5,3	;volatile
  7854                           
  7855                           ;teris_16f886.c: 421: }
  7856  0015  2819               	goto	l2399
  7857  0016                     l201:	
  7858                           
  7859                           ;teris_16f886.c: 422: else
  7860                           ;teris_16f886.c: 423: {
  7861                           ;teris_16f886.c: 424: RA3 = 0;
  7862  0016  1283               	bcf	3,5	;RP0=0, select bank0
  7863  0017  1303               	bcf	3,6	;RP1=0, select bank0
  7864  0018  1185               	bcf	5,3	;volatile
  7865  0019                     l2399:	
  7866                           
  7867                           ;teris_16f886.c: 426: }
  7868                           ;teris_16f886.c: 427: mask >>= 1;
  7869  0019  1003               	clrc
  7870  001A  0CF2               	rrf	SPI1_write@mask,f
  7871                           
  7872                           ;teris_16f886.c: 428: RA1 = 1;
  7873  001B  1485               	bsf	5,1	;volatile
  7874                           
  7875                           ;teris_16f886.c: 429: _delay((unsigned long)((10)*(20000000/4000000.0)));
  7876  001C  3010               	movlw	16
  7877  001D  00F0               	movwf	??_SPI1_write
  7878  001E                     u6357:	
  7879  001E  0BF0               	decfsz	??_SPI1_write,f
  7880  001F  281E               	goto	u6357
  7881  0020  0000               	nop
  7882                           
  7883                           ;teris_16f886.c: 430: RA1 = 0;
  7884  0021  1283               	bcf	3,5	;RP0=0, select bank0
  7885  0022  1303               	bcf	3,6	;RP1=0, select bank0
  7886  0023  1085               	bcf	5,1	;volatile
  7887                           
  7888                           ;teris_16f886.c: 431: _delay((unsigned long)((10)*(20000000/4000000.0)));
  7889  0024  3010               	movlw	16
  7890  0025  00F0               	movwf	??_SPI1_write
  7891  0026                     u6367:	
  7892  0026  0BF0               	decfsz	??_SPI1_write,f
  7893  0027  2826               	goto	u6367
  7894  0028  0000               	nop
  7895  0029  3001               	movlw	1
  7896  002A  00F0               	movwf	??_SPI1_write
  7897  002B  0870               	movf	??_SPI1_write,w
  7898  002C  07F3               	addwf	SPI1_write@i,f
  7899  002D  280A               	goto	L15
  7900  002E                     __end_of_SPI1_write:	
  7901                           
  7902                           	psect	text43
  7903  0DBC                     __ptext43:	
  7904 ;; *************** function _MATRIX88_to_MATRIX7219 *****************
  7905 ;; Defined at:
  7906 ;;		line 454 in file "teris_16f886.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  matrix88        1    wreg     PTR const struct .
  7909 ;;		 -> g_matrix88(64), 
  7910 ;;  matrix7219      1    0[COMMON] PTR struct .
  7911 ;;		 -> printf_MATRIX88@matrix7219(8), 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  matrix88        1    4[COMMON] PTR const struct .
  7914 ;;		 -> g_matrix88(64), 
  7915 ;;  row             1    6[COMMON] unsigned char 
  7916 ;;  col             1    7[COMMON] unsigned char 
  7917 ;;  mask            1    5[COMMON] unsigned char 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7927 ;;      Params:         1       0       0       0       0
  7928 ;;      Locals:         4       0       0       0       0
  7929 ;;      Temps:          3       0       0       0       0
  7930 ;;      Totals:         8       0       0       0       0
  7931 ;;Total ram usage:        8 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; This function calls:
  7934 ;;		Nothing
  7935 ;; This function is called by:
  7936 ;;		_printf_MATRIX88
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           
  7941                           ;psect for function _MATRIX88_to_MATRIX7219
  7942  0DBC                     _MATRIX88_to_MATRIX7219:	
  7943                           
  7944                           ;incstack = 0
  7945                           ; Regs used in _MATRIX88_to_MATRIX7219: [wreg-fsr0h+status,2+status,0]
  7946                           ;MATRIX88_to_MATRIX7219@matrix88 stored from wreg
  7947  0DBC  00F4               	movwf	MATRIX88_to_MATRIX7219@matrix88
  7948                           
  7949                           ;teris_16f886.c: 456: uint8_t mask = 0x80;
  7950  0DBD  3080               	movlw	128
  7951  0DBE  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7952  0DBF  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7953  0DC0  00F5               	movwf	MATRIX88_to_MATRIX7219@mask
  7954                           
  7955                           ;teris_16f886.c: 458: for(uint8_t col = 0; col < 8; col++)
  7956  0DC1  01F7               	clrf	MATRIX88_to_MATRIX7219@col
  7957  0DC2                     L16:	
  7958  0DC2  3008               	movlw	8
  7959  0DC3  0277               	subwf	MATRIX88_to_MATRIX7219@col,w
  7960  0DC4  1803               	btfsc	3,0
  7961  0DC5  0008               	return
  7962                           
  7963                           ;teris_16f886.c: 459: {
  7964                           ;teris_16f886.c: 460: mask = 0x80;
  7965  0DC6  3080               	movlw	128
  7966  0DC7  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7967  0DC8  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7968  0DC9  00F5               	movwf	MATRIX88_to_MATRIX7219@mask
  7969                           
  7970                           ;teris_16f886.c: 461: matrix7219->col[col] = 0;
  7971  0DCA  0877               	movf	MATRIX88_to_MATRIX7219@col,w
  7972  0DCB  0770               	addwf	MATRIX88_to_MATRIX7219@matrix7219,w
  7973  0DCC  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7974  0DCD  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7975  0DCE  0084               	movwf	4
  7976  0DCF  1383               	bcf	3,7	;select IRP bank0
  7977  0DD0  0180               	clrf	0
  7978                           
  7979                           ;teris_16f886.c: 462: for(uint8_t row = 0; row < 8; row++)
  7980  0DD1  01F6               	clrf	MATRIX88_to_MATRIX7219@row
  7981  0DD2  3008               	movlw	8
  7982  0DD3  0276               	subwf	MATRIX88_to_MATRIX7219@row,w
  7983  0DD4  1803               	btfsc	3,0
  7984  0DD5  2DFF               	goto	l2447
  7985  0DD6                     l2437:	
  7986                           
  7987                           ;teris_16f886.c: 463: {
  7988                           ;teris_16f886.c: 464: if(matrix88->data[row][col] == 1)
  7989  0DD6  0876               	movf	MATRIX88_to_MATRIX7219@row,w
  7990  0DD7  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7991  0DD8  3002               	movlw	2
  7992  0DD9                     u2505:	
  7993  0DD9  1003               	clrc
  7994  0DDA  0DF1               	rlf	??_MATRIX88_to_MATRIX7219,f
  7995  0DDB  3EFF               	addlw	-1
  7996  0DDC  1D03               	skipz
  7997  0DDD  2DD9               	goto	u2505
  7998  0DDE  1003               	clrc
  7999  0DDF  0D71               	rlf	??_MATRIX88_to_MATRIX7219,w
  8000  0DE0  0774               	addwf	MATRIX88_to_MATRIX7219@matrix88,w
  8001  0DE1  00F2               	movwf	??_MATRIX88_to_MATRIX7219+1
  8002  0DE2  0877               	movf	MATRIX88_to_MATRIX7219@col,w
  8003  0DE3  0772               	addwf	??_MATRIX88_to_MATRIX7219+1,w
  8004  0DE4  00F3               	movwf	??_MATRIX88_to_MATRIX7219+2
  8005  0DE5  0873               	movf	??_MATRIX88_to_MATRIX7219+2,w
  8006  0DE6  0084               	movwf	4
  8007  0DE7  1783               	bsf	3,7	;select IRP bank2
  8008  0DE8  0300               	decf	0,w
  8009  0DE9  1D03               	btfss	3,2
  8010  0DEA  2DF5               	goto	l2441
  8011                           
  8012                           ;teris_16f886.c: 465: {
  8013                           ;teris_16f886.c: 466: matrix7219->col[col] |= mask;
  8014  0DEB  0875               	movf	MATRIX88_to_MATRIX7219@mask,w
  8015  0DEC  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  8016  0DED  0877               	movf	MATRIX88_to_MATRIX7219@col,w
  8017  0DEE  0770               	addwf	MATRIX88_to_MATRIX7219@matrix7219,w
  8018  0DEF  00F2               	movwf	??_MATRIX88_to_MATRIX7219+1
  8019  0DF0  0872               	movf	??_MATRIX88_to_MATRIX7219+1,w
  8020  0DF1  0084               	movwf	4
  8021  0DF2  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  8022  0DF3  1383               	bcf	3,7	;select IRP bank0
  8023  0DF4  0480               	iorwf	0,f
  8024  0DF5                     l2441:	
  8025                           
  8026                           ;teris_16f886.c: 467: }
  8027                           ;teris_16f886.c: 468: mask >>= 1;
  8028  0DF5  1003               	clrc
  8029  0DF6  0CF5               	rrf	MATRIX88_to_MATRIX7219@mask,f
  8030  0DF7  3001               	movlw	1
  8031  0DF8  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  8032  0DF9  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  8033  0DFA  07F6               	addwf	MATRIX88_to_MATRIX7219@row,f
  8034  0DFB  3008               	movlw	8
  8035  0DFC  0276               	subwf	MATRIX88_to_MATRIX7219@row,w
  8036  0DFD  1C03               	skipc
  8037  0DFE  2DD6               	goto	l2437
  8038  0DFF                     l2447:	
  8039  0DFF  3001               	movlw	1
  8040  0E00  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  8041  0E01  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  8042  0E02  07F7               	addwf	MATRIX88_to_MATRIX7219@col,f
  8043  0E03  2DC2               	goto	L16
  8044  0E04                     __end_of_MATRIX88_to_MATRIX7219:	
  8045                           
  8046                           	psect	text44
  8047  0AD5                     __ptext44:	
  8048 ;; *************** function _memset *****************
  8049 ;; Defined at:
  8050 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  p1              1    wreg     PTR void 
  8053 ;;		 -> g_matrix88.data(64), g_matrix88(64), 
  8054 ;;  c               2    0[COMMON] int 
  8055 ;;  n               2    2[COMMON] unsigned int 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;  p1              1    6[COMMON] PTR void 
  8058 ;;		 -> g_matrix88.data(64), g_matrix88(64), 
  8059 ;;  p               1    5[COMMON] PTR unsigned char 
  8060 ;;		 -> g_matrix88.data(64), g_matrix88(64), 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      PTR void 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8070 ;;      Params:         4       0       0       0       0
  8071 ;;      Locals:         2       0       0       0       0
  8072 ;;      Temps:          1       0       0       0       0
  8073 ;;      Totals:         7       0       0       0       0
  8074 ;;Total ram usage:        7 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		_Clear_Matrix
  8080 ;;		_delete_row
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           
  8085                           ;psect for function _memset
  8086  0AD5                     _memset:	
  8087                           
  8088                           ;incstack = 0
  8089                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  8090                           ;memset@p1 stored from wreg
  8091  0AD5  00F6               	movwf	memset@p1
  8092  0AD6  0876               	movf	memset@p1,w
  8093  0AD7  00F4               	movwf	??_memset
  8094  0AD8  0874               	movf	??_memset,w
  8095  0AD9  00F5               	movwf	memset@p
  8096  0ADA                     l2479:	
  8097  0ADA  3001               	movlw	1
  8098  0ADB  02F2               	subwf	memset@n,f
  8099  0ADC  3000               	movlw	0
  8100  0ADD  1C03               	skipc
  8101  0ADE  03F3               	decf	memset@n+1,f
  8102  0ADF  02F3               	subwf	memset@n+1,f
  8103  0AE0  0A72               	incf	memset@n,w
  8104  0AE1  1903               	btfsc	3,2
  8105  0AE2  0A73               	incf	memset@n+1,w
  8106  0AE3  1903               	btfsc	3,2
  8107  0AE4  0008               	return
  8108  0AE5  0870               	movf	memset@c,w
  8109  0AE6  00F4               	movwf	??_memset
  8110  0AE7  0875               	movf	memset@p,w
  8111  0AE8  0084               	movwf	4
  8112  0AE9  0874               	movf	??_memset,w
  8113  0AEA  1783               	bsf	3,7	;select IRP bank2
  8114  0AEB  0080               	movwf	0
  8115  0AEC  3001               	movlw	1
  8116  0AED  00F4               	movwf	??_memset
  8117  0AEE  0874               	movf	??_memset,w
  8118  0AEF  07F5               	addwf	memset@p,f
  8119  0AF0  2ADA               	goto	l2479
  8120  0AF1                     __end_of_memset:	
  8121                           ;	Return value of _memset is never used
  8122                           
  8123  007E                     btemp	set	126	;btemp
  8124  007E                     wtemp	set	126
  8125  007E                     wtemp0	set	126
  8126  0080                     wtemp1	set	128
  8127  0082                     wtemp2	set	130
  8128  0084                     wtemp3	set	132
  8129  0086                     wtemp4	set	134
  8130  0088                     wtemp5	set	136
  8131  007F                     wtemp6	set	127
  8132  007E                     ttemp	set	126
  8133  007E                     ttemp0	set	126
  8134  0081                     ttemp1	set	129
  8135  0084                     ttemp2	set	132
  8136  0087                     ttemp3	set	135
  8137  007F                     ttemp4	set	127
  8138  007E                     ltemp	set	126
  8139  007E                     ltemp0	set	126
  8140  0082                     ltemp1	set	130
  8141  0086                     ltemp2	set	134
  8142  0080                     ltemp3	set	128


Data Sizes:
    Strings     191
    Constant    414
    Data        32
    BSS         203
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      75
    BANK1            80      0      59
    BANK3            96      0      96
    BANK2            96      0      64

Pointer List with Targets:

    is_right_boundary@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    is_left_boundary@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    memset@p1	PTR void  size(1) Largest target is 64
		 -> g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memset@p	PTR unsigned char  size(1) Largest target is 64
		 -> g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@d1	PTR void  size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@s1	PTR const void  size(1) Largest target is 64
		 -> g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 64
		 -> g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    g_cur_matrix44	PTR struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    temp_cur_matrix44	PTR struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    get_holes_after_merge@matrix	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    get_high_after_merge@matrix	PTR struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    get_high@matrix	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    right_most@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    right_most@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    left_most@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    left_most@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    get_heavy@matrix	PTR const struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    get_num_of_orphan@matrix	PTR const struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    merge1@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    merge1@matrix88_in	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    merge1@matrix88_out	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    merge@matrix88	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    merge@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    clear@matrix88	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    clear@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    fall_off@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    fall_off@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_right_boundary@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_left_boundary@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_valid@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    is_valid@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    hit_land@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    hit_land@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_row_empty@matrix	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    get_num_removed_rows@matrix	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    delete_matrix@matrix	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    sp__memcpy	PTR void  size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    delete_row@matrix	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    is_row_full@matrix	PTR const struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88(BANK3[64]), 

    sp__memset	PTR void  size(1) Largest target is 64
		 -> g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    printf_MATRIX88@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    printf_MATRIX7219@matrix	PTR const struct . size(1) Largest target is 8
		 -> printf_MATRIX88@matrix7219(BANK0[8]), 

    printf_debug_MATRIX88@matrix	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    printf_debug_MATRIX88@lable	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_22(CODE[12]), ROM(CODE[8192]), 

    MATRIX88_to_MATRIX7219@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    MATRIX88_to_MATRIX7219@matrix7219	PTR struct . size(1) Largest target is 8
		 -> printf_MATRIX88@matrix7219(BANK0[8]), 

    sp__get_MATRIX44	PTR struct . size(2) Largest target is 384
		 -> g_matrix44(CODE[384]), 

    debug_line@str	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_21(CODE[2]), STR_20(CODE[21]), STR_19(CODE[1]), STR_16(CODE[29]), 
		 -> STR_15(CODE[2]), STR_12(CODE[20]), STR_11(CODE[2]), STR_10(CODE[21]), 
		 -> STR_9(CODE[1]), STR_6(CODE[29]), STR_5(CODE[2]), 

    debug_str@str	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_22(CODE[12]), STR_18(CODE[2]), STR_17(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), ROM(CODE[8192]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_22(CODE[12]), STR_21(CODE[2]), STR_20(CODE[21]), STR_19(CODE[1]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[29]), STR_15(CODE[2]), 
		 -> STR_12(CODE[20]), STR_11(CODE[2]), STR_10(CODE[21]), STR_9(CODE[1]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[29]), STR_5(CODE[2]), 
		 -> ROM(CODE[8192]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> g_debug(BANK1[32]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _printf_debug_MATRIX88->_debug_line
    _printf_debug_MATRIX88->_debug_str
    _debug_str->_USARTWriteString
    _debug_line->_USARTWriteString
    _USARTWriteString->_USARTWriteChar
    _max7219_init1->_Write_Byte
    _find_best_solution->___wmul
    _find_best_solution->_left_most
    _find_best_solution->_right_most
    _right_most->_is_right_boundary
    _merge1->_memcpy
    _left_most->_is_left_boundary
    _get_num_removed_rows->_is_row_full
    _get_high->_is_row_empty
    ___wmul->_get_holes_after_merge
    _delete_matrix->_delete_row
    _delete_row->_memcpy
    _delete_row->_memset
    _char_info_index_rand->___awmod
    _rand->___lmul
    _printf_Screen->_printf_MATRIX88
    _printf_MATRIX88->_printf_MATRIX7219
    _printf_MATRIX7219->_Write_Byte
    _Write_Byte->_SPI1_write

Critical Paths under _main in BANK0

    _main->_find_best_solution
    _find_best_solution->_merge1
    _delete_matrix->_delete_row
    _char_info_index_rand->___awmod
    ___awmod->_rand
    _printf_Screen->_printf_MATRIX88

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    12      4   17553
                                             41 BANK0     16    12      4
                       _Clear_Matrix
                          _USARTInit
                             ___bmul
               _char_info_index_rand
                              _clear
                      _delete_matrix
                 _find_best_solution
                           _hit_land
                      _max7219_init1
                              _merge
                      _printf_Screen
              _printf_debug_MATRIX88
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _printf_debug_MATRIX88                                8     5      3    2659
                                              5 COMMON     8     5      3
                         _debug_line
                          _debug_str
 ---------------------------------------------------------------------------------
 (2) _debug_str                                            2     0      2    1043
                                              3 COMMON     2     0      2
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (2) _debug_line                                           2     0      2    1202
                                              3 COMMON     2     0      2
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (3) _USARTWriteString                                     2     0      2     597
                                              1 COMMON     2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (4) _USARTWriteChar                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _merge                                               11     7      4     427
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _max7219_init1                                        1     1      0     454
                                              6 COMMON     1     1      0
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (2) _hit_land                                            11     7      4     471
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _find_best_solution                                  32    32      0    7869
                                              9 BANK0     32    32      0
                             ___bmul
                             ___wmul
                           _fall_off
                          _get_heavy
                           _get_high
               _get_high_after_merge
              _get_holes_after_merge
                  _get_num_of_orphan
               _get_num_removed_rows
                           _is_valid
                          _left_most
                             _merge1
                         _right_most
 ---------------------------------------------------------------------------------
 (2) _right_most                                           5     2      3     503
                                             10 COMMON     4     1      3
                                              0 BANK0      1     1      0
                  _is_right_boundary
 ---------------------------------------------------------------------------------
 (4) _is_right_boundary                                   10     7      3     308
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (2) _merge1                                              14     9      5     933
                                              7 COMMON     5     0      5
                                              0 BANK0      9     9      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _left_most                                            5     2      3     503
                                             11 COMMON     3     0      3
                                              0 BANK0      2     2      0
                   _is_left_boundary
 ---------------------------------------------------------------------------------
 (4) _is_left_boundary                                    11     8      3     308
                                              0 COMMON    11     8      3
 ---------------------------------------------------------------------------------
 (3) _is_valid                                            11     7      4     559
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (2) _get_num_removed_rows                                 4     4      0     440
                                              6 COMMON     4     4      0
                        _is_row_full
 ---------------------------------------------------------------------------------
 (2) _get_num_of_orphan                                   12    10      2     416
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (2) _get_holes_after_merge                               12    12      0    1081
                                              0 COMMON    12    12      0
 ---------------------------------------------------------------------------------
 (3) _get_high_after_merge                                 9     7      2     255
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _get_high                                             3     3      0     331
                                              6 COMMON     3     3      0
                       _is_row_empty
 ---------------------------------------------------------------------------------
 (3) _is_row_empty                                         6     5      1     192
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _get_heavy                                           13    11      2     463
                                              0 COMMON    13    11      2
 ---------------------------------------------------------------------------------
 (3) _fall_off                                            11     7      4     516
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     978
                                             12 COMMON     2     2      0
                                              0 BANK0      4     0      4
              _get_holes_after_merge (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     367
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _delete_matrix                                        4     4      0    1514
                                             11 COMMON     1     1      0
                                              4 BANK0      3     3      0
                         _delete_row
                        _is_row_full
 ---------------------------------------------------------------------------------
 (3) _is_row_full                                          6     5      1     272
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _delete_row                                           8     7      1    1095
                                              7 COMMON     4     3      1
                                              0 BANK0      4     4      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     386
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (2) _clear                                               11     7      4     427
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _char_info_index_rand                                 0     0      0     706
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     198
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     198
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                             13 COMMON     1     1      0
                                              7 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _USARTInit                                            3     1      2      75
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Clear_Matrix                                         0     0      0    1402
                             _memset
                      _printf_Screen
 ---------------------------------------------------------------------------------
 (1) _printf_Screen                                        0     0      0    1040
                    _printf_MATRIX88
 ---------------------------------------------------------------------------------
 (2) _printf_MATRIX88                                     10    10      0    1040
                                             10 COMMON     1     1      0
                                              0 BANK0      9     9      0
             _MATRIX88_to_MATRIX7219
                  _printf_MATRIX7219
 ---------------------------------------------------------------------------------
 (3) _printf_MATRIX7219                                    4     4      0     593
                                              6 COMMON     4     4      0
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (4) _Write_Byte                                           2     1      1     454
                                              4 COMMON     2     1      1
                         _SPI1_write
 ---------------------------------------------------------------------------------
 (5) _SPI1_write                                           4     4      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (3) _MATRIX88_to_MATRIX7219                               8     7      1     351
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (3) _memset                                               7     3      4     362
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear_Matrix
     _memset
     _printf_Screen
       _printf_MATRIX88
         _MATRIX88_to_MATRIX7219
         _printf_MATRIX7219
           _Write_Byte
             _SPI1_write
   _USARTInit
   ___bmul
   _char_info_index_rand
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
   _clear
   _delete_matrix
     _delete_row
       _memcpy
       _memset
     _is_row_full
   _find_best_solution
     ___bmul
     ___wmul
       _get_holes_after_merge (ARG)
     _fall_off
     _get_heavy
     _get_high
       _is_row_empty
     _get_high_after_merge
     _get_holes_after_merge
     _get_num_of_orphan
     _get_num_removed_rows
       _is_row_full
     _is_valid
     _left_most
       _is_left_boundary
     _merge1
       _memcpy
     _right_most
       _is_right_boundary
   _hit_land
   _max7219_init1
     _Write_Byte
       _SPI1_write
   _merge
   _printf_Screen
     _printf_MATRIX88
       _MATRIX88_to_MATRIX7219
       _printf_MATRIX7219
         _Write_Byte
           _SPI1_write
   _printf_debug_MATRIX88
     _debug_line
       _USARTWriteString
         _USARTWriteChar
     _debug_str
       _USARTWriteString
         _USARTWriteChar
   _srand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60       9      100.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      40      11       66.7%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3B       7       73.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     39      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     134      12        0.0%
ABS                  0      0     134       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Aug 28 21:09:09 2016

                         __CFG_CP$ON 0000                                    pc 0002  
                     ___bmul@product 0072        get_holes_after_merge@num_hole 0076  
                                 l36 17A5                                   l29 0D63  
                        __CFG_CPD$ON 0000                    merge1@matrix88_in 007A  
     __end_of_MATRIX88_to_MATRIX7219 0E04                                   fsr 0004  
                ___wmul@multiplicand 0022                   USARTInit@baud_rate 0070  
              ?_char_info_index_rand 0070                          get_high@row 0078  
                        __CFG_LVP$ON 0000                                  l201 0016  
                                l220 00AA                                  l400 0B30  
                                l424 0442                                  l272 0BAB  
                                l329 01E4                                  l441 046B  
                                l435 0439                                  l384 02B8  
                                l393 0B10                                  l465 049D  
                                l706 0B7B                                  _GIE 005F  
                                _RA1 0029                                  _RA2 002A  
                                _RA3 002B                   merge1@matrix88_out 007B  
                                fsr0 0004                                  indf 0000  
                       ___awmod@sign 002C                         __CFG_IESO$ON 0000  
                       get_heavy@col 007B                         get_heavy@pre 007A  
                       get_heavy@row 007C                __end_of_max7219_init1 0C7B  
                     is_row_full@col 0075                       is_row_full@row 0070  
                               l3005 17CF                                 l3025 0E10  
                               l3009 17D5                                 l3201 00B8  
                               l3051 0E4C                                 l3043 0E39  
                               l3211 00D6                                 l3061 0D3A  
                               l3037 0E1D                                 l3029 0E17  
                               l3063 0D3C                                 l3039 0E2B  
                               l3047 0E44                                 l3207 00BD  
                               l3223 00F8                                 l2441 0DF5  
                               l3057 0D36                                 l2601 0CCA  
                               l3217 00E7                                 l3059 0D38  
                               l3067 0D41                                 l2523 0C45  
                               l3323 0EEB                                 l3315 0EAB  
                               l2437 0DD6                                 l2509 0BE4  
                               l3237 0CA5                                 l2517 0C2E  
                               l3261 0146                                 l3253 010D  
                               l2447 0DFF                                 l2631 008D  
                               l3239 0C83                                 l2703 01EA  
                               l2527 0C4D                                 l2551 0F34  
                               l2543 0EFD                                 l3271 0169  
                               l3247 0107                                 l3319 0EE3  
                               l2641 0B9A                                 l2537 0EF7  
                               l3361 06F6                                 l3291 0E5C  
                               l2723 0243                                 l2731 0252  
                               l2555 0F3D                                 l3371 07A1  
                               l3267 0160                                 l3275 016F  
                               l2629 0074                                 l2493 0C1E  
                               l2717 022C                                 l2709 01F0  
                               l2821 0288                                 l2901 0CF8  
                               l3381 07BF                                 l3373 0596  
                               l2469 0BB6                                 l2479 0ADA  
                               l2399 0019                                 l3295 0E93  
                               l2487 0C07                                 l2727 024C  
                               l2807 0263                                 l2911 0D29  
                               l2647 0BB4                                 l2671 031E  
                               l2663 02E3                                 l2559 0F43  
                               l2583 0F8B                                 l2575 0F52  
                               l2591 0F9A                                 l3375 07A6  
                               l3367 079A                                 l2497 0C26  
                               l2833 02C3                                 l2817 026E  
                               l2841 02D1                                 l2657 02DD  
                               l2753 0FF3                                 l2569 0F4C  
                               l3369 0601                                 l4523 0D4F  
                               l3299 0E9B                                 l2907 0D20  
                               l2931 0380                                 l2923 0375  
                               l2675 033F                                 l2587 0F94  
                               l4525 0D54                                 l2597 0CB4  
                               l2829 02BA                                 l2837 02C9  
                               l2941 03A5                                 l2685 0358  
                               l2693 0367                                 l2757 0FFB  
                               l2749 0FBD                                 l4527 0D59  
                               l2951 03CB                                 l2791 01D6  
                               l2775 0187                                 l2679 0341  
                               l4529 0D5E                                 l2881 0B67  
                               l2961 0411                                 l2785 01BB  
                               l2769 017D                                 l2689 0361  
                               l2875 0B54                                 l2779 019D  
                               l2795 01DE                                 l2859 0B26  
                               l2867 0B46                                 l2885 0B6D  
                               l2991 0B71                                 l2969 041C  
                               l2985 0474                                 l3873 04FD  
                               l3859 04A2                                 l3885 0545  
                               STR_1 0A66                         __CFG_WDTE$ON 0000  
                               STR_5 0A6B                                 STR_6 09B0  
                               STR_7 0A69                                 STR_8 0A6D  
                        main@hit_res 0058                                 u3115 021A  
                               u3035 033D                                 u3205 0FE5  
                               u3055 0354                                 u2505 0DD9  
                               u3145 023F                                 u3305 01BE  
                               u3265 018D                                 u4225 00C0  
                               u3275 01A0                                 u3445 0DAE  
                               u4405 0E86                                 u3365 0274  
                               u2645 0C31                                 u3605 039F  
                               u4325 0142                                 u3375 028B  
                               u4335 014E                                 u2825 0CCC  
                               u2905 0080                                 u2835 0CD4  
                               u2595 0C0A                                 u3395 02A1  
                               u3715 03E7                                 _PEIE 005E  
                               u3645 03AC                                 u4525 06D1  
                               u3735 03FC                                 u2775 0F87  
                               u4535 075B                                 u2865 0043  
                               u3665 03C5                                 u3585 0386  
                               u4545 078A                                 u4465 0ED5  
                               _RCIE 0465                                 u2885 0053  
                               u2895 0066                                 u3855 0465  
                               u3695 03CE                                 u2985 030D  
                               u6337 0538                                 u3795 041F  
                               u6347 0578                                 u6357 001E  
                               u3965 0E20                                 u3885 0B7C  
                               u6367 0026                                 u3895 0B83  
                               u3985 0E31                                 u3995 0E3A  
                       __CFG_WRT$OFF 0000               __end_of_USARTWriteChar 17AC  
                      __CFG_FCMEN$ON 0000                                 _main 0476  
                               _rand 0D75                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0000                                 ttemp 007E  
                               wtemp 007E                    ___bmul@multiplier 0073  
                      __CFG_MCLRE$ON 0000      find_best_solution@tem_sub_index 0047  
       __end_of_get_num_removed_rows 0BB6                        get_heavy@risk 0076  
                    is_row_empty@col 0075                      is_row_empty@row 0070  
         get_high_after_merge@matrix 0070                                ?_main 0049  
                              ?_rand 0020                                STR_10 0A05  
                              STR_20 0A05                                STR_12 0A1A  
                              STR_13 0A5C                                STR_22 0A50  
                              STR_14 09EA                                STR_15 0A6B  
                              STR_23 0A2E                                STR_24 0A3F  
                              STR_16 09CD                                STR_17 0A69  
                              STR_18 0A6D                                STR_19 0A68  
                    __end_of___awmod 0E51                     USARTWriteChar@ch 0070  
                              _RCREG 001A                                _SPBRG 0099  
                   _is_left_boundary 0EF0                                _TXREG 0019  
                              _UQEnd 0069                  ___lmul@multiplicand 0074  
                        ?_SPI1_write 0070                                _clear 0E51  
                    __end_of_dpowers 0828                                _cur_x 0068  
                              _cur_y 0062                                _merge 0EA0  
                              _randx 0064                                _srand 0A75  
                       ?_is_row_full 0070                      ??_printf_Screen 007B  
                              pclath 000A                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                   __size_of_USARTInit 0047  
                    ?_USARTWriteChar 0070             printf_debug_MATRIX88@col 007C  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F             printf_debug_MATRIX88@row 007B  
                              status 0003                          hit_land@col 0079  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                          hit_land@row 007A  
              _printf_debug_MATRIX88 0094                       get_high@matrix 0077  
                    __initialization 07C1      find_best_solution@temp_pre_risk 003B  
                       __end_of_main 0586                         __end_of_rand 0DBC  
                     get_heavy@start 0078               ??_char_info_index_rand 007E  
                             ??_main 004D                               ??_rand 0022  
           find_best_solution@temp_x 0048             find_best_solution@temp_y 0046  
                             ?_clear 0070                               ?_merge 0070  
                             ?_srand 0070                __size_of_Clear_Matrix 0011  
            get_num_of_orphan@matrix 0079                __end_of_delete_matrix 0CAC  
                             _URBuff 0190                     __end_of_fall_off 0257  
                     __CFG_PWRTE$OFF 0000                get_high_after_merge@y 0076  
          get_num_removed_rows@count 0077                     __end_of_get_high 0B6F  
                             ___bmul 17CD                  __size_of_SPI1_write 002A  
                             ___lmul 0CAC                               ___wmul 0B6F  
                          ??___awmod 007D                     __end_of_hit_land 0171  
                             _merge1 0F9C             __end_of_USARTWriteString 0BDB  
                             _memcpy 0BDB                               _memset 0AD5  
                   __end_of_is_valid 0369                               clear@x 0078  
                             clear@y 0070                      ___awmod@divisor 0027  
           __size_of_printf_MATRIX88 0012                      ___awmod@counter 002B  
                  __end_of_USARTInit 0D75                        ?_is_row_empty 0070  
        __size_of_find_best_solution 023B                               merge@x 0078  
                             merge@y 0070                          is_valid@col 007A  
                        is_valid@row 0079                         _Clear_Matrix 17BC  
                             srand@x 0070                    _is_right_boundary 0F45  
               _get_num_removed_rows 0B92              ??_get_holes_after_merge 0070  
         printf_debug_MATRIX88@lable 0075                   ?_is_right_boundary 0070  
            __end_of__initialization 07FC                       merge1@matrix44 0078  
             ?_printf_debug_MATRIX88 0075                       _g_cur_matrix44 005E  
                ??_is_right_boundary 0073                  ___bmul@multiplicand 0070  
                     __pcstackCOMMON 0070                         __pidataBANK0 0A70  
                       __pidataBANK1 0ABA                        __end_of_clear 0EA0  
                         _Write_Byte 0A7E                        __end_of_merge 0EF0  
                    get_heavy@matrix 0079                        __end_of_srand 0A7E  
                 __size_of_debug_str 0008                       ??_is_row_empty 0071  
              get_num_of_orphan@full 0078            __end_of_is_right_boundary 0F9C  
              get_num_of_orphan@risk 0076        __size_of_get_high_after_merge 0043  
                 __size_of_get_heavy 007F           get_holes_after_merge@start 0078  
              ?_get_num_removed_rows 0070                              ??_clear 0074  
                            ??_merge 0074                              ??_srand 0072  
                         __pbssBANK0 0059                           __pbssBANK1 00A0  
                         __pbssBANK2 0110                           __pbssBANK3 0190  
                 __size_of_left_most 0020                    is_row_full@matrix 0074  
               __size_of_is_row_full 0027                           _debug_line 17DE  
                delete_matrix@matrix 0025                     is_valid@matrix44 0071  
                   is_valid@matrix88 0073             __end_of_is_left_boundary 0F45  
                         _g_matrix44 0830                           _delete_row 002E  
                         _g_matrix88 01B0                           __pmaintext 0476  
                            ?___bmul 0070                              ?___lmul 0070  
                            ?___wmul 0020                              ?_merge1 0077  
                            ?_memcpy 0070                              ?_memset 0070  
                     ___lmul@product 0079            get_holes_after_merge@stop 0077  
                       ??_SPI1_write 0070                            ?_fall_off 0070  
                  ??_printf_MATRIX88 007A            printf_MATRIX88@matrix7219 0021  
                   ??_USARTWriteChar 0070                 is_right_boundary@col 0079  
               is_right_boundary@row 0078                            ?_get_high 0070  
                 USARTWriteInt@F1617 0059                           __stringtab 0800  
                  _get_num_of_orphan 0171                            ?_hit_land 0070  
                  __end_of_debug_str 17B4                              _UQFront 006A  
                          ?_is_valid 0070                   ?_get_num_of_orphan 0070  
                      debug_line@str 0073                    __end_of_get_heavy 02D6  
            get_num_removed_rows@row 0079                  ??_get_num_of_orphan 0072  
                    __size_of___bmul 0011                      __size_of___lmul 003F  
                        ?_Write_Byte 0074                              ___awmod 0E04  
                 __end_of_SPI1_write 002E                      __size_of___wmul 0023  
             __size_of_max7219_init1 002C                          right_most@x 0020  
                            _g_debug 00A0                      __size_of_merge1 0064  
                    __size_of_memcpy 0026                            _ANSELbits 0188  
                    __size_of_memset 001C                    __end_of_left_most 0B2D  
                            __ptext1 0A75                              __ptext2 0094  
                            __ptext3 17AC                              __ptext4 17DE  
                            __ptext5 0BB6                              __ptext6 17A4  
                            __ptext7 0EA0                              __ptext8 0C4F  
                            __ptext9 0100  find_best_solution@tem_pre_sub_index 0040  
                  __end_of_hexpowers 0830                     fall_off@matrix44 0071  
                   fall_off@matrix88 0073                              _dpowers 081E  
                   ___awmod@dividend 0029           __size_of_is_right_boundary 0057  
             ??_get_num_removed_rows 0076                          SPI1_write@i 0073  
                         ??_fall_off 0074            __end_of_get_num_of_orphan 01E3  
                         ??_get_high 0076                              clrloop0 17B5  
               end_of_initialization 07FC                    __end_of_octpowers 081E  
                  _printf_MATRIX7219 0AF1                           ??_hit_land 0074  
                            merge1@x 0026                              merge1@y 0077  
                            memcpy@d 0074                              memcpy@n 0071  
                            memcpy@s 0075                __end_of_printf_Screen 17A4  
                            memset@c 0070                 __end_of_is_row_empty 0C4F  
                            memset@n 0072                              memset@p 0075  
                         ??_is_valid 0074                          ?_debug_line 0073  
                 ?_printf_MATRIX7219 0070                       SPI1_write@data 0071  
                     SPI1_write@mask 0072                           _right_most 0B2D  
           ??_MATRIX88_to_MATRIX7219 0071                          ?_delete_row 0077  
                      clear@matrix44 0071                        clear@matrix88 0073  
                          _RCSTAbits 0018                    Write_Byte@myValue 0074  
                ??_printf_MATRIX7219 0076                         __pstringtext 0800  
                  ?_USARTWriteString 0071        __size_of_char_info_index_rand 0018  
        printf_debug_MATRIX88@matrix 0077                   ??_USARTWriteString 0073  
                  _temp_cur_matrix44 0060            is_right_boundary@matrix44 0070  
          is_right_boundary@matrix88 0072                            _USARTInit 0D2E  
                          _TRISAbits 0085            __end_of_printf_MATRIX7219 0B0D  
                      _max7219_init1 0C4F              ??_printf_debug_MATRIX88 0078  
                __size_of_Write_Byte 0012                   right_most@matrix44 007A  
                 right_most@matrix88 007C       __size_of_get_holes_after_merge 010D  
      __end_of_get_holes_after_merge 0476                find_best_solution@res 0043  
                          _TXSTAbits 0098                       __end_of___bmul 17DE  
         __end_of_find_best_solution 07C1                       __end_of___lmul 0CEB  
                     __end_of___wmul 0B92                       __end_of_merge1 1000  
                     __end_of_memcpy 0C01                       __end_of_memset 0AF1  
   MATRIX88_to_MATRIX7219@matrix7219 0070               __size_of_delete_matrix 0031  
                __size_of_debug_line 0011                  start_initialization 07C1  
                         ?_USARTInit 0070                  __size_of_delete_row 0066  
                     ?_max7219_init1 0070           __size_of_get_num_of_orphan 0072  
                         left_most@x 0021                        delete_row@len 0020  
                      delete_row@row 0077             __CFG_FOSC$INTRC_NOCLKOUT 0000  
                 is_right_boundary@x 0077         __end_of_get_high_after_merge 0D2E  
                        ?_right_most 007A                    ?_is_left_boundary 0070  
    __size_of_MATRIX88_to_MATRIX7219 0048          get_holes_after_merge@matrix 0079  
                           ??___bmul 0071                             ??___lmul 0078  
                 ??_is_left_boundary 0073                             ??___wmul 007C  
                         init_fetch0 17EF                   is_row_empty@matrix 0074  
                        __pdataBANK0 0064                          __pdataBANK1 00C0  
                  _g_char_info_index 0063                      _printf_MATRIX88 0A90  
                           ??_merge1 0020                             ??_memcpy 0073  
                           ??_memset 0074                          _g_char_info 00C0  
       find_best_solution@temp_pre_x 003F    find_best_solution@left_most_index 003D  
                          ___latbits 0002                        __pcstackBANK0 0020  
         __size_of_printf_MATRIX7219 001C                __size_of_is_row_empty 0027  
                      ??_is_row_full 0071                    __size_of_fall_off 0074  
               get_num_of_orphan@col 007A                 get_num_of_orphan@row 007B  
                  __size_of_get_high 0022                    __size_of_hit_land 0071  
                      _delete_matrix 0C7B                            __pnvBANK0 0069  
                          _debug_str 17AC                   delete_matrix@count 0024  
                  __size_of_is_valid 0093              printf_MATRIX7219@matrix 0078  
                   delete_matrix@row 0026                         ??_Write_Byte 0075  
                           ?___awmod 0027                            _get_heavy 0257  
                       _is_row_empty 0C28                    is_left_boundary@x 0078  
                    ??_max7219_init1 0076                          ??_USARTInit 0072  
             _MATRIX88_to_MATRIX7219 0DBC                            _left_most 0B0D  
                __size_of_right_most 0020                            _hexpowers 0828  
                     __size_of_clear 004F                 printf_MATRIX7219@col 0079  
                     __size_of_merge 0050                       __size_of_srand 0009  
                       debug_str@str 0073                   __end_of_Write_Byte 0A90  
                       ??_debug_line 0075                       ?_delete_matrix 0070  
                     ___wmul@product 007C                            fall_off@x 0078  
                          fall_off@y 0070                     delete_row@matrix 0022  
                          clear_ram0 17B4                            _octpowers 0812  
                __end_of_is_row_full 0C28                           ?_debug_str 0073  
            __end_of_printf_MATRIX88 0AA2                         ??_delete_row 0078  
                           _PIR1bits 000C                           ?_get_heavy 0070  
                  left_most@matrix44 007B                    left_most@matrix88 007D  
                        __stringbase 0812                    ___wmul@multiplier 0020  
                 __end_of_debug_line 17EF                        ?_Clear_Matrix 0070  
               _get_high_after_merge 0CEB                           ?_left_most 007B  
      __size_of_get_num_removed_rows 0024                   __end_of_g_matrix44 09B0  
                 __end_of_delete_row 0094                    ___lmul@multiplier 0070  
                is_left_boundary@col 007A                  is_left_boundary@row 0079  
                      merge@matrix44 0071                        merge@matrix88 0073  
          __size_of_USARTWriteString 0025                            hit_land@x 0078  
                          hit_land@y 0070       __size_of_printf_debug_MATRIX88 006C  
       __end_of_char_info_index_rand 0ABA        __end_of_printf_debug_MATRIX88 0100  
                      _temp_matrix88 0110              get_high_after_merge@col 0077  
                          merge1@col 0028                            merge1@len 0024  
            get_high_after_merge@row 0078                            merge1@row 0027  
            __size_of_USARTWriteChar 0008                            is_valid@x 0078  
                          is_valid@y 0070          find_best_solution@temp_high 0044  
                   __size_of___awmod 004D          find_best_solution@temp_risk 0041  
                 __end_of__stringtab 0812               __size_of_printf_Screen 0005  
                     ??_Clear_Matrix 007B                ?_get_high_after_merge 0070  
           is_left_boundary@matrix44 0070             is_left_boundary@matrix88 0072  
                           _fall_off 01E3                   _find_best_solution 0586  
                           __ptext10 0586                             __ptext11 0B2D  
                           __ptext20 0CEB                             __ptext12 0F45  
                           __ptext21 0B4D                             __ptext13 0F9C  
                           __ptext30 0BDB                             __ptext22 0C28  
                           __ptext14 0B0D                             __ptext31 0E51  
                           __ptext23 0257                             __ptext15 0EF0  
                           __ptext40 0AF1                             __ptext32 0AA2  
                           __ptext24 01E3                             __ptext16 02D6  
                           __ptext41 0A7E                             __ptext33 0D75  
                           __ptext25 0B6F                             __ptext17 0B92  
                           __ptext42 0004                             __ptext34 0CAC  
                           __ptext26 17CD                             __ptext18 0171  
                           __ptext43 0DBC                             __ptext35 0E04  
                           __ptext27 0C7B                             __ptext19 0369  
                           __ptext44 0AD5                             __ptext36 0D2E  
                           __ptext28 0C01                             __ptext37 17BC  
                           __ptext29 002E                             __ptext38 179F  
                           __ptext39 0A90                    __CFG_BOR4V$BOR21V 0000  
                           _get_high 0B4D                          _is_row_full 0C01  
     MATRIX88_to_MATRIX7219@matrix88 0074                      ??_delete_matrix 007B  
                           _hit_land 0100                  ?_find_best_solution 0070  
                      __size_of_main 0110                             _is_valid 02D6  
                      __size_of_rand 0047                     hit_land@matrix44 0071  
                   hit_land@matrix88 0073                             clear@col 007A  
                           clear@row 0079                         ??_right_most 007D  
              _get_holes_after_merge 0369                          ??_debug_str 0075  
                   ?_printf_MATRIX88 0070                             main@Seed 0056  
                           main@argc 0049                             main@argv 004B  
                        ??_get_heavy 0072             get_holes_after_merge@col 007A  
           get_holes_after_merge@row 007B                 ??_find_best_solution 0029  
                        fall_off@col 0079                          fall_off@row 007A  
          __size_of_is_left_boundary 0055                          delete_row@i 0023  
                        ??_left_most 0020                             memcpy@d1 0076  
                           memcpy@s1 0070                             merge@col 007A  
                           merge@row 0079                   __end_of_right_most 0B4D  
                           init_ram0 17F3                             memset@p1 0076  
                      _printf_Screen 179F                            stringcode 080A  
                 Write_Byte@myColumn 0075                  USARTWriteString@str 0071  
            printf_MATRIX88@matrix88 0020                 _char_info_index_rand 0AA2  
            ?_MATRIX88_to_MATRIX7219 0070               ??_get_high_after_merge 0072  
 find_best_solution@right_most_index 003E                             stringtab 0800  
                         _SPI1_write 0004                     _USARTWriteString 0BB6  
                     ?_printf_Screen 0070           get_num_removed_rows@matrix 0078  
             ?_get_holes_after_merge 0070                       _USARTWriteChar 17A4  
         MATRIX88_to_MATRIX7219@mask 0075            MATRIX88_to_MATRIX7219@col 0077  
               __end_of_Clear_Matrix 17CD            MATRIX88_to_MATRIX7219@row 0076  
