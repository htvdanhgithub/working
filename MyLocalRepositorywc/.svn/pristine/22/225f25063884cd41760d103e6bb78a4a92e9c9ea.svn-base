

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Aug 27 17:51:27 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x7E,2
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  0B62                     __pidataBANK0:	
   217                           
   218                           ;initializer for _randx
   219  0B62  3401               	retlw	1
   220  0B63  3400               	retlw	0
   221  0B64  3400               	retlw	0
   222  0B65  3400               	retlw	0
   223                           
   224                           ;initializer for _cur_x
   225  0B66  3402               	retlw	2
   226                           
   227                           	psect	idataBANK1
   228  0C08                     __pidataBANK1:	
   229                           
   230                           ;initializer for _g_char_info
   231  0C08  3400               	retlw	0
   232  0C09  3400               	retlw	0
   233  0C0A  3402               	retlw	2
   234  0C0B  3402               	retlw	2
   235  0C0C  3400               	retlw	0
   236  0C0D  3402               	retlw	2
   237  0C0E  3404               	retlw	4
   238  0C0F  3400               	retlw	0
   239  0C10  3402               	retlw	2
   240  0C11  3406               	retlw	6
   241  0C12  3400               	retlw	0
   242  0C13  3404               	retlw	4
   243  0C14  340A               	retlw	10
   244  0C15  3400               	retlw	0
   245  0C16  3404               	retlw	4
   246  0C17  340E               	retlw	14
   247  0C18  3400               	retlw	0
   248  0C19  3401               	retlw	1
   249  0C1A  340F               	retlw	15
   250  0C1B  3400               	retlw	0
   251  0C1C  3404               	retlw	4
   252  0C1D  3413               	retlw	19
   253  0C1E  3400               	retlw	0
   254  0C1F  3401               	retlw	1
   255  0C20  3414               	retlw	20
   256  0C21  3400               	retlw	0
   257  0C22  3404               	retlw	4
   258                           
   259                           	psect	stringtext
   260  0800                     __pstringtext:	
   261  0800                     stringtab:	
   262  0800                     __stringtab:	
   263                           
   264                           ;	String table - string pointers are 2 bytes each
   265  0800  1BFF               	btfsc	btemp+1,7
   266  0801  280A               	ljmp	stringcode
   267  0802  1383               	bcf	3,7
   268  0803  187F               	btfsc	btemp+1,0
   269  0804  1783               	bsf	3,7
   270  0805  0800               	movf	0,w
   271  0806  0A84               	incf	4,f
   272  0807  1903               	skipnz
   273  0808  0AFF               	incf	btemp+1,f
   274  0809  0008               	return
   275  080A                     stringcode:	
   276  080A  087F               	movf	btemp+1,w
   277  080B  397F               	andlw	127
   278  080C  008A               	movwf	10
   279  080D  0804               	movf	4,w
   280  080E  0A84               	incf	4,f
   281  080F  1903               	skipnz
   282  0810  0AFF               	incf	btemp+1,f
   283  0811  0082               	movwf	2
   284  0812                     __stringbase:	
   285  0812                     __end_of__stringtab:	
   286  0812                     _octpowers:	
   287  0812  3401               	retlw	1
   288  0813  3400               	retlw	0
   289  0814  3408               	retlw	8
   290  0815  3400               	retlw	0
   291  0816  3440               	retlw	64
   292  0817  3400               	retlw	0
   293  0818  3400               	retlw	0
   294  0819  3402               	retlw	2
   295  081A  3400               	retlw	0
   296  081B  3410               	retlw	16
   297  081C  3400               	retlw	0
   298  081D  3480               	retlw	128
   299  081E                     __end_of_octpowers:	
   300  081E                     _dpowers:	
   301  081E  3401               	retlw	1
   302  081F  3400               	retlw	0
   303  0820  340A               	retlw	10
   304  0821  3400               	retlw	0
   305  0822  3464               	retlw	100
   306  0823  3400               	retlw	0
   307  0824  34E8               	retlw	232
   308  0825  3403               	retlw	3
   309  0826  3410               	retlw	16
   310  0827  3427               	retlw	39
   311  0828                     __end_of_dpowers:	
   312  0828                     _hexpowers:	
   313  0828  3401               	retlw	1
   314  0829  3400               	retlw	0
   315  082A  3410               	retlw	16
   316  082B  3400               	retlw	0
   317  082C  3400               	retlw	0
   318  082D  3401               	retlw	1
   319  082E  3400               	retlw	0
   320  082F  3410               	retlw	16
   321  0830                     __end_of_hexpowers:	
   322  0830                     _g_matrix44:	
   323  0830  3400               	retlw	0
   324  0831  3401               	retlw	1
   325  0832  3400               	retlw	0
   326  0833  3400               	retlw	0
   327  0834  3400               	retlw	0
   328  0835  3401               	retlw	1
   329  0836  3400               	retlw	0
   330  0837  3400               	retlw	0
   331  0838  3400               	retlw	0
   332  0839  3401               	retlw	1
   333  083A  3400               	retlw	0
   334  083B  3400               	retlw	0
   335  083C  3400               	retlw	0
   336  083D  3401               	retlw	1
   337  083E  3400               	retlw	0
   338  083F  3400               	retlw	0
   339  0840  3400               	retlw	0
   340  0841  3400               	retlw	0
   341  0842  3400               	retlw	0
   342  0843  3400               	retlw	0
   343  0844  3401               	retlw	1
   344  0845  3401               	retlw	1
   345  0846  3401               	retlw	1
   346  0847  3401               	retlw	1
   347  0848  3400               	retlw	0
   348  0849  3400               	retlw	0
   349  084A  3400               	retlw	0
   350  084B  3400               	retlw	0
   351  084C  3400               	retlw	0
   352  084D  3400               	retlw	0
   353  084E  3400               	retlw	0
   354  084F  3400               	retlw	0
   355  0850  3400               	retlw	0
   356  0851  3401               	retlw	1
   357  0852  3401               	retlw	1
   358  0853  3400               	retlw	0
   359  0854  3401               	retlw	1
   360  0855  3401               	retlw	1
   361  0856  3400               	retlw	0
   362  0857  3400               	retlw	0
   363  0858  3400               	retlw	0
   364  0859  3400               	retlw	0
   365  085A  3400               	retlw	0
   366  085B  3400               	retlw	0
   367  085C  3400               	retlw	0
   368  085D  3400               	retlw	0
   369  085E  3400               	retlw	0
   370  085F  3400               	retlw	0
   371  0860  3400               	retlw	0
   372  0861  3401               	retlw	1
   373  0862  3400               	retlw	0
   374  0863  3400               	retlw	0
   375  0864  3400               	retlw	0
   376  0865  3401               	retlw	1
   377  0866  3401               	retlw	1
   378  0867  3400               	retlw	0
   379  0868  3400               	retlw	0
   380  0869  3400               	retlw	0
   381  086A  3401               	retlw	1
   382  086B  3400               	retlw	0
   383  086C  3400               	retlw	0
   384  086D  3400               	retlw	0
   385  086E  3400               	retlw	0
   386  086F  3400               	retlw	0
   387  0870  3401               	retlw	1
   388  0871  3401               	retlw	1
   389  0872  3400               	retlw	0
   390  0873  3400               	retlw	0
   391  0874  3400               	retlw	0
   392  0875  3401               	retlw	1
   393  0876  3401               	retlw	1
   394  0877  3400               	retlw	0
   395  0878  3400               	retlw	0
   396  0879  3400               	retlw	0
   397  087A  3400               	retlw	0
   398  087B  3400               	retlw	0
   399  087C  3400               	retlw	0
   400  087D  3400               	retlw	0
   401  087E  3400               	retlw	0
   402  087F  3400               	retlw	0
   403  0880  3400               	retlw	0
   404  0881  3401               	retlw	1
   405  0882  3400               	retlw	0
   406  0883  3400               	retlw	0
   407  0884  3401               	retlw	1
   408  0885  3401               	retlw	1
   409  0886  3400               	retlw	0
   410  0887  3400               	retlw	0
   411  0888  3401               	retlw	1
   412  0889  3400               	retlw	0
   413  088A  3400               	retlw	0
   414  088B  3400               	retlw	0
   415  088C  3400               	retlw	0
   416  088D  3400               	retlw	0
   417  088E  3400               	retlw	0
   418  088F  3400               	retlw	0
   419  0890  3400               	retlw	0
   420  0891  3400               	retlw	0
   421  0892  3400               	retlw	0
   422  0893  3400               	retlw	0
   423  0894  3401               	retlw	1
   424  0895  3401               	retlw	1
   425  0896  3401               	retlw	1
   426  0897  3400               	retlw	0
   427  0898  3400               	retlw	0
   428  0899  3400               	retlw	0
   429  089A  3401               	retlw	1
   430  089B  3400               	retlw	0
   431  089C  3400               	retlw	0
   432  089D  3400               	retlw	0
   433  089E  3400               	retlw	0
   434  089F  3400               	retlw	0
   435  08A0  3400               	retlw	0
   436  08A1  3401               	retlw	1
   437  08A2  3401               	retlw	1
   438  08A3  3400               	retlw	0
   439  08A4  3400               	retlw	0
   440  08A5  3401               	retlw	1
   441  08A6  3400               	retlw	0
   442  08A7  3400               	retlw	0
   443  08A8  3400               	retlw	0
   444  08A9  3401               	retlw	1
   445  08AA  3400               	retlw	0
   446  08AB  3400               	retlw	0
   447  08AC  3400               	retlw	0
   448  08AD  3400               	retlw	0
   449  08AE  3400               	retlw	0
   450  08AF  3400               	retlw	0
   451  08B0  3401               	retlw	1
   452  08B1  3400               	retlw	0
   453  08B2  3400               	retlw	0
   454  08B3  3400               	retlw	0
   455  08B4  3401               	retlw	1
   456  08B5  3401               	retlw	1
   457  08B6  3401               	retlw	1
   458  08B7  3400               	retlw	0
   459  08B8  3400               	retlw	0
   460  08B9  3400               	retlw	0
   461  08BA  3400               	retlw	0
   462  08BB  3400               	retlw	0
   463  08BC  3400               	retlw	0
   464  08BD  3400               	retlw	0
   465  08BE  3400               	retlw	0
   466  08BF  3400               	retlw	0
   467  08C0  3400               	retlw	0
   468  08C1  3401               	retlw	1
   469  08C2  3400               	retlw	0
   470  08C3  3400               	retlw	0
   471  08C4  3400               	retlw	0
   472  08C5  3401               	retlw	1
   473  08C6  3400               	retlw	0
   474  08C7  3400               	retlw	0
   475  08C8  3401               	retlw	1
   476  08C9  3401               	retlw	1
   477  08CA  3400               	retlw	0
   478  08CB  3400               	retlw	0
   479  08CC  3400               	retlw	0
   480  08CD  3400               	retlw	0
   481  08CE  3400               	retlw	0
   482  08CF  3400               	retlw	0
   483  08D0  3400               	retlw	0
   484  08D1  3400               	retlw	0
   485  08D2  3400               	retlw	0
   486  08D3  3400               	retlw	0
   487  08D4  3401               	retlw	1
   488  08D5  3401               	retlw	1
   489  08D6  3401               	retlw	1
   490  08D7  3400               	retlw	0
   491  08D8  3401               	retlw	1
   492  08D9  3400               	retlw	0
   493  08DA  3400               	retlw	0
   494  08DB  3400               	retlw	0
   495  08DC  3400               	retlw	0
   496  08DD  3400               	retlw	0
   497  08DE  3400               	retlw	0
   498  08DF  3400               	retlw	0
   499  08E0  3401               	retlw	1
   500  08E1  3401               	retlw	1
   501  08E2  3400               	retlw	0
   502  08E3  3400               	retlw	0
   503  08E4  3400               	retlw	0
   504  08E5  3401               	retlw	1
   505  08E6  3400               	retlw	0
   506  08E7  3400               	retlw	0
   507  08E8  3400               	retlw	0
   508  08E9  3401               	retlw	1
   509  08EA  3400               	retlw	0
   510  08EB  3400               	retlw	0
   511  08EC  3400               	retlw	0
   512  08ED  3400               	retlw	0
   513  08EE  3400               	retlw	0
   514  08EF  3400               	retlw	0
   515  08F0  3400               	retlw	0
   516  08F1  3400               	retlw	0
   517  08F2  3401               	retlw	1
   518  08F3  3400               	retlw	0
   519  08F4  3401               	retlw	1
   520  08F5  3401               	retlw	1
   521  08F6  3401               	retlw	1
   522  08F7  3400               	retlw	0
   523  08F8  3400               	retlw	0
   524  08F9  3400               	retlw	0
   525  08FA  3400               	retlw	0
   526  08FB  3400               	retlw	0
   527  08FC  3400               	retlw	0
   528  08FD  3400               	retlw	0
   529  08FE  3400               	retlw	0
   530  08FF  3400               	retlw	0
   531  0900  3400               	retlw	0
   532  0901  3401               	retlw	1
   533  0902  3400               	retlw	0
   534  0903  3400               	retlw	0
   535  0904  3400               	retlw	0
   536  0905  3401               	retlw	1
   537  0906  3400               	retlw	0
   538  0907  3400               	retlw	0
   539  0908  3400               	retlw	0
   540  0909  3401               	retlw	1
   541  090A  3401               	retlw	1
   542  090B  3400               	retlw	0
   543  090C  3400               	retlw	0
   544  090D  3400               	retlw	0
   545  090E  3400               	retlw	0
   546  090F  3400               	retlw	0
   547  0910  3400               	retlw	0
   548  0911  3401               	retlw	1
   549  0912  3401               	retlw	1
   550  0913  3400               	retlw	0
   551  0914  3400               	retlw	0
   552  0915  3401               	retlw	1
   553  0916  3401               	retlw	1
   554  0917  3400               	retlw	0
   555  0918  3400               	retlw	0
   556  0919  3400               	retlw	0
   557  091A  3400               	retlw	0
   558  091B  3400               	retlw	0
   559  091C  3400               	retlw	0
   560  091D  3400               	retlw	0
   561  091E  3400               	retlw	0
   562  091F  3400               	retlw	0
   563  0920  3400               	retlw	0
   564  0921  3400               	retlw	0
   565  0922  3400               	retlw	0
   566  0923  3400               	retlw	0
   567  0924  3400               	retlw	0
   568  0925  3401               	retlw	1
   569  0926  3401               	retlw	1
   570  0927  3400               	retlw	0
   571  0928  3400               	retlw	0
   572  0929  3401               	retlw	1
   573  092A  3400               	retlw	0
   574  092B  3400               	retlw	0
   575  092C  3400               	retlw	0
   576  092D  3400               	retlw	0
   577  092E  3400               	retlw	0
   578  092F  3400               	retlw	0
   579  0930  3400               	retlw	0
   580  0931  3400               	retlw	0
   581  0932  3400               	retlw	0
   582  0933  3400               	retlw	0
   583  0934  3401               	retlw	1
   584  0935  3401               	retlw	1
   585  0936  3400               	retlw	0
   586  0937  3400               	retlw	0
   587  0938  3400               	retlw	0
   588  0939  3401               	retlw	1
   589  093A  3400               	retlw	0
   590  093B  3400               	retlw	0
   591  093C  3400               	retlw	0
   592  093D  3400               	retlw	0
   593  093E  3400               	retlw	0
   594  093F  3400               	retlw	0
   595  0940  3400               	retlw	0
   596  0941  3401               	retlw	1
   597  0942  3400               	retlw	0
   598  0943  3400               	retlw	0
   599  0944  3401               	retlw	1
   600  0945  3401               	retlw	1
   601  0946  3400               	retlw	0
   602  0947  3400               	retlw	0
   603  0948  3400               	retlw	0
   604  0949  3400               	retlw	0
   605  094A  3400               	retlw	0
   606  094B  3400               	retlw	0
   607  094C  3400               	retlw	0
   608  094D  3400               	retlw	0
   609  094E  3400               	retlw	0
   610  094F  3400               	retlw	0
   611  0950  3400               	retlw	0
   612  0951  3401               	retlw	1
   613  0952  3400               	retlw	0
   614  0953  3400               	retlw	0
   615  0954  3400               	retlw	0
   616  0955  3401               	retlw	1
   617  0956  3401               	retlw	1
   618  0957  3400               	retlw	0
   619  0958  3400               	retlw	0
   620  0959  3400               	retlw	0
   621  095A  3400               	retlw	0
   622  095B  3400               	retlw	0
   623  095C  3400               	retlw	0
   624  095D  3400               	retlw	0
   625  095E  3400               	retlw	0
   626  095F  3400               	retlw	0
   627  0960  3400               	retlw	0
   628  0961  3401               	retlw	1
   629  0962  3400               	retlw	0
   630  0963  3400               	retlw	0
   631  0964  3401               	retlw	1
   632  0965  3401               	retlw	1
   633  0966  3401               	retlw	1
   634  0967  3400               	retlw	0
   635  0968  3400               	retlw	0
   636  0969  3401               	retlw	1
   637  096A  3400               	retlw	0
   638  096B  3400               	retlw	0
   639  096C  3400               	retlw	0
   640  096D  3400               	retlw	0
   641  096E  3400               	retlw	0
   642  096F  3400               	retlw	0
   643  0970  3401               	retlw	1
   644  0971  3401               	retlw	1
   645  0972  3401               	retlw	1
   646  0973  3400               	retlw	0
   647  0974  3400               	retlw	0
   648  0975  3401               	retlw	1
   649  0976  3400               	retlw	0
   650  0977  3400               	retlw	0
   651  0978  3400               	retlw	0
   652  0979  3401               	retlw	1
   653  097A  3400               	retlw	0
   654  097B  3400               	retlw	0
   655  097C  3400               	retlw	0
   656  097D  3400               	retlw	0
   657  097E  3400               	retlw	0
   658  097F  3400               	retlw	0
   659  0980  3400               	retlw	0
   660  0981  3400               	retlw	0
   661  0982  3401               	retlw	1
   662  0983  3400               	retlw	0
   663  0984  3401               	retlw	1
   664  0985  3401               	retlw	1
   665  0986  3401               	retlw	1
   666  0987  3400               	retlw	0
   667  0988  3400               	retlw	0
   668  0989  3400               	retlw	0
   669  098A  3401               	retlw	1
   670  098B  3400               	retlw	0
   671  098C  3400               	retlw	0
   672  098D  3400               	retlw	0
   673  098E  3400               	retlw	0
   674  098F  3400               	retlw	0
   675  0990  3400               	retlw	0
   676  0991  3401               	retlw	1
   677  0992  3400               	retlw	0
   678  0993  3400               	retlw	0
   679  0994  3400               	retlw	0
   680  0995  3401               	retlw	1
   681  0996  3400               	retlw	0
   682  0997  3400               	retlw	0
   683  0998  3401               	retlw	1
   684  0999  3401               	retlw	1
   685  099A  3401               	retlw	1
   686  099B  3400               	retlw	0
   687  099C  3400               	retlw	0
   688  099D  3400               	retlw	0
   689  099E  3400               	retlw	0
   690  099F  3400               	retlw	0
   691  09A0  3401               	retlw	1
   692  09A1  3400               	retlw	0
   693  09A2  3400               	retlw	0
   694  09A3  3400               	retlw	0
   695  09A4  3401               	retlw	1
   696  09A5  3401               	retlw	1
   697  09A6  3401               	retlw	1
   698  09A7  3400               	retlw	0
   699  09A8  3401               	retlw	1
   700  09A9  3400               	retlw	0
   701  09AA  3400               	retlw	0
   702  09AB  3400               	retlw	0
   703  09AC  3400               	retlw	0
   704  09AD  3400               	retlw	0
   705  09AE  3400               	retlw	0
   706  09AF  3400               	retlw	0
   707  09B0                     __end_of_g_matrix44:	
   708  09B0                     STR_6:	
   709  09B0  343C               	retlw	60	;'<'
   710  09B1  343C               	retlw	60	;'<'
   711  09B2  343C               	retlw	60	;'<'
   712  09B3  343C               	retlw	60	;'<'
   713  09B4  343C               	retlw	60	;'<'
   714  09B5  343C               	retlw	60	;'<'
   715  09B6  343C               	retlw	60	;'<'
   716  09B7  343C               	retlw	60	;'<'
   717  09B8  343C               	retlw	60	;'<'
   718  09B9  343C               	retlw	60	;'<'
   719  09BA  343C               	retlw	60	;'<'
   720  09BB  343C               	retlw	60	;'<'
   721  09BC  343C               	retlw	60	;'<'
   722  09BD  343C               	retlw	60	;'<'
   723  09BE  343C               	retlw	60	;'<'
   724  09BF  343C               	retlw	60	;'<'
   725  09C0  343C               	retlw	60	;'<'
   726  09C1  343C               	retlw	60	;'<'
   727  09C2  343C               	retlw	60	;'<'
   728  09C3  343C               	retlw	60	;'<'
   729  09C4  344D               	retlw	77	;'M'
   730  09C5  3441               	retlw	65	;'A'
   731  09C6  3454               	retlw	84	;'T'
   732  09C7  3452               	retlw	82	;'R'
   733  09C8  3449               	retlw	73	;'I'
   734  09C9  3458               	retlw	88	;'X'
   735  09CA  3434               	retlw	52	;'4'
   736  09CB  3434               	retlw	52	;'4'
   737  09CC  3400               	retlw	0
   738  09CD                     STR_16:	
   739  09CD  343C               	retlw	60	;'<'
   740  09CE  343C               	retlw	60	;'<'
   741  09CF  343C               	retlw	60	;'<'
   742  09D0  343C               	retlw	60	;'<'
   743  09D1  343C               	retlw	60	;'<'
   744  09D2  343C               	retlw	60	;'<'
   745  09D3  343C               	retlw	60	;'<'
   746  09D4  343C               	retlw	60	;'<'
   747  09D5  343C               	retlw	60	;'<'
   748  09D6  343C               	retlw	60	;'<'
   749  09D7  343C               	retlw	60	;'<'
   750  09D8  343C               	retlw	60	;'<'
   751  09D9  343C               	retlw	60	;'<'
   752  09DA  343C               	retlw	60	;'<'
   753  09DB  343C               	retlw	60	;'<'
   754  09DC  343C               	retlw	60	;'<'
   755  09DD  343C               	retlw	60	;'<'
   756  09DE  343C               	retlw	60	;'<'
   757  09DF  343C               	retlw	60	;'<'
   758  09E0  343C               	retlw	60	;'<'
   759  09E1  344D               	retlw	77	;'M'
   760  09E2  3441               	retlw	65	;'A'
   761  09E3  3454               	retlw	84	;'T'
   762  09E4  3452               	retlw	82	;'R'
   763  09E5  3449               	retlw	73	;'I'
   764  09E6  3458               	retlw	88	;'X'
   765  09E7  3438               	retlw	56	;'8'
   766  09E8  3438               	retlw	56	;'8'
   767  09E9  3400               	retlw	0
   768  09EA                     STR_14:	
   769  09EA  3469               	retlw	105	;'i'
   770  09EB  346E               	retlw	110	;'n'
   771  09EC  3464               	retlw	100	;'d'
   772  09ED  3465               	retlw	101	;'e'
   773  09EE  3478               	retlw	120	;'x'
   774  09EF  3420               	retlw	32	;' '
   775  09F0  343D               	retlw	61	;'='
   776  09F1  3420               	retlw	32	;' '
   777  09F2  3425               	retlw	37	;'%'
   778  09F3  3464               	retlw	100	;'d'
   779  09F4  342C               	retlw	44	;','
   780  09F5  3420               	retlw	32	;' '
   781  09F6  3473               	retlw	115	;'s'
   782  09F7  3475               	retlw	117	;'u'
   783  09F8  3462               	retlw	98	;'b'
   784  09F9  345F               	retlw	95	;'_'
   785  09FA  3469               	retlw	105	;'i'
   786  09FB  346E               	retlw	110	;'n'
   787  09FC  3464               	retlw	100	;'d'
   788  09FD  3465               	retlw	101	;'e'
   789  09FE  3478               	retlw	120	;'x'
   790  09FF  3420               	retlw	32	;' '
   791  0A00  343D               	retlw	61	;'='
   792  0A01  3420               	retlw	32	;' '
   793  0A02  3425               	retlw	37	;'%'
   794  0A03  3464               	retlw	100	;'d'
   795  0A04  3400               	retlw	0
   796  0A05                     STR_10:	
   797  0A05  343E               	retlw	62	;'>'
   798  0A06  343E               	retlw	62	;'>'
   799  0A07  343E               	retlw	62	;'>'
   800  0A08  343E               	retlw	62	;'>'
   801  0A09  343E               	retlw	62	;'>'
   802  0A0A  343E               	retlw	62	;'>'
   803  0A0B  343E               	retlw	62	;'>'
   804  0A0C  343E               	retlw	62	;'>'
   805  0A0D  343E               	retlw	62	;'>'
   806  0A0E  343E               	retlw	62	;'>'
   807  0A0F  343E               	retlw	62	;'>'
   808  0A10  343E               	retlw	62	;'>'
   809  0A11  343E               	retlw	62	;'>'
   810  0A12  343E               	retlw	62	;'>'
   811  0A13  343E               	retlw	62	;'>'
   812  0A14  343E               	retlw	62	;'>'
   813  0A15  343E               	retlw	62	;'>'
   814  0A16  343E               	retlw	62	;'>'
   815  0A17  343E               	retlw	62	;'>'
   816  0A18  343E               	retlw	62	;'>'
   817  0A19  3400               	retlw	0
   818  0A1A                     STR_12:	
   819  0A1A  3470               	retlw	112	;'p'
   820  0A1B  3472               	retlw	114	;'r'
   821  0A1C  3469               	retlw	105	;'i'
   822  0A1D  346E               	retlw	110	;'n'
   823  0A1E  3474               	retlw	116	;'t'
   824  0A1F  3466               	retlw	102	;'f'
   825  0A20  345F               	retlw	95	;'_'
   826  0A21  3461               	retlw	97	;'a'
   827  0A22  346C               	retlw	108	;'l'
   828  0A23  346C               	retlw	108	;'l'
   829  0A24  345F               	retlw	95	;'_'
   830  0A25  344D               	retlw	77	;'M'
   831  0A26  3441               	retlw	65	;'A'
   832  0A27  3454               	retlw	84	;'T'
   833  0A28  3452               	retlw	82	;'R'
   834  0A29  3449               	retlw	73	;'I'
   835  0A2A  3458               	retlw	88	;'X'
   836  0A2B  3434               	retlw	52	;'4'
   837  0A2C  3434               	retlw	52	;'4'
   838  0A2D  3400               	retlw	0
   839  0A2E                     STR_23:	
   840  0A2E  3430               	retlw	48	;'0'
   841  0A2F  3431               	retlw	49	;'1'
   842  0A30  3432               	retlw	50	;'2'
   843  0A31  3433               	retlw	51	;'3'
   844  0A32  3434               	retlw	52	;'4'
   845  0A33  3435               	retlw	53	;'5'
   846  0A34  3436               	retlw	54	;'6'
   847  0A35  3437               	retlw	55	;'7'
   848  0A36  3438               	retlw	56	;'8'
   849  0A37  3439               	retlw	57	;'9'
   850  0A38  3441               	retlw	65	;'A'
   851  0A39  3442               	retlw	66	;'B'
   852  0A3A  3443               	retlw	67	;'C'
   853  0A3B  3444               	retlw	68	;'D'
   854  0A3C  3445               	retlw	69	;'E'
   855  0A3D  3446               	retlw	70	;'F'
   856  0A3E  3400               	retlw	0
   857  0A3F                     STR_24:	
   858  0A3F  3430               	retlw	48	;'0'
   859  0A40  3431               	retlw	49	;'1'
   860  0A41  3432               	retlw	50	;'2'
   861  0A42  3433               	retlw	51	;'3'
   862  0A43  3434               	retlw	52	;'4'
   863  0A44  3435               	retlw	53	;'5'
   864  0A45  3436               	retlw	54	;'6'
   865  0A46  3437               	retlw	55	;'7'
   866  0A47  3438               	retlw	56	;'8'
   867  0A48  3439               	retlw	57	;'9'
   868  0A49  3461               	retlw	97	;'a'
   869  0A4A  3462               	retlw	98	;'b'
   870  0A4B  3463               	retlw	99	;'c'
   871  0A4C  3464               	retlw	100	;'d'
   872  0A4D  3465               	retlw	101	;'e'
   873  0A4E  3466               	retlw	102	;'f'
   874  0A4F  3400               	retlw	0
   875  0A50                     STR_22:	
   876  0A50  344D               	retlw	77	;'M'
   877  0A51  3461               	retlw	97	;'a'
   878  0A52  3469               	retlw	105	;'i'
   879  0A53  346E               	retlw	110	;'n'
   880  0A54  3420               	retlw	32	;' '
   881  0A55  3473               	retlw	115	;'s'
   882  0A56  3463               	retlw	99	;'c'
   883  0A57  3472               	retlw	114	;'r'
   884  0A58  3465               	retlw	101	;'e'
   885  0A59  3465               	retlw	101	;'e'
   886  0A5A  346E               	retlw	110	;'n'
   887  0A5B  3400               	retlw	0
   888  0A5C                     STR_13:	
   889  0A5C  3473               	retlw	115	;'s'
   890  0A5D  3469               	retlw	105	;'i'
   891  0A5E  347A               	retlw	122	;'z'
   892  0A5F  3465               	retlw	101	;'e'
   893  0A60  3420               	retlw	32	;' '
   894  0A61  343D               	retlw	61	;'='
   895  0A62  3420               	retlw	32	;' '
   896  0A63  3425               	retlw	37	;'%'
   897  0A64  3464               	retlw	100	;'d'
   898  0A65  3400               	retlw	0
   899  0A66                     STR_1:	
   900  0A66  340D               	retlw	13
   901  0A67  340A               	retlw	10
   902  0A68  3400               	retlw	0
   903  0A69                     STR_7:	
   904  0A69  342A               	retlw	42	;'*'
   905  0A6A  3400               	retlw	0
   906  0A6B                     STR_5:	
   907  0A6B  343A               	retlw	58	;':'
   908  0A6C  3400               	retlw	0
   909  0A6D                     STR_8:	
   910  0A6D  345F               	retlw	95	;'_'
   911  0A6E  3400               	retlw	0
   912  0A68                     
   913                           ; #config settings
   914  0000                     
   915                           	psect	nvBANK0
   916  0062                     __pnvBANK0:	
   917  0062                     _UQEnd:	
   918  0062                     	ds	1
   919  0063                     _UQFront:	
   920  0063                     	ds	1
   921  000C                     _PIR1bits	set	12
   922  001A                     _RCREG	set	26
   923  0018                     _RCSTAbits	set	24
   924  0019                     _TXREG	set	25
   925  005F                     _GIE	set	95
   926  005E                     _PEIE	set	94
   927  0029                     _RA1	set	41
   928  002A                     _RA2	set	42
   929  002B                     _RA3	set	43
   930  0099                     _SPBRG	set	153
   931  0085                     _TRISAbits	set	133
   932  0098                     _TXSTAbits	set	152
   933  0465                     _RCIE	set	1125
   934  0188                     _ANSELbits	set	392
   935                           
   936                           	psect	cinit
   937  07C1                     start_initialization:	
   938  07C1                     __initialization:	
   939                           
   940                           ; Clear objects allocated to BANK0
   941  07C1  1383               	bcf	3,7	;select IRP bank0
   942  07C2  3052               	movlw	low __pbssBANK0
   943  07C3  0084               	movwf	4
   944  07C4  305D               	movlw	low (__pbssBANK0+11)
   945  07C5  120A  158A  2377  120A  118A  	fcall	clear_ram0
   946                           
   947                           ; Clear objects allocated to BANK1
   948  07CA  30A0               	movlw	low __pbssBANK1
   949  07CB  0084               	movwf	4
   950  07CC  30C0               	movlw	low (__pbssBANK1+32)
   951  07CD  120A  158A  2377  120A  118A  	fcall	clear_ram0
   952                           
   953                           ; Clear objects allocated to BANK3
   954  07D2  1783               	bsf	3,7	;select IRP bank2
   955  07D3  3090               	movlw	low __pbssBANK3
   956  07D4  0084               	movwf	4
   957  07D5  30F0               	movlw	low (__pbssBANK3+96)
   958  07D6  120A  158A  2377  120A  118A  	fcall	clear_ram0
   959                           
   960                           ; Clear objects allocated to BANK2
   961  07DB  3010               	movlw	low __pbssBANK2
   962  07DC  0084               	movwf	4
   963  07DD  3050               	movlw	low (__pbssBANK2+64)
   964  07DE  120A  158A  2377  120A  118A  	fcall	clear_ram0
   965                           
   966                           ; Initialize objects allocated to BANK1
   967  07E3  1383               	bcf	3,7	;select IRP bank0
   968  07E4  30DB               	movlw	low (__pdataBANK1+27)
   969  07E5  00FD               	movwf	btemp+-1
   970  07E6  300C               	movlw	high __pidataBANK1
   971  07E7  00FE               	movwf	btemp
   972  07E8  3008               	movlw	low __pidataBANK1
   973  07E9  00FF               	movwf	btemp+1
   974  07EA  30C0               	movlw	low __pdataBANK1
   975  07EB  0084               	movwf	4
   976  07EC  120A  158A  23BF  120A  118A  	fcall	init_ram0
   977                           
   978                           ; Initialize objects allocated to BANK0
   979  07F1  3062               	movlw	low (__pdataBANK0+5)
   980  07F2  00FD               	movwf	btemp+-1
   981  07F3  300B               	movlw	high __pidataBANK0
   982  07F4  00FE               	movwf	btemp
   983  07F5  3062               	movlw	low __pidataBANK0
   984  07F6  00FF               	movwf	btemp+1
   985  07F7  305D               	movlw	low __pdataBANK0
   986  07F8  0084               	movwf	4
   987  07F9  120A  158A  23BF   	fcall	init_ram0
   988  07FC                     end_of_initialization:	
   989                           ;End of C runtime variable initialization code
   990                           
   991  07FC                     __end_of__initialization:	
   992  07FC  0183               	clrf	3
   993  07FD  120A  118A  2D27   	ljmp	_main	;jump to C main() function
   994                           
   995                           	psect	bssBANK0
   996  0052                     __pbssBANK0:	
   997  0052                     USARTWriteInt@F1617:	
   998  0052                     	ds	5
   999  0057                     _g_cur_matrix44:	
  1000  0057                     	ds	2
  1001  0059                     _temp_cur_matrix44:	
  1002  0059                     	ds	2
  1003  005B                     _cur_y:	
  1004  005B                     	ds	1
  1005  005C                     _g_char_info_index:	
  1006  005C                     	ds	1
  1007                           
  1008                           	psect	dataBANK0
  1009  005D                     __pdataBANK0:	
  1010  005D                     _randx:	
  1011  005D                     	ds	4
  1012  0061                     _cur_x:	
  1013  0061                     	ds	1
  1014                           
  1015                           	psect	bssBANK1
  1016  00A0                     __pbssBANK1:	
  1017  00A0                     _g_debug:	
  1018  00A0                     	ds	32
  1019                           
  1020                           	psect	dataBANK1
  1021  00C0                     __pdataBANK1:	
  1022  00C0                     _g_char_info:	
  1023  00C0                     	ds	27
  1024                           
  1025                           	psect	bssBANK3
  1026  0190                     __pbssBANK3:	
  1027  0190                     _URBuff:	
  1028  0190                     	ds	32
  1029  01B0                     _g_matrix88:	
  1030  01B0                     	ds	64
  1031                           
  1032                           	psect	bssBANK2
  1033  0110                     __pbssBANK2:	
  1034  0110                     _temp_matrix88:	
  1035  0110                     	ds	64
  1036                           
  1037                           	psect	clrtext
  1038  0B77                     clear_ram0:	
  1039                           ;	Called with FSR containing the base address, and
  1040                           ;	W with the last address+1
  1041                           
  1042  0B77  0064               	clrwdt	;clear the watchdog before getting into this loop
  1043  0B78                     clrloop0:	
  1044  0B78  0180               	clrf	0	;clear RAM location pointed to by FSR
  1045  0B79  0A84               	incf	4,f	;increment pointer
  1046  0B7A  0604               	xorwf	4,w	;XOR with final address
  1047  0B7B  1903               	btfsc	3,2	;have we reached the end yet?
  1048  0B7C  3400               	retlw	0	;all done for this memory range, return
  1049  0B7D  0604               	xorwf	4,w	;XOR again to restore value
  1050  0B7E  2B78               	goto	clrloop0	;do the next byte
  1051                           
  1052                           	psect	inittext
  1053  0BBB                     init_fetch0:	
  1054                           ;	Called with low address in FSR and high address in W
  1055                           
  1056  0BBB  087E               	movf	126,w
  1057  0BBC  008A               	movwf	10
  1058  0BBD  087F               	movf	127,w
  1059  0BBE  0082               	movwf	2
  1060  0BBF                     init_ram0:	
  1061                           ;Called with:
  1062                           ;	high address of idata address in btemp 
  1063                           ;	low address of idata address in btemp+1 
  1064                           ;	low address of data in FSR
  1065                           ;	high address + 1 of data in btemp-1
  1066                           
  1067  0BBF  23BB  120A  158A   	fcall	init_fetch0
  1068  0BC2  0080               	movwf	0
  1069  0BC3  0A84               	incf	4,f
  1070  0BC4  0804               	movf	4,w
  1071  0BC5  067D               	xorwf	125,w
  1072  0BC6  1903               	btfsc	3,2
  1073  0BC7  3400               	retlw	0
  1074  0BC8  0AFF               	incf	127,f
  1075  0BC9  1903               	btfsc	3,2
  1076  0BCA  0AFE               	incf	126,f
  1077  0BCB  2BBF               	goto	init_ram0
  1078                           
  1079                           	psect	cstackCOMMON
  1080  0070                     __pcstackCOMMON:	
  1081  0070                     ?_memset:	
  1082  0070                     ?_memcpy:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0070                     ?_srand:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     ?_USARTInit:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ?_USARTWriteChar:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ??_USARTWriteChar:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0070                     ?_SPI1_write:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0070                     ??_SPI1_write:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0070                     ?_max7219_init1:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0070                     ?_MATRIX88_to_MATRIX7219:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0070                     ?_printf_MATRIX7219:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0070                     ?_printf_MATRIX88:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0070                     ?_printf_Screen:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?_Clear_Matrix:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ?_is_row_full:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_delete_matrix:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ?_is_row_empty:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?_hit_land:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ?_is_valid:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?_is_left_boundary:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     ?_is_right_boundary:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     ?_fall_off:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0070                     ?_clear:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0070                     ?_merge:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0070                     ?_char_info_index_rand:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0070                     ?_get_high:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0070                     ?_get_high_after_merge:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0070                     ?_get_holes_after_merge:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0070                     ??_get_holes_after_merge:	
  1164                           ; 1 bytes @ 0x0
  1165                           
  1166  0070                     ?_find_best_solution:	
  1167                           ; 1 bytes @ 0x0
  1168                           
  1169  0070                     ?___bmul:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ?_evaluate:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?___lmul:	
  1176                           ; 2 bytes @ 0x0
  1177                           
  1178  0070                     USARTWriteChar@ch:	
  1179                           ; 4 bytes @ 0x0
  1180                           
  1181  0070                     MATRIX88_to_MATRIX7219@matrix7219:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     is_row_full@row:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     is_row_empty@row:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     hit_land@y:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     is_valid@y:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     fall_off@y:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     clear@y:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     merge@y:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ___bmul@multiplicand:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     memcpy@s1:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     USARTInit@baud_rate:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     is_left_boundary@matrix44:	
  1215                           ; 2 bytes @ 0x0
  1216                           
  1217  0070                     is_right_boundary@matrix44:	
  1218                           ; 2 bytes @ 0x0
  1219                           
  1220  0070                     get_high_after_merge@matrix:	
  1221                           ; 2 bytes @ 0x0
  1222                           
  1223  0070                     memset@c:	
  1224                           ; 2 bytes @ 0x0
  1225                           
  1226  0070                     srand@x:	
  1227                           ; 2 bytes @ 0x0
  1228                           
  1229  0070                     ___lmul@multiplier:	
  1230                           ; 2 bytes @ 0x0
  1231                           
  1232                           
  1233                           ; 4 bytes @ 0x0
  1234  0070                     	ds	1
  1235  0071                     ?_USARTWriteString:	
  1236  0071                     ??_MATRIX88_to_MATRIX7219:	
  1237                           ; 1 bytes @ 0x1
  1238                           
  1239  0071                     ??_is_row_full:	
  1240                           ; 1 bytes @ 0x1
  1241                           
  1242  0071                     ??_is_row_empty:	
  1243                           ; 1 bytes @ 0x1
  1244                           
  1245  0071                     ??___bmul:	
  1246                           ; 1 bytes @ 0x1
  1247                           
  1248  0071                     SPI1_write@data:	
  1249                           ; 1 bytes @ 0x1
  1250                           
  1251  0071                     USARTWriteString@str:	
  1252                           ; 1 bytes @ 0x1
  1253                           
  1254  0071                     hit_land@matrix44:	
  1255                           ; 2 bytes @ 0x1
  1256                           
  1257  0071                     is_valid@matrix44:	
  1258                           ; 2 bytes @ 0x1
  1259                           
  1260  0071                     fall_off@matrix44:	
  1261                           ; 2 bytes @ 0x1
  1262                           
  1263  0071                     clear@matrix44:	
  1264                           ; 2 bytes @ 0x1
  1265                           
  1266  0071                     merge@matrix44:	
  1267                           ; 2 bytes @ 0x1
  1268                           
  1269  0071                     memcpy@n:	
  1270                           ; 2 bytes @ 0x1
  1271                           
  1272                           
  1273                           ; 2 bytes @ 0x1
  1274  0071                     	ds	1
  1275  0072                     ??_srand:	
  1276  0072                     ??_USARTInit:	
  1277                           ; 1 bytes @ 0x2
  1278                           
  1279  0072                     ??_evaluate:	
  1280                           ; 1 bytes @ 0x2
  1281                           
  1282  0072                     ??_get_high_after_merge:	
  1283                           ; 1 bytes @ 0x2
  1284                           
  1285  0072                     SPI1_write@mask:	
  1286                           ; 1 bytes @ 0x2
  1287                           
  1288  0072                     is_left_boundary@matrix88:	
  1289                           ; 1 bytes @ 0x2
  1290                           
  1291  0072                     is_right_boundary@matrix88:	
  1292                           ; 1 bytes @ 0x2
  1293                           
  1294  0072                     ___bmul@product:	
  1295                           ; 1 bytes @ 0x2
  1296                           
  1297  0072                     memset@n:	
  1298                           ; 1 bytes @ 0x2
  1299                           
  1300                           
  1301                           ; 2 bytes @ 0x2
  1302  0072                     	ds	1
  1303  0073                     ??_memcpy:	
  1304  0073                     ??_USARTWriteString:	
  1305                           ; 1 bytes @ 0x3
  1306                           
  1307  0073                     ?_debug_str:	
  1308                           ; 1 bytes @ 0x3
  1309                           
  1310  0073                     ?_debug_line:	
  1311                           ; 1 bytes @ 0x3
  1312                           
  1313  0073                     ??_is_left_boundary:	
  1314                           ; 1 bytes @ 0x3
  1315                           
  1316  0073                     ??_is_right_boundary:	
  1317                           ; 1 bytes @ 0x3
  1318                           
  1319  0073                     SPI1_write@i:	
  1320                           ; 1 bytes @ 0x3
  1321                           
  1322  0073                     hit_land@matrix88:	
  1323                           ; 1 bytes @ 0x3
  1324                           
  1325  0073                     is_valid@matrix88:	
  1326                           ; 1 bytes @ 0x3
  1327                           
  1328  0073                     fall_off@matrix88:	
  1329                           ; 1 bytes @ 0x3
  1330                           
  1331  0073                     clear@matrix88:	
  1332                           ; 1 bytes @ 0x3
  1333                           
  1334  0073                     merge@matrix88:	
  1335                           ; 1 bytes @ 0x3
  1336                           
  1337  0073                     ___bmul@multiplier:	
  1338                           ; 1 bytes @ 0x3
  1339                           
  1340  0073                     debug_str@str:	
  1341                           ; 1 bytes @ 0x3
  1342                           
  1343  0073                     debug_line@str:	
  1344                           ; 2 bytes @ 0x3
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0x3
  1348  0073                     	ds	1
  1349  0074                     ??_memset:	
  1350  0074                     ??_max7219_init1:	
  1351                           ; 1 bytes @ 0x4
  1352                           
  1353  0074                     ?_Write_Byte:	
  1354                           ; 1 bytes @ 0x4
  1355                           
  1356  0074                     ??_hit_land:	
  1357                           ; 1 bytes @ 0x4
  1358                           
  1359  0074                     ??_is_valid:	
  1360                           ; 1 bytes @ 0x4
  1361                           
  1362  0074                     ??_fall_off:	
  1363                           ; 1 bytes @ 0x4
  1364                           
  1365  0074                     ??_clear:	
  1366                           ; 1 bytes @ 0x4
  1367                           
  1368  0074                     ??_merge:	
  1369                           ; 1 bytes @ 0x4
  1370                           
  1371  0074                     Write_Byte@myValue:	
  1372                           ; 1 bytes @ 0x4
  1373                           
  1374  0074                     MATRIX88_to_MATRIX7219@matrix88:	
  1375                           ; 1 bytes @ 0x4
  1376                           
  1377  0074                     is_row_full@matrix:	
  1378                           ; 1 bytes @ 0x4
  1379                           
  1380  0074                     is_row_empty@matrix:	
  1381                           ; 1 bytes @ 0x4
  1382                           
  1383  0074                     memcpy@d:	
  1384                           ; 1 bytes @ 0x4
  1385                           
  1386  0074                     ___lmul@multiplicand:	
  1387                           ; 1 bytes @ 0x4
  1388                           
  1389                           
  1390                           ; 4 bytes @ 0x4
  1391  0074                     	ds	1
  1392  0075                     ??_debug_str:	
  1393  0075                     ??_debug_line:	
  1394                           ; 1 bytes @ 0x5
  1395                           
  1396  0075                     ??_Write_Byte:	
  1397                           ; 1 bytes @ 0x5
  1398                           
  1399  0075                     ?_printf_debug_MATRIX88:	
  1400                           ; 1 bytes @ 0x5
  1401                           
  1402  0075                     Write_Byte@myColumn:	
  1403                           ; 1 bytes @ 0x5
  1404                           
  1405  0075                     MATRIX88_to_MATRIX7219@mask:	
  1406                           ; 1 bytes @ 0x5
  1407                           
  1408  0075                     is_row_full@col:	
  1409                           ; 1 bytes @ 0x5
  1410                           
  1411  0075                     is_row_empty@col:	
  1412                           ; 1 bytes @ 0x5
  1413                           
  1414  0075                     memcpy@s:	
  1415                           ; 1 bytes @ 0x5
  1416                           
  1417  0075                     memset@p:	
  1418                           ; 1 bytes @ 0x5
  1419                           
  1420  0075                     printf_debug_MATRIX88@lable:	
  1421                           ; 1 bytes @ 0x5
  1422                           
  1423                           
  1424                           ; 2 bytes @ 0x5
  1425  0075                     	ds	1
  1426  0076                     ??_printf_MATRIX7219:	
  1427  0076                     ??_get_high:	
  1428                           ; 1 bytes @ 0x6
  1429                           
  1430  0076                     MATRIX88_to_MATRIX7219@row:	
  1431                           ; 1 bytes @ 0x6
  1432                           
  1433  0076                     get_high_after_merge@y:	
  1434                           ; 1 bytes @ 0x6
  1435                           
  1436  0076                     get_holes_after_merge@num_hole:	
  1437                           ; 1 bytes @ 0x6
  1438                           
  1439  0076                     memcpy@d1:	
  1440                           ; 1 bytes @ 0x6
  1441                           
  1442  0076                     memset@p1:	
  1443                           ; 1 bytes @ 0x6
  1444                           
  1445  0076                     evaluate@risk:	
  1446                           ; 1 bytes @ 0x6
  1447                           
  1448                           
  1449                           ; 2 bytes @ 0x6
  1450  0076                     	ds	1
  1451  0077                     ?_delete_row:	
  1452  0077                     ?_merge1:	
  1453                           ; 1 bytes @ 0x7
  1454                           
  1455  0077                     MATRIX88_to_MATRIX7219@col:	
  1456                           ; 1 bytes @ 0x7
  1457                           
  1458  0077                     printf_debug_MATRIX88@matrix:	
  1459                           ; 1 bytes @ 0x7
  1460                           
  1461  0077                     delete_row@row:	
  1462                           ; 1 bytes @ 0x7
  1463                           
  1464  0077                     is_right_boundary@x:	
  1465                           ; 1 bytes @ 0x7
  1466                           
  1467  0077                     merge1@y:	
  1468                           ; 1 bytes @ 0x7
  1469                           
  1470  0077                     get_high@matrix:	
  1471                           ; 1 bytes @ 0x7
  1472                           
  1473  0077                     get_high_after_merge@col:	
  1474                           ; 1 bytes @ 0x7
  1475                           
  1476  0077                     get_holes_after_merge@stop:	
  1477                           ; 1 bytes @ 0x7
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0x7
  1481  0077                     	ds	1
  1482  0078                     ??_printf_debug_MATRIX88:	
  1483  0078                     ??_delete_row:	
  1484                           ; 1 bytes @ 0x8
  1485                           
  1486  0078                     ??___lmul:	
  1487                           ; 1 bytes @ 0x8
  1488                           
  1489  0078                     printf_MATRIX7219@matrix:	
  1490                           ; 1 bytes @ 0x8
  1491                           
  1492  0078                     hit_land@x:	
  1493                           ; 1 bytes @ 0x8
  1494                           
  1495  0078                     is_valid@x:	
  1496                           ; 1 bytes @ 0x8
  1497                           
  1498  0078                     is_left_boundary@x:	
  1499                           ; 1 bytes @ 0x8
  1500                           
  1501  0078                     is_right_boundary@row:	
  1502                           ; 1 bytes @ 0x8
  1503                           
  1504  0078                     fall_off@x:	
  1505                           ; 1 bytes @ 0x8
  1506                           
  1507  0078                     clear@x:	
  1508                           ; 1 bytes @ 0x8
  1509                           
  1510  0078                     merge@x:	
  1511                           ; 1 bytes @ 0x8
  1512                           
  1513  0078                     evaluate@full:	
  1514                           ; 1 bytes @ 0x8
  1515                           
  1516  0078                     get_high@row:	
  1517                           ; 1 bytes @ 0x8
  1518                           
  1519  0078                     get_high_after_merge@row:	
  1520                           ; 1 bytes @ 0x8
  1521                           
  1522  0078                     get_holes_after_merge@start:	
  1523                           ; 1 bytes @ 0x8
  1524                           
  1525  0078                     merge1@matrix44:	
  1526                           ; 1 bytes @ 0x8
  1527                           
  1528                           
  1529                           ; 2 bytes @ 0x8
  1530  0078                     	ds	1
  1531  0079                     printf_MATRIX7219@col:	
  1532  0079                     hit_land@col:	
  1533                           ; 1 bytes @ 0x9
  1534                           
  1535  0079                     is_valid@row:	
  1536                           ; 1 bytes @ 0x9
  1537                           
  1538  0079                     is_left_boundary@row:	
  1539                           ; 1 bytes @ 0x9
  1540                           
  1541  0079                     is_right_boundary@col:	
  1542                           ; 1 bytes @ 0x9
  1543                           
  1544  0079                     fall_off@col:	
  1545                           ; 1 bytes @ 0x9
  1546                           
  1547  0079                     clear@row:	
  1548                           ; 1 bytes @ 0x9
  1549                           
  1550  0079                     merge@row:	
  1551                           ; 1 bytes @ 0x9
  1552                           
  1553  0079                     evaluate@matrix:	
  1554                           ; 1 bytes @ 0x9
  1555                           
  1556  0079                     get_holes_after_merge@matrix:	
  1557                           ; 1 bytes @ 0x9
  1558                           
  1559  0079                     ___lmul@product:	
  1560                           ; 1 bytes @ 0x9
  1561                           
  1562                           
  1563                           ; 4 bytes @ 0x9
  1564  0079                     	ds	1
  1565  007A                     ??_printf_MATRIX88:	
  1566  007A                     ?_right_most:	
  1567                           ; 1 bytes @ 0xA
  1568                           
  1569  007A                     hit_land@row:	
  1570                           ; 1 bytes @ 0xA
  1571                           
  1572  007A                     is_valid@col:	
  1573                           ; 1 bytes @ 0xA
  1574                           
  1575  007A                     is_left_boundary@col:	
  1576                           ; 1 bytes @ 0xA
  1577                           
  1578  007A                     fall_off@row:	
  1579                           ; 1 bytes @ 0xA
  1580                           
  1581  007A                     clear@col:	
  1582                           ; 1 bytes @ 0xA
  1583                           
  1584  007A                     merge@col:	
  1585                           ; 1 bytes @ 0xA
  1586                           
  1587  007A                     merge1@matrix88_in:	
  1588                           ; 1 bytes @ 0xA
  1589                           
  1590  007A                     evaluate@col:	
  1591                           ; 1 bytes @ 0xA
  1592                           
  1593  007A                     get_holes_after_merge@col:	
  1594                           ; 1 bytes @ 0xA
  1595                           
  1596  007A                     right_most@matrix44:	
  1597                           ; 1 bytes @ 0xA
  1598                           
  1599                           
  1600                           ; 2 bytes @ 0xA
  1601  007A                     	ds	1
  1602  007B                     ??_printf_Screen:	
  1603  007B                     ??_Clear_Matrix:	
  1604                           ; 1 bytes @ 0xB
  1605                           
  1606  007B                     ??_delete_matrix:	
  1607                           ; 1 bytes @ 0xB
  1608                           
  1609  007B                     ?_left_most:	
  1610                           ; 1 bytes @ 0xB
  1611                           
  1612  007B                     printf_debug_MATRIX88@row:	
  1613                           ; 1 bytes @ 0xB
  1614                           
  1615  007B                     merge1@matrix88_out:	
  1616                           ; 1 bytes @ 0xB
  1617                           
  1618  007B                     evaluate@row:	
  1619                           ; 1 bytes @ 0xB
  1620                           
  1621  007B                     get_holes_after_merge@row:	
  1622                           ; 1 bytes @ 0xB
  1623                           
  1624  007B                     left_most@matrix44:	
  1625                           ; 1 bytes @ 0xB
  1626                           
  1627                           
  1628                           ; 2 bytes @ 0xB
  1629  007B                     	ds	1
  1630  007C                     printf_debug_MATRIX88@col:	
  1631  007C                     right_most@matrix88:	
  1632                           ; 1 bytes @ 0xC
  1633                           
  1634                           
  1635                           ; 1 bytes @ 0xC
  1636  007C                     	ds	1
  1637  007D                     ??_right_most:	
  1638  007D                     ??___awmod:	
  1639                           ; 1 bytes @ 0xD
  1640                           
  1641  007D                     left_most@matrix88:	
  1642                           ; 1 bytes @ 0xD
  1643                           
  1644                           
  1645                           ; 1 bytes @ 0xD
  1646  007D                     	ds	1
  1647  007E                     ??_char_info_index_rand:	
  1648                           
  1649                           	psect	cstackBANK0
  1650  0020                     __pcstackBANK0:	
  1651                           ; 1 bytes @ 0xE
  1652                           
  1653  0020                     ??_merge1:	
  1654  0020                     ??_left_most:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0020                     ?_rand:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0020                     printf_MATRIX88@matrix88:	
  1661                           ; 2 bytes @ 0x0
  1662                           
  1663  0020                     right_most@x:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0020                     delete_row@len:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669                           
  1670                           ; 2 bytes @ 0x0
  1671  0020                     	ds	1
  1672  0021                     left_most@x:	
  1673  0021                     printf_MATRIX88@matrix7219:	
  1674                           ; 1 bytes @ 0x1
  1675                           
  1676                           
  1677                           ; 8 bytes @ 0x1
  1678  0021                     	ds	1
  1679  0022                     ??_rand:	
  1680  0022                     delete_row@matrix:	
  1681                           ; 1 bytes @ 0x2
  1682                           
  1683                           
  1684                           ; 1 bytes @ 0x2
  1685  0022                     	ds	1
  1686  0023                     delete_row@i:	
  1687                           
  1688                           ; 1 bytes @ 0x3
  1689  0023                     	ds	1
  1690  0024                     delete_matrix@count:	
  1691  0024                     merge1@len:	
  1692                           ; 1 bytes @ 0x4
  1693                           
  1694                           
  1695                           ; 2 bytes @ 0x4
  1696  0024                     	ds	1
  1697  0025                     delete_matrix@matrix:	
  1698                           
  1699                           ; 1 bytes @ 0x5
  1700  0025                     	ds	1
  1701  0026                     delete_matrix@row:	
  1702  0026                     merge1@x:	
  1703                           ; 1 bytes @ 0x6
  1704                           
  1705                           
  1706                           ; 1 bytes @ 0x6
  1707  0026                     	ds	1
  1708  0027                     ?___awmod:	
  1709  0027                     merge1@row:	
  1710                           ; 2 bytes @ 0x7
  1711                           
  1712  0027                     ___awmod@divisor:	
  1713                           ; 1 bytes @ 0x7
  1714                           
  1715                           
  1716                           ; 2 bytes @ 0x7
  1717  0027                     	ds	1
  1718  0028                     merge1@col:	
  1719                           
  1720                           ; 1 bytes @ 0x8
  1721  0028                     	ds	1
  1722  0029                     ??_find_best_solution:	
  1723  0029                     ___awmod@dividend:	
  1724                           ; 1 bytes @ 0x9
  1725                           
  1726                           
  1727                           ; 2 bytes @ 0x9
  1728  0029                     	ds	2
  1729  002B                     ___awmod@counter:	
  1730                           
  1731                           ; 1 bytes @ 0xB
  1732  002B                     	ds	1
  1733  002C                     ___awmod@sign:	
  1734                           
  1735                           ; 1 bytes @ 0xC
  1736  002C                     	ds	4
  1737  0030                     find_best_solution@left_most_index:	
  1738                           
  1739                           ; 1 bytes @ 0x10
  1740  0030                     	ds	1
  1741  0031                     find_best_solution@right_most_index:	
  1742                           
  1743                           ; 1 bytes @ 0x11
  1744  0031                     	ds	1
  1745  0032                     find_best_solution@res:	
  1746                           
  1747                           ; 1 bytes @ 0x12
  1748  0032                     	ds	1
  1749  0033                     find_best_solution@temp_pre_x:	
  1750                           
  1751                           ; 1 bytes @ 0x13
  1752  0033                     	ds	1
  1753  0034                     find_best_solution@tem_pre_sub_index:	
  1754                           
  1755                           ; 1 bytes @ 0x14
  1756  0034                     	ds	1
  1757  0035                     find_best_solution@temp_y:	
  1758                           
  1759                           ; 1 bytes @ 0x15
  1760  0035                     	ds	1
  1761  0036                     find_best_solution@temp_pre_count:	
  1762                           
  1763                           ; 1 bytes @ 0x16
  1764  0036                     	ds	1
  1765  0037                     find_best_solution@temp_pre_risk:	
  1766                           
  1767                           ; 2 bytes @ 0x17
  1768  0037                     	ds	2
  1769  0039                     find_best_solution@temp_pre_hole:	
  1770                           
  1771                           ; 1 bytes @ 0x19
  1772  0039                     	ds	1
  1773  003A                     find_best_solution@temp_pre_high:	
  1774                           
  1775                           ; 1 bytes @ 0x1A
  1776  003A                     	ds	1
  1777  003B                     find_best_solution@temp_count:	
  1778                           
  1779                           ; 1 bytes @ 0x1B
  1780  003B                     	ds	1
  1781  003C                     find_best_solution@tem_sub_index:	
  1782                           
  1783                           ; 1 bytes @ 0x1C
  1784  003C                     	ds	1
  1785  003D                     find_best_solution@temp_risk:	
  1786                           
  1787                           ; 2 bytes @ 0x1D
  1788  003D                     	ds	2
  1789  003F                     find_best_solution@temp_hole:	
  1790                           
  1791                           ; 1 bytes @ 0x1F
  1792  003F                     	ds	1
  1793  0040                     find_best_solution@temp_high:	
  1794                           
  1795                           ; 1 bytes @ 0x20
  1796  0040                     	ds	1
  1797  0041                     find_best_solution@temp_x:	
  1798                           
  1799                           ; 1 bytes @ 0x21
  1800  0041                     	ds	1
  1801  0042                     ?_main:	
  1802  0042                     main@argc:	
  1803                           ; 2 bytes @ 0x22
  1804                           
  1805                           
  1806                           ; 2 bytes @ 0x22
  1807  0042                     	ds	2
  1808  0044                     main@argv:	
  1809                           
  1810                           ; 2 bytes @ 0x24
  1811  0044                     	ds	2
  1812  0046                     ??_main:	
  1813                           
  1814                           ; 1 bytes @ 0x26
  1815  0046                     	ds	9
  1816  004F                     main@Seed:	
  1817                           
  1818                           ; 2 bytes @ 0x2F
  1819  004F                     	ds	2
  1820  0051                     main@hit_res:	
  1821                           
  1822                           ; 1 bytes @ 0x31
  1823  0051                     	ds	1
  1824                           
  1825                           	psect	maintext
  1826  0527                     __pmaintext:	
  1827 ;;
  1828 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
  1829 ;;
  1830 ;; *************** function _main *****************
  1831 ;; Defined at:
  1832 ;;		line 1372 in file "teris_16f886.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  argc            2   34[BANK0 ] int 
  1835 ;;  argv            2   36[BANK0 ] PTR PTR unsigned char 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  Seed            2   47[BANK0 ] unsigned int 
  1838 ;;  hit_res         1   49[BANK0 ] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  2   34[BANK0 ] int 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : B00/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       4       0       0       0
  1849 ;;      Locals:         0       3       0       0       0
  1850 ;;      Temps:          0       9       0       0       0
  1851 ;;      Totals:         0      16       0       0       0
  1852 ;;Total ram usage:       16 bytes
  1853 ;; Hardware stack levels required when called:    6
  1854 ;; This function calls:
  1855 ;;		_Clear_Matrix
  1856 ;;		_USARTInit
  1857 ;;		___bmul
  1858 ;;		_char_info_index_rand
  1859 ;;		_clear
  1860 ;;		_delete_matrix
  1861 ;;		_find_best_solution
  1862 ;;		_hit_land
  1863 ;;		_max7219_init1
  1864 ;;		_merge
  1865 ;;		_printf_Screen
  1866 ;;		_printf_debug_MATRIX88
  1867 ;;		_srand
  1868 ;; This function is called by:
  1869 ;;		Startup code after reset
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function _main
  1875  0527                     _main:	
  1876                           
  1877                           ;teris_16f886.c: 1374: uint8_t hit_res;
  1878                           ;teris_16f886.c: 1386: (TRISAbits.TRISA3 = 0);
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1882  0527  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0528  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0529  1185               	bcf	5,3	;volatile
  1885                           
  1886                           ;teris_16f886.c: 1388: (TRISAbits.TRISA2 = 0);
  1887  052A  1105               	bcf	5,2	;volatile
  1888                           
  1889                           ;teris_16f886.c: 1390: (TRISAbits.TRISA1 = 0);
  1890  052B  1085               	bcf	5,1	;volatile
  1891                           
  1892                           ;teris_16f886.c: 1392: ANSELbits.ANS1 = 0;
  1893  052C  1683               	bsf	3,5	;RP0=1, select bank3
  1894  052D  1703               	bsf	3,6	;RP1=1, select bank3
  1895  052E  1088               	bcf	8,1	;volatile
  1896                           
  1897                           ;teris_16f886.c: 1393: ANSELbits.ANS2 = 0;
  1898  052F  1108               	bcf	8,2	;volatile
  1899                           
  1900                           ;teris_16f886.c: 1394: ANSELbits.ANS3 = 0;
  1901  0530  1188               	bcf	8,3	;volatile
  1902                           
  1903                           ;teris_16f886.c: 1395: RA2 = 1;
  1904  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0533  1505               	bsf	5,2	;volatile
  1907                           
  1908                           ;teris_16f886.c: 1396: RA1 = 0;
  1909  0534  1085               	bcf	5,1	;volatile
  1910                           
  1911                           ;teris_16f886.c: 1400: USARTInit(9600);
  1912  0535  3080               	movlw	128
  1913  0536  00F0               	movwf	USARTInit@baud_rate
  1914  0537  3025               	movlw	37
  1915  0538  00F1               	movwf	USARTInit@baud_rate+1
  1916  0539  120A  158A  2635  120A  118A  	fcall	_USARTInit
  1917                           
  1918                           ;teris_16f886.c: 1404: max7219_init1();
  1919  053E  120A  158A  27AF  120A  118A  	fcall	_max7219_init1
  1920                           
  1921                           ;teris_16f886.c: 1406: unsigned Seed;
  1922                           ;teris_16f886.c: 1407: srand(Seed);
  1923  0543  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0544  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0545  0850               	movf	main@Seed+1,w
  1926  0546  00F1               	movwf	srand@x+1
  1927  0547  084F               	movf	main@Seed,w
  1928  0548  00F0               	movwf	srand@x
  1929  0549  120A  158A  237F  120A  118A  	fcall	_srand
  1930  054E                     l462:	
  1931                           ;teris_16f886.c: 1409: __start:
  1932                           
  1933                           ;teris_16f886.c: 1421: {
  1934                           ;teris_16f886.c: 1425: goto __start;
  1935                           
  1936                           
  1937                           ;teris_16f886.c: 1410: Clear_Matrix();
  1938  054E  120A  158A  2388  120A  118A  	fcall	_Clear_Matrix
  1939  0553                     l3820:	
  1940                           ;teris_16f886.c: 1411: while(1)
  1941                           
  1942                           
  1943                           ;teris_16f886.c: 1412: {
  1944                           ;teris_16f886.c: 1413: cur_y = 0;
  1945  0553  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0554  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0555  01DB               	clrf	_cur_y
  1948                           
  1949                           ;teris_16f886.c: 1414: cur_x = 2, cur_y = 0;
  1950  0556  3002               	movlw	2
  1951  0557  00C6               	movwf	??_main
  1952  0558  0846               	movf	??_main,w
  1953  0559  00E1               	movwf	_cur_x
  1954  055A  01DB               	clrf	_cur_y
  1955                           
  1956                           ;teris_16f886.c: 1415: g_char_info_index = char_info_index_rand();
  1957  055B  120A  158A  23F0  120A  118A  	fcall	_char_info_index_rand
  1958  0560  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0561  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0562  00C6               	movwf	??_main
  1961  0563  0846               	movf	??_main,w
  1962  0564  00DC               	movwf	_g_char_info_index
  1963                           
  1964                           ;teris_16f886.c: 1420: if(find_best_solution() == 0)
  1965  0565  120A  118A  2637  120A  118A  	fcall	_find_best_solution
  1966  056A  3A00               	xorlw	0
  1967  056B  1903               	btfsc	3,2
  1968  056C  2D4E               	goto	l462
  1969                           
  1970                           ;teris_16f886.c: 1426: }
  1971                           ;teris_16f886.c: 1427: g_cur_matrix44 = &g_matrix44[g_char_info[g_char_info_index].start
      +                          _index + g_char_info[g_char_info_index].cur_index];
  1972  056D  3003               	movlw	3
  1973  056E  1283               	bcf	3,5	;RP0=0, select bank0
  1974  056F  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0570  00C6               	movwf	??_main
  1976  0571  0846               	movf	??_main,w
  1977  0572  00F0               	movwf	___bmul@multiplicand
  1978  0573  085C               	movf	_g_char_info_index,w
  1979  0574  120A  158A  2399  120A  118A  	fcall	___bmul
  1980  0579  3E01               	addlw	1
  1981  057A  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  1982  057B  0084               	movwf	4
  1983  057C  1383               	bcf	3,7	;select IRP bank1
  1984  057D  0800               	movf	0,w
  1985  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1986  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0580  00C7               	movwf	??_main+1
  1988  0581  3003               	movlw	3
  1989  0582  00C8               	movwf	??_main+2
  1990  0583  0848               	movf	??_main+2,w
  1991  0584  00F0               	movwf	___bmul@multiplicand
  1992  0585  085C               	movf	_g_char_info_index,w
  1993  0586  120A  158A  2399  120A  118A  	fcall	___bmul
  1994  058B  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  1995  058C  0084               	movwf	4
  1996  058D  1383               	bcf	3,7	;select IRP bank1
  1997  058E  0800               	movf	0,w
  1998  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0590  1303               	bcf	3,6	;RP1=0, select bank0
  2000  0591  0747               	addwf	??_main+1,w
  2001  0592  00C9               	movwf	??_main+3
  2002  0593  01CA               	clrf	??_main+4
  2003  0594  0DCA               	rlf	??_main+4,f
  2004  0595  0EC9               	swapf	??_main+3,f
  2005  0596  0ECA               	swapf	??_main+4,f
  2006  0597  30F0               	movlw	240
  2007  0598  05CA               	andwf	??_main+4,f
  2008  0599  0849               	movf	??_main+3,w
  2009  059A  390F               	andlw	15
  2010  059B  04CA               	iorwf	??_main+4,f
  2011  059C  30F0               	movlw	240
  2012  059D  05C9               	andwf	??_main+3,f
  2013  059E  3030               	movlw	low (_g_matrix44| (0+32768))
  2014  059F  00CB               	movwf	??_main+5
  2015  05A0  3088               	movlw	high (_g_matrix44| (0+32768))
  2016  05A1  00CC               	movwf	??_main+6
  2017  05A2  0849               	movf	??_main+3,w
  2018  05A3  074B               	addwf	??_main+5,w
  2019  05A4  00CD               	movwf	??_main+7
  2020  05A5  084A               	movf	??_main+4,w
  2021  05A6  1803               	skipnc
  2022  05A7  0A4A               	incf	??_main+4,w
  2023  05A8  074C               	addwf	??_main+6,w
  2024  05A9  00CE               	movwf	??_main+8
  2025  05AA  084D               	movf	??_main+7,w
  2026  05AB  00D7               	movwf	_g_cur_matrix44
  2027  05AC  084E               	movf	??_main+8,w
  2028  05AD  00D8               	movwf	_g_cur_matrix44+1
  2029  05AE                     l3834:	
  2030                           ;teris_16f886.c: 1428: while(1)
  2031                           
  2032                           
  2033                           ;teris_16f886.c: 1429: {
  2034                           ;teris_16f886.c: 1430: hit_res = hit_land(cur_x, cur_y, g_cur_matrix44, &g_matrix88);
  2035  05AE  085B               	movf	_cur_y,w
  2036  05AF  00C6               	movwf	??_main
  2037  05B0  0846               	movf	??_main,w
  2038  05B1  00F0               	movwf	hit_land@y
  2039  05B2  0857               	movf	_g_cur_matrix44,w
  2040  05B3  00F1               	movwf	hit_land@matrix44
  2041  05B4  0858               	movf	_g_cur_matrix44+1,w
  2042  05B5  00F2               	movwf	hit_land@matrix44+1
  2043  05B6  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2044  05B7  00C7               	movwf	??_main+1
  2045  05B8  0847               	movf	??_main+1,w
  2046  05B9  00F3               	movwf	hit_land@matrix88
  2047  05BA  0861               	movf	_cur_x,w
  2048  05BB  120A  118A  2230  120A  118A  	fcall	_hit_land
  2049  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2050  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2051  05C2  00C8               	movwf	??_main+2
  2052  05C3  0848               	movf	??_main+2,w
  2053  05C4  00D1               	movwf	main@hit_res
  2054                           
  2055                           ;teris_16f886.c: 1434: merge(cur_x, cur_y, g_cur_matrix44, &g_matrix88);
  2056  05C5  085B               	movf	_cur_y,w
  2057  05C6  00C6               	movwf	??_main
  2058  05C7  0846               	movf	??_main,w
  2059  05C8  00F0               	movwf	merge@y
  2060  05C9  0857               	movf	_g_cur_matrix44,w
  2061  05CA  00F1               	movwf	merge@matrix44
  2062  05CB  0858               	movf	_g_cur_matrix44+1,w
  2063  05CC  00F2               	movwf	merge@matrix44+1
  2064  05CD  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2065  05CE  00C7               	movwf	??_main+1
  2066  05CF  0847               	movf	??_main+1,w
  2067  05D0  00F3               	movwf	merge@matrix88
  2068  05D1  0861               	movf	_cur_x,w
  2069  05D2  120A  158A  275F  120A  118A  	fcall	_merge
  2070                           
  2071                           ;teris_16f886.c: 1435: if(hit_res == 1)
  2072  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2073  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2074  05D9  0351               	decf	main@hit_res,w
  2075  05DA  1D03               	btfss	3,2
  2076  05DB  2DF6               	goto	l3846
  2077                           
  2078                           ;teris_16f886.c: 1436: {
  2079                           ;teris_16f886.c: 1437: printf_Screen();
  2080  05DC  120A  158A  235D  120A  118A  	fcall	_printf_Screen
  2081                           
  2082                           ;teris_16f886.c: 1441: _delay((unsigned long)((100)*(20000000/4000.0)));
  2083  05E1  3003               	movlw	3
  2084  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2085  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2086  05E4  00C8               	movwf	??_main+2
  2087  05E5  308A               	movlw	138
  2088  05E6  00C7               	movwf	??_main+1
  2089  05E7  3056               	movlw	86
  2090  05E8  00C6               	movwf	??_main
  2091  05E9                     u6177:	
  2092  05E9  0BC6               	decfsz	??_main,f
  2093  05EA  2DE9               	goto	u6177
  2094  05EB  0BC7               	decfsz	??_main+1,f
  2095  05EC  2DE9               	goto	u6177
  2096  05ED  0BC8               	decfsz	??_main+2,f
  2097  05EE  2DE9               	goto	u6177
  2098  05EF  2DF0               	nop2
  2099                           
  2100                           ;teris_16f886.c: 1443: delete_matrix(&g_matrix88);
  2101  05F0  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2102  05F1  120A  158A  2580  120A  118A  	fcall	_delete_matrix
  2103  05F6                     l3846:	
  2104                           
  2105                           ;teris_16f886.c: 1444: }
  2106                           ;teris_16f886.c: 1446: printf_debug_MATRIX88("Main screen", &g_matrix88);
  2107  05F6  3050               	movlw	low (STR_22| (0+32768))
  2108  05F7  00F5               	movwf	printf_debug_MATRIX88@lable
  2109  05F8  308A               	movlw	high (STR_22| (0+32768))
  2110  05F9  00F6               	movwf	printf_debug_MATRIX88@lable+1
  2111  05FA  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2112  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  2113  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  2114  05FD  00C6               	movwf	??_main
  2115  05FE  0846               	movf	??_main,w
  2116  05FF  00F7               	movwf	printf_debug_MATRIX88@matrix
  2117  0600  120A  118A  21C4  120A  118A  	fcall	_printf_debug_MATRIX88
  2118                           
  2119                           ;teris_16f886.c: 1448: printf_Screen();
  2120  0605  120A  158A  235D  120A  118A  	fcall	_printf_Screen
  2121                           
  2122                           ;teris_16f886.c: 1449: if(hit_res == 0)
  2123  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2124  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2125  060C  0851               	movf	main@hit_res,w
  2126  060D  1D03               	btfss	3,2
  2127  060E  2D53               	goto	l3820
  2128                           
  2129                           ;teris_16f886.c: 1450: {
  2130                           ;teris_16f886.c: 1451: clear(cur_x, cur_y, g_cur_matrix44, &g_matrix88);
  2131  060F  085B               	movf	_cur_y,w
  2132  0610  00C6               	movwf	??_main
  2133  0611  0846               	movf	??_main,w
  2134  0612  00F0               	movwf	clear@y
  2135  0613  0857               	movf	_g_cur_matrix44,w
  2136  0614  00F1               	movwf	clear@matrix44
  2137  0615  0858               	movf	_g_cur_matrix44+1,w
  2138  0616  00F2               	movwf	clear@matrix44+1
  2139  0617  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  2140  0618  00C7               	movwf	??_main+1
  2141  0619  0847               	movf	??_main+1,w
  2142  061A  00F3               	movwf	clear@matrix88
  2143  061B  0861               	movf	_cur_x,w
  2144  061C  120A  158A  2710  120A  118A  	fcall	_clear
  2145                           
  2146                           ;teris_16f886.c: 1456: }
  2147                           ;teris_16f886.c: 1460: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2148                           
  2149                           ;teris_16f886.c: 1453: else
  2150                           ;teris_16f886.c: 1454: {
  2151                           ;teris_16f886.c: 1455: break;
  2152                           
  2153                           ;teris_16f886.c: 1452: }
  2154  0621  301A               	movlw	26
  2155  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0624  00C8               	movwf	??_main+2
  2158  0625  305E               	movlw	94
  2159  0626  00C7               	movwf	??_main+1
  2160  0627  3086               	movlw	134
  2161  0628  00C6               	movwf	??_main
  2162  0629                     u6187:	
  2163  0629  0BC6               	decfsz	??_main,f
  2164  062A  2E29               	goto	u6187
  2165  062B  0BC7               	decfsz	??_main+1,f
  2166  062C  2E29               	goto	u6187
  2167  062D  0BC8               	decfsz	??_main+2,f
  2168  062E  2E29               	goto	u6187
  2169  062F  0000               	nop
  2170                           
  2171                           ;teris_16f886.c: 1462: cur_y++;
  2172  0630  3001               	movlw	1
  2173  0631  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0632  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0633  00C6               	movwf	??_main
  2176  0634  0846               	movf	??_main,w
  2177  0635  07DB               	addwf	_cur_y,f
  2178  0636  2DAE               	goto	l3834
  2179  0637                     __end_of_main:	
  2180                           ;teris_16f886.c: 1472: return 0;
  2181                           ;	Return value of _main is never used
  2182                           
  2183                           ;teris_16f886.c: 1463: }
  2184                           ;teris_16f886.c: 1464: }
  2185                           ;teris_16f886.c: 1465: __exit:
  2186                           
  2187                           
  2188                           	psect	text1
  2189  0B7F                     __ptext1:	
  2190 ;; *************** function _srand *****************
  2191 ;; Defined at:
  2192 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\rand.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  x               2    0[COMMON] unsigned int 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         2       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0
  2209 ;;      Totals:         2       0       0       0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _srand
  2221  0B7F                     _srand:	
  2222                           
  2223                           ;incstack = 0
  2224                           ; Regs used in _srand: [wreg]
  2225  0B7F  0870               	movf	srand@x,w
  2226  0B80  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0B81  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0B82  00DD               	movwf	_randx
  2229  0B83  0871               	movf	srand@x+1,w
  2230  0B84  00DE               	movwf	_randx+1
  2231  0B85  01DF               	clrf	_randx+2
  2232  0B86  01E0               	clrf	_randx+3
  2233  0B87  0008               	return
  2234  0B88                     __end_of_srand:	
  2235                           
  2236                           	psect	text2
  2237  01C4                     __ptext2:	
  2238 ;; *************** function _printf_debug_MATRIX88 *****************
  2239 ;; Defined at:
  2240 ;;		line 492 in file "teris_16f886.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  lable           2    5[COMMON] PTR const unsigned char 
  2243 ;;		 -> STR_22(12), ROM(8192), 
  2244 ;;  matrix          1    7[COMMON] PTR const struct .
  2245 ;;		 -> g_matrix88(64), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  col             1   12[COMMON] unsigned char 
  2248 ;;  row             1   11[COMMON] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2258 ;;      Params:         3       0       0       0       0
  2259 ;;      Locals:         2       0       0       0       0
  2260 ;;      Temps:          3       0       0       0       0
  2261 ;;      Totals:         8       0       0       0       0
  2262 ;;Total ram usage:        8 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    3
  2265 ;; This function calls:
  2266 ;;		_debug_line
  2267 ;;		_debug_str
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;;		_printf_debug_Screen
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           
  2275                           ;psect for function _printf_debug_MATRIX88
  2276  01C4                     _printf_debug_MATRIX88:	
  2277                           
  2278                           ;teris_16f886.c: 494: if(lable != (0))
  2279                           
  2280                           ;incstack = 0
  2281                           ; Regs used in _printf_debug_MATRIX88: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  2282  01C4  0875               	movf	printf_debug_MATRIX88@lable,w
  2283  01C5  0476               	iorwf	printf_debug_MATRIX88@lable+1,w
  2284  01C6  1903               	btfsc	3,2
  2285  01C7  29DA               	goto	l220
  2286                           
  2287                           ;teris_16f886.c: 495: {
  2288                           ;teris_16f886.c: 496: debug_str(lable);
  2289  01C8  0875               	movf	printf_debug_MATRIX88@lable,w
  2290  01C9  00F3               	movwf	debug_str@str
  2291  01CA  0876               	movf	printf_debug_MATRIX88@lable+1,w
  2292  01CB  00F4               	movwf	debug_str@str+1
  2293  01CC  120A  158A  236F  120A  118A  	fcall	_debug_str
  2294                           
  2295                           ;teris_16f886.c: 497: debug_line(":");
  2296  01D1  306B               	movlw	low (STR_5| (0+32768))
  2297  01D2  00F3               	movwf	debug_line@str
  2298  01D3  308A               	movlw	high (STR_5| (0+32768))
  2299  01D4  00F4               	movwf	debug_line@str+1
  2300  01D5  120A  158A  23AA  120A  118A  	fcall	_debug_line
  2301  01DA                     l220:	
  2302                           
  2303                           ;teris_16f886.c: 498: }
  2304                           ;teris_16f886.c: 499: debug_line("<<<<<<<<<<<<<<<<<<<<MATRIX88");
  2305  01DA  30CD               	movlw	low (STR_16| (0+32768))
  2306  01DB  00F3               	movwf	debug_line@str
  2307  01DC  3089               	movlw	high (STR_16| (0+32768))
  2308  01DD  00F4               	movwf	debug_line@str+1
  2309  01DE  120A  158A  23AA  120A  118A  	fcall	_debug_line
  2310                           
  2311                           ;teris_16f886.c: 500: for(uint8_t row = 0; row < 8; row++)
  2312  01E3  01FB               	clrf	printf_debug_MATRIX88@row
  2313  01E4  3008               	movlw	8
  2314  01E5  027B               	subwf	printf_debug_MATRIX88@row,w
  2315  01E6  1803               	btfsc	3,0
  2316  01E7  2A28               	goto	l3164
  2317  01E8                     l3142:	
  2318                           
  2319                           ;teris_16f886.c: 501: {
  2320                           ;teris_16f886.c: 502: for(uint8_t col = 0; col < 8; col++)
  2321  01E8  01FC               	clrf	printf_debug_MATRIX88@col
  2322  01E9  3008               	movlw	8
  2323  01EA  027C               	subwf	printf_debug_MATRIX88@col,w
  2324  01EB  1803               	btfsc	3,0
  2325  01EC  2A17               	goto	l3158
  2326  01ED                     l3148:	
  2327                           
  2328                           ;teris_16f886.c: 503: {
  2329                           ;teris_16f886.c: 504: if(matrix->data[row][col] == 1)
  2330  01ED  087B               	movf	printf_debug_MATRIX88@row,w
  2331  01EE  00F8               	movwf	??_printf_debug_MATRIX88
  2332  01EF  3002               	movlw	2
  2333  01F0                     u3965:	
  2334  01F0  1003               	clrc
  2335  01F1  0DF8               	rlf	??_printf_debug_MATRIX88,f
  2336  01F2  3EFF               	addlw	-1
  2337  01F3  1D03               	skipz
  2338  01F4  29F0               	goto	u3965
  2339  01F5  1003               	clrc
  2340  01F6  0D78               	rlf	??_printf_debug_MATRIX88,w
  2341  01F7  0777               	addwf	printf_debug_MATRIX88@matrix,w
  2342  01F8  00F9               	movwf	??_printf_debug_MATRIX88+1
  2343  01F9  087C               	movf	printf_debug_MATRIX88@col,w
  2344  01FA  0779               	addwf	??_printf_debug_MATRIX88+1,w
  2345  01FB  00FA               	movwf	??_printf_debug_MATRIX88+2
  2346  01FC  087A               	movf	??_printf_debug_MATRIX88+2,w
  2347  01FD  0084               	movwf	4
  2348  01FE  1783               	bsf	3,7	;select IRP bank2
  2349  01FF  0300               	decf	0,w
  2350  0200  1D03               	btfss	3,2
  2351  0201  2A06               	goto	l3152
  2352                           
  2353                           ;teris_16f886.c: 505: {
  2354                           ;teris_16f886.c: 506: debug_str("*");
  2355  0202  3069               	movlw	low (STR_7| (0+32768))
  2356  0203  00F3               	movwf	debug_str@str
  2357  0204  308A               	movlw	high (STR_7| (0+32768))
  2358  0205  2A09               	goto	L1
  2359  0206                     l3152:	
  2360                           ;teris_16f886.c: 507: }
  2361                           
  2362                           
  2363                           ;teris_16f886.c: 508: else
  2364                           ;teris_16f886.c: 509: {
  2365                           ;teris_16f886.c: 510: debug_str("_");
  2366  0206  306D               	movlw	low (STR_8| (0+32768))
  2367  0207  00F3               	movwf	debug_str@str
  2368  0208  308A               	movlw	high (STR_8| (0+32768))
  2369  0209                     L1:	
  2370  0209  00F4               	movwf	debug_str@str+1
  2371  020A  120A  158A  236F  120A  118A  	fcall	_debug_str
  2372  020F  3001               	movlw	1
  2373  0210  00F8               	movwf	??_printf_debug_MATRIX88
  2374  0211  0878               	movf	??_printf_debug_MATRIX88,w
  2375  0212  07FC               	addwf	printf_debug_MATRIX88@col,f
  2376  0213  3008               	movlw	8
  2377  0214  027C               	subwf	printf_debug_MATRIX88@col,w
  2378  0215  1C03               	skipc
  2379  0216  29ED               	goto	l3148
  2380  0217                     l3158:	
  2381                           
  2382                           ;teris_16f886.c: 511: }
  2383                           ;teris_16f886.c: 512: }
  2384                           ;teris_16f886.c: 513: debug_line("");
  2385  0217  3068               	movlw	low ((STR_1+2)| (0+32768))
  2386  0218  00F3               	movwf	debug_line@str
  2387  0219  308A               	movlw	high ((STR_1+2)| (0+32768))
  2388  021A  00F4               	movwf	debug_line@str+1
  2389  021B  120A  158A  23AA  120A  118A  	fcall	_debug_line
  2390  0220  3001               	movlw	1
  2391  0221  00F8               	movwf	??_printf_debug_MATRIX88
  2392  0222  0878               	movf	??_printf_debug_MATRIX88,w
  2393  0223  07FB               	addwf	printf_debug_MATRIX88@row,f
  2394  0224  3008               	movlw	8
  2395  0225  027B               	subwf	printf_debug_MATRIX88@row,w
  2396  0226  1C03               	skipc
  2397  0227  29E8               	goto	l3142
  2398  0228                     l3164:	
  2399                           
  2400                           ;teris_16f886.c: 514: }
  2401                           ;teris_16f886.c: 515: debug_line(">>>>>>>>>>>>>>>>>>>>");
  2402  0228  3005               	movlw	low (STR_10| (0+32768))
  2403  0229  00F3               	movwf	debug_line@str
  2404  022A  308A               	movlw	high (STR_10| (0+32768))
  2405  022B  00F4               	movwf	debug_line@str+1
  2406  022C  120A  158A  23AA   	fcall	_debug_line
  2407  022F  0008               	return
  2408  0230                     __end_of_printf_debug_MATRIX88:	
  2409                           
  2410                           	psect	text3
  2411  0B6F                     __ptext3:	
  2412 ;; *************** function _debug_str *****************
  2413 ;; Defined at:
  2414 ;;		line 287 in file "teris_16f886.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  str             2    3[COMMON] PTR const unsigned char 
  2417 ;;		 -> STR_22(12), STR_18(2), STR_17(2), STR_8(2), 
  2418 ;;		 -> STR_7(2), ROM(8192), 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         2       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0
  2433 ;;      Totals:         2       0       0       0       0
  2434 ;;Total ram usage:        2 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    2
  2437 ;; This function calls:
  2438 ;;		_USARTWriteString
  2439 ;; This function is called by:
  2440 ;;		_printf_debug_MATRIX88
  2441 ;;		_printf_debug_MATRIX44
  2442 ;;		_printf_debug_cur_MATRIX44
  2443 ;;		_printf_debug_Screen
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function _debug_str
  2449  0B6F                     _debug_str:	
  2450                           
  2451                           ;teris_16f886.c: 293: USARTWriteString(str);
  2452                           
  2453                           ;incstack = 0
  2454                           ; Regs used in _debug_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2455  0B6F  0873               	movf	debug_str@str,w
  2456  0B70  00F1               	movwf	USARTWriteString@str
  2457  0B71  0874               	movf	debug_str@str+1,w
  2458  0B72  00F2               	movwf	USARTWriteString@str+1
  2459  0B73  120A  158A  24BD   	fcall	_USARTWriteString
  2460  0B76  0008               	return
  2461  0B77                     __end_of_debug_str:	
  2462                           
  2463                           	psect	text4
  2464  0BAA                     __ptext4:	
  2465 ;; *************** function _debug_line *****************
  2466 ;; Defined at:
  2467 ;;		line 297 in file "teris_16f886.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  str             2    3[COMMON] PTR const unsigned char 
  2470 ;;		 -> STR_21(2), STR_20(21), STR_19(1), STR_16(29), 
  2471 ;;		 -> STR_15(2), STR_12(20), STR_11(2), STR_10(21), 
  2472 ;;		 -> STR_9(1), STR_6(29), STR_5(2), 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         2       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0
  2487 ;;      Totals:         2       0       0       0       0
  2488 ;;Total ram usage:        2 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    2
  2491 ;; This function calls:
  2492 ;;		_USARTWriteString
  2493 ;; This function is called by:
  2494 ;;		_printf_debug_MATRIX88
  2495 ;;		_printf_debug_MATRIX44
  2496 ;;		_printf_debug_cur_MATRIX44
  2497 ;;		_printf_debug_all_MATRIX44
  2498 ;;		_printf_debug_Screen
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function _debug_line
  2504  0BAA                     _debug_line:	
  2505                           
  2506                           ;teris_16f886.c: 304: USARTWriteString(str);
  2507                           
  2508                           ;incstack = 0
  2509                           ; Regs used in _debug_line: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2510  0BAA  0873               	movf	debug_line@str,w
  2511  0BAB  00F1               	movwf	USARTWriteString@str
  2512  0BAC  0874               	movf	debug_line@str+1,w
  2513  0BAD  00F2               	movwf	USARTWriteString@str+1
  2514  0BAE  120A  158A  24BD  120A  158A  	fcall	_USARTWriteString
  2515                           
  2516                           ;teris_16f886.c: 305: USARTWriteString("\r\n");
  2517  0BB3  3066               	movlw	low (STR_1| (0+32768))
  2518  0BB4  00F1               	movwf	USARTWriteString@str
  2519  0BB5  308A               	movlw	high (STR_1| (0+32768))
  2520  0BB6  00F2               	movwf	USARTWriteString@str+1
  2521  0BB7  120A  158A  24BD   	fcall	_USARTWriteString
  2522  0BBA  0008               	return
  2523  0BBB                     __end_of_debug_line:	
  2524                           
  2525                           	psect	text5
  2526  0CBD                     __ptext5:	
  2527 ;; *************** function _USARTWriteString *****************
  2528 ;; Defined at:
  2529 ;;		line 76 in file "usart_pic16.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  str             2    1[COMMON] PTR const unsigned char 
  2532 ;;		 -> STR_22(12), STR_21(2), STR_20(21), STR_19(1), 
  2533 ;;		 -> STR_18(2), STR_17(2), STR_16(29), STR_15(2), 
  2534 ;;		 -> STR_12(20), STR_11(2), STR_10(21), STR_9(1), 
  2535 ;;		 -> STR_8(2), STR_7(2), STR_6(29), STR_5(2), 
  2536 ;;		 -> ROM(8192), STR_4(3), STR_3(3), STR_2(3), 
  2537 ;;		 -> g_debug(32), STR_1(3), 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         2       0       0       0       0
  2550 ;;      Locals:         0       0       0       0       0
  2551 ;;      Temps:          0       0       0       0       0
  2552 ;;      Totals:         2       0       0       0       0
  2553 ;;Total ram usage:        2 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    1
  2556 ;; This function calls:
  2557 ;;		_USARTWriteChar
  2558 ;; This function is called by:
  2559 ;;		_debug_str
  2560 ;;		_debug_line
  2561 ;;		_USARTWriteLine
  2562 ;;		_debug_int1
  2563 ;;		_debug_int2
  2564 ;;		_debug_int3
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _USARTWriteString
  2570  0CBD                     _USARTWriteString:	
  2571  0CBD                     l2466:	
  2572                           ;usart_pic16.c: 77: while (*str != '\0') {
  2573                           
  2574                           ;incstack = 0
  2575                           ; Regs used in _USARTWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2576                           
  2577  0CBD  0872               	movf	USARTWriteString@str+1,w
  2578  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0CC0  00FF               	movwf	127
  2581  0CC1  0871               	movf	USARTWriteString@str,w
  2582  0CC2  0084               	movwf	4
  2583  0CC3  120A  158A  2000  120A  158A  	fcall	stringtab
  2584  0CC8  3A00               	xorlw	0
  2585  0CC9  1903               	btfsc	3,2
  2586  0CCA  0008               	return
  2587                           
  2588                           ;usart_pic16.c: 78: USARTWriteChar(*str);
  2589  0CCB  0872               	movf	USARTWriteString@str+1,w
  2590  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  2591  0CCD  1303               	bcf	3,6	;RP1=0, select bank0
  2592  0CCE  00FF               	movwf	127
  2593  0CCF  0871               	movf	USARTWriteString@str,w
  2594  0CD0  0084               	movwf	4
  2595  0CD1  120A  158A  2000  120A  158A  	fcall	stringtab
  2596  0CD6  120A  158A  2367  120A  158A  	fcall	_USARTWriteChar
  2597                           
  2598                           ;usart_pic16.c: 79: str++;
  2599  0CDB  3001               	movlw	1
  2600  0CDC  07F1               	addwf	USARTWriteString@str,f
  2601  0CDD  1803               	skipnc
  2602  0CDE  0AF2               	incf	USARTWriteString@str+1,f
  2603  0CDF  3000               	movlw	0
  2604  0CE0  07F2               	addwf	USARTWriteString@str+1,f
  2605  0CE1  2CBD               	goto	l2466
  2606  0CE2                     __end_of_USARTWriteString:	
  2607                           
  2608                           	psect	text6
  2609  0B67                     __ptext6:	
  2610 ;; *************** function _USARTWriteChar *****************
  2611 ;; Defined at:
  2612 ;;		line 70 in file "usart_pic16.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  ch              1    wreg     unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  ch              1    0[COMMON] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2626 ;;      Params:         0       0       0       0       0
  2627 ;;      Locals:         1       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0
  2629 ;;      Totals:         1       0       0       0       0
  2630 ;;Total ram usage:        1 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_USARTWriteString
  2636 ;;		_USARTWriteLine
  2637 ;;		_USARTWriteInt
  2638 ;;		_USARTGotoNewLine
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _USARTWriteChar
  2644  0B67                     _USARTWriteChar:	
  2645                           
  2646                           ;incstack = 0
  2647                           ; Regs used in _USARTWriteChar: [wreg]
  2648                           ;USARTWriteChar@ch stored from wreg
  2649  0B67  00F0               	movwf	USARTWriteChar@ch
  2650  0B68                     l36:	
  2651                           ;usart_pic16.c: 71: while (!PIR1bits.TXIF);
  2652                           
  2653  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  2654  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0B6A  1E0C               	btfss	12,4	;volatile
  2656  0B6B  2B68               	goto	l36
  2657                           
  2658                           ;usart_pic16.c: 73: TXREG = ch;
  2659  0B6C  0870               	movf	USARTWriteChar@ch,w
  2660  0B6D  0099               	movwf	25	;volatile
  2661  0B6E  0008               	return
  2662  0B6F                     __end_of_USARTWriteChar:	
  2663                           
  2664                           	psect	text7
  2665  0F5F                     __ptext7:	
  2666 ;; *************** function _merge *****************
  2667 ;; Defined at:
  2668 ;;		line 855 in file "teris_16f886.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  x               1    wreg     char 
  2671 ;;  y               1    0[COMMON] char 
  2672 ;;  matrix44        2    1[COMMON] PTR const struct .
  2673 ;;		 -> NULL(0), g_matrix44(384), 
  2674 ;;  matrix88        1    3[COMMON] PTR struct .
  2675 ;;		 -> g_matrix88(64), 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  x               1    8[COMMON] char 
  2678 ;;  col             1   10[COMMON] unsigned char 
  2679 ;;  row             1    9[COMMON] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2689 ;;      Params:         4       0       0       0       0
  2690 ;;      Locals:         3       0       0       0       0
  2691 ;;      Temps:          4       0       0       0       0
  2692 ;;      Totals:        11       0       0       0       0
  2693 ;;Total ram usage:       11 bytes
  2694 ;; Hardware stack levels used:    2
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function _merge
  2704  0F5F                     _merge:	
  2705                           
  2706                           ;incstack = 0
  2707                           ; Regs used in _merge: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2708                           ;merge@x stored from wreg
  2709  0F5F  00F8               	movwf	merge@x
  2710                           
  2711                           ;teris_16f886.c: 857: for(uint8_t row = 0; row < 4; row++)
  2712  0F60  01F9               	clrf	merge@row
  2713  0F61                     L2:	
  2714  0F61  3004               	movlw	4
  2715  0F62  0279               	subwf	merge@row,w
  2716  0F63  1803               	btfsc	3,0
  2717  0F64  0008               	return
  2718                           
  2719                           ;teris_16f886.c: 858: {
  2720                           ;teris_16f886.c: 859: for(uint8_t col = 0; col < 4; col++)
  2721  0F65  01FA               	clrf	merge@col
  2722  0F66  3004               	movlw	4
  2723  0F67  027A               	subwf	merge@col,w
  2724  0F68  1803               	btfsc	3,0
  2725  0F69  2FAA               	goto	l3250
  2726  0F6A                     l3242:	
  2727                           
  2728                           ;teris_16f886.c: 860: {
  2729                           ;teris_16f886.c: 861: if(matrix44->data[row][col] == 1)
  2730  0F6A  0879               	movf	merge@row,w
  2731  0F6B  00F4               	movwf	??_merge
  2732  0F6C  01F5               	clrf	??_merge+1
  2733  0F6D  1003               	clrc
  2734  0F6E  0DF4               	rlf	??_merge,f
  2735  0F6F  0DF5               	rlf	??_merge+1,f
  2736  0F70  1003               	clrc
  2737  0F71  0DF4               	rlf	??_merge,f
  2738  0F72  0DF5               	rlf	??_merge+1,f
  2739  0F73  0874               	movf	??_merge,w
  2740  0F74  0771               	addwf	merge@matrix44,w
  2741  0F75  00F6               	movwf	??_merge+2
  2742  0F76  0875               	movf	??_merge+1,w
  2743  0F77  1803               	skipnc
  2744  0F78  0A75               	incf	??_merge+1,w
  2745  0F79  0772               	addwf	merge@matrix44+1,w
  2746  0F7A  00F7               	movwf	??_merge+3
  2747  0F7B  087A               	movf	merge@col,w
  2748  0F7C  0776               	addwf	??_merge+2,w
  2749  0F7D  0084               	movwf	4
  2750  0F7E  0877               	movf	??_merge+3,w
  2751  0F7F  1803               	skipnc
  2752  0F80  0A77               	incf	??_merge+3,w
  2753  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0F83  00FF               	movwf	127
  2756  0F84  120A  158A  2000  120A  158A  	fcall	stringtab
  2757  0F89  3A01               	xorlw	1
  2758  0F8A  1D03               	skipz
  2759  0F8B  2FA2               	goto	l3246
  2760                           
  2761                           ;teris_16f886.c: 862: {
  2762                           ;teris_16f886.c: 863: matrix88->data[y + row][x + col] = 1;
  2763  0F8C  087A               	movf	merge@col,w
  2764  0F8D  0778               	addwf	merge@x,w
  2765  0F8E  0773               	addwf	merge@matrix88,w
  2766  0F8F  00F4               	movwf	??_merge
  2767  0F90  0879               	movf	merge@row,w
  2768  0F91  0770               	addwf	merge@y,w
  2769  0F92  00F5               	movwf	??_merge+1
  2770  0F93  3002               	movlw	2
  2771  0F94                     u4185:	
  2772  0F94  1003               	clrc
  2773  0F95  0DF5               	rlf	??_merge+1,f
  2774  0F96  3EFF               	addlw	-1
  2775  0F97  1D03               	skipz
  2776  0F98  2F94               	goto	u4185
  2777  0F99  1003               	clrc
  2778  0F9A  0D75               	rlf	??_merge+1,w
  2779  0F9B  0774               	addwf	??_merge,w
  2780  0F9C  00F6               	movwf	??_merge+2
  2781  0F9D  0876               	movf	??_merge+2,w
  2782  0F9E  0084               	movwf	4
  2783  0F9F  1783               	bsf	3,7	;select IRP bank2
  2784  0FA0  0180               	clrf	0
  2785  0FA1  0A80               	incf	0,f
  2786  0FA2                     l3246:	
  2787  0FA2  3001               	movlw	1
  2788  0FA3  00F4               	movwf	??_merge
  2789  0FA4  0874               	movf	??_merge,w
  2790  0FA5  07FA               	addwf	merge@col,f
  2791  0FA6  3004               	movlw	4
  2792  0FA7  027A               	subwf	merge@col,w
  2793  0FA8  1C03               	skipc
  2794  0FA9  2F6A               	goto	l3242
  2795  0FAA                     l3250:	
  2796  0FAA  3001               	movlw	1
  2797  0FAB  00F4               	movwf	??_merge
  2798  0FAC  0874               	movf	??_merge,w
  2799  0FAD  07F9               	addwf	merge@row,f
  2800  0FAE  2F61               	goto	L2
  2801  0FAF                     __end_of_merge:	
  2802                           
  2803                           	psect	text8
  2804  0FAF                     __ptext8:	
  2805 ;; *************** function _max7219_init1 *****************
  2806 ;; Defined at:
  2807 ;;		line 436 in file "teris_16f886.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, pclath, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2821 ;;      Params:         0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0
  2824 ;;      Totals:         0       0       0       0       0
  2825 ;;Total ram usage:        0 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    1
  2828 ;; This function calls:
  2829 ;;		_SPI1_write
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           
  2836                           ;psect for function _max7219_init1
  2837  0FAF                     _max7219_init1:	
  2838                           
  2839                           ;teris_16f886.c: 438: RA2 = 0;
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _max7219_init1: [wreg+status,2+status,0+pclath+cstack]
  2843  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  2844  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  2845  0FB1  1105               	bcf	5,2	;volatile
  2846                           
  2847                           ;teris_16f886.c: 439: SPI1_write(0x09);
  2848  0FB2  3009               	movlw	9
  2849  0FB3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2850                           
  2851                           ;teris_16f886.c: 440: SPI1_write(0x00);
  2852  0FB8  3000               	movlw	0
  2853  0FB9  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2854                           
  2855                           ;teris_16f886.c: 441: RA2 = 1;
  2856  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0FC0  1505               	bsf	5,2	;volatile
  2859                           
  2860                           ;teris_16f886.c: 443: RA2 = 0;
  2861  0FC1  1105               	bcf	5,2	;volatile
  2862                           
  2863                           ;teris_16f886.c: 444: SPI1_write(0x0A);
  2864  0FC2  300A               	movlw	10
  2865  0FC3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2866                           
  2867                           ;teris_16f886.c: 445: SPI1_write(0x0F);
  2868  0FC8  300F               	movlw	15
  2869  0FC9  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2870                           
  2871                           ;teris_16f886.c: 446: RA2 = 1;
  2872  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0FD0  1505               	bsf	5,2	;volatile
  2875                           
  2876                           ;teris_16f886.c: 448: RA2 = 0;
  2877  0FD1  1105               	bcf	5,2	;volatile
  2878                           
  2879                           ;teris_16f886.c: 449: SPI1_write(0x0B);
  2880  0FD2  300B               	movlw	11
  2881  0FD3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2882                           
  2883                           ;teris_16f886.c: 450: SPI1_write(0x07);
  2884  0FD8  3007               	movlw	7
  2885  0FD9  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2886                           
  2887                           ;teris_16f886.c: 451: RA2 = 1;
  2888  0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0FE0  1505               	bsf	5,2	;volatile
  2891                           
  2892                           ;teris_16f886.c: 453: RA2 = 0;
  2893  0FE1  1105               	bcf	5,2	;volatile
  2894                           
  2895                           ;teris_16f886.c: 454: SPI1_write(0x0C);
  2896  0FE2  300C               	movlw	12
  2897  0FE3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2898                           
  2899                           ;teris_16f886.c: 455: SPI1_write(0x01);
  2900  0FE8  3001               	movlw	1
  2901  0FE9  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2902                           
  2903                           ;teris_16f886.c: 456: RA2 = 1;
  2904  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0FF0  1505               	bsf	5,2	;volatile
  2907                           
  2908                           ;teris_16f886.c: 458: RA2 = 0;
  2909  0FF1  1105               	bcf	5,2	;volatile
  2910                           
  2911                           ;teris_16f886.c: 459: SPI1_write(0x00);
  2912  0FF2  3000               	movlw	0
  2913  0FF3  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  2914                           
  2915                           ;teris_16f886.c: 460: SPI1_write(0xFF);
  2916  0FF8  30FF               	movlw	255
  2917  0FF9  120A  158A  2556   	fcall	_SPI1_write
  2918                           
  2919                           ;teris_16f886.c: 461: RA2 = 1;
  2920  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0FFE  1505               	bsf	5,2	;volatile
  2923  0FFF  0008               	return
  2924  1000                     __end_of_max7219_init1:	
  2925                           
  2926                           	psect	text9
  2927  0230                     __ptext9:	
  2928 ;; *************** function _hit_land *****************
  2929 ;; Defined at:
  2930 ;;		line 691 in file "teris_16f886.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  x               1    wreg     char 
  2933 ;;  y               1    0[COMMON] char 
  2934 ;;  matrix44        2    1[COMMON] PTR const struct .
  2935 ;;		 -> NULL(0), g_matrix44(384), 
  2936 ;;  matrix88        1    3[COMMON] PTR const struct .
  2937 ;;		 -> g_matrix88(64), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  x               1    8[COMMON] char 
  2940 ;;  col             1    9[COMMON] char 
  2941 ;;  row             1   10[COMMON] char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      unsigned char 
  2944 ;; Registers used:
  2945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2951 ;;      Params:         4       0       0       0       0
  2952 ;;      Locals:         3       0       0       0       0
  2953 ;;      Temps:          4       0       0       0       0
  2954 ;;      Totals:        11       0       0       0       0
  2955 ;;Total ram usage:       11 bytes
  2956 ;; Hardware stack levels used:    2
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _hit_land
  2966  0230                     _hit_land:	
  2967                           
  2968                           ;incstack = 0
  2969                           ; Regs used in _hit_land: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2970                           ;hit_land@x stored from wreg
  2971  0230  00F8               	movwf	hit_land@x
  2972                           
  2973                           ;teris_16f886.c: 697: for(int8_t row = 4 - 1; row >= 0; row--)
  2974  0231  3003               	movlw	3
  2975  0232  00F4               	movwf	??_hit_land
  2976  0233  0874               	movf	??_hit_land,w
  2977  0234  00FA               	movwf	hit_land@row
  2978  0235  1BFA               	btfsc	hit_land@row,7
  2979  0236  2A9F               	goto	l3202
  2980  0237                     l3174:	
  2981                           
  2982                           ;teris_16f886.c: 698: {
  2983                           ;teris_16f886.c: 699: for(int8_t col = 0; col < 4; col++)
  2984  0237  01F9               	clrf	hit_land@col
  2985  0238  0879               	movf	hit_land@col,w
  2986  0239  3A80               	xorlw	128
  2987  023A  3E7C               	addlw	-132
  2988  023B  1803               	btfsc	3,0
  2989  023C  2A99               	goto	l3198
  2990  023D                     l3180:	
  2991                           
  2992                           ;teris_16f886.c: 700: {
  2993                           ;teris_16f886.c: 701: if(matrix44->data[row][col] == 1)
  2994  023D  087A               	movf	hit_land@row,w
  2995  023E  00F4               	movwf	??_hit_land
  2996  023F  01F5               	clrf	??_hit_land+1
  2997  0240  1003               	clrc
  2998  0241  0DF4               	rlf	??_hit_land,f
  2999  0242  0DF5               	rlf	??_hit_land+1,f
  3000  0243  1003               	clrc
  3001  0244  0DF4               	rlf	??_hit_land,f
  3002  0245  0DF5               	rlf	??_hit_land+1,f
  3003  0246  0874               	movf	??_hit_land,w
  3004  0247  0771               	addwf	hit_land@matrix44,w
  3005  0248  00F6               	movwf	??_hit_land+2
  3006  0249  0875               	movf	??_hit_land+1,w
  3007  024A  1803               	skipnc
  3008  024B  0A75               	incf	??_hit_land+1,w
  3009  024C  0772               	addwf	hit_land@matrix44+1,w
  3010  024D  00F7               	movwf	??_hit_land+3
  3011  024E  0879               	movf	hit_land@col,w
  3012  024F  0776               	addwf	??_hit_land+2,w
  3013  0250  0084               	movwf	4
  3014  0251  0877               	movf	??_hit_land+3,w
  3015  0252  1803               	skipnc
  3016  0253  0A77               	incf	??_hit_land+3,w
  3017  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0256  00FF               	movwf	127
  3020  0257  120A  158A  2000  120A  118A  	fcall	stringtab
  3021  025C  3A01               	xorlw	1
  3022  025D  1D03               	skipz
  3023  025E  2A90               	goto	l3194
  3024                           
  3025                           ;teris_16f886.c: 702: {
  3026                           ;teris_16f886.c: 703: if((y + row) >= (8 - 1))
  3027  025F  0870               	movf	hit_land@y,w
  3028  0260  077A               	addwf	hit_land@row,w
  3029  0261  00F4               	movwf	??_hit_land
  3030  0262  01F5               	clrf	??_hit_land+1
  3031  0263  1803               	skipnc
  3032  0264  0AF5               	incf	??_hit_land+1,f
  3033  0265  1BF0               	btfsc	hit_land@y,7
  3034  0266  03F5               	decf	??_hit_land+1,f
  3035  0267  1BFA               	btfsc	hit_land@row,7
  3036  0268  03F5               	decf	??_hit_land+1,f
  3037  0269  0875               	movf	??_hit_land+1,w
  3038  026A  3A80               	xorlw	128
  3039  026B  00FF               	movwf	127
  3040  026C  3080               	movlw	128
  3041  026D  027F               	subwf	127,w
  3042  026E  1D03               	skipz
  3043  026F  2A72               	goto	u4045
  3044  0270  3007               	movlw	7
  3045  0271  0274               	subwf	??_hit_land,w
  3046  0272                     u4045:	
  3047  0272  1C03               	skipc
  3048  0273  2A76               	goto	l3188
  3049                           
  3050                           ;teris_16f886.c: 704: {
  3051                           ;teris_16f886.c: 708: return 1;
  3052  0274  3001               	movlw	1
  3053  0275  0008               	return
  3054  0276                     l3188:	
  3055                           
  3056                           ;teris_16f886.c: 709: }
  3057                           ;teris_16f886.c: 711: if(matrix88->data[y + row + 1][x + col] == 1)
  3058  0276  0879               	movf	hit_land@col,w
  3059  0277  0778               	addwf	hit_land@x,w
  3060  0278  0773               	addwf	hit_land@matrix88,w
  3061  0279  00F4               	movwf	??_hit_land
  3062  027A  087A               	movf	hit_land@row,w
  3063  027B  0770               	addwf	hit_land@y,w
  3064  027C  00F5               	movwf	??_hit_land+1
  3065  027D  3002               	movlw	2
  3066  027E                     u4055:	
  3067  027E  1003               	clrc
  3068  027F  0DF5               	rlf	??_hit_land+1,f
  3069  0280  3EFF               	addlw	-1
  3070  0281  1D03               	skipz
  3071  0282  2A7E               	goto	u4055
  3072  0283  1003               	clrc
  3073  0284  0D75               	rlf	??_hit_land+1,w
  3074  0285  3E08               	addlw	8
  3075  0286  0774               	addwf	??_hit_land,w
  3076  0287  00F6               	movwf	??_hit_land+2
  3077  0288  0876               	movf	??_hit_land+2,w
  3078  0289  0084               	movwf	4
  3079  028A  1783               	bsf	3,7	;select IRP bank2
  3080  028B  0300               	decf	0,w
  3081  028C  1D03               	btfss	3,2
  3082  028D  2A90               	goto	l3194
  3083                           
  3084                           ;teris_16f886.c: 712: {
  3085                           ;teris_16f886.c: 716: return 1;
  3086  028E  3001               	movlw	1
  3087  028F  0008               	return
  3088  0290                     l3194:	
  3089  0290  3001               	movlw	1
  3090  0291  00F4               	movwf	??_hit_land
  3091  0292  0874               	movf	??_hit_land,w
  3092  0293  07F9               	addwf	hit_land@col,f
  3093  0294  0879               	movf	hit_land@col,w
  3094  0295  3A80               	xorlw	128
  3095  0296  3E7C               	addlw	-132
  3096  0297  1C03               	skipc
  3097  0298  2A3D               	goto	l3180
  3098  0299                     l3198:	
  3099  0299  30FF               	movlw	255
  3100  029A  00F4               	movwf	??_hit_land
  3101  029B  0874               	movf	??_hit_land,w
  3102  029C  07FA               	addwf	hit_land@row,f
  3103  029D  1FFA               	btfss	hit_land@row,7
  3104  029E  2A37               	goto	l3174
  3105  029F                     l3202:	
  3106                           
  3107                           ;teris_16f886.c: 717: }
  3108                           ;teris_16f886.c: 718: }
  3109                           ;teris_16f886.c: 719: }
  3110                           ;teris_16f886.c: 720: }
  3111                           ;teris_16f886.c: 724: return 0;
  3112  029F  3000               	movlw	0
  3113  02A0  0008               	return
  3114  02A1                     __end_of_hit_land:	
  3115                           
  3116                           	psect	text10
  3117  0637                     __ptext10:	
  3118 ;; *************** function _find_best_solution *****************
  3119 ;; Defined at:
  3120 ;;		line 1064 in file "teris_16f886.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  temp_x          1   33[BANK0 ] char 
  3125 ;;  tem_sub_inde    1   28[BANK0 ] unsigned char 
  3126 ;;  temp_risk       2   29[BANK0 ] unsigned int 
  3127 ;;  temp_pre_ris    2   23[BANK0 ] unsigned int 
  3128 ;;  temp_high       1   32[BANK0 ] unsigned char 
  3129 ;;  temp_hole       1   31[BANK0 ] unsigned char 
  3130 ;;  temp_count      1   27[BANK0 ] unsigned char 
  3131 ;;  temp_pre_hig    1   26[BANK0 ] unsigned char 
  3132 ;;  temp_pre_hol    1   25[BANK0 ] unsigned char 
  3133 ;;  temp_pre_cou    1   22[BANK0 ] unsigned char 
  3134 ;;  temp_y          1   21[BANK0 ] char 
  3135 ;;  tem_pre_sub_    1   20[BANK0 ] char 
  3136 ;;  temp_pre_x      1   19[BANK0 ] char 
  3137 ;;  res             1   18[BANK0 ] unsigned char 
  3138 ;;  right_most_i    1   17[BANK0 ] char 
  3139 ;;  left_most_in    1   16[BANK0 ] char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      unsigned char 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         0       0       0       0       0
  3150 ;;      Locals:         0      18       0       0       0
  3151 ;;      Temps:          0       7       0       0       0
  3152 ;;      Totals:         0      25       0       0       0
  3153 ;;Total ram usage:       25 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    3
  3156 ;; This function calls:
  3157 ;;		___bmul
  3158 ;;		_delete_matrix
  3159 ;;		_evaluate
  3160 ;;		_fall_off
  3161 ;;		_get_high
  3162 ;;		_get_high_after_merge
  3163 ;;		_get_holes_after_merge
  3164 ;;		_is_valid
  3165 ;;		_left_most
  3166 ;;		_merge1
  3167 ;;		_right_most
  3168 ;; This function is called by:
  3169 ;;		_main
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function _find_best_solution
  3175  0637                     _find_best_solution:	
  3176                           
  3177                           ;teris_16f886.c: 1070: uint8_t res = 0;
  3178                           
  3179                           ;incstack = 0
  3180                           ; Regs used in _find_best_solution: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3181  0637  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0638  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0639  01B2               	clrf	find_best_solution@res
  3184                           
  3185                           ;teris_16f886.c: 1071: int8_t left_most_index, right_most_index;
  3186                           ;teris_16f886.c: 1073: int8_t temp_pre_x = 0xF, tem_pre_sub_index = 0xF;
  3187  063A  300F               	movlw	15
  3188  063B  00A9               	movwf	??_find_best_solution
  3189  063C  0829               	movf	??_find_best_solution,w
  3190  063D  00B3               	movwf	find_best_solution@temp_pre_x
  3191  063E  300F               	movlw	15
  3192  063F  00A9               	movwf	??_find_best_solution
  3193  0640  0829               	movf	??_find_best_solution,w
  3194  0641  00B4               	movwf	find_best_solution@tem_pre_sub_index
  3195                           
  3196                           ;teris_16f886.c: 1074: uint16_t temp_pre_risk = 0xFFFF;
  3197  0642  30FF               	movlw	255
  3198  0643  00B7               	movwf	find_best_solution@temp_pre_risk
  3199  0644  30FF               	movlw	255
  3200  0645  00B8               	movwf	find_best_solution@temp_pre_risk+1
  3201                           
  3202                           ;teris_16f886.c: 1075: int8_t temp_y;
  3203                           ;teris_16f886.c: 1076: uint16_t temp_risk;
  3204                           ;teris_16f886.c: 1077: uint8_t temp_count, temp_pre_count = 0;
  3205  0646  01B6               	clrf	find_best_solution@temp_pre_count
  3206                           
  3207                           ;teris_16f886.c: 1078: uint8_t temp_high, temp_pre_high = 0xFF;
  3208  0647  30FF               	movlw	255
  3209  0648  00A9               	movwf	??_find_best_solution
  3210  0649  0829               	movf	??_find_best_solution,w
  3211  064A  00BA               	movwf	find_best_solution@temp_pre_high
  3212                           
  3213                           ;teris_16f886.c: 1079: uint8_t temp_hole, temp_pre_hole = 0xFF;
  3214  064B  30FF               	movlw	255
  3215  064C  00A9               	movwf	??_find_best_solution
  3216  064D  0829               	movf	??_find_best_solution,w
  3217  064E  00B9               	movwf	find_best_solution@temp_pre_hole
  3218                           
  3219                           ;teris_16f886.c: 1082: for(uint8_t tem_sub_index = 0; tem_sub_index < g_char_info[g_char
      +                          _info_index].num; tem_sub_index++)
  3220  064F  01BC               	clrf	find_best_solution@tem_sub_index
  3221  0650                     l3334:	
  3222  0650  3003               	movlw	3
  3223  0651  00A9               	movwf	??_find_best_solution
  3224  0652  0829               	movf	??_find_best_solution,w
  3225  0653  00F0               	movwf	___bmul@multiplicand
  3226  0654  085C               	movf	_g_char_info_index,w
  3227  0655  120A  158A  2399  120A  118A  	fcall	___bmul
  3228  065A  3E02               	addlw	2
  3229  065B  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  3230  065C  0084               	movwf	4
  3231  065D  1383               	bcf	3,7	;select IRP bank1
  3232  065E  0800               	movf	0,w
  3233  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0661  023C               	subwf	find_best_solution@tem_sub_index,w
  3236  0662  1803               	btfsc	3,0
  3237  0663  2FA6               	goto	l3336
  3238                           
  3239                           ;teris_16f886.c: 1083: {
  3240                           ;teris_16f886.c: 1084: temp_cur_matrix44 = &g_matrix44[g_char_info[g_char_info_index].st
      +                          art_index + tem_sub_index];
  3241  0664  3003               	movlw	3
  3242  0665  00A9               	movwf	??_find_best_solution
  3243  0666  0829               	movf	??_find_best_solution,w
  3244  0667  00F0               	movwf	___bmul@multiplicand
  3245  0668  085C               	movf	_g_char_info_index,w
  3246  0669  120A  158A  2399  120A  118A  	fcall	___bmul
  3247  066E  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  3248  066F  0084               	movwf	4
  3249  0670  1383               	bcf	3,7	;select IRP bank1
  3250  0671  0800               	movf	0,w
  3251  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0674  073C               	addwf	find_best_solution@tem_sub_index,w
  3254  0675  00AA               	movwf	??_find_best_solution+1
  3255  0676  01AB               	clrf	??_find_best_solution+2
  3256  0677  0DAB               	rlf	??_find_best_solution+2,f
  3257  0678  0EAA               	swapf	??_find_best_solution+1,f
  3258  0679  0EAB               	swapf	??_find_best_solution+2,f
  3259  067A  30F0               	movlw	240
  3260  067B  05AB               	andwf	??_find_best_solution+2,f
  3261  067C  082A               	movf	??_find_best_solution+1,w
  3262  067D  390F               	andlw	15
  3263  067E  04AB               	iorwf	??_find_best_solution+2,f
  3264  067F  30F0               	movlw	240
  3265  0680  05AA               	andwf	??_find_best_solution+1,f
  3266  0681  3030               	movlw	low (_g_matrix44| (0+32768))
  3267  0682  00AC               	movwf	??_find_best_solution+3
  3268  0683  3088               	movlw	high (_g_matrix44| (0+32768))
  3269  0684  00AD               	movwf	??_find_best_solution+4
  3270  0685  082A               	movf	??_find_best_solution+1,w
  3271  0686  072C               	addwf	??_find_best_solution+3,w
  3272  0687  00AE               	movwf	??_find_best_solution+5
  3273  0688  082B               	movf	??_find_best_solution+2,w
  3274  0689  1803               	skipnc
  3275  068A  0A2B               	incf	??_find_best_solution+2,w
  3276  068B  072D               	addwf	??_find_best_solution+4,w
  3277  068C  00AF               	movwf	??_find_best_solution+6
  3278  068D  082E               	movf	??_find_best_solution+5,w
  3279  068E  00D9               	movwf	_temp_cur_matrix44
  3280  068F  082F               	movf	??_find_best_solution+6,w
  3281  0690  00DA               	movwf	_temp_cur_matrix44+1
  3282                           
  3283                           ;teris_16f886.c: 1085: left_most_index = left_most(cur_x, temp_cur_matrix44, &g_matrix88
      +                          );
  3284  0691  0859               	movf	_temp_cur_matrix44,w
  3285  0692  00FB               	movwf	left_most@matrix44
  3286  0693  085A               	movf	_temp_cur_matrix44+1,w
  3287  0694  00FC               	movwf	left_most@matrix44+1
  3288  0695  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3289  0696  00A9               	movwf	??_find_best_solution
  3290  0697  0829               	movf	??_find_best_solution,w
  3291  0698  00FD               	movwf	left_most@matrix88
  3292  0699  0861               	movf	_cur_x,w
  3293  069A  120A  158A  245B  120A  118A  	fcall	_left_most
  3294  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3295  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3296  06A1  00AA               	movwf	??_find_best_solution+1
  3297  06A2  082A               	movf	??_find_best_solution+1,w
  3298  06A3  00B0               	movwf	find_best_solution@left_most_index
  3299                           
  3300                           ;teris_16f886.c: 1086: right_most_index = right_most(cur_x, temp_cur_matrix44, &g_matrix
      +                          88);
  3301  06A4  0859               	movf	_temp_cur_matrix44,w
  3302  06A5  00FA               	movwf	right_most@matrix44
  3303  06A6  085A               	movf	_temp_cur_matrix44+1,w
  3304  06A7  00FB               	movwf	right_most@matrix44+1
  3305  06A8  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3306  06A9  00A9               	movwf	??_find_best_solution
  3307  06AA  0829               	movf	??_find_best_solution,w
  3308  06AB  00FC               	movwf	right_most@matrix88
  3309  06AC  0861               	movf	_cur_x,w
  3310  06AD  120A  158A  247B  120A  118A  	fcall	_right_most
  3311  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3312  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  3313  06B4  00AA               	movwf	??_find_best_solution+1
  3314  06B5  082A               	movf	??_find_best_solution+1,w
  3315  06B6  00B1               	movwf	find_best_solution@right_most_index
  3316                           
  3317                           ;teris_16f886.c: 1088: for(int8_t temp_x = left_most_index; temp_x <= right_most_index; 
      +                          temp_x++)
  3318  06B7  0830               	movf	find_best_solution@left_most_index,w
  3319  06B8  00A9               	movwf	??_find_best_solution
  3320  06B9  0829               	movf	??_find_best_solution,w
  3321  06BA  00C1               	movwf	find_best_solution@temp_x
  3322  06BB                     l3330:	
  3323  06BB  0831               	movf	find_best_solution@right_most_index,w
  3324  06BC  3A80               	xorlw	128
  3325  06BD  00A9               	movwf	??_find_best_solution
  3326  06BE  0841               	movf	find_best_solution@temp_x,w
  3327  06BF  3A80               	xorlw	128
  3328  06C0  02A9               	subwf	??_find_best_solution,f
  3329  06C1  1C03               	btfss	3,0
  3330  06C2  2FA1               	goto	l3332
  3331                           
  3332                           ;teris_16f886.c: 1089: {
  3333                           ;teris_16f886.c: 1090: temp_y = fall_off(temp_x, cur_y, temp_cur_matrix44, &g_matrix88);
  3334  06C3  085B               	movf	_cur_y,w
  3335  06C4  00A9               	movwf	??_find_best_solution
  3336  06C5  0829               	movf	??_find_best_solution,w
  3337  06C6  00F0               	movwf	fall_off@y
  3338  06C7  0859               	movf	_temp_cur_matrix44,w
  3339  06C8  00F1               	movwf	fall_off@matrix44
  3340  06C9  085A               	movf	_temp_cur_matrix44+1,w
  3341  06CA  00F2               	movwf	fall_off@matrix44+1
  3342  06CB  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3343  06CC  00AA               	movwf	??_find_best_solution+1
  3344  06CD  082A               	movf	??_find_best_solution+1,w
  3345  06CE  00F3               	movwf	fall_off@matrix88
  3346  06CF  0841               	movf	find_best_solution@temp_x,w
  3347  06D0  120A  118A  2313  120A  118A  	fcall	_fall_off
  3348  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  3349  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  3350  06D7  00AB               	movwf	??_find_best_solution+2
  3351  06D8  082B               	movf	??_find_best_solution+2,w
  3352  06D9  00B5               	movwf	find_best_solution@temp_y
  3353                           
  3354                           ;teris_16f886.c: 1097: if(is_valid(temp_x, temp_y, temp_cur_matrix44, &g_matrix88) == 0)
  3355  06DA  0835               	movf	find_best_solution@temp_y,w
  3356  06DB  00A9               	movwf	??_find_best_solution
  3357  06DC  0829               	movf	??_find_best_solution,w
  3358  06DD  00F0               	movwf	is_valid@y
  3359  06DE  0859               	movf	_temp_cur_matrix44,w
  3360  06DF  00F1               	movwf	is_valid@matrix44
  3361  06E0  085A               	movf	_temp_cur_matrix44+1,w
  3362  06E1  00F2               	movwf	is_valid@matrix44+1
  3363  06E2  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3364  06E3  00AA               	movwf	??_find_best_solution+1
  3365  06E4  082A               	movf	??_find_best_solution+1,w
  3366  06E5  00F3               	movwf	is_valid@matrix88
  3367  06E6  0841               	movf	find_best_solution@temp_x,w
  3368  06E7  120A  118A  2387  120A  118A  	fcall	_is_valid
  3369  06EC  3A00               	xorlw	0
  3370  06ED  1903               	btfsc	3,2
  3371  06EE  2F9A               	goto	l3328
  3372                           
  3373                           ;teris_16f886.c: 1100: }
  3374                           ;teris_16f886.c: 1101: res = 1;
  3375                           
  3376                           ;teris_16f886.c: 1098: {
  3377                           ;teris_16f886.c: 1099: continue;
  3378  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3379  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3380  06F1  01B2               	clrf	find_best_solution@res
  3381  06F2  0AB2               	incf	find_best_solution@res,f
  3382                           
  3383                           ;teris_16f886.c: 1102: merge1(temp_x, temp_y, temp_cur_matrix44, &g_matrix88, &temp_matr
      +                          ix88);
  3384  06F3  0835               	movf	find_best_solution@temp_y,w
  3385  06F4  00A9               	movwf	??_find_best_solution
  3386  06F5  0829               	movf	??_find_best_solution,w
  3387  06F6  00F7               	movwf	merge1@y
  3388  06F7  0859               	movf	_temp_cur_matrix44,w
  3389  06F8  00F8               	movwf	merge1@matrix44
  3390  06F9  085A               	movf	_temp_cur_matrix44+1,w
  3391  06FA  00F9               	movwf	merge1@matrix44+1
  3392  06FB  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3393  06FC  00AA               	movwf	??_find_best_solution+1
  3394  06FD  082A               	movf	??_find_best_solution+1,w
  3395  06FE  00FA               	movwf	merge1@matrix88_in
  3396  06FF  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3397  0700  00AB               	movwf	??_find_best_solution+2
  3398  0701  082B               	movf	??_find_best_solution+2,w
  3399  0702  00FB               	movwf	merge1@matrix88_out
  3400  0703  0841               	movf	find_best_solution@temp_x,w
  3401  0704  120A  118A  20FA  120A  118A  	fcall	_merge1
  3402                           
  3403                           ;teris_16f886.c: 1103: temp_count = delete_matrix(&temp_matrix88);
  3404  0709  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3405  070A  120A  158A  2580  120A  118A  	fcall	_delete_matrix
  3406  070F  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0710  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0711  00A9               	movwf	??_find_best_solution
  3409  0712  0829               	movf	??_find_best_solution,w
  3410  0713  00BB               	movwf	find_best_solution@temp_count
  3411                           
  3412                           ;teris_16f886.c: 1104: temp_risk = evaluate(&temp_matrix88);
  3413  0714  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3414  0715  120A  118A  22A1  120A  118A  	fcall	_evaluate
  3415  071A  0871               	movf	?_evaluate+1,w
  3416  071B  1283               	bcf	3,5	;RP0=0, select bank0
  3417  071C  1303               	bcf	3,6	;RP1=0, select bank0
  3418  071D  00BE               	movwf	find_best_solution@temp_risk+1
  3419  071E  0870               	movf	?_evaluate,w
  3420  071F  00BD               	movwf	find_best_solution@temp_risk
  3421                           
  3422                           ;teris_16f886.c: 1105: temp_high = get_high_after_merge(temp_y, temp_cur_matrix44);
  3423  0720  0859               	movf	_temp_cur_matrix44,w
  3424  0721  00F0               	movwf	get_high_after_merge@matrix
  3425  0722  085A               	movf	_temp_cur_matrix44+1,w
  3426  0723  00F1               	movwf	get_high_after_merge@matrix+1
  3427  0724  0835               	movf	find_best_solution@temp_y,w
  3428  0725  120A  158A  25F2  120A  118A  	fcall	_get_high_after_merge
  3429  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3430  072B  1303               	bcf	3,6	;RP1=0, select bank0
  3431  072C  00A9               	movwf	??_find_best_solution
  3432  072D  0829               	movf	??_find_best_solution,w
  3433  072E  00C0               	movwf	find_best_solution@temp_high
  3434                           
  3435                           ;teris_16f886.c: 1106: temp_hole = get_holes_after_merge(&temp_matrix88);
  3436  072F  3010               	movlw	(low (_temp_matrix88| (0+256)))& (0+255)
  3437  0730  120A  118A  241A  120A  118A  	fcall	_get_holes_after_merge
  3438  0735  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0736  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0737  00A9               	movwf	??_find_best_solution
  3441  0738  0829               	movf	??_find_best_solution,w
  3442  0739  00BF               	movwf	find_best_solution@temp_hole
  3443                           
  3444                           ;teris_16f886.c: 1113: if(temp_count > temp_pre_count)
  3445  073A  083B               	movf	find_best_solution@temp_count,w
  3446  073B  0236               	subwf	find_best_solution@temp_pre_count,w
  3447  073C  1C03               	btfss	3,0
  3448  073D  2F82               	goto	l3326
  3449                           
  3450                           ;teris_16f886.c: 1125: else if(temp_count == temp_pre_count)
  3451                           
  3452                           ;teris_16f886.c: 1124: }
  3453                           
  3454                           ;teris_16f886.c: 1123: temp_pre_x = temp_x;
  3455                           
  3456                           ;teris_16f886.c: 1122: tem_pre_sub_index = tem_sub_index;
  3457                           
  3458                           ;teris_16f886.c: 1121: temp_pre_hole = temp_hole;
  3459                           
  3460                           ;teris_16f886.c: 1120: temp_pre_high = temp_high;
  3461                           
  3462                           ;teris_16f886.c: 1119: temp_pre_risk = temp_risk;
  3463                           
  3464                           ;teris_16f886.c: 1114: {
  3465                           ;teris_16f886.c: 1118: temp_pre_count = temp_count;
  3466  073E  083B               	movf	find_best_solution@temp_count,w
  3467  073F  0636               	xorwf	find_best_solution@temp_pre_count,w
  3468  0740  1D03               	skipz
  3469  0741  2F9A               	goto	l3328
  3470                           
  3471                           ;teris_16f886.c: 1126: {
  3472                           ;teris_16f886.c: 1127: if(get_high(&g_matrix88) <= 8/2 + 1)
  3473  0742  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  3474  0743  120A  158A  249B  120A  118A  	fcall	_get_high
  3475  0748  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0749  1303               	bcf	3,6	;RP1=0, select bank0
  3477  074A  00A9               	movwf	??_find_best_solution
  3478  074B  3006               	movlw	6
  3479  074C  0229               	subwf	??_find_best_solution,w
  3480  074D  1803               	skipnc
  3481  074E  2F6A               	goto	l3312
  3482                           
  3483                           ;teris_16f886.c: 1128: {
  3484                           ;teris_16f886.c: 1133: if(temp_risk < temp_pre_risk)
  3485  074F  0838               	movf	find_best_solution@temp_pre_risk+1,w
  3486  0750  023E               	subwf	find_best_solution@temp_risk+1,w
  3487  0751  1D03               	skipz
  3488  0752  2F55               	goto	u4255
  3489  0753  0837               	movf	find_best_solution@temp_pre_risk,w
  3490  0754  023D               	subwf	find_best_solution@temp_risk,w
  3491  0755                     u4255:	
  3492  0755  1C03               	btfss	3,0
  3493  0756  2F82               	goto	l3326
  3494                           
  3495                           ;teris_16f886.c: 1145: else if(temp_risk == temp_pre_risk)
  3496                           
  3497                           ;teris_16f886.c: 1144: }
  3498                           
  3499                           ;teris_16f886.c: 1143: temp_pre_x = temp_x;
  3500                           
  3501                           ;teris_16f886.c: 1142: tem_pre_sub_index = tem_sub_index;
  3502                           
  3503                           ;teris_16f886.c: 1141: temp_pre_hole = temp_hole;
  3504                           
  3505                           ;teris_16f886.c: 1140: temp_pre_high = temp_high;
  3506                           
  3507                           ;teris_16f886.c: 1139: temp_pre_risk = temp_risk;
  3508                           
  3509                           ;teris_16f886.c: 1134: {
  3510                           ;teris_16f886.c: 1138: temp_pre_count = temp_count;
  3511  0757  0838               	movf	find_best_solution@temp_pre_risk+1,w
  3512  0758  063E               	xorwf	find_best_solution@temp_risk+1,w
  3513  0759  1D03               	skipz
  3514  075A  2F5D               	goto	u4265
  3515  075B  0837               	movf	find_best_solution@temp_pre_risk,w
  3516  075C  063D               	xorwf	find_best_solution@temp_risk,w
  3517  075D                     u4265:	
  3518  075D  1D03               	skipz
  3519  075E  2F9A               	goto	l3328
  3520                           
  3521                           ;teris_16f886.c: 1146: {
  3522                           ;teris_16f886.c: 1150: if(temp_high < temp_pre_high)
  3523  075F  083A               	movf	find_best_solution@temp_pre_high,w
  3524  0760  0240               	subwf	find_best_solution@temp_high,w
  3525  0761  1C03               	btfss	3,0
  3526  0762  2F82               	goto	l3326
  3527                           
  3528                           ;teris_16f886.c: 1162: else if(temp_high == temp_pre_high)
  3529                           
  3530                           ;teris_16f886.c: 1161: }
  3531                           
  3532                           ;teris_16f886.c: 1160: temp_pre_x = temp_x;
  3533                           
  3534                           ;teris_16f886.c: 1159: tem_pre_sub_index = tem_sub_index;
  3535                           
  3536                           ;teris_16f886.c: 1158: temp_pre_hole = temp_hole;
  3537                           
  3538                           ;teris_16f886.c: 1157: temp_pre_high = temp_high;
  3539                           
  3540                           ;teris_16f886.c: 1156: temp_pre_risk = temp_risk;
  3541                           
  3542                           ;teris_16f886.c: 1151: {
  3543                           ;teris_16f886.c: 1155: temp_pre_count = temp_count;
  3544  0763  0840               	movf	find_best_solution@temp_high,w
  3545  0764  063A               	xorwf	find_best_solution@temp_pre_high,w
  3546  0765  1D03               	skipz
  3547  0766  2F9A               	goto	l3328
  3548                           
  3549                           ;teris_16f886.c: 1163: {
  3550                           ;teris_16f886.c: 1167: if(temp_hole < temp_pre_hole)
  3551  0767  0839               	movf	find_best_solution@temp_pre_hole,w
  3552  0768  023F               	subwf	find_best_solution@temp_hole,w
  3553  0769  2F80               	goto	u4345
  3554  076A                     l3312:	
  3555                           ;teris_16f886.c: 1178: }
  3556                           ;teris_16f886.c: 1180: }
  3557                           ;teris_16f886.c: 1182: }
  3558                           ;teris_16f886.c: 1183: }
  3559                           
  3560                           ;teris_16f886.c: 1177: temp_pre_x = temp_x;
  3561                           
  3562                           ;teris_16f886.c: 1176: tem_pre_sub_index = tem_sub_index;
  3563                           
  3564                           ;teris_16f886.c: 1175: temp_pre_hole = temp_hole;
  3565                           
  3566                           ;teris_16f886.c: 1174: temp_pre_high = temp_high;
  3567                           
  3568                           ;teris_16f886.c: 1173: temp_pre_risk = temp_risk;
  3569                           
  3570                           ;teris_16f886.c: 1168: {
  3571                           ;teris_16f886.c: 1172: temp_pre_count = temp_count;
  3572                           
  3573                           
  3574                           ;teris_16f886.c: 1184: else
  3575                           ;teris_16f886.c: 1185: {
  3576                           ;teris_16f886.c: 1190: if(temp_high < temp_pre_high)
  3577  076A  083A               	movf	find_best_solution@temp_pre_high,w
  3578  076B  0240               	subwf	find_best_solution@temp_high,w
  3579  076C  1C03               	btfss	3,0
  3580  076D  2F82               	goto	l3326
  3581                           
  3582                           ;teris_16f886.c: 1202: else if(temp_high == temp_pre_high)
  3583                           
  3584                           ;teris_16f886.c: 1201: }
  3585                           
  3586                           ;teris_16f886.c: 1200: temp_pre_x = temp_x;
  3587                           
  3588                           ;teris_16f886.c: 1199: tem_pre_sub_index = tem_sub_index;
  3589                           
  3590                           ;teris_16f886.c: 1198: temp_pre_hole = temp_hole;
  3591                           
  3592                           ;teris_16f886.c: 1197: temp_pre_high = temp_high;
  3593                           
  3594                           ;teris_16f886.c: 1196: temp_pre_risk = temp_risk;
  3595                           
  3596                           ;teris_16f886.c: 1191: {
  3597                           ;teris_16f886.c: 1195: temp_pre_count = temp_count;
  3598  076E  0840               	movf	find_best_solution@temp_high,w
  3599  076F  063A               	xorwf	find_best_solution@temp_pre_high,w
  3600  0770  1D03               	skipz
  3601  0771  2F9A               	goto	l3328
  3602                           
  3603                           ;teris_16f886.c: 1203: {
  3604                           ;teris_16f886.c: 1207: if(temp_hole < temp_pre_hole)
  3605  0772  0839               	movf	find_best_solution@temp_pre_hole,w
  3606  0773  023F               	subwf	find_best_solution@temp_hole,w
  3607  0774  1C03               	btfss	3,0
  3608  0775  2F82               	goto	l3326
  3609                           
  3610                           ;teris_16f886.c: 1219: else if(temp_hole == temp_pre_hole)
  3611                           
  3612                           ;teris_16f886.c: 1218: }
  3613                           
  3614                           ;teris_16f886.c: 1217: temp_pre_x = temp_x;
  3615                           
  3616                           ;teris_16f886.c: 1216: tem_pre_sub_index = tem_sub_index;
  3617                           
  3618                           ;teris_16f886.c: 1215: temp_pre_hole = temp_hole;
  3619                           
  3620                           ;teris_16f886.c: 1214: temp_pre_high = temp_high;
  3621                           
  3622                           ;teris_16f886.c: 1213: temp_pre_risk = temp_risk;
  3623                           
  3624                           ;teris_16f886.c: 1208: {
  3625                           ;teris_16f886.c: 1212: temp_pre_count = temp_count;
  3626  0776  083F               	movf	find_best_solution@temp_hole,w
  3627  0777  0639               	xorwf	find_best_solution@temp_pre_hole,w
  3628  0778  1D03               	skipz
  3629  0779  2F9A               	goto	l3328
  3630                           
  3631                           ;teris_16f886.c: 1220: {
  3632                           ;teris_16f886.c: 1224: if(temp_risk < temp_pre_risk)
  3633  077A  0838               	movf	find_best_solution@temp_pre_risk+1,w
  3634  077B  023E               	subwf	find_best_solution@temp_risk+1,w
  3635  077C  1D03               	skipz
  3636  077D  2F80               	goto	u4345
  3637  077E  0837               	movf	find_best_solution@temp_pre_risk,w
  3638  077F  023D               	subwf	find_best_solution@temp_risk,w
  3639  0780                     u4345:	
  3640  0780  1803               	skipnc
  3641  0781  2F9A               	goto	l3328
  3642  0782                     l3326:	
  3643                           
  3644                           ;teris_16f886.c: 1225: {
  3645                           ;teris_16f886.c: 1229: temp_pre_count = temp_count;
  3646  0782  083B               	movf	find_best_solution@temp_count,w
  3647  0783  00A9               	movwf	??_find_best_solution
  3648  0784  0829               	movf	??_find_best_solution,w
  3649  0785  00B6               	movwf	find_best_solution@temp_pre_count
  3650                           
  3651                           ;teris_16f886.c: 1230: temp_pre_risk = temp_risk;
  3652  0786  083E               	movf	find_best_solution@temp_risk+1,w
  3653  0787  00B8               	movwf	find_best_solution@temp_pre_risk+1
  3654  0788  083D               	movf	find_best_solution@temp_risk,w
  3655  0789  00B7               	movwf	find_best_solution@temp_pre_risk
  3656                           
  3657                           ;teris_16f886.c: 1231: temp_pre_high = temp_high;
  3658  078A  0840               	movf	find_best_solution@temp_high,w
  3659  078B  00A9               	movwf	??_find_best_solution
  3660  078C  0829               	movf	??_find_best_solution,w
  3661  078D  00BA               	movwf	find_best_solution@temp_pre_high
  3662                           
  3663                           ;teris_16f886.c: 1232: temp_pre_hole = temp_hole;
  3664  078E  083F               	movf	find_best_solution@temp_hole,w
  3665  078F  00A9               	movwf	??_find_best_solution
  3666  0790  0829               	movf	??_find_best_solution,w
  3667  0791  00B9               	movwf	find_best_solution@temp_pre_hole
  3668                           
  3669                           ;teris_16f886.c: 1233: tem_pre_sub_index = tem_sub_index;
  3670  0792  083C               	movf	find_best_solution@tem_sub_index,w
  3671  0793  00A9               	movwf	??_find_best_solution
  3672  0794  0829               	movf	??_find_best_solution,w
  3673  0795  00B4               	movwf	find_best_solution@tem_pre_sub_index
  3674                           
  3675                           ;teris_16f886.c: 1234: temp_pre_x = temp_x;
  3676  0796  0841               	movf	find_best_solution@temp_x,w
  3677  0797  00A9               	movwf	??_find_best_solution
  3678  0798  0829               	movf	??_find_best_solution,w
  3679  0799  00B3               	movwf	find_best_solution@temp_pre_x
  3680  079A                     l3328:	
  3681  079A  3001               	movlw	1
  3682  079B  1283               	bcf	3,5	;RP0=0, select bank0
  3683  079C  1303               	bcf	3,6	;RP1=0, select bank0
  3684  079D  00A9               	movwf	??_find_best_solution
  3685  079E  0829               	movf	??_find_best_solution,w
  3686  079F  07C1               	addwf	find_best_solution@temp_x,f
  3687  07A0  2EBB               	goto	l3330
  3688  07A1                     l3332:	
  3689  07A1  3001               	movlw	1
  3690  07A2  00A9               	movwf	??_find_best_solution
  3691  07A3  0829               	movf	??_find_best_solution,w
  3692  07A4  07BC               	addwf	find_best_solution@tem_sub_index,f
  3693  07A5  2E50               	goto	l3334
  3694  07A6                     l3336:	
  3695                           
  3696                           ;teris_16f886.c: 1235: }
  3697                           ;teris_16f886.c: 1236: }
  3698                           ;teris_16f886.c: 1237: }
  3699                           ;teris_16f886.c: 1238: }
  3700                           ;teris_16f886.c: 1239: }
  3701                           ;teris_16f886.c: 1255: }
  3702                           ;teris_16f886.c: 1256: }
  3703                           ;teris_16f886.c: 1257: if(res == 1)
  3704  07A6  0332               	decf	find_best_solution@res,w
  3705  07A7  1D03               	btfss	3,2
  3706  07A8  2FBF               	goto	l3342
  3707                           
  3708                           ;teris_16f886.c: 1258: {
  3709                           ;teris_16f886.c: 1259: g_char_info[g_char_info_index].cur_index = tem_pre_sub_index;
  3710  07A9  0834               	movf	find_best_solution@tem_pre_sub_index,w
  3711  07AA  00A9               	movwf	??_find_best_solution
  3712  07AB  3003               	movlw	3
  3713  07AC  00AA               	movwf	??_find_best_solution+1
  3714  07AD  082A               	movf	??_find_best_solution+1,w
  3715  07AE  00F0               	movwf	___bmul@multiplicand
  3716  07AF  085C               	movf	_g_char_info_index,w
  3717  07B0  120A  158A  2399   	fcall	___bmul
  3718  07B3  3E01               	addlw	1
  3719  07B4  3EC0               	addlw	(low (_g_char_info| 0))& (0+255)
  3720  07B5  0084               	movwf	4
  3721  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  3722  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  3723  07B8  0829               	movf	??_find_best_solution,w
  3724  07B9  1383               	bcf	3,7	;select IRP bank1
  3725  07BA  0080               	movwf	0
  3726                           
  3727                           ;teris_16f886.c: 1260: cur_x = temp_pre_x;
  3728  07BB  0833               	movf	find_best_solution@temp_pre_x,w
  3729  07BC  00A9               	movwf	??_find_best_solution
  3730  07BD  0829               	movf	??_find_best_solution,w
  3731  07BE  00E1               	movwf	_cur_x
  3732  07BF                     l3342:	
  3733                           ;teris_16f886.c: 1278: else
  3734                           ;teris_16f886.c: 1279: {
  3735                           
  3736                           ;teris_16f886.c: 1277: }
  3737                           
  3738                           
  3739                           ;teris_16f886.c: 1283: }
  3740                           ;teris_16f886.c: 1284: return res;
  3741  07BF  0832               	movf	find_best_solution@res,w
  3742  07C0  0008               	return
  3743  07C1                     __end_of_find_best_solution:	
  3744                           
  3745                           	psect	text11
  3746  0C7B                     __ptext11:	
  3747 ;; *************** function _right_most *****************
  3748 ;; Defined at:
  3749 ;;		line 939 in file "teris_16f886.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  x               1    wreg     char 
  3752 ;;  matrix44        2   10[COMMON] PTR const struct .
  3753 ;;		 -> NULL(0), g_matrix44(384), 
  3754 ;;  matrix88        1   12[COMMON] PTR const struct .
  3755 ;;		 -> g_matrix88(64), 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  x               1    0[BANK0 ] char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      char 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         3       0       0       0       0
  3768 ;;      Locals:         0       1       0       0       0
  3769 ;;      Temps:          1       0       0       0       0
  3770 ;;      Totals:         4       1       0       0       0
  3771 ;;Total ram usage:        5 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    2
  3774 ;; This function calls:
  3775 ;;		_is_right_boundary
  3776 ;; This function is called by:
  3777 ;;		_find_best_solution
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function _right_most
  3783  0C7B                     _right_most:	
  3784                           
  3785                           ;incstack = 0
  3786                           ; Regs used in _right_most: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3787                           ;right_most@x stored from wreg
  3788  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  3789  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  3790  0C7D  00A0               	movwf	right_most@x
  3791  0C7E                     l381:	
  3792                           ;teris_16f886.c: 941: while(1)
  3793                           
  3794                           
  3795                           ;teris_16f886.c: 942: {
  3796                           ;teris_16f886.c: 943: if(is_right_boundary(x, matrix44, matrix88) == RIGHT_OVER_BOUNDARY
      +                          )
  3797  0C7E  087A               	movf	right_most@matrix44,w
  3798  0C7F  00F0               	movwf	is_right_boundary@matrix44
  3799  0C80  087B               	movf	right_most@matrix44+1,w
  3800  0C81  00F1               	movwf	is_right_boundary@matrix44+1
  3801  0C82  087C               	movf	right_most@matrix88,w
  3802  0C83  00FD               	movwf	??_right_most
  3803  0C84  087D               	movf	??_right_most,w
  3804  0C85  00F2               	movwf	is_right_boundary@matrix88
  3805  0C86  0820               	movf	right_most@x,w
  3806  0C87  120A  118A  20A3  120A  158A  	fcall	_is_right_boundary
  3807  0C8C  3A03               	xorlw	3
  3808  0C8D  1D03               	skipz
  3809  0C8E  2C94               	goto	l2802
  3810                           
  3811                           ;teris_16f886.c: 944: {
  3812                           ;teris_16f886.c: 948: return x - 1;
  3813  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  3814  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  3815  0C91  0820               	movf	right_most@x,w
  3816  0C92  3EFF               	addlw	-1
  3817  0C93  0008               	return
  3818  0C94                     l2802:	
  3819                           
  3820                           ;teris_16f886.c: 949: }
  3821                           ;teris_16f886.c: 950: x++;
  3822  0C94  3001               	movlw	1
  3823  0C95  00FD               	movwf	??_right_most
  3824  0C96  087D               	movf	??_right_most,w
  3825  0C97  1283               	bcf	3,5	;RP0=0, select bank0
  3826  0C98  1303               	bcf	3,6	;RP1=0, select bank0
  3827  0C99  07A0               	addwf	right_most@x,f
  3828  0C9A  2C7E               	goto	l381
  3829  0C9B                     __end_of_right_most:	
  3830                           
  3831                           	psect	text12
  3832  00A3                     __ptext12:	
  3833 ;; *************** function _is_right_boundary *****************
  3834 ;; Defined at:
  3835 ;;		line 790 in file "teris_16f886.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  x               1    wreg     char 
  3838 ;;  matrix44        2    0[COMMON] PTR const struct .
  3839 ;;		 -> NULL(0), g_matrix44(384), 
  3840 ;;  matrix88        1    2[COMMON] PTR const struct .
  3841 ;;		 -> g_matrix88(64), 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  x               1    7[COMMON] char 
  3844 ;;  col             1    9[COMMON] char 
  3845 ;;  row             1    8[COMMON] char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      unsigned char 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         3       0       0       0       0
  3856 ;;      Locals:         3       0       0       0       0
  3857 ;;      Temps:          4       0       0       0       0
  3858 ;;      Totals:        10       0       0       0       0
  3859 ;;Total ram usage:       10 bytes
  3860 ;; Hardware stack levels used:    2
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_right_most
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _is_right_boundary
  3870  00A3                     _is_right_boundary:	
  3871                           
  3872                           ;incstack = 0
  3873                           ; Regs used in _is_right_boundary: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3874                           ;is_right_boundary@x stored from wreg
  3875  00A3  00F7               	movwf	is_right_boundary@x
  3876                           
  3877                           ;teris_16f886.c: 792: for(int8_t row = 4 - 1; row >= 0; row--)
  3878  00A4  3003               	movlw	3
  3879  00A5  00F3               	movwf	??_is_right_boundary
  3880  00A6  0873               	movf	??_is_right_boundary,w
  3881  00A7  00F8               	movwf	is_right_boundary@row
  3882  00A8  1BF8               	btfsc	is_right_boundary@row,7
  3883  00A9  28F8               	goto	l2590
  3884  00AA                     l2568:	
  3885                           
  3886                           ;teris_16f886.c: 793: {
  3887                           ;teris_16f886.c: 794: for(int8_t col = 0; col < 4; col++)
  3888  00AA  01F9               	clrf	is_right_boundary@col
  3889  00AB  0879               	movf	is_right_boundary@col,w
  3890  00AC  3A80               	xorlw	128
  3891  00AD  3E7C               	addlw	-132
  3892  00AE  1803               	btfsc	3,0
  3893  00AF  28F2               	goto	l2586
  3894  00B0                     l2574:	
  3895                           
  3896                           ;teris_16f886.c: 795: {
  3897                           ;teris_16f886.c: 796: if(matrix44->data[row][col] == 1)
  3898  00B0  0878               	movf	is_right_boundary@row,w
  3899  00B1  00F3               	movwf	??_is_right_boundary
  3900  00B2  01F4               	clrf	??_is_right_boundary+1
  3901  00B3  1003               	clrc
  3902  00B4  0DF3               	rlf	??_is_right_boundary,f
  3903  00B5  0DF4               	rlf	??_is_right_boundary+1,f
  3904  00B6  1003               	clrc
  3905  00B7  0DF3               	rlf	??_is_right_boundary,f
  3906  00B8  0DF4               	rlf	??_is_right_boundary+1,f
  3907  00B9  0873               	movf	??_is_right_boundary,w
  3908  00BA  0770               	addwf	is_right_boundary@matrix44,w
  3909  00BB  00F5               	movwf	??_is_right_boundary+2
  3910  00BC  0874               	movf	??_is_right_boundary+1,w
  3911  00BD  1803               	skipnc
  3912  00BE  0A74               	incf	??_is_right_boundary+1,w
  3913  00BF  0771               	addwf	is_right_boundary@matrix44+1,w
  3914  00C0  00F6               	movwf	??_is_right_boundary+3
  3915  00C1  0879               	movf	is_right_boundary@col,w
  3916  00C2  0775               	addwf	??_is_right_boundary+2,w
  3917  00C3  0084               	movwf	4
  3918  00C4  0876               	movf	??_is_right_boundary+3,w
  3919  00C5  1803               	skipnc
  3920  00C6  0A76               	incf	??_is_right_boundary+3,w
  3921  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  3922  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  3923  00C9  00FF               	movwf	127
  3924  00CA  120A  158A  2000  120A  118A  	fcall	stringtab
  3925  00CF  3A01               	xorlw	1
  3926  00D0  1D03               	skipz
  3927  00D1  28E9               	goto	l2582
  3928                           
  3929                           ;teris_16f886.c: 797: {
  3930                           ;teris_16f886.c: 798: if(x + col > 8 - 1)
  3931  00D2  0877               	movf	is_right_boundary@x,w
  3932  00D3  0779               	addwf	is_right_boundary@col,w
  3933  00D4  00F3               	movwf	??_is_right_boundary
  3934  00D5  01F4               	clrf	??_is_right_boundary+1
  3935  00D6  1803               	skipnc
  3936  00D7  0AF4               	incf	??_is_right_boundary+1,f
  3937  00D8  1BF7               	btfsc	is_right_boundary@x,7
  3938  00D9  03F4               	decf	??_is_right_boundary+1,f
  3939  00DA  1BF9               	btfsc	is_right_boundary@col,7
  3940  00DB  03F4               	decf	??_is_right_boundary+1,f
  3941  00DC  0874               	movf	??_is_right_boundary+1,w
  3942  00DD  3A80               	xorlw	128
  3943  00DE  00FF               	movwf	127
  3944  00DF  3080               	movlw	128
  3945  00E0  027F               	subwf	127,w
  3946  00E1  1D03               	skipz
  3947  00E2  28E5               	goto	u2745
  3948  00E3  3008               	movlw	8
  3949  00E4  0273               	subwf	??_is_right_boundary,w
  3950  00E5                     u2745:	
  3951  00E5  1C03               	skipc
  3952  00E6  28E9               	goto	l2582
  3953                           
  3954                           ;teris_16f886.c: 799: {
  3955                           ;teris_16f886.c: 803: return RIGHT_OVER_BOUNDARY;
  3956  00E7  3003               	movlw	3
  3957  00E8  0008               	return
  3958  00E9                     l2582:	
  3959  00E9  3001               	movlw	1
  3960  00EA  00F3               	movwf	??_is_right_boundary
  3961  00EB  0873               	movf	??_is_right_boundary,w
  3962  00EC  07F9               	addwf	is_right_boundary@col,f
  3963  00ED  0879               	movf	is_right_boundary@col,w
  3964  00EE  3A80               	xorlw	128
  3965  00EF  3E7C               	addlw	-132
  3966  00F0  1C03               	skipc
  3967  00F1  28B0               	goto	l2574
  3968  00F2                     l2586:	
  3969  00F2  30FF               	movlw	255
  3970  00F3  00F3               	movwf	??_is_right_boundary
  3971  00F4  0873               	movf	??_is_right_boundary,w
  3972  00F5  07F8               	addwf	is_right_boundary@row,f
  3973  00F6  1FF8               	btfss	is_right_boundary@row,7
  3974  00F7  28AA               	goto	l2568
  3975  00F8                     l2590:	
  3976                           
  3977                           ;teris_16f886.c: 804: }
  3978                           ;teris_16f886.c: 805: }
  3979                           ;teris_16f886.c: 806: }
  3980                           ;teris_16f886.c: 807: }
  3981                           ;teris_16f886.c: 808: return OK;
  3982  00F8  3000               	movlw	0
  3983  00F9  0008               	return
  3984  00FA                     __end_of_is_right_boundary:	
  3985                           
  3986                           	psect	text13
  3987  00FA                     __ptext13:	
  3988 ;; *************** function _merge1 *****************
  3989 ;; Defined at:
  3990 ;;		line 868 in file "teris_16f886.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  x               1    wreg     char 
  3993 ;;  y               1    7[COMMON] char 
  3994 ;;  matrix44        2    8[COMMON] PTR const struct .
  3995 ;;		 -> NULL(0), g_matrix44(384), 
  3996 ;;  matrix88_in     1   10[COMMON] PTR const struct .
  3997 ;;		 -> g_matrix88(64), 
  3998 ;;  matrix88_out    1   11[COMMON] PTR struct .
  3999 ;;		 -> temp_matrix88(64), 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  x               1    6[BANK0 ] char 
  4002 ;;  col             1    8[BANK0 ] unsigned char 
  4003 ;;  row             1    7[BANK0 ] unsigned char 
  4004 ;;  len             2    4[BANK0 ] unsigned int 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4014 ;;      Params:         5       0       0       0       0
  4015 ;;      Locals:         0       5       0       0       0
  4016 ;;      Temps:          0       4       0       0       0
  4017 ;;      Totals:         5       9       0       0       0
  4018 ;;Total ram usage:       14 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    1
  4021 ;; This function calls:
  4022 ;;		_memcpy
  4023 ;; This function is called by:
  4024 ;;		_find_best_solution
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           
  4029                           ;psect for function _merge1
  4030  00FA                     _merge1:	
  4031                           
  4032                           ;incstack = 0
  4033                           ; Regs used in _merge1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4034                           ;merge1@x stored from wreg
  4035  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  4036  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  4037  00FC  00A6               	movwf	merge1@x
  4038                           
  4039                           ;teris_16f886.c: 873: register size_t len;
  4040                           ;teris_16f886.c: 875: len = sizeof(MATRIX88);
  4041  00FD  3040               	movlw	64
  4042  00FE  00A4               	movwf	merge1@len
  4043  00FF  3000               	movlw	0
  4044  0100  00A5               	movwf	merge1@len+1
  4045                           
  4046                           ;teris_16f886.c: 876: memcpy(matrix88_out, matrix88_in, len);
  4047  0101  087A               	movf	merge1@matrix88_in,w
  4048  0102  00A0               	movwf	??_merge1
  4049  0103  0820               	movf	??_merge1,w
  4050  0104  00F0               	movwf	memcpy@s1
  4051  0105  0825               	movf	merge1@len+1,w
  4052  0106  00F2               	movwf	memcpy@n+1
  4053  0107  0824               	movf	merge1@len,w
  4054  0108  00F1               	movwf	memcpy@n
  4055  0109  087B               	movf	merge1@matrix88_out,w
  4056  010A  120A  158A  24E2  120A  118A  	fcall	_memcpy
  4057                           
  4058                           ;teris_16f886.c: 878: for(uint8_t row = 0; row < 4; row++)
  4059  010F  1283               	bcf	3,5	;RP0=0, select bank0
  4060  0110  1303               	bcf	3,6	;RP1=0, select bank0
  4061  0111  01A7               	clrf	merge1@row
  4062  0112                     L3:	
  4063  0112  3004               	movlw	4
  4064  0113  0227               	subwf	merge1@row,w
  4065  0114  1803               	btfsc	3,0
  4066  0115  0008               	return
  4067                           
  4068                           ;teris_16f886.c: 879: {
  4069                           ;teris_16f886.c: 880: for(uint8_t col = 0; col < 4; col++)
  4070  0116  01A8               	clrf	merge1@col
  4071  0117  3004               	movlw	4
  4072  0118  0228               	subwf	merge1@col,w
  4073  0119  1803               	btfsc	3,0
  4074  011A  2959               	goto	l2738
  4075  011B                     l2730:	
  4076                           
  4077                           ;teris_16f886.c: 881: {
  4078                           ;teris_16f886.c: 882: if(matrix44->data[row][col] == 1)
  4079  011B  0827               	movf	merge1@row,w
  4080  011C  00A0               	movwf	??_merge1
  4081  011D  01A1               	clrf	??_merge1+1
  4082  011E  1003               	clrc
  4083  011F  0DA0               	rlf	??_merge1,f
  4084  0120  0DA1               	rlf	??_merge1+1,f
  4085  0121  1003               	clrc
  4086  0122  0DA0               	rlf	??_merge1,f
  4087  0123  0DA1               	rlf	??_merge1+1,f
  4088  0124  0820               	movf	??_merge1,w
  4089  0125  0778               	addwf	merge1@matrix44,w
  4090  0126  00A2               	movwf	??_merge1+2
  4091  0127  0821               	movf	??_merge1+1,w
  4092  0128  1803               	skipnc
  4093  0129  0A21               	incf	??_merge1+1,w
  4094  012A  0779               	addwf	merge1@matrix44+1,w
  4095  012B  00A3               	movwf	??_merge1+3
  4096  012C  0828               	movf	merge1@col,w
  4097  012D  0722               	addwf	??_merge1+2,w
  4098  012E  0084               	movwf	4
  4099  012F  0823               	movf	??_merge1+3,w
  4100  0130  1803               	skipnc
  4101  0131  0A23               	incf	??_merge1+3,w
  4102  0132  00FF               	movwf	127
  4103  0133  120A  158A  2000  120A  118A  	fcall	stringtab
  4104  0138  3A01               	xorlw	1
  4105  0139  1D03               	skipz
  4106  013A  2951               	goto	l2734
  4107                           
  4108                           ;teris_16f886.c: 883: {
  4109                           ;teris_16f886.c: 884: matrix88_out->data[y + row][x + col] = 1;
  4110  013B  0828               	movf	merge1@col,w
  4111  013C  0726               	addwf	merge1@x,w
  4112  013D  077B               	addwf	merge1@matrix88_out,w
  4113  013E  00A0               	movwf	??_merge1
  4114  013F  0827               	movf	merge1@row,w
  4115  0140  0777               	addwf	merge1@y,w
  4116  0141  00A1               	movwf	??_merge1+1
  4117  0142  3002               	movlw	2
  4118  0143                     u3095:	
  4119  0143  1003               	clrc
  4120  0144  0DA1               	rlf	??_merge1+1,f
  4121  0145  3EFF               	addlw	-1
  4122  0146  1D03               	skipz
  4123  0147  2943               	goto	u3095
  4124  0148  1003               	clrc
  4125  0149  0D21               	rlf	??_merge1+1,w
  4126  014A  0720               	addwf	??_merge1,w
  4127  014B  00A2               	movwf	??_merge1+2
  4128  014C  0822               	movf	??_merge1+2,w
  4129  014D  0084               	movwf	4
  4130  014E  1783               	bsf	3,7	;select IRP bank2
  4131  014F  0180               	clrf	0
  4132  0150  0A80               	incf	0,f
  4133  0151                     l2734:	
  4134  0151  3001               	movlw	1
  4135  0152  00A0               	movwf	??_merge1
  4136  0153  0820               	movf	??_merge1,w
  4137  0154  07A8               	addwf	merge1@col,f
  4138  0155  3004               	movlw	4
  4139  0156  0228               	subwf	merge1@col,w
  4140  0157  1C03               	skipc
  4141  0158  291B               	goto	l2730
  4142  0159                     l2738:	
  4143  0159  3001               	movlw	1
  4144  015A  00A0               	movwf	??_merge1
  4145  015B  0820               	movf	??_merge1,w
  4146  015C  07A7               	addwf	merge1@row,f
  4147  015D  2912               	goto	L3
  4148  015E                     __end_of_merge1:	
  4149                           
  4150                           	psect	text14
  4151  0C5B                     __ptext14:	
  4152 ;; *************** function _left_most *****************
  4153 ;; Defined at:
  4154 ;;		line 925 in file "teris_16f886.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;  x               1    wreg     char 
  4157 ;;  matrix44        2   11[COMMON] PTR const struct .
  4158 ;;		 -> NULL(0), g_matrix44(384), 
  4159 ;;  matrix88        1   13[COMMON] PTR const struct .
  4160 ;;		 -> g_matrix88(64), 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  x               1    1[BANK0 ] char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      char 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4172 ;;      Params:         3       0       0       0       0
  4173 ;;      Locals:         0       1       0       0       0
  4174 ;;      Temps:          0       1       0       0       0
  4175 ;;      Totals:         3       2       0       0       0
  4176 ;;Total ram usage:        5 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    2
  4179 ;; This function calls:
  4180 ;;		_is_left_boundary
  4181 ;; This function is called by:
  4182 ;;		_find_best_solution
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function _left_most
  4188  0C5B                     _left_most:	
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in _left_most: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4192                           ;left_most@x stored from wreg
  4193  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  4195  0C5D  00A1               	movwf	left_most@x
  4196  0C5E                     l374:	
  4197                           ;teris_16f886.c: 927: while(1)
  4198                           
  4199                           
  4200                           ;teris_16f886.c: 928: {
  4201                           ;teris_16f886.c: 929: if(is_left_boundary(x, matrix44, matrix88) == LEFT_OVER_BOUNDARY)
  4202  0C5E  087B               	movf	left_most@matrix44,w
  4203  0C5F  00F0               	movwf	is_left_boundary@matrix44
  4204  0C60  087C               	movf	left_most@matrix44+1,w
  4205  0C61  00F1               	movwf	is_left_boundary@matrix44+1
  4206  0C62  087D               	movf	left_most@matrix88,w
  4207  0C63  00A0               	movwf	??_left_most
  4208  0C64  0820               	movf	??_left_most,w
  4209  0C65  00F2               	movwf	is_left_boundary@matrix88
  4210  0C66  0821               	movf	left_most@x,w
  4211  0C67  120A  118A  204E  120A  158A  	fcall	_is_left_boundary
  4212  0C6C  3A02               	xorlw	2
  4213  0C6D  1D03               	skipz
  4214  0C6E  2C74               	goto	l2794
  4215                           
  4216                           ;teris_16f886.c: 930: {
  4217                           ;teris_16f886.c: 934: return x + 1;
  4218  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  4219  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  4220  0C71  0821               	movf	left_most@x,w
  4221  0C72  3E01               	addlw	1
  4222  0C73  0008               	return
  4223  0C74                     l2794:	
  4224                           
  4225                           ;teris_16f886.c: 935: }
  4226                           ;teris_16f886.c: 936: x--;
  4227  0C74  30FF               	movlw	255
  4228  0C75  1283               	bcf	3,5	;RP0=0, select bank0
  4229  0C76  1303               	bcf	3,6	;RP1=0, select bank0
  4230  0C77  00A0               	movwf	??_left_most
  4231  0C78  0820               	movf	??_left_most,w
  4232  0C79  07A1               	addwf	left_most@x,f
  4233  0C7A  2C5E               	goto	l374
  4234  0C7B                     __end_of_left_most:	
  4235                           
  4236                           	psect	text15
  4237  004E                     __ptext15:	
  4238 ;; *************** function _is_left_boundary *****************
  4239 ;; Defined at:
  4240 ;;		line 770 in file "teris_16f886.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  x               1    wreg     char 
  4243 ;;  matrix44        2    0[COMMON] PTR const struct .
  4244 ;;		 -> NULL(0), g_matrix44(384), 
  4245 ;;  matrix88        1    2[COMMON] PTR const struct .
  4246 ;;		 -> g_matrix88(64), 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  x               1    8[COMMON] char 
  4249 ;;  col             1   10[COMMON] char 
  4250 ;;  row             1    9[COMMON] char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      unsigned char 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4260 ;;      Params:         3       0       0       0       0
  4261 ;;      Locals:         3       0       0       0       0
  4262 ;;      Temps:          5       0       0       0       0
  4263 ;;      Totals:        11       0       0       0       0
  4264 ;;Total ram usage:       11 bytes
  4265 ;; Hardware stack levels used:    2
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_left_most
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           
  4274                           ;psect for function _is_left_boundary
  4275  004E                     _is_left_boundary:	
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _is_left_boundary: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4279                           ;is_left_boundary@x stored from wreg
  4280  004E  00F8               	movwf	is_left_boundary@x
  4281                           
  4282                           ;teris_16f886.c: 772: for(int8_t row = 4 - 1; row >= 0; row--)
  4283  004F  3003               	movlw	3
  4284  0050  00F3               	movwf	??_is_left_boundary
  4285  0051  0873               	movf	??_is_left_boundary,w
  4286  0052  00F9               	movwf	is_left_boundary@row
  4287  0053  1BF9               	btfsc	is_left_boundary@row,7
  4288  0054  28A1               	goto	l2558
  4289  0055                     l2536:	
  4290                           
  4291                           ;teris_16f886.c: 773: {
  4292                           ;teris_16f886.c: 774: for(int8_t col = 0; col < 4; col++)
  4293  0055  01FA               	clrf	is_left_boundary@col
  4294  0056  087A               	movf	is_left_boundary@col,w
  4295  0057  3A80               	xorlw	128
  4296  0058  3E7C               	addlw	-132
  4297  0059  1803               	btfsc	3,0
  4298  005A  289B               	goto	l2554
  4299  005B                     l2542:	
  4300                           
  4301                           ;teris_16f886.c: 775: {
  4302                           ;teris_16f886.c: 776: if(matrix44->data[row][col] == 1)
  4303  005B  0879               	movf	is_left_boundary@row,w
  4304  005C  00F3               	movwf	??_is_left_boundary
  4305  005D  01F4               	clrf	??_is_left_boundary+1
  4306  005E  1003               	clrc
  4307  005F  0DF3               	rlf	??_is_left_boundary,f
  4308  0060  0DF4               	rlf	??_is_left_boundary+1,f
  4309  0061  1003               	clrc
  4310  0062  0DF3               	rlf	??_is_left_boundary,f
  4311  0063  0DF4               	rlf	??_is_left_boundary+1,f
  4312  0064  0873               	movf	??_is_left_boundary,w
  4313  0065  0770               	addwf	is_left_boundary@matrix44,w
  4314  0066  00F5               	movwf	??_is_left_boundary+2
  4315  0067  0874               	movf	??_is_left_boundary+1,w
  4316  0068  1803               	skipnc
  4317  0069  0A74               	incf	??_is_left_boundary+1,w
  4318  006A  0771               	addwf	is_left_boundary@matrix44+1,w
  4319  006B  00F6               	movwf	??_is_left_boundary+3
  4320  006C  087A               	movf	is_left_boundary@col,w
  4321  006D  0775               	addwf	??_is_left_boundary+2,w
  4322  006E  0084               	movwf	4
  4323  006F  0876               	movf	??_is_left_boundary+3,w
  4324  0070  1803               	skipnc
  4325  0071  0A76               	incf	??_is_left_boundary+3,w
  4326  0072  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0073  1303               	bcf	3,6	;RP1=0, select bank0
  4328  0074  00FF               	movwf	127
  4329  0075  120A  158A  2000  120A  118A  	fcall	stringtab
  4330  007A  3A01               	xorlw	1
  4331  007B  1D03               	skipz
  4332  007C  2892               	goto	l2550
  4333                           
  4334                           ;teris_16f886.c: 777: {
  4335                           ;teris_16f886.c: 778: if( x + col < 0)
  4336  007D  087A               	movf	is_left_boundary@col,w
  4337  007E  00F3               	movwf	??_is_left_boundary
  4338  007F  01F4               	clrf	??_is_left_boundary+1
  4339  0080  1BF3               	btfsc	??_is_left_boundary,7
  4340  0081  03F4               	decf	??_is_left_boundary+1,f
  4341  0082  0878               	movf	is_left_boundary@x,w
  4342  0083  00F5               	movwf	??_is_left_boundary+2
  4343  0084  01F6               	clrf	??_is_left_boundary+3
  4344  0085  1BF5               	btfsc	??_is_left_boundary+2,7
  4345  0086  03F6               	decf	??_is_left_boundary+3,f
  4346  0087  0873               	movf	??_is_left_boundary,w
  4347  0088  0775               	addwf	??_is_left_boundary+2,w
  4348  0089  0876               	movf	??_is_left_boundary+3,w
  4349  008A  1803               	skipnc
  4350  008B  0A76               	incf	??_is_left_boundary+3,w
  4351  008C  0774               	addwf	??_is_left_boundary+1,w
  4352  008D  00F7               	movwf	??_is_left_boundary+4
  4353  008E  1FF7               	btfss	??_is_left_boundary+4,7
  4354  008F  2892               	goto	l2550
  4355                           
  4356                           ;teris_16f886.c: 779: {
  4357                           ;teris_16f886.c: 783: return LEFT_OVER_BOUNDARY;
  4358  0090  3002               	movlw	2
  4359  0091  0008               	return
  4360  0092                     l2550:	
  4361  0092  3001               	movlw	1
  4362  0093  00F3               	movwf	??_is_left_boundary
  4363  0094  0873               	movf	??_is_left_boundary,w
  4364  0095  07FA               	addwf	is_left_boundary@col,f
  4365  0096  087A               	movf	is_left_boundary@col,w
  4366  0097  3A80               	xorlw	128
  4367  0098  3E7C               	addlw	-132
  4368  0099  1C03               	skipc
  4369  009A  285B               	goto	l2542
  4370  009B                     l2554:	
  4371  009B  30FF               	movlw	255
  4372  009C  00F3               	movwf	??_is_left_boundary
  4373  009D  0873               	movf	??_is_left_boundary,w
  4374  009E  07F9               	addwf	is_left_boundary@row,f
  4375  009F  1FF9               	btfss	is_left_boundary@row,7
  4376  00A0  2855               	goto	l2536
  4377  00A1                     l2558:	
  4378                           
  4379                           ;teris_16f886.c: 784: }
  4380                           ;teris_16f886.c: 785: }
  4381                           ;teris_16f886.c: 786: }
  4382                           ;teris_16f886.c: 787: }
  4383                           ;teris_16f886.c: 788: return OK;
  4384  00A1  3000               	movlw	0
  4385  00A2  0008               	return
  4386  00A3                     __end_of_is_left_boundary:	
  4387                           
  4388                           	psect	text16
  4389  0387                     __ptext16:	
  4390 ;; *************** function _is_valid *****************
  4391 ;; Defined at:
  4392 ;;		line 726 in file "teris_16f886.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  x               1    wreg     char 
  4395 ;;  y               1    0[COMMON] char 
  4396 ;;  matrix44        2    1[COMMON] PTR const struct .
  4397 ;;		 -> NULL(0), g_matrix44(384), 
  4398 ;;  matrix88        1    3[COMMON] PTR const struct .
  4399 ;;		 -> g_matrix88(64), 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  x               1    8[COMMON] char 
  4402 ;;  col             1   10[COMMON] char 
  4403 ;;  row             1    9[COMMON] char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      unsigned char 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4413 ;;      Params:         4       0       0       0       0
  4414 ;;      Locals:         3       0       0       0       0
  4415 ;;      Temps:          4       0       0       0       0
  4416 ;;      Totals:        11       0       0       0       0
  4417 ;;Total ram usage:       11 bytes
  4418 ;; Hardware stack levels used:    2
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_find_best_solution
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           
  4427                           ;psect for function _is_valid
  4428  0387                     _is_valid:	
  4429                           
  4430                           ;incstack = 0
  4431                           ; Regs used in _is_valid: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4432                           ;is_valid@x stored from wreg
  4433  0387  00F8               	movwf	is_valid@x
  4434                           
  4435                           ;teris_16f886.c: 731: for(int8_t row = 4 - 1; row >= 0; row--)
  4436  0388  3003               	movlw	3
  4437  0389  00F4               	movwf	??_is_valid
  4438  038A  0874               	movf	??_is_valid,w
  4439  038B  00F9               	movwf	is_valid@row
  4440  038C  1BF9               	btfsc	is_valid@row,7
  4441  038D  2C18               	goto	l2674
  4442  038E                     l2638:	
  4443                           
  4444                           ;teris_16f886.c: 732: {
  4445                           ;teris_16f886.c: 733: for(int8_t col = 0; col < 4; col++)
  4446  038E  01FA               	clrf	is_valid@col
  4447  038F  087A               	movf	is_valid@col,w
  4448  0390  3A80               	xorlw	128
  4449  0391  3E7C               	addlw	-132
  4450  0392  1803               	btfsc	3,0
  4451  0393  2C12               	goto	l2670
  4452  0394                     l2644:	
  4453                           
  4454                           ;teris_16f886.c: 734: {
  4455                           ;teris_16f886.c: 735: if(matrix44->data[row][col] == 1)
  4456  0394  0879               	movf	is_valid@row,w
  4457  0395  00F4               	movwf	??_is_valid
  4458  0396  01F5               	clrf	??_is_valid+1
  4459  0397  1003               	clrc
  4460  0398  0DF4               	rlf	??_is_valid,f
  4461  0399  0DF5               	rlf	??_is_valid+1,f
  4462  039A  1003               	clrc
  4463  039B  0DF4               	rlf	??_is_valid,f
  4464  039C  0DF5               	rlf	??_is_valid+1,f
  4465  039D  0874               	movf	??_is_valid,w
  4466  039E  0771               	addwf	is_valid@matrix44,w
  4467  039F  00F6               	movwf	??_is_valid+2
  4468  03A0  0875               	movf	??_is_valid+1,w
  4469  03A1  1803               	skipnc
  4470  03A2  0A75               	incf	??_is_valid+1,w
  4471  03A3  0772               	addwf	is_valid@matrix44+1,w
  4472  03A4  00F7               	movwf	??_is_valid+3
  4473  03A5  087A               	movf	is_valid@col,w
  4474  03A6  0776               	addwf	??_is_valid+2,w
  4475  03A7  0084               	movwf	4
  4476  03A8  0877               	movf	??_is_valid+3,w
  4477  03A9  1803               	skipnc
  4478  03AA  0A77               	incf	??_is_valid+3,w
  4479  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  4480  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  4481  03AD  00FF               	movwf	127
  4482  03AE  120A  158A  2000  120A  118A  	fcall	stringtab
  4483  03B3  3A01               	xorlw	1
  4484  03B4  1D03               	skipz
  4485  03B5  2C09               	goto	l2666
  4486                           
  4487                           ;teris_16f886.c: 736: {
  4488                           ;teris_16f886.c: 737: if(matrix88->data[y + row][x + col] == 1)
  4489  03B6  087A               	movf	is_valid@col,w
  4490  03B7  0778               	addwf	is_valid@x,w
  4491  03B8  0773               	addwf	is_valid@matrix88,w
  4492  03B9  00F4               	movwf	??_is_valid
  4493  03BA  0879               	movf	is_valid@row,w
  4494  03BB  0770               	addwf	is_valid@y,w
  4495  03BC  00F5               	movwf	??_is_valid+1
  4496  03BD  3002               	movlw	2
  4497  03BE                     u2875:	
  4498  03BE  1003               	clrc
  4499  03BF  0DF5               	rlf	??_is_valid+1,f
  4500  03C0  3EFF               	addlw	-1
  4501  03C1  1D03               	skipz
  4502  03C2  2BBE               	goto	u2875
  4503  03C3  1003               	clrc
  4504  03C4  0D75               	rlf	??_is_valid+1,w
  4505  03C5  0774               	addwf	??_is_valid,w
  4506  03C6  00F6               	movwf	??_is_valid+2
  4507  03C7  0876               	movf	??_is_valid+2,w
  4508  03C8  0084               	movwf	4
  4509  03C9  1783               	bsf	3,7	;select IRP bank2
  4510  03CA  0300               	decf	0,w
  4511  03CB  1D03               	btfss	3,2
  4512  03CC  2BCF               	goto	l2652
  4513                           
  4514                           ;teris_16f886.c: 738: {
  4515                           ;teris_16f886.c: 743: return 0;
  4516  03CD  3000               	movlw	0
  4517  03CE  0008               	return
  4518  03CF                     l2652:	
  4519                           
  4520                           ;teris_16f886.c: 744: }
  4521                           ;teris_16f886.c: 746: if(( x + col < 0) || (x + col >= 8))
  4522  03CF  0878               	movf	is_valid@x,w
  4523  03D0  077A               	addwf	is_valid@col,w
  4524  03D1  00F4               	movwf	??_is_valid
  4525  03D2  01F5               	clrf	??_is_valid+1
  4526  03D3  1803               	skipnc
  4527  03D4  0AF5               	incf	??_is_valid+1,f
  4528  03D5  1BF8               	btfsc	is_valid@x,7
  4529  03D6  03F5               	decf	??_is_valid+1,f
  4530  03D7  1BFA               	btfsc	is_valid@col,7
  4531  03D8  03F5               	decf	??_is_valid+1,f
  4532  03D9  1BF5               	btfsc	??_is_valid+1,7
  4533  03DA  2BF0               	goto	l2656
  4534  03DB  0878               	movf	is_valid@x,w
  4535  03DC  077A               	addwf	is_valid@col,w
  4536  03DD  00F4               	movwf	??_is_valid
  4537  03DE  01F5               	clrf	??_is_valid+1
  4538  03DF  1803               	skipnc
  4539  03E0  0AF5               	incf	??_is_valid+1,f
  4540  03E1  1BF8               	btfsc	is_valid@x,7
  4541  03E2  03F5               	decf	??_is_valid+1,f
  4542  03E3  1BFA               	btfsc	is_valid@col,7
  4543  03E4  03F5               	decf	??_is_valid+1,f
  4544  03E5  0875               	movf	??_is_valid+1,w
  4545  03E6  3A80               	xorlw	128
  4546  03E7  00FF               	movwf	127
  4547  03E8  3080               	movlw	128
  4548  03E9  027F               	subwf	127,w
  4549  03EA  1D03               	skipz
  4550  03EB  2BEE               	goto	u2925
  4551  03EC  3008               	movlw	8
  4552  03ED  0274               	subwf	??_is_valid,w
  4553  03EE                     u2925:	
  4554  03EE  1C03               	skipc
  4555  03EF  2BF2               	goto	l2660
  4556  03F0                     l2656:	
  4557                           
  4558                           ;teris_16f886.c: 747: {
  4559                           ;teris_16f886.c: 752: return 0;
  4560  03F0  3000               	movlw	0
  4561  03F1  0008               	return
  4562  03F2                     l2660:	
  4563                           
  4564                           ;teris_16f886.c: 753: }
  4565                           ;teris_16f886.c: 754: if((y + row) > (8 - 1))
  4566  03F2  0870               	movf	is_valid@y,w
  4567  03F3  0779               	addwf	is_valid@row,w
  4568  03F4  00F4               	movwf	??_is_valid
  4569  03F5  01F5               	clrf	??_is_valid+1
  4570  03F6  1803               	skipnc
  4571  03F7  0AF5               	incf	??_is_valid+1,f
  4572  03F8  1BF0               	btfsc	is_valid@y,7
  4573  03F9  03F5               	decf	??_is_valid+1,f
  4574  03FA  1BF9               	btfsc	is_valid@row,7
  4575  03FB  03F5               	decf	??_is_valid+1,f
  4576  03FC  0875               	movf	??_is_valid+1,w
  4577  03FD  3A80               	xorlw	128
  4578  03FE  00FF               	movwf	127
  4579  03FF  3080               	movlw	128
  4580  0400  027F               	subwf	127,w
  4581  0401  1D03               	skipz
  4582  0402  2C05               	goto	u2945
  4583  0403  3008               	movlw	8
  4584  0404  0274               	subwf	??_is_valid,w
  4585  0405                     u2945:	
  4586  0405  1C03               	skipc
  4587  0406  2C09               	goto	l2666
  4588                           
  4589                           ;teris_16f886.c: 755: {
  4590                           ;teris_16f886.c: 760: return 0;
  4591  0407  3000               	movlw	0
  4592  0408  0008               	return
  4593  0409                     l2666:	
  4594  0409  3001               	movlw	1
  4595  040A  00F4               	movwf	??_is_valid
  4596  040B  0874               	movf	??_is_valid,w
  4597  040C  07FA               	addwf	is_valid@col,f
  4598  040D  087A               	movf	is_valid@col,w
  4599  040E  3A80               	xorlw	128
  4600  040F  3E7C               	addlw	-132
  4601  0410  1C03               	skipc
  4602  0411  2B94               	goto	l2644
  4603  0412                     l2670:	
  4604  0412  30FF               	movlw	255
  4605  0413  00F4               	movwf	??_is_valid
  4606  0414  0874               	movf	??_is_valid,w
  4607  0415  07F9               	addwf	is_valid@row,f
  4608  0416  1FF9               	btfss	is_valid@row,7
  4609  0417  2B8E               	goto	l2638
  4610  0418                     l2674:	
  4611                           
  4612                           ;teris_16f886.c: 761: }
  4613                           ;teris_16f886.c: 762: }
  4614                           ;teris_16f886.c: 763: }
  4615                           ;teris_16f886.c: 764: }
  4616                           ;teris_16f886.c: 768: return 1;
  4617  0418  3001               	movlw	1
  4618  0419  0008               	return
  4619  041A                     __end_of_is_valid:	
  4620                           
  4621                           	psect	text17
  4622  041A                     __ptext17:	
  4623 ;; *************** function _get_holes_after_merge *****************
  4624 ;; Defined at:
  4625 ;;		line 988 in file "teris_16f886.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  matrix          1    wreg     PTR struct .
  4628 ;;		 -> temp_matrix88(64), 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  matrix          1    9[COMMON] PTR struct .
  4631 ;;		 -> temp_matrix88(64), 
  4632 ;;  row             1   11[COMMON] char 
  4633 ;;  col             1   10[COMMON] char 
  4634 ;;  start           1    8[COMMON] char 
  4635 ;;  stop            1    7[COMMON] char 
  4636 ;;  num_hole        1    6[COMMON] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      unsigned char 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4646 ;;      Params:         0       0       0       0       0
  4647 ;;      Locals:         6       0       0       0       0
  4648 ;;      Temps:          6       0       0       0       0
  4649 ;;      Totals:        12       0       0       0       0
  4650 ;;Total ram usage:       12 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_find_best_solution
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           
  4660                           ;psect for function _get_holes_after_merge
  4661  041A                     _get_holes_after_merge:	
  4662                           
  4663                           ;incstack = 0
  4664                           ; Regs used in _get_holes_after_merge: [wreg-fsr0h+status,2+status,0+btemp+1]
  4665                           ;get_holes_after_merge@matrix stored from wreg
  4666  041A  00F9               	movwf	get_holes_after_merge@matrix
  4667                           
  4668                           ;teris_16f886.c: 990: int8_t start = -1;
  4669  041B  01F8               	clrf	get_holes_after_merge@start
  4670  041C  03F8               	decf	get_holes_after_merge@start,f
  4671                           
  4672                           ;teris_16f886.c: 991: int8_t stop = -1;
  4673  041D  01F7               	clrf	get_holes_after_merge@stop
  4674  041E  03F7               	decf	get_holes_after_merge@stop,f
  4675                           
  4676                           ;teris_16f886.c: 992: uint8_t num_hole = 0;
  4677  041F  01F6               	clrf	get_holes_after_merge@num_hole
  4678                           
  4679                           ;teris_16f886.c: 993: for(int8_t col = 0; col < 8; col++)
  4680  0420  01FA               	clrf	get_holes_after_merge@col
  4681  0421  087A               	movf	get_holes_after_merge@col,w
  4682  0422  3A80               	xorlw	128
  4683  0423  3E78               	addlw	-136
  4684  0424  1803               	btfsc	3,0
  4685  0425  2D25               	goto	l2920
  4686  0426                     l2858:	
  4687                           
  4688                           ;teris_16f886.c: 994: {
  4689                           ;teris_16f886.c: 995: start = stop = -1;
  4690  0426  30FF               	movlw	255
  4691  0427  00F7               	movwf	get_holes_after_merge@stop
  4692  0428  00F0               	movwf	??_get_holes_after_merge
  4693  0429  0870               	movf	??_get_holes_after_merge,w
  4694  042A  00F8               	movwf	get_holes_after_merge@start
  4695                           
  4696                           ;teris_16f886.c: 996: for(int8_t row = 0; row < 8; row++)
  4697  042B  01FB               	clrf	get_holes_after_merge@row
  4698  042C  087B               	movf	get_holes_after_merge@row,w
  4699  042D  3A80               	xorlw	128
  4700  042E  3E78               	addlw	-136
  4701  042F  1803               	btfsc	3,0
  4702  0430  2CF3               	goto	l405
  4703  0431                     l2866:	
  4704                           
  4705                           ;teris_16f886.c: 997: {
  4706                           ;teris_16f886.c: 998: if(col == 0)
  4707  0431  087A               	movf	get_holes_after_merge@col,w
  4708  0432  1D03               	btfss	3,2
  4709  0433  2C56               	goto	l2876
  4710                           
  4711                           ;teris_16f886.c: 999: {
  4712                           ;teris_16f886.c: 1000: if((matrix->data[row][col] == 0) && (matrix->data[row][col + 1] =
      +                          = 1))
  4713  0434  087B               	movf	get_holes_after_merge@row,w
  4714  0435  00F0               	movwf	??_get_holes_after_merge
  4715  0436  3002               	movlw	2
  4716  0437                     u3365:	
  4717  0437  1003               	clrc
  4718  0438  0DF0               	rlf	??_get_holes_after_merge,f
  4719  0439  3EFF               	addlw	-1
  4720  043A  1D03               	skipz
  4721  043B  2C37               	goto	u3365
  4722  043C  1003               	clrc
  4723  043D  0D70               	rlf	??_get_holes_after_merge,w
  4724  043E  0779               	addwf	get_holes_after_merge@matrix,w
  4725  043F  00F1               	movwf	??_get_holes_after_merge+1
  4726  0440  087A               	movf	get_holes_after_merge@col,w
  4727  0441  0771               	addwf	??_get_holes_after_merge+1,w
  4728  0442  00F2               	movwf	??_get_holes_after_merge+2
  4729  0443  0872               	movf	??_get_holes_after_merge+2,w
  4730  0444  0084               	movwf	4
  4731  0445  1783               	bsf	3,7	;select IRP bank2
  4732  0446  0800               	movf	0,w
  4733  0447  1D03               	btfss	3,2
  4734  0448  2CC2               	goto	l2896
  4735  0449  087A               	movf	get_holes_after_merge@col,w
  4736  044A  3E01               	addlw	1
  4737  044B  0779               	addwf	get_holes_after_merge@matrix,w
  4738  044C  00F0               	movwf	??_get_holes_after_merge
  4739  044D  087B               	movf	get_holes_after_merge@row,w
  4740  044E  00F1               	movwf	??_get_holes_after_merge+1
  4741  044F  3002               	movlw	2
  4742  0450                     u3385:	
  4743  0450  1003               	clrc
  4744  0451  0DF1               	rlf	??_get_holes_after_merge+1,f
  4745  0452  3EFF               	addlw	-1
  4746  0453  1D03               	skipz
  4747  0454  2C50               	goto	u3385
  4748  0455  2CB2               	goto	L5
  4749  0456                     l2876:	
  4750                           ;teris_16f886.c: 1005: }
  4751                           ;teris_16f886.c: 1006: }
  4752                           ;teris_16f886.c: 1007: }
  4753                           
  4754                           ;teris_16f886.c: 1003: {
  4755                           ;teris_16f886.c: 1004: start = row;
  4756                           
  4757                           ;teris_16f886.c: 1001: {
  4758                           ;teris_16f886.c: 1002: if(start == -1)
  4759                           
  4760                           
  4761                           ;teris_16f886.c: 1008: else if(col == 8 - 1)
  4762  0456  3007               	movlw	7
  4763  0457  067A               	xorwf	get_holes_after_merge@col,w
  4764  0458  1D03               	btfss	3,2
  4765  0459  2C7C               	goto	l2886
  4766                           
  4767                           ;teris_16f886.c: 1009: {
  4768                           ;teris_16f886.c: 1010: if((matrix->data[row][col] == 0) && (matrix->data[row][col - 1] =
      +                          = 1))
  4769  045A  087B               	movf	get_holes_after_merge@row,w
  4770  045B  00F0               	movwf	??_get_holes_after_merge
  4771  045C  3002               	movlw	2
  4772  045D                     u3425:	
  4773  045D  1003               	clrc
  4774  045E  0DF0               	rlf	??_get_holes_after_merge,f
  4775  045F  3EFF               	addlw	-1
  4776  0460  1D03               	skipz
  4777  0461  2C5D               	goto	u3425
  4778  0462  1003               	clrc
  4779  0463  0D70               	rlf	??_get_holes_after_merge,w
  4780  0464  0779               	addwf	get_holes_after_merge@matrix,w
  4781  0465  00F1               	movwf	??_get_holes_after_merge+1
  4782  0466  087A               	movf	get_holes_after_merge@col,w
  4783  0467  0771               	addwf	??_get_holes_after_merge+1,w
  4784  0468  00F2               	movwf	??_get_holes_after_merge+2
  4785  0469  0872               	movf	??_get_holes_after_merge+2,w
  4786  046A  0084               	movwf	4
  4787  046B  1783               	bsf	3,7	;select IRP bank2
  4788  046C  0800               	movf	0,w
  4789  046D  1D03               	btfss	3,2
  4790  046E  2CC2               	goto	l2896
  4791  046F  087A               	movf	get_holes_after_merge@col,w
  4792  0470  3EFF               	addlw	255
  4793  0471  0779               	addwf	get_holes_after_merge@matrix,w
  4794  0472  00F0               	movwf	??_get_holes_after_merge
  4795  0473  087B               	movf	get_holes_after_merge@row,w
  4796  0474  00F1               	movwf	??_get_holes_after_merge+1
  4797  0475  3002               	movlw	2
  4798  0476                     u3445:	
  4799  0476  1003               	clrc
  4800  0477  0DF1               	rlf	??_get_holes_after_merge+1,f
  4801  0478  3EFF               	addlw	-1
  4802  0479  1D03               	skipz
  4803  047A  2C76               	goto	u3445
  4804  047B  2CB2               	goto	L5
  4805  047C                     l2886:	
  4806                           ;teris_16f886.c: 1015: }
  4807                           ;teris_16f886.c: 1016: }
  4808                           ;teris_16f886.c: 1017: }
  4809                           
  4810                           ;teris_16f886.c: 1013: {
  4811                           ;teris_16f886.c: 1014: start = row;
  4812                           
  4813                           ;teris_16f886.c: 1011: {
  4814                           ;teris_16f886.c: 1012: if(start == -1)
  4815                           
  4816                           
  4817                           ;teris_16f886.c: 1018: else
  4818                           ;teris_16f886.c: 1019: {
  4819                           ;teris_16f886.c: 1020: if((matrix->data[row][col] == 0) && (matrix->data[row][col - 1] =
      +                          = 1) && (matrix->data[row][col + 1] == 1))
  4820  047C  087B               	movf	get_holes_after_merge@row,w
  4821  047D  00F0               	movwf	??_get_holes_after_merge
  4822  047E  3002               	movlw	2
  4823  047F                     u3475:	
  4824  047F  1003               	clrc
  4825  0480  0DF0               	rlf	??_get_holes_after_merge,f
  4826  0481  3EFF               	addlw	-1
  4827  0482  1D03               	skipz
  4828  0483  2C7F               	goto	u3475
  4829  0484  1003               	clrc
  4830  0485  0D70               	rlf	??_get_holes_after_merge,w
  4831  0486  0779               	addwf	get_holes_after_merge@matrix,w
  4832  0487  00F1               	movwf	??_get_holes_after_merge+1
  4833  0488  087A               	movf	get_holes_after_merge@col,w
  4834  0489  0771               	addwf	??_get_holes_after_merge+1,w
  4835  048A  00F2               	movwf	??_get_holes_after_merge+2
  4836  048B  0872               	movf	??_get_holes_after_merge+2,w
  4837  048C  0084               	movwf	4
  4838  048D  1783               	bsf	3,7	;select IRP bank2
  4839  048E  0800               	movf	0,w
  4840  048F  1D03               	btfss	3,2
  4841  0490  2CC2               	goto	l2896
  4842  0491  087A               	movf	get_holes_after_merge@col,w
  4843  0492  3EFF               	addlw	255
  4844  0493  0779               	addwf	get_holes_after_merge@matrix,w
  4845  0494  00F0               	movwf	??_get_holes_after_merge
  4846  0495  087B               	movf	get_holes_after_merge@row,w
  4847  0496  00F1               	movwf	??_get_holes_after_merge+1
  4848  0497  3002               	movlw	2
  4849  0498                     u3495:	
  4850  0498  1003               	clrc
  4851  0499  0DF1               	rlf	??_get_holes_after_merge+1,f
  4852  049A  3EFF               	addlw	-1
  4853  049B  1D03               	skipz
  4854  049C  2C98               	goto	u3495
  4855  049D  1003               	clrc
  4856  049E  0D71               	rlf	??_get_holes_after_merge+1,w
  4857  049F  0770               	addwf	??_get_holes_after_merge,w
  4858  04A0  00F2               	movwf	??_get_holes_after_merge+2
  4859  04A1  0872               	movf	??_get_holes_after_merge+2,w
  4860  04A2  0084               	movwf	4
  4861  04A3  0300               	decf	0,w
  4862  04A4  1D03               	btfss	3,2
  4863  04A5  2CC2               	goto	l2896
  4864  04A6  087A               	movf	get_holes_after_merge@col,w
  4865  04A7  3E01               	addlw	1
  4866  04A8  0779               	addwf	get_holes_after_merge@matrix,w
  4867  04A9  00F0               	movwf	??_get_holes_after_merge
  4868  04AA  087B               	movf	get_holes_after_merge@row,w
  4869  04AB  00F1               	movwf	??_get_holes_after_merge+1
  4870  04AC  3002               	movlw	2
  4871  04AD                     u3515:	
  4872  04AD  1003               	clrc
  4873  04AE  0DF1               	rlf	??_get_holes_after_merge+1,f
  4874  04AF  3EFF               	addlw	-1
  4875  04B0  1D03               	skipz
  4876  04B1  2CAD               	goto	u3515
  4877  04B2                     L5:	
  4878  04B2  1003               	clrc
  4879  04B3  0D71               	rlf	??_get_holes_after_merge+1,w
  4880  04B4  0770               	addwf	??_get_holes_after_merge,w
  4881  04B5  00F2               	movwf	??_get_holes_after_merge+2
  4882  04B6  0872               	movf	??_get_holes_after_merge+2,w
  4883  04B7  0084               	movwf	4
  4884  04B8  0300               	decf	0,w
  4885  04B9  1D03               	btfss	3,2
  4886  04BA  2CC2               	goto	l2896
  4887                           
  4888                           ;teris_16f886.c: 1021: {
  4889                           ;teris_16f886.c: 1022: if(start == -1)
  4890  04BB  0A78               	incf	get_holes_after_merge@start,w
  4891  04BC  1D03               	btfss	3,2
  4892  04BD  2CC2               	goto	l2896
  4893                           
  4894                           ;teris_16f886.c: 1023: {
  4895                           ;teris_16f886.c: 1024: start = row;
  4896  04BE  087B               	movf	get_holes_after_merge@row,w
  4897  04BF  00F0               	movwf	??_get_holes_after_merge
  4898  04C0  0870               	movf	??_get_holes_after_merge,w
  4899  04C1  00F8               	movwf	get_holes_after_merge@start
  4900  04C2                     l2896:	
  4901                           
  4902                           ;teris_16f886.c: 1025: }
  4903                           ;teris_16f886.c: 1026: }
  4904                           ;teris_16f886.c: 1027: }
  4905                           ;teris_16f886.c: 1028: if(start >= 0)
  4906  04C2  1BF8               	btfsc	get_holes_after_merge@start,7
  4907  04C3  2CEA               	goto	l416
  4908                           
  4909                           ;teris_16f886.c: 1029: {
  4910                           ;teris_16f886.c: 1030: if(row == 8 - 1)
  4911  04C4  3007               	movlw	7
  4912  04C5  067B               	xorwf	get_holes_after_merge@row,w
  4913  04C6  1D03               	btfss	3,2
  4914  04C7  2CCD               	goto	l2904
  4915                           
  4916                           ;teris_16f886.c: 1031: {
  4917                           ;teris_16f886.c: 1032: if(stop == -1)
  4918  04C8  0A77               	incf	get_holes_after_merge@stop,w
  4919  04C9  1D03               	btfss	3,2
  4920  04CA  2CEA               	goto	l416
  4921                           
  4922                           ;teris_16f886.c: 1033: {
  4923                           ;teris_16f886.c: 1034: stop = 8;
  4924  04CB  3008               	movlw	8
  4925  04CC  2CE7               	goto	L4
  4926  04CD                     l2904:	
  4927                           ;teris_16f886.c: 1035: }
  4928                           ;teris_16f886.c: 1036: }
  4929                           
  4930                           
  4931                           ;teris_16f886.c: 1037: else if(matrix->data[row + 1][col] == 1)
  4932  04CD  087B               	movf	get_holes_after_merge@row,w
  4933  04CE  00F0               	movwf	??_get_holes_after_merge
  4934  04CF  3002               	movlw	2
  4935  04D0                     u3575:	
  4936  04D0  1003               	clrc
  4937  04D1  0DF0               	rlf	??_get_holes_after_merge,f
  4938  04D2  3EFF               	addlw	-1
  4939  04D3  1D03               	skipz
  4940  04D4  2CD0               	goto	u3575
  4941  04D5  1003               	clrc
  4942  04D6  0D70               	rlf	??_get_holes_after_merge,w
  4943  04D7  3E08               	addlw	8
  4944  04D8  0779               	addwf	get_holes_after_merge@matrix,w
  4945  04D9  00F1               	movwf	??_get_holes_after_merge+1
  4946  04DA  087A               	movf	get_holes_after_merge@col,w
  4947  04DB  0771               	addwf	??_get_holes_after_merge+1,w
  4948  04DC  00F2               	movwf	??_get_holes_after_merge+2
  4949  04DD  0872               	movf	??_get_holes_after_merge+2,w
  4950  04DE  0084               	movwf	4
  4951  04DF  0300               	decf	0,w
  4952  04E0  1D03               	btfss	3,2
  4953  04E1  2CEA               	goto	l416
  4954                           
  4955                           ;teris_16f886.c: 1038: {
  4956                           ;teris_16f886.c: 1039: if(stop == -1)
  4957  04E2  0A77               	incf	get_holes_after_merge@stop,w
  4958  04E3  1D03               	btfss	3,2
  4959  04E4  2CEA               	goto	l416
  4960                           
  4961                           ;teris_16f886.c: 1040: {
  4962                           ;teris_16f886.c: 1041: stop = row + 1;
  4963  04E5  087B               	movf	get_holes_after_merge@row,w
  4964  04E6  3E01               	addlw	1
  4965  04E7                     L4:	
  4966  04E7  00F0               	movwf	??_get_holes_after_merge
  4967  04E8  0870               	movf	??_get_holes_after_merge,w
  4968  04E9  00F7               	movwf	get_holes_after_merge@stop
  4969  04EA                     l416:	
  4970  04EA  3001               	movlw	1
  4971  04EB  00F0               	movwf	??_get_holes_after_merge
  4972  04EC  0870               	movf	??_get_holes_after_merge,w
  4973  04ED  07FB               	addwf	get_holes_after_merge@row,f
  4974  04EE  087B               	movf	get_holes_after_merge@row,w
  4975  04EF  3A80               	xorlw	128
  4976  04F0  3E78               	addlw	-136
  4977  04F1  1C03               	skipc
  4978  04F2  2C31               	goto	l2866
  4979  04F3                     l405:	
  4980                           
  4981                           ;teris_16f886.c: 1042: }
  4982                           ;teris_16f886.c: 1043: }
  4983                           ;teris_16f886.c: 1044: }
  4984                           ;teris_16f886.c: 1046: }
  4985                           ;teris_16f886.c: 1047: if((start >= 0) && (stop >= 0) && (stop - start >= 3))
  4986  04F3  1FF8               	btfss	get_holes_after_merge@start,7
  4987  04F4  1BF7               	btfsc	get_holes_after_merge@stop,7
  4988  04F5  2D1C               	goto	l422
  4989  04F6  0878               	movf	get_holes_after_merge@start,w
  4990  04F7  00F0               	movwf	??_get_holes_after_merge
  4991  04F8  01F1               	clrf	??_get_holes_after_merge+1
  4992  04F9  1BF0               	btfsc	??_get_holes_after_merge,7
  4993  04FA  03F1               	decf	??_get_holes_after_merge+1,f
  4994  04FB  09F0               	comf	??_get_holes_after_merge,f
  4995  04FC  09F1               	comf	??_get_holes_after_merge+1,f
  4996  04FD  0AF0               	incf	??_get_holes_after_merge,f
  4997  04FE  1903               	skipnz
  4998  04FF  0AF1               	incf	??_get_holes_after_merge+1,f
  4999  0500  0877               	movf	get_holes_after_merge@stop,w
  5000  0501  00F2               	movwf	??_get_holes_after_merge+2
  5001  0502  01F3               	clrf	??_get_holes_after_merge+3
  5002  0503  1BF2               	btfsc	??_get_holes_after_merge+2,7
  5003  0504  03F3               	decf	??_get_holes_after_merge+3,f
  5004  0505  0870               	movf	??_get_holes_after_merge,w
  5005  0506  0772               	addwf	??_get_holes_after_merge+2,w
  5006  0507  00F4               	movwf	??_get_holes_after_merge+4
  5007  0508  0871               	movf	??_get_holes_after_merge+1,w
  5008  0509  1803               	skipnc
  5009  050A  0A71               	incf	??_get_holes_after_merge+1,w
  5010  050B  0773               	addwf	??_get_holes_after_merge+3,w
  5011  050C  00F5               	movwf	??_get_holes_after_merge+5
  5012  050D  0875               	movf	??_get_holes_after_merge+5,w
  5013  050E  3A80               	xorlw	128
  5014  050F  00FF               	movwf	127
  5015  0510  3080               	movlw	128
  5016  0511  027F               	subwf	127,w
  5017  0512  1D03               	skipz
  5018  0513  2D16               	goto	u3635
  5019  0514  3003               	movlw	3
  5020  0515  0274               	subwf	??_get_holes_after_merge+4,w
  5021  0516                     u3635:	
  5022  0516  1C03               	skipc
  5023  0517  2D1C               	goto	l422
  5024                           
  5025                           ;teris_16f886.c: 1048: {
  5026                           ;teris_16f886.c: 1054: num_hole++;
  5027  0518  3001               	movlw	1
  5028  0519  00F0               	movwf	??_get_holes_after_merge
  5029  051A  0870               	movf	??_get_holes_after_merge,w
  5030  051B  07F6               	addwf	get_holes_after_merge@num_hole,f
  5031  051C                     l422:	
  5032  051C  3001               	movlw	1
  5033  051D  00F0               	movwf	??_get_holes_after_merge
  5034  051E  0870               	movf	??_get_holes_after_merge,w
  5035  051F  07FA               	addwf	get_holes_after_merge@col,f
  5036  0520  087A               	movf	get_holes_after_merge@col,w
  5037  0521  3A80               	xorlw	128
  5038  0522  3E78               	addlw	-136
  5039  0523  1C03               	skipc
  5040  0524  2C26               	goto	l2858
  5041  0525                     l2920:	
  5042                           
  5043                           ;teris_16f886.c: 1055: }
  5044                           ;teris_16f886.c: 1056: }
  5045                           ;teris_16f886.c: 1060: return num_hole;
  5046  0525  0876               	movf	get_holes_after_merge@num_hole,w
  5047  0526  0008               	return
  5048  0527                     __end_of_get_holes_after_merge:	
  5049                           
  5050                           	psect	text18
  5051  0DF2                     __ptext18:	
  5052 ;; *************** function _get_high_after_merge *****************
  5053 ;; Defined at:
  5054 ;;		line 967 in file "teris_16f886.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  y               1    wreg     char 
  5057 ;;  matrix          2    0[COMMON] PTR struct .
  5058 ;;		 -> NULL(0), g_matrix44(384), 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  y               1    6[COMMON] char 
  5061 ;;  col             1    7[COMMON] char 
  5062 ;;  row             1    8[COMMON] char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      unsigned char 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5072 ;;      Params:         2       0       0       0       0
  5073 ;;      Locals:         3       0       0       0       0
  5074 ;;      Temps:          4       0       0       0       0
  5075 ;;      Totals:         9       0       0       0       0
  5076 ;;Total ram usage:        9 bytes
  5077 ;; Hardware stack levels used:    2
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_find_best_solution
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           
  5086                           ;psect for function _get_high_after_merge
  5087  0DF2                     _get_high_after_merge:	
  5088                           
  5089                           ;incstack = 0
  5090                           ; Regs used in _get_high_after_merge: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5091                           ;get_high_after_merge@y stored from wreg
  5092  0DF2  00F6               	movwf	get_high_after_merge@y
  5093                           
  5094                           ;teris_16f886.c: 972: for(int8_t row = 0; row < 4; row++)
  5095  0DF3  01F8               	clrf	get_high_after_merge@row
  5096  0DF4                     L6:	
  5097  0DF4  0878               	movf	get_high_after_merge@row,w
  5098  0DF5  3A80               	xorlw	128
  5099  0DF6  3E7C               	addlw	-132
  5100  0DF7  1803               	btfsc	3,0
  5101  0DF8  0008               	return
  5102                           
  5103                           ;teris_16f886.c: 973: {
  5104                           ;teris_16f886.c: 974: for(int8_t col = 0; col < 4; col++)
  5105  0DF9  01F7               	clrf	get_high_after_merge@col
  5106  0DFA  0877               	movf	get_high_after_merge@col,w
  5107  0DFB  3A80               	xorlw	128
  5108  0DFC  3E7C               	addlw	-132
  5109  0DFD  1803               	btfsc	3,0
  5110  0DFE  2E30               	goto	l2846
  5111  0DFF                     l2836:	
  5112                           
  5113                           ;teris_16f886.c: 975: {
  5114                           ;teris_16f886.c: 976: if(matrix->data[row][col] == 1)
  5115  0DFF  0878               	movf	get_high_after_merge@row,w
  5116  0E00  00F2               	movwf	??_get_high_after_merge
  5117  0E01  01F3               	clrf	??_get_high_after_merge+1
  5118  0E02  1003               	clrc
  5119  0E03  0DF2               	rlf	??_get_high_after_merge,f
  5120  0E04  0DF3               	rlf	??_get_high_after_merge+1,f
  5121  0E05  1003               	clrc
  5122  0E06  0DF2               	rlf	??_get_high_after_merge,f
  5123  0E07  0DF3               	rlf	??_get_high_after_merge+1,f
  5124  0E08  0872               	movf	??_get_high_after_merge,w
  5125  0E09  0770               	addwf	get_high_after_merge@matrix,w
  5126  0E0A  00F4               	movwf	??_get_high_after_merge+2
  5127  0E0B  0873               	movf	??_get_high_after_merge+1,w
  5128  0E0C  1803               	skipnc
  5129  0E0D  0A73               	incf	??_get_high_after_merge+1,w
  5130  0E0E  0771               	addwf	get_high_after_merge@matrix+1,w
  5131  0E0F  00F5               	movwf	??_get_high_after_merge+3
  5132  0E10  0877               	movf	get_high_after_merge@col,w
  5133  0E11  0774               	addwf	??_get_high_after_merge+2,w
  5134  0E12  0084               	movwf	4
  5135  0E13  0875               	movf	??_get_high_after_merge+3,w
  5136  0E14  1803               	skipnc
  5137  0E15  0A75               	incf	??_get_high_after_merge+3,w
  5138  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  5140  0E18  00FF               	movwf	127
  5141  0E19  120A  158A  2000  120A  158A  	fcall	stringtab
  5142  0E1E  3A01               	xorlw	1
  5143  0E1F  1D03               	skipz
  5144  0E20  2E27               	goto	l2842
  5145                           
  5146                           ;teris_16f886.c: 977: {
  5147                           ;teris_16f886.c: 983: return (uint8_t)(8 - y - row);
  5148  0E21  0878               	movf	get_high_after_merge@row,w
  5149  0E22  0776               	addwf	get_high_after_merge@y,w
  5150  0E23  3AFF               	xorlw	255
  5151  0E24  3E01               	addlw	1
  5152  0E25  3E08               	addlw	8
  5153  0E26  0008               	return
  5154  0E27                     l2842:	
  5155  0E27  3001               	movlw	1
  5156  0E28  00F2               	movwf	??_get_high_after_merge
  5157  0E29  0872               	movf	??_get_high_after_merge,w
  5158  0E2A  07F7               	addwf	get_high_after_merge@col,f
  5159  0E2B  0877               	movf	get_high_after_merge@col,w
  5160  0E2C  3A80               	xorlw	128
  5161  0E2D  3E7C               	addlw	-132
  5162  0E2E  1C03               	skipc
  5163  0E2F  2DFF               	goto	l2836
  5164  0E30                     l2846:	
  5165  0E30  3001               	movlw	1
  5166  0E31  00F2               	movwf	??_get_high_after_merge
  5167  0E32  0872               	movf	??_get_high_after_merge,w
  5168  0E33  07F8               	addwf	get_high_after_merge@row,f
  5169  0E34  2DF4               	goto	L6
  5170  0E35                     __end_of_get_high_after_merge:	
  5171                           
  5172                           	psect	text19
  5173  0C9B                     __ptext19:	
  5174 ;; *************** function _get_high *****************
  5175 ;; Defined at:
  5176 ;;		line 953 in file "teris_16f886.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  matrix          1    wreg     PTR struct .
  5179 ;;		 -> g_matrix88(64), 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  matrix          1    7[COMMON] PTR struct .
  5182 ;;		 -> g_matrix88(64), 
  5183 ;;  row             1    8[COMMON] char 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      unsigned char 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5193 ;;      Params:         0       0       0       0       0
  5194 ;;      Locals:         2       0       0       0       0
  5195 ;;      Temps:          1       0       0       0       0
  5196 ;;      Totals:         3       0       0       0       0
  5197 ;;Total ram usage:        3 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    1
  5200 ;; This function calls:
  5201 ;;		_is_row_empty
  5202 ;; This function is called by:
  5203 ;;		_find_best_solution
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           
  5208                           ;psect for function _get_high
  5209  0C9B                     _get_high:	
  5210                           
  5211                           ;incstack = 0
  5212                           ; Regs used in _get_high: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5213                           ;get_high@matrix stored from wreg
  5214  0C9B  00F7               	movwf	get_high@matrix
  5215                           
  5216                           ;teris_16f886.c: 955: for(int8_t row = 8 - 1; row >= 0; row--)
  5217  0C9C  3007               	movlw	7
  5218  0C9D  00F6               	movwf	??_get_high
  5219  0C9E  0876               	movf	??_get_high,w
  5220  0C9F  00F8               	movwf	get_high@row
  5221  0CA0  1BF8               	btfsc	get_high@row,7
  5222  0CA1  2CBB               	goto	l2820
  5223  0CA2                     l2810:	
  5224                           
  5225                           ;teris_16f886.c: 956: {
  5226                           ;teris_16f886.c: 957: if(is_row_empty(matrix, row) == 1)
  5227  0CA2  0878               	movf	get_high@row,w
  5228  0CA3  00F6               	movwf	??_get_high
  5229  0CA4  0876               	movf	??_get_high,w
  5230  0CA5  00F0               	movwf	is_row_empty@row
  5231  0CA6  0877               	movf	get_high@matrix,w
  5232  0CA7  120A  158A  252F  120A  158A  	fcall	_is_row_empty
  5233  0CAC  3A01               	xorlw	1
  5234  0CAD  1D03               	skipz
  5235  0CAE  2CB5               	goto	l2816
  5236                           
  5237                           ;teris_16f886.c: 958: {
  5238                           ;teris_16f886.c: 962: return (uint8_t)(8 - row - 1);
  5239  0CAF  0878               	movf	get_high@row,w
  5240  0CB0  3E01               	addlw	1
  5241  0CB1  3AFF               	xorlw	255
  5242  0CB2  3E01               	addlw	1
  5243  0CB3  3E08               	addlw	8
  5244  0CB4  0008               	return
  5245  0CB5                     l2816:	
  5246  0CB5  30FF               	movlw	255
  5247  0CB6  00F6               	movwf	??_get_high
  5248  0CB7  0876               	movf	??_get_high,w
  5249  0CB8  07F8               	addwf	get_high@row,f
  5250  0CB9  1FF8               	btfss	get_high@row,7
  5251  0CBA  2CA2               	goto	l2810
  5252  0CBB                     l2820:	
  5253                           
  5254                           ;teris_16f886.c: 963: }
  5255                           ;teris_16f886.c: 964: }
  5256                           ;teris_16f886.c: 965: return 8;
  5257  0CBB  3008               	movlw	8
  5258  0CBC  0008               	return
  5259  0CBD                     __end_of_get_high:	
  5260                           
  5261                           	psect	text20
  5262  0D2F                     __ptext20:	
  5263 ;; *************** function _is_row_empty *****************
  5264 ;; Defined at:
  5265 ;;		line 669 in file "teris_16f886.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  matrix          1    wreg     PTR const struct .
  5268 ;;		 -> g_matrix88(64), 
  5269 ;;  row             1    0[COMMON] unsigned char 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  matrix          1    4[COMMON] PTR const struct .
  5272 ;;		 -> g_matrix88(64), 
  5273 ;;  col             1    5[COMMON] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      unsigned char 
  5276 ;; Registers used:
  5277 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5283 ;;      Params:         1       0       0       0       0
  5284 ;;      Locals:         2       0       0       0       0
  5285 ;;      Temps:          3       0       0       0       0
  5286 ;;      Totals:         6       0       0       0       0
  5287 ;;Total ram usage:        6 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; This function calls:
  5290 ;;		Nothing
  5291 ;; This function is called by:
  5292 ;;		_get_high
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _is_row_empty
  5298  0D2F                     _is_row_empty:	
  5299                           
  5300                           ;incstack = 0
  5301                           ; Regs used in _is_row_empty: [wreg-fsr0h+status,2+status,0]
  5302                           ;is_row_empty@matrix stored from wreg
  5303  0D2F  00F4               	movwf	is_row_empty@matrix
  5304                           
  5305                           ;teris_16f886.c: 671: for(uint8_t col = 0; col < 8; col++)
  5306  0D30  01F5               	clrf	is_row_empty@col
  5307  0D31  3008               	movlw	8
  5308  0D32  0275               	subwf	is_row_empty@col,w
  5309  0D33  1803               	btfsc	3,0
  5310  0D34  2D54               	goto	l2526
  5311  0D35                     l2516:	
  5312                           
  5313                           ;teris_16f886.c: 672: {
  5314                           ;teris_16f886.c: 673: if(matrix->data[row][col] == 1)
  5315  0D35  0870               	movf	is_row_empty@row,w
  5316  0D36  00F1               	movwf	??_is_row_empty
  5317  0D37  3002               	movlw	2
  5318  0D38                     u2615:	
  5319  0D38  1003               	clrc
  5320  0D39  0DF1               	rlf	??_is_row_empty,f
  5321  0D3A  3EFF               	addlw	-1
  5322  0D3B  1D03               	skipz
  5323  0D3C  2D38               	goto	u2615
  5324  0D3D  1003               	clrc
  5325  0D3E  0D71               	rlf	??_is_row_empty,w
  5326  0D3F  0774               	addwf	is_row_empty@matrix,w
  5327  0D40  00F2               	movwf	??_is_row_empty+1
  5328  0D41  0875               	movf	is_row_empty@col,w
  5329  0D42  0772               	addwf	??_is_row_empty+1,w
  5330  0D43  00F3               	movwf	??_is_row_empty+2
  5331  0D44  0873               	movf	??_is_row_empty+2,w
  5332  0D45  0084               	movwf	4
  5333  0D46  1783               	bsf	3,7	;select IRP bank2
  5334  0D47  0300               	decf	0,w
  5335  0D48  1D03               	btfss	3,2
  5336  0D49  2D4C               	goto	l2522
  5337                           
  5338                           ;teris_16f886.c: 674: {
  5339                           ;teris_16f886.c: 675: return 0;
  5340  0D4A  3000               	movlw	0
  5341  0D4B  0008               	return
  5342  0D4C                     l2522:	
  5343  0D4C  3001               	movlw	1
  5344  0D4D  00F1               	movwf	??_is_row_empty
  5345  0D4E  0871               	movf	??_is_row_empty,w
  5346  0D4F  07F5               	addwf	is_row_empty@col,f
  5347  0D50  3008               	movlw	8
  5348  0D51  0275               	subwf	is_row_empty@col,w
  5349  0D52  1C03               	skipc
  5350  0D53  2D35               	goto	l2516
  5351  0D54                     l2526:	
  5352                           
  5353                           ;teris_16f886.c: 676: }
  5354                           ;teris_16f886.c: 677: }
  5355                           ;teris_16f886.c: 678: return 1;
  5356  0D54  3001               	movlw	1
  5357  0D55  0008               	return
  5358  0D56                     __end_of_is_row_empty:	
  5359                           
  5360                           	psect	text21
  5361  0313                     __ptext21:	
  5362 ;; *************** function _fall_off *****************
  5363 ;; Defined at:
  5364 ;;		line 810 in file "teris_16f886.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  x               1    wreg     char 
  5367 ;;  y               1    0[COMMON] char 
  5368 ;;  matrix44        2    1[COMMON] PTR const struct .
  5369 ;;		 -> NULL(0), g_matrix44(384), 
  5370 ;;  matrix88        1    3[COMMON] PTR const struct .
  5371 ;;		 -> g_matrix88(64), 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  x               1    8[COMMON] char 
  5374 ;;  col             1    9[COMMON] char 
  5375 ;;  row             1   10[COMMON] char 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  1    wreg      unsigned char 
  5378 ;; Registers used:
  5379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5385 ;;      Params:         4       0       0       0       0
  5386 ;;      Locals:         3       0       0       0       0
  5387 ;;      Temps:          4       0       0       0       0
  5388 ;;      Totals:        11       0       0       0       0
  5389 ;;Total ram usage:       11 bytes
  5390 ;; Hardware stack levels used:    2
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_find_best_solution
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           
  5399                           ;psect for function _fall_off
  5400  0313                     _fall_off:	
  5401                           
  5402                           ;incstack = 0
  5403                           ; Regs used in _fall_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5404                           ;fall_off@x stored from wreg
  5405  0313  00F8               	movwf	fall_off@x
  5406  0314                     l323:	
  5407                           ;teris_16f886.c: 812: while(1)
  5408                           
  5409                           
  5410                           ;teris_16f886.c: 813: {
  5411                           ;teris_16f886.c: 814: for(int8_t row = 4 - 1; row >= 0; row--)
  5412  0314  3003               	movlw	3
  5413  0315  00F4               	movwf	??_fall_off
  5414  0316  0874               	movf	??_fall_off,w
  5415  0317  00FA               	movwf	fall_off@row
  5416  0318  1BFA               	btfsc	fall_off@row,7
  5417  0319  2B82               	goto	l2712
  5418  031A                     l2684:	
  5419                           
  5420                           ;teris_16f886.c: 815: {
  5421                           ;teris_16f886.c: 816: for(int8_t col = 0; col < 4; col++)
  5422  031A  01F9               	clrf	fall_off@col
  5423  031B  0879               	movf	fall_off@col,w
  5424  031C  3A80               	xorlw	128
  5425  031D  3E7C               	addlw	-132
  5426  031E  1803               	btfsc	3,0
  5427  031F  2B7C               	goto	l2708
  5428  0320                     l2690:	
  5429                           
  5430                           ;teris_16f886.c: 817: {
  5431                           ;teris_16f886.c: 818: if(matrix44->data[row][col] == 1)
  5432  0320  087A               	movf	fall_off@row,w
  5433  0321  00F4               	movwf	??_fall_off
  5434  0322  01F5               	clrf	??_fall_off+1
  5435  0323  1003               	clrc
  5436  0324  0DF4               	rlf	??_fall_off,f
  5437  0325  0DF5               	rlf	??_fall_off+1,f
  5438  0326  1003               	clrc
  5439  0327  0DF4               	rlf	??_fall_off,f
  5440  0328  0DF5               	rlf	??_fall_off+1,f
  5441  0329  0874               	movf	??_fall_off,w
  5442  032A  0771               	addwf	fall_off@matrix44,w
  5443  032B  00F6               	movwf	??_fall_off+2
  5444  032C  0875               	movf	??_fall_off+1,w
  5445  032D  1803               	skipnc
  5446  032E  0A75               	incf	??_fall_off+1,w
  5447  032F  0772               	addwf	fall_off@matrix44+1,w
  5448  0330  00F7               	movwf	??_fall_off+3
  5449  0331  0879               	movf	fall_off@col,w
  5450  0332  0776               	addwf	??_fall_off+2,w
  5451  0333  0084               	movwf	4
  5452  0334  0877               	movf	??_fall_off+3,w
  5453  0335  1803               	skipnc
  5454  0336  0A77               	incf	??_fall_off+3,w
  5455  0337  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0338  1303               	bcf	3,6	;RP1=0, select bank0
  5457  0339  00FF               	movwf	127
  5458  033A  120A  158A  2000  120A  118A  	fcall	stringtab
  5459  033F  3A01               	xorlw	1
  5460  0340  1D03               	skipz
  5461  0341  2B73               	goto	l2704
  5462                           
  5463                           ;teris_16f886.c: 819: {
  5464                           ;teris_16f886.c: 820: if(matrix88->data[y + row + 1][x + col] == 1)
  5465  0342  0879               	movf	fall_off@col,w
  5466  0343  0778               	addwf	fall_off@x,w
  5467  0344  0773               	addwf	fall_off@matrix88,w
  5468  0345  00F4               	movwf	??_fall_off
  5469  0346  087A               	movf	fall_off@row,w
  5470  0347  0770               	addwf	fall_off@y,w
  5471  0348  00F5               	movwf	??_fall_off+1
  5472  0349  3002               	movlw	2
  5473  034A                     u3005:	
  5474  034A  1003               	clrc
  5475  034B  0DF5               	rlf	??_fall_off+1,f
  5476  034C  3EFF               	addlw	-1
  5477  034D  1D03               	skipz
  5478  034E  2B4A               	goto	u3005
  5479  034F  1003               	clrc
  5480  0350  0D75               	rlf	??_fall_off+1,w
  5481  0351  3E08               	addlw	8
  5482  0352  0774               	addwf	??_fall_off,w
  5483  0353  00F6               	movwf	??_fall_off+2
  5484  0354  0876               	movf	??_fall_off+2,w
  5485  0355  0084               	movwf	4
  5486  0356  1783               	bsf	3,7	;select IRP bank2
  5487  0357  0300               	decf	0,w
  5488  0358  1D03               	btfss	3,2
  5489  0359  2B5C               	goto	l2698
  5490                           
  5491                           ;teris_16f886.c: 821: {
  5492                           ;teris_16f886.c: 826: return y;
  5493  035A  0870               	movf	fall_off@y,w
  5494  035B  0008               	return
  5495  035C                     l2698:	
  5496                           
  5497                           ;teris_16f886.c: 827: }
  5498                           ;teris_16f886.c: 828: if((y + row) >= (8 - 1))
  5499  035C  0870               	movf	fall_off@y,w
  5500  035D  077A               	addwf	fall_off@row,w
  5501  035E  00F4               	movwf	??_fall_off
  5502  035F  01F5               	clrf	??_fall_off+1
  5503  0360  1803               	skipnc
  5504  0361  0AF5               	incf	??_fall_off+1,f
  5505  0362  1BF0               	btfsc	fall_off@y,7
  5506  0363  03F5               	decf	??_fall_off+1,f
  5507  0364  1BFA               	btfsc	fall_off@row,7
  5508  0365  03F5               	decf	??_fall_off+1,f
  5509  0366  0875               	movf	??_fall_off+1,w
  5510  0367  3A80               	xorlw	128
  5511  0368  00FF               	movwf	127
  5512  0369  3080               	movlw	128
  5513  036A  027F               	subwf	127,w
  5514  036B  1D03               	skipz
  5515  036C  2B6F               	goto	u3035
  5516  036D  3007               	movlw	7
  5517  036E  0274               	subwf	??_fall_off,w
  5518  036F                     u3035:	
  5519  036F  1C03               	skipc
  5520  0370  2B73               	goto	l2704
  5521                           
  5522                           ;teris_16f886.c: 829: {
  5523                           ;teris_16f886.c: 834: return y;
  5524  0371  0870               	movf	fall_off@y,w
  5525  0372  0008               	return
  5526  0373                     l2704:	
  5527  0373  3001               	movlw	1
  5528  0374  00F4               	movwf	??_fall_off
  5529  0375  0874               	movf	??_fall_off,w
  5530  0376  07F9               	addwf	fall_off@col,f
  5531  0377  0879               	movf	fall_off@col,w
  5532  0378  3A80               	xorlw	128
  5533  0379  3E7C               	addlw	-132
  5534  037A  1C03               	skipc
  5535  037B  2B20               	goto	l2690
  5536  037C                     l2708:	
  5537  037C  30FF               	movlw	255
  5538  037D  00F4               	movwf	??_fall_off
  5539  037E  0874               	movf	??_fall_off,w
  5540  037F  07FA               	addwf	fall_off@row,f
  5541  0380  1FFA               	btfss	fall_off@row,7
  5542  0381  2B1A               	goto	l2684
  5543  0382                     l2712:	
  5544                           
  5545                           ;teris_16f886.c: 835: }
  5546                           ;teris_16f886.c: 836: }
  5547                           ;teris_16f886.c: 837: }
  5548                           ;teris_16f886.c: 838: }
  5549                           ;teris_16f886.c: 839: y++;
  5550  0382  3001               	movlw	1
  5551  0383  00F4               	movwf	??_fall_off
  5552  0384  0874               	movf	??_fall_off,w
  5553  0385  07F0               	addwf	fall_off@y,f
  5554  0386  2B14               	goto	l323
  5555  0387                     __end_of_fall_off:	
  5556                           
  5557                           	psect	text22
  5558  02A1                     __ptext22:	
  5559 ;; *************** function _evaluate *****************
  5560 ;; Defined at:
  5561 ;;		line 889 in file "teris_16f886.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  matrix          1    wreg     PTR const struct .
  5564 ;;		 -> temp_matrix88(64), 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  matrix          1    9[COMMON] PTR const struct .
  5567 ;;		 -> temp_matrix88(64), 
  5568 ;;  row             1   11[COMMON] char 
  5569 ;;  col             1   10[COMMON] unsigned char 
  5570 ;;  risk            2    6[COMMON] unsigned int 
  5571 ;;  full            1    8[COMMON] unsigned char 
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  2    0[COMMON] unsigned int 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5581 ;;      Params:         2       0       0       0       0
  5582 ;;      Locals:         6       0       0       0       0
  5583 ;;      Temps:          4       0       0       0       0
  5584 ;;      Totals:        12       0       0       0       0
  5585 ;;Total ram usage:       12 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_find_best_solution
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function _evaluate
  5596  02A1                     _evaluate:	
  5597                           
  5598                           ;incstack = 0
  5599                           ; Regs used in _evaluate: [wreg-fsr0h+status,2+status,0]
  5600                           ;evaluate@matrix stored from wreg
  5601  02A1  00F9               	movwf	evaluate@matrix
  5602                           
  5603                           ;teris_16f886.c: 891: uint16_t risk = 0;
  5604  02A2  01F6               	clrf	evaluate@risk
  5605  02A3  01F7               	clrf	evaluate@risk+1
  5606                           
  5607                           ;teris_16f886.c: 892: uint8_t full = 0xFF;
  5608  02A4  30FF               	movlw	255
  5609  02A5  00F2               	movwf	??_evaluate
  5610  02A6  0872               	movf	??_evaluate,w
  5611  02A7  00F8               	movwf	evaluate@full
  5612                           
  5613                           ;teris_16f886.c: 893: for(uint8_t col = 0; col < 8; col++)
  5614  02A8  01FA               	clrf	evaluate@col
  5615  02A9  3008               	movlw	8
  5616  02AA  027A               	subwf	evaluate@col,w
  5617  02AB  1803               	btfsc	3,0
  5618  02AC  2B0E               	goto	l2776
  5619  02AD                     l2750:	
  5620                           
  5621                           ;teris_16f886.c: 894: {
  5622                           ;teris_16f886.c: 895: full = 0xFF;
  5623  02AD  30FF               	movlw	255
  5624  02AE  00F2               	movwf	??_evaluate
  5625  02AF  0872               	movf	??_evaluate,w
  5626  02B0  00F8               	movwf	evaluate@full
  5627                           
  5628                           ;teris_16f886.c: 896: for(int8_t row = 8 - 1; row >= 0; row--)
  5629  02B1  3007               	movlw	7
  5630  02B2  00F2               	movwf	??_evaluate
  5631  02B3  0872               	movf	??_evaluate,w
  5632  02B4  00FB               	movwf	evaluate@row
  5633  02B5  1BFB               	btfsc	evaluate@row,7
  5634  02B6  2B06               	goto	l2772
  5635  02B7                     l2756:	
  5636                           
  5637                           ;teris_16f886.c: 897: {
  5638                           ;teris_16f886.c: 898: if(full == 0xFF)
  5639  02B7  0A78               	incf	evaluate@full,w
  5640  02B8  1D03               	btfss	3,2
  5641  02B9  2ACD               	goto	l2760
  5642                           
  5643                           ;teris_16f886.c: 899: {
  5644                           ;teris_16f886.c: 900: full = matrix->data[row][col];
  5645  02BA  087B               	movf	evaluate@row,w
  5646  02BB  00F2               	movwf	??_evaluate
  5647  02BC  3002               	movlw	2
  5648  02BD                     u3155:	
  5649  02BD  1003               	clrc
  5650  02BE  0DF2               	rlf	??_evaluate,f
  5651  02BF  3EFF               	addlw	-1
  5652  02C0  1D03               	skipz
  5653  02C1  2ABD               	goto	u3155
  5654  02C2  1003               	clrc
  5655  02C3  0D72               	rlf	??_evaluate,w
  5656  02C4  0779               	addwf	evaluate@matrix,w
  5657  02C5  00F3               	movwf	??_evaluate+1
  5658  02C6  087A               	movf	evaluate@col,w
  5659  02C7  0773               	addwf	??_evaluate+1,w
  5660  02C8  00F4               	movwf	??_evaluate+2
  5661  02C9  0874               	movf	??_evaluate+2,w
  5662  02CA  0084               	movwf	4
  5663  02CB  1783               	bsf	3,7	;select IRP bank2
  5664  02CC  2AFC               	goto	L7
  5665  02CD                     l2760:	
  5666                           ;teris_16f886.c: 901: }
  5667                           
  5668                           
  5669                           ;teris_16f886.c: 902: else
  5670                           ;teris_16f886.c: 903: {
  5671                           ;teris_16f886.c: 904: if(matrix->data[row][col] == 1)
  5672  02CD  087B               	movf	evaluate@row,w
  5673  02CE  00F2               	movwf	??_evaluate
  5674  02CF  3002               	movlw	2
  5675  02D0                     u3165:	
  5676  02D0  1003               	clrc
  5677  02D1  0DF2               	rlf	??_evaluate,f
  5678  02D2  3EFF               	addlw	-1
  5679  02D3  1D03               	skipz
  5680  02D4  2AD0               	goto	u3165
  5681  02D5  1003               	clrc
  5682  02D6  0D72               	rlf	??_evaluate,w
  5683  02D7  0779               	addwf	evaluate@matrix,w
  5684  02D8  00F3               	movwf	??_evaluate+1
  5685  02D9  087A               	movf	evaluate@col,w
  5686  02DA  0773               	addwf	??_evaluate+1,w
  5687  02DB  00F4               	movwf	??_evaluate+2
  5688  02DC  0874               	movf	??_evaluate+2,w
  5689  02DD  0084               	movwf	4
  5690  02DE  1783               	bsf	3,7	;select IRP bank2
  5691  02DF  0300               	decf	0,w
  5692  02E0  1D03               	btfss	3,2
  5693  02E1  2AEB               	goto	l2766
  5694                           
  5695                           ;teris_16f886.c: 905: {
  5696                           ;teris_16f886.c: 906: if(full == 0)
  5697  02E2  0878               	movf	evaluate@full,w
  5698  02E3  1D03               	btfss	3,2
  5699  02E4  2AEB               	goto	l2766
  5700                           
  5701                           ;teris_16f886.c: 907: {
  5702                           ;teris_16f886.c: 908: risk++;
  5703  02E5  3001               	movlw	1
  5704  02E6  07F6               	addwf	evaluate@risk,f
  5705  02E7  1803               	skipnc
  5706  02E8  0AF7               	incf	evaluate@risk+1,f
  5707  02E9  3000               	movlw	0
  5708  02EA  07F7               	addwf	evaluate@risk+1,f
  5709  02EB                     l2766:	
  5710                           
  5711                           ;teris_16f886.c: 909: }
  5712                           ;teris_16f886.c: 910: }
  5713                           ;teris_16f886.c: 911: full = matrix->data[row][col];
  5714  02EB  087B               	movf	evaluate@row,w
  5715  02EC  00F2               	movwf	??_evaluate
  5716  02ED  3002               	movlw	2
  5717  02EE                     u3195:	
  5718  02EE  1003               	clrc
  5719  02EF  0DF2               	rlf	??_evaluate,f
  5720  02F0  3EFF               	addlw	-1
  5721  02F1  1D03               	skipz
  5722  02F2  2AEE               	goto	u3195
  5723  02F3  1003               	clrc
  5724  02F4  0D72               	rlf	??_evaluate,w
  5725  02F5  0779               	addwf	evaluate@matrix,w
  5726  02F6  00F3               	movwf	??_evaluate+1
  5727  02F7  087A               	movf	evaluate@col,w
  5728  02F8  0773               	addwf	??_evaluate+1,w
  5729  02F9  00F4               	movwf	??_evaluate+2
  5730  02FA  0874               	movf	??_evaluate+2,w
  5731  02FB  0084               	movwf	4
  5732  02FC                     L7:	
  5733  02FC  0800               	movf	0,w
  5734  02FD  00F5               	movwf	??_evaluate+3
  5735  02FE  0875               	movf	??_evaluate+3,w
  5736  02FF  00F8               	movwf	evaluate@full
  5737  0300  30FF               	movlw	255
  5738  0301  00F2               	movwf	??_evaluate
  5739  0302  0872               	movf	??_evaluate,w
  5740  0303  07FB               	addwf	evaluate@row,f
  5741  0304  1FFB               	btfss	evaluate@row,7
  5742  0305  2AB7               	goto	l2756
  5743  0306                     l2772:	
  5744  0306  3001               	movlw	1
  5745  0307  00F2               	movwf	??_evaluate
  5746  0308  0872               	movf	??_evaluate,w
  5747  0309  07FA               	addwf	evaluate@col,f
  5748  030A  3008               	movlw	8
  5749  030B  027A               	subwf	evaluate@col,w
  5750  030C  1C03               	skipc
  5751  030D  2AAD               	goto	l2750
  5752  030E                     l2776:	
  5753                           
  5754                           ;teris_16f886.c: 912: }
  5755                           ;teris_16f886.c: 913: }
  5756                           ;teris_16f886.c: 914: }
  5757                           ;teris_16f886.c: 919: return risk;
  5758  030E  0877               	movf	evaluate@risk+1,w
  5759  030F  00F1               	movwf	?_evaluate+1
  5760  0310  0876               	movf	evaluate@risk,w
  5761  0311  00F0               	movwf	?_evaluate
  5762  0312  0008               	return
  5763  0313                     __end_of_evaluate:	
  5764                           
  5765                           	psect	text23
  5766  0D80                     __ptext23:	
  5767 ;; *************** function _delete_matrix *****************
  5768 ;; Defined at:
  5769 ;;		line 647 in file "teris_16f886.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  matrix          1    wreg     PTR struct .
  5772 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  matrix          1    5[BANK0 ] PTR struct .
  5775 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5776 ;;  row             1    6[BANK0 ] char 
  5777 ;;  count           1    4[BANK0 ] unsigned char 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      unsigned char 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5787 ;;      Params:         0       0       0       0       0
  5788 ;;      Locals:         0       3       0       0       0
  5789 ;;      Temps:          1       0       0       0       0
  5790 ;;      Totals:         1       3       0       0       0
  5791 ;;Total ram usage:        4 bytes
  5792 ;; Hardware stack levels used:    1
  5793 ;; Hardware stack levels required when called:    2
  5794 ;; This function calls:
  5795 ;;		_delete_row
  5796 ;;		_is_row_full
  5797 ;; This function is called by:
  5798 ;;		_find_best_solution
  5799 ;;		_main
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _delete_matrix
  5805  0D80                     _delete_matrix:	
  5806                           
  5807                           ;incstack = 0
  5808                           ; Regs used in _delete_matrix: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5809                           ;delete_matrix@matrix stored from wreg
  5810  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  5811  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  5812  0D82  00A5               	movwf	delete_matrix@matrix
  5813                           
  5814                           ;teris_16f886.c: 649: uint8_t count = 0;
  5815  0D83  01A4               	clrf	delete_matrix@count
  5816                           
  5817                           ;teris_16f886.c: 650: int8_t row = 8 - 1;
  5818  0D84  3007               	movlw	7
  5819  0D85  00FB               	movwf	??_delete_matrix
  5820  0D86  087B               	movf	??_delete_matrix,w
  5821  0D87  00A6               	movwf	delete_matrix@row
  5822  0D88                     l2626:	
  5823                           ;teris_16f886.c: 651: while(row >= 0)
  5824                           
  5825  0D88  1BA6               	btfsc	delete_matrix@row,7
  5826  0D89  2DB1               	goto	l2628
  5827                           
  5828                           ;teris_16f886.c: 652: {
  5829                           ;teris_16f886.c: 653: if(is_row_full(matrix, row))
  5830  0D8A  0826               	movf	delete_matrix@row,w
  5831  0D8B  00FB               	movwf	??_delete_matrix
  5832  0D8C  087B               	movf	??_delete_matrix,w
  5833  0D8D  00F0               	movwf	is_row_full@row
  5834  0D8E  0825               	movf	delete_matrix@matrix,w
  5835  0D8F  120A  158A  2508  120A  158A  	fcall	_is_row_full
  5836  0D94  3A00               	xorlw	0
  5837  0D95  1903               	skipnz
  5838  0D96  2DAA               	goto	l2624
  5839                           
  5840                           ;teris_16f886.c: 654: {
  5841                           ;teris_16f886.c: 655: delete_row(matrix, row);
  5842  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  5843  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  5844  0D99  0826               	movf	delete_matrix@row,w
  5845  0D9A  00FB               	movwf	??_delete_matrix
  5846  0D9B  087B               	movf	??_delete_matrix,w
  5847  0D9C  00F7               	movwf	delete_row@row
  5848  0D9D  0825               	movf	delete_matrix@matrix,w
  5849  0D9E  120A  118A  215E  120A  158A  	fcall	_delete_row
  5850                           
  5851                           ;teris_16f886.c: 656: count++;
  5852  0DA3  3001               	movlw	1
  5853  0DA4  00FB               	movwf	??_delete_matrix
  5854  0DA5  087B               	movf	??_delete_matrix,w
  5855  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  5856  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  5857  0DA8  07A4               	addwf	delete_matrix@count,f
  5858                           
  5859                           ;teris_16f886.c: 657: }
  5860  0DA9  2D88               	goto	l2626
  5861  0DAA                     l2624:	
  5862                           
  5863                           ;teris_16f886.c: 658: else
  5864                           ;teris_16f886.c: 659: {
  5865                           ;teris_16f886.c: 660: row--;
  5866  0DAA  30FF               	movlw	255
  5867  0DAB  00FB               	movwf	??_delete_matrix
  5868  0DAC  087B               	movf	??_delete_matrix,w
  5869  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  5870  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  5871  0DAF  07A6               	addwf	delete_matrix@row,f
  5872  0DB0  2D88               	goto	l2626
  5873  0DB1                     l2628:	
  5874                           
  5875                           ;teris_16f886.c: 661: }
  5876                           ;teris_16f886.c: 662: }
  5877                           ;teris_16f886.c: 666: return count;
  5878  0DB1  0824               	movf	delete_matrix@count,w
  5879  0DB2  0008               	return
  5880  0DB3                     __end_of_delete_matrix:	
  5881                           
  5882                           	psect	text24
  5883  0D08                     __ptext24:	
  5884 ;; *************** function _is_row_full *****************
  5885 ;; Defined at:
  5886 ;;		line 613 in file "teris_16f886.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  matrix          1    wreg     PTR const struct .
  5889 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5890 ;;  row             1    0[COMMON] unsigned char 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;  matrix          1    4[COMMON] PTR const struct .
  5893 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5894 ;;  col             1    5[COMMON] unsigned char 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  1    wreg      unsigned char 
  5897 ;; Registers used:
  5898 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5904 ;;      Params:         1       0       0       0       0
  5905 ;;      Locals:         2       0       0       0       0
  5906 ;;      Temps:          3       0       0       0       0
  5907 ;;      Totals:         6       0       0       0       0
  5908 ;;Total ram usage:        6 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_delete_matrix
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function _is_row_full
  5919  0D08                     _is_row_full:	
  5920                           
  5921                           ;incstack = 0
  5922                           ; Regs used in _is_row_full: [wreg-fsr0h+status,2+status,0]
  5923                           ;is_row_full@matrix stored from wreg
  5924  0D08  00F4               	movwf	is_row_full@matrix
  5925                           
  5926                           ;teris_16f886.c: 615: for(uint8_t col = 0; col < 8; col++)
  5927  0D09  01F5               	clrf	is_row_full@col
  5928  0D0A  3008               	movlw	8
  5929  0D0B  0275               	subwf	is_row_full@col,w
  5930  0D0C  1803               	btfsc	3,0
  5931  0D0D  2D2D               	goto	l2486
  5932  0D0E                     l2476:	
  5933                           
  5934                           ;teris_16f886.c: 616: {
  5935                           ;teris_16f886.c: 617: if(matrix->data[row][col] == 0)
  5936  0D0E  0870               	movf	is_row_full@row,w
  5937  0D0F  00F1               	movwf	??_is_row_full
  5938  0D10  3002               	movlw	2
  5939  0D11                     u2505:	
  5940  0D11  1003               	clrc
  5941  0D12  0DF1               	rlf	??_is_row_full,f
  5942  0D13  3EFF               	addlw	-1
  5943  0D14  1D03               	skipz
  5944  0D15  2D11               	goto	u2505
  5945  0D16  1003               	clrc
  5946  0D17  0D71               	rlf	??_is_row_full,w
  5947  0D18  0774               	addwf	is_row_full@matrix,w
  5948  0D19  00F2               	movwf	??_is_row_full+1
  5949  0D1A  0875               	movf	is_row_full@col,w
  5950  0D1B  0772               	addwf	??_is_row_full+1,w
  5951  0D1C  00F3               	movwf	??_is_row_full+2
  5952  0D1D  0873               	movf	??_is_row_full+2,w
  5953  0D1E  0084               	movwf	4
  5954  0D1F  1783               	bsf	3,7	;select IRP bank2
  5955  0D20  0800               	movf	0,w
  5956  0D21  1D03               	btfss	3,2
  5957  0D22  2D25               	goto	l2482
  5958                           
  5959                           ;teris_16f886.c: 618: {
  5960                           ;teris_16f886.c: 619: return 0;
  5961  0D23  3000               	movlw	0
  5962  0D24  0008               	return
  5963  0D25                     l2482:	
  5964  0D25  3001               	movlw	1
  5965  0D26  00F1               	movwf	??_is_row_full
  5966  0D27  0871               	movf	??_is_row_full,w
  5967  0D28  07F5               	addwf	is_row_full@col,f
  5968  0D29  3008               	movlw	8
  5969  0D2A  0275               	subwf	is_row_full@col,w
  5970  0D2B  1C03               	skipc
  5971  0D2C  2D0E               	goto	l2476
  5972  0D2D                     l2486:	
  5973                           
  5974                           ;teris_16f886.c: 620: }
  5975                           ;teris_16f886.c: 621: }
  5976                           ;teris_16f886.c: 622: return 1;
  5977  0D2D  3001               	movlw	1
  5978  0D2E  0008               	return
  5979  0D2F                     __end_of_is_row_full:	
  5980                           
  5981                           	psect	text25
  5982  015E                     __ptext25:	
  5983 ;; *************** function _delete_row *****************
  5984 ;; Defined at:
  5985 ;;		line 624 in file "teris_16f886.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  matrix          1    wreg     PTR struct .
  5988 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5989 ;;  row             1    7[COMMON] unsigned char 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  matrix          1    2[BANK0 ] PTR struct .
  5992 ;;		 -> temp_matrix88(64), g_matrix88(64), 
  5993 ;;  len             2    0[BANK0 ] unsigned int 
  5994 ;;  i               1    3[BANK0 ] char 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6004 ;;      Params:         1       0       0       0       0
  6005 ;;      Locals:         0       4       0       0       0
  6006 ;;      Temps:          3       0       0       0       0
  6007 ;;      Totals:         4       4       0       0       0
  6008 ;;Total ram usage:        8 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    1
  6011 ;; This function calls:
  6012 ;;		_memcpy
  6013 ;;		_memset
  6014 ;; This function is called by:
  6015 ;;		_delete_matrix
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function _delete_row
  6021  015E                     _delete_row:	
  6022                           
  6023                           ;incstack = 0
  6024                           ; Regs used in _delete_row: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6025                           ;delete_row@matrix stored from wreg
  6026  015E  1283               	bcf	3,5	;RP0=0, select bank0
  6027  015F  1303               	bcf	3,6	;RP1=0, select bank0
  6028  0160  00A2               	movwf	delete_row@matrix
  6029                           
  6030                           ;teris_16f886.c: 626: for(int8_t i = 8 - 1; i >= 0; i--)
  6031  0161  3007               	movlw	7
  6032  0162  00F8               	movwf	??_delete_row
  6033  0163  0878               	movf	??_delete_row,w
  6034  0164  00A3               	movwf	delete_row@i
  6035  0165                     L8:	
  6036  0165  1BA3               	btfsc	delete_row@i,7
  6037  0166  0008               	return
  6038                           
  6039                           ;teris_16f886.c: 627: {
  6040                           ;teris_16f886.c: 628: if(i <= row)
  6041  0167  0823               	movf	delete_row@i,w
  6042  0168  00F8               	movwf	??_delete_row
  6043  0169  01F9               	clrf	??_delete_row+1
  6044  016A  1BF8               	btfsc	??_delete_row,7
  6045  016B  03F9               	decf	??_delete_row+1,f
  6046  016C  0879               	movf	??_delete_row+1,w
  6047  016D  3A80               	xorlw	128
  6048  016E  3C80               	sublw	128
  6049  016F  1D03               	skipz
  6050  0170  2973               	goto	u2545
  6051  0171  0878               	movf	??_delete_row,w
  6052  0172  0277               	subwf	delete_row@row,w
  6053  0173                     u2545:	
  6054  0173  1C03               	skipc
  6055  0174  29BD               	goto	l2506
  6056                           
  6057                           ;teris_16f886.c: 629: {
  6058                           ;teris_16f886.c: 630: if(i > 0)
  6059  0175  1283               	bcf	3,5	;RP0=0, select bank0
  6060  0176  1303               	bcf	3,6	;RP1=0, select bank0
  6061  0177  0823               	movf	delete_row@i,w
  6062  0178  3A80               	xorlw	128
  6063  0179  3E7F               	addlw	-129
  6064  017A  1C03               	skipc
  6065  017B  29A4               	goto	l2504
  6066                           
  6067                           ;teris_16f886.c: 631: {
  6068                           ;teris_16f886.c: 635: register size_t len;
  6069                           ;teris_16f886.c: 637: len = 8*sizeof(uint8_t);
  6070  017C  3008               	movlw	8
  6071  017D  00A0               	movwf	delete_row@len
  6072  017E  3000               	movlw	0
  6073  017F  00A1               	movwf	delete_row@len+1
  6074                           
  6075                           ;teris_16f886.c: 638: memcpy(matrix->data[i], matrix->data[i - 1], len);
  6076  0180  0823               	movf	delete_row@i,w
  6077  0181  00F8               	movwf	??_delete_row
  6078  0182  3002               	movlw	2
  6079  0183                     u2565:	
  6080  0183  1003               	clrc
  6081  0184  0DF8               	rlf	??_delete_row,f
  6082  0185  3EFF               	addlw	-1
  6083  0186  1D03               	skipz
  6084  0187  2983               	goto	u2565
  6085  0188  1003               	clrc
  6086  0189  0D78               	rlf	??_delete_row,w
  6087  018A  3EF8               	addlw	248
  6088  018B  0722               	addwf	delete_row@matrix,w
  6089  018C  00F9               	movwf	??_delete_row+1
  6090  018D  0879               	movf	??_delete_row+1,w
  6091  018E  00F0               	movwf	memcpy@s1
  6092  018F  0821               	movf	delete_row@len+1,w
  6093  0190  00F2               	movwf	memcpy@n+1
  6094  0191  0820               	movf	delete_row@len,w
  6095  0192  00F1               	movwf	memcpy@n
  6096  0193  0823               	movf	delete_row@i,w
  6097  0194  00FA               	movwf	??_delete_row+2
  6098  0195  3002               	movlw	2
  6099  0196                     u2575:	
  6100  0196  1003               	clrc
  6101  0197  0DFA               	rlf	??_delete_row+2,f
  6102  0198  3EFF               	addlw	-1
  6103  0199  1D03               	skipz
  6104  019A  2996               	goto	u2575
  6105  019B  1003               	clrc
  6106  019C  0D7A               	rlf	??_delete_row+2,w
  6107  019D  0722               	addwf	delete_row@matrix,w
  6108  019E  120A  158A  24E2  120A  118A  	fcall	_memcpy
  6109                           
  6110                           ;teris_16f886.c: 639: }
  6111  01A3  29BD               	goto	l2506
  6112  01A4                     l2504:	
  6113                           
  6114                           ;teris_16f886.c: 640: else
  6115                           ;teris_16f886.c: 641: {
  6116                           ;teris_16f886.c: 642: memset(matrix->data[i], 0, 8*sizeof(uint8_t));
  6117  01A4  3000               	movlw	0
  6118  01A5  00F0               	movwf	memset@c
  6119  01A6  00F1               	movwf	memset@c+1
  6120  01A7  3008               	movlw	8
  6121  01A8  00F2               	movwf	memset@n
  6122  01A9  3000               	movlw	0
  6123  01AA  00F3               	movwf	memset@n+1
  6124  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  6125  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  6126  01AD  0823               	movf	delete_row@i,w
  6127  01AE  00F8               	movwf	??_delete_row
  6128  01AF  3002               	movlw	2
  6129  01B0                     u2585:	
  6130  01B0  1003               	clrc
  6131  01B1  0DF8               	rlf	??_delete_row,f
  6132  01B2  3EFF               	addlw	-1
  6133  01B3  1D03               	skipz
  6134  01B4  29B0               	goto	u2585
  6135  01B5  1003               	clrc
  6136  01B6  0D78               	rlf	??_delete_row,w
  6137  01B7  0722               	addwf	delete_row@matrix,w
  6138  01B8  120A  158A  2423  120A  118A  	fcall	_memset
  6139  01BD                     l2506:	
  6140  01BD  30FF               	movlw	255
  6141  01BE  00F8               	movwf	??_delete_row
  6142  01BF  0878               	movf	??_delete_row,w
  6143  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  6144  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  6145  01C2  07A3               	addwf	delete_row@i,f
  6146  01C3  2965               	goto	L8
  6147  01C4                     __end_of_delete_row:	
  6148                           
  6149                           	psect	text26
  6150  0CE2                     __ptext26:	
  6151 ;; *************** function _memcpy *****************
  6152 ;; Defined at:
  6153 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memcpy.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  d1              1    wreg     PTR void 
  6156 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6157 ;;  s1              1    0[COMMON] PTR const void 
  6158 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6159 ;;  n               2    1[COMMON] unsigned int 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  d1              1    6[COMMON] PTR void 
  6162 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6163 ;;  s               1    5[COMMON] PTR const unsigned char 
  6164 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6165 ;;  d               1    4[COMMON] PTR unsigned char 
  6166 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      PTR void 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6176 ;;      Params:         3       0       0       0       0
  6177 ;;      Locals:         3       0       0       0       0
  6178 ;;      Temps:          1       0       0       0       0
  6179 ;;      Totals:         7       0       0       0       0
  6180 ;;Total ram usage:        7 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; This function calls:
  6183 ;;		Nothing
  6184 ;; This function is called by:
  6185 ;;		_delete_row
  6186 ;;		_merge1
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           
  6191                           ;psect for function _memcpy
  6192  0CE2                     _memcpy:	
  6193                           
  6194                           ;incstack = 0
  6195                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  6196                           ;memcpy@d1 stored from wreg
  6197  0CE2  00F6               	movwf	memcpy@d1
  6198  0CE3  0870               	movf	memcpy@s1,w
  6199  0CE4  00F3               	movwf	??_memcpy
  6200  0CE5  0873               	movf	??_memcpy,w
  6201  0CE6  00F5               	movwf	memcpy@s
  6202  0CE7  0876               	movf	memcpy@d1,w
  6203  0CE8  00F3               	movwf	??_memcpy
  6204  0CE9  0873               	movf	??_memcpy,w
  6205  0CEA  00F4               	movwf	memcpy@d
  6206  0CEB                     l2458:	
  6207  0CEB  3001               	movlw	1
  6208  0CEC  02F1               	subwf	memcpy@n,f
  6209  0CED  3000               	movlw	0
  6210  0CEE  1C03               	skipc
  6211  0CEF  03F2               	decf	memcpy@n+1,f
  6212  0CF0  02F2               	subwf	memcpy@n+1,f
  6213  0CF1  0A71               	incf	memcpy@n,w
  6214  0CF2  1903               	btfsc	3,2
  6215  0CF3  0A72               	incf	memcpy@n+1,w
  6216  0CF4  1903               	btfsc	3,2
  6217  0CF5  0008               	return
  6218  0CF6  0875               	movf	memcpy@s,w
  6219  0CF7  0084               	movwf	4
  6220  0CF8  1783               	bsf	3,7	;select IRP bank2
  6221  0CF9  0800               	movf	0,w
  6222  0CFA  00F3               	movwf	??_memcpy
  6223  0CFB  0874               	movf	memcpy@d,w
  6224  0CFC  0084               	movwf	4
  6225  0CFD  0873               	movf	??_memcpy,w
  6226  0CFE  0080               	movwf	0
  6227  0CFF  3001               	movlw	1
  6228  0D00  00F3               	movwf	??_memcpy
  6229  0D01  0873               	movf	??_memcpy,w
  6230  0D02  07F5               	addwf	memcpy@s,f
  6231  0D03  3001               	movlw	1
  6232  0D04  00F3               	movwf	??_memcpy
  6233  0D05  0873               	movf	??_memcpy,w
  6234  0D06  07F4               	addwf	memcpy@d,f
  6235  0D07  2CEB               	goto	l2458
  6236  0D08                     __end_of_memcpy:	
  6237                           ;	Return value of _memcpy is never used
  6238                           
  6239                           
  6240                           	psect	text27
  6241  0B99                     __ptext27:	
  6242 ;; *************** function ___bmul *****************
  6243 ;; Defined at:
  6244 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul8.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  multiplier      1    wreg     unsigned char 
  6247 ;;  multiplicand    1    0[COMMON] unsigned char 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  multiplier      1    3[COMMON] unsigned char 
  6250 ;;  product         1    2[COMMON] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      unsigned char 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6260 ;;      Params:         1       0       0       0       0
  6261 ;;      Locals:         2       0       0       0       0
  6262 ;;      Temps:          1       0       0       0       0
  6263 ;;      Totals:         4       0       0       0       0
  6264 ;;Total ram usage:        4 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; This function calls:
  6267 ;;		Nothing
  6268 ;; This function is called by:
  6269 ;;		_find_best_solution
  6270 ;;		_main
  6271 ;;		_printf_debug_cur_MATRIX44
  6272 ;;		_get_MATRIX44
  6273 ;;		_printf_debug_all_MATRIX44
  6274 ;;		_sprintf
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           
  6279                           ;psect for function ___bmul
  6280  0B99                     ___bmul:	
  6281                           
  6282                           ;incstack = 0
  6283                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6284                           ;___bmul@multiplier stored from wreg
  6285  0B99  00F3               	movwf	___bmul@multiplier
  6286  0B9A  01F2               	clrf	___bmul@product
  6287  0B9B                     l2926:	
  6288  0B9B  1C73               	btfss	___bmul@multiplier,0
  6289  0B9C  2BA1               	goto	l2930
  6290  0B9D  0870               	movf	___bmul@multiplicand,w
  6291  0B9E  00F1               	movwf	??___bmul
  6292  0B9F  0871               	movf	??___bmul,w
  6293  0BA0  07F2               	addwf	___bmul@product,f
  6294  0BA1                     l2930:	
  6295  0BA1  1003               	clrc
  6296  0BA2  0DF0               	rlf	___bmul@multiplicand,f
  6297  0BA3  1003               	clrc
  6298  0BA4  0CF3               	rrf	___bmul@multiplier,f
  6299  0BA5  0873               	movf	___bmul@multiplier,w
  6300  0BA6  1D03               	btfss	3,2
  6301  0BA7  2B9B               	goto	l2926
  6302  0BA8  0872               	movf	___bmul@product,w
  6303  0BA9  0008               	return
  6304  0BAA                     __end_of___bmul:	
  6305                           
  6306                           	psect	text28
  6307  0F10                     __ptext28:	
  6308 ;; *************** function _clear *****************
  6309 ;; Defined at:
  6310 ;;		line 842 in file "teris_16f886.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  x               1    wreg     char 
  6313 ;;  y               1    0[COMMON] char 
  6314 ;;  matrix44        2    1[COMMON] PTR const struct .
  6315 ;;		 -> NULL(0), g_matrix44(384), 
  6316 ;;  matrix88        1    3[COMMON] PTR struct .
  6317 ;;		 -> g_matrix88(64), 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  x               1    8[COMMON] char 
  6320 ;;  col             1   10[COMMON] unsigned char 
  6321 ;;  row             1    9[COMMON] unsigned char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      void 
  6324 ;; Registers used:
  6325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6331 ;;      Params:         4       0       0       0       0
  6332 ;;      Locals:         3       0       0       0       0
  6333 ;;      Temps:          4       0       0       0       0
  6334 ;;      Totals:        11       0       0       0       0
  6335 ;;Total ram usage:       11 bytes
  6336 ;; Hardware stack levels used:    2
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_main
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           
  6345                           ;psect for function _clear
  6346  0F10                     _clear:	
  6347                           
  6348                           ;incstack = 0
  6349                           ; Regs used in _clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  6350                           ;clear@x stored from wreg
  6351  0F10  00F8               	movwf	clear@x
  6352                           
  6353                           ;teris_16f886.c: 844: for(uint8_t row = 0; row < 4; row++)
  6354  0F11  01F9               	clrf	clear@row
  6355  0F12                     L9:	
  6356  0F12  3004               	movlw	4
  6357  0F13  0279               	subwf	clear@row,w
  6358  0F14  1803               	btfsc	3,0
  6359  0F15  0008               	return
  6360                           
  6361                           ;teris_16f886.c: 845: {
  6362                           ;teris_16f886.c: 846: for(uint8_t col = 0; col < 4; col++)
  6363  0F16  01FA               	clrf	clear@col
  6364  0F17  3004               	movlw	4
  6365  0F18  027A               	subwf	clear@col,w
  6366  0F19  1803               	btfsc	3,0
  6367  0F1A  2F5A               	goto	l3226
  6368  0F1B                     l3218:	
  6369                           
  6370                           ;teris_16f886.c: 847: {
  6371                           ;teris_16f886.c: 848: if(matrix44->data[row][col] == 1)
  6372  0F1B  0879               	movf	clear@row,w
  6373  0F1C  00F4               	movwf	??_clear
  6374  0F1D  01F5               	clrf	??_clear+1
  6375  0F1E  1003               	clrc
  6376  0F1F  0DF4               	rlf	??_clear,f
  6377  0F20  0DF5               	rlf	??_clear+1,f
  6378  0F21  1003               	clrc
  6379  0F22  0DF4               	rlf	??_clear,f
  6380  0F23  0DF5               	rlf	??_clear+1,f
  6381  0F24  0874               	movf	??_clear,w
  6382  0F25  0771               	addwf	clear@matrix44,w
  6383  0F26  00F6               	movwf	??_clear+2
  6384  0F27  0875               	movf	??_clear+1,w
  6385  0F28  1803               	skipnc
  6386  0F29  0A75               	incf	??_clear+1,w
  6387  0F2A  0772               	addwf	clear@matrix44+1,w
  6388  0F2B  00F7               	movwf	??_clear+3
  6389  0F2C  087A               	movf	clear@col,w
  6390  0F2D  0776               	addwf	??_clear+2,w
  6391  0F2E  0084               	movwf	4
  6392  0F2F  0877               	movf	??_clear+3,w
  6393  0F30  1803               	skipnc
  6394  0F31  0A77               	incf	??_clear+3,w
  6395  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  6396  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  6397  0F34  00FF               	movwf	127
  6398  0F35  120A  158A  2000  120A  158A  	fcall	stringtab
  6399  0F3A  3A01               	xorlw	1
  6400  0F3B  1D03               	skipz
  6401  0F3C  2F52               	goto	l3222
  6402                           
  6403                           ;teris_16f886.c: 849: {
  6404                           ;teris_16f886.c: 850: matrix88->data[y + row][x + col] = 0;
  6405  0F3D  087A               	movf	clear@col,w
  6406  0F3E  0778               	addwf	clear@x,w
  6407  0F3F  0773               	addwf	clear@matrix88,w
  6408  0F40  00F4               	movwf	??_clear
  6409  0F41  0879               	movf	clear@row,w
  6410  0F42  0770               	addwf	clear@y,w
  6411  0F43  00F5               	movwf	??_clear+1
  6412  0F44  3002               	movlw	2
  6413  0F45                     u4125:	
  6414  0F45  1003               	clrc
  6415  0F46  0DF5               	rlf	??_clear+1,f
  6416  0F47  3EFF               	addlw	-1
  6417  0F48  1D03               	skipz
  6418  0F49  2F45               	goto	u4125
  6419  0F4A  1003               	clrc
  6420  0F4B  0D75               	rlf	??_clear+1,w
  6421  0F4C  0774               	addwf	??_clear,w
  6422  0F4D  00F6               	movwf	??_clear+2
  6423  0F4E  0876               	movf	??_clear+2,w
  6424  0F4F  0084               	movwf	4
  6425  0F50  1783               	bsf	3,7	;select IRP bank2
  6426  0F51  0180               	clrf	0
  6427  0F52                     l3222:	
  6428  0F52  3001               	movlw	1
  6429  0F53  00F4               	movwf	??_clear
  6430  0F54  0874               	movf	??_clear,w
  6431  0F55  07FA               	addwf	clear@col,f
  6432  0F56  3004               	movlw	4
  6433  0F57  027A               	subwf	clear@col,w
  6434  0F58  1C03               	skipc
  6435  0F59  2F1B               	goto	l3218
  6436  0F5A                     l3226:	
  6437  0F5A  3001               	movlw	1
  6438  0F5B  00F4               	movwf	??_clear
  6439  0F5C  0874               	movf	??_clear,w
  6440  0F5D  07F9               	addwf	clear@row,f
  6441  0F5E  2F12               	goto	L9
  6442  0F5F                     __end_of_clear:	
  6443                           
  6444                           	psect	text29
  6445  0BF0                     __ptext29:	
  6446 ;; *************** function _char_info_index_rand *****************
  6447 ;; Defined at:
  6448 ;;		line 921 in file "teris_16f886.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;		None
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      unsigned char 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0, pclath, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6462 ;;      Params:         0       0       0       0       0
  6463 ;;      Locals:         0       0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0
  6465 ;;      Totals:         0       0       0       0       0
  6466 ;;Total ram usage:        0 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    2
  6469 ;; This function calls:
  6470 ;;		___awmod
  6471 ;;		_rand
  6472 ;; This function is called by:
  6473 ;;		_main
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           
  6478                           ;psect for function _char_info_index_rand
  6479  0BF0                     _char_info_index_rand:	
  6480                           
  6481                           ;teris_16f886.c: 923: return (uint8_t)(rand()%9);
  6482                           
  6483                           ;incstack = 0
  6484                           ; Regs used in _char_info_index_rand: [wreg+status,2+status,0+pclath+cstack]
  6485  0BF0  3009               	movlw	9
  6486  0BF1  1283               	bcf	3,5	;RP0=0, select bank0
  6487  0BF2  1303               	bcf	3,6	;RP1=0, select bank0
  6488  0BF3  00A7               	movwf	___awmod@divisor
  6489  0BF4  3000               	movlw	0
  6490  0BF5  00A8               	movwf	___awmod@divisor+1
  6491  0BF6  120A  158A  267C  120A  158A  	fcall	_rand
  6492  0BFB  1283               	bcf	3,5	;RP0=0, select bank0
  6493  0BFC  1303               	bcf	3,6	;RP1=0, select bank0
  6494  0BFD  0821               	movf	?_rand+1,w
  6495  0BFE  00AA               	movwf	___awmod@dividend+1
  6496  0BFF  0820               	movf	?_rand,w
  6497  0C00  00A9               	movwf	___awmod@dividend
  6498  0C01  120A  158A  26C3   	fcall	___awmod
  6499  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  6500  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  6501  0C06  0827               	movf	?___awmod,w
  6502  0C07  0008               	return
  6503  0C08                     __end_of_char_info_index_rand:	
  6504                           
  6505                           	psect	text30
  6506  0E7C                     __ptext30:	
  6507 ;; *************** function _rand *****************
  6508 ;; Defined at:
  6509 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\rand.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;		None
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  2    0[BANK0 ] int 
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0, pclath, cstack
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6523 ;;      Params:         0       2       0       0       0
  6524 ;;      Locals:         0       0       0       0       0
  6525 ;;      Temps:          0       5       0       0       0
  6526 ;;      Totals:         0       7       0       0       0
  6527 ;;Total ram usage:        7 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:    1
  6530 ;; This function calls:
  6531 ;;		___lmul
  6532 ;; This function is called by:
  6533 ;;		_char_info_index_rand
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           
  6538                           ;psect for function _rand
  6539  0E7C                     _rand:	
  6540                           
  6541                           ;incstack = 0
  6542                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  6543  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  6544  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  6545  0E7E  0860               	movf	_randx+3,w
  6546  0E7F  00F3               	movwf	___lmul@multiplier+3
  6547  0E80  085F               	movf	_randx+2,w
  6548  0E81  00F2               	movwf	___lmul@multiplier+2
  6549  0E82  085E               	movf	_randx+1,w
  6550  0E83  00F1               	movwf	___lmul@multiplier+1
  6551  0E84  085D               	movf	_randx,w
  6552  0E85  00F0               	movwf	___lmul@multiplier
  6553  0E86  3041               	movlw	65
  6554  0E87  00F7               	movwf	___lmul@multiplicand+3
  6555  0E88  30C6               	movlw	198
  6556  0E89  00F6               	movwf	___lmul@multiplicand+2
  6557  0E8A  304E               	movlw	78
  6558  0E8B  00F5               	movwf	___lmul@multiplicand+1
  6559  0E8C  306D               	movlw	109
  6560  0E8D  00F4               	movwf	___lmul@multiplicand
  6561  0E8E  120A  158A  25B3  120A  158A  	fcall	___lmul
  6562  0E93  0873               	movf	?___lmul+3,w
  6563  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  6564  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  6565  0E96  00E0               	movwf	_randx+3
  6566  0E97  0872               	movf	?___lmul+2,w
  6567  0E98  00DF               	movwf	_randx+2
  6568  0E99  0871               	movf	?___lmul+1,w
  6569  0E9A  00DE               	movwf	_randx+1
  6570  0E9B  0870               	movf	?___lmul,w
  6571  0E9C  00DD               	movwf	_randx
  6572  0E9D  3039               	movlw	57
  6573  0E9E  07DD               	addwf	_randx,f
  6574  0E9F  3030               	movlw	48
  6575  0EA0  1803               	skipnc
  6576  0EA1  3031               	movlw	49
  6577  0EA2  07DE               	addwf	_randx+1,f
  6578  0EA3  3000               	movlw	0
  6579  0EA4  1803               	skipnc
  6580  0EA5  3001               	movlw	1
  6581  0EA6  07DF               	addwf	_randx+2,f
  6582  0EA7  3000               	movlw	0
  6583  0EA8  1803               	skipnc
  6584  0EA9  3001               	movlw	1
  6585  0EAA  07E0               	addwf	_randx+3,f
  6586  0EAB  085D               	movf	_randx,w
  6587  0EAC  00A2               	movwf	??_rand
  6588  0EAD  085E               	movf	_randx+1,w
  6589  0EAE  00A3               	movwf	??_rand+1
  6590  0EAF  085F               	movf	_randx+2,w
  6591  0EB0  00A4               	movwf	??_rand+2
  6592  0EB1  0860               	movf	_randx+3,w
  6593  0EB2  00A5               	movwf	??_rand+3
  6594  0EB3  3010               	movlw	16
  6595  0EB4  00A6               	movwf	??_rand+4
  6596  0EB5                     u3225:	
  6597  0EB5  0D25               	rlf	??_rand+3,w
  6598  0EB6  0CA5               	rrf	??_rand+3,f
  6599  0EB7  0CA4               	rrf	??_rand+2,f
  6600  0EB8  0CA3               	rrf	??_rand+1,f
  6601  0EB9  0CA2               	rrf	??_rand,f
  6602  0EBA  0BA6               	decfsz	??_rand+4,f
  6603  0EBB  2EB5               	goto	u3225
  6604  0EBC  30FF               	movlw	255
  6605  0EBD  0522               	andwf	??_rand,w
  6606  0EBE  00A0               	movwf	?_rand
  6607  0EBF  307F               	movlw	127
  6608  0EC0  0523               	andwf	??_rand+1,w
  6609  0EC1  00A1               	movwf	?_rand+1
  6610  0EC2  0008               	return
  6611  0EC3                     __end_of_rand:	
  6612                           
  6613                           	psect	text31
  6614  0DB3                     __ptext31:	
  6615 ;; *************** function ___lmul *****************
  6616 ;; Defined at:
  6617 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul32.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  multiplier      4    0[COMMON] unsigned long 
  6620 ;;  multiplicand    4    4[COMMON] unsigned long 
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  product         4    9[COMMON] unsigned long 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  4    0[COMMON] unsigned long 
  6625 ;; Registers used:
  6626 ;;		wreg, status,2, status,0
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6632 ;;      Params:         8       0       0       0       0
  6633 ;;      Locals:         4       0       0       0       0
  6634 ;;      Temps:          1       0       0       0       0
  6635 ;;      Totals:        13       0       0       0       0
  6636 ;;Total ram usage:       13 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_rand
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           
  6646                           ;psect for function ___lmul
  6647  0DB3                     ___lmul:	
  6648                           
  6649                           ;incstack = 0
  6650                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6651  0DB3  3000               	movlw	0
  6652  0DB4  00FC               	movwf	___lmul@product+3
  6653  0DB5  3000               	movlw	0
  6654  0DB6  00FB               	movwf	___lmul@product+2
  6655  0DB7  3000               	movlw	0
  6656  0DB8  00FA               	movwf	___lmul@product+1
  6657  0DB9  3000               	movlw	0
  6658  0DBA  00F9               	movwf	___lmul@product
  6659  0DBB                     l2596:	
  6660  0DBB  1C70               	btfss	___lmul@multiplier,0
  6661  0DBC  2DD1               	goto	l2600
  6662  0DBD  0874               	movf	___lmul@multiplicand,w
  6663  0DBE  07F9               	addwf	___lmul@product,f
  6664  0DBF  0875               	movf	___lmul@multiplicand+1,w
  6665  0DC0  1103               	clrz
  6666  0DC1  1803               	skipnc
  6667  0DC2  3E01               	addlw	1
  6668  0DC3  1D03               	btfss	3,2
  6669  0DC4  07FA               	addwf	___lmul@product+1,f
  6670  0DC5  0876               	movf	___lmul@multiplicand+2,w
  6671  0DC6  1103               	clrz
  6672  0DC7  1803               	skipnc
  6673  0DC8  3E01               	addlw	1
  6674  0DC9  1D03               	btfss	3,2
  6675  0DCA  07FB               	addwf	___lmul@product+2,f
  6676  0DCB  0877               	movf	___lmul@multiplicand+3,w
  6677  0DCC  1103               	clrz
  6678  0DCD  1803               	skipnc
  6679  0DCE  3E01               	addlw	1
  6680  0DCF  1D03               	btfss	3,2
  6681  0DD0  07FC               	addwf	___lmul@product+3,f
  6682  0DD1                     l2600:	
  6683  0DD1  3001               	movlw	1
  6684  0DD2  00F8               	movwf	??___lmul
  6685  0DD3                     u2795:	
  6686  0DD3  1003               	clrc
  6687  0DD4  0DF4               	rlf	___lmul@multiplicand,f
  6688  0DD5  0DF5               	rlf	___lmul@multiplicand+1,f
  6689  0DD6  0DF6               	rlf	___lmul@multiplicand+2,f
  6690  0DD7  0DF7               	rlf	___lmul@multiplicand+3,f
  6691  0DD8  0BF8               	decfsz	??___lmul,f
  6692  0DD9  2DD3               	goto	u2795
  6693  0DDA  3001               	movlw	1
  6694  0DDB                     u2805:	
  6695  0DDB  1003               	clrc
  6696  0DDC  0CF3               	rrf	___lmul@multiplier+3,f
  6697  0DDD  0CF2               	rrf	___lmul@multiplier+2,f
  6698  0DDE  0CF1               	rrf	___lmul@multiplier+1,f
  6699  0DDF  0CF0               	rrf	___lmul@multiplier,f
  6700  0DE0  3EFF               	addlw	-1
  6701  0DE1  1D03               	skipz
  6702  0DE2  2DDB               	goto	u2805
  6703  0DE3  0873               	movf	___lmul@multiplier+3,w
  6704  0DE4  0472               	iorwf	___lmul@multiplier+2,w
  6705  0DE5  0471               	iorwf	___lmul@multiplier+1,w
  6706  0DE6  0470               	iorwf	___lmul@multiplier,w
  6707  0DE7  1D03               	skipz
  6708  0DE8  2DBB               	goto	l2596
  6709  0DE9  087C               	movf	___lmul@product+3,w
  6710  0DEA  00F3               	movwf	?___lmul+3
  6711  0DEB  087B               	movf	___lmul@product+2,w
  6712  0DEC  00F2               	movwf	?___lmul+2
  6713  0DED  087A               	movf	___lmul@product+1,w
  6714  0DEE  00F1               	movwf	?___lmul+1
  6715  0DEF  0879               	movf	___lmul@product,w
  6716  0DF0  00F0               	movwf	?___lmul
  6717  0DF1  0008               	return
  6718  0DF2                     __end_of___lmul:	
  6719                           
  6720                           	psect	text32
  6721  0EC3                     __ptext32:	
  6722 ;; *************** function ___awmod *****************
  6723 ;; Defined at:
  6724 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  divisor         2    7[BANK0 ] int 
  6727 ;;  dividend        2    9[BANK0 ] int 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;  sign            1   12[BANK0 ] unsigned char 
  6730 ;;  counter         1   11[BANK0 ] unsigned char 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  2    7[BANK0 ] int 
  6733 ;; Registers used:
  6734 ;;		wreg, status,2, status,0
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6740 ;;      Params:         0       4       0       0       0
  6741 ;;      Locals:         0       2       0       0       0
  6742 ;;      Temps:          1       0       0       0       0
  6743 ;;      Totals:         1       6       0       0       0
  6744 ;;Total ram usage:        7 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_char_info_index_rand
  6750 ;;		_USARTWriteInt
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           
  6755                           ;psect for function ___awmod
  6756  0EC3                     ___awmod:	
  6757                           
  6758                           ;incstack = 0
  6759                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6760  0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  6761  0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  6762  0EC5  01AC               	clrf	___awmod@sign
  6763  0EC6  1FAA               	btfss	___awmod@dividend+1,7
  6764  0EC7  2ECF               	goto	l2946
  6765  0EC8  09A9               	comf	___awmod@dividend,f
  6766  0EC9  09AA               	comf	___awmod@dividend+1,f
  6767  0ECA  0AA9               	incf	___awmod@dividend,f
  6768  0ECB  1903               	skipnz
  6769  0ECC  0AAA               	incf	___awmod@dividend+1,f
  6770  0ECD  01AC               	clrf	___awmod@sign
  6771  0ECE  0AAC               	incf	___awmod@sign,f
  6772  0ECF                     l2946:	
  6773  0ECF  1FA8               	btfss	___awmod@divisor+1,7
  6774  0ED0  2ED6               	goto	l2950
  6775  0ED1  09A7               	comf	___awmod@divisor,f
  6776  0ED2  09A8               	comf	___awmod@divisor+1,f
  6777  0ED3  0AA7               	incf	___awmod@divisor,f
  6778  0ED4  1903               	skipnz
  6779  0ED5  0AA8               	incf	___awmod@divisor+1,f
  6780  0ED6                     l2950:	
  6781  0ED6  0827               	movf	___awmod@divisor,w
  6782  0ED7  0428               	iorwf	___awmod@divisor+1,w
  6783  0ED8  1903               	btfsc	3,2
  6784  0ED9  2F03               	goto	l2968
  6785  0EDA  01AB               	clrf	___awmod@counter
  6786  0EDB  0AAB               	incf	___awmod@counter,f
  6787  0EDC                     l2958:	
  6788  0EDC  1BA8               	btfsc	___awmod@divisor+1,7
  6789  0EDD  2EEA               	goto	l2960
  6790  0EDE  3001               	movlw	1
  6791  0EDF                     u3705:	
  6792  0EDF  1003               	clrc
  6793  0EE0  0DA7               	rlf	___awmod@divisor,f
  6794  0EE1  0DA8               	rlf	___awmod@divisor+1,f
  6795  0EE2  3EFF               	addlw	-1
  6796  0EE3  1D03               	skipz
  6797  0EE4  2EDF               	goto	u3705
  6798  0EE5  3001               	movlw	1
  6799  0EE6  00FD               	movwf	??___awmod
  6800  0EE7  087D               	movf	??___awmod,w
  6801  0EE8  07AB               	addwf	___awmod@counter,f
  6802  0EE9  2EDC               	goto	l2958
  6803  0EEA                     l2960:	
  6804  0EEA  0828               	movf	___awmod@divisor+1,w
  6805  0EEB  022A               	subwf	___awmod@dividend+1,w
  6806  0EEC  1D03               	skipz
  6807  0EED  2EF0               	goto	u3725
  6808  0EEE  0827               	movf	___awmod@divisor,w
  6809  0EEF  0229               	subwf	___awmod@dividend,w
  6810  0EF0                     u3725:	
  6811  0EF0  1C03               	skipc
  6812  0EF1  2EF8               	goto	l2964
  6813  0EF2  0827               	movf	___awmod@divisor,w
  6814  0EF3  02A9               	subwf	___awmod@dividend,f
  6815  0EF4  0828               	movf	___awmod@divisor+1,w
  6816  0EF5  1C03               	skipc
  6817  0EF6  03AA               	decf	___awmod@dividend+1,f
  6818  0EF7  02AA               	subwf	___awmod@dividend+1,f
  6819  0EF8                     l2964:	
  6820  0EF8  3001               	movlw	1
  6821  0EF9                     u3735:	
  6822  0EF9  1003               	clrc
  6823  0EFA  0CA8               	rrf	___awmod@divisor+1,f
  6824  0EFB  0CA7               	rrf	___awmod@divisor,f
  6825  0EFC  3EFF               	addlw	-1
  6826  0EFD  1D03               	skipz
  6827  0EFE  2EF9               	goto	u3735
  6828  0EFF  3001               	movlw	1
  6829  0F00  02AB               	subwf	___awmod@counter,f
  6830  0F01  1D03               	btfss	3,2
  6831  0F02  2EEA               	goto	l2960
  6832  0F03                     l2968:	
  6833  0F03  082C               	movf	___awmod@sign,w
  6834  0F04  1903               	btfsc	3,2
  6835  0F05  2F0B               	goto	l2972
  6836  0F06  09A9               	comf	___awmod@dividend,f
  6837  0F07  09AA               	comf	___awmod@dividend+1,f
  6838  0F08  0AA9               	incf	___awmod@dividend,f
  6839  0F09  1903               	skipnz
  6840  0F0A  0AAA               	incf	___awmod@dividend+1,f
  6841  0F0B                     l2972:	
  6842  0F0B  082A               	movf	___awmod@dividend+1,w
  6843  0F0C  00A8               	movwf	?___awmod+1
  6844  0F0D  0829               	movf	___awmod@dividend,w
  6845  0F0E  00A7               	movwf	?___awmod
  6846  0F0F  0008               	return
  6847  0F10                     __end_of___awmod:	
  6848                           
  6849                           	psect	text33
  6850  0E35                     __ptext33:	
  6851 ;; *************** function _USARTInit *****************
  6852 ;; Defined at:
  6853 ;;		line 31 in file "usart_pic16.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  baud_rate       2    0[COMMON] unsigned int 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;		None
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      void 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6867 ;;      Params:         2       0       0       0       0
  6868 ;;      Locals:         0       0       0       0       0
  6869 ;;      Temps:          1       0       0       0       0
  6870 ;;      Totals:         3       0       0       0       0
  6871 ;;Total ram usage:        3 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; This function calls:
  6874 ;;		Nothing
  6875 ;; This function is called by:
  6876 ;;		_main
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           
  6880                           
  6881                           ;psect for function _USARTInit
  6882  0E35                     _USARTInit:	
  6883                           
  6884                           ;usart_pic16.c: 33: UQFront = UQEnd = -1;
  6885                           
  6886                           ;incstack = 0
  6887                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  6888  0E35  30FF               	movlw	255
  6889  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  6890  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  6891  0E38  00E2               	movwf	_UQEnd	;volatile
  6892  0E39  00F2               	movwf	??_USARTInit
  6893  0E3A  0872               	movf	??_USARTInit,w
  6894  0E3B  00E3               	movwf	_UQFront	;volatile
  6895                           
  6896                           ;usart_pic16.c: 36: switch (baud_rate) {
  6897  0E3C  2E48               	goto	l2988
  6898  0E3D                     l2978:	
  6899                           ;usart_pic16.c: 37: case 9600:
  6900                           
  6901                           
  6902                           ;usart_pic16.c: 38: SPBRG = 129;
  6903  0E3D  3081               	movlw	129
  6904  0E3E  2E44               	goto	L12
  6905  0E3F                     l2980:	
  6906                           ;usart_pic16.c: 40: case 19200:
  6907                           
  6908                           ;usart_pic16.c: 39: break;
  6909                           
  6910                           
  6911                           ;usart_pic16.c: 41: SPBRG = 64;
  6912  0E3F  3040               	movlw	64
  6913  0E40  2E44               	goto	L12
  6914  0E41                     l2982:	
  6915                           ;usart_pic16.c: 43: case 28800:
  6916                           
  6917                           ;usart_pic16.c: 42: break;
  6918                           
  6919                           
  6920                           ;usart_pic16.c: 44: SPBRG = 42;
  6921  0E41  302A               	movlw	42
  6922  0E42  2E44               	goto	L12
  6923  0E43                     l2984:	
  6924                           ;usart_pic16.c: 46: case 33600:
  6925                           
  6926                           ;usart_pic16.c: 45: break;
  6927                           
  6928                           
  6929                           ;usart_pic16.c: 47: SPBRG = 36;
  6930  0E43  3024               	movlw	36
  6931  0E44                     L12:	
  6932  0E44  1683               	bsf	3,5	;RP0=1, select bank1
  6933  0E45  1303               	bcf	3,6	;RP1=0, select bank1
  6934  0E46  0099               	movwf	25	;volatile
  6935                           
  6936                           ;usart_pic16.c: 49: }
  6937                           
  6938                           ;usart_pic16.c: 48: break;
  6939  0E47  2E6A               	goto	l29
  6940  0E48                     l2988:	
  6941                           
  6942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  6943                           ; Switch size 1, requested type "space"
  6944                           ; Number of cases is 4, Range of values is 37 to 131
  6945                           ; switch strategies available:
  6946                           ; Name         Instructions Cycles
  6947                           ; simple_byte           13     7 (average)
  6948                           ; jumptable            263     9 (fixed)
  6949                           ;	Chosen strategy is simple_byte
  6950  0E48  0871               	movf	USARTInit@baud_rate+1,w
  6951  0E49  3A25               	xorlw	37	; case 37
  6952  0E4A  1903               	skipnz
  6953  0E4B  2E56               	goto	l4498
  6954  0E4C  3A6E               	xorlw	110	; case 75
  6955  0E4D  1903               	skipnz
  6956  0E4E  2E5B               	goto	l4500
  6957  0E4F  3A3B               	xorlw	59	; case 112
  6958  0E50  1903               	skipnz
  6959  0E51  2E60               	goto	l4502
  6960  0E52  3AF3               	xorlw	243	; case 131
  6961  0E53  1903               	skipnz
  6962  0E54  2E65               	goto	l4504
  6963  0E55  2E6A               	goto	l29
  6964  0E56                     l4498:	
  6965                           
  6966                           ; Switch size 1, requested type "space"
  6967                           ; Number of cases is 1, Range of values is 128 to 128
  6968                           ; switch strategies available:
  6969                           ; Name         Instructions Cycles
  6970                           ; simple_byte            4     3 (average)
  6971                           ; direct_byte           14    11 (fixed)
  6972                           ; jumptable            263     9 (fixed)
  6973                           ;	Chosen strategy is simple_byte
  6974  0E56  0870               	movf	USARTInit@baud_rate,w
  6975  0E57  3A80               	xorlw	128	; case 128
  6976  0E58  1903               	skipnz
  6977  0E59  2E3D               	goto	l2978
  6978  0E5A  2E6A               	goto	l29
  6979  0E5B                     l4500:	
  6980                           
  6981                           ; Switch size 1, requested type "space"
  6982                           ; Number of cases is 1, Range of values is 0 to 0
  6983                           ; switch strategies available:
  6984                           ; Name         Instructions Cycles
  6985                           ; simple_byte            4     3 (average)
  6986                           ; direct_byte           11     8 (fixed)
  6987                           ; jumptable            260     6 (fixed)
  6988                           ;	Chosen strategy is simple_byte
  6989  0E5B  0870               	movf	USARTInit@baud_rate,w
  6990  0E5C  3A00               	xorlw	0	; case 0
  6991  0E5D  1903               	skipnz
  6992  0E5E  2E3F               	goto	l2980
  6993  0E5F  2E6A               	goto	l29
  6994  0E60                     l4502:	
  6995                           
  6996                           ; Switch size 1, requested type "space"
  6997                           ; Number of cases is 1, Range of values is 128 to 128
  6998                           ; switch strategies available:
  6999                           ; Name         Instructions Cycles
  7000                           ; simple_byte            4     3 (average)
  7001                           ; direct_byte           14    11 (fixed)
  7002                           ; jumptable            263     9 (fixed)
  7003                           ;	Chosen strategy is simple_byte
  7004  0E60  0870               	movf	USARTInit@baud_rate,w
  7005  0E61  3A80               	xorlw	128	; case 128
  7006  0E62  1903               	skipnz
  7007  0E63  2E41               	goto	l2982
  7008  0E64  2E6A               	goto	l29
  7009  0E65                     l4504:	
  7010                           
  7011                           ; Switch size 1, requested type "space"
  7012                           ; Number of cases is 1, Range of values is 64 to 64
  7013                           ; switch strategies available:
  7014                           ; Name         Instructions Cycles
  7015                           ; simple_byte            4     3 (average)
  7016                           ; direct_byte           14    11 (fixed)
  7017                           ; jumptable            263     9 (fixed)
  7018                           ;	Chosen strategy is simple_byte
  7019  0E65  0870               	movf	USARTInit@baud_rate,w
  7020  0E66  3A40               	xorlw	64	; case 64
  7021  0E67  1903               	skipnz
  7022  0E68  2E43               	goto	l2984
  7023  0E69  2E6A               	goto	l29
  7024  0E6A                     l29:	
  7025                           
  7026                           ;usart_pic16.c: 52: TXSTAbits.TX9 = 0;
  7027  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  7028  0E6B  1303               	bcf	3,6	;RP1=0, select bank1
  7029  0E6C  1318               	bcf	24,6	;volatile
  7030                           
  7031                           ;usart_pic16.c: 53: TXSTAbits.TXEN = 1;
  7032  0E6D  1698               	bsf	24,5	;volatile
  7033                           
  7034                           ;usart_pic16.c: 54: TXSTAbits.SYNC = 0;
  7035  0E6E  1218               	bcf	24,4	;volatile
  7036                           
  7037                           ;usart_pic16.c: 55: TXSTAbits.BRGH = 1;
  7038  0E6F  1518               	bsf	24,2	;volatile
  7039                           
  7040                           ;usart_pic16.c: 58: RCSTAbits.SPEN = 1;
  7041  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  7042  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  7043  0E72  1798               	bsf	24,7	;volatile
  7044                           
  7045                           ;usart_pic16.c: 59: RCSTAbits.RX9 = 0;
  7046  0E73  1318               	bcf	24,6	;volatile
  7047                           
  7048                           ;usart_pic16.c: 60: RCSTAbits.CREN = 1;
  7049  0E74  1618               	bsf	24,4	;volatile
  7050                           
  7051                           ;usart_pic16.c: 61: RCSTAbits.ADDEN = 0;
  7052  0E75  1198               	bcf	24,3	;volatile
  7053                           
  7054                           ;usart_pic16.c: 64: RCIE = 1;
  7055  0E76  1683               	bsf	3,5	;RP0=1, select bank1
  7056  0E77  1303               	bcf	3,6	;RP1=0, select bank1
  7057  0E78  168C               	bsf	12,5	;volatile
  7058                           
  7059                           ;usart_pic16.c: 65: PEIE = 1;
  7060  0E79  170B               	bsf	11,6	;volatile
  7061                           
  7062                           ;usart_pic16.c: 67: (GIE = 1);
  7063  0E7A  178B               	bsf	11,7	;volatile
  7064  0E7B  0008               	return
  7065  0E7C                     __end_of_USARTInit:	
  7066                           
  7067                           	psect	text34
  7068  0B88                     __ptext34:	
  7069 ;; *************** function _Clear_Matrix *****************
  7070 ;; Defined at:
  7071 ;;		line 607 in file "teris_16f886.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7085 ;;      Params:         0       0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0
  7088 ;;      Totals:         0       0       0       0       0
  7089 ;;Total ram usage:        0 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:    5
  7092 ;; This function calls:
  7093 ;;		_memset
  7094 ;;		_printf_Screen
  7095 ;; This function is called by:
  7096 ;;		_main
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _Clear_Matrix
  7102  0B88                     _Clear_Matrix:	
  7103                           
  7104                           ;teris_16f886.c: 609: memset(&g_matrix88, 0, sizeof(MATRIX88));
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in _Clear_Matrix: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7108  0B88  3000               	movlw	0
  7109  0B89  00F0               	movwf	memset@c
  7110  0B8A  00F1               	movwf	memset@c+1
  7111  0B8B  3040               	movlw	64
  7112  0B8C  00F2               	movwf	memset@n
  7113  0B8D  3000               	movlw	0
  7114  0B8E  00F3               	movwf	memset@n+1
  7115  0B8F  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  7116  0B90  120A  158A  2423  120A  158A  	fcall	_memset
  7117                           
  7118                           ;teris_16f886.c: 610: printf_Screen();
  7119  0B95  120A  158A  235D   	fcall	_printf_Screen
  7120  0B98  0008               	return
  7121  0B99                     __end_of_Clear_Matrix:	
  7122                           
  7123                           	psect	text35
  7124  0B5D                     __ptext35:	
  7125 ;; *************** function _printf_Screen *****************
  7126 ;; Defined at:
  7127 ;;		line 591 in file "teris_16f886.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7141 ;;      Params:         0       0       0       0       0
  7142 ;;      Locals:         0       0       0       0       0
  7143 ;;      Temps:          0       0       0       0       0
  7144 ;;      Totals:         0       0       0       0       0
  7145 ;;Total ram usage:        0 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    4
  7148 ;; This function calls:
  7149 ;;		_printf_MATRIX88
  7150 ;; This function is called by:
  7151 ;;		_Clear_Matrix
  7152 ;;		_main
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           
  7157                           ;psect for function _printf_Screen
  7158  0B5D                     _printf_Screen:	
  7159                           
  7160                           ;teris_16f886.c: 593: printf_MATRIX88(&g_matrix88);
  7161                           
  7162                           ;incstack = 0
  7163                           ; Regs used in _printf_Screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7164  0B5D  30B0               	movlw	(low (_g_matrix88| (0+256)))& (0+255)
  7165  0B5E  120A  158A  23DE   	fcall	_printf_MATRIX88
  7166  0B61  0008               	return
  7167  0B62                     __end_of_printf_Screen:	
  7168                           
  7169                           	psect	text36
  7170  0BDE                     __ptext36:	
  7171 ;; *************** function _printf_MATRIX88 *****************
  7172 ;; Defined at:
  7173 ;;		line 564 in file "teris_16f886.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  matrix88        1    wreg     PTR const struct .
  7176 ;;		 -> g_matrix88(64), 
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;  matrix88        1    0[BANK0 ] PTR const struct .
  7179 ;;		 -> g_matrix88(64), 
  7180 ;;  matrix7219      8    1[BANK0 ] struct .
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  1    wreg      void 
  7183 ;; Registers used:
  7184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7190 ;;      Params:         0       0       0       0       0
  7191 ;;      Locals:         0       9       0       0       0
  7192 ;;      Temps:          1       0       0       0       0
  7193 ;;      Totals:         1       9       0       0       0
  7194 ;;Total ram usage:       10 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; Hardware stack levels required when called:    3
  7197 ;; This function calls:
  7198 ;;		_MATRIX88_to_MATRIX7219
  7199 ;;		_printf_MATRIX7219
  7200 ;; This function is called by:
  7201 ;;		_printf_Screen
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           
  7206                           ;psect for function _printf_MATRIX88
  7207  0BDE                     _printf_MATRIX88:	
  7208                           
  7209                           ;incstack = 0
  7210                           ; Regs used in _printf_MATRIX88: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7211                           ;printf_MATRIX88@matrix88 stored from wreg
  7212  0BDE  1283               	bcf	3,5	;RP0=0, select bank0
  7213  0BDF  1303               	bcf	3,6	;RP1=0, select bank0
  7214  0BE0  00A0               	movwf	printf_MATRIX88@matrix88
  7215                           
  7216                           ;teris_16f886.c: 586: MATRIX7219 matrix7219;
  7217                           ;teris_16f886.c: 587: MATRIX88_to_MATRIX7219(matrix88, &matrix7219);
  7218  0BE1  3021               	movlw	(low (printf_MATRIX88@matrix7219| 0))& (0+255)
  7219  0BE2  00FA               	movwf	??_printf_MATRIX88
  7220  0BE3  087A               	movf	??_printf_MATRIX88,w
  7221  0BE4  00F0               	movwf	MATRIX88_to_MATRIX7219@matrix7219
  7222  0BE5  0820               	movf	printf_MATRIX88@matrix88,w
  7223  0BE6  120A  118A  2006  120A  158A  	fcall	_MATRIX88_to_MATRIX7219
  7224                           
  7225                           ;teris_16f886.c: 588: printf_MATRIX7219(&matrix7219);
  7226  0BEB  3021               	movlw	(low (printf_MATRIX88@matrix7219| 0))& (0+255)
  7227  0BEC  120A  158A  243F   	fcall	_printf_MATRIX7219
  7228  0BEF  0008               	return
  7229  0BF0                     __end_of_printf_MATRIX88:	
  7230                           
  7231                           	psect	text37
  7232  0C3F                     __ptext37:	
  7233 ;; *************** function _printf_MATRIX7219 *****************
  7234 ;; Defined at:
  7235 ;;		line 551 in file "teris_16f886.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  matrix          1    wreg     PTR const struct .
  7238 ;;		 -> printf_MATRIX88@matrix7219(8), 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;  matrix          1    8[COMMON] PTR const struct .
  7241 ;;		 -> printf_MATRIX88@matrix7219(8), 
  7242 ;;  col             1    9[COMMON] unsigned char 
  7243 ;; Return value:  Size  Location     Type
  7244 ;;                  1    wreg      void 
  7245 ;; Registers used:
  7246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7247 ;; Tracked objects:
  7248 ;;		On entry : 0/0
  7249 ;;		On exit  : 0/0
  7250 ;;		Unchanged: 0/0
  7251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7252 ;;      Params:         0       0       0       0       0
  7253 ;;      Locals:         2       0       0       0       0
  7254 ;;      Temps:          2       0       0       0       0
  7255 ;;      Totals:         4       0       0       0       0
  7256 ;;Total ram usage:        4 bytes
  7257 ;; Hardware stack levels used:    1
  7258 ;; Hardware stack levels required when called:    2
  7259 ;; This function calls:
  7260 ;;		_Write_Byte
  7261 ;; This function is called by:
  7262 ;;		_printf_MATRIX88
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           
  7267                           ;psect for function _printf_MATRIX7219
  7268  0C3F                     _printf_MATRIX7219:	
  7269                           
  7270                           ;incstack = 0
  7271                           ; Regs used in _printf_MATRIX7219: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7272                           ;printf_MATRIX7219@matrix stored from wreg
  7273  0C3F  00F8               	movwf	printf_MATRIX7219@matrix
  7274                           
  7275                           ;teris_16f886.c: 553: uint8_t col;
  7276                           ;teris_16f886.c: 555: for (col = 0; col < 8; col++)
  7277  0C40  01F9               	clrf	printf_MATRIX7219@col
  7278  0C41                     L13:	
  7279  0C41  3008               	movlw	8
  7280  0C42  0279               	subwf	printf_MATRIX7219@col,w
  7281  0C43  1803               	btfsc	3,0
  7282  0C44  0008               	return
  7283                           
  7284                           ;teris_16f886.c: 556: {
  7285                           ;teris_16f886.c: 557: Write_Byte(col + 1, matrix->col[col]);
  7286  0C45  0879               	movf	printf_MATRIX7219@col,w
  7287  0C46  0778               	addwf	printf_MATRIX7219@matrix,w
  7288  0C47  00F6               	movwf	??_printf_MATRIX7219
  7289  0C48  0876               	movf	??_printf_MATRIX7219,w
  7290  0C49  0084               	movwf	4
  7291  0C4A  1383               	bcf	3,7	;select IRP bank0
  7292  0C4B  0800               	movf	0,w
  7293  0C4C  00F7               	movwf	??_printf_MATRIX7219+1
  7294  0C4D  0877               	movf	??_printf_MATRIX7219+1,w
  7295  0C4E  00F4               	movwf	Write_Byte@myValue
  7296  0C4F  0879               	movf	printf_MATRIX7219@col,w
  7297  0C50  3E01               	addlw	1
  7298  0C51  120A  158A  23CC  120A  158A  	fcall	_Write_Byte
  7299  0C56  3001               	movlw	1
  7300  0C57  00F6               	movwf	??_printf_MATRIX7219
  7301  0C58  0876               	movf	??_printf_MATRIX7219,w
  7302  0C59  07F9               	addwf	printf_MATRIX7219@col,f
  7303  0C5A  2C41               	goto	L13
  7304  0C5B                     __end_of_printf_MATRIX7219:	
  7305                           
  7306                           	psect	text38
  7307  0BCC                     __ptext38:	
  7308 ;; *************** function _Write_Byte *****************
  7309 ;; Defined at:
  7310 ;;		line 466 in file "teris_16f886.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;  myColumn        1    wreg     unsigned char 
  7313 ;;  myValue         1    4[COMMON] unsigned char 
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;  myColumn        1    5[COMMON] unsigned char 
  7316 ;; Return value:  Size  Location     Type
  7317 ;;                  1    wreg      void 
  7318 ;; Registers used:
  7319 ;;		wreg, status,2, status,0, pclath, cstack
  7320 ;; Tracked objects:
  7321 ;;		On entry : 0/0
  7322 ;;		On exit  : 0/0
  7323 ;;		Unchanged: 0/0
  7324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7325 ;;      Params:         1       0       0       0       0
  7326 ;;      Locals:         1       0       0       0       0
  7327 ;;      Temps:          0       0       0       0       0
  7328 ;;      Totals:         2       0       0       0       0
  7329 ;;Total ram usage:        2 bytes
  7330 ;; Hardware stack levels used:    1
  7331 ;; Hardware stack levels required when called:    1
  7332 ;; This function calls:
  7333 ;;		_SPI1_write
  7334 ;; This function is called by:
  7335 ;;		_printf_MATRIX7219
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           
  7340                           ;psect for function _Write_Byte
  7341  0BCC                     _Write_Byte:	
  7342                           
  7343                           ;incstack = 0
  7344                           ; Regs used in _Write_Byte: [wreg+status,2+status,0+pclath+cstack]
  7345                           ;Write_Byte@myColumn stored from wreg
  7346  0BCC  00F5               	movwf	Write_Byte@myColumn
  7347                           
  7348                           ;teris_16f886.c: 467: RA2 = 0;
  7349  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  7350  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  7351  0BCF  1105               	bcf	5,2	;volatile
  7352                           
  7353                           ;teris_16f886.c: 468: SPI1_write(myColumn);
  7354  0BD0  0875               	movf	Write_Byte@myColumn,w
  7355  0BD1  120A  158A  2556  120A  158A  	fcall	_SPI1_write
  7356                           
  7357                           ;teris_16f886.c: 469: SPI1_write(myValue);
  7358  0BD6  0874               	movf	Write_Byte@myValue,w
  7359  0BD7  120A  158A  2556   	fcall	_SPI1_write
  7360                           
  7361                           ;teris_16f886.c: 470: RA2 = 1;
  7362  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  7363  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  7364  0BDC  1505               	bsf	5,2	;volatile
  7365  0BDD  0008               	return
  7366  0BDE                     __end_of_Write_Byte:	
  7367                           
  7368                           	psect	text39
  7369  0D56                     __ptext39:	
  7370 ;; *************** function _SPI1_write *****************
  7371 ;; Defined at:
  7372 ;;		line 412 in file "teris_16f886.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  data            1    wreg     unsigned char 
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;  data            1    1[COMMON] unsigned char 
  7377 ;;  i               1    3[COMMON] unsigned char 
  7378 ;;  mask            1    2[COMMON] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7388 ;;      Params:         0       0       0       0       0
  7389 ;;      Locals:         3       0       0       0       0
  7390 ;;      Temps:          1       0       0       0       0
  7391 ;;      Totals:         4       0       0       0       0
  7392 ;;Total ram usage:        4 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_max7219_init1
  7398 ;;		_Write_Byte
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           
  7403                           ;psect for function _SPI1_write
  7404  0D56                     _SPI1_write:	
  7405                           
  7406                           ;incstack = 0
  7407                           ; Regs used in _SPI1_write: [wreg+status,2+status,0]
  7408                           ;SPI1_write@data stored from wreg
  7409  0D56  00F1               	movwf	SPI1_write@data
  7410                           
  7411                           ;teris_16f886.c: 414: uint8_t mask = 0b10000000;
  7412  0D57  3080               	movlw	128
  7413  0D58  00F0               	movwf	??_SPI1_write
  7414  0D59  0870               	movf	??_SPI1_write,w
  7415  0D5A  00F2               	movwf	SPI1_write@mask
  7416                           
  7417                           ;teris_16f886.c: 415: for(uint8_t i = 0; i < 8; i++)
  7418  0D5B  01F3               	clrf	SPI1_write@i
  7419  0D5C                     L14:	
  7420  0D5C  3008               	movlw	8
  7421  0D5D  0273               	subwf	SPI1_write@i,w
  7422  0D5E  1803               	btfsc	3,0
  7423  0D5F  0008               	return
  7424                           
  7425                           ;teris_16f886.c: 416: {
  7426                           ;teris_16f886.c: 417: if((data & mask) > 0)
  7427  0D60  0871               	movf	SPI1_write@data,w
  7428  0D61  0572               	andwf	SPI1_write@mask,w
  7429  0D62  1903               	btfsc	3,2
  7430  0D63  2D68               	goto	l201
  7431                           
  7432                           ;teris_16f886.c: 418: {
  7433                           ;teris_16f886.c: 419: RA3 = 1;
  7434  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  7435  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  7436  0D66  1585               	bsf	5,3	;volatile
  7437                           
  7438                           ;teris_16f886.c: 421: }
  7439  0D67  2D6B               	goto	l2378
  7440  0D68                     l201:	
  7441                           
  7442                           ;teris_16f886.c: 422: else
  7443                           ;teris_16f886.c: 423: {
  7444                           ;teris_16f886.c: 424: RA3 = 0;
  7445  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  7446  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  7447  0D6A  1185               	bcf	5,3	;volatile
  7448  0D6B                     l2378:	
  7449                           
  7450                           ;teris_16f886.c: 426: }
  7451                           ;teris_16f886.c: 427: mask >>= 1;
  7452  0D6B  1003               	clrc
  7453  0D6C  0CF2               	rrf	SPI1_write@mask,f
  7454                           
  7455                           ;teris_16f886.c: 428: RA1 = 1;
  7456  0D6D  1485               	bsf	5,1	;volatile
  7457                           
  7458                           ;teris_16f886.c: 429: _delay((unsigned long)((10)*(20000000/4000000.0)));
  7459  0D6E  3010               	movlw	16
  7460  0D6F  00F0               	movwf	??_SPI1_write
  7461  0D70                     u6197:	
  7462  0D70  0BF0               	decfsz	??_SPI1_write,f
  7463  0D71  2D70               	goto	u6197
  7464  0D72  0000               	nop
  7465                           
  7466                           ;teris_16f886.c: 430: RA1 = 0;
  7467  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  7468  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  7469  0D75  1085               	bcf	5,1	;volatile
  7470                           
  7471                           ;teris_16f886.c: 431: _delay((unsigned long)((10)*(20000000/4000000.0)));
  7472  0D76  3010               	movlw	16
  7473  0D77  00F0               	movwf	??_SPI1_write
  7474  0D78                     u6207:	
  7475  0D78  0BF0               	decfsz	??_SPI1_write,f
  7476  0D79  2D78               	goto	u6207
  7477  0D7A  0000               	nop
  7478  0D7B  3001               	movlw	1
  7479  0D7C  00F0               	movwf	??_SPI1_write
  7480  0D7D  0870               	movf	??_SPI1_write,w
  7481  0D7E  07F3               	addwf	SPI1_write@i,f
  7482  0D7F  2D5C               	goto	L14
  7483  0D80                     __end_of_SPI1_write:	
  7484                           
  7485                           	psect	text40
  7486  0006                     __ptext40:	
  7487 ;; *************** function _MATRIX88_to_MATRIX7219 *****************
  7488 ;; Defined at:
  7489 ;;		line 473 in file "teris_16f886.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  matrix88        1    wreg     PTR const struct .
  7492 ;;		 -> g_matrix88(64), 
  7493 ;;  matrix7219      1    0[COMMON] PTR struct .
  7494 ;;		 -> printf_MATRIX88@matrix7219(8), 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  matrix88        1    4[COMMON] PTR const struct .
  7497 ;;		 -> g_matrix88(64), 
  7498 ;;  row             1    6[COMMON] unsigned char 
  7499 ;;  col             1    7[COMMON] unsigned char 
  7500 ;;  mask            1    5[COMMON] unsigned char 
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  1    wreg      void 
  7503 ;; Registers used:
  7504 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7510 ;;      Params:         1       0       0       0       0
  7511 ;;      Locals:         4       0       0       0       0
  7512 ;;      Temps:          3       0       0       0       0
  7513 ;;      Totals:         8       0       0       0       0
  7514 ;;Total ram usage:        8 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; This function calls:
  7517 ;;		Nothing
  7518 ;; This function is called by:
  7519 ;;		_printf_MATRIX88
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           
  7524                           ;psect for function _MATRIX88_to_MATRIX7219
  7525  0006                     _MATRIX88_to_MATRIX7219:	
  7526                           
  7527                           ;incstack = 0
  7528                           ; Regs used in _MATRIX88_to_MATRIX7219: [wreg-fsr0h+status,2+status,0]
  7529                           ;MATRIX88_to_MATRIX7219@matrix88 stored from wreg
  7530  0006  00F4               	movwf	MATRIX88_to_MATRIX7219@matrix88
  7531                           
  7532                           ;teris_16f886.c: 475: uint8_t mask = 0x80;
  7533  0007  3080               	movlw	128
  7534  0008  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7535  0009  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7536  000A  00F5               	movwf	MATRIX88_to_MATRIX7219@mask
  7537                           
  7538                           ;teris_16f886.c: 477: for(uint8_t col = 0; col < 8; col++)
  7539  000B  01F7               	clrf	MATRIX88_to_MATRIX7219@col
  7540  000C                     L15:	
  7541  000C  3008               	movlw	8
  7542  000D  0277               	subwf	MATRIX88_to_MATRIX7219@col,w
  7543  000E  1803               	btfsc	3,0
  7544  000F  0008               	return
  7545                           
  7546                           ;teris_16f886.c: 478: {
  7547                           ;teris_16f886.c: 479: mask = 0x80;
  7548  0010  3080               	movlw	128
  7549  0011  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7550  0012  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7551  0013  00F5               	movwf	MATRIX88_to_MATRIX7219@mask
  7552                           
  7553                           ;teris_16f886.c: 480: matrix7219->col[col] = 0;
  7554  0014  0877               	movf	MATRIX88_to_MATRIX7219@col,w
  7555  0015  0770               	addwf	MATRIX88_to_MATRIX7219@matrix7219,w
  7556  0016  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7557  0017  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7558  0018  0084               	movwf	4
  7559  0019  1383               	bcf	3,7	;select IRP bank0
  7560  001A  0180               	clrf	0
  7561                           
  7562                           ;teris_16f886.c: 481: for(uint8_t row = 0; row < 8; row++)
  7563  001B  01F6               	clrf	MATRIX88_to_MATRIX7219@row
  7564  001C  3008               	movlw	8
  7565  001D  0276               	subwf	MATRIX88_to_MATRIX7219@row,w
  7566  001E  1803               	btfsc	3,0
  7567  001F  2849               	goto	l2426
  7568  0020                     l2416:	
  7569                           
  7570                           ;teris_16f886.c: 482: {
  7571                           ;teris_16f886.c: 483: if(matrix88->data[row][col] == 1)
  7572  0020  0876               	movf	MATRIX88_to_MATRIX7219@row,w
  7573  0021  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7574  0022  3002               	movlw	2
  7575  0023                     u2405:	
  7576  0023  1003               	clrc
  7577  0024  0DF1               	rlf	??_MATRIX88_to_MATRIX7219,f
  7578  0025  3EFF               	addlw	-1
  7579  0026  1D03               	skipz
  7580  0027  2823               	goto	u2405
  7581  0028  1003               	clrc
  7582  0029  0D71               	rlf	??_MATRIX88_to_MATRIX7219,w
  7583  002A  0774               	addwf	MATRIX88_to_MATRIX7219@matrix88,w
  7584  002B  00F2               	movwf	??_MATRIX88_to_MATRIX7219+1
  7585  002C  0877               	movf	MATRIX88_to_MATRIX7219@col,w
  7586  002D  0772               	addwf	??_MATRIX88_to_MATRIX7219+1,w
  7587  002E  00F3               	movwf	??_MATRIX88_to_MATRIX7219+2
  7588  002F  0873               	movf	??_MATRIX88_to_MATRIX7219+2,w
  7589  0030  0084               	movwf	4
  7590  0031  1783               	bsf	3,7	;select IRP bank2
  7591  0032  0300               	decf	0,w
  7592  0033  1D03               	btfss	3,2
  7593  0034  283F               	goto	l2420
  7594                           
  7595                           ;teris_16f886.c: 484: {
  7596                           ;teris_16f886.c: 485: matrix7219->col[col] |= mask;
  7597  0035  0875               	movf	MATRIX88_to_MATRIX7219@mask,w
  7598  0036  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7599  0037  0877               	movf	MATRIX88_to_MATRIX7219@col,w
  7600  0038  0770               	addwf	MATRIX88_to_MATRIX7219@matrix7219,w
  7601  0039  00F2               	movwf	??_MATRIX88_to_MATRIX7219+1
  7602  003A  0872               	movf	??_MATRIX88_to_MATRIX7219+1,w
  7603  003B  0084               	movwf	4
  7604  003C  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7605  003D  1383               	bcf	3,7	;select IRP bank0
  7606  003E  0480               	iorwf	0,f
  7607  003F                     l2420:	
  7608                           
  7609                           ;teris_16f886.c: 486: }
  7610                           ;teris_16f886.c: 487: mask >>= 1;
  7611  003F  1003               	clrc
  7612  0040  0CF5               	rrf	MATRIX88_to_MATRIX7219@mask,f
  7613  0041  3001               	movlw	1
  7614  0042  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7615  0043  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7616  0044  07F6               	addwf	MATRIX88_to_MATRIX7219@row,f
  7617  0045  3008               	movlw	8
  7618  0046  0276               	subwf	MATRIX88_to_MATRIX7219@row,w
  7619  0047  1C03               	skipc
  7620  0048  2820               	goto	l2416
  7621  0049                     l2426:	
  7622  0049  3001               	movlw	1
  7623  004A  00F1               	movwf	??_MATRIX88_to_MATRIX7219
  7624  004B  0871               	movf	??_MATRIX88_to_MATRIX7219,w
  7625  004C  07F7               	addwf	MATRIX88_to_MATRIX7219@col,f
  7626  004D  280C               	goto	L15
  7627  004E                     __end_of_MATRIX88_to_MATRIX7219:	
  7628                           
  7629                           	psect	text41
  7630  0C23                     __ptext41:	
  7631 ;; *************** function _memset *****************
  7632 ;; Defined at:
  7633 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\memset.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;  p1              1    wreg     PTR void 
  7636 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  7637 ;;  c               2    0[COMMON] int 
  7638 ;;  n               2    2[COMMON] unsigned int 
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  p1              1    6[COMMON] PTR void 
  7641 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  7642 ;;  p               1    5[COMMON] PTR unsigned char 
  7643 ;;		 -> temp_matrix88.data(64), temp_matrix88(64), g_matrix88.data(64), g_matrix88(64), 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      PTR void 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7653 ;;      Params:         4       0       0       0       0
  7654 ;;      Locals:         2       0       0       0       0
  7655 ;;      Temps:          1       0       0       0       0
  7656 ;;      Totals:         7       0       0       0       0
  7657 ;;Total ram usage:        7 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_Clear_Matrix
  7663 ;;		_delete_row
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           
  7668                           ;psect for function _memset
  7669  0C23                     _memset:	
  7670                           
  7671                           ;incstack = 0
  7672                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  7673                           ;memset@p1 stored from wreg
  7674  0C23  00F6               	movwf	memset@p1
  7675  0C24  0876               	movf	memset@p1,w
  7676  0C25  00F4               	movwf	??_memset
  7677  0C26  0874               	movf	??_memset,w
  7678  0C27  00F5               	movwf	memset@p
  7679  0C28                     l2448:	
  7680  0C28  3001               	movlw	1
  7681  0C29  02F2               	subwf	memset@n,f
  7682  0C2A  3000               	movlw	0
  7683  0C2B  1C03               	skipc
  7684  0C2C  03F3               	decf	memset@n+1,f
  7685  0C2D  02F3               	subwf	memset@n+1,f
  7686  0C2E  0A72               	incf	memset@n,w
  7687  0C2F  1903               	btfsc	3,2
  7688  0C30  0A73               	incf	memset@n+1,w
  7689  0C31  1903               	btfsc	3,2
  7690  0C32  0008               	return
  7691  0C33  0870               	movf	memset@c,w
  7692  0C34  00F4               	movwf	??_memset
  7693  0C35  0875               	movf	memset@p,w
  7694  0C36  0084               	movwf	4
  7695  0C37  0874               	movf	??_memset,w
  7696  0C38  1783               	bsf	3,7	;select IRP bank2
  7697  0C39  0080               	movwf	0
  7698  0C3A  3001               	movlw	1
  7699  0C3B  00F4               	movwf	??_memset
  7700  0C3C  0874               	movf	??_memset,w
  7701  0C3D  07F5               	addwf	memset@p,f
  7702  0C3E  2C28               	goto	l2448
  7703  0C3F                     __end_of_memset:	
  7704                           ;	Return value of _memset is never used
  7705                           
  7706  007E                     btemp	set	126	;btemp
  7707  007E                     wtemp	set	126
  7708  007E                     wtemp0	set	126
  7709  0080                     wtemp1	set	128
  7710  0082                     wtemp2	set	130
  7711  0084                     wtemp3	set	132
  7712  0086                     wtemp4	set	134
  7713  0088                     wtemp5	set	136
  7714  007F                     wtemp6	set	127
  7715  007E                     ttemp	set	126
  7716  007E                     ttemp0	set	126
  7717  0081                     ttemp1	set	129
  7718  0084                     ttemp2	set	132
  7719  0087                     ttemp3	set	135
  7720  007F                     ttemp4	set	127
  7721  007E                     ltemp	set	126
  7722  007E                     ltemp0	set	126
  7723  0082                     ltemp1	set	130
  7724  0086                     ltemp2	set	134
  7725  0080                     ltemp3	set	128


Data Sizes:
    Strings     191
    Constant    414
    Data        32
    BSS         203
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      68
    BANK1            80      0      59
    BANK3            96      0      96
    BANK2            96      0      64

Pointer List with Targets:

    is_right_boundary@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    is_left_boundary@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    memset@p1	PTR void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memset@p	PTR unsigned char  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@d1	PTR void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@s1	PTR const void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    g_cur_matrix44	PTR struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    temp_cur_matrix44	PTR struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    get_holes_after_merge@matrix	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    get_high_after_merge@matrix	PTR struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    get_high@matrix	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    right_most@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    right_most@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    left_most@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    left_most@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    evaluate@matrix	PTR const struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    merge1@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    merge1@matrix88_in	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    merge1@matrix88_out	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), 

    merge@matrix88	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    merge@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    clear@matrix88	PTR struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    clear@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    fall_off@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    fall_off@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_right_boundary@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_left_boundary@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_valid@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    is_valid@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    hit_land@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    hit_land@matrix44	PTR const struct . size(2) Largest target is 384
		 -> NULL(NULL[0]), g_matrix44(CODE[384]), 

    is_row_empty@matrix	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    delete_matrix@matrix	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88(BANK3[64]), 

    sp__memcpy	PTR void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    delete_row@matrix	PTR struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88(BANK3[64]), 

    is_row_full@matrix	PTR const struct . size(1) Largest target is 64
		 -> temp_matrix88(BANK2[64]), g_matrix88(BANK3[64]), 

    sp__memset	PTR void  size(1) Largest target is 64
		 -> temp_matrix88.data(BANK2[64]), temp_matrix88(BANK2[64]), g_matrix88.data(BANK3[64]), g_matrix88(BANK3[64]), 

    printf_MATRIX88@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    printf_MATRIX7219@matrix	PTR const struct . size(1) Largest target is 8
		 -> printf_MATRIX88@matrix7219(BANK0[8]), 

    printf_debug_MATRIX88@matrix	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    printf_debug_MATRIX88@lable	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_22(CODE[12]), ROM(CODE[8192]), 

    MATRIX88_to_MATRIX7219@matrix88	PTR const struct . size(1) Largest target is 64
		 -> g_matrix88(BANK3[64]), 

    MATRIX88_to_MATRIX7219@matrix7219	PTR struct . size(1) Largest target is 8
		 -> printf_MATRIX88@matrix7219(BANK0[8]), 

    sp__get_MATRIX44	PTR struct . size(2) Largest target is 384
		 -> g_matrix44(CODE[384]), 

    debug_line@str	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_21(CODE[2]), STR_20(CODE[21]), STR_19(CODE[1]), STR_16(CODE[29]), 
		 -> STR_15(CODE[2]), STR_12(CODE[20]), STR_11(CODE[2]), STR_10(CODE[21]), 
		 -> STR_9(CODE[1]), STR_6(CODE[29]), STR_5(CODE[2]), 

    debug_str@str	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_22(CODE[12]), STR_18(CODE[2]), STR_17(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), ROM(CODE[8192]), 

    USARTWriteString@str	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_22(CODE[12]), STR_21(CODE[2]), STR_20(CODE[21]), STR_19(CODE[1]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[29]), STR_15(CODE[2]), 
		 -> STR_12(CODE[20]), STR_11(CODE[2]), STR_10(CODE[21]), STR_9(CODE[1]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[29]), STR_5(CODE[2]), 
		 -> ROM(CODE[8192]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> g_debug(BANK1[32]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _printf_debug_MATRIX88->_debug_line
    _printf_debug_MATRIX88->_debug_str
    _debug_str->_USARTWriteString
    _debug_line->_USARTWriteString
    _USARTWriteString->_USARTWriteChar
    _max7219_init1->_SPI1_write
    _find_best_solution->_left_most
    _find_best_solution->_right_most
    _right_most->_is_right_boundary
    _merge1->_memcpy
    _left_most->_is_left_boundary
    _get_high->_is_row_empty
    _delete_matrix->_delete_row
    _delete_row->_memcpy
    _delete_row->_memset
    _char_info_index_rand->___awmod
    _rand->___lmul
    _printf_Screen->_printf_MATRIX88
    _printf_MATRIX88->_printf_MATRIX7219
    _printf_MATRIX7219->_Write_Byte
    _Write_Byte->_SPI1_write

Critical Paths under _main in BANK0

    _main->_find_best_solution
    _find_best_solution->_merge1
    _delete_matrix->_delete_row
    _char_info_index_rand->___awmod
    ___awmod->_rand
    _printf_Screen->_printf_MATRIX88

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    12      4   17485
                                             34 BANK0     16    12      4
                       _Clear_Matrix
                          _USARTInit
                             ___bmul
               _char_info_index_rand
                              _clear
                      _delete_matrix
                 _find_best_solution
                           _hit_land
                      _max7219_init1
                              _merge
                      _printf_Screen
              _printf_debug_MATRIX88
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _printf_debug_MATRIX88                                8     5      3    2659
                                              5 COMMON     8     5      3
                         _debug_line
                          _debug_str
 ---------------------------------------------------------------------------------
 (2) _debug_str                                            2     0      2    1043
                                              3 COMMON     2     0      2
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (2) _debug_line                                           2     0      2    1202
                                              3 COMMON     2     0      2
                   _USARTWriteString
 ---------------------------------------------------------------------------------
 (3) _USARTWriteString                                     2     0      2     597
                                              1 COMMON     2     0      2
                     _USARTWriteChar
 ---------------------------------------------------------------------------------
 (4) _USARTWriteChar                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _merge                                               11     7      4     427
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _max7219_init1                                        0     0      0      92
                         _SPI1_write
 ---------------------------------------------------------------------------------
 (2) _hit_land                                            11     7      4     471
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _find_best_solution                                  25    25      0    8730
                                              9 BANK0     25    25      0
                             ___bmul
                      _delete_matrix
                           _evaluate
                           _fall_off
                           _get_high
               _get_high_after_merge
              _get_holes_after_merge
                           _is_valid
                          _left_most
                             _merge1
                         _right_most
 ---------------------------------------------------------------------------------
 (2) _right_most                                           5     2      3     503
                                             10 COMMON     4     1      3
                                              0 BANK0      1     1      0
                  _is_right_boundary
 ---------------------------------------------------------------------------------
 (4) _is_right_boundary                                   10     7      3     308
                                              0 COMMON    10     7      3
 ---------------------------------------------------------------------------------
 (2) _merge1                                              14     9      5     933
                                              7 COMMON     5     0      5
                                              0 BANK0      9     9      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _left_most                                            5     2      3     503
                                             11 COMMON     3     0      3
                                              0 BANK0      2     2      0
                   _is_left_boundary
 ---------------------------------------------------------------------------------
 (4) _is_left_boundary                                    11     8      3     308
                                              0 COMMON    11     8      3
 ---------------------------------------------------------------------------------
 (3) _is_valid                                            11     7      4     559
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (2) _get_holes_after_merge                               12    12      0    1054
                                              0 COMMON    12    12      0
 ---------------------------------------------------------------------------------
 (3) _get_high_after_merge                                 9     7      2     255
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _get_high                                             3     3      0     331
                                              6 COMMON     3     3      0
                       _is_row_empty
 ---------------------------------------------------------------------------------
 (3) _is_row_empty                                         6     5      1     192
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) _fall_off                                            11     7      4     516
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (2) _evaluate                                            12    10      2     389
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (2) _delete_matrix                                        4     4      0    1477
                                             11 COMMON     1     1      0
                                              4 BANK0      3     3      0
                         _delete_row
                        _is_row_full
 ---------------------------------------------------------------------------------
 (3) _is_row_full                                          6     5      1     192
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (3) _delete_row                                           8     7      1    1095
                                              7 COMMON     4     3      1
                                              0 BANK0      4     4      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     386
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     367
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _clear                                               11     7      4     427
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) _char_info_index_rand                                 0     0      0     706
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     198
                                              0 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     198
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     508
                                             13 COMMON     1     1      0
                                              7 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _USARTInit                                            3     1      2      75
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Clear_Matrix                                         0     0      0    1137
                             _memset
                      _printf_Screen
 ---------------------------------------------------------------------------------
 (1) _printf_Screen                                        0     0      0     775
                    _printf_MATRIX88
 ---------------------------------------------------------------------------------
 (2) _printf_MATRIX88                                     10    10      0     775
                                             10 COMMON     1     1      0
                                              0 BANK0      9     9      0
             _MATRIX88_to_MATRIX7219
                  _printf_MATRIX7219
 ---------------------------------------------------------------------------------
 (3) _printf_MATRIX7219                                    4     4      0     328
                                              6 COMMON     4     4      0
                         _Write_Byte
 ---------------------------------------------------------------------------------
 (4) _Write_Byte                                           2     1      1     189
                                              4 COMMON     2     1      1
                         _SPI1_write
 ---------------------------------------------------------------------------------
 (5) _SPI1_write                                           4     4      0      92
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (3) _MATRIX88_to_MATRIX7219                               8     7      1     351
                                              0 COMMON     8     7      1
 ---------------------------------------------------------------------------------
 (4) _memset                                               7     3      4     362
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clear_Matrix
     _memset
     _printf_Screen
       _printf_MATRIX88
         _MATRIX88_to_MATRIX7219
         _printf_MATRIX7219
           _Write_Byte
             _SPI1_write
   _USARTInit
   ___bmul
   _char_info_index_rand
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
       ___lmul
   _clear
   _delete_matrix
     _delete_row
       _memcpy
       _memset
     _is_row_full
   _find_best_solution
     ___bmul
     _delete_matrix
       _delete_row
         _memcpy
         _memset
       _is_row_full
     _evaluate
     _fall_off
     _get_high
       _is_row_empty
     _get_high_after_merge
     _get_holes_after_merge
     _is_valid
     _left_most
       _is_left_boundary
     _merge1
       _memcpy
     _right_most
       _is_right_boundary
   _hit_land
   _max7219_init1
     _SPI1_write
   _merge
   _printf_Screen
     _printf_MATRIX88
       _MATRIX88_to_MATRIX7219
       _printf_MATRIX7219
         _Write_Byte
           _SPI1_write
   _printf_debug_MATRIX88
     _debug_line
       _USARTWriteString
         _USARTWriteChar
     _debug_str
       _USARTWriteString
         _USARTWriteChar
   _srand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      60       9      100.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      40      11       66.7%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3B       7       73.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     32      44       5       85.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     12D      12        0.0%
ABS                  0      0     12D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Aug 27 17:51:27 2016

                         __CFG_CP$ON 0000                                    pc 0002  
                     ___bmul@product 0072        get_holes_after_merge@num_hole 0076  
                                 l36 0B68                                   l29 0E6A  
                        __CFG_CPD$ON 0000                    merge1@matrix88_in 007A  
     __end_of_MATRIX88_to_MATRIX7219 004E                                   fsr 0004  
                 USARTInit@baud_rate 0070                ?_char_info_index_rand 0070  
                        get_high@row 0078                          __CFG_LVP$ON 0000  
                                l201 0D68                                  l220 01DA  
                                l323 0314                                  l405 04F3  
                                l422 051C                                  l416 04EA  
                                l381 0C7E                                  l374 0C5E  
                                l462 054E                                  _GIE 005F  
                                _RA1 0029                                  _RA2 002A  
                                _RA3 002B                   merge1@matrix88_out 007B  
                                fsr0 0004                                  indf 0000  
                       ___awmod@sign 002C                         __CFG_IESO$ON 0000  
              __end_of_max7219_init1 1000                       is_row_full@col 0075  
                     is_row_full@row 0070                                 l3202 029F  
                               l2420 003F                                 l3222 0F52  
                               l3142 01E8                                 l2416 0020  
                               l2600 0DD1                                 l2504 01A4  
                               l3312 076A                                 l3152 0206  
                               l2426 0049                                 l3226 0F5A  
                               l3218 0F1B                                 l2506 01BD  
                               l2522 0D4C                                 l3330 06BB  
                               l3250 0FAA                                 l3242 0F6A  
                               l2516 0D35                                 l3332 07A1  
                               l3180 023D                                 l3148 01ED  
                               l3164 0228                                 l2526 0D54  
                               l2550 0092                                 l2542 005B  
                               l3342 07BF                                 l3326 0782  
                               l3334 0650                                 l3174 0237  
                               l3246 0FA2                                 l3158 0217  
                               l2448 0C28                                 l2624 0DAA  
                               l2704 0373                                 l2712 0382  
                               l2536 0055                                 l3336 07A6  
                               l3328 079A                                 l2378 0D6B  
                               l2458 0CEB                                 l2482 0D25  
                               l2626 0D88                                 l2810 0CA2  
                               l2554 009B                                 l2730 011B  
                               l2802 0C94                                 l3194 0290  
                               l2466 0CBD                                 l4500 0E5B  
                               l2476 0D0E                                 l2628 0DB1  
                               l2708 037C                                 l2820 0CBB  
                               l2660 03F2                                 l2652 03CF  
                               l2644 0394                                 l3188 0276  
                               l4502 0E60                                 l2486 0D2D  
                               l2750 02AD                                 l2670 0412  
                               l2638 038E                                 l2558 00A1  
                               l2734 0151                                 l2582 00E9  
                               l2574 00B0                                 l2590 00F8  
                               l3198 0299                                 l4504 0E65  
                               l2760 02CD                                 l2816 0CB5  
                               l2904 04CD                                 l2920 0525  
                               l2656 03F0                                 l2568 00AA  
                               l2930 0BA1                                 l2690 0320  
                               l2842 0E27                                 l2666 0409  
                               l2674 0418                                 l2738 0159  
                               l2586 00F2                                 l2596 0DBB  
                               l2772 0306                                 l2756 02B7  
                               l2684 031A                                 l2836 0DFF  
                               l3820 0553                                 l2950 0ED6  
                               l2926 0B9B                                 l2766 02EB  
                               l2846 0E30                                 l2960 0EEA  
                               l2776 030E                                 l2946 0ECF  
                               l2698 035C                                 l2866 0431  
                               l2858 0426                                 l2794 0C74  
                               l3834 05AE                                 l2980 0E3F  
                               l2972 0F0B                                 l2964 0EF8  
                               l2876 0456                                 l2982 0E41  
                               l2958 0EDC                                 l2886 047C  
                               l3846 05F6                                 l2984 0E43  
                               l2968 0F03                                 l2896 04C2  
                               l4498 0E56                                 l2978 0E3D  
                               l2988 0E48                                 STR_1 0A66  
                       __CFG_WDTE$ON 0000                                 STR_5 0A6B  
                               STR_6 09B0                                 STR_7 0A69  
                               STR_8 0A6D                                 u3005 034A  
                        main@hit_res 0051                                 u3035 036F  
                               u2405 0023                                 u3225 0EB5  
                               u2505 0D11                                 u3155 02BD  
                               u4125 0F45                                 u3165 02D0  
                               u4045 0272                                 u2615 0D38  
                               u3095 0143                                 u4055 027E  
                               u2545 0173                                 u3425 045D  
                               u3195 02EE                                 u3515 04AD  
                               u2805 0DDB                                 u2565 0183  
                               u3445 0476                                 u3365 0437  
                               u2575 0196                                 u4255 0755  
                               u3705 0EDF                                 u2585 01B0  
                               u3385 0450                                 u2745 00E5  
                               u4345 0780                                 u4265 075D  
                               u4185 0F94                                 u3635 0516  
                               u3475 047F                                 _PEIE 005E  
                               u3725 0EF0                                 u2925 03EE  
                               u6207 0D78                                 u3735 0EF9  
                               u3575 04D0                                 u3495 0498  
                               u2945 0405                                 u2795 0DD3  
                               u2875 03BE                                 _RCIE 0465  
                               u6177 05E9                                 u6187 0629  
                               u6197 0D70                                 u3965 01F0  
                       __CFG_WRT$OFF 0000               __end_of_USARTWriteChar 0B6F  
                      __CFG_FCMEN$ON 0000                                 _main 0527  
                               _rand 0E7C                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
                               start 0000                                 ttemp 007E  
                               wtemp 007E                    ___bmul@multiplier 0073  
                      __CFG_MCLRE$ON 0000      find_best_solution@tem_sub_index 003C  
                    is_row_empty@col 0075                      is_row_empty@row 0070  
         get_high_after_merge@matrix 0070                                ?_main 0042  
                              ?_rand 0020                                STR_10 0A05  
                              STR_20 0A05                                STR_12 0A1A  
                              STR_13 0A5C                                STR_22 0A50  
                              STR_14 09EA                                STR_15 0A6B  
                              STR_23 0A2E                                STR_24 0A3F  
                              STR_16 09CD                                STR_17 0A69  
                              STR_18 0A6D                                STR_19 0A68  
                    __end_of___awmod 0F10                     USARTWriteChar@ch 0070  
                              _RCREG 001A                                _SPBRG 0099  
                   _is_left_boundary 004E                                _TXREG 0019  
                              _UQEnd 0062                  ___lmul@multiplicand 0074  
                        ?_SPI1_write 0070                                _clear 0F10  
                    __end_of_dpowers 0828                                _cur_x 0061  
                              _cur_y 005B                                _merge 0F5F  
                              _randx 005D                                _srand 0B7F  
                       ?_is_row_full 0070                      ??_printf_Screen 007B  
                              pclath 000A                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                   __size_of_USARTInit 0047  
                    ?_USARTWriteChar 0070             printf_debug_MATRIX88@col 007C  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F             printf_debug_MATRIX88@row 007B  
                              status 0003                          hit_land@col 0079  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                          hit_land@row 007A  
              _printf_debug_MATRIX88 01C4                       get_high@matrix 0077  
    find_best_solution@temp_pre_high 003A      find_best_solution@temp_pre_hole 0039  
                    __initialization 07C1      find_best_solution@temp_pre_risk 0037  
                       __end_of_main 0637                         __end_of_rand 0EC3  
             ??_char_info_index_rand 007E                               ??_main 0046  
                             ??_rand 0022                          evaluate@col 007A  
                        evaluate@row 007B             find_best_solution@temp_x 0041  
           find_best_solution@temp_y 0035                               ?_clear 0070  
                             ?_merge 0070                               ?_srand 0070  
              __size_of_Clear_Matrix 0011                __end_of_delete_matrix 0DB3  
                             _URBuff 0190                     __end_of_fall_off 0387  
                     __CFG_PWRTE$OFF 0000                get_high_after_merge@y 0076  
                   __end_of_get_high 0CBD                               ___bmul 0B99  
                __size_of_SPI1_write 002A                               ___lmul 0DB3  
                          ??___awmod 007D                     __end_of_hit_land 02A1  
                   __end_of_evaluate 0313                               _merge1 00FA  
           __end_of_USARTWriteString 0CE2                               _memcpy 0CE2  
                             _memset 0C23                     __end_of_is_valid 041A  
                             clear@x 0078                               clear@y 0070  
                    ___awmod@divisor 0027             __size_of_printf_MATRIX88 0012  
                    ___awmod@counter 002B                    __end_of_USARTInit 0E7C  
                      ?_is_row_empty 0070          __size_of_find_best_solution 018A  
                             merge@x 0078                               merge@y 0070  
                        is_valid@col 007A                          is_valid@row 0079  
                       _Clear_Matrix 0B88                               srand@x 0070  
                  _is_right_boundary 00A3              ??_get_holes_after_merge 0070  
         printf_debug_MATRIX88@lable 0075                   ?_is_right_boundary 0070  
                     evaluate@matrix 0079              __end_of__initialization 07FC  
                     merge1@matrix44 0078               ?_printf_debug_MATRIX88 0075  
                     _g_cur_matrix44 0057                  ??_is_right_boundary 0073  
                ___bmul@multiplicand 0070     find_best_solution@temp_pre_count 0036  
                     __pcstackCOMMON 0070                         __pidataBANK0 0B62  
                       __pidataBANK1 0C08                        __end_of_clear 0F5F  
                         _Write_Byte 0BCC                        __end_of_merge 0FAF  
                      __end_of_srand 0B88                   __size_of_debug_str 0008  
                     ??_is_row_empty 0071            __end_of_is_right_boundary 00FA  
      __size_of_get_high_after_merge 0043           get_holes_after_merge@start 0078  
                            ??_clear 0074                              ??_merge 0074  
                            ??_srand 0072                         evaluate@full 0078  
                         __pbssBANK0 0052                           __pbssBANK1 00A0  
                         __pbssBANK2 0110                           __pbssBANK3 0190  
                       evaluate@risk 0076                   __size_of_left_most 0020  
                  is_row_full@matrix 0074                 __size_of_is_row_full 0027  
                         _debug_line 0BAA                  delete_matrix@matrix 0025  
                   is_valid@matrix44 0071                     is_valid@matrix88 0073  
           __end_of_is_left_boundary 00A3                           _g_matrix44 0830  
                         _delete_row 015E                           _g_matrix88 01B0  
                         __pmaintext 0527                              ?___bmul 0070  
                            ?___lmul 0070                              ?_merge1 0077  
                            ?_memcpy 0070                              ?_memset 0070  
                     ___lmul@product 0079            get_holes_after_merge@stop 0077  
                       ??_SPI1_write 0070                            ?_fall_off 0070  
                  ??_printf_MATRIX88 007A            printf_MATRIX88@matrix7219 0021  
                   ??_USARTWriteChar 0070                 is_right_boundary@col 0079  
               is_right_boundary@row 0078                            ?_get_high 0070  
                 USARTWriteInt@F1617 0052                           __stringtab 0800  
                          ?_hit_land 0070                    __end_of_debug_str 0B77  
                            _UQFront 0063                            ?_evaluate 0070  
                          ?_is_valid 0070                        debug_line@str 0073  
                    __size_of___bmul 0011                      __size_of___lmul 003F  
                        ?_Write_Byte 0074                              ___awmod 0EC3  
                 __end_of_SPI1_write 0D80               __size_of_max7219_init1 0051  
                        right_most@x 0020                              _g_debug 00A0  
                    __size_of_merge1 0064                      __size_of_memcpy 0026  
                          _ANSELbits 0188                      __size_of_memset 001C  
                  __end_of_left_most 0C7B                              __ptext1 0B7F  
                            __ptext2 01C4                              __ptext3 0B6F  
                            __ptext4 0BAA                              __ptext5 0CBD  
                            __ptext6 0B67                              __ptext7 0F5F  
                            __ptext8 0FAF                              __ptext9 0230  
find_best_solution@tem_pre_sub_index 0034                    __end_of_hexpowers 0830  
                   fall_off@matrix44 0071                     fall_off@matrix88 0073  
                            _dpowers 081E                     ___awmod@dividend 0029  
         __size_of_is_right_boundary 0057                          SPI1_write@i 0073  
                         ??_fall_off 0074                           ??_get_high 0076  
                            clrloop0 0B78                 end_of_initialization 07FC  
                  __end_of_octpowers 081E                    _printf_MATRIX7219 0C3F  
                         ??_hit_land 0074                              merge1@x 0026  
                            merge1@y 0077                           ??_evaluate 0072  
                            memcpy@d 0074                              memcpy@n 0071  
                            memcpy@s 0075                __end_of_printf_Screen 0B62  
                            memset@c 0070                 __end_of_is_row_empty 0D56  
                            memset@n 0072                              memset@p 0075  
                         ??_is_valid 0074                          ?_debug_line 0073  
                 ?_printf_MATRIX7219 0070                       SPI1_write@data 0071  
                     SPI1_write@mask 0072                           _right_most 0C7B  
           ??_MATRIX88_to_MATRIX7219 0071                          ?_delete_row 0077  
                      clear@matrix44 0071                        clear@matrix88 0073  
                          _RCSTAbits 0018                    Write_Byte@myValue 0074  
                ??_printf_MATRIX7219 0076                         __pstringtext 0800  
                  ?_USARTWriteString 0071        __size_of_char_info_index_rand 0018  
        printf_debug_MATRIX88@matrix 0077                   ??_USARTWriteString 0073  
                  _temp_cur_matrix44 0059            is_right_boundary@matrix44 0070  
          is_right_boundary@matrix88 0072                            _USARTInit 0E35  
                          _TRISAbits 0085            __end_of_printf_MATRIX7219 0C5B  
                      _max7219_init1 0FAF              ??_printf_debug_MATRIX88 0078  
                __size_of_Write_Byte 0012                   right_most@matrix44 007A  
                 right_most@matrix88 007C       __size_of_get_holes_after_merge 010D  
      __end_of_get_holes_after_merge 0527                find_best_solution@res 0032  
                          _TXSTAbits 0098                       __end_of___bmul 0BAA  
         __end_of_find_best_solution 07C1                       __end_of___lmul 0DF2  
                     __end_of_merge1 015E                       __end_of_memcpy 0D08  
                     __end_of_memset 0C3F     MATRIX88_to_MATRIX7219@matrix7219 0070  
             __size_of_delete_matrix 0033                  __size_of_debug_line 0011  
                start_initialization 07C1                           ?_USARTInit 0070  
                __size_of_delete_row 0066                       ?_max7219_init1 0070  
                         left_most@x 0021                        delete_row@len 0020  
                      delete_row@row 0077             __CFG_FOSC$INTRC_NOCLKOUT 0000  
                 is_right_boundary@x 0077         __end_of_get_high_after_merge 0E35  
                        ?_right_most 007A                    ?_is_left_boundary 0070  
    __size_of_MATRIX88_to_MATRIX7219 0048          get_holes_after_merge@matrix 0079  
                           ??___bmul 0071                             ??___lmul 0078  
                 ??_is_left_boundary 0073                           init_fetch0 0BBB  
                 is_row_empty@matrix 0074                          __pdataBANK0 005D  
                        __pdataBANK1 00C0                    _g_char_info_index 005C  
                    _printf_MATRIX88 0BDE                             ??_merge1 0020  
                           ??_memcpy 0073                             ??_memset 0074  
                        _g_char_info 00C0         find_best_solution@temp_count 003B  
       find_best_solution@temp_pre_x 0033    find_best_solution@left_most_index 0030  
                          ___latbits 0002                        __pcstackBANK0 0020  
         __size_of_printf_MATRIX7219 001C                __size_of_is_row_empty 0027  
                      ??_is_row_full 0071                    __size_of_fall_off 0074  
                  __size_of_get_high 0022                    __size_of_hit_land 0071  
                      _delete_matrix 0D80                            __pnvBANK0 0062  
                  __size_of_evaluate 0072                            _debug_str 0B6F  
                 delete_matrix@count 0024                    __size_of_is_valid 0093  
            printf_MATRIX7219@matrix 0078                     delete_matrix@row 0026  
                       ??_Write_Byte 0075                             ?___awmod 0027  
                       _is_row_empty 0D2F                    is_left_boundary@x 0078  
                    ??_max7219_init1 0074                          ??_USARTInit 0072  
             _MATRIX88_to_MATRIX7219 0006                            _left_most 0C5B  
                __size_of_right_most 0020                            _hexpowers 0828  
                     __size_of_clear 004F                 printf_MATRIX7219@col 0079  
                     __size_of_merge 0050                       __size_of_srand 0009  
                       debug_str@str 0073                   __end_of_Write_Byte 0BDE  
                       ??_debug_line 0075                       ?_delete_matrix 0070  
                          fall_off@x 0078                            fall_off@y 0070  
                   delete_row@matrix 0022                            clear_ram0 0B77  
                          _octpowers 0812                  __end_of_is_row_full 0D2F  
                         ?_debug_str 0073              __end_of_printf_MATRIX88 0BF0  
                       ??_delete_row 0078                             _PIR1bits 000C  
                  left_most@matrix44 007B                    left_most@matrix88 007D  
                        __stringbase 0812                   __end_of_debug_line 0BBB  
                      ?_Clear_Matrix 0070                 _get_high_after_merge 0DF2  
                         ?_left_most 007B                   __end_of_g_matrix44 09B0  
                 __end_of_delete_row 01C4                    ___lmul@multiplier 0070  
                is_left_boundary@col 007A                  is_left_boundary@row 0079  
                      merge@matrix44 0071                        merge@matrix88 0073  
          __size_of_USARTWriteString 0025                            hit_land@x 0078  
                          hit_land@y 0070       __size_of_printf_debug_MATRIX88 006C  
       __end_of_char_info_index_rand 0C08        __end_of_printf_debug_MATRIX88 0230  
                      _temp_matrix88 0110              get_high_after_merge@col 0077  
                          merge1@col 0028                            merge1@len 0024  
            get_high_after_merge@row 0078                            merge1@row 0027  
            __size_of_USARTWriteChar 0008                            is_valid@x 0078  
                          is_valid@y 0070          find_best_solution@temp_high 0040  
        find_best_solution@temp_hole 003F                     __size_of___awmod 004D  
        find_best_solution@temp_risk 003D                   __end_of__stringtab 0812  
             __size_of_printf_Screen 0005                       ??_Clear_Matrix 007B  
              ?_get_high_after_merge 0070             is_left_boundary@matrix44 0070  
           is_left_boundary@matrix88 0072                             _fall_off 0313  
                 _find_best_solution 0637                             __ptext10 0637  
                           __ptext11 0C7B                             __ptext20 0D2F  
                           __ptext12 00A3                             __ptext21 0313  
                           __ptext13 00FA                             __ptext30 0E7C  
                           __ptext22 02A1                             __ptext14 0C5B  
                           __ptext31 0DB3                             __ptext23 0D80  
                           __ptext15 004E                             __ptext40 0006  
                           __ptext32 0EC3                             __ptext24 0D08  
                           __ptext16 0387                             __ptext41 0C23  
                           __ptext33 0E35                             __ptext25 015E  
                           __ptext17 041A                             __ptext34 0B88  
                           __ptext26 0CE2                             __ptext18 0DF2  
                           __ptext35 0B5D                             __ptext27 0B99  
                           __ptext19 0C9B                             __ptext36 0BDE  
                           __ptext28 0F10                             __ptext37 0C3F  
                           __ptext29 0BF0                             __ptext38 0BCC  
                           __ptext39 0D56                    __CFG_BOR4V$BOR21V 0000  
                           _get_high 0C9B                          _is_row_full 0D08  
     MATRIX88_to_MATRIX7219@matrix88 0074                      ??_delete_matrix 007B  
                           _hit_land 0230                             _evaluate 02A1  
                ?_find_best_solution 0070                        __size_of_main 0110  
                           _is_valid 0387                        __size_of_rand 0047  
                   hit_land@matrix44 0071                     hit_land@matrix88 0073  
                           clear@col 007A                             clear@row 0079  
                       ??_right_most 007D                _get_holes_after_merge 041A  
                        ??_debug_str 0075                     ?_printf_MATRIX88 0070  
                           main@Seed 004F                             main@argc 0042  
                           main@argv 0044             get_holes_after_merge@col 007A  
           get_holes_after_merge@row 007B                 ??_find_best_solution 0029  
                        fall_off@col 0079                          fall_off@row 007A  
          __size_of_is_left_boundary 0055                          delete_row@i 0023  
                        ??_left_most 0020                             memcpy@d1 0076  
                           memcpy@s1 0070                             merge@col 007A  
                           merge@row 0079                   __end_of_right_most 0C9B  
                           init_ram0 0BBF                             memset@p1 0076  
                      _printf_Screen 0B5D                            stringcode 080A  
                 Write_Byte@myColumn 0075                  USARTWriteString@str 0071  
            printf_MATRIX88@matrix88 0020                 _char_info_index_rand 0BF0  
            ?_MATRIX88_to_MATRIX7219 0070               ??_get_high_after_merge 0072  
 find_best_solution@right_most_index 0031                             stringtab 0800  
                         _SPI1_write 0D56                     _USARTWriteString 0CBD  
                     ?_printf_Screen 0070               ?_get_holes_after_merge 0070  
                     _USARTWriteChar 0B67           MATRIX88_to_MATRIX7219@mask 0075  
          MATRIX88_to_MATRIX7219@col 0077                 __end_of_Clear_Matrix 0B99  
          MATRIX88_to_MATRIX7219@row 0076  
