
_max7219_init1:

;Teris.c,235 :: 		void max7219_init1()
;Teris.c,237 :: 		Chip_Select = 0;       // SELECT MAX
	BCF        RA2_bit+0, 2
;Teris.c,238 :: 		SPI1_write(0x09);      // BCD mode for digit decoding
	MOVLW      9
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,239 :: 		SPI1_write(0x00);
	CLRF       FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,240 :: 		Chip_Select = 1;       // DESELECT MAX
	BSF        RA2_bit+0, 2
;Teris.c,242 :: 		Chip_Select = 0;       // SELECT MAX
	BCF        RA2_bit+0, 2
;Teris.c,243 :: 		SPI1_write(0x0A);
	MOVLW      10
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,244 :: 		SPI1_write(0x0F);      // Segment luminosity intensity
	MOVLW      15
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,245 :: 		Chip_Select = 1;       // DESELECT MAX
	BSF        RA2_bit+0, 2
;Teris.c,247 :: 		Chip_Select = 0;       // SELECT MAX
	BCF        RA2_bit+0, 2
;Teris.c,248 :: 		SPI1_write(0x0B);
	MOVLW      11
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,249 :: 		SPI1_write(0x07);      // Display refresh
	MOVLW      7
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,250 :: 		Chip_Select = 1;       // DESELECT MAX
	BSF        RA2_bit+0, 2
;Teris.c,252 :: 		Chip_Select = 0;       // SELECT MAX
	BCF        RA2_bit+0, 2
;Teris.c,253 :: 		SPI1_write(0x0C);
	MOVLW      12
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,254 :: 		SPI1_write(0x01);      // Turn on the display
	MOVLW      1
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,255 :: 		Chip_Select = 1;       // DESELECT MAX
	BSF        RA2_bit+0, 2
;Teris.c,257 :: 		Chip_Select = 0;       // SELECT MAX
	BCF        RA2_bit+0, 2
;Teris.c,258 :: 		SPI1_write(0x00);
	CLRF       FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,259 :: 		SPI1_write(0xFF);      // No test
	MOVLW      255
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,260 :: 		Chip_Select = 1;       // DESELECT MAX
	BSF        RA2_bit+0, 2
;Teris.c,261 :: 		}
L_end_max7219_init1:
	RETURN
; end of _max7219_init1

_Write_Byte:

;Teris.c,264 :: 		void Write_Byte(unsigned short myColumn, unsigned short myValue)
;Teris.c,266 :: 		Chip_Select = 0;       // select max7219.
	BCF        RA2_bit+0, 2
;Teris.c,267 :: 		SPI1_write(myColumn);  // send myColumn value to max7219 (digit place).
	MOVF       FARG_Write_Byte_myColumn+0, 0
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,268 :: 		SPI1_write(myValue);   // send myValue value to max7219 (digit place).
	MOVF       FARG_Write_Byte_myValue+0, 0
	MOVWF      FARG_SPI1_Write_data_+0
	CALL       _SPI1_Write+0
;Teris.c,269 :: 		Chip_Select = 1;       // deselect max7219.
	BSF        RA2_bit+0, 2
;Teris.c,270 :: 		}
L_end_Write_Byte:
	RETURN
; end of _Write_Byte

_printf_MATRIX44:

;Teris.c,296 :: 		void printf_MATRIX44(short x, short y, const MATRIX44* matrix)
;Teris.c,300 :: 		UART1_Write_Text("<<<<<<<<<<<<<<<<<<<<MATRIX44\r\n");
	MOVLW      ?lstr1_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,301 :: 		for(row = 0; row < MATRIX88_ROW_MAX; row++)
	CLRF       printf_MATRIX44_row_L0+0
L_printf_MATRIX440:
	MOVLW      128
	XORWF      printf_MATRIX44_row_L0+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      8
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_printf_MATRIX441
;Teris.c,303 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	CLRF       printf_MATRIX44_col_L0+0
L_printf_MATRIX443:
	MOVLW      128
	XORWF      printf_MATRIX44_col_L0+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      8
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_printf_MATRIX444
;Teris.c,305 :: 		if((row - y >= 0) && (row - y < MATRIX44_ROW_MAX)
	MOVF       FARG_printf_MATRIX44_y+0, 0
	SUBWF      printf_MATRIX44_row_L0+0, 0
	MOVWF      R1+0
	CLRF       R1+1
	BTFSS      STATUS+0, 0
	DECF       R1+1, 1
	MOVLW      0
	BTFSC      printf_MATRIX44_row_L0+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      1
	BTFSS      FARG_printf_MATRIX44_y+0, 7
	MOVLW      0
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__printf_MATRIX44224
	MOVLW      0
	SUBWF      R1+0, 0
L__printf_MATRIX44224:
	BTFSS      STATUS+0, 0
	GOTO       L_printf_MATRIX448
	MOVF       FARG_printf_MATRIX44_y+0, 0
	SUBWF      printf_MATRIX44_row_L0+0, 0
	MOVWF      R1+0
	CLRF       R1+1
	BTFSS      STATUS+0, 0
	DECF       R1+1, 1
	MOVLW      0
	BTFSC      printf_MATRIX44_row_L0+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      1
	BTFSS      FARG_printf_MATRIX44_y+0, 7
	MOVLW      0
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__printf_MATRIX44225
	MOVLW      4
	SUBWF      R1+0, 0
L__printf_MATRIX44225:
	BTFSC      STATUS+0, 0
	GOTO       L_printf_MATRIX448
;Teris.c,306 :: 		&& (col - x >= 0) && (col - x < MATRIX44_COLUMN_MAX)
	MOVF       FARG_printf_MATRIX44_x+0, 0
	SUBWF      printf_MATRIX44_col_L0+0, 0
	MOVWF      R1+0
	CLRF       R1+1
	BTFSS      STATUS+0, 0
	DECF       R1+1, 1
	MOVLW      0
	BTFSC      printf_MATRIX44_col_L0+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      1
	BTFSS      FARG_printf_MATRIX44_x+0, 7
	MOVLW      0
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__printf_MATRIX44226
	MOVLW      0
	SUBWF      R1+0, 0
L__printf_MATRIX44226:
	BTFSS      STATUS+0, 0
	GOTO       L_printf_MATRIX448
	MOVF       FARG_printf_MATRIX44_x+0, 0
	SUBWF      printf_MATRIX44_col_L0+0, 0
	MOVWF      R1+0
	CLRF       R1+1
	BTFSS      STATUS+0, 0
	DECF       R1+1, 1
	MOVLW      0
	BTFSC      printf_MATRIX44_col_L0+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      1
	BTFSS      FARG_printf_MATRIX44_x+0, 7
	MOVLW      0
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__printf_MATRIX44227
	MOVLW      4
	SUBWF      R1+0, 0
L__printf_MATRIX44227:
	BTFSC      STATUS+0, 0
	GOTO       L_printf_MATRIX448
;Teris.c,307 :: 		&& (matrix->cell[row - y][col - x] == 1))
	MOVF       FARG_printf_MATRIX44_y+0, 0
	SUBWF      printf_MATRIX44_row_L0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSS      STATUS+0, 0
	DECF       R3+1, 1
	MOVLW      0
	BTFSC      printf_MATRIX44_row_L0+0, 7
	MOVLW      255
	ADDWF      R3+1, 1
	MOVLW      1
	BTFSS      FARG_printf_MATRIX44_y+0, 7
	MOVLW      0
	ADDWF      R3+1, 1
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       R0+0, 0
	ADDWF      FARG_printf_MATRIX44_matrix+0, 0
	MOVWF      R2+0
	MOVF       FARG_printf_MATRIX44_matrix+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      R2+1
	MOVF       FARG_printf_MATRIX44_x+0, 0
	SUBWF      printf_MATRIX44_col_L0+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	BTFSS      STATUS+0, 0
	DECF       R0+1, 1
	MOVLW      0
	BTFSC      printf_MATRIX44_col_L0+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVLW      1
	BTFSS      FARG_printf_MATRIX44_x+0, 7
	MOVLW      0
	ADDWF      R0+1, 1
	MOVF       R2+0, 0
	ADDWF      R0+0, 1
	MOVF       R2+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_printf_MATRIX448
L__printf_MATRIX44215:
;Teris.c,309 :: 		UART1_Write_Text("*");
	MOVLW      ?lstr2_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,310 :: 		}
	GOTO       L_printf_MATRIX449
L_printf_MATRIX448:
;Teris.c,313 :: 		UART1_Write_Text("_");
	MOVLW      ?lstr3_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,314 :: 		}
L_printf_MATRIX449:
;Teris.c,303 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	INCF       printf_MATRIX44_col_L0+0, 1
;Teris.c,315 :: 		}
	GOTO       L_printf_MATRIX443
L_printf_MATRIX444:
;Teris.c,316 :: 		UART1_Write_Text("\r\n");
	MOVLW      ?lstr4_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,301 :: 		for(row = 0; row < MATRIX88_ROW_MAX; row++)
	INCF       printf_MATRIX44_row_L0+0, 1
;Teris.c,317 :: 		}
	GOTO       L_printf_MATRIX440
L_printf_MATRIX441:
;Teris.c,318 :: 		UART1_Write_Text(">>>>>>>>>>>>>>>>>>>>\r\n");
	MOVLW      ?lstr5_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,319 :: 		}
L_end_printf_MATRIX44:
	RETURN
; end of _printf_MATRIX44

_printf_cur_MATRIX44:

;Teris.c,322 :: 		void printf_cur_MATRIX44(short x, short y)
;Teris.c,324 :: 		printf_MATRIX44(x, y, GET_CUR_MAXTRIX44);
	MOVF       FARG_printf_cur_MATRIX44_x+0, 0
	MOVWF      FARG_printf_MATRIX44_x+0
	MOVF       FARG_printf_cur_MATRIX44_y+0, 0
	MOVWF      FARG_printf_MATRIX44_y+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       _g_char_info_sub_index+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__printf_cur_MATRIX44229:
	BTFSC      STATUS+0, 2
	GOTO       L__printf_cur_MATRIX44230
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__printf_cur_MATRIX44229
L__printf_cur_MATRIX44230:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_printf_MATRIX44_matrix+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_printf_MATRIX44_matrix+1
	CALL       _printf_MATRIX44+0
;Teris.c,325 :: 		}
L_end_printf_cur_MATRIX44:
	RETURN
; end of _printf_cur_MATRIX44

_printf_MATRIX7219:

;Teris.c,371 :: 		void printf_MATRIX7219(MATRIX7219* matrix)
;Teris.c,375 :: 		for (col = 0; col < MATRIX88_COLUMN_MAX; col++)
	CLRF       printf_MATRIX7219_col_L0+0
L_printf_MATRIX721910:
	MOVLW      8
	SUBWF      printf_MATRIX7219_col_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_printf_MATRIX721911
;Teris.c,377 :: 		Write_Byte(col + 1, matrix->col[col]);
	INCF       printf_MATRIX7219_col_L0+0, 0
	MOVWF      FARG_Write_Byte_myColumn+0
	MOVF       printf_MATRIX7219_col_L0+0, 0
	ADDWF      FARG_printf_MATRIX7219_matrix+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	MOVWF      FARG_Write_Byte_myValue+0
	CALL       _Write_Byte+0
;Teris.c,375 :: 		for (col = 0; col < MATRIX88_COLUMN_MAX; col++)
	INCF       printf_MATRIX7219_col_L0+0, 1
;Teris.c,378 :: 		}
	GOTO       L_printf_MATRIX721910
L_printf_MATRIX721911:
;Teris.c,379 :: 		}
L_end_printf_MATRIX7219:
	RETURN
; end of _printf_MATRIX7219

_MATRIX88_to_MATRIX7219:

;Teris.c,381 :: 		void MATRIX88_to_MATRIX7219(MATRIX88* matrix_88, MATRIX7219* matrix_7219)
;Teris.c,383 :: 		unsigned short mask = 0x80;
	MOVLW      128
	MOVWF      MATRIX88_to_MATRIX7219_mask_L0+0
;Teris.c,385 :: 		for(col = 0; col < MATRIX88_ROW_MAX; col++)
	CLRF       R3+0
L_MATRIX88_to_MATRIX721913:
	MOVLW      8
	SUBWF      R3+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_MATRIX88_to_MATRIX721914
;Teris.c,388 :: 		mask = 0x80;
	MOVLW      128
	MOVWF      MATRIX88_to_MATRIX7219_mask_L0+0
;Teris.c,389 :: 		matrix_7219->col[col] = 0;
	MOVF       R3+0, 0
	ADDWF      FARG_MATRIX88_to_MATRIX7219_matrix_7219+0, 0
	MOVWF      FSR
	CLRF       INDF+0
;Teris.c,390 :: 		for(row = 0; row < MATRIX88_COLUMN_MAX; row++)
	CLRF       R2+0
L_MATRIX88_to_MATRIX721916:
	MOVLW      8
	SUBWF      R2+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_MATRIX88_to_MATRIX721917
;Teris.c,392 :: 		if(matrix_88->cell[row][col] == 1)
	MOVF       R2+0, 0
	MOVWF      R0+0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	MOVF       FARG_MATRIX88_to_MATRIX7219_matrix_88+0, 0
	ADDWF      R0+0, 1
	MOVF       R3+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_MATRIX88_to_MATRIX721919
;Teris.c,394 :: 		matrix_7219->col[col] |= mask;
	MOVF       R3+0, 0
	ADDWF      FARG_MATRIX88_to_MATRIX7219_matrix_7219+0, 0
	MOVWF      R1+0
	MOVF       R1+0, 0
	MOVWF      FSR
	MOVF       MATRIX88_to_MATRIX7219_mask_L0+0, 0
	IORWF      INDF+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
	MOVWF      FSR
	MOVF       R0+0, 0
	MOVWF      INDF+0
;Teris.c,395 :: 		}
L_MATRIX88_to_MATRIX721919:
;Teris.c,396 :: 		mask >>= 1;
	RRF        MATRIX88_to_MATRIX7219_mask_L0+0, 1
	BCF        MATRIX88_to_MATRIX7219_mask_L0+0, 7
;Teris.c,390 :: 		for(row = 0; row < MATRIX88_COLUMN_MAX; row++)
	INCF       R2+0, 1
;Teris.c,397 :: 		}
	GOTO       L_MATRIX88_to_MATRIX721916
L_MATRIX88_to_MATRIX721917:
;Teris.c,385 :: 		for(col = 0; col < MATRIX88_ROW_MAX; col++)
	INCF       R3+0, 1
;Teris.c,398 :: 		}
	GOTO       L_MATRIX88_to_MATRIX721913
L_MATRIX88_to_MATRIX721914:
;Teris.c,399 :: 		}
L_end_MATRIX88_to_MATRIX7219:
	RETURN
; end of _MATRIX88_to_MATRIX7219

_printf_MATRIX88:

;Teris.c,423 :: 		void printf_MATRIX88(MATRIX88* matrix_88)
;Teris.c,426 :: 		MATRIX88_to_MATRIX7219(matrix_88, &matrix_7219);
	MOVF       FARG_printf_MATRIX88_matrix_88+0, 0
	MOVWF      FARG_MATRIX88_to_MATRIX7219_matrix_88+0
	MOVLW      printf_MATRIX88_matrix_7219_L0+0
	MOVWF      FARG_MATRIX88_to_MATRIX7219_matrix_7219+0
	CALL       _MATRIX88_to_MATRIX7219+0
;Teris.c,427 :: 		printf_MATRIX7219(&matrix_7219);
	MOVLW      printf_MATRIX88_matrix_7219_L0+0
	MOVWF      FARG_printf_MATRIX7219_matrix+0
	CALL       _printf_MATRIX7219+0
;Teris.c,428 :: 		}
L_end_printf_MATRIX88:
	RETURN
; end of _printf_MATRIX88

_printf_Screen:

;Teris.c,430 :: 		void printf_Screen()
;Teris.c,432 :: 		printf_MATRIX88(&g_matrix88);
	MOVLW      _g_matrix88+0
	MOVWF      FARG_printf_MATRIX88_matrix_88+0
	CALL       _printf_MATRIX88+0
;Teris.c,433 :: 		}
L_end_printf_Screen:
	RETURN
; end of _printf_Screen

_Clear_Matrix:

;Teris.c,435 :: 		void Clear_Matrix(void)
;Teris.c,437 :: 		memset(&g_matrix88, 0, sizeof(MATRIX88));
	MOVLW      _g_matrix88+0
	MOVWF      FARG_memset_p1+0
	CLRF       FARG_memset_character+0
	MOVLW      64
	MOVWF      FARG_memset_n+0
	MOVLW      0
	MOVWF      FARG_memset_n+1
	CALL       _memset+0
;Teris.c,438 :: 		printf_Screen();
	CALL       _printf_Screen+0
;Teris.c,439 :: 		}
L_end_Clear_Matrix:
	RETURN
; end of _Clear_Matrix

_printf_console_MATRIX88:

;Teris.c,463 :: 		void printf_console_MATRIX88(MATRIX88* matrix)
;Teris.c,467 :: 		UART1_Write_Text("<<<<<<<<<<<<<<<<<<<<\r\n");
	MOVLW      ?lstr6_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,468 :: 		for(row = 0; row < MATRIX88_ROW_MAX; row++)
	CLRF       printf_console_MATRIX88_row_L0+0
L_printf_console_MATRIX8820:
	MOVLW      8
	SUBWF      printf_console_MATRIX88_row_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_printf_console_MATRIX8821
;Teris.c,470 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	CLRF       printf_console_MATRIX88_col_L0+0
L_printf_console_MATRIX8823:
	MOVLW      8
	SUBWF      printf_console_MATRIX88_col_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_printf_console_MATRIX8824
;Teris.c,472 :: 		if(matrix->cell[row][col] == 1)
	MOVF       printf_console_MATRIX88_row_L0+0, 0
	MOVWF      R0+0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	MOVF       FARG_printf_console_MATRIX88_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       printf_console_MATRIX88_col_L0+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_printf_console_MATRIX8826
;Teris.c,474 :: 		UART1_Write_Text("*");
	MOVLW      ?lstr7_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,475 :: 		}
	GOTO       L_printf_console_MATRIX8827
L_printf_console_MATRIX8826:
;Teris.c,478 :: 		UART1_Write_Text("_");
	MOVLW      ?lstr8_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,479 :: 		}
L_printf_console_MATRIX8827:
;Teris.c,470 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	INCF       printf_console_MATRIX88_col_L0+0, 1
;Teris.c,480 :: 		}
	GOTO       L_printf_console_MATRIX8823
L_printf_console_MATRIX8824:
;Teris.c,481 :: 		UART1_Write_Text("\r\n");
	MOVLW      ?lstr9_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,468 :: 		for(row = 0; row < MATRIX88_ROW_MAX; row++)
	INCF       printf_console_MATRIX88_row_L0+0, 1
;Teris.c,482 :: 		}
	GOTO       L_printf_console_MATRIX8820
L_printf_console_MATRIX8821:
;Teris.c,483 :: 		UART1_Write_Text(">>>>>>>>>>>>>>>>>>>>\r\n");
	MOVLW      ?lstr10_Teris+0
	MOVWF      FARG_UART1_Write_Text_uart_text+0
	CALL       _UART1_Write_Text+0
;Teris.c,484 :: 		}
L_end_printf_console_MATRIX88:
	RETURN
; end of _printf_console_MATRIX88

_is_row_full:

;Teris.c,487 :: 		unsigned short is_row_full(MATRIX88* matrix, unsigned short row)
;Teris.c,490 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	CLRF       R2+0
L_is_row_full28:
	MOVLW      8
	SUBWF      R2+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_is_row_full29
;Teris.c,492 :: 		if(matrix->cell[row][col] == 0)
	MOVF       FARG_is_row_full_row+0, 0
	MOVWF      R0+0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	MOVF       FARG_is_row_full_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       R2+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      0
	BTFSS      STATUS+0, 2
	GOTO       L_is_row_full31
;Teris.c,494 :: 		return 0;
	CLRF       R0+0
	GOTO       L_end_is_row_full
;Teris.c,495 :: 		}
L_is_row_full31:
;Teris.c,490 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	INCF       R2+0, 1
;Teris.c,496 :: 		}
	GOTO       L_is_row_full28
L_is_row_full29:
;Teris.c,497 :: 		return 1;
	MOVLW      1
	MOVWF      R0+0
;Teris.c,498 :: 		}
L_end_is_row_full:
	RETURN
; end of _is_row_full

_delete_row:

;Teris.c,499 :: 		void delete_row(MATRIX88* matrix, unsigned short row)
;Teris.c,502 :: 		for(i = MATRIX88_ROW_MAX - 1; i >= 0; i--)
	MOVLW      7
	MOVWF      delete_row_i_L0+0
L_delete_row32:
	MOVLW      128
	XORWF      delete_row_i_L0+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_delete_row33
;Teris.c,504 :: 		if(i <= row)
	MOVLW      128
	MOVWF      R0+0
	MOVLW      128
	BTFSC      delete_row_i_L0+0, 7
	MOVLW      127
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__delete_row239
	MOVF       delete_row_i_L0+0, 0
	SUBWF      FARG_delete_row_row+0, 0
L__delete_row239:
	BTFSS      STATUS+0, 0
	GOTO       L_delete_row35
;Teris.c,506 :: 		if(i > 0)
	MOVLW      128
	XORLW      0
	MOVWF      R0+0
	MOVLW      128
	XORWF      delete_row_i_L0+0, 0
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_delete_row36
;Teris.c,514 :: 		memcpy(matrix->cell[i], matrix->cell[i - 1], len);
	MOVLW      3
	MOVWF      R1+0
	MOVF       delete_row_i_L0+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__delete_row240:
	BTFSC      STATUS+0, 2
	GOTO       L__delete_row241
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__delete_row240
L__delete_row241:
	MOVF       R0+0, 0
	ADDWF      FARG_delete_row_matrix+0, 0
	MOVWF      FARG_memcpy_d1+0
	MOVLW      1
	SUBWF      delete_row_i_L0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSS      STATUS+0, 0
	DECF       R3+1, 1
	MOVLW      0
	BTFSC      delete_row_i_L0+0, 7
	MOVLW      255
	ADDWF      R3+1, 1
	MOVLW      3
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__delete_row242:
	BTFSC      STATUS+0, 2
	GOTO       L__delete_row243
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__delete_row242
L__delete_row243:
	MOVF       R0+0, 0
	ADDWF      FARG_delete_row_matrix+0, 0
	MOVWF      FARG_memcpy_s1+0
	MOVLW      8
	MOVWF      FARG_memcpy_n+0
	MOVLW      0
	MOVWF      FARG_memcpy_n+1
	CALL       _memcpy+0
;Teris.c,515 :: 		}
	GOTO       L_delete_row37
L_delete_row36:
;Teris.c,518 :: 		memset(matrix->cell[i], 0, MATRIX88_COLUMN_MAX*sizeof(unsigned short));
	MOVLW      3
	MOVWF      R1+0
	MOVF       delete_row_i_L0+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__delete_row244:
	BTFSC      STATUS+0, 2
	GOTO       L__delete_row245
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__delete_row244
L__delete_row245:
	MOVF       R0+0, 0
	ADDWF      FARG_delete_row_matrix+0, 0
	MOVWF      FARG_memset_p1+0
	CLRF       FARG_memset_character+0
	MOVLW      8
	MOVWF      FARG_memset_n+0
	MOVLW      0
	MOVWF      FARG_memset_n+1
	CALL       _memset+0
;Teris.c,519 :: 		}
L_delete_row37:
;Teris.c,520 :: 		}
L_delete_row35:
;Teris.c,502 :: 		for(i = MATRIX88_ROW_MAX - 1; i >= 0; i--)
	DECF       delete_row_i_L0+0, 1
;Teris.c,521 :: 		}
	GOTO       L_delete_row32
L_delete_row33:
;Teris.c,522 :: 		}
L_end_delete_row:
	RETURN
; end of _delete_row

_delete_matrix:

;Teris.c,523 :: 		unsigned short delete_matrix(MATRIX88* matrix)
;Teris.c,525 :: 		unsigned short count = 0;
	CLRF       delete_matrix_count_L0+0
	MOVLW      7
	MOVWF      delete_matrix_row_L0+0
;Teris.c,527 :: 		while(row >= 0)
L_delete_matrix38:
	MOVLW      128
	XORWF      delete_matrix_row_L0+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_delete_matrix39
;Teris.c,529 :: 		if(is_row_full(matrix, row))
	MOVF       FARG_delete_matrix_matrix+0, 0
	MOVWF      FARG_is_row_full_matrix+0
	MOVF       delete_matrix_row_L0+0, 0
	MOVWF      FARG_is_row_full_row+0
	CALL       _is_row_full+0
	MOVF       R0+0, 0
	BTFSC      STATUS+0, 2
	GOTO       L_delete_matrix40
;Teris.c,531 :: 		delete_row(matrix, row);
	MOVF       FARG_delete_matrix_matrix+0, 0
	MOVWF      FARG_delete_row_matrix+0
	MOVF       delete_matrix_row_L0+0, 0
	MOVWF      FARG_delete_row_row+0
	CALL       _delete_row+0
;Teris.c,532 :: 		count++;
	INCF       delete_matrix_count_L0+0, 1
;Teris.c,533 :: 		}
	GOTO       L_delete_matrix41
L_delete_matrix40:
;Teris.c,536 :: 		row--;
	DECF       delete_matrix_row_L0+0, 1
;Teris.c,537 :: 		}
L_delete_matrix41:
;Teris.c,538 :: 		}
	GOTO       L_delete_matrix38
L_delete_matrix39:
;Teris.c,543 :: 		return count;
	MOVF       delete_matrix_count_L0+0, 0
	MOVWF      R0+0
;Teris.c,544 :: 		}
L_end_delete_matrix:
	RETURN
; end of _delete_matrix

_is_row_empty:

;Teris.c,545 :: 		unsigned short is_row_empty(MATRIX88* matrix, unsigned short row)
;Teris.c,548 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	CLRF       R2+0
L_is_row_empty42:
	MOVLW      8
	SUBWF      R2+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_is_row_empty43
;Teris.c,550 :: 		if(matrix->cell[row][col] == 1)
	MOVF       FARG_is_row_empty_row+0, 0
	MOVWF      R0+0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	MOVF       FARG_is_row_empty_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       R2+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_is_row_empty45
;Teris.c,552 :: 		return 0;
	CLRF       R0+0
	GOTO       L_end_is_row_empty
;Teris.c,553 :: 		}
L_is_row_empty45:
;Teris.c,548 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	INCF       R2+0, 1
;Teris.c,554 :: 		}
	GOTO       L_is_row_empty42
L_is_row_empty43:
;Teris.c,555 :: 		return 1;
	MOVLW      1
	MOVWF      R0+0
;Teris.c,556 :: 		}
L_end_is_row_empty:
	RETURN
; end of _is_row_empty

_is_col_empty:

;Teris.c,557 :: 		unsigned short is_col_empty(MATRIX88* matrix, unsigned short col)
;Teris.c,560 :: 		for(row = 0; row < MATRIX88_ROW_MAX; row++)
	CLRF       R2+0
L_is_col_empty46:
	MOVLW      8
	SUBWF      R2+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_is_col_empty47
;Teris.c,562 :: 		if(matrix->cell[row][col] == 1)
	MOVF       R2+0, 0
	MOVWF      R0+0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	BCF        R0+0, 0
	MOVF       FARG_is_col_empty_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_is_col_empty_col+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_is_col_empty49
;Teris.c,564 :: 		return 0;
	CLRF       R0+0
	GOTO       L_end_is_col_empty
;Teris.c,565 :: 		}
L_is_col_empty49:
;Teris.c,560 :: 		for(row = 0; row < MATRIX88_ROW_MAX; row++)
	INCF       R2+0, 1
;Teris.c,566 :: 		}
	GOTO       L_is_col_empty46
L_is_col_empty47:
;Teris.c,567 :: 		return 1;
	MOVLW      1
	MOVWF      R0+0
;Teris.c,568 :: 		}
L_end_is_col_empty:
	RETURN
; end of _is_col_empty

_hit_land1:

;Teris.c,569 :: 		unsigned short hit_land1(short x, short y, const MATRIX44* matrix_44, MATRIX88* matrix_88)
;Teris.c,577 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	MOVLW      3
	MOVWF      R5+0
L_hit_land150:
	MOVLW      128
	XORWF      R5+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_hit_land151
;Teris.c,579 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	CLRF       R6+0
L_hit_land153:
	MOVLW      128
	XORWF      R6+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      4
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_hit_land154
;Teris.c,581 :: 		if(matrix_44->cell[row][col] == 1)
	MOVF       R5+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      R0+0, 7
	MOVLW      255
	MOVWF      R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       FARG_hit_land1_matrix_44+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_hit_land1_matrix_44+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R6+0, 0
	ADDWF      R0+0, 1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R6+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_hit_land156
;Teris.c,583 :: 		if((y + row) >= (MATRIX88_ROW_MAX - 1))
	MOVF       R5+0, 0
	ADDWF      FARG_hit_land1_y+0, 0
	MOVWF      R1+0
	MOVLW      0
	BTFSC      FARG_hit_land1_y+0, 7
	MOVLW      255
	MOVWF      R1+1
	BTFSC      STATUS+0, 0
	INCF       R1+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__hit_land1250
	MOVLW      7
	SUBWF      R1+0, 0
L__hit_land1250:
	BTFSS      STATUS+0, 0
	GOTO       L_hit_land157
;Teris.c,589 :: 		return 1;
	MOVLW      1
	MOVWF      R0+0
	GOTO       L_end_hit_land1
;Teris.c,590 :: 		}
L_hit_land157:
;Teris.c,592 :: 		if(matrix_88->cell[y + row + 1][x + col] == 1)
	MOVF       R5+0, 0
	ADDWF      FARG_hit_land1_y+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      FARG_hit_land1_y+0, 7
	MOVLW      255
	MOVWF      R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	ADDLW      1
	MOVWF      R3+0
	MOVLW      0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      R3+1
	MOVLW      3
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__hit_land1251:
	BTFSC      STATUS+0, 2
	GOTO       L__hit_land1252
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__hit_land1251
L__hit_land1252:
	MOVF       R0+0, 0
	ADDWF      FARG_hit_land1_matrix_88+0, 0
	MOVWF      R2+0
	MOVF       R6+0, 0
	ADDWF      FARG_hit_land1_x+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      FARG_hit_land1_x+0, 7
	MOVLW      255
	MOVWF      R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R6+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_hit_land158
;Teris.c,598 :: 		return 1;
	MOVLW      1
	MOVWF      R0+0
	GOTO       L_end_hit_land1
;Teris.c,599 :: 		}
L_hit_land158:
;Teris.c,600 :: 		}
L_hit_land156:
;Teris.c,579 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	INCF       R6+0, 1
;Teris.c,601 :: 		}
	GOTO       L_hit_land153
L_hit_land154:
;Teris.c,577 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	DECF       R5+0, 1
;Teris.c,602 :: 		}
	GOTO       L_hit_land150
L_hit_land151:
;Teris.c,607 :: 		return 0;
	CLRF       R0+0
;Teris.c,608 :: 		}
L_end_hit_land1:
	RETURN
; end of _hit_land1

_is_valid:

;Teris.c,609 :: 		unsigned short is_valid(short x, short y, const MATRIX44* matrix_44, MATRIX88* matrix_88)
;Teris.c,617 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	MOVLW      3
	MOVWF      R5+0
L_is_valid59:
	MOVLW      128
	XORWF      R5+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_is_valid60
;Teris.c,619 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	CLRF       R6+0
L_is_valid62:
	MOVLW      128
	XORWF      R6+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      4
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_is_valid63
;Teris.c,621 :: 		if(matrix_44->cell[row][col] == 1)
	MOVF       R5+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      R0+0, 7
	MOVLW      255
	MOVWF      R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       FARG_is_valid_matrix_44+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_is_valid_matrix_44+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R6+0, 0
	ADDWF      R0+0, 1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R6+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_is_valid65
;Teris.c,623 :: 		if(matrix_88->cell[y + row][x + col] == 1)
	MOVF       R5+0, 0
	ADDWF      FARG_is_valid_y+0, 0
	MOVWF      R3+0
	MOVLW      0
	BTFSC      FARG_is_valid_y+0, 7
	MOVLW      255
	MOVWF      R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R3+1, 1
	MOVLW      3
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__is_valid254:
	BTFSC      STATUS+0, 2
	GOTO       L__is_valid255
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__is_valid254
L__is_valid255:
	MOVF       R0+0, 0
	ADDWF      FARG_is_valid_matrix_88+0, 0
	MOVWF      R2+0
	MOVF       R6+0, 0
	ADDWF      FARG_is_valid_x+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      FARG_is_valid_x+0, 7
	MOVLW      255
	MOVWF      R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R6+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_is_valid66
;Teris.c,629 :: 		return 0;
	CLRF       R0+0
	GOTO       L_end_is_valid
;Teris.c,630 :: 		}
L_is_valid66:
;Teris.c,632 :: 		if(( x + col < 0) || (x + col >= MATRIX88_COLUMN_MAX))
	MOVF       R6+0, 0
	ADDWF      FARG_is_valid_x+0, 0
	MOVWF      R1+0
	MOVLW      0
	BTFSC      FARG_is_valid_x+0, 7
	MOVLW      255
	MOVWF      R1+1
	BTFSC      STATUS+0, 0
	INCF       R1+1, 1
	MOVLW      0
	BTFSC      R6+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__is_valid256
	MOVLW      0
	SUBWF      R1+0, 0
L__is_valid256:
	BTFSS      STATUS+0, 0
	GOTO       L__is_valid216
	MOVF       R6+0, 0
	ADDWF      FARG_is_valid_x+0, 0
	MOVWF      R1+0
	MOVLW      0
	BTFSC      FARG_is_valid_x+0, 7
	MOVLW      255
	MOVWF      R1+1
	BTFSC      STATUS+0, 0
	INCF       R1+1, 1
	MOVLW      0
	BTFSC      R6+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__is_valid257
	MOVLW      8
	SUBWF      R1+0, 0
L__is_valid257:
	BTFSC      STATUS+0, 0
	GOTO       L__is_valid216
	GOTO       L_is_valid69
L__is_valid216:
;Teris.c,638 :: 		return 0;
	CLRF       R0+0
	GOTO       L_end_is_valid
;Teris.c,639 :: 		}
L_is_valid69:
;Teris.c,640 :: 		if((y + row) > (MATRIX88_ROW_MAX - 1))
	MOVF       R5+0, 0
	ADDWF      FARG_is_valid_y+0, 0
	MOVWF      R1+0
	MOVLW      0
	BTFSC      FARG_is_valid_y+0, 7
	MOVLW      255
	MOVWF      R1+1
	BTFSC      STATUS+0, 0
	INCF       R1+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      128
	MOVWF      R0+0
	MOVLW      128
	XORWF      R1+1, 0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__is_valid258
	MOVF       R1+0, 0
	SUBLW      7
L__is_valid258:
	BTFSC      STATUS+0, 0
	GOTO       L_is_valid70
;Teris.c,646 :: 		return 0;
	CLRF       R0+0
	GOTO       L_end_is_valid
;Teris.c,647 :: 		}
L_is_valid70:
;Teris.c,648 :: 		}
L_is_valid65:
;Teris.c,619 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	INCF       R6+0, 1
;Teris.c,649 :: 		}
	GOTO       L_is_valid62
L_is_valid63:
;Teris.c,617 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	DECF       R5+0, 1
;Teris.c,650 :: 		}
	GOTO       L_is_valid59
L_is_valid60:
;Teris.c,655 :: 		return 1;
	MOVLW      1
	MOVWF      R0+0
;Teris.c,656 :: 		}
L_end_is_valid:
	RETURN
; end of _is_valid

_is_left_boundary:

;Teris.c,657 :: 		unsigned short is_left_boundary(short x, const MATRIX44* matrix_44, MATRIX88* matrix_88)
;Teris.c,661 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	MOVLW      3
	MOVWF      R3+0
L_is_left_boundary71:
	MOVLW      128
	XORWF      R3+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_is_left_boundary72
;Teris.c,663 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	CLRF       R4+0
L_is_left_boundary74:
	MOVLW      128
	XORWF      R4+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      4
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_is_left_boundary75
;Teris.c,665 :: 		if(matrix_44->cell[row][col] == 1)
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      R0+0, 7
	MOVLW      255
	MOVWF      R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       FARG_is_left_boundary_matrix_44+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_is_left_boundary_matrix_44+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R4+0, 0
	ADDWF      R0+0, 1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R4+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_is_left_boundary77
;Teris.c,667 :: 		if( x + col < 0)
	MOVF       R4+0, 0
	ADDWF      FARG_is_left_boundary_x+0, 0
	MOVWF      R1+0
	MOVLW      0
	BTFSC      FARG_is_left_boundary_x+0, 7
	MOVLW      255
	MOVWF      R1+1
	BTFSC      STATUS+0, 0
	INCF       R1+1, 1
	MOVLW      0
	BTFSC      R4+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__is_left_boundary260
	MOVLW      0
	SUBWF      R1+0, 0
L__is_left_boundary260:
	BTFSC      STATUS+0, 0
	GOTO       L_is_left_boundary78
;Teris.c,673 :: 		return LEFT_OVER_BOUNDARY;
	MOVLW      2
	MOVWF      R0+0
	GOTO       L_end_is_left_boundary
;Teris.c,674 :: 		}
L_is_left_boundary78:
;Teris.c,675 :: 		}
L_is_left_boundary77:
;Teris.c,663 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	INCF       R4+0, 1
;Teris.c,676 :: 		}
	GOTO       L_is_left_boundary74
L_is_left_boundary75:
;Teris.c,661 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	DECF       R3+0, 1
;Teris.c,677 :: 		}
	GOTO       L_is_left_boundary71
L_is_left_boundary72:
;Teris.c,678 :: 		return OK;
	CLRF       R0+0
;Teris.c,679 :: 		}
L_end_is_left_boundary:
	RETURN
; end of _is_left_boundary

_is_right_boundary:

;Teris.c,680 :: 		unsigned short is_right_boundary(short x, const MATRIX44* matrix_44, MATRIX88* matrix_88)
;Teris.c,684 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	MOVLW      3
	MOVWF      R3+0
L_is_right_boundary79:
	MOVLW      128
	XORWF      R3+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_is_right_boundary80
;Teris.c,686 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	CLRF       R4+0
L_is_right_boundary82:
	MOVLW      128
	XORWF      R4+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      4
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_is_right_boundary83
;Teris.c,688 :: 		if(matrix_44->cell[row][col] == 1)
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      R0+0, 7
	MOVLW      255
	MOVWF      R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       FARG_is_right_boundary_matrix_44+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_is_right_boundary_matrix_44+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R4+0, 0
	ADDWF      R0+0, 1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R4+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_is_right_boundary85
;Teris.c,690 :: 		if(x + col > MATRIX88_COLUMN_MAX - 1)
	MOVF       R4+0, 0
	ADDWF      FARG_is_right_boundary_x+0, 0
	MOVWF      R1+0
	MOVLW      0
	BTFSC      FARG_is_right_boundary_x+0, 7
	MOVLW      255
	MOVWF      R1+1
	BTFSC      STATUS+0, 0
	INCF       R1+1, 1
	MOVLW      0
	BTFSC      R4+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      128
	MOVWF      R0+0
	MOVLW      128
	XORWF      R1+1, 0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__is_right_boundary262
	MOVF       R1+0, 0
	SUBLW      7
L__is_right_boundary262:
	BTFSC      STATUS+0, 0
	GOTO       L_is_right_boundary86
;Teris.c,696 :: 		return RIGHT_OVER_BOUNDARY;
	MOVLW      3
	MOVWF      R0+0
	GOTO       L_end_is_right_boundary
;Teris.c,697 :: 		}
L_is_right_boundary86:
;Teris.c,698 :: 		}
L_is_right_boundary85:
;Teris.c,686 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	INCF       R4+0, 1
;Teris.c,699 :: 		}
	GOTO       L_is_right_boundary82
L_is_right_boundary83:
;Teris.c,684 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	DECF       R3+0, 1
;Teris.c,700 :: 		}
	GOTO       L_is_right_boundary79
L_is_right_boundary80:
;Teris.c,701 :: 		return OK;
	CLRF       R0+0
;Teris.c,702 :: 		}
L_end_is_right_boundary:
	RETURN
; end of _is_right_boundary

_fall_off:

;Teris.c,703 :: 		unsigned short fall_off(short x, short y, const MATRIX44* matrix_44, MATRIX88* matrix_88)
;Teris.c,705 :: 		while(1)
L_fall_off87:
;Teris.c,709 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	MOVLW      3
	MOVWF      R5+0
L_fall_off89:
	MOVLW      128
	XORWF      R5+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_fall_off90
;Teris.c,711 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	CLRF       R6+0
L_fall_off92:
	MOVLW      128
	XORWF      R6+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      4
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_fall_off93
;Teris.c,713 :: 		if(matrix_44->cell[row][col] == 1)
	MOVF       R5+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      R0+0, 7
	MOVLW      255
	MOVWF      R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       FARG_fall_off_matrix_44+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_fall_off_matrix_44+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R6+0, 0
	ADDWF      R0+0, 1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R6+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_fall_off95
;Teris.c,715 :: 		if(matrix_88->cell[y + row + 1][x + col] == 1)
	MOVF       R5+0, 0
	ADDWF      FARG_fall_off_y+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      FARG_fall_off_y+0, 7
	MOVLW      255
	MOVWF      R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	ADDLW      1
	MOVWF      R3+0
	MOVLW      0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      R3+1
	MOVLW      3
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__fall_off264:
	BTFSC      STATUS+0, 2
	GOTO       L__fall_off265
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__fall_off264
L__fall_off265:
	MOVF       R0+0, 0
	ADDWF      FARG_fall_off_matrix_88+0, 0
	MOVWF      R2+0
	MOVF       R6+0, 0
	ADDWF      FARG_fall_off_x+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      FARG_fall_off_x+0, 7
	MOVLW      255
	MOVWF      R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R6+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_fall_off96
;Teris.c,721 :: 		return y;
	MOVF       FARG_fall_off_y+0, 0
	MOVWF      R0+0
	GOTO       L_end_fall_off
;Teris.c,722 :: 		}
L_fall_off96:
;Teris.c,723 :: 		if((y + row) >= (MATRIX88_ROW_MAX - 1))
	MOVF       R5+0, 0
	ADDWF      FARG_fall_off_y+0, 0
	MOVWF      R1+0
	MOVLW      0
	BTFSC      FARG_fall_off_y+0, 7
	MOVLW      255
	MOVWF      R1+1
	BTFSC      STATUS+0, 0
	INCF       R1+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__fall_off266
	MOVLW      7
	SUBWF      R1+0, 0
L__fall_off266:
	BTFSS      STATUS+0, 0
	GOTO       L_fall_off97
;Teris.c,729 :: 		return y;
	MOVF       FARG_fall_off_y+0, 0
	MOVWF      R0+0
	GOTO       L_end_fall_off
;Teris.c,730 :: 		}
L_fall_off97:
;Teris.c,731 :: 		}
L_fall_off95:
;Teris.c,711 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	INCF       R6+0, 1
;Teris.c,732 :: 		}
	GOTO       L_fall_off92
L_fall_off93:
;Teris.c,709 :: 		for(row = MATRIX44_ROW_MAX - 1; row >= 0; row--)
	DECF       R5+0, 1
;Teris.c,733 :: 		}
	GOTO       L_fall_off89
L_fall_off90:
;Teris.c,734 :: 		y++;
	INCF       FARG_fall_off_y+0, 1
;Teris.c,735 :: 		}
	GOTO       L_fall_off87
;Teris.c,736 :: 		}
L_end_fall_off:
	RETURN
; end of _fall_off

_clear:

;Teris.c,737 :: 		void clear(short x, short y, const MATRIX44* matrix_44, MATRIX88* matrix_88)
;Teris.c,741 :: 		for(row = 0; row < MATRIX44_ROW_MAX; row++)
	CLRF       R5+0
L_clear98:
	MOVLW      4
	SUBWF      R5+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_clear99
;Teris.c,743 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	CLRF       R6+0
L_clear101:
	MOVLW      4
	SUBWF      R6+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_clear102
;Teris.c,745 :: 		if(matrix_44->cell[row][col] == 1)
	MOVF       R5+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       FARG_clear_matrix_44+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_clear_matrix_44+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R6+0, 0
	ADDWF      R0+0, 1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_clear104
;Teris.c,747 :: 		matrix_88->cell[y + row][x + col] = 0;
	MOVF       R5+0, 0
	ADDWF      FARG_clear_y+0, 0
	MOVWF      R3+0
	MOVLW      0
	BTFSC      FARG_clear_y+0, 7
	MOVLW      255
	MOVWF      R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      3
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__clear268:
	BTFSC      STATUS+0, 2
	GOTO       L__clear269
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__clear268
L__clear269:
	MOVF       R0+0, 0
	ADDWF      FARG_clear_matrix_88+0, 0
	MOVWF      R2+0
	MOVF       R6+0, 0
	ADDWF      FARG_clear_x+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      FARG_clear_x+0, 7
	MOVLW      255
	MOVWF      R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	CLRF       INDF+0
;Teris.c,748 :: 		}
L_clear104:
;Teris.c,743 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	INCF       R6+0, 1
;Teris.c,749 :: 		}
	GOTO       L_clear101
L_clear102:
;Teris.c,741 :: 		for(row = 0; row < MATRIX44_ROW_MAX; row++)
	INCF       R5+0, 1
;Teris.c,750 :: 		}
	GOTO       L_clear98
L_clear99:
;Teris.c,751 :: 		}
L_end_clear:
	RETURN
; end of _clear

_merge:

;Teris.c,752 :: 		void merge(short x, short y, const MATRIX44* matrix_44, MATRIX88* matrix_88)
;Teris.c,756 :: 		for(row = 0; row < MATRIX44_ROW_MAX; row++)
	CLRF       R5+0
L_merge105:
	MOVLW      4
	SUBWF      R5+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_merge106
;Teris.c,758 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	CLRF       R6+0
L_merge108:
	MOVLW      4
	SUBWF      R6+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_merge109
;Teris.c,760 :: 		if(matrix_44->cell[row][col] == 1)
	MOVF       R5+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       FARG_merge_matrix_44+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_merge_matrix_44+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R6+0, 0
	ADDWF      R0+0, 1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_merge111
;Teris.c,762 :: 		matrix_88->cell[y + row][x + col] = 1;
	MOVF       R5+0, 0
	ADDWF      FARG_merge_y+0, 0
	MOVWF      R3+0
	MOVLW      0
	BTFSC      FARG_merge_y+0, 7
	MOVLW      255
	MOVWF      R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      3
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__merge271:
	BTFSC      STATUS+0, 2
	GOTO       L__merge272
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__merge271
L__merge272:
	MOVF       R0+0, 0
	ADDWF      FARG_merge_matrix_88+0, 0
	MOVWF      R2+0
	MOVF       R6+0, 0
	ADDWF      FARG_merge_x+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      FARG_merge_x+0, 7
	MOVLW      255
	MOVWF      R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	MOVLW      1
	MOVWF      INDF+0
;Teris.c,763 :: 		}
L_merge111:
;Teris.c,758 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	INCF       R6+0, 1
;Teris.c,764 :: 		}
	GOTO       L_merge108
L_merge109:
;Teris.c,756 :: 		for(row = 0; row < MATRIX44_ROW_MAX; row++)
	INCF       R5+0, 1
;Teris.c,765 :: 		}
	GOTO       L_merge105
L_merge106:
;Teris.c,766 :: 		}
L_end_merge:
	RETURN
; end of _merge

_merge1:

;Teris.c,767 :: 		void merge1(short x, short y, const MATRIX44* matrix_44, MATRIX88* matrix88_in, MATRIX88* matrix88_out)
;Teris.c,778 :: 		memcpy(matrix88_out, matrix88_in, len);
	MOVF       FARG_merge1_matrix88_out+0, 0
	MOVWF      FARG_memcpy_d1+0
	MOVF       FARG_merge1_matrix88_in+0, 0
	MOVWF      FARG_memcpy_s1+0
	MOVLW      64
	MOVWF      FARG_memcpy_n+0
	MOVLW      0
	MOVWF      FARG_memcpy_n+1
	CALL       _memcpy+0
;Teris.c,780 :: 		for(row = 0; row < MATRIX44_ROW_MAX; row++)
	CLRF       merge1_row_L0+0
L_merge1112:
	MOVLW      4
	SUBWF      merge1_row_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_merge1113
;Teris.c,782 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	CLRF       merge1_col_L0+0
L_merge1115:
	MOVLW      4
	SUBWF      merge1_col_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_merge1116
;Teris.c,784 :: 		if(matrix_44->cell[row][col] == 1)
	MOVF       merge1_row_L0+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       FARG_merge1_matrix_44+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_merge1_matrix_44+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       merge1_col_L0+0, 0
	ADDWF      R0+0, 1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_merge1118
;Teris.c,786 :: 		matrix88_out->cell[y + row][x + col] = 1;
	MOVF       merge1_row_L0+0, 0
	ADDWF      FARG_merge1_y+0, 0
	MOVWF      R3+0
	MOVLW      0
	BTFSC      FARG_merge1_y+0, 7
	MOVLW      255
	MOVWF      R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      3
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__merge1274:
	BTFSC      STATUS+0, 2
	GOTO       L__merge1275
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__merge1274
L__merge1275:
	MOVF       R0+0, 0
	ADDWF      FARG_merge1_matrix88_out+0, 0
	MOVWF      R2+0
	MOVF       merge1_col_L0+0, 0
	ADDWF      FARG_merge1_x+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      FARG_merge1_x+0, 7
	MOVLW      255
	MOVWF      R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	MOVLW      1
	MOVWF      INDF+0
;Teris.c,787 :: 		}
L_merge1118:
;Teris.c,782 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	INCF       merge1_col_L0+0, 1
;Teris.c,788 :: 		}
	GOTO       L_merge1115
L_merge1116:
;Teris.c,780 :: 		for(row = 0; row < MATRIX44_ROW_MAX; row++)
	INCF       merge1_row_L0+0, 1
;Teris.c,789 :: 		}
	GOTO       L_merge1112
L_merge1113:
;Teris.c,790 :: 		}
L_end_merge1:
	RETURN
; end of _merge1

_evaluate:

;Teris.c,791 :: 		unsigned int evaluate(MATRIX88* matrix)
;Teris.c,793 :: 		unsigned int risk = 0;
	CLRF       evaluate_risk_L0+0
	CLRF       evaluate_risk_L0+1
	MOVLW      255
	MOVWF      evaluate_full_L0+0
;Teris.c,797 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	CLRF       R2+0
L_evaluate119:
	MOVLW      8
	SUBWF      R2+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_evaluate120
;Teris.c,799 :: 		full = 0xFF;
	MOVLW      255
	MOVWF      evaluate_full_L0+0
;Teris.c,800 :: 		for(row = MATRIX88_ROW_MAX - 1; row >= 0; row--)
	MOVLW      7
	MOVWF      R3+0
L_evaluate122:
	MOVLW      128
	XORWF      R3+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_evaluate123
;Teris.c,802 :: 		if(full == 0xFF)
	MOVF       evaluate_full_L0+0, 0
	XORLW      255
	BTFSS      STATUS+0, 2
	GOTO       L_evaluate125
;Teris.c,804 :: 		full = matrix->cell[row][col];
	MOVLW      3
	MOVWF      R1+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__evaluate277:
	BTFSC      STATUS+0, 2
	GOTO       L__evaluate278
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__evaluate277
L__evaluate278:
	MOVF       FARG_evaluate_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       R2+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	MOVWF      evaluate_full_L0+0
;Teris.c,805 :: 		}
	GOTO       L_evaluate126
L_evaluate125:
;Teris.c,808 :: 		if(matrix->cell[row][col] == 1)
	MOVLW      3
	MOVWF      R1+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__evaluate279:
	BTFSC      STATUS+0, 2
	GOTO       L__evaluate280
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__evaluate279
L__evaluate280:
	MOVF       FARG_evaluate_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       R2+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_evaluate127
;Teris.c,810 :: 		if(full == 0)
	MOVF       evaluate_full_L0+0, 0
	XORLW      0
	BTFSS      STATUS+0, 2
	GOTO       L_evaluate128
;Teris.c,812 :: 		risk++;
	INCF       evaluate_risk_L0+0, 1
	BTFSC      STATUS+0, 2
	INCF       evaluate_risk_L0+1, 1
;Teris.c,813 :: 		}
L_evaluate128:
;Teris.c,814 :: 		}
L_evaluate127:
;Teris.c,815 :: 		full = matrix->cell[row][col];
	MOVLW      3
	MOVWF      R1+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__evaluate281:
	BTFSC      STATUS+0, 2
	GOTO       L__evaluate282
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__evaluate281
L__evaluate282:
	MOVF       FARG_evaluate_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       R2+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	MOVWF      evaluate_full_L0+0
;Teris.c,816 :: 		}
L_evaluate126:
;Teris.c,800 :: 		for(row = MATRIX88_ROW_MAX - 1; row >= 0; row--)
	DECF       R3+0, 1
;Teris.c,817 :: 		}
	GOTO       L_evaluate122
L_evaluate123:
;Teris.c,797 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	INCF       R2+0, 1
;Teris.c,818 :: 		}
	GOTO       L_evaluate119
L_evaluate120:
;Teris.c,824 :: 		return risk;
	MOVF       evaluate_risk_L0+0, 0
	MOVWF      R0+0
	MOVF       evaluate_risk_L0+1, 0
	MOVWF      R0+1
;Teris.c,825 :: 		}
L_end_evaluate:
	RETURN
; end of _evaluate

_char_info_index_rand:

;Teris.c,826 :: 		unsigned short char_info_index_rand()
;Teris.c,828 :: 		return (unsigned short)(rand()%CHARACTER_MAX);
	CALL       _rand+0
	MOVLW      9
	MOVWF      R4+0
	MOVLW      0
	MOVWF      R4+1
	CALL       _Div_16x16_S+0
	MOVF       R8+0, 0
	MOVWF      R0+0
	MOVF       R8+1, 0
	MOVWF      R0+1
;Teris.c,829 :: 		}
L_end_char_info_index_rand:
	RETURN
; end of _char_info_index_rand

_left_most:

;Teris.c,830 :: 		short left_most(short x, const MATRIX44* matrix_44, MATRIX88* matrix_88)
;Teris.c,832 :: 		while(1)
L_left_most129:
;Teris.c,834 :: 		if(is_left_boundary(x, matrix_44, matrix_88) == LEFT_OVER_BOUNDARY)
	MOVF       FARG_left_most_x+0, 0
	MOVWF      FARG_is_left_boundary_x+0
	MOVF       FARG_left_most_matrix_44+0, 0
	MOVWF      FARG_is_left_boundary_matrix_44+0
	MOVF       FARG_left_most_matrix_44+1, 0
	MOVWF      FARG_is_left_boundary_matrix_44+1
	MOVF       FARG_left_most_matrix_88+0, 0
	MOVWF      FARG_is_left_boundary_matrix_88+0
	CALL       _is_left_boundary+0
	MOVF       R0+0, 0
	XORLW      2
	BTFSS      STATUS+0, 2
	GOTO       L_left_most131
;Teris.c,840 :: 		return x + 1;
	INCF       FARG_left_most_x+0, 0
	MOVWF      R0+0
	GOTO       L_end_left_most
;Teris.c,841 :: 		}
L_left_most131:
;Teris.c,842 :: 		x--;
	DECF       FARG_left_most_x+0, 1
;Teris.c,843 :: 		}
	GOTO       L_left_most129
;Teris.c,844 :: 		}
L_end_left_most:
	RETURN
; end of _left_most

_right_most:

;Teris.c,845 :: 		short right_most(short x, const MATRIX44* matrix_44, MATRIX88* matrix_88)
;Teris.c,847 :: 		while(1)
L_right_most132:
;Teris.c,849 :: 		if(is_right_boundary(x, matrix_44, matrix_88) == RIGHT_OVER_BOUNDARY)
	MOVF       FARG_right_most_x+0, 0
	MOVWF      FARG_is_right_boundary_x+0
	MOVF       FARG_right_most_matrix_44+0, 0
	MOVWF      FARG_is_right_boundary_matrix_44+0
	MOVF       FARG_right_most_matrix_44+1, 0
	MOVWF      FARG_is_right_boundary_matrix_44+1
	MOVF       FARG_right_most_matrix_88+0, 0
	MOVWF      FARG_is_right_boundary_matrix_88+0
	CALL       _is_right_boundary+0
	MOVF       R0+0, 0
	XORLW      3
	BTFSS      STATUS+0, 2
	GOTO       L_right_most134
;Teris.c,855 :: 		return x - 1;
	DECF       FARG_right_most_x+0, 0
	MOVWF      R0+0
	GOTO       L_end_right_most
;Teris.c,856 :: 		}
L_right_most134:
;Teris.c,857 :: 		x++;
	INCF       FARG_right_most_x+0, 1
;Teris.c,858 :: 		}
	GOTO       L_right_most132
;Teris.c,859 :: 		}
L_end_right_most:
	RETURN
; end of _right_most

_get_high:

;Teris.c,860 :: 		unsigned short get_high(MATRIX88* matrix)
;Teris.c,863 :: 		for(row = MATRIX88_ROW_MAX - 1; row >= 0; row--)
	MOVLW      7
	MOVWF      get_high_row_L0+0
L_get_high135:
	MOVLW      128
	XORWF      get_high_row_L0+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_get_high136
;Teris.c,865 :: 		if(is_row_empty(matrix, row) == 1)
	MOVF       FARG_get_high_matrix+0, 0
	MOVWF      FARG_is_row_empty_matrix+0
	MOVF       get_high_row_L0+0, 0
	MOVWF      FARG_is_row_empty_row+0
	CALL       _is_row_empty+0
	MOVF       R0+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_get_high138
;Teris.c,871 :: 		return (unsigned short)(MATRIX88_ROW_MAX - row - 1);
	MOVF       get_high_row_L0+0, 0
	SUBLW      8
	MOVWF      R0+0
	DECF       R0+0, 1
	GOTO       L_end_get_high
;Teris.c,872 :: 		}
L_get_high138:
;Teris.c,863 :: 		for(row = MATRIX88_ROW_MAX - 1; row >= 0; row--)
	DECF       get_high_row_L0+0, 1
;Teris.c,873 :: 		}
	GOTO       L_get_high135
L_get_high136:
;Teris.c,874 :: 		return MATRIX88_ROW_MAX;
	MOVLW      8
	MOVWF      R0+0
;Teris.c,875 :: 		}
L_end_get_high:
	RETURN
; end of _get_high

_get_high_after_merge:

;Teris.c,876 :: 		unsigned short get_high_after_merge(short y, const MATRIX44* matrix)
;Teris.c,880 :: 		for(row = 0; row < MATRIX44_ROW_MAX; row++)
	CLRF       R3+0
L_get_high_after_merge139:
	MOVLW      128
	XORWF      R3+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      4
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_get_high_after_merge140
;Teris.c,882 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	CLRF       R4+0
L_get_high_after_merge142:
	MOVLW      128
	XORWF      R4+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      4
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_get_high_after_merge143
;Teris.c,884 :: 		if(matrix->cell[row][col] == 1)
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVLW      0
	BTFSC      R0+0, 7
	MOVLW      255
	MOVWF      R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVF       FARG_get_high_after_merge_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       FARG_get_high_after_merge_matrix+1, 0
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R4+0, 0
	ADDWF      R0+0, 1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R4+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_get_high_after_merge145
;Teris.c,890 :: 		return (unsigned short)(MATRIX88_ROW_MAX - y - row);
	MOVF       FARG_get_high_after_merge_y+0, 0
	SUBLW      8
	MOVWF      R0+0
	MOVF       R3+0, 0
	SUBWF      R0+0, 1
	GOTO       L_end_get_high_after_merge
;Teris.c,891 :: 		}
L_get_high_after_merge145:
;Teris.c,882 :: 		for(col = 0; col < MATRIX44_COLUMN_MAX; col++)
	INCF       R4+0, 1
;Teris.c,892 :: 		}
	GOTO       L_get_high_after_merge142
L_get_high_after_merge143:
;Teris.c,880 :: 		for(row = 0; row < MATRIX44_ROW_MAX; row++)
	INCF       R3+0, 1
;Teris.c,893 :: 		}
	GOTO       L_get_high_after_merge139
L_get_high_after_merge140:
;Teris.c,894 :: 		}
L_end_get_high_after_merge:
	RETURN
; end of _get_high_after_merge

_get_holes_after_merge:

;Teris.c,895 :: 		unsigned short get_holes_after_merge(MATRIX88* matrix)
;Teris.c,897 :: 		short start = -1;
	MOVLW      255
	MOVWF      get_holes_after_merge_start_L0+0
	MOVLW      255
	MOVWF      get_holes_after_merge_stop_L0+0
	CLRF       get_holes_after_merge_num_hole_L0+0
;Teris.c,902 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	CLRF       R5+0
L_get_holes_after_merge146:
	MOVLW      128
	XORWF      R5+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      8
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_get_holes_after_merge147
;Teris.c,904 :: 		start = stop = -1;
	MOVLW      255
	MOVWF      get_holes_after_merge_stop_L0+0
	MOVLW      255
	MOVWF      get_holes_after_merge_start_L0+0
;Teris.c,905 :: 		for(row = 0; row < MATRIX88_ROW_MAX; row++)
	CLRF       R6+0
L_get_holes_after_merge149:
	MOVLW      128
	XORWF      R6+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      8
	SUBWF      R0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_get_holes_after_merge150
;Teris.c,907 :: 		if(col == 0)
	MOVF       R5+0, 0
	XORLW      0
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge152
;Teris.c,909 :: 		if((matrix->cell[row][col] == 0) && (matrix->cell[row][col + 1] == 1))
	MOVLW      3
	MOVWF      R1+0
	MOVF       R6+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__get_holes_after_merge289:
	BTFSC      STATUS+0, 2
	GOTO       L__get_holes_after_merge290
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__get_holes_after_merge289
L__get_holes_after_merge290:
	MOVF       FARG_get_holes_after_merge_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       R5+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      0
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge155
	MOVLW      3
	MOVWF      R1+0
	MOVF       R6+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__get_holes_after_merge291:
	BTFSC      STATUS+0, 2
	GOTO       L__get_holes_after_merge292
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__get_holes_after_merge291
L__get_holes_after_merge292:
	MOVF       R0+0, 0
	ADDWF      FARG_get_holes_after_merge_matrix+0, 0
	MOVWF      R2+0
	MOVF       R5+0, 0
	ADDLW      1
	MOVWF      R0+0
	CLRF       R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge155
L__get_holes_after_merge220:
;Teris.c,911 :: 		if(start == -1)
	MOVF       get_holes_after_merge_start_L0+0, 0
	XORLW      255
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge156
;Teris.c,913 :: 		start = row;
	MOVF       R6+0, 0
	MOVWF      get_holes_after_merge_start_L0+0
;Teris.c,914 :: 		}
L_get_holes_after_merge156:
;Teris.c,915 :: 		}
L_get_holes_after_merge155:
;Teris.c,916 :: 		}
	GOTO       L_get_holes_after_merge157
L_get_holes_after_merge152:
;Teris.c,917 :: 		else if(col == MATRIX88_COLUMN_MAX - 1)
	MOVF       R5+0, 0
	XORLW      7
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge158
;Teris.c,919 :: 		if((matrix->cell[row][col] == 0) && (matrix->cell[row][col - 1] == 1))
	MOVLW      3
	MOVWF      R1+0
	MOVF       R6+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__get_holes_after_merge293:
	BTFSC      STATUS+0, 2
	GOTO       L__get_holes_after_merge294
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__get_holes_after_merge293
L__get_holes_after_merge294:
	MOVF       FARG_get_holes_after_merge_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       R5+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      0
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge161
	MOVLW      3
	MOVWF      R1+0
	MOVF       R6+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__get_holes_after_merge295:
	BTFSC      STATUS+0, 2
	GOTO       L__get_holes_after_merge296
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__get_holes_after_merge295
L__get_holes_after_merge296:
	MOVF       R0+0, 0
	ADDWF      FARG_get_holes_after_merge_matrix+0, 0
	MOVWF      R2+0
	MOVLW      1
	SUBWF      R5+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	BTFSS      STATUS+0, 0
	DECF       R0+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge161
L__get_holes_after_merge219:
;Teris.c,921 :: 		if(start == -1)
	MOVF       get_holes_after_merge_start_L0+0, 0
	XORLW      255
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge162
;Teris.c,923 :: 		start = row;
	MOVF       R6+0, 0
	MOVWF      get_holes_after_merge_start_L0+0
;Teris.c,924 :: 		}
L_get_holes_after_merge162:
;Teris.c,925 :: 		}
L_get_holes_after_merge161:
;Teris.c,926 :: 		}
	GOTO       L_get_holes_after_merge163
L_get_holes_after_merge158:
;Teris.c,929 :: 		if((matrix->cell[row][col] == 0) && (matrix->cell[row][col - 1] == 1) && (matrix->cell[row][col + 1] == 1))
	MOVLW      3
	MOVWF      R1+0
	MOVF       R6+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__get_holes_after_merge297:
	BTFSC      STATUS+0, 2
	GOTO       L__get_holes_after_merge298
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__get_holes_after_merge297
L__get_holes_after_merge298:
	MOVF       FARG_get_holes_after_merge_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       R5+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      0
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge166
	MOVLW      3
	MOVWF      R1+0
	MOVF       R6+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__get_holes_after_merge299:
	BTFSC      STATUS+0, 2
	GOTO       L__get_holes_after_merge300
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__get_holes_after_merge299
L__get_holes_after_merge300:
	MOVF       R0+0, 0
	ADDWF      FARG_get_holes_after_merge_matrix+0, 0
	MOVWF      R2+0
	MOVLW      1
	SUBWF      R5+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	BTFSS      STATUS+0, 0
	DECF       R0+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge166
	MOVLW      3
	MOVWF      R1+0
	MOVF       R6+0, 0
	MOVWF      R0+0
	MOVF       R1+0, 0
L__get_holes_after_merge301:
	BTFSC      STATUS+0, 2
	GOTO       L__get_holes_after_merge302
	RLF        R0+0, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__get_holes_after_merge301
L__get_holes_after_merge302:
	MOVF       R0+0, 0
	ADDWF      FARG_get_holes_after_merge_matrix+0, 0
	MOVWF      R2+0
	MOVF       R5+0, 0
	ADDLW      1
	MOVWF      R0+0
	CLRF       R0+1
	BTFSC      STATUS+0, 0
	INCF       R0+1, 1
	MOVLW      0
	BTFSC      R5+0, 7
	MOVLW      255
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	ADDWF      R2+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge166
L__get_holes_after_merge218:
;Teris.c,931 :: 		if(start == -1)
	MOVF       get_holes_after_merge_start_L0+0, 0
	XORLW      255
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge167
;Teris.c,933 :: 		start = row;
	MOVF       R6+0, 0
	MOVWF      get_holes_after_merge_start_L0+0
;Teris.c,934 :: 		}
L_get_holes_after_merge167:
;Teris.c,935 :: 		}
L_get_holes_after_merge166:
;Teris.c,936 :: 		}
L_get_holes_after_merge163:
L_get_holes_after_merge157:
;Teris.c,937 :: 		if(start >= 0)
	MOVLW      128
	XORWF      get_holes_after_merge_start_L0+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_get_holes_after_merge168
;Teris.c,939 :: 		if(row == MATRIX88_ROW_MAX - 1)
	MOVF       R6+0, 0
	XORLW      7
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge169
;Teris.c,941 :: 		if(stop == -1)
	MOVF       get_holes_after_merge_stop_L0+0, 0
	XORLW      255
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge170
;Teris.c,943 :: 		stop = MATRIX88_ROW_MAX;
	MOVLW      8
	MOVWF      get_holes_after_merge_stop_L0+0
;Teris.c,944 :: 		}
L_get_holes_after_merge170:
;Teris.c,945 :: 		}
	GOTO       L_get_holes_after_merge171
L_get_holes_after_merge169:
;Teris.c,946 :: 		else if(matrix->cell[row + 1][col] == 1)
	MOVF       R6+0, 0
	ADDLW      1
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      0
	BTFSC      R6+0, 7
	MOVLW      255
	ADDWF      R3+1, 1
	MOVLW      3
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__get_holes_after_merge303:
	BTFSC      STATUS+0, 2
	GOTO       L__get_holes_after_merge304
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__get_holes_after_merge303
L__get_holes_after_merge304:
	MOVF       FARG_get_holes_after_merge_matrix+0, 0
	ADDWF      R0+0, 1
	MOVF       R5+0, 0
	ADDWF      R0+0, 0
	MOVWF      FSR
	MOVF       INDF+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge172
;Teris.c,948 :: 		if(stop == -1)
	MOVF       get_holes_after_merge_stop_L0+0, 0
	XORLW      255
	BTFSS      STATUS+0, 2
	GOTO       L_get_holes_after_merge173
;Teris.c,950 :: 		stop = row + 1;
	INCF       R6+0, 0
	MOVWF      get_holes_after_merge_stop_L0+0
;Teris.c,951 :: 		}
L_get_holes_after_merge173:
;Teris.c,952 :: 		}
L_get_holes_after_merge172:
L_get_holes_after_merge171:
;Teris.c,953 :: 		}
L_get_holes_after_merge168:
;Teris.c,905 :: 		for(row = 0; row < MATRIX88_ROW_MAX; row++)
	INCF       R6+0, 1
;Teris.c,955 :: 		}
	GOTO       L_get_holes_after_merge149
L_get_holes_after_merge150:
;Teris.c,956 :: 		if((start >= 0) && (stop >= 0) && (stop - start >= 3))
	MOVLW      128
	XORWF      get_holes_after_merge_start_L0+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_get_holes_after_merge176
	MOVLW      128
	XORWF      get_holes_after_merge_stop_L0+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORLW      0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_get_holes_after_merge176
	MOVF       get_holes_after_merge_start_L0+0, 0
	SUBWF      get_holes_after_merge_stop_L0+0, 0
	MOVWF      R1+0
	CLRF       R1+1
	BTFSS      STATUS+0, 0
	DECF       R1+1, 1
	MOVLW      0
	BTFSC      get_holes_after_merge_stop_L0+0, 7
	MOVLW      255
	ADDWF      R1+1, 1
	MOVLW      1
	BTFSS      get_holes_after_merge_start_L0+0, 7
	MOVLW      0
	ADDWF      R1+1, 1
	MOVLW      128
	XORWF      R1+1, 0
	MOVWF      R0+0
	MOVLW      128
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L__get_holes_after_merge305
	MOVLW      3
	SUBWF      R1+0, 0
L__get_holes_after_merge305:
	BTFSS      STATUS+0, 0
	GOTO       L_get_holes_after_merge176
L__get_holes_after_merge217:
;Teris.c,962 :: 		num_hole++;
	INCF       get_holes_after_merge_num_hole_L0+0, 1
;Teris.c,963 :: 		}
L_get_holes_after_merge176:
;Teris.c,902 :: 		for(col = 0; col < MATRIX88_COLUMN_MAX; col++)
	INCF       R5+0, 1
;Teris.c,964 :: 		}
	GOTO       L_get_holes_after_merge146
L_get_holes_after_merge147:
;Teris.c,969 :: 		return num_hole;
	MOVF       get_holes_after_merge_num_hole_L0+0, 0
	MOVWF      R0+0
;Teris.c,970 :: 		}
L_end_get_holes_after_merge:
	RETURN
; end of _get_holes_after_merge

_find_best_solution:

;Teris.c,971 :: 		unsigned short find_best_solution()
;Teris.c,973 :: 		short temp_pre_x = 0xFF, tem_pre_sub_index = 0xFF;
	MOVLW      255
	MOVWF      find_best_solution_temp_pre_x_L0+0
	MOVLW      255
	MOVWF      find_best_solution_tem_pre_sub_index_L0+0
	MOVLW      255
	MOVWF      find_best_solution_temp_pre_risk_L0+0
	MOVLW      255
	MOVWF      find_best_solution_temp_pre_risk_L0+1
	CLRF       find_best_solution_temp_pre_count_L0+0
	MOVLW      255
	MOVWF      find_best_solution_temp_pre_high_L0+0
	MOVLW      255
	MOVWF      find_best_solution_temp_pre_hole_L0+0
	CLRF       find_best_solution_res_L0+0
;Teris.c,1001 :: 		for(tem_sub_index = 0; tem_sub_index < g_char_info[g_char_info_index].num; tem_sub_index++)
	CLRF       find_best_solution_tem_sub_index_L0+0
L_find_best_solution177:
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	INCF       R0+0, 1
	BTFSC      STATUS+0, 2
	INCF       R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R1+0
	MOVF       R1+0, 0
	SUBWF      find_best_solution_tem_sub_index_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_find_best_solution178
;Teris.c,1004 :: 		left_most_index = left_most(cur_x, GET_TEMP_MAXTRIX44, &g_matrix88);
	MOVF       _cur_x+0, 0
	MOVWF      FARG_left_most_x+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__find_best_solution307:
	BTFSC      STATUS+0, 2
	GOTO       L__find_best_solution308
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__find_best_solution307
L__find_best_solution308:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_left_most_matrix_44+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_left_most_matrix_44+1
	MOVLW      _g_matrix88+0
	MOVWF      FARG_left_most_matrix_88+0
	CALL       _left_most+0
	MOVF       R0+0, 0
	MOVWF      find_best_solution_left_most_index_L0+0
;Teris.c,1005 :: 		right_most_index = right_most(cur_x, GET_TEMP_MAXTRIX44, &g_matrix88);
	MOVF       _cur_x+0, 0
	MOVWF      FARG_right_most_x+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__find_best_solution309:
	BTFSC      STATUS+0, 2
	GOTO       L__find_best_solution310
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__find_best_solution309
L__find_best_solution310:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_right_most_matrix_44+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_right_most_matrix_44+1
	MOVLW      _g_matrix88+0
	MOVWF      FARG_right_most_matrix_88+0
	CALL       _right_most+0
	MOVF       R0+0, 0
	MOVWF      find_best_solution_right_most_index_L0+0
;Teris.c,1007 :: 		for(temp_x = left_most_index; temp_x <= right_most_index; temp_x++)
	MOVF       find_best_solution_left_most_index_L0+0, 0
	MOVWF      find_best_solution_temp_x_L1+0
L_find_best_solution180:
	MOVLW      128
	XORWF      find_best_solution_right_most_index_L0+0, 0
	MOVWF      R0+0
	MOVLW      128
	XORWF      find_best_solution_temp_x_L1+0, 0
	SUBWF      R0+0, 0
	BTFSS      STATUS+0, 0
	GOTO       L_find_best_solution181
;Teris.c,1009 :: 		temp_y = fall_off(temp_x, cur_y, GET_TEMP_MAXTRIX44, &g_matrix88);
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      FARG_fall_off_x+0
	MOVF       _cur_y+0, 0
	MOVWF      FARG_fall_off_y+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__find_best_solution311:
	BTFSC      STATUS+0, 2
	GOTO       L__find_best_solution312
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__find_best_solution311
L__find_best_solution312:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_fall_off_matrix_44+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_fall_off_matrix_44+1
	MOVLW      _g_matrix88+0
	MOVWF      FARG_fall_off_matrix_88+0
	CALL       _fall_off+0
	MOVF       R0+0, 0
	MOVWF      find_best_solution_temp_y_L0+0
;Teris.c,1010 :: 		printf_MATRIX44(temp_x, temp_y, GET_TEMP_MAXTRIX44);
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      FARG_printf_MATRIX44_x+0
	MOVF       R0+0, 0
	MOVWF      FARG_printf_MATRIX44_y+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__find_best_solution313:
	BTFSC      STATUS+0, 2
	GOTO       L__find_best_solution314
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__find_best_solution313
L__find_best_solution314:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_printf_MATRIX44_matrix+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_printf_MATRIX44_matrix+1
	CALL       _printf_MATRIX44+0
;Teris.c,1011 :: 		printf_console_MATRIX88(&g_matrix88);
	MOVLW      _g_matrix88+0
	MOVWF      FARG_printf_console_MATRIX88_matrix+0
	CALL       _printf_console_MATRIX88+0
;Teris.c,1012 :: 		printf_Screen();
	CALL       _printf_Screen+0
;Teris.c,1013 :: 		if(is_valid(temp_x, temp_y, GET_TEMP_MAXTRIX44, &g_matrix88) == 0)
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      FARG_is_valid_x+0
	MOVF       find_best_solution_temp_y_L0+0, 0
	MOVWF      FARG_is_valid_y+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__find_best_solution315:
	BTFSC      STATUS+0, 2
	GOTO       L__find_best_solution316
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__find_best_solution315
L__find_best_solution316:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_is_valid_matrix_44+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_is_valid_matrix_44+1
	MOVLW      _g_matrix88+0
	MOVWF      FARG_is_valid_matrix_88+0
	CALL       _is_valid+0
	MOVF       R0+0, 0
	XORLW      0
	BTFSS      STATUS+0, 2
	GOTO       L_find_best_solution183
;Teris.c,1015 :: 		continue;
	GOTO       L_find_best_solution182
;Teris.c,1016 :: 		}
L_find_best_solution183:
;Teris.c,1017 :: 		res = 1;
	MOVLW      1
	MOVWF      find_best_solution_res_L0+0
;Teris.c,1018 :: 		merge1(temp_x, temp_y, GET_TEMP_MAXTRIX44, &g_matrix88, &temp_matrix88);
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      FARG_merge1_x+0
	MOVF       find_best_solution_temp_y_L0+0, 0
	MOVWF      FARG_merge1_y+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__find_best_solution317:
	BTFSC      STATUS+0, 2
	GOTO       L__find_best_solution318
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__find_best_solution317
L__find_best_solution318:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_merge1_matrix_44+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_merge1_matrix_44+1
	MOVLW      _g_matrix88+0
	MOVWF      FARG_merge1_matrix88_in+0
	MOVLW      find_best_solution_temp_matrix88_L0+0
	MOVWF      FARG_merge1_matrix88_out+0
	CALL       _merge1+0
;Teris.c,1019 :: 		temp_count = delete_matrix(&temp_matrix88);
	MOVLW      find_best_solution_temp_matrix88_L0+0
	MOVWF      FARG_delete_matrix_matrix+0
	CALL       _delete_matrix+0
	MOVF       R0+0, 0
	MOVWF      find_best_solution_temp_count_L0+0
;Teris.c,1020 :: 		temp_risk = evaluate(&temp_matrix88);
	MOVLW      find_best_solution_temp_matrix88_L0+0
	MOVWF      FARG_evaluate_matrix+0
	CALL       _evaluate+0
	MOVF       R0+0, 0
	MOVWF      find_best_solution_temp_risk_L0+0
	MOVF       R0+1, 0
	MOVWF      find_best_solution_temp_risk_L0+1
;Teris.c,1021 :: 		temp_high = get_high_after_merge(temp_y, GET_TEMP_MAXTRIX44);
	MOVF       find_best_solution_temp_y_L0+0, 0
	MOVWF      FARG_get_high_after_merge_y+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__find_best_solution319:
	BTFSC      STATUS+0, 2
	GOTO       L__find_best_solution320
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__find_best_solution319
L__find_best_solution320:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_get_high_after_merge_matrix+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_get_high_after_merge_matrix+1
	CALL       _get_high_after_merge+0
	MOVF       R0+0, 0
	MOVWF      find_best_solution_temp_high_L0+0
;Teris.c,1022 :: 		temp_hole = get_holes_after_merge(&temp_matrix88);
	MOVLW      find_best_solution_temp_matrix88_L0+0
	MOVWF      FARG_get_holes_after_merge_matrix+0
	CALL       _get_holes_after_merge+0
	MOVF       R0+0, 0
	MOVWF      find_best_solution_temp_hole_L0+0
;Teris.c,1026 :: 		printf_console_MATRIX88(&temp_matrix88);
	MOVLW      find_best_solution_temp_matrix88_L0+0
	MOVWF      FARG_printf_console_MATRIX88_matrix+0
	CALL       _printf_console_MATRIX88+0
;Teris.c,1028 :: 		if(temp_count > temp_pre_count)
	MOVF       find_best_solution_temp_count_L0+0, 0
	SUBWF      find_best_solution_temp_pre_count_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_find_best_solution184
;Teris.c,1034 :: 		temp_pre_count = temp_count;
	MOVF       find_best_solution_temp_count_L0+0, 0
	MOVWF      find_best_solution_temp_pre_count_L0+0
;Teris.c,1035 :: 		temp_pre_risk = temp_risk;
	MOVF       find_best_solution_temp_risk_L0+0, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+0
	MOVF       find_best_solution_temp_risk_L0+1, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+1
;Teris.c,1036 :: 		temp_pre_high = temp_high;
	MOVF       find_best_solution_temp_high_L0+0, 0
	MOVWF      find_best_solution_temp_pre_high_L0+0
;Teris.c,1037 :: 		temp_pre_hole = temp_hole;
	MOVF       find_best_solution_temp_hole_L0+0, 0
	MOVWF      find_best_solution_temp_pre_hole_L0+0
;Teris.c,1038 :: 		tem_pre_sub_index = tem_sub_index;
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	MOVWF      find_best_solution_tem_pre_sub_index_L0+0
;Teris.c,1039 :: 		temp_pre_x = temp_x;
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      find_best_solution_temp_pre_x_L0+0
;Teris.c,1040 :: 		}
	GOTO       L_find_best_solution185
L_find_best_solution184:
;Teris.c,1041 :: 		else if(temp_count == temp_pre_count)
	MOVF       find_best_solution_temp_count_L0+0, 0
	XORWF      find_best_solution_temp_pre_count_L0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L_find_best_solution186
;Teris.c,1043 :: 		if(get_high(&g_matrix88) <= MATRIX88_ROW_MAX/2 + 1)
	MOVLW      _g_matrix88+0
	MOVWF      FARG_get_high_matrix+0
	CALL       _get_high+0
	MOVF       R0+0, 0
	SUBLW      5
	BTFSS      STATUS+0, 0
	GOTO       L_find_best_solution187
;Teris.c,1051 :: 		if(temp_risk < temp_pre_risk)
	MOVF       find_best_solution_temp_pre_risk_L0+1, 0
	SUBWF      find_best_solution_temp_risk_L0+1, 0
	BTFSS      STATUS+0, 2
	GOTO       L__find_best_solution321
	MOVF       find_best_solution_temp_pre_risk_L0+0, 0
	SUBWF      find_best_solution_temp_risk_L0+0, 0
L__find_best_solution321:
	BTFSC      STATUS+0, 0
	GOTO       L_find_best_solution188
;Teris.c,1057 :: 		temp_pre_count = temp_count;
	MOVF       find_best_solution_temp_count_L0+0, 0
	MOVWF      find_best_solution_temp_pre_count_L0+0
;Teris.c,1058 :: 		temp_pre_risk = temp_risk;
	MOVF       find_best_solution_temp_risk_L0+0, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+0
	MOVF       find_best_solution_temp_risk_L0+1, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+1
;Teris.c,1059 :: 		temp_pre_high = temp_high;
	MOVF       find_best_solution_temp_high_L0+0, 0
	MOVWF      find_best_solution_temp_pre_high_L0+0
;Teris.c,1060 :: 		temp_pre_hole = temp_hole;
	MOVF       find_best_solution_temp_hole_L0+0, 0
	MOVWF      find_best_solution_temp_pre_hole_L0+0
;Teris.c,1061 :: 		tem_pre_sub_index = tem_sub_index;
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	MOVWF      find_best_solution_tem_pre_sub_index_L0+0
;Teris.c,1062 :: 		temp_pre_x = temp_x;
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      find_best_solution_temp_pre_x_L0+0
;Teris.c,1063 :: 		}
	GOTO       L_find_best_solution189
L_find_best_solution188:
;Teris.c,1064 :: 		else if(temp_risk == temp_pre_risk)
	MOVF       find_best_solution_temp_risk_L0+1, 0
	XORWF      find_best_solution_temp_pre_risk_L0+1, 0
	BTFSS      STATUS+0, 2
	GOTO       L__find_best_solution322
	MOVF       find_best_solution_temp_pre_risk_L0+0, 0
	XORWF      find_best_solution_temp_risk_L0+0, 0
L__find_best_solution322:
	BTFSS      STATUS+0, 2
	GOTO       L_find_best_solution190
;Teris.c,1070 :: 		if(temp_high < temp_pre_high)
	MOVF       find_best_solution_temp_pre_high_L0+0, 0
	SUBWF      find_best_solution_temp_high_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_find_best_solution191
;Teris.c,1076 :: 		temp_pre_count = temp_count;
	MOVF       find_best_solution_temp_count_L0+0, 0
	MOVWF      find_best_solution_temp_pre_count_L0+0
;Teris.c,1077 :: 		temp_pre_risk = temp_risk;
	MOVF       find_best_solution_temp_risk_L0+0, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+0
	MOVF       find_best_solution_temp_risk_L0+1, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+1
;Teris.c,1078 :: 		temp_pre_high = temp_high;
	MOVF       find_best_solution_temp_high_L0+0, 0
	MOVWF      find_best_solution_temp_pre_high_L0+0
;Teris.c,1079 :: 		temp_pre_hole = temp_hole;
	MOVF       find_best_solution_temp_hole_L0+0, 0
	MOVWF      find_best_solution_temp_pre_hole_L0+0
;Teris.c,1080 :: 		tem_pre_sub_index = tem_sub_index;
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	MOVWF      find_best_solution_tem_pre_sub_index_L0+0
;Teris.c,1081 :: 		temp_pre_x = temp_x;
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      find_best_solution_temp_pre_x_L0+0
;Teris.c,1082 :: 		}
	GOTO       L_find_best_solution192
L_find_best_solution191:
;Teris.c,1083 :: 		else if(temp_high == temp_pre_high)
	MOVF       find_best_solution_temp_high_L0+0, 0
	XORWF      find_best_solution_temp_pre_high_L0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L_find_best_solution193
;Teris.c,1089 :: 		if(temp_hole < temp_pre_hole)
	MOVF       find_best_solution_temp_pre_hole_L0+0, 0
	SUBWF      find_best_solution_temp_hole_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_find_best_solution194
;Teris.c,1095 :: 		temp_pre_count = temp_count;
	MOVF       find_best_solution_temp_count_L0+0, 0
	MOVWF      find_best_solution_temp_pre_count_L0+0
;Teris.c,1096 :: 		temp_pre_risk = temp_risk;
	MOVF       find_best_solution_temp_risk_L0+0, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+0
	MOVF       find_best_solution_temp_risk_L0+1, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+1
;Teris.c,1097 :: 		temp_pre_high = temp_high;
	MOVF       find_best_solution_temp_high_L0+0, 0
	MOVWF      find_best_solution_temp_pre_high_L0+0
;Teris.c,1098 :: 		temp_pre_hole = temp_hole;
	MOVF       find_best_solution_temp_hole_L0+0, 0
	MOVWF      find_best_solution_temp_pre_hole_L0+0
;Teris.c,1099 :: 		tem_pre_sub_index = tem_sub_index;
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	MOVWF      find_best_solution_tem_pre_sub_index_L0+0
;Teris.c,1100 :: 		temp_pre_x = temp_x;
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      find_best_solution_temp_pre_x_L0+0
;Teris.c,1101 :: 		}
L_find_best_solution194:
;Teris.c,1103 :: 		}
L_find_best_solution193:
L_find_best_solution192:
;Teris.c,1105 :: 		}
L_find_best_solution190:
L_find_best_solution189:
;Teris.c,1106 :: 		}
	GOTO       L_find_best_solution195
L_find_best_solution187:
;Teris.c,1114 :: 		if(temp_high < temp_pre_high)
	MOVF       find_best_solution_temp_pre_high_L0+0, 0
	SUBWF      find_best_solution_temp_high_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_find_best_solution196
;Teris.c,1120 :: 		temp_pre_count = temp_count;
	MOVF       find_best_solution_temp_count_L0+0, 0
	MOVWF      find_best_solution_temp_pre_count_L0+0
;Teris.c,1121 :: 		temp_pre_risk = temp_risk;
	MOVF       find_best_solution_temp_risk_L0+0, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+0
	MOVF       find_best_solution_temp_risk_L0+1, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+1
;Teris.c,1122 :: 		temp_pre_high = temp_high;
	MOVF       find_best_solution_temp_high_L0+0, 0
	MOVWF      find_best_solution_temp_pre_high_L0+0
;Teris.c,1123 :: 		temp_pre_hole = temp_hole;
	MOVF       find_best_solution_temp_hole_L0+0, 0
	MOVWF      find_best_solution_temp_pre_hole_L0+0
;Teris.c,1124 :: 		tem_pre_sub_index = tem_sub_index;
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	MOVWF      find_best_solution_tem_pre_sub_index_L0+0
;Teris.c,1125 :: 		temp_pre_x = temp_x;
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      find_best_solution_temp_pre_x_L0+0
;Teris.c,1126 :: 		}
	GOTO       L_find_best_solution197
L_find_best_solution196:
;Teris.c,1127 :: 		else if(temp_high == temp_pre_high)
	MOVF       find_best_solution_temp_high_L0+0, 0
	XORWF      find_best_solution_temp_pre_high_L0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L_find_best_solution198
;Teris.c,1133 :: 		if(temp_hole < temp_pre_hole)
	MOVF       find_best_solution_temp_pre_hole_L0+0, 0
	SUBWF      find_best_solution_temp_hole_L0+0, 0
	BTFSC      STATUS+0, 0
	GOTO       L_find_best_solution199
;Teris.c,1139 :: 		temp_pre_count = temp_count;
	MOVF       find_best_solution_temp_count_L0+0, 0
	MOVWF      find_best_solution_temp_pre_count_L0+0
;Teris.c,1140 :: 		temp_pre_risk = temp_risk;
	MOVF       find_best_solution_temp_risk_L0+0, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+0
	MOVF       find_best_solution_temp_risk_L0+1, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+1
;Teris.c,1141 :: 		temp_pre_high = temp_high;
	MOVF       find_best_solution_temp_high_L0+0, 0
	MOVWF      find_best_solution_temp_pre_high_L0+0
;Teris.c,1142 :: 		temp_pre_hole = temp_hole;
	MOVF       find_best_solution_temp_hole_L0+0, 0
	MOVWF      find_best_solution_temp_pre_hole_L0+0
;Teris.c,1143 :: 		tem_pre_sub_index = tem_sub_index;
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	MOVWF      find_best_solution_tem_pre_sub_index_L0+0
;Teris.c,1144 :: 		temp_pre_x = temp_x;
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      find_best_solution_temp_pre_x_L0+0
;Teris.c,1145 :: 		}
	GOTO       L_find_best_solution200
L_find_best_solution199:
;Teris.c,1146 :: 		else if(temp_hole == temp_pre_hole)
	MOVF       find_best_solution_temp_hole_L0+0, 0
	XORWF      find_best_solution_temp_pre_hole_L0+0, 0
	BTFSS      STATUS+0, 2
	GOTO       L_find_best_solution201
;Teris.c,1152 :: 		if(temp_risk < temp_pre_risk)
	MOVF       find_best_solution_temp_pre_risk_L0+1, 0
	SUBWF      find_best_solution_temp_risk_L0+1, 0
	BTFSS      STATUS+0, 2
	GOTO       L__find_best_solution323
	MOVF       find_best_solution_temp_pre_risk_L0+0, 0
	SUBWF      find_best_solution_temp_risk_L0+0, 0
L__find_best_solution323:
	BTFSC      STATUS+0, 0
	GOTO       L_find_best_solution202
;Teris.c,1158 :: 		temp_pre_count = temp_count;
	MOVF       find_best_solution_temp_count_L0+0, 0
	MOVWF      find_best_solution_temp_pre_count_L0+0
;Teris.c,1159 :: 		temp_pre_risk = temp_risk;
	MOVF       find_best_solution_temp_risk_L0+0, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+0
	MOVF       find_best_solution_temp_risk_L0+1, 0
	MOVWF      find_best_solution_temp_pre_risk_L0+1
;Teris.c,1160 :: 		temp_pre_high = temp_high;
	MOVF       find_best_solution_temp_high_L0+0, 0
	MOVWF      find_best_solution_temp_pre_high_L0+0
;Teris.c,1161 :: 		temp_pre_hole = temp_hole;
	MOVF       find_best_solution_temp_hole_L0+0, 0
	MOVWF      find_best_solution_temp_pre_hole_L0+0
;Teris.c,1162 :: 		tem_pre_sub_index = tem_sub_index;
	MOVF       find_best_solution_tem_sub_index_L0+0, 0
	MOVWF      find_best_solution_tem_pre_sub_index_L0+0
;Teris.c,1163 :: 		temp_pre_x = temp_x;
	MOVF       find_best_solution_temp_x_L1+0, 0
	MOVWF      find_best_solution_temp_pre_x_L0+0
;Teris.c,1164 :: 		}
L_find_best_solution202:
;Teris.c,1165 :: 		}
L_find_best_solution201:
L_find_best_solution200:
;Teris.c,1166 :: 		}
L_find_best_solution198:
L_find_best_solution197:
;Teris.c,1167 :: 		}
L_find_best_solution195:
;Teris.c,1168 :: 		}
L_find_best_solution186:
L_find_best_solution185:
;Teris.c,1175 :: 		}
L_find_best_solution182:
;Teris.c,1007 :: 		for(temp_x = left_most_index; temp_x <= right_most_index; temp_x++)
	INCF       find_best_solution_temp_x_L1+0, 1
;Teris.c,1175 :: 		}
	GOTO       L_find_best_solution180
L_find_best_solution181:
;Teris.c,1001 :: 		for(tem_sub_index = 0; tem_sub_index < g_char_info[g_char_info_index].num; tem_sub_index++)
	INCF       find_best_solution_tem_sub_index_L0+0, 1
;Teris.c,1176 :: 		}
	GOTO       L_find_best_solution177
L_find_best_solution178:
;Teris.c,1177 :: 		if(res == 1)
	MOVF       find_best_solution_res_L0+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_find_best_solution203
;Teris.c,1179 :: 		g_char_info_sub_index = tem_pre_sub_index;
	MOVF       find_best_solution_tem_pre_sub_index_L0+0, 0
	MOVWF      _g_char_info_sub_index+0
;Teris.c,1180 :: 		cur_x = temp_pre_x;
	MOVF       find_best_solution_temp_pre_x_L0+0, 0
	MOVWF      _cur_x+0
;Teris.c,1188 :: 		}
	GOTO       L_find_best_solution204
L_find_best_solution203:
;Teris.c,1195 :: 		}
L_find_best_solution204:
;Teris.c,1196 :: 		return res;
	MOVF       find_best_solution_res_L0+0, 0
	MOVWF      R0+0
;Teris.c,1197 :: 		}
L_end_find_best_solution:
	RETURN
; end of _find_best_solution

_main:

;Teris.c,1281 :: 		int main()
;Teris.c,1308 :: 		Chip_Select_Direction = 0;    // Set RA2 pin as output.
	BCF        TRISA2_bit+0, 2
;Teris.c,1309 :: 		SPI1_init();                  // Initialize SPI1 module.
	CALL       _SPI1_Init+0
;Teris.c,1311 :: 		max7219_init1(); // initialize  max7219.
	CALL       _max7219_init1+0
;Teris.c,1312 :: 		srand(0);
	CLRF       FARG_srand_x+0
	CLRF       FARG_srand_x+1
	CALL       _srand+0
;Teris.c,1314 :: 		UART1_Init(9600);
	MOVLW      129
	MOVWF      SPBRG+0
	BSF        TXSTA+0, 2
	CALL       _UART1_Init+0
;Teris.c,1316 :: 		__start:
___main___start:
;Teris.c,1328 :: 		g_char_info_index = 7;
	MOVLW      7
	MOVWF      _g_char_info_index+0
;Teris.c,1329 :: 		g_char_info_sub_index = 0;
	CLRF       _g_char_info_sub_index+0
;Teris.c,1347 :: 		while(1)
L_main205:
;Teris.c,1349 :: 		cur_y = 0;
	CLRF       _cur_y+0
;Teris.c,1350 :: 		cur_x = 2, cur_y = 0;
	MOVLW      2
	MOVWF      _cur_x+0
	CLRF       _cur_y+0
;Teris.c,1351 :: 		g_char_info_index = char_info_index_rand();
	CALL       _char_info_index_rand+0
	MOVF       R0+0, 0
	MOVWF      _g_char_info_index+0
;Teris.c,1362 :: 		if(find_best_solution() == 0)
	CALL       _find_best_solution+0
	MOVF       R0+0, 0
	XORLW      0
	BTFSS      STATUS+0, 2
	GOTO       L_main207
;Teris.c,1369 :: 		goto __start;
	GOTO       ___main___start
;Teris.c,1370 :: 		}
L_main207:
;Teris.c,1371 :: 		while(1)
L_main208:
;Teris.c,1373 :: 		hit_res = hit_land1(cur_x, cur_y, GET_CUR_MAXTRIX44, &g_matrix88);
	MOVF       _cur_x+0, 0
	MOVWF      FARG_hit_land1_x+0
	MOVF       _cur_y+0, 0
	MOVWF      FARG_hit_land1_y+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       _g_char_info_sub_index+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__main325:
	BTFSC      STATUS+0, 2
	GOTO       L__main326
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__main325
L__main326:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_hit_land1_matrix_44+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_hit_land1_matrix_44+1
	MOVLW      _g_matrix88+0
	MOVWF      FARG_hit_land1_matrix_88+0
	CALL       _hit_land1+0
	MOVF       R0+0, 0
	MOVWF      main_hit_res_L0+0
;Teris.c,1383 :: 		merge(cur_x, cur_y, GET_CUR_MAXTRIX44, &g_matrix88);
	MOVF       _cur_x+0, 0
	MOVWF      FARG_merge_x+0
	MOVF       _cur_y+0, 0
	MOVWF      FARG_merge_y+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       _g_char_info_sub_index+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__main327:
	BTFSC      STATUS+0, 2
	GOTO       L__main328
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__main327
L__main328:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_merge_matrix_44+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_merge_matrix_44+1
	MOVLW      _g_matrix88+0
	MOVWF      FARG_merge_matrix_88+0
	CALL       _merge+0
;Teris.c,1384 :: 		if(hit_res == 1)
	MOVF       main_hit_res_L0+0, 0
	XORLW      1
	BTFSS      STATUS+0, 2
	GOTO       L_main210
;Teris.c,1386 :: 		printf_Screen();
	CALL       _printf_Screen+0
;Teris.c,1390 :: 		Delay_ms(100);
	MOVLW      3
	MOVWF      R11+0
	MOVLW      138
	MOVWF      R12+0
	MOVLW      85
	MOVWF      R13+0
L_main211:
	DECFSZ     R13+0, 1
	GOTO       L_main211
	DECFSZ     R12+0, 1
	GOTO       L_main211
	DECFSZ     R11+0, 1
	GOTO       L_main211
	NOP
	NOP
;Teris.c,1392 :: 		delete_matrix(&g_matrix88);
	MOVLW      _g_matrix88+0
	MOVWF      FARG_delete_matrix_matrix+0
	CALL       _delete_matrix+0
;Teris.c,1393 :: 		}
L_main210:
;Teris.c,1399 :: 		printf_console_MATRIX88(&g_matrix88);
	MOVLW      _g_matrix88+0
	MOVWF      FARG_printf_console_MATRIX88_matrix+0
	CALL       _printf_console_MATRIX88+0
;Teris.c,1400 :: 		printf_Screen();
	CALL       _printf_Screen+0
;Teris.c,1401 :: 		if(hit_res == 0)
	MOVF       main_hit_res_L0+0, 0
	XORLW      0
	BTFSS      STATUS+0, 2
	GOTO       L_main212
;Teris.c,1403 :: 		clear(cur_x, cur_y, GET_CUR_MAXTRIX44, &g_matrix88);
	MOVF       _cur_x+0, 0
	MOVWF      FARG_clear_x+0
	MOVF       _cur_y+0, 0
	MOVWF      FARG_clear_y+0
	MOVF       _g_char_info_index+0, 0
	MOVWF      R0+0
	CLRF       R0+1
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	MOVLW      _g_char_info+0
	ADDWF      R0+0, 1
	MOVLW      hi_addr(_g_char_info+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 1
	MOVF       R0+0, 0
	MOVWF      ___DoICPAddr+0
	MOVF       R0+1, 0
	MOVWF      ___DoICPAddr+1
	CALL       _____DoICP+0
	MOVWF      R0+0
	MOVF       _g_char_info_sub_index+0, 0
	ADDWF      R0+0, 0
	MOVWF      R3+0
	CLRF       R3+1
	BTFSC      STATUS+0, 0
	INCF       R3+1, 1
	MOVLW      4
	MOVWF      R2+0
	MOVF       R3+0, 0
	MOVWF      R0+0
	MOVF       R3+1, 0
	MOVWF      R0+1
	MOVF       R2+0, 0
L__main329:
	BTFSC      STATUS+0, 2
	GOTO       L__main330
	RLF        R0+0, 1
	RLF        R0+1, 1
	BCF        R0+0, 0
	ADDLW      255
	GOTO       L__main329
L__main330:
	MOVF       R0+0, 0
	ADDLW      _g_matrix44+0
	MOVWF      FARG_clear_matrix_44+0
	MOVLW      hi_addr(_g_matrix44+0)
	BTFSC      STATUS+0, 0
	ADDLW      1
	ADDWF      R0+1, 0
	MOVWF      FARG_clear_matrix_44+1
	MOVLW      _g_matrix88+0
	MOVWF      FARG_clear_matrix_88+0
	CALL       _clear+0
;Teris.c,1404 :: 		}
	GOTO       L_main213
L_main212:
;Teris.c,1407 :: 		break;
	GOTO       L_main209
;Teris.c,1408 :: 		}
L_main213:
;Teris.c,1412 :: 		Delay_ms(1000);
	MOVLW      26
	MOVWF      R11+0
	MOVLW      94
	MOVWF      R12+0
	MOVLW      110
	MOVWF      R13+0
L_main214:
	DECFSZ     R13+0, 1
	GOTO       L_main214
	DECFSZ     R12+0, 1
	GOTO       L_main214
	DECFSZ     R11+0, 1
	GOTO       L_main214
	NOP
;Teris.c,1414 :: 		cur_y++;
	INCF       _cur_y+0, 1
;Teris.c,1415 :: 		}
	GOTO       L_main208
L_main209:
;Teris.c,1416 :: 		}
	GOTO       L_main205
;Teris.c,1426 :: 		}
L_end_main:
	GOTO       $+0
; end of _main
