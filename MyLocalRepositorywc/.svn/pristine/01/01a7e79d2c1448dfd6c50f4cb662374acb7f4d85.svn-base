;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/24/2016 11:16:39 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2906      	GOTO       262
_SPI1_Write:
;__Lib_SPI_c345.c,67 :: 		
;__Lib_SPI_c345.c,70 :: 		
0x0003	0x1683      	BSF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x082B      	MOVF       FARG_SPI1_Write_data_, 0
0x0006	0x1283      	BCF        STATUS, 5
0x0007	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,71 :: 		
L_SPI1_Write8:
0x0008	0x1683      	BSF        STATUS, 5
0x0009	0x1814      	BTFSC      SSPSTAT, 0
0x000A	0x280D      	GOTO       L_SPI1_Write9
;__Lib_SPI_c345.c,72 :: 		
0x000B	0x0000      	NOP
0x000C	0x2808      	GOTO       L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,73 :: 		
0x000D	0x1283      	BCF        STATUS, 5
0x000E	0x0813      	MOVF       SSPBUF, 0
0x000F	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,75 :: 		
L_end_SPI1_Write:
0x0010	0x0008      	RETURN
; end of _SPI1_Write
_Write_Byte:
;Teris.c,260 :: 		void Write_Byte(unsigned short myColumn, unsigned short myValue)
;Teris.c,262 :: 		Chip_Select = 0;       // select max7219.
0x0011	0x1283      	BCF        STATUS, 5
0x0012	0x1303      	BCF        STATUS, 6
0x0013	0x1105      	BCF        RA2_bit, 2
;Teris.c,263 :: 		SPI1_write(myColumn);  // send myColumn value to max7219 (digit place).
0x0014	0x1683      	BSF        STATUS, 5
0x0015	0x0829      	MOVF       FARG_Write_Byte_myColumn, 0
0x0016	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x0017	0x2003      	CALL       _SPI1_Write
;Teris.c,264 :: 		SPI1_write(myValue);   // send myValue value to max7219 (digit place).
0x0018	0x1683      	BSF        STATUS, 5
0x0019	0x082A      	MOVF       FARG_Write_Byte_myValue, 0
0x001A	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x001B	0x2003      	CALL       _SPI1_Write
;Teris.c,265 :: 		Chip_Select = 1;       // deselect max7219.
0x001C	0x1505      	BSF        RA2_bit, 2
;Teris.c,266 :: 		}
L_end_Write_Byte:
0x001D	0x0008      	RETURN
; end of _Write_Byte
_printf_MATRIX7219:
;Teris.c,340 :: 		void printf_MATRIX7219(MATRIX7219* matrix)
;Teris.c,344 :: 		for (col = 0; col < MATRIX88_COLUMN_MAX; col++)
0x001E	0x1283      	BCF        STATUS, 5
0x001F	0x1303      	BCF        STATUS, 6
0x0020	0x01EF      	CLRF       printf_MATRIX7219_col_L0
L_printf_MATRIX72190:
0x0021	0x3008      	MOVLW      8
0x0022	0x026F      	SUBWF      printf_MATRIX7219_col_L0, 0
0x0023	0x1803      	BTFSC      STATUS, 0
0x0024	0x2832      	GOTO       L_printf_MATRIX72191
;Teris.c,346 :: 		Write_Byte(col + 1, matrix->col[col]);
0x0025	0x0A6F      	INCF       printf_MATRIX7219_col_L0, 0
0x0026	0x1683      	BSF        STATUS, 5
0x0027	0x00A9      	MOVWF      FARG_Write_Byte_myColumn
0x0028	0x1283      	BCF        STATUS, 5
0x0029	0x086F      	MOVF       printf_MATRIX7219_col_L0, 0
0x002A	0x076E      	ADDWF      FARG_printf_MATRIX7219_matrix, 0
0x002B	0x0084      	MOVWF      FSR
0x002C	0x0800      	MOVF       INDF, 0
0x002D	0x1683      	BSF        STATUS, 5
0x002E	0x00AA      	MOVWF      FARG_Write_Byte_myValue
0x002F	0x2011      	CALL       _Write_Byte
;Teris.c,344 :: 		for (col = 0; col < MATRIX88_COLUMN_MAX; col++)
0x0030	0x0AEF      	INCF       printf_MATRIX7219_col_L0, 1
;Teris.c,347 :: 		}
0x0031	0x2821      	GOTO       L_printf_MATRIX72190
L_printf_MATRIX72191:
;Teris.c,348 :: 		}
L_end_printf_MATRIX7219:
0x0032	0x0008      	RETURN
; end of _printf_MATRIX7219
_MATRIX88_to_MATRIX7219:
;Teris.c,350 :: 		void MATRIX88_to_MATRIX7219(MATRIX88* matrix_88, MATRIX7219* matrix_7219)
;Teris.c,352 :: 		unsigned short mask = 0x80;
0x0033	0x3080      	MOVLW      128
0x0034	0x1683      	BSF        STATUS, 5
0x0035	0x1303      	BCF        STATUS, 6
0x0036	0x00A8      	MOVWF      MATRIX88_to_MATRIX7219_mask_L0
;Teris.c,354 :: 		for(col = 0; col < MATRIX88_ROW_MAX; col++)
0x0037	0x01F3      	CLRF       R3
L_MATRIX88_to_MATRIX72193:
0x0038	0x3008      	MOVLW      8
0x0039	0x0273      	SUBWF      R3, 0
0x003A	0x1803      	BTFSC      STATUS, 0
0x003B	0x286F      	GOTO       L_MATRIX88_to_MATRIX72194
;Teris.c,357 :: 		mask = 0x80;
0x003C	0x1683      	BSF        STATUS, 5
0x003D	0x3080      	MOVLW      128
0x003E	0x00A8      	MOVWF      MATRIX88_to_MATRIX7219_mask_L0
;Teris.c,358 :: 		matrix_7219->col[col] = 0;
0x003F	0x0873      	MOVF       R3, 0
0x0040	0x1283      	BCF        STATUS, 5
0x0041	0x076F      	ADDWF      FARG_MATRIX88_to_MATRIX7219_matrix_7219, 0
0x0042	0x0084      	MOVWF      FSR
0x0043	0x0180      	CLRF       INDF
;Teris.c,359 :: 		for(row = 0; row < MATRIX88_COLUMN_MAX; row++)
0x0044	0x01F2      	CLRF       R2
L_MATRIX88_to_MATRIX72196:
0x0045	0x3008      	MOVLW      8
0x0046	0x0272      	SUBWF      R2, 0
0x0047	0x1803      	BTFSC      STATUS, 0
0x0048	0x286D      	GOTO       L_MATRIX88_to_MATRIX72197
;Teris.c,361 :: 		if(matrix_88->cell[row][col] == 1)
0x0049	0x1283      	BCF        STATUS, 5
0x004A	0x0872      	MOVF       R2, 0
0x004B	0x00F0      	MOVWF      R0
0x004C	0x0DF0      	RLF        R0, 1
0x004D	0x1070      	BCF        R0, 0
0x004E	0x0DF0      	RLF        R0, 1
0x004F	0x1070      	BCF        R0, 0
0x0050	0x0DF0      	RLF        R0, 1
0x0051	0x1070      	BCF        R0, 0
0x0052	0x086E      	MOVF       FARG_MATRIX88_to_MATRIX7219_matrix_88, 0
0x0053	0x07F0      	ADDWF      R0, 1
0x0054	0x0873      	MOVF       R3, 0
0x0055	0x0770      	ADDWF      R0, 0
0x0056	0x0084      	MOVWF      FSR
0x0057	0x0800      	MOVF       INDF, 0
0x0058	0x3A01      	XORLW      1
0x0059	0x1D03      	BTFSS      STATUS, 2
0x005A	0x2868      	GOTO       L_MATRIX88_to_MATRIX72199
;Teris.c,363 :: 		matrix_7219->col[col] |= mask;
0x005B	0x0873      	MOVF       R3, 0
0x005C	0x076F      	ADDWF      FARG_MATRIX88_to_MATRIX7219_matrix_7219, 0
0x005D	0x00F1      	MOVWF      R1
0x005E	0x0871      	MOVF       R1, 0
0x005F	0x0084      	MOVWF      FSR
0x0060	0x1683      	BSF        STATUS, 5
0x0061	0x0828      	MOVF       MATRIX88_to_MATRIX7219_mask_L0, 0
0x0062	0x0400      	IORWF      INDF, 0
0x0063	0x00F0      	MOVWF      R0
0x0064	0x0871      	MOVF       R1, 0
0x0065	0x0084      	MOVWF      FSR
0x0066	0x0870      	MOVF       R0, 0
0x0067	0x0080      	MOVWF      INDF
;Teris.c,364 :: 		}
L_MATRIX88_to_MATRIX72199:
0x0068	0x1683      	BSF        STATUS, 5
;Teris.c,365 :: 		mask >>= 1;
0x0069	0x0CA8      	RRF        MATRIX88_to_MATRIX7219_mask_L0, 1
0x006A	0x13A8      	BCF        MATRIX88_to_MATRIX7219_mask_L0, 7
;Teris.c,359 :: 		for(row = 0; row < MATRIX88_COLUMN_MAX; row++)
0x006B	0x0AF2      	INCF       R2, 1
;Teris.c,366 :: 		}
0x006C	0x2845      	GOTO       L_MATRIX88_to_MATRIX72196
L_MATRIX88_to_MATRIX72197:
;Teris.c,354 :: 		for(col = 0; col < MATRIX88_ROW_MAX; col++)
0x006D	0x0AF3      	INCF       R3, 1
;Teris.c,367 :: 		}
0x006E	0x2838      	GOTO       L_MATRIX88_to_MATRIX72193
L_MATRIX88_to_MATRIX72194:
;Teris.c,368 :: 		}
L_end_MATRIX88_to_MATRIX7219:
0x006F	0x0008      	RETURN
; end of _MATRIX88_to_MATRIX7219
_printf_MATRIX88:
;Teris.c,392 :: 		void printf_MATRIX88(MATRIX88* matrix_88)
;Teris.c,395 :: 		MATRIX88_to_MATRIX7219(matrix_88, &matrix_7219);
0x0070	0x1283      	BCF        STATUS, 5
0x0071	0x1303      	BCF        STATUS, 6
0x0072	0x086D      	MOVF       FARG_printf_MATRIX88_matrix_88, 0
0x0073	0x00EE      	MOVWF      FARG_MATRIX88_to_MATRIX7219_matrix_88
0x0074	0x30A0      	MOVLW      printf_MATRIX88_matrix_7219_L0
0x0075	0x00EF      	MOVWF      FARG_MATRIX88_to_MATRIX7219_matrix_7219
0x0076	0x2033      	CALL       _MATRIX88_to_MATRIX7219
;Teris.c,396 :: 		printf_MATRIX7219(&matrix_7219);
0x0077	0x30A0      	MOVLW      printf_MATRIX88_matrix_7219_L0
0x0078	0x1283      	BCF        STATUS, 5
0x0079	0x1303      	BCF        STATUS, 6
0x007A	0x00EE      	MOVWF      FARG_printf_MATRIX7219_matrix
0x007B	0x201E      	CALL       _printf_MATRIX7219
;Teris.c,397 :: 		}
L_end_printf_MATRIX88:
0x007C	0x0008      	RETURN
; end of _printf_MATRIX88
_memset:
;__Lib_CString.c,77 :: 		
;__Lib_CString.c,80 :: 		
0x007D	0x1283      	BCF        STATUS, 5
0x007E	0x1303      	BCF        STATUS, 6
0x007F	0x0869      	MOVF       FARG_memset_p1, 0
0x0080	0x00F2      	MOVWF      R2
;__Lib_CString.c,81 :: 		
L_memset20:
0x0081	0x086B      	MOVF       FARG_memset_n, 0
0x0082	0x00F0      	MOVWF      R0
0x0083	0x086C      	MOVF       FARG_memset_n+1, 0
0x0084	0x00F1      	MOVWF      R0+1
0x0085	0x3001      	MOVLW      1
0x0086	0x02EB      	SUBWF      FARG_memset_n, 1
0x0087	0x1C03      	BTFSS      STATUS, 0
0x0088	0x03EC      	DECF       FARG_memset_n+1, 1
0x0089	0x0870      	MOVF       R0, 0
0x008A	0x0471      	IORWF      R0+1, 0
0x008B	0x1903      	BTFSC      STATUS, 2
0x008C	0x2893      	GOTO       L_memset21
;__Lib_CString.c,82 :: 		
0x008D	0x0872      	MOVF       R2, 0
0x008E	0x0084      	MOVWF      FSR
0x008F	0x086A      	MOVF       FARG_memset_character, 0
0x0090	0x0080      	MOVWF      INDF
0x0091	0x0AF2      	INCF       R2, 1
0x0092	0x2881      	GOTO       L_memset20
L_memset21:
;__Lib_CString.c,83 :: 		
0x0093	0x0869      	MOVF       FARG_memset_p1, 0
0x0094	0x00F0      	MOVWF      R0
;__Lib_CString.c,84 :: 		
L_end_memset:
0x0095	0x0008      	RETURN
; end of _memset
_printf_Screen:
;Teris.c,399 :: 		void printf_Screen()
;Teris.c,401 :: 		printf_MATRIX88(&g_matrix88);
0x0096	0x3020      	MOVLW      _g_matrix88
0x0097	0x1283      	BCF        STATUS, 5
0x0098	0x1303      	BCF        STATUS, 6
0x0099	0x00ED      	MOVWF      FARG_printf_MATRIX88_matrix_88
0x009A	0x2070      	CALL       _printf_MATRIX88
;Teris.c,402 :: 		}
L_end_printf_Screen:
0x009B	0x0008      	RETURN
; end of _printf_Screen
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1303      	BCF        STATUS, 6
0x009E	0x0866      	MOVF       ___DoICPAddr+1, 0
0x009F	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00A0	0x0865      	MOVF       ___DoICPAddr, 0
0x00A1	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00A2	0x0008      	RETURN
; end of _____DoICP
_Clear_Matrix:
;Teris.c,404 :: 		void Clear_Matrix(void)
;Teris.c,406 :: 		memset(&g_matrix88, 0, sizeof(MATRIX88));
0x00A3	0x3020      	MOVLW      _g_matrix88
0x00A4	0x1283      	BCF        STATUS, 5
0x00A5	0x1303      	BCF        STATUS, 6
0x00A6	0x00E9      	MOVWF      FARG_memset_p1
0x00A7	0x01EA      	CLRF       FARG_memset_character
0x00A8	0x3040      	MOVLW      64
0x00A9	0x00EB      	MOVWF      FARG_memset_n
0x00AA	0x3000      	MOVLW      0
0x00AB	0x00EC      	MOVWF      FARG_memset_n+1
0x00AC	0x207D      	CALL       _memset
;Teris.c,407 :: 		printf_Screen();
0x00AD	0x2096      	CALL       _printf_Screen
;Teris.c,408 :: 		}
L_end_Clear_Matrix:
0x00AE	0x0008      	RETURN
; end of _Clear_Matrix
_srand:
;__Lib_CStdlib.c,301 :: 		
;__Lib_CStdlib.c,302 :: 		
0x00AF	0x1283      	BCF        STATUS, 5
0x00B0	0x1303      	BCF        STATUS, 6
0x00B1	0x0867      	MOVF       FARG_srand_x, 0
0x00B2	0x00E1      	MOVWF      __Lib_CStdlib_randx
0x00B3	0x0868      	MOVF       FARG_srand_x+1, 0
0x00B4	0x00E2      	MOVWF      __Lib_CStdlib_randx+1
0x00B5	0x01E3      	CLRF       __Lib_CStdlib_randx+2
0x00B6	0x01E4      	CLRF       __Lib_CStdlib_randx+3
;__Lib_CStdlib.c,303 :: 		
0x00B7	0x3001      	MOVLW      1
0x00B8	0x00E0      	MOVWF      __Lib_CStdlib_randf
;__Lib_CStdlib.c,304 :: 		
L_end_srand:
0x00B9	0x0008      	RETURN
; end of _srand
_max7219_init1:
;Teris.c,231 :: 		void max7219_init1()
;Teris.c,233 :: 		Chip_Select = 0;       // SELECT MAX
0x00BA	0x1283      	BCF        STATUS, 5
0x00BB	0x1303      	BCF        STATUS, 6
0x00BC	0x1105      	BCF        RA2_bit, 2
;Teris.c,234 :: 		SPI1_write(0x09);      // BCD mode for digit decoding
0x00BD	0x3009      	MOVLW      9
0x00BE	0x1683      	BSF        STATUS, 5
0x00BF	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x00C0	0x2003      	CALL       _SPI1_Write
;Teris.c,235 :: 		SPI1_write(0x00);
0x00C1	0x1683      	BSF        STATUS, 5
0x00C2	0x01AB      	CLRF       FARG_SPI1_Write_data_
0x00C3	0x2003      	CALL       _SPI1_Write
;Teris.c,236 :: 		Chip_Select = 1;       // DESELECT MAX
0x00C4	0x1505      	BSF        RA2_bit, 2
;Teris.c,238 :: 		Chip_Select = 0;       // SELECT MAX
0x00C5	0x1105      	BCF        RA2_bit, 2
;Teris.c,239 :: 		SPI1_write(0x0A);
0x00C6	0x300A      	MOVLW      10
0x00C7	0x1683      	BSF        STATUS, 5
0x00C8	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x00C9	0x2003      	CALL       _SPI1_Write
;Teris.c,240 :: 		SPI1_write(0x0F);      // Segment luminosity intensity
0x00CA	0x300F      	MOVLW      15
0x00CB	0x1683      	BSF        STATUS, 5
0x00CC	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x00CD	0x2003      	CALL       _SPI1_Write
;Teris.c,241 :: 		Chip_Select = 1;       // DESELECT MAX
0x00CE	0x1505      	BSF        RA2_bit, 2
;Teris.c,243 :: 		Chip_Select = 0;       // SELECT MAX
0x00CF	0x1105      	BCF        RA2_bit, 2
;Teris.c,244 :: 		SPI1_write(0x0B);
0x00D0	0x300B      	MOVLW      11
0x00D1	0x1683      	BSF        STATUS, 5
0x00D2	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x00D3	0x2003      	CALL       _SPI1_Write
;Teris.c,245 :: 		SPI1_write(0x07);      // Display refresh
0x00D4	0x3007      	MOVLW      7
0x00D5	0x1683      	BSF        STATUS, 5
0x00D6	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x00D7	0x2003      	CALL       _SPI1_Write
;Teris.c,246 :: 		Chip_Select = 1;       // DESELECT MAX
0x00D8	0x1505      	BSF        RA2_bit, 2
;Teris.c,248 :: 		Chip_Select = 0;       // SELECT MAX
0x00D9	0x1105      	BCF        RA2_bit, 2
;Teris.c,249 :: 		SPI1_write(0x0C);
0x00DA	0x300C      	MOVLW      12
0x00DB	0x1683      	BSF        STATUS, 5
0x00DC	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x00DD	0x2003      	CALL       _SPI1_Write
;Teris.c,250 :: 		SPI1_write(0x01);      // Turn on the display
0x00DE	0x3001      	MOVLW      1
0x00DF	0x1683      	BSF        STATUS, 5
0x00E0	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x00E1	0x2003      	CALL       _SPI1_Write
;Teris.c,251 :: 		Chip_Select = 1;       // DESELECT MAX
0x00E2	0x1505      	BSF        RA2_bit, 2
;Teris.c,253 :: 		Chip_Select = 0;       // SELECT MAX
0x00E3	0x1105      	BCF        RA2_bit, 2
;Teris.c,254 :: 		SPI1_write(0x00);
0x00E4	0x1683      	BSF        STATUS, 5
0x00E5	0x01AB      	CLRF       FARG_SPI1_Write_data_
0x00E6	0x2003      	CALL       _SPI1_Write
;Teris.c,255 :: 		SPI1_write(0xFF);      // No test
0x00E7	0x30FF      	MOVLW      255
0x00E8	0x1683      	BSF        STATUS, 5
0x00E9	0x00AB      	MOVWF      FARG_SPI1_Write_data_
0x00EA	0x2003      	CALL       _SPI1_Write
;Teris.c,256 :: 		Chip_Select = 1;       // DESELECT MAX
0x00EB	0x1505      	BSF        RA2_bit, 2
;Teris.c,257 :: 		}
L_end_max7219_init1:
0x00EC	0x0008      	RETURN
; end of _max7219_init1
_SPI1_Init:
;__Lib_SPI_c345.c,16 :: 		
;__Lib_SPI_c345.c,19 :: 		
0x00ED	0x1683      	BSF        STATUS, 5
0x00EE	0x1303      	BCF        STATUS, 6
0x00EF	0x1287      	BCF        TRISC5_bit, 5
;__Lib_SPI_c345.c,20 :: 		
0x00F0	0x1187      	BCF        TRISC3_bit, 3
;__Lib_SPI_c345.c,21 :: 		
0x00F1	0x1607      	BSF        TRISC4_bit, 4
;__Lib_SPI_c345.c,23 :: 		
0x00F2	0x1283      	BCF        STATUS, 5
0x00F3	0x0194      	CLRF       SSPCON
;__Lib_SPI_c345.c,24 :: 		
0x00F4	0x3040      	MOVLW      64
0x00F5	0x1683      	BSF        STATUS, 5
0x00F6	0x0094      	MOVWF      SSPSTAT
;__Lib_SPI_c345.c,25 :: 		
0x00F7	0x1283      	BCF        STATUS, 5
0x00F8	0x1694      	BSF        SSPCON, 5
;__Lib_SPI_c345.c,27 :: 		
L_end_SPI1_Init:
0x00F9	0x0008      	RETURN
; end of _SPI1_Init
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x00FA	0x209C      	CALL       _____DoICP
0x00FB	0x118A      	BCF        PCLATH, 3
0x00FC	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x00FD	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x00FE	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x00FF	0x0AE5      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x0100	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x0101	0x0AE6      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x0102	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x0103	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x0104	0x28FA      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
L_end___CC2DW:
0x0105	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0106	0x2172      	CALL       370
;Teris.c,1269 :: 		int main()
;Teris.c,1296 :: 		Chip_Select_Direction = 0;    // Set RA2 pin as output.
0x0107	0x1683      	BSF        STATUS, 5
0x0108	0x1303      	BCF        STATUS, 6
0x0109	0x1105      	BCF        TRISA2_bit, 2
;Teris.c,1297 :: 		SPI1_init();                  // Initialize SPI1 module.
0x010A	0x20ED      	CALL       _SPI1_Init
;Teris.c,1299 :: 		max7219_init1(); // initialize  max7219.
0x010B	0x20BA      	CALL       _max7219_init1
;Teris.c,1300 :: 		srand(0);
0x010C	0x01E7      	CLRF       FARG_srand_x
0x010D	0x01E8      	CLRF       FARG_srand_x+1
0x010E	0x20AF      	CALL       _srand
;Teris.c,1303 :: 		Clear_Matrix();
0x010F	0x20A3      	CALL       _Clear_Matrix
;Teris.c,1304 :: 		printf_Screen();
0x0110	0x2096      	CALL       _printf_Screen
;Teris.c,1306 :: 		Delay_ms(1000);
0x0111	0x301A      	MOVLW      26
0x0112	0x00FB      	MOVWF      R11
0x0113	0x305E      	MOVLW      94
0x0114	0x00FC      	MOVWF      R12
0x0115	0x306E      	MOVLW      110
0x0116	0x00FD      	MOVWF      R13
L_main191:
0x0117	0x0BFD      	DECFSZ     R13, 1
0x0118	0x2917      	GOTO       L_main191
0x0119	0x0BFC      	DECFSZ     R12, 1
0x011A	0x2917      	GOTO       L_main191
0x011B	0x0BFB      	DECFSZ     R11, 1
0x011C	0x2917      	GOTO       L_main191
0x011D	0x0000      	NOP
;Teris.c,1307 :: 		while(1)
L_main192:
;Teris.c,1361 :: 		Delay_ms(1000);
0x011E	0x301A      	MOVLW      26
0x011F	0x00FB      	MOVWF      R11
0x0120	0x305E      	MOVLW      94
0x0121	0x00FC      	MOVWF      R12
0x0122	0x306E      	MOVLW      110
0x0123	0x00FD      	MOVWF      R13
L_main194:
0x0124	0x0BFD      	DECFSZ     R13, 1
0x0125	0x2924      	GOTO       L_main194
0x0126	0x0BFC      	DECFSZ     R12, 1
0x0127	0x2924      	GOTO       L_main194
0x0128	0x0BFB      	DECFSZ     R11, 1
0x0129	0x2924      	GOTO       L_main194
0x012A	0x0000      	NOP
;Teris.c,1365 :: 		}
0x012B	0x291E      	GOTO       L_main192
;Teris.c,1375 :: 		}
L_end_main:
0x012C	0x292C      	GOTO       $+0
; end of _main
0x0172	0x3020      	MOVLW      32
0x0173	0x0084      	MOVWF      FSR
0x0174	0x3040      	MOVLW      64
0x0175	0x1283      	BCF        STATUS, 5
0x0176	0x1303      	BCF        STATUS, 6
0x0177	0x00F0      	MOVWF      R0
0x0178	0x3032      	MOVLW      50
0x0179	0x00E5      	MOVWF      ___DoICPAddr
0x017A	0x3001      	MOVLW      1
0x017B	0x00E6      	MOVWF      102
0x017C	0x20FA      	CALL       250
0x017D	0x0008      	RETURN
;Teris.c,0 :: ?ICS_g_matrix88
0x0132	0x3400 ;?ICS_g_matrix88+0
0x0133	0x3400 ;?ICS_g_matrix88+1
0x0134	0x3400 ;?ICS_g_matrix88+2
0x0135	0x3400 ;?ICS_g_matrix88+3
0x0136	0x3400 ;?ICS_g_matrix88+4
0x0137	0x3400 ;?ICS_g_matrix88+5
0x0138	0x3400 ;?ICS_g_matrix88+6
0x0139	0x3400 ;?ICS_g_matrix88+7
0x013A	0x3400 ;?ICS_g_matrix88+8
0x013B	0x3400 ;?ICS_g_matrix88+9
0x013C	0x3400 ;?ICS_g_matrix88+10
0x013D	0x3400 ;?ICS_g_matrix88+11
0x013E	0x3400 ;?ICS_g_matrix88+12
0x013F	0x3400 ;?ICS_g_matrix88+13
0x0140	0x3400 ;?ICS_g_matrix88+14
0x0141	0x3400 ;?ICS_g_matrix88+15
0x0142	0x3400 ;?ICS_g_matrix88+16
0x0143	0x3400 ;?ICS_g_matrix88+17
0x0144	0x3400 ;?ICS_g_matrix88+18
0x0145	0x3400 ;?ICS_g_matrix88+19
0x0146	0x3400 ;?ICS_g_matrix88+20
0x0147	0x3400 ;?ICS_g_matrix88+21
0x0148	0x3400 ;?ICS_g_matrix88+22
0x0149	0x3400 ;?ICS_g_matrix88+23
0x014A	0x3400 ;?ICS_g_matrix88+24
0x014B	0x3400 ;?ICS_g_matrix88+25
0x014C	0x3400 ;?ICS_g_matrix88+26
0x014D	0x3400 ;?ICS_g_matrix88+27
0x014E	0x3400 ;?ICS_g_matrix88+28
0x014F	0x3400 ;?ICS_g_matrix88+29
0x0150	0x3401 ;?ICS_g_matrix88+30
0x0151	0x3400 ;?ICS_g_matrix88+31
0x0152	0x3400 ;?ICS_g_matrix88+32
0x0153	0x3400 ;?ICS_g_matrix88+33
0x0154	0x3401 ;?ICS_g_matrix88+34
0x0155	0x3400 ;?ICS_g_matrix88+35
0x0156	0x3401 ;?ICS_g_matrix88+36
0x0157	0x3400 ;?ICS_g_matrix88+37
0x0158	0x3401 ;?ICS_g_matrix88+38
0x0159	0x3400 ;?ICS_g_matrix88+39
0x015A	0x3400 ;?ICS_g_matrix88+40
0x015B	0x3401 ;?ICS_g_matrix88+41
0x015C	0x3401 ;?ICS_g_matrix88+42
0x015D	0x3400 ;?ICS_g_matrix88+43
0x015E	0x3401 ;?ICS_g_matrix88+44
0x015F	0x3400 ;?ICS_g_matrix88+45
0x0160	0x3401 ;?ICS_g_matrix88+46
0x0161	0x3400 ;?ICS_g_matrix88+47
0x0162	0x3400 ;?ICS_g_matrix88+48
0x0163	0x3401 ;?ICS_g_matrix88+49
0x0164	0x3401 ;?ICS_g_matrix88+50
0x0165	0x3400 ;?ICS_g_matrix88+51
0x0166	0x3401 ;?ICS_g_matrix88+52
0x0167	0x3400 ;?ICS_g_matrix88+53
0x0168	0x3401 ;?ICS_g_matrix88+54
0x0169	0x3400 ;?ICS_g_matrix88+55
0x016A	0x3400 ;?ICS_g_matrix88+56
0x016B	0x3401 ;?ICS_g_matrix88+57
0x016C	0x3401 ;?ICS_g_matrix88+58
0x016D	0x3401 ;?ICS_g_matrix88+59
0x016E	0x3401 ;?ICS_g_matrix88+60
0x016F	0x3401 ;?ICS_g_matrix88+61
0x0170	0x3401 ;?ICS_g_matrix88+62
0x0171	0x3400 ;?ICS_g_matrix88+63
; end of ?ICS_g_matrix88
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [14]    _SPI1_Write
0x0011      [13]    _Write_Byte
0x001E      [21]    _printf_MATRIX7219
0x0033      [61]    _MATRIX88_to_MATRIX7219
0x0070      [13]    _printf_MATRIX88
0x007D      [25]    _memset
0x0096       [6]    _printf_Screen
0x009C       [7]    _____DoICP
0x00A3      [12]    _Clear_Matrix
0x00AF      [11]    _srand
0x00BA      [51]    _max7219_init1
0x00ED      [13]    _SPI1_Init
0x00FA      [12]    ___CC2DW
0x0106      [38]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [0]    Chip_Select
0x0005       [0]    RA2_bit
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x000D       [1]    PIR2
0x0010       [1]    T1CON
0x0012       [1]    T2CON
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0017       [1]    CCP1CON
0x0018       [1]    RCSTA
0x001D       [1]    CCP2CON
0x001F       [1]    ADCON0
0x0020      [64]    _g_matrix88
0x0060       [1]    __Lib_CStdlib_randf
0x0061       [4]    __Lib_CStdlib_randx
0x0065       [2]    ___DoICPAddr
0x0067       [2]    FARG_srand_x
0x0069       [1]    FARG_memset_p1
0x006A       [1]    FARG_memset_character
0x006B       [2]    FARG_memset_n
0x006D       [1]    FARG_printf_MATRIX88_matrix_88
0x006E       [1]    FARG_MATRIX88_to_MATRIX7219_matrix_88
0x006E       [1]    FARG_printf_MATRIX7219_matrix
0x006F       [1]    FARG_MATRIX88_to_MATRIX7219_matrix_7219
0x006F       [1]    printf_MATRIX7219_col_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0085       [0]    Chip_Select_Direction
0x0085       [0]    TRISA2_bit
0x0086       [1]    TRISB
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC5_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC3_bit
0x0089       [1]    TRISE
0x008C       [1]    PIE1
0x008D       [1]    PIE2
0x008E       [1]    PCON
0x008F       [1]    OSCCON
0x0090       [1]    OSCTUNE
0x0091       [1]    SSPCON2
0x0093       [1]    MSK
0x0094       [1]    SSPSTAT
0x0095       [1]    WPUB
0x0096       [1]    IOCB
0x0097       [1]    VRCON
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
0x009B       [1]    PWM1CON
0x009C       [1]    ECCPAS
0x009D       [1]    PSTRCON
0x009F       [1]    ADCON1
0x00A0       [8]    printf_MATRIX88_matrix_7219_L0
0x00A8       [1]    MATRIX88_to_MATRIX7219_mask_L0
0x00A9       [1]    FARG_Write_Byte_myColumn
0x00AA       [1]    FARG_Write_Byte_myValue
0x00AB       [1]    FARG_SPI1_Write_data_
0x0105       [1]    WDTCON
0x0107       [1]    CM1CON0
0x0108       [1]    CM2CON0
0x0109       [1]    CM2CON1
0x0185       [1]    SRCON
0x0187       [1]    BAUDCTL
0x0188       [1]    ANSEL
0x0189       [1]    ANSELH
0x018C       [1]    EECON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0132      [64]    ?ICS_g_matrix88
//** Label List: ** 
//----------------------------------------------
  L_end_P16F886___?ag
  P16F886____?ag
  L_printf_MATRIX72190
  L_printf_MATRIX72191
  L_printf_MATRIX72192
  L_MATRIX88_to_MATRIX72193
  L_MATRIX88_to_MATRIX72194
  L_MATRIX88_to_MATRIX72195
  L_MATRIX88_to_MATRIX72196
  L_MATRIX88_to_MATRIX72197
  L_MATRIX88_to_MATRIX72198
  L_MATRIX88_to_MATRIX72199
  L_is_row_full10
  L_is_row_full11
  L_is_row_full12
  L_is_row_full13
  L_delete_row14
  L_delete_row15
  L_delete_row16
  L_delete_row17
  L_delete_row18
  L_delete_row19
  L_delete_matrix20
  L_delete_matrix21
  L_delete_matrix22
  L_delete_matrix23
  L_is_row_empty24
  L_is_row_empty25
  L_is_row_empty26
  L_is_row_empty27
  L_is_col_empty28
  L_is_col_empty29
  L_is_col_empty30
  L_is_col_empty31
  L_hit_land132
  L_hit_land133
  L_hit_land134
  L_hit_land135
  L_hit_land136
  L_hit_land137
  L_hit_land138
  L_hit_land139
  L_hit_land140
  L_is_valid41
  L_is_valid42
  L_is_valid43
  L_is_valid44
  L_is_valid45
  L_is_valid46
  L_is_valid47
  L_is_valid48
  L_is_valid49
  L_is_valid50
  L_is_valid51
  L_is_valid52
  L_is_left_boundary53
  L_is_left_boundary54
  L_is_left_boundary55
  L_is_left_boundary56
  L_is_left_boundary57
  L_is_left_boundary58
  L_is_left_boundary59
  L_is_left_boundary60
  L_is_right_boundary61
  L_is_right_boundary62
  L_is_right_boundary63
  L_is_right_boundary64
  L_is_right_boundary65
  L_is_right_boundary66
  L_is_right_boundary67
  L_is_right_boundary68
  L_fall_off69
  L_fall_off70
  L_fall_off71
  L_fall_off72
  L_fall_off73
  L_fall_off74
  L_fall_off75
  L_fall_off76
  L_fall_off77
  L_fall_off78
  L_fall_off79
  L_clear80
  L_clear81
  L_clear82
  L_clear83
  L_clear84
  L_clear85
  L_clear86
  L_merge87
  L_merge88
  L_merge89
  L_merge90
  L_merge91
  L_merge92
  L_merge93
  L_merge194
  L_merge195
  L_merge196
  L_merge197
  L_merge198
  L_merge199
  L_merge1100
  L_evaluate101
  L_evaluate102
  L_evaluate103
  L_evaluate104
  L_evaluate105
  L_evaluate106
  L_evaluate107
  L_evaluate108
  L_evaluate109
  L_evaluate110
  L_left_most111
  L_left_most112
  L_left_most113
  L_right_most114
  L_right_most115
  L_right_most116
  L_get_high117
  L_get_high118
  L_get_high119
  L_get_high120
  L_get_high_after_merge121
  L_get_high_after_merge122
  L_get_high_after_merge123
  L_get_high_after_merge124
  L_get_high_after_merge125
  L_get_high_after_merge126
  L_get_high_after_merge127
  L_get_holes_after_merge128
  L_get_holes_after_merge129
  L_get_holes_after_merge130
  L_get_holes_after_merge131
  L_get_holes_after_merge132
  L_get_holes_after_merge133
  L_get_holes_after_merge134
  L_get_holes_after_merge135
  L_get_holes_after_merge136
  L_get_holes_after_merge137
  L_get_holes_after_merge138
  L_get_holes_after_merge139
  L_get_holes_after_merge140
  L_get_holes_after_merge141
  L_get_holes_after_merge142
  L_get_holes_after_merge143
  L_get_holes_after_merge144
  L_get_holes_after_merge145
  L_get_holes_after_merge146
  L_get_holes_after_merge147
  L_get_holes_after_merge148
  L_get_holes_after_merge149
  L_get_holes_after_merge150
  L_get_holes_after_merge151
  L_get_holes_after_merge152
  L_get_holes_after_merge153
  L_get_holes_after_merge154
  L_get_holes_after_merge155
  L_get_holes_after_merge156
  L_get_holes_after_merge157
  L_get_holes_after_merge158
  L_find_best_solution159
  L_find_best_solution160
  L_find_best_solution161
  L_find_best_solution162
  L_find_best_solution163
  L_find_best_solution164
  L_find_best_solution165
  L_find_best_solution166
  L_find_best_solution167
  L_find_best_solution168
  L_find_best_solution169
  L_find_best_solution170
  L_find_best_solution171
  L_find_best_solution172
  L_find_best_solution173
  L_find_best_solution174
  L_find_best_solution175
  L_find_best_solution176
  L_find_best_solution177
  L_find_best_solution178
  L_find_best_solution179
  L_find_best_solution180
  L_find_best_solution181
  L_find_best_solution182
  L_find_best_solution183
  L_find_best_solution184
  L_find_best_solution185
  L_find_best_solution186
  L_find_best_solution187
  L_Write_Char188
  L_Write_Char189
  L_Write_Char190
  ___main___start
  L_main191
  L_main192
  L_main193
  L_main194
  ___main___exit
  L__is_valid195
  L__get_holes_after_merge196
  L__get_holes_after_merge197
  L__get_holes_after_merge198
  L__get_holes_after_merge199
  L_end_max7219_init1
  _max7219_init1
  L_end_Write_Byte
  _Write_Byte
  L_end_printf_MATRIX7219
  _printf_MATRIX7219
  L_end_MATRIX88_to_MATRIX7219
  _MATRIX88_to_MATRIX7219
  L_end_printf_MATRIX88
  _printf_MATRIX88
  L_end_printf_Screen
  _printf_Screen
  L_end_Clear_Matrix
  _Clear_Matrix
  L_end_is_row_full
  _is_row_full
  L_end_delete_row
  _delete_row
  L__delete_row209
  L__delete_row210
  L__delete_row211
  L__delete_row212
  L__delete_row213
  L__delete_row214
  L__delete_row215
  L_end_delete_matrix
  _delete_matrix
  L_end_is_row_empty
  _is_row_empty
  L_end_is_col_empty
  _is_col_empty
  L_end_hit_land1
  _hit_land1
  L__hit_land1220
  L__hit_land1221
  L__hit_land1222
  L_end_is_valid
  _is_valid
  L__is_valid224
  L__is_valid225
  L__is_valid226
  L__is_valid227
  L__is_valid228
  L_end_is_left_boundary
  _is_left_boundary
  L__is_left_boundary230
  L_end_is_right_boundary
  _is_right_boundary
  L__is_right_boundary232
  L_end_fall_off
  _fall_off
  L__fall_off234
  L__fall_off235
  L__fall_off236
  L_end_clear
  _clear
  L__clear238
  L__clear239
  L_end_merge
  _merge
  L__merge241
  L__merge242
  L_end_merge1
  _merge1
  L__merge1244
  L__merge1245
  L_end_evaluate
  _evaluate
  L__evaluate247
  L__evaluate248
  L__evaluate249
  L__evaluate250
  L__evaluate251
  L__evaluate252
  L_end_char_info_index_rand
  _char_info_index_rand
  L_end_left_most
  _left_most
  L_end_right_most
  _right_most
  L_end_get_high
  _get_high
  L_end_get_high_after_merge
  _get_high_after_merge
  L_end_get_holes_after_merge
  _get_holes_after_merge
  L__get_holes_after_merge259
  L__get_holes_after_merge260
  L__get_holes_after_merge261
  L__get_holes_after_merge262
  L__get_holes_after_merge263
  L__get_holes_after_merge264
  L__get_holes_after_merge265
  L__get_holes_after_merge266
  L__get_holes_after_merge267
  L__get_holes_after_merge268
  L__get_holes_after_merge269
  L__get_holes_after_merge270
  L__get_holes_after_merge271
  L__get_holes_after_merge272
  L__get_holes_after_merge273
  L__get_holes_after_merge274
  L__get_holes_after_merge275
  L_end_find_best_solution
  _find_best_solution
  L__find_best_solution277
  L__find_best_solution278
  L__find_best_solution279
  L__find_best_solution280
  L__find_best_solution281
  L_end_Write_Char
  _Write_Char
  L_end_main
  _main
  L_abs0
  L___Lib_CStdlib_strtod1
  L___Lib_CStdlib_strtod2
  L___Lib_CStdlib_strtod3
  L___Lib_CStdlib_strtod4
  L___Lib_CStdlib_strtod5
  L___Lib_CStdlib_strtod6
  L___Lib_CStdlib_strtod7
  L___Lib_CStdlib_strtod8
  L___Lib_CStdlib_strtod9
  L___Lib_CStdlib_strtod10
  L___Lib_CStdlib_strtod11
  L___Lib_CStdlib_strtod12
  L___Lib_CStdlib_strtod13
  L___Lib_CStdlib_strtod14
  L___Lib_CStdlib_strtod15
  L___Lib_CStdlib_strtod16
  L___Lib_CStdlib_strtod17
  L___Lib_CStdlib_strtod18
  L___Lib_CStdlib_strtod19
  L___Lib_CStdlib_strtod20
  L___Lib_CStdlib_strtod21
  L___Lib_CStdlib_strtod22
  L___Lib_CStdlib_strtod23
  L___Lib_CStdlib_strtod24
  L___Lib_CStdlib_strtod25
  L___Lib_CStdlib_strtod26
  L___Lib_CStdlib_strtod27
  L___Lib_CStdlib_strtod28
  L___Lib_CStdlib_strtod29
  L___Lib_CStdlib_strtod30
  L___Lib_CStdlib_strtod31
  L___Lib_CStdlib_strtod32
  L___Lib_CStdlib_strtod33
  L___Lib_CStdlib_strtod34
  L___Lib_CStdlib_strtod35
  L___Lib_CStdlib_strtod36
  L___Lib_CStdlib_strtod37
  L___Lib_CStdlib_strtod38
  L___Lib_CStdlib_strtod39
  L___Lib_CStdlib_strtod40
  L___Lib_CStdlib_strtod41
  L___Lib_CStdlib_strtod42
  L___Lib_CStdlib_strtod43
  L___Lib_CStdlib_strtod44
  L___Lib_CStdlib_strtod45
  L___Lib_CStdlib_strtod46
  L___Lib_CStdlib_strtod47
  L___Lib_CStdlib_strtod48
  L___Lib_CStdlib_strtod49
  L___Lib_CStdlib_strtod50
  L___Lib_CStdlib_strtod51
  L___Lib_CStdlib_strtod52
  ___atoi_skipws_atoi
  L_atoi53
  L_atoi54
  L_atoi55
  L_atoi56
  L_atoi57
  L_atoi58
  ___atoi_conv_atoi
  L_atoi59
  L_atoi60
  ___atol_skipws_atol
  L_atol61
  L_atol62
  L_atol63
  L_atol64
  L_atol65
  L_atol66
  ___atol_conv_atol
  L_atol67
  L_atol68
  L_div69
  L_ldiv70
  L_uldiv71
  L_labs72
  L_max73
  L_min74
  L_rand75
  L_xtoi76
  L_xtoi77
  L_xtoi78
  L_xtoi79
  L_xtoi80
  L_xtoi81
  L_xtoi82
  L_xtoi83
  L_xtoi84
  L_xtoi85
  L_xtoi86
  L___Lib_CStdlib_strtod87
  L___Lib_CStdlib_strtod88
  L___Lib_CStdlib_strtod89
  L__atoi90
  L__atol91
  L_end_abs
  _abs
  L__abs93
  L_end_strtod
  __Lib_CStdlib_strtod
  L___Lib_CStdlib_strtod95
  L___Lib_CStdlib_strtod96
  L_end_atof
  _atof
  L_end_atoi
  _atoi
  L__atoi99
  L__atoi100
  L__atoi101
  L__atoi102
  L_end_atol
  _atol
  L__atol104
  L__atol105
  L_end_div
  _div
  L_end_ldiv
  _ldiv
  L_end_uldiv
  _uldiv
  L_end_labs
  _labs
  L__labs110
  L_end_max
  _max
  L__max112
  L_end_min
  _min
  L__min114
  L_end_srand
  _srand
  L_end_rand
  _rand
  L_end_xtoi
  _xtoi
  L_memchr0
  L_memchr1
  L_memchr2
  L_memchr3
  L_memcmp4
  L_memcmp5
  L_memcmp6
  L_memcpy7
  L_memcpy8
  L_memmove9
  L_memmove10
  L_memmove11
  L_memmove12
  L_memmove13
  L_memmove14
  L_memmove15
  L_memmove16
  L_memmove17
  L_memmove18
  L_memmove19
  L_memset20
  L_memset21
  L_strcat22
  L_strcat23
  L_strcat24
  L_strcat25
  L_strchr26
  L_strchr27
  L_strchr28
  L_strchr29
  L_strcmp30
  L_strcmp31
  L_strcmp32
  L_strcmp33
  L_strcpy34
  L_strcpy35
  L_strlen36
  L_strlen37
  L_strncat38
  L_strncat39
  L_strncat40
  L_strncat41
  L_strncat42
  L_strncat43
  L_strncat44
  L_strncpy45
  L_strncpy46
  L_strncpy47
  L_strncpy48
  L_strncpy49
  L_strspn50
  L_strspn51
  L_strspn52
  L_strspn53
  L_strcspn54
  L_strcspn55
  L_strcspn56
  L_strcspn57
  L_strncmp58
  L_strncmp59
  L_strncmp60
  L_strncmp61
  L_strncmp62
  L_strpbrk63
  L_strpbrk64
  L_strpbrk65
  L_strrchr66
  L_strrchr67
  L_strrchr68
  L_strrchr69
  L_strstr70
  L_strstr71
  L_strstr72
  L_strstr73
  L_strstr74
  L_strtok75
  L_strtok76
  L_strtok77
  L_strtok78
  L_strtok79
  L__memmove80
  L__strcmp81
  L__strncat82
  L__strspn83
  L__strcspn84
  L__strncmp85
  L__strstr86
  L_end_memchr
  _memchr
  L_end_memcmp
  _memcmp
  L__memcmp89
  L_end_memcpy
  _memcpy
  L_end_memmove
  _memmove
  L_end_memset
  _memset
  L_end_strcat
  _strcat
  L_end_strchr
  _strchr
  L_end_strcmp
  _strcmp
  L_end_strcpy
  _strcpy
  L_end_strlen
  _strlen
  L_end_strncat
  _strncat
  L__strncat99
  L_end_strncpy
  _strncpy
  L_end_strspn
  _strspn
  L_end_strcspn
  _strcspn
  L_end_strncmp
  _strncmp
  L_end_strpbrk
  _strpbrk
  L_end_strrchr
  _strrchr
  L_end_strstr
  _strstr
  L__strstr107
  L_end_strtok
  _strtok
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
