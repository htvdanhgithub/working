#line 1 "D:/Working/working/MyLocalRepositorywc/Teris_16f886_mikroC/mikroC/Teris.c"
#line 34 "D:/Working/working/MyLocalRepositorywc/Teris_16f886_mikroC/mikroC/Teris.c"
unsigned const short Alphabet[156]={
 0x7f, 0x88, 0x88, 0x88, 0x88, 0x7f,

 0xff, 0x91, 0x91, 0x91, 0x91, 0x6e,
 0x7e, 0x81, 0x81, 0x81, 0x81, 0x42,
 0xff, 0x81, 0x81, 0x81, 0x81, 0x7e,
 0x81, 0xff, 0x91, 0x91, 0x91, 0x91,
 0x81, 0xff, 0x91, 0x90, 0x90, 0x80,
 0x7e, 0x81, 0x81, 0x89, 0x89, 0x4e,
 0xff, 0x10, 0x10, 0x10, 0x10, 0xff,
 0x00, 0x81, 0xff, 0xff, 0x81, 0x00,
 0x06, 0x01, 0x81, 0xfe, 0x80, 0x00,
 0x81, 0xff, 0x99, 0x24, 0xc3, 0x81,
 0x81, 0xff, 0x81, 0x01, 0x01, 0x03,
 0xff, 0x60, 0x18, 0x18, 0x60, 0xff,
 0xff, 0x60, 0x10, 0x08, 0x06, 0xff,
 0x7e, 0x81, 0x81, 0x81, 0x81, 0x7e,
 0x81, 0xff, 0x89, 0x88, 0x88, 0x70,
 0x7e, 0x81, 0x85, 0x89, 0x87, 0x7e,
 0xff, 0x98, 0x98, 0x94, 0x93, 0x61,
 0x62, 0x91, 0x91, 0x91, 0x91, 0x4e,
 0xc0, 0x81, 0xff, 0xff, 0x81, 0xc0,
 0xfe, 0x01, 0x01, 0x01, 0x01, 0xfe,
 0xfc, 0x02, 0x01, 0x01, 0x02, 0xfc,
 0xff, 0x02, 0x04, 0x04, 0x02, 0xff,
 0xc3, 0x24, 0x18, 0x18, 0x24, 0xc3,
 0xc0, 0x20, 0x1f, 0x1f, 0x20, 0xc0,
 0xc3, 0x85, 0x89, 0x91, 0xa1, 0xc3,
};

unsigned const short Symbols[114]={
 0x00, 0x3c, 0x42, 0x81, 0x00, 0x00,
 0x00, 0x00, 0x81, 0x42, 0x3c, 0x00,
 0x00, 0x00, 0xff, 0x81, 0x00, 0x00,
 0x00, 0x00, 0x81, 0xff, 0x00, 0x00,
 0x00, 0x18, 0xe7, 0x81, 0x00, 0x00,
 0x00, 0x00, 0x81, 0xe7, 0x18, 0x00,
 0x00, 0x18, 0x24, 0x42, 0x81, 0x00,
 0x00, 0x81, 0x42, 0x24, 0x18, 0x00,
 0x00, 0x03, 0x0c, 0x30, 0xc0, 0x00,
#line 75 "D:/Working/working/MyLocalRepositorywc/Teris_16f886_mikroC/mikroC/Teris.c"
 0x00, 0xc0, 0x30, 0x0c, 0x03, 0x00,
 0x00, 0x00, 0xfd, 0xfd, 0x00, 0x00,
 0x60, 0x80, 0x8d, 0x8d, 0x90, 0x60,
 0x42, 0x24, 0xff, 0xff, 0x24, 0x42,
 0x24, 0xff, 0x24, 0x24, 0xff, 0x24,
 0x62, 0x91, 0xff, 0xff, 0x91, 0x4e,
 0x66, 0x99, 0x99, 0x66, 0x09, 0x00,
 0x42, 0xa4, 0x48, 0x12, 0x25, 0x42,
 0x20, 0x3f, 0x20, 0x20, 0x3e, 0x21,
};


sbit Chip_Select at RA2_bit;
sbit Chip_Select_Direction at TRISA2_bit;



void max7219_init1()
{
 Chip_Select = 0;
 SPI1_write(0x09);
 SPI1_write(0x00);
 Chip_Select = 1;

 Chip_Select = 0;
 SPI1_write(0x0A);
 SPI1_write(0x0F);
 Chip_Select = 1;

 Chip_Select = 0;
 SPI1_write(0x0B);
 SPI1_write(0x07);
 Chip_Select = 1;

 Chip_Select = 0;
 SPI1_write(0x0C);
 SPI1_write(0x01);
 Chip_Select = 1;

 Chip_Select = 0;
 SPI1_write(0x00);
 SPI1_write(0xFF);
 Chip_Select = 1;
}


void Write_Byte(unsigned short myColumn, unsigned short myValue)
{
 Chip_Select = 0;
 SPI1_write(myColumn);
 SPI1_write(myValue);
 Chip_Select = 1;
}


void Clear_Matrix(void)
{
 unsigned short x;

 for(x=1;x<9;x++)
 {
 Write_Byte(x,0x00);
 }
}

void Write_Char(char myChar)
{
 unsigned short Column, Start_Byte;





 Clear_Matrix();


 Start_Byte = (myChar - 65) * 6;


 for(Column=2;Column<8;Column++)
 {
 Write_Byte(Column, Alphabet[Start_Byte++]);
 }
}


void Write_Symbol(char mysymbols)
{
 unsigned short Column1, Start_Byte1;





 Clear_Matrix();


 Start_Byte1 = (mysymbols-0) * 6 ;


 for(Column1=2;Column1<8;Column1++)
 {
 Write_Byte(Column1, Symbols[Start_Byte1++]);
 }
}


void main()
{
 unsigned int x,y;

 Chip_Select_Direction = 0;
 SPI1_init();

 max7219_init1();

 do
 {
#line 207 "D:/Working/working/MyLocalRepositorywc/Teris_16f886_mikroC/mikroC/Teris.c"
 for(x=65;x<=90;x++)
 {
 Write_Char(x);
 Delay_ms(1000);
 }

 Clear_Matrix();
 delay_ms(500);

 for(y=0;y<=18;y++)
 {
 Write_Symbol(y);
 Delay_ms(1000);
 }

 }while(1);
}
