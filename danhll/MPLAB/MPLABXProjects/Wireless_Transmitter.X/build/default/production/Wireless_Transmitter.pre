
# 1 "Wireless_Transmitter.c"

# 12 "C:\Program Files\HI-TECH Software\PICC\9.83\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 31 "C:\Program Files\HI-TECH Software\PICC\9.83\include\stdarg.h"
typedef void * va_list[1];

#pragma inline(__va_start)
extern void * __va_start(void);

#pragma inline(__va_arg)
extern void * __va_arg(void *, ...);

# 27 "C:\Program Files\HI-TECH Software\PICC\9.83\include\stdio.h"
extern int errno;

# 58
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "C:\Program Files\HI-TECH Software\PICC\9.83\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 103 "C:\Program Files\HI-TECH Software\PICC\9.83\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);

# 195
extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...);
extern int sscanf(const char *, const char *, ...);
extern int vprintf(const char *, va_list);
extern int vsprintf(char *, const char *, va_list);
extern int vscanf(const char *, va_list ap);
extern int vsscanf(const char *, const char *, va_list);

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 27 "C:\Program Files\HI-TECH Software\PICC\9.83\include\stdlib.h"
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);

# 106
extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

# 122
extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);

# 145
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);
extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

# 9 "C:\Program Files\HI-TECH Software\PICC\9.83\include\pic.h"
extern unsigned char __osccal_val(void);

# 76 "C:\Program Files\HI-TECH Software\PICC\9.83\include\pic12f629.h"
volatile unsigned char INDF @ 0x000;



volatile unsigned char TMR0 @ 0x001;



volatile unsigned char PCL @ 0x002;



volatile unsigned char STATUS @ 0x003;

volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit nPD @ ((unsigned)&STATUS*8)+3;
volatile bit nTO @ ((unsigned)&STATUS*8)+4;
volatile bit IRP @ ((unsigned)&STATUS*8)+7;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;

# 118
volatile unsigned char FSR @ 0x004;



volatile unsigned char GPIO @ 0x005;

volatile bit GP0 @ ((unsigned)&GPIO*8)+0;
volatile bit GP1 @ ((unsigned)&GPIO*8)+1;
volatile bit GP2 @ ((unsigned)&GPIO*8)+2;
volatile bit GP3 @ ((unsigned)&GPIO*8)+3;
volatile bit GP4 @ ((unsigned)&GPIO*8)+4;
volatile bit GP5 @ ((unsigned)&GPIO*8)+5;
volatile bit GPIO0 @ ((unsigned)&GPIO*8)+0;
volatile bit GPIO1 @ ((unsigned)&GPIO*8)+1;
volatile bit GPIO2 @ ((unsigned)&GPIO*8)+2;
volatile bit GPIO3 @ ((unsigned)&GPIO*8)+3;
volatile bit GPIO4 @ ((unsigned)&GPIO*8)+4;
volatile bit GPIO5 @ ((unsigned)&GPIO*8)+5;

# 158
volatile unsigned char PCLATH @ 0x00A;

# 169
volatile unsigned char INTCON @ 0x00B;

volatile bit GPIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit GPIE @ ((unsigned)&INTCON*8)+3;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;
volatile bit TMR0IF @ ((unsigned)&INTCON*8)+2;
volatile bit TMR0IE @ ((unsigned)&INTCON*8)+5;

# 203
volatile unsigned char PIR1 @ 0x00C;

volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
volatile bit CMIF @ ((unsigned)&PIR1*8)+3;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
volatile bit EEIF @ ((unsigned)&PIR1*8)+7;
volatile bit T1IF @ ((unsigned)&PIR1*8)+0;

# 228
volatile unsigned char TMR1L @ 0x00E;



volatile unsigned char TMR1H @ 0x00F;



volatile unsigned int TMR1 @ 0x00E;


volatile unsigned char T1CON @ 0x010;

volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
volatile bit nT1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;

# 267
volatile unsigned char CMCON @ 0x019;

volatile bit CIS @ ((unsigned)&CMCON*8)+3;
volatile bit CINV @ ((unsigned)&CMCON*8)+4;
volatile bit COUT @ ((unsigned)&CMCON*8)+6;
volatile bit CM0 @ ((unsigned)&CMCON*8)+0;
volatile bit CM1 @ ((unsigned)&CMCON*8)+1;
volatile bit CM2 @ ((unsigned)&CMCON*8)+2;

# 298
volatile unsigned char OPTION_REG @ 0x081;

volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
volatile bit nGPPU @ ((unsigned)&OPTION_REG*8)+7;
volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;

# 327
volatile unsigned char TRISIO @ 0x085;

volatile bit TRISIO0 @ ((unsigned)&TRISIO*8)+0;
volatile bit TRISIO1 @ ((unsigned)&TRISIO*8)+1;
volatile bit TRISIO2 @ ((unsigned)&TRISIO*8)+2;
volatile bit TRISIO3 @ ((unsigned)&TRISIO*8)+3;
volatile bit TRISIO4 @ ((unsigned)&TRISIO*8)+4;
volatile bit TRISIO5 @ ((unsigned)&TRISIO*8)+5;

# 349
volatile unsigned char PIE1 @ 0x08C;

volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
volatile bit CMIE @ ((unsigned)&PIE1*8)+3;
volatile bit ADIE @ ((unsigned)&PIE1*8)+6;
volatile bit EEIE @ ((unsigned)&PIE1*8)+7;
volatile bit T1IE @ ((unsigned)&PIE1*8)+0;

# 373
volatile unsigned char PCON @ 0x08E;

volatile bit nBOR @ ((unsigned)&PCON*8)+0;
volatile bit nPOR @ ((unsigned)&PCON*8)+1;
volatile bit nBOD @ ((unsigned)&PCON*8)+0;

# 391
volatile unsigned char OSCCAL @ 0x090;

volatile bit CAL0 @ ((unsigned)&OSCCAL*8)+2;
volatile bit CAL1 @ ((unsigned)&OSCCAL*8)+3;
volatile bit CAL2 @ ((unsigned)&OSCCAL*8)+4;
volatile bit CAL3 @ ((unsigned)&OSCCAL*8)+5;
volatile bit CAL4 @ ((unsigned)&OSCCAL*8)+6;
volatile bit CAL5 @ ((unsigned)&OSCCAL*8)+7;

# 418
volatile unsigned char WPU @ 0x095;

volatile bit WPU0 @ ((unsigned)&WPU*8)+0;
volatile bit WPU1 @ ((unsigned)&WPU*8)+1;
volatile bit WPU2 @ ((unsigned)&WPU*8)+2;
volatile bit WPU4 @ ((unsigned)&WPU*8)+4;
volatile bit WPU5 @ ((unsigned)&WPU*8)+5;

# 439
volatile unsigned char IOC @ 0x096;
volatile unsigned char IOCB @ 0x096;

volatile bit IOC0 @ ((unsigned)&IOC*8)+0;
volatile bit IOC1 @ ((unsigned)&IOC*8)+1;
volatile bit IOC2 @ ((unsigned)&IOC*8)+2;
volatile bit IOC3 @ ((unsigned)&IOC*8)+3;
volatile bit IOC4 @ ((unsigned)&IOC*8)+4;
volatile bit IOC5 @ ((unsigned)&IOC*8)+5;
volatile bit IOCB0 @ ((unsigned)&IOC*8)+0;
volatile bit IOCB1 @ ((unsigned)&IOC*8)+1;
volatile bit IOCB2 @ ((unsigned)&IOC*8)+2;
volatile bit IOCB3 @ ((unsigned)&IOC*8)+3;
volatile bit IOCB4 @ ((unsigned)&IOC*8)+4;
volatile bit IOCB5 @ ((unsigned)&IOC*8)+5;

# 476
volatile unsigned char VRCON @ 0x099;

volatile bit VRR @ ((unsigned)&VRCON*8)+5;
volatile bit VREN @ ((unsigned)&VRCON*8)+7;
volatile bit VR0 @ ((unsigned)&VRCON*8)+0;
volatile bit VR1 @ ((unsigned)&VRCON*8)+1;
volatile bit VR2 @ ((unsigned)&VRCON*8)+2;
volatile bit VR3 @ ((unsigned)&VRCON*8)+3;

# 503
volatile unsigned char EEDATA @ 0x09A;
volatile unsigned char EEDAT @ 0x09A;



volatile unsigned char EEADR @ 0x09B;

# 519
volatile unsigned char EECON1 @ 0x09C;

volatile bit RD @ ((unsigned)&EECON1*8)+0;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;

# 537
volatile unsigned char EECON2 @ 0x09D;


# 27 "C:\Program Files\HI-TECH Software\PICC\9.83\include\pic.h"
#pragma inline(_nop)
extern void _nop(void);

# 80
extern unsigned int flash_read(unsigned short addr);

# 144
extern void flash_erase(unsigned short addr);

# 41 "C:\Program Files\HI-TECH Software\PICC\9.83\include\eeprom_routines.h"
extern unsigned char eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);
extern void eecpymem(volatile unsigned char *to, eeprom unsigned char *from, unsigned char size);
extern void memcpyee(eeprom unsigned char *to, const unsigned char *from, unsigned char size);


# 153 "C:\Program Files\HI-TECH Software\PICC\9.83\include\pic.h"
#pragma inline(_delay)
extern void _delay(unsigned long);

# 16 "Wireless_Transmitter.c"
asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x317F & 0x30FF & 0x31DF & 0x31F7 & 0x31FC");

# 24
void Init(void)
{
CM0 = CM1 = CM2 = 1;
CMIE = 0;
ADIE = 0;
TRISIO = 0b001000;
GPIO = 0b111111;
GPIE = 1;
IOC3 = 1;
GIE = 1;
}
void main(void)
{
Init();
while(1)
{
}
}

static void interrupt Interrupt_Handler(void)
{
if(GPIF == 1)
{
if(GP3 == 0)
{
{GP5 = 0; _delay((unsigned long)((2000)*(4000000/4000.0))); GP5 = 1;};;
}
GPIF = 0;
}

}
