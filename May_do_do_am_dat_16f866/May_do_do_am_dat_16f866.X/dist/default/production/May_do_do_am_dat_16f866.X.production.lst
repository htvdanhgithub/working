

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Jun 14 20:58:11 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0009                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  0089                     	;# 
    82  008C                     	;# 
    83  008D                     	;# 
    84  008E                     	;# 
    85  008F                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0093                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  0105                     	;# 
   105  0107                     	;# 
   106  0108                     	;# 
   107  0109                     	;# 
   108  010C                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  0185                     	;# 
   114  0187                     	;# 
   115  0188                     	;# 
   116  0189                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  008F                     	;# 
   162  0090                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0093                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0097                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  0105                     	;# 
   181  0107                     	;# 
   182  0108                     	;# 
   183  0109                     	;# 
   184  010C                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0185                     	;# 
   190  0187                     	;# 
   191  0188                     	;# 
   192  0189                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0089                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  008F                     	;# 
   238  0090                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0093                     	;# 
   243  0093                     	;# 
   244  0094                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  0105                     	;# 
   257  0107                     	;# 
   258  0108                     	;# 
   259  0109                     	;# 
   260  010C                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  010F                     	;# 
   265  0185                     	;# 
   266  0187                     	;# 
   267  0188                     	;# 
   268  0189                     	;# 
   269  018C                     	;# 
   270  018D                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  000E                     	;# 
   286  000F                     	;# 
   287  0010                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0014                     	;# 
   292  0015                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  001D                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  0081                     	;# 
   306  0085                     	;# 
   307  0086                     	;# 
   308  0087                     	;# 
   309  0089                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  008F                     	;# 
   314  0090                     	;# 
   315  0091                     	;# 
   316  0092                     	;# 
   317  0093                     	;# 
   318  0093                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0095                     	;# 
   322  0096                     	;# 
   323  0097                     	;# 
   324  0098                     	;# 
   325  0099                     	;# 
   326  009A                     	;# 
   327  009B                     	;# 
   328  009C                     	;# 
   329  009D                     	;# 
   330  009E                     	;# 
   331  009F                     	;# 
   332  0105                     	;# 
   333  0107                     	;# 
   334  0108                     	;# 
   335  0109                     	;# 
   336  010C                     	;# 
   337  010C                     	;# 
   338  010D                     	;# 
   339  010E                     	;# 
   340  010F                     	;# 
   341  0185                     	;# 
   342  0187                     	;# 
   343  0188                     	;# 
   344  0189                     	;# 
   345  018C                     	;# 
   346  018D                     	;# 
   347                           
   348                           	psect	idataBANK0
   349  0DD4                     __pidataBANK0:	
   350                           
   351                           ;initializer for ___cgram
   352  0DD4  340C               	retlw	12
   353  0DD5  3412               	retlw	18
   354  0DD6  3412               	retlw	18
   355  0DD7  340C               	retlw	12
   356  0DD8  3400               	retlw	0
   357  0DD9  3400               	retlw	0
   358  0DDA  3400               	retlw	0
   359  0DDB  3400               	retlw	0
   360                           
   361                           ;initializer for LCDWriteInt@F1632
   362  0DDC  34F0               	retlw	240
   363  0DDD  34F0               	retlw	240
   364  0DDE  34F0               	retlw	240
   365  0DDF  34F0               	retlw	240
   366  0DE0  34F0               	retlw	240
   367                           
   368                           	psect	idataBANK1
   369  07FB                     __pidataBANK1:	
   370                           
   371                           ;initializer for _tuneTempDir
   372  07FB  3401               	retlw	1
   373  001F                     _ADCON0bits	set	31
   374  001E                     _ADRESH	set	30
   375  000B                     _INTCONbits	set	11
   376  0007                     _PORTC	set	7
   377  0029                     _RA1	set	41
   378  0034                     _RB4	set	52
   379  0039                     _RC1	set	57
   380  003A                     _RC2	set	58
   381  003B                     _RC3	set	59
   382  009F                     _ADCON1bits	set	159
   383  009E                     _ADRESL	set	158
   384  0096                     _IOCBbits	set	150
   385  0081                     _OPTION_REGbits	set	129
   386  0086                     _TRISBbits	set	134
   387  0087                     _TRISC	set	135
   388  0087                     _TRISCbits	set	135
   389  0189                     _ANSELHbits	set	393
   390                           
   391                           	psect	strings
   392  0800                     __pstrings:	
   393  0800                     stringtab:	
   394  0800                     __stringtab:	
   395  0800                     stringcode:	
   396                           ;	String table - string pointers are 1 byte each
   397                           
   398  0800                     stringdir:	
   399  0800  3008               	movlw	high stringdir
   400  0801  008A               	movwf	10
   401  0802  0804               	movf	4,w
   402  0803  0A84               	incf	4,f
   403  0804  0782               	addwf	2,f
   404  0805                     __stringbase:	
   405  0805  3400               	retlw	0
   406  0806                     __end_of__stringtab:	
   407  0806                     STR_1:	
   408  0806  3454               	retlw	84	;'T'
   409  0807  3468               	retlw	104	;'h'
   410  0808  3465               	retlw	101	;'e'
   411  0809  3472               	retlw	114	;'r'
   412  080A  346D               	retlw	109	;'m'
   413  080B  346F               	retlw	111	;'o'
   414  080C  346D               	retlw	109	;'m'
   415  080D  3465               	retlw	101	;'e'
   416  080E  3474               	retlw	116	;'t'
   417  080F  3465               	retlw	101	;'e'
   418  0810  3472               	retlw	114	;'r'
   419  0811  3420               	retlw	32	;' '
   420  0812  3473               	retlw	115	;'s'
   421  0813  3465               	retlw	101	;'e'
   422  0814  3474               	retlw	116	;'t'
   423  0815  343A               	retlw	58	;':'
   424  0816  3400               	retlw	0
   425  0817                     STR_5:	
   426  0817  3454               	retlw	84	;'T'
   427  0818  3468               	retlw	104	;'h'
   428  0819  3465               	retlw	101	;'e'
   429  081A  3472               	retlw	114	;'r'
   430  081B  346D               	retlw	109	;'m'
   431  081C  346F               	retlw	111	;'o'
   432  081D  346D               	retlw	109	;'m'
   433  081E  3465               	retlw	101	;'e'
   434  081F  3474               	retlw	116	;'t'
   435  0820  3465               	retlw	101	;'e'
   436  0821  3472               	retlw	114	;'r'
   437  0822  343A               	retlw	58	;':'
   438  0823  3400               	retlw	0
   439  0824                     STR_2:	
   440  0824  3425               	retlw	37	;'%'
   441  0825  3430               	retlw	48	;'0'
   442  0826  3443               	retlw	67	;'C'
   443  0827  3400               	retlw	0
   444  0806                     
   445                           ; #config settings
   446  0000                     
   447                           	psect	cinit
   448  0015                     start_initialization:	
   449  0015                     __initialization:	
   450                           
   451                           ; Clear objects allocated to BANK0
   452  0015  01DA               	clrf	__pbssBANK0& (0+127)
   453  0016  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   454                           
   455                           ; Clear objects allocated to BANK1
   456  0017  1683               	bsf	3,5	;RP0=1, select bank1
   457  0018  1303               	bcf	3,6	;RP1=0, select bank1
   458  0019  01B7               	clrf	__pbssBANK1& (0+127)
   459  001A  01B8               	clrf	(__pbssBANK1+1)& (0+127)
   460                           
   461                           ; Initialize objects allocated to BANK1
   462  001B  120A  118A  27FB  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   463  0020  00B9               	movwf	__pdataBANK1& (0+127)
   464                           
   465                           ; Initialize objects allocated to BANK0
   466  0021  1383               	bcf	3,7	;select IRP bank0
   467  0022  305A               	movlw	low (__pdataBANK0+13)
   468  0023  00FD               	movwf	btemp+-1
   469  0024  300D               	movlw	high __pidataBANK0
   470  0025  00FE               	movwf	btemp
   471  0026  30D4               	movlw	low __pidataBANK0
   472  0027  00FF               	movwf	btemp+1
   473  0028  304D               	movlw	low __pdataBANK0
   474  0029  0084               	movwf	4
   475  002A  120A  158A  25F5   	fcall	init_ram0
   476  002D                     end_of_initialization:	
   477                           ;End of C runtime variable initialization code
   478                           
   479  002D                     __end_of__initialization:	
   480  002D  0183               	clrf	3
   481  002E  120A  118A  2967   	ljmp	_main	;jump to C main() function
   482                           
   483                           	psect	bssBANK0
   484  005A                     __pbssBANK0:	
   485  005A                     _tuneTemp:	
   486  005A                     	ds	2
   487                           
   488                           	psect	dataBANK0
   489  004D                     __pdataBANK0:	
   490  004D                     ___cgram:	
   491  004D                     	ds	8
   492  0055                     LCDWriteInt@F1632:	
   493  0055                     	ds	5
   494                           
   495                           	psect	bssBANK1
   496  00B7                     __pbssBANK1:	
   497  00B7                     _curTemp:	
   498  00B7                     	ds	2
   499                           
   500                           	psect	dataBANK1
   501  00B9                     __pdataBANK1:	
   502  00B9                     _tuneTempDir:	
   503  00B9                     	ds	1
   504                           
   505                           	psect	inittext
   506  0DF1                     init_fetch0:	
   507                           ;	Called with low address in FSR and high address in W
   508                           
   509  0DF1  087E               	movf	126,w
   510  0DF2  008A               	movwf	10
   511  0DF3  087F               	movf	127,w
   512  0DF4  0082               	movwf	2
   513  0DF5                     init_ram0:	
   514                           ;Called with:
   515                           ;	high address of idata address in btemp 
   516                           ;	low address of idata address in btemp+1 
   517                           ;	low address of data in FSR
   518                           ;	high address + 1 of data in btemp-1
   519                           
   520  0DF5  25F1  120A  158A   	fcall	init_fetch0
   521  0DF8  0080               	movwf	0
   522  0DF9  0A84               	incf	4,f
   523  0DFA  0804               	movf	4,w
   524  0DFB  067D               	xorwf	125,w
   525  0DFC  1903               	btfsc	3,2
   526  0DFD  3400               	retlw	0
   527  0DFE  0AFF               	incf	127,f
   528  0DFF  1903               	btfsc	3,2
   529  0E00  0AFE               	incf	126,f
   530  0E01  2DF5               	goto	init_ram0
   531                           
   532                           	psect	cstackBANK1
   533  00A0                     __pcstackBANK1:	
   534  00A0                     ___ftmul@exp:	
   535                           
   536                           ; 1 bytes @ 0x0
   537  00A0                     	ds	1
   538  00A1                     ___ftmul@f3_as_product:	
   539                           
   540                           ; 3 bytes @ 0x1
   541  00A1                     	ds	3
   542  00A4                     ___ftmul@cntr:	
   543                           
   544                           ; 1 bytes @ 0x4
   545  00A4                     	ds	1
   546  00A5                     ___ftmul@sign:	
   547                           
   548                           ; 1 bytes @ 0x5
   549  00A5                     	ds	1
   550  00A6                     ??___fttol:	
   551                           
   552                           ; 1 bytes @ 0x6
   553  00A6                     	ds	4
   554  00AA                     ___fttol@sign1:	
   555                           
   556                           ; 1 bytes @ 0xA
   557  00AA                     	ds	1
   558  00AB                     ___fttol@lval:	
   559                           
   560                           ; 4 bytes @ 0xB
   561  00AB                     	ds	4
   562  00AF                     ___fttol@exp1:	
   563                           
   564                           ; 1 bytes @ 0xF
   565  00AF                     	ds	1
   566  00B0                     ?_LM35ReadTemp:	
   567                           
   568                           ; 2 bytes @ 0x10
   569  00B0                     	ds	2
   570  00B2                     LM35ReadTemp@adc_value:	
   571                           
   572                           ; 2 bytes @ 0x12
   573  00B2                     	ds	2
   574  00B4                     ??_main:	
   575                           
   576                           ; 1 bytes @ 0x14
   577  00B4                     	ds	3
   578                           
   579                           	psect	cstackCOMMON
   580  0070                     __pcstackCOMMON:	
   581  0070                     ?_LCDWriteString:	
   582  0070                     ?_LCDInit:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_LCDBusyLoop:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_ADCInit:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_TuneButtonInit:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_ISR:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_main:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?i1_LCDBusyLoop:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ??i1_LCDBusyLoop:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?i1_LCDWriteString:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?i1___awdiv:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?i1___awmod:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0070                     i1___awdiv@divisor:	
   616                           ; 2 bytes @ 0x0
   617                           
   618  0070                     i1___awmod@divisor:	
   619                           ; 2 bytes @ 0x0
   620                           
   621                           
   622                           ; 2 bytes @ 0x0
   623  0070                     	ds	2
   624  0072                     i1LCDBusyLoop@busy:	
   625  0072                     i1___awdiv@dividend:	
   626                           ; 1 bytes @ 0x2
   627                           
   628  0072                     i1___awmod@dividend:	
   629                           ; 2 bytes @ 0x2
   630                           
   631                           
   632                           ; 2 bytes @ 0x2
   633  0072                     	ds	1
   634  0073                     i1LCDBusyLoop@temp:	
   635                           
   636                           ; 1 bytes @ 0x3
   637  0073                     	ds	1
   638  0074                     ??i1___awdiv:	
   639  0074                     ??i1___awmod:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     i1LCDBusyLoop@status:	
   643                           ; 1 bytes @ 0x4
   644                           
   645                           
   646                           ; 1 bytes @ 0x4
   647  0074                     	ds	1
   648  0075                     ?i1_LCDByte:	
   649  0075                     i1LCDByte@isdata:	
   650                           ; 1 bytes @ 0x5
   651                           
   652  0075                     i1___awdiv@counter:	
   653                           ; 1 bytes @ 0x5
   654                           
   655  0075                     i1___awmod@counter:	
   656                           ; 1 bytes @ 0x5
   657                           
   658                           
   659                           ; 1 bytes @ 0x5
   660  0075                     	ds	1
   661  0076                     ??i1_LCDByte:	
   662  0076                     i1___awdiv@sign:	
   663                           ; 1 bytes @ 0x6
   664                           
   665  0076                     i1___awmod@sign:	
   666                           ; 1 bytes @ 0x6
   667                           
   668                           
   669                           ; 1 bytes @ 0x6
   670  0076                     	ds	1
   671  0077                     i1___awdiv@quotient:	
   672                           
   673                           ; 2 bytes @ 0x7
   674  0077                     	ds	1
   675  0078                     i1LCDByte@c:	
   676                           
   677                           ; 1 bytes @ 0x8
   678  0078                     	ds	1
   679  0079                     i1LCDByte@hn:	
   680                           
   681                           ; 1 bytes @ 0x9
   682  0079                     	ds	1
   683  007A                     i1LCDByte@ln:	
   684                           
   685                           ; 1 bytes @ 0xA
   686  007A                     	ds	1
   687  007B                     i1LCDByte@temp:	
   688                           
   689                           ; 1 bytes @ 0xB
   690  007B                     	ds	1
   691  007C                     ??i1_LCDWriteString:	
   692  007C                     ??i1_LCDWriteInt:	
   693                           ; 1 bytes @ 0xC
   694                           
   695  007C                     ?i1_LCDGotoXY:	
   696                           ; 1 bytes @ 0xC
   697                           
   698  007C                     i1LCDGotoXY@y:	
   699                           ; 1 bytes @ 0xC
   700                           
   701                           
   702                           ; 1 bytes @ 0xC
   703  007C                     	ds	1
   704  007D                     ??i1_LCDGotoXY:	
   705                           
   706                           ; 1 bytes @ 0xD
   707  007D                     	ds	1
   708                           
   709                           	psect	cstackBANK0
   710  0020                     __pcstackBANK0:	
   711  0020                     ?i1_LCDWriteInt:	
   712  0020                     i1LCDWriteString@msg:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0020                     i1LCDGotoXY@x:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0020                     i1LCDWriteInt@val:	
   719                           ; 1 bytes @ 0x0
   720                           
   721                           
   722                           ; 2 bytes @ 0x0
   723  0020                     	ds	1
   724  0021                     i1LCDWriteString@cc:	
   725                           
   726                           ; 1 bytes @ 0x1
   727  0021                     	ds	1
   728  0022                     i1LCDWriteInt@field_length:	
   729                           
   730                           ; 1 bytes @ 0x2
   731  0022                     	ds	1
   732  0023                     i1LCDWriteInt@str:	
   733                           
   734                           ; 5 bytes @ 0x3
   735  0023                     	ds	5
   736  0028                     i1LCDWriteInt@j:	
   737                           
   738                           ; 2 bytes @ 0x8
   739  0028                     	ds	2
   740  002A                     i1LCDWriteInt@i:	
   741                           
   742                           ; 2 bytes @ 0xA
   743  002A                     	ds	2
   744  002C                     ??_ISR:	
   745                           
   746                           ; 1 bytes @ 0xC
   747  002C                     	ds	7
   748  0033                     ??_LCDBusyLoop:	
   749  0033                     ??_ADCInit:	
   750                           ; 1 bytes @ 0x13
   751                           
   752  0033                     ??_TuneButtonInit:	
   753                           ; 1 bytes @ 0x13
   754                           
   755  0033                     ?_ReadADC:	
   756                           ; 1 bytes @ 0x13
   757                           
   758  0033                     ?___awdiv:	
   759                           ; 2 bytes @ 0x13
   760                           
   761  0033                     ?___awmod:	
   762                           ; 2 bytes @ 0x13
   763                           
   764  0033                     ?___ftpack:	
   765                           ; 2 bytes @ 0x13
   766                           
   767  0033                     ___awdiv@divisor:	
   768                           ; 3 bytes @ 0x13
   769                           
   770  0033                     ___awmod@divisor:	
   771                           ; 2 bytes @ 0x13
   772                           
   773  0033                     ___ftpack@arg:	
   774                           ; 2 bytes @ 0x13
   775                           
   776                           
   777                           ; 3 bytes @ 0x13
   778  0033                     	ds	2
   779  0035                     ??_ReadADC:	
   780  0035                     LCDBusyLoop@busy:	
   781                           ; 1 bytes @ 0x15
   782                           
   783  0035                     ___awdiv@dividend:	
   784                           ; 1 bytes @ 0x15
   785                           
   786  0035                     ___awmod@dividend:	
   787                           ; 2 bytes @ 0x15
   788                           
   789                           
   790                           ; 2 bytes @ 0x15
   791  0035                     	ds	1
   792  0036                     ReadADC@ch:	
   793  0036                     LCDBusyLoop@temp:	
   794                           ; 1 bytes @ 0x16
   795                           
   796  0036                     ___ftpack@exp:	
   797                           ; 1 bytes @ 0x16
   798                           
   799                           
   800                           ; 1 bytes @ 0x16
   801  0036                     	ds	1
   802  0037                     ??___awdiv:	
   803  0037                     ??___awmod:	
   804                           ; 1 bytes @ 0x17
   805                           
   806  0037                     LCDBusyLoop@status:	
   807                           ; 1 bytes @ 0x17
   808                           
   809  0037                     ___ftpack@sign:	
   810                           ; 1 bytes @ 0x17
   811                           
   812                           
   813                           ; 1 bytes @ 0x17
   814  0037                     	ds	1
   815  0038                     ?_LCDByte:	
   816  0038                     ??___ftpack:	
   817                           ; 1 bytes @ 0x18
   818                           
   819  0038                     LCDByte@isdata:	
   820                           ; 1 bytes @ 0x18
   821                           
   822  0038                     ___awdiv@counter:	
   823                           ; 1 bytes @ 0x18
   824                           
   825  0038                     ___awmod@counter:	
   826                           ; 1 bytes @ 0x18
   827                           
   828                           
   829                           ; 1 bytes @ 0x18
   830  0038                     	ds	1
   831  0039                     ??_LCDByte:	
   832  0039                     ___awdiv@sign:	
   833                           ; 1 bytes @ 0x19
   834                           
   835  0039                     ___awmod@sign:	
   836                           ; 1 bytes @ 0x19
   837                           
   838                           
   839                           ; 1 bytes @ 0x19
   840  0039                     	ds	1
   841  003A                     ___awdiv@quotient:	
   842                           
   843                           ; 2 bytes @ 0x1A
   844  003A                     	ds	1
   845  003B                     ?___lwtoft:	
   846  003B                     LCDByte@hn:	
   847                           ; 3 bytes @ 0x1B
   848                           
   849  003B                     ___lwtoft@c:	
   850                           ; 1 bytes @ 0x1B
   851                           
   852                           
   853                           ; 2 bytes @ 0x1B
   854  003B                     	ds	1
   855  003C                     LCDByte@ln:	
   856                           
   857                           ; 1 bytes @ 0x1C
   858  003C                     	ds	1
   859  003D                     LCDByte@c:	
   860                           
   861                           ; 1 bytes @ 0x1D
   862  003D                     	ds	1
   863  003E                     ??___lwtoft:	
   864  003E                     LCDByte@temp:	
   865                           ; 1 bytes @ 0x1E
   866                           
   867                           
   868                           ; 1 bytes @ 0x1E
   869  003E                     	ds	1
   870  003F                     ?_LCDGotoXY:	
   871  003F                     ??_LCDWriteString:	
   872                           ; 1 bytes @ 0x1F
   873                           
   874  003F                     ?_LCDWriteInt:	
   875                           ; 1 bytes @ 0x1F
   876                           
   877  003F                     ??_LCDInit:	
   878                           ; 1 bytes @ 0x1F
   879                           
   880  003F                     ?___ftmul:	
   881                           ; 1 bytes @ 0x1F
   882                           
   883  003F                     LCDGotoXY@y:	
   884                           ; 3 bytes @ 0x1F
   885                           
   886  003F                     LCDWriteInt@val:	
   887                           ; 1 bytes @ 0x1F
   888                           
   889  003F                     ___ftmul@f1:	
   890                           ; 2 bytes @ 0x1F
   891                           
   892                           
   893                           ; 3 bytes @ 0x1F
   894  003F                     	ds	1
   895  0040                     ??_LCDGotoXY:	
   896  0040                     LCDWriteString@cc:	
   897                           ; 1 bytes @ 0x20
   898                           
   899                           
   900                           ; 1 bytes @ 0x20
   901  0040                     	ds	1
   902  0041                     LCDInit@style:	
   903  0041                     LCDWriteString@msg:	
   904                           ; 1 bytes @ 0x21
   905                           
   906  0041                     LCDWriteInt@field_length:	
   907                           ; 1 bytes @ 0x21
   908                           
   909  0041                     LCDGotoXY@x:	
   910                           ; 1 bytes @ 0x21
   911                           
   912                           
   913                           ; 1 bytes @ 0x21
   914  0041                     	ds	1
   915  0042                     ??_LCDWriteInt:	
   916  0042                     LCDInit@__i:	
   917                           ; 1 bytes @ 0x22
   918                           
   919  0042                     ___ftmul@f2:	
   920                           ; 1 bytes @ 0x22
   921                           
   922                           
   923                           ; 3 bytes @ 0x22
   924  0042                     	ds	2
   925  0044                     LCDWriteInt@str:	
   926                           
   927                           ; 5 bytes @ 0x24
   928  0044                     	ds	1
   929  0045                     ??___ftmul:	
   930                           
   931                           ; 1 bytes @ 0x25
   932  0045                     	ds	4
   933  0049                     ?___fttol:	
   934  0049                     LCDWriteInt@j:	
   935                           ; 4 bytes @ 0x29
   936                           
   937  0049                     ___fttol@f1:	
   938                           ; 2 bytes @ 0x29
   939                           
   940                           
   941                           ; 3 bytes @ 0x29
   942  0049                     	ds	2
   943  004B                     LCDWriteInt@i:	
   944                           
   945                           ; 2 bytes @ 0x2B
   946  004B                     	ds	2
   947  004D                     ??_LM35ReadTemp:	
   948                           
   949                           	psect	maintext
   950  0167                     __pmaintext:	
   951                           ; 1 bytes @ 0x2D
   952 ;;
   953 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   954 ;;
   955 ;; *************** function _main *****************
   956 ;; Defined at:
   957 ;;		line 130 in file "do_am.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : B00/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0
   973 ;;      Temps:          0       0       3       0       0
   974 ;;      Totals:         0       0       3       0       0
   975 ;;Total ram usage:        3 bytes
   976 ;; Hardware stack levels required when called:    7
   977 ;; This function calls:
   978 ;;		_ADCInit
   979 ;;		_LCDByte
   980 ;;		_LCDGotoXY
   981 ;;		_LCDInit
   982 ;;		_LCDWriteInt
   983 ;;		_LCDWriteString
   984 ;;		_LM35ReadTemp
   985 ;;		_TuneButtonInit
   986 ;; This function is called by:
   987 ;;		Startup code after reset
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _main
   993  0167                     _main:	
   994                           
   995                           ;do_am.c: 133: LCDInit(0B00000000);
   996                           
   997                           ;incstack = 0
   998                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   999  0167  3000               	movlw	0
  1000  0168  120A  118A  2542  120A  118A  	fcall	_LCDInit
  1001                           
  1002                           ;do_am.c: 136: ADCInit();
  1003  016D  120A  158A  2602  120A  118A  	fcall	_ADCInit
  1004                           
  1005                           ;do_am.c: 139: TuneButtonInit();
  1006  0172  120A  158A  25E1  120A  118A  	fcall	_TuneButtonInit
  1007                           
  1008                           ;do_am.c: 145: (LCDByte(0b00000001,0));
  1009  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0179  01B8               	clrf	LCDByte@isdata
  1012  017A  3001               	movlw	1
  1013  017B  120A  118A  2785  120A  118A  	fcall	_LCDByte
  1014  0180  29E4               	goto	l2273
  1015  0181                     l2275:	
  1016                           
  1017                           ;do_am.c: 151: {
  1018                           ;do_am.c: 153: (LCDByte(0b00000001,0));
  1019  0181  01B8               	clrf	LCDByte@isdata
  1020  0182  3001               	movlw	1
  1021  0183  120A  118A  2785  120A  118A  	fcall	_LCDByte
  1022                           
  1023                           ;do_am.c: 155: { LCDGotoXY(0,0); LCDWriteString("Thermometer set:");};
  1024  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1026  018A  01BF               	clrf	LCDGotoXY@y
  1027  018B  3000               	movlw	0
  1028  018C  120A  158A  2654  120A  118A  	fcall	_LCDGotoXY
  1029  0191  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1030  0192  120A  158A  27AE  120A  118A  	fcall	_LCDWriteString
  1031                           
  1032                           ;do_am.c: 157: tuneTemp++;
  1033  0197  3001               	movlw	1
  1034  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1036  019A  07DA               	addwf	_tuneTemp,f
  1037  019B  1803               	skipnc
  1038  019C  0ADB               	incf	_tuneTemp+1,f
  1039  019D  3000               	movlw	0
  1040  019E  07DB               	addwf	_tuneTemp+1,f
  1041                           
  1042                           ;do_am.c: 158: if(tuneTemp > 150)
  1043  019F  085B               	movf	_tuneTemp+1,w
  1044  01A0  3A80               	xorlw	128
  1045  01A1  00FF               	movwf	127
  1046  01A2  3080               	movlw	128
  1047  01A3  027F               	subwf	127,w
  1048  01A4  1D03               	skipz
  1049  01A5  29A8               	goto	u2765
  1050  01A6  3097               	movlw	151
  1051  01A7  025A               	subwf	_tuneTemp,w
  1052  01A8                     u2765:	
  1053  01A8  1C03               	skipc
  1054  01A9  29AE               	goto	l2287
  1055                           
  1056                           ;do_am.c: 159: {
  1057                           ;do_am.c: 160: tuneTemp = 0;
  1058  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1059  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1060  01AC  01DA               	clrf	_tuneTemp
  1061  01AD  01DB               	clrf	_tuneTemp+1
  1062  01AE                     l2287:	
  1063                           
  1064                           ;do_am.c: 161: }
  1065                           ;do_am.c: 164: { LCDGotoXY(0,1); LCDWriteInt(tuneTemp,3);};
  1066  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1067  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1068  01B0  01BF               	clrf	LCDGotoXY@y
  1069  01B1  0ABF               	incf	LCDGotoXY@y,f
  1070  01B2  3000               	movlw	0
  1071  01B3  120A  158A  2654  120A  118A  	fcall	_LCDGotoXY
  1072  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1073  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1074  01BA  085B               	movf	_tuneTemp+1,w
  1075  01BB  00C0               	movwf	LCDWriteInt@val+1
  1076  01BC  085A               	movf	_tuneTemp,w
  1077  01BD  00BF               	movwf	LCDWriteInt@val
  1078  01BE  3003               	movlw	3
  1079  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  1080  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  1081  01C1  00B4               	movwf	??_main^(0+128)
  1082  01C2  0834               	movf	??_main^(0+128),w
  1083  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1084  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1085  01C5  00C1               	movwf	LCDWriteInt@field_length
  1086  01C6  120A  118A  2330  120A  118A  	fcall	_LCDWriteInt
  1087                           
  1088                           ;do_am.c: 167: LCDWriteString("%0C");
  1089  01CB  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1090  01CC  120A  158A  27AE  120A  118A  	fcall	_LCDWriteString
  1091                           
  1092                           ;do_am.c: 169: _delay((unsigned long)((500)*(20000000/4000.0)));
  1093  01D1  300D               	movlw	13
  1094  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1095  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1096  01D4  00B6               	movwf	(??_main^(0+128)+2)
  1097  01D5  30AF               	movlw	175
  1098  01D6  00B5               	movwf	(??_main^(0+128)+1)
  1099  01D7  30C1               	movlw	193
  1100  01D8  00B4               	movwf	??_main^(0+128)
  1101  01D9                     u2797:	
  1102  01D9  0BB4               	decfsz	??_main^(0+128),f
  1103  01DA  29D9               	goto	u2797
  1104  01DB  0BB5               	decfsz	(??_main^(0+128)+1),f
  1105  01DC  29D9               	goto	u2797
  1106  01DD  0BB6               	decfsz	(??_main^(0+128)+2),f
  1107  01DE  29D9               	goto	u2797
  1108  01DF  0000               	nop
  1109                           
  1110                           ;do_am.c: 170: tuneTempDir = 1;
  1111  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  1112  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  1113  01E2  01B9               	clrf	_tuneTempDir^(0+128)
  1114  01E3  0AB9               	incf	_tuneTempDir^(0+128),f
  1115  01E4                     l2273:	
  1116                           ;do_am.c: 147: while(1)
  1117                           
  1118                           ;do_am.c: 172: }
  1119                           
  1120                           
  1121                           ;do_am.c: 148: {
  1122                           ;do_am.c: 150: if(RB4 == 1)
  1123  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1124  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1125  01E6  1A06               	btfsc	6,4	;volatile
  1126  01E7  2981               	goto	l2275
  1127                           
  1128                           ;do_am.c: 173: else
  1129                           ;do_am.c: 174: {
  1130                           ;do_am.c: 176: curTemp = LM35ReadTemp();
  1131  01E8  120A  158A  26C5  120A  118A  	fcall	_LM35ReadTemp
  1132  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  1133  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  1134  01EF  0831               	movf	(?_LM35ReadTemp+1)^(0+128),w
  1135  01F0  00B8               	movwf	(_curTemp+1)^(0+128)
  1136  01F1  0830               	movf	?_LM35ReadTemp^(0+128),w
  1137  01F2  00B7               	movwf	_curTemp^(0+128)
  1138                           
  1139                           ;do_am.c: 178: if(curTemp >= tuneTemp)
  1140  01F3  0838               	movf	(_curTemp+1)^(0+128),w
  1141  01F4  3A80               	xorlw	128
  1142  01F5  00B4               	movwf	??_main^(0+128)
  1143  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1144  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1145  01F8  085B               	movf	_tuneTemp+1,w
  1146  01F9  3A80               	xorlw	128
  1147  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  1148  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  1149  01FC  0234               	subwf	??_main^(0+128),w
  1150  01FD  1D03               	skipz
  1151  01FE  2A05               	goto	u2775
  1152  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0201  085A               	movf	_tuneTemp,w
  1155  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1156  0203  1303               	bcf	3,6	;RP1=0, select bank1
  1157  0204  0237               	subwf	_curTemp^(0+128),w
  1158  0205                     u2775:	
  1159  0205  1C03               	skipc
  1160  0206  2A0B               	goto	l74
  1161                           
  1162                           ;do_am.c: 179: {
  1163                           ;do_am.c: 180: RA1 = 1;
  1164  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0209  1485               	bsf	5,1	;volatile
  1167                           
  1168                           ;do_am.c: 181: }
  1169  020A  2A0E               	goto	l2303
  1170  020B                     l74:	
  1171                           
  1172                           ;do_am.c: 182: else
  1173                           ;do_am.c: 183: {
  1174                           ;do_am.c: 184: RA1 = 0;
  1175  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1176  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1177  020D  1085               	bcf	5,1	;volatile
  1178  020E                     l2303:	
  1179                           
  1180                           ;do_am.c: 185: }
  1181                           ;do_am.c: 187: if(tuneTempDir == 1)
  1182  020E  1683               	bsf	3,5	;RP0=1, select bank1
  1183  020F  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0210  0339               	decf	_tuneTempDir^(0+128),w
  1185  0211  1D03               	btfss	3,2
  1186  0212  2A2E               	goto	l2313
  1187                           
  1188                           ;do_am.c: 188: {
  1189                           ;do_am.c: 190: (LCDByte(0b00000001,0));
  1190  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1191  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1192  0215  01B8               	clrf	LCDByte@isdata
  1193  0216  3001               	movlw	1
  1194  0217  120A  118A  2785  120A  118A  	fcall	_LCDByte
  1195                           
  1196                           ;do_am.c: 192: { LCDGotoXY(0,0); LCDWriteString("Thermometer:");};
  1197  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1198  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1199  021E  01BF               	clrf	LCDGotoXY@y
  1200  021F  3000               	movlw	0
  1201  0220  120A  158A  2654  120A  118A  	fcall	_LCDGotoXY
  1202  0225  3012               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1203  0226  120A  158A  27AE  120A  118A  	fcall	_LCDWriteString
  1204                           
  1205                           ;do_am.c: 193: tuneTempDir = 0;
  1206  022B  1683               	bsf	3,5	;RP0=1, select bank1
  1207  022C  1303               	bcf	3,6	;RP1=0, select bank1
  1208  022D  01B9               	clrf	_tuneTempDir^(0+128)
  1209  022E                     l2313:	
  1210                           
  1211                           ;do_am.c: 194: }
  1212                           ;do_am.c: 197: { LCDGotoXY(0,1); LCDWriteInt(curTemp,3);};
  1213  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1214  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0230  01BF               	clrf	LCDGotoXY@y
  1216  0231  0ABF               	incf	LCDGotoXY@y,f
  1217  0232  3000               	movlw	0
  1218  0233  120A  158A  2654  120A  118A  	fcall	_LCDGotoXY
  1219  0238  1683               	bsf	3,5	;RP0=1, select bank1
  1220  0239  1303               	bcf	3,6	;RP1=0, select bank1
  1221  023A  0838               	movf	(_curTemp+1)^(0+128),w
  1222  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1223  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1224  023D  00C0               	movwf	LCDWriteInt@val+1
  1225  023E  1683               	bsf	3,5	;RP0=1, select bank1
  1226  023F  1303               	bcf	3,6	;RP1=0, select bank1
  1227  0240  0837               	movf	_curTemp^(0+128),w
  1228  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0243  00BF               	movwf	LCDWriteInt@val
  1231  0244  3003               	movlw	3
  1232  0245  1683               	bsf	3,5	;RP0=1, select bank1
  1233  0246  1303               	bcf	3,6	;RP1=0, select bank1
  1234  0247  00B4               	movwf	??_main^(0+128)
  1235  0248  0834               	movf	??_main^(0+128),w
  1236  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1237  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1238  024B  00C1               	movwf	LCDWriteInt@field_length
  1239  024C  120A  118A  2330  120A  118A  	fcall	_LCDWriteInt
  1240                           
  1241                           ;do_am.c: 200: LCDWriteString("%0C");
  1242  0251  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1243  0252  120A  158A  27AE  120A  118A  	fcall	_LCDWriteString
  1244                           
  1245                           ;do_am.c: 203: _delay((unsigned long)((200)*(20000000/4000.0)));
  1246  0257  3006               	movlw	6
  1247  0258  1683               	bsf	3,5	;RP0=1, select bank1
  1248  0259  1303               	bcf	3,6	;RP1=0, select bank1
  1249  025A  00B6               	movwf	(??_main^(0+128)+2)
  1250  025B  3013               	movlw	19
  1251  025C  00B5               	movwf	(??_main^(0+128)+1)
  1252  025D  30B1               	movlw	177
  1253  025E  00B4               	movwf	??_main^(0+128)
  1254  025F                     u2807:	
  1255  025F  0BB4               	decfsz	??_main^(0+128),f
  1256  0260  2A5F               	goto	u2807
  1257  0261  0BB5               	decfsz	(??_main^(0+128)+1),f
  1258  0262  2A5F               	goto	u2807
  1259  0263  0BB6               	decfsz	(??_main^(0+128)+2),f
  1260  0264  2A5F               	goto	u2807
  1261  0265  2A66               	nop2
  1262  0266  29E4               	goto	l2273
  1263  0267                     __end_of_main:	
  1264                           
  1265                           	psect	text1
  1266  0DE1                     __ptext1:	
  1267 ;; *************** function _TuneButtonInit *****************
  1268 ;; Defined at:
  1269 ;;		line 75 in file "do_am.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		None
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         0       0       0       0       0
  1284 ;;      Locals:         0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0
  1286 ;;      Totals:         0       0       0       0       0
  1287 ;;Total ram usage:        0 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    4
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           
  1298                           ;psect for function _TuneButtonInit
  1299  0DE1                     _TuneButtonInit:	
  1300                           
  1301                           ;do_am.c: 78: (TRISBbits.TRISB4 = 1);
  1302                           
  1303                           ;incstack = 0
  1304                           ; Regs used in _TuneButtonInit: []
  1305  0DE1  1683               	bsf	3,5	;RP0=1, select bank1
  1306  0DE2  1303               	bcf	3,6	;RP1=0, select bank1
  1307  0DE3  1606               	bsf	6,4	;volatile
  1308                           
  1309                           ;do_am.c: 79: ANSELHbits.ANS11 = 0;
  1310  0DE4  1683               	bsf	3,5	;RP0=1, select bank3
  1311  0DE5  1703               	bsf	3,6	;RP1=1, select bank3
  1312  0DE6  1189               	bcf	9,3	;volatile
  1313                           
  1314                           ;do_am.c: 81: OPTION_REGbits.INTEDG = 1;
  1315  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  1316  0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  1317  0DE9  1701               	bsf	1,6	;volatile
  1318                           
  1319                           ;do_am.c: 82: INTCONbits.PEIE = 1;
  1320  0DEA  170B               	bsf	11,6	;volatile
  1321                           
  1322                           ;do_am.c: 86: IOCBbits.IOCB4 = 1;
  1323  0DEB  1616               	bsf	22,4	;volatile
  1324                           
  1325                           ;do_am.c: 87: INTCONbits.RBIE = 1;
  1326  0DEC  158B               	bsf	11,3	;volatile
  1327                           
  1328                           ;do_am.c: 88: INTCONbits.INTE = 1;
  1329  0DED  160B               	bsf	11,4	;volatile
  1330                           
  1331                           ;do_am.c: 93: INTCONbits.RBIF = 0;
  1332  0DEE  100B               	bcf	11,0	;volatile
  1333                           
  1334                           ;do_am.c: 97: INTCONbits.GIE = 1;
  1335  0DEF  178B               	bsf	11,7	;volatile
  1336  0DF0  0008               	return
  1337  0DF1                     __end_of_TuneButtonInit:	
  1338                           
  1339                           	psect	text2
  1340  0EC5                     __ptext2:	
  1341 ;; *************** function _LM35ReadTemp *****************
  1342 ;; Defined at:
  1343 ;;		line 8 in file "lm35_pic16.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  t               3    0        float 
  1348 ;;  adc_value       2   18[BANK1 ] unsigned int 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  2   16[BANK1 ] int 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       2       0       0
  1359 ;;      Locals:         0       0       2       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         0       0       4       0       0
  1362 ;;Total ram usage:        4 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    6
  1365 ;; This function calls:
  1366 ;;		_ReadADC
  1367 ;;		___ftmul
  1368 ;;		___fttol
  1369 ;;		___lwtoft
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _LM35ReadTemp
  1377  0EC5                     _LM35ReadTemp:	
  1378                           
  1379                           ;lm35_pic16.c: 11: float t;
  1380                           ;lm35_pic16.c: 14: uint16_t adc_value=ReadADC(13);
  1381                           
  1382                           ;incstack = 0
  1383                           ; Regs used in _LM35ReadTemp: [wreg+status,2+status,0+pclath+cstack]
  1384  0EC5  300D               	movlw	13
  1385  0EC6  120A  118A  27DC  120A  158A  	fcall	_ReadADC
  1386  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0ECD  0834               	movf	?_ReadADC+1,w
  1389  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  1390  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  1391  0ED0  00B3               	movwf	(LM35ReadTemp@adc_value+1)^(0+128)
  1392  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0ED3  0833               	movf	?_ReadADC,w
  1395  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  1396  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  1397  0ED6  00B2               	movwf	LM35ReadTemp@adc_value^(0+128)
  1398                           
  1399                           ;lm35_pic16.c: 28: return (int)(adc_value*0.4887);
  1400  0ED7  0833               	movf	(LM35ReadTemp@adc_value+1)^(0+128),w
  1401  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0EDA  00BC               	movwf	___lwtoft@c+1
  1404  0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0EDC  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0EDD  0832               	movf	LM35ReadTemp@adc_value^(0+128),w
  1407  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0EE0  00BB               	movwf	___lwtoft@c
  1410  0EE1  120A  158A  2616  120A  158A  	fcall	___lwtoft
  1411  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0EE8  083B               	movf	?___lwtoft,w
  1414  0EE9  00C2               	movwf	___ftmul@f2
  1415  0EEA  083C               	movf	?___lwtoft+1,w
  1416  0EEB  00C3               	movwf	___ftmul@f2+1
  1417  0EEC  083D               	movf	?___lwtoft+2,w
  1418  0EED  00C4               	movwf	___ftmul@f2+2
  1419  0EEE  3037               	movlw	55
  1420  0EEF  00BF               	movwf	___ftmul@f1
  1421  0EF0  30FA               	movlw	250
  1422  0EF1  00C0               	movwf	___ftmul@f1+1
  1423  0EF2  303E               	movlw	62
  1424  0EF3  00C1               	movwf	___ftmul@f1+2
  1425  0EF4  120A  118A  2031  120A  158A  	fcall	___ftmul
  1426  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0EFB  083F               	movf	?___ftmul,w
  1429  0EFC  00C9               	movwf	___fttol@f1
  1430  0EFD  0840               	movf	?___ftmul+1,w
  1431  0EFE  00CA               	movwf	___fttol@f1+1
  1432  0EFF  0841               	movf	?___ftmul+2,w
  1433  0F00  00CB               	movwf	___fttol@f1+2
  1434  0F01  120A  118A  2267   	fcall	___fttol
  1435  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0F06  084A               	movf	?___fttol+1,w
  1438  0F07  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0F08  1303               	bcf	3,6	;RP1=0, select bank1
  1440  0F09  00B1               	movwf	(?_LM35ReadTemp+1)^(0+128)
  1441  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0F0C  0849               	movf	?___fttol,w
  1444  0F0D  1683               	bsf	3,5	;RP0=1, select bank1
  1445  0F0E  1303               	bcf	3,6	;RP1=0, select bank1
  1446  0F0F  00B0               	movwf	?_LM35ReadTemp^(0+128)
  1447  0F10  0008               	return
  1448  0F11                     __end_of_LM35ReadTemp:	
  1449                           
  1450                           	psect	text3
  1451  0E16                     __ptext3:	
  1452 ;; *************** function ___lwtoft *****************
  1453 ;; Defined at:
  1454 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwtoft.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  c               2   27[BANK0 ] unsigned int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  3   27[BANK0 ] float 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       3       0       0       0
  1469 ;;      Locals:         0       0       0       0       0
  1470 ;;      Temps:          0       1       0       0       0
  1471 ;;      Totals:         0       4       0       0       0
  1472 ;;Total ram usage:        4 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    5
  1475 ;; This function calls:
  1476 ;;		___ftpack
  1477 ;; This function is called by:
  1478 ;;		_LM35ReadTemp
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function ___lwtoft
  1484  0E16                     ___lwtoft:	
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1488  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0E18  083B               	movf	___lwtoft@c,w
  1491  0E19  00B3               	movwf	___ftpack@arg
  1492  0E1A  083C               	movf	___lwtoft@c+1,w
  1493  0E1B  00B4               	movwf	___ftpack@arg+1
  1494  0E1C  01B5               	clrf	___ftpack@arg+2
  1495  0E1D  308E               	movlw	142
  1496  0E1E  00BE               	movwf	??___lwtoft
  1497  0E1F  083E               	movf	??___lwtoft,w
  1498  0E20  00B6               	movwf	___ftpack@exp
  1499  0E21  01B7               	clrf	___ftpack@sign
  1500  0E22  120A  118A  2466   	fcall	___ftpack
  1501  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0E27  0833               	movf	?___ftpack,w
  1504  0E28  00BB               	movwf	?___lwtoft
  1505  0E29  0834               	movf	?___ftpack+1,w
  1506  0E2A  00BC               	movwf	?___lwtoft+1
  1507  0E2B  0835               	movf	?___ftpack+2,w
  1508  0E2C  00BD               	movwf	?___lwtoft+2
  1509  0E2D  0008               	return
  1510  0E2E                     __end_of___lwtoft:	
  1511                           
  1512                           	psect	text4
  1513  0267                     __ptext4:	
  1514 ;; *************** function ___fttol *****************
  1515 ;; Defined at:
  1516 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  f1              3   41[BANK0 ] float 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  lval            4   11[BANK1 ] unsigned long 
  1521 ;;  exp1            1   15[BANK1 ] unsigned char 
  1522 ;;  sign1           1   10[BANK1 ] unsigned char 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  4   41[BANK0 ] long 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         0       4       0       0       0
  1533 ;;      Locals:         0       0       6       0       0
  1534 ;;      Temps:          0       0       4       0       0
  1535 ;;      Totals:         0       4      10       0       0
  1536 ;;Total ram usage:       14 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    4
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_LM35ReadTemp
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function ___fttol
  1548  0267                     ___fttol:	
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1552  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0269  0849               	movf	___fttol@f1,w
  1555  026A  1683               	bsf	3,5	;RP0=1, select bank1
  1556  026B  1303               	bcf	3,6	;RP1=0, select bank1
  1557  026C  00A6               	movwf	??___fttol^(0+128)
  1558  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1559  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1560  026F  084A               	movf	___fttol@f1+1,w
  1561  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1562  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1563  0272  00A7               	movwf	(??___fttol^(0+128)+1)
  1564  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0275  084B               	movf	___fttol@f1+2,w
  1567  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1569  0278  00A8               	movwf	(??___fttol^(0+128)+2)
  1570  0279  1003               	clrc
  1571  027A  0D27               	rlf	(??___fttol^(0+128)+1),w
  1572  027B  0D28               	rlf	(??___fttol^(0+128)+2),w
  1573  027C  00A9               	movwf	(??___fttol+3)^(0+128)
  1574  027D  0829               	movf	(??___fttol+3)^(0+128),w
  1575  027E  00AF               	movwf	___fttol@exp1^(0+128)
  1576  027F  082F               	movf	___fttol@exp1^(0+128),w
  1577  0280  1D03               	btfss	3,2
  1578  0281  2A8D               	goto	l2221
  1579  0282  3000               	movlw	0
  1580  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0285  00CC               	movwf	?___fttol+3
  1583  0286  3000               	movlw	0
  1584  0287  00CB               	movwf	?___fttol+2
  1585  0288  3000               	movlw	0
  1586  0289  00CA               	movwf	?___fttol+1
  1587  028A  3000               	movlw	0
  1588  028B  00C9               	movwf	?___fttol
  1589  028C  0008               	return
  1590  028D                     l2221:	
  1591  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1592  028E  0849               	movf	___fttol@f1,w
  1593  028F  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0290  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0291  00A6               	movwf	??___fttol^(0+128)
  1596  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0294  084A               	movf	___fttol@f1+1,w
  1599  0295  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0296  1303               	bcf	3,6	;RP1=0, select bank1
  1601  0297  00A7               	movwf	(??___fttol^(0+128)+1)
  1602  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1604  029A  084B               	movf	___fttol@f1+2,w
  1605  029B  1683               	bsf	3,5	;RP0=1, select bank1
  1606  029C  1303               	bcf	3,6	;RP1=0, select bank1
  1607  029D  00A8               	movwf	(??___fttol^(0+128)+2)
  1608  029E  3017               	movlw	23
  1609  029F                     u2665:	
  1610  029F  1003               	clrc
  1611  02A0  0CA8               	rrf	(??___fttol^(0+128)+2),f
  1612  02A1  0CA7               	rrf	(??___fttol^(0+128)+1),f
  1613  02A2  0CA6               	rrf	??___fttol^(0+128),f
  1614  02A3  3EFF               	addlw	-1
  1615  02A4  1D03               	skipz
  1616  02A5  2A9F               	goto	u2665
  1617  02A6  0826               	movf	??___fttol^(0+128),w
  1618  02A7  00A9               	movwf	(??___fttol+3)^(0+128)
  1619  02A8  0829               	movf	(??___fttol+3)^(0+128),w
  1620  02A9  00AA               	movwf	___fttol@sign1^(0+128)
  1621  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1622  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1623  02AC  17CA               	bsf	___fttol@f1+1,7
  1624  02AD  30FF               	movlw	255
  1625  02AE  05C9               	andwf	___fttol@f1,f
  1626  02AF  30FF               	movlw	255
  1627  02B0  05CA               	andwf	___fttol@f1+1,f
  1628  02B1  3000               	movlw	0
  1629  02B2  05CB               	andwf	___fttol@f1+2,f
  1630  02B3  0849               	movf	___fttol@f1,w
  1631  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  1632  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  1633  02B6  00AB               	movwf	___fttol@lval^(0+128)
  1634  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1635  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1636  02B9  084A               	movf	___fttol@f1+1,w
  1637  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1638  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1639  02BC  00AC               	movwf	(___fttol@lval^(0+128)+1)
  1640  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1641  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1642  02BF  084B               	movf	___fttol@f1+2,w
  1643  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  1644  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  1645  02C2  00AD               	movwf	(___fttol@lval^(0+128)+2)
  1646  02C3  01AE               	clrf	(___fttol@lval^(0+128)+3)
  1647  02C4  308E               	movlw	142
  1648  02C5  02AF               	subwf	___fttol@exp1^(0+128),f
  1649  02C6  1FAF               	btfss	___fttol@exp1^(0+128),7
  1650  02C7  2AEA               	goto	l2241
  1651  02C8  082F               	movf	___fttol@exp1^(0+128),w
  1652  02C9  3A80               	xorlw	128
  1653  02CA  3E8F               	addlw	143
  1654  02CB  1803               	skipnc
  1655  02CC  2AD8               	goto	l2239
  1656  02CD  3000               	movlw	0
  1657  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1658  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1659  02D0  00CC               	movwf	?___fttol+3
  1660  02D1  3000               	movlw	0
  1661  02D2  00CB               	movwf	?___fttol+2
  1662  02D3  3000               	movlw	0
  1663  02D4  00CA               	movwf	?___fttol+1
  1664  02D5  3000               	movlw	0
  1665  02D6  00C9               	movwf	?___fttol
  1666  02D7  0008               	return
  1667  02D8                     l2239:	
  1668  02D8  3001               	movlw	1
  1669  02D9                     u2695:	
  1670  02D9  1003               	clrc
  1671  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1672  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1673  02DC  0CAE               	rrf	(___fttol@lval+3)^(0+128),f
  1674  02DD  0CAD               	rrf	(___fttol@lval+2)^(0+128),f
  1675  02DE  0CAC               	rrf	(___fttol@lval+1)^(0+128),f
  1676  02DF  0CAB               	rrf	___fttol@lval^(0+128),f
  1677  02E0  3EFF               	addlw	-1
  1678  02E1  1D03               	skipz
  1679  02E2  2AD9               	goto	u2695
  1680  02E3  3001               	movlw	1
  1681  02E4  00A6               	movwf	??___fttol^(0+128)
  1682  02E5  0826               	movf	??___fttol^(0+128),w
  1683  02E6  07AF               	addwf	___fttol@exp1^(0+128),f
  1684  02E7  1903               	btfsc	3,2
  1685  02E8  2B0B               	goto	l2249
  1686  02E9  2AD8               	goto	l2239
  1687  02EA                     l2241:	
  1688  02EA  3018               	movlw	24
  1689  02EB  022F               	subwf	___fttol@exp1^(0+128),w
  1690  02EC  1C03               	skipc
  1691  02ED  2B06               	goto	l489
  1692  02EE  3000               	movlw	0
  1693  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1694  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1695  02F1  00CC               	movwf	?___fttol+3
  1696  02F2  3000               	movlw	0
  1697  02F3  00CB               	movwf	?___fttol+2
  1698  02F4  3000               	movlw	0
  1699  02F5  00CA               	movwf	?___fttol+1
  1700  02F6  3000               	movlw	0
  1701  02F7  00C9               	movwf	?___fttol
  1702  02F8  0008               	return
  1703  02F9                     l2247:	
  1704  02F9  3001               	movlw	1
  1705  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  1706  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  1707  02FC  00A6               	movwf	??___fttol^(0+128)
  1708  02FD                     u2725:	
  1709  02FD  1003               	clrc
  1710  02FE  0DAB               	rlf	___fttol@lval^(0+128),f
  1711  02FF  0DAC               	rlf	(___fttol@lval+1)^(0+128),f
  1712  0300  0DAD               	rlf	(___fttol@lval+2)^(0+128),f
  1713  0301  0DAE               	rlf	(___fttol@lval+3)^(0+128),f
  1714  0302  0BA6               	decfsz	??___fttol^(0+128),f
  1715  0303  2AFD               	goto	u2725
  1716  0304  3001               	movlw	1
  1717  0305  02AF               	subwf	___fttol@exp1^(0+128),f
  1718  0306                     l489:	
  1719  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0307  1303               	bcf	3,6	;RP1=0, select bank1
  1721  0308  082F               	movf	___fttol@exp1^(0+128),w
  1722  0309  1D03               	btfss	3,2
  1723  030A  2AF9               	goto	l2247
  1724  030B                     l2249:	
  1725  030B  082A               	movf	___fttol@sign1^(0+128),w
  1726  030C  1903               	btfsc	3,2
  1727  030D  2B19               	goto	l2253
  1728  030E  09AB               	comf	___fttol@lval^(0+128),f
  1729  030F  09AC               	comf	(___fttol@lval+1)^(0+128),f
  1730  0310  09AD               	comf	(___fttol@lval+2)^(0+128),f
  1731  0311  09AE               	comf	(___fttol@lval+3)^(0+128),f
  1732  0312  0AAB               	incf	___fttol@lval^(0+128),f
  1733  0313  1903               	skipnz
  1734  0314  0AAC               	incf	(___fttol@lval+1)^(0+128),f
  1735  0315  1903               	skipnz
  1736  0316  0AAD               	incf	(___fttol@lval+2)^(0+128),f
  1737  0317  1903               	skipnz
  1738  0318  0AAE               	incf	(___fttol@lval+3)^(0+128),f
  1739  0319                     l2253:	
  1740  0319  082E               	movf	(___fttol@lval+3)^(0+128),w
  1741  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1742  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1743  031C  00CC               	movwf	?___fttol+3
  1744  031D  1683               	bsf	3,5	;RP0=1, select bank1
  1745  031E  1303               	bcf	3,6	;RP1=0, select bank1
  1746  031F  082D               	movf	(___fttol@lval+2)^(0+128),w
  1747  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0322  00CB               	movwf	?___fttol+2
  1750  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1751  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1752  0325  082C               	movf	(___fttol@lval+1)^(0+128),w
  1753  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0328  00CA               	movwf	?___fttol+1
  1756  0329  1683               	bsf	3,5	;RP0=1, select bank1
  1757  032A  1303               	bcf	3,6	;RP1=0, select bank1
  1758  032B  082B               	movf	___fttol@lval^(0+128),w
  1759  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1760  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1761  032E  00C9               	movwf	?___fttol
  1762  032F  0008               	return
  1763  0330                     __end_of___fttol:	
  1764                           
  1765                           	psect	text5
  1766  0031                     __ptext5:	
  1767 ;; *************** function ___ftmul *****************
  1768 ;; Defined at:
  1769 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  f1              3   31[BANK0 ] float 
  1772 ;;  f2              3   34[BANK0 ] float 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  f3_as_produc    3    1[BANK1 ] unsigned um
  1775 ;;  sign            1    5[BANK1 ] unsigned char 
  1776 ;;  cntr            1    4[BANK1 ] unsigned char 
  1777 ;;  exp             1    0[BANK1 ] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  3   31[BANK0 ] float 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         0       6       0       0       0
  1788 ;;      Locals:         0       0       6       0       0
  1789 ;;      Temps:          0       4       0       0       0
  1790 ;;      Totals:         0      10       6       0       0
  1791 ;;Total ram usage:       16 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    5
  1794 ;; This function calls:
  1795 ;;		___ftpack
  1796 ;; This function is called by:
  1797 ;;		_LM35ReadTemp
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function ___ftmul
  1803  0031                     ___ftmul:	
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1807  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1808  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0033  083F               	movf	___ftmul@f1,w
  1810  0034  00C5               	movwf	??___ftmul
  1811  0035  0840               	movf	___ftmul@f1+1,w
  1812  0036  00C6               	movwf	??___ftmul+1
  1813  0037  0841               	movf	___ftmul@f1+2,w
  1814  0038  00C7               	movwf	??___ftmul+2
  1815  0039  1003               	clrc
  1816  003A  0D46               	rlf	??___ftmul+1,w
  1817  003B  0D47               	rlf	??___ftmul+2,w
  1818  003C  00C8               	movwf	??___ftmul+3
  1819  003D  0848               	movf	??___ftmul+3,w
  1820  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1821  003F  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0040  00A0               	movwf	___ftmul@exp^(0+128)
  1823  0041  0820               	movf	___ftmul@exp^(0+128),w
  1824  0042  1D03               	btfss	3,2
  1825  0043  284D               	goto	l2171
  1826  0044  3000               	movlw	0
  1827  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0047  00BF               	movwf	?___ftmul
  1830  0048  3000               	movlw	0
  1831  0049  00C0               	movwf	?___ftmul+1
  1832  004A  3000               	movlw	0
  1833  004B  00C1               	movwf	?___ftmul+2
  1834  004C  0008               	return
  1835  004D                     l2171:	
  1836  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1837  004E  0842               	movf	___ftmul@f2,w
  1838  004F  00C5               	movwf	??___ftmul
  1839  0050  0843               	movf	___ftmul@f2+1,w
  1840  0051  00C6               	movwf	??___ftmul+1
  1841  0052  0844               	movf	___ftmul@f2+2,w
  1842  0053  00C7               	movwf	??___ftmul+2
  1843  0054  1003               	clrc
  1844  0055  0D46               	rlf	??___ftmul+1,w
  1845  0056  0D47               	rlf	??___ftmul+2,w
  1846  0057  00C8               	movwf	??___ftmul+3
  1847  0058  0848               	movf	??___ftmul+3,w
  1848  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1849  005A  1303               	bcf	3,6	;RP1=0, select bank1
  1850  005B  00A5               	movwf	___ftmul@sign^(0+128)
  1851  005C  0825               	movf	___ftmul@sign^(0+128),w
  1852  005D  1D03               	btfss	3,2
  1853  005E  2868               	goto	l2177
  1854  005F  3000               	movlw	0
  1855  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0062  00BF               	movwf	?___ftmul
  1858  0063  3000               	movlw	0
  1859  0064  00C0               	movwf	?___ftmul+1
  1860  0065  3000               	movlw	0
  1861  0066  00C1               	movwf	?___ftmul+2
  1862  0067  0008               	return
  1863  0068                     l2177:	
  1864  0068  1683               	bsf	3,5	;RP0=1, select bank1
  1865  0069  1303               	bcf	3,6	;RP1=0, select bank1
  1866  006A  0825               	movf	___ftmul@sign^(0+128),w
  1867  006B  3E7B               	addlw	123
  1868  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1869  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1870  006E  00C5               	movwf	??___ftmul
  1871  006F  0845               	movf	??___ftmul,w
  1872  0070  1683               	bsf	3,5	;RP0=1, select bank1
  1873  0071  1303               	bcf	3,6	;RP1=0, select bank1
  1874  0072  07A0               	addwf	___ftmul@exp^(0+128),f
  1875  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0075  083F               	movf	___ftmul@f1,w
  1878  0076  00C5               	movwf	??___ftmul
  1879  0077  0840               	movf	___ftmul@f1+1,w
  1880  0078  00C6               	movwf	??___ftmul+1
  1881  0079  0841               	movf	___ftmul@f1+2,w
  1882  007A  00C7               	movwf	??___ftmul+2
  1883  007B  3010               	movlw	16
  1884  007C                     u2535:	
  1885  007C  1003               	clrc
  1886  007D  0CC7               	rrf	??___ftmul+2,f
  1887  007E  0CC6               	rrf	??___ftmul+1,f
  1888  007F  0CC5               	rrf	??___ftmul,f
  1889  0080  3EFF               	addlw	-1
  1890  0081  1D03               	skipz
  1891  0082  287C               	goto	u2535
  1892  0083  0845               	movf	??___ftmul,w
  1893  0084  00C8               	movwf	??___ftmul+3
  1894  0085  0848               	movf	??___ftmul+3,w
  1895  0086  1683               	bsf	3,5	;RP0=1, select bank1
  1896  0087  1303               	bcf	3,6	;RP1=0, select bank1
  1897  0088  00A5               	movwf	___ftmul@sign^(0+128)
  1898  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1899  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1900  008B  0842               	movf	___ftmul@f2,w
  1901  008C  00C5               	movwf	??___ftmul
  1902  008D  0843               	movf	___ftmul@f2+1,w
  1903  008E  00C6               	movwf	??___ftmul+1
  1904  008F  0844               	movf	___ftmul@f2+2,w
  1905  0090  00C7               	movwf	??___ftmul+2
  1906  0091  3010               	movlw	16
  1907  0092                     u2545:	
  1908  0092  1003               	clrc
  1909  0093  0CC7               	rrf	??___ftmul+2,f
  1910  0094  0CC6               	rrf	??___ftmul+1,f
  1911  0095  0CC5               	rrf	??___ftmul,f
  1912  0096  3EFF               	addlw	-1
  1913  0097  1D03               	skipz
  1914  0098  2892               	goto	u2545
  1915  0099  0845               	movf	??___ftmul,w
  1916  009A  00C8               	movwf	??___ftmul+3
  1917  009B  0848               	movf	??___ftmul+3,w
  1918  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1919  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1920  009E  06A5               	xorwf	___ftmul@sign^(0+128),f
  1921  009F  3080               	movlw	128
  1922  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1923  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1924  00A2  00C5               	movwf	??___ftmul
  1925  00A3  0845               	movf	??___ftmul,w
  1926  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1927  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1928  00A6  05A5               	andwf	___ftmul@sign^(0+128),f
  1929  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1930  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1931  00A9  17C0               	bsf	___ftmul@f1+1,7
  1932  00AA  17C3               	bsf	___ftmul@f2+1,7
  1933  00AB  30FF               	movlw	255
  1934  00AC  05C2               	andwf	___ftmul@f2,f
  1935  00AD  30FF               	movlw	255
  1936  00AE  05C3               	andwf	___ftmul@f2+1,f
  1937  00AF  3000               	movlw	0
  1938  00B0  05C4               	andwf	___ftmul@f2+2,f
  1939  00B1  3000               	movlw	0
  1940  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1941  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1942  00B4  00A1               	movwf	___ftmul@f3_as_product^(0+128)
  1943  00B5  3000               	movlw	0
  1944  00B6  00A2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  1945  00B7  3000               	movlw	0
  1946  00B8  00A3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  1947  00B9  3007               	movlw	7
  1948  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1949  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1950  00BC  00C5               	movwf	??___ftmul
  1951  00BD  0845               	movf	??___ftmul,w
  1952  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  1953  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  1954  00C0  00A4               	movwf	___ftmul@cntr^(0+128)
  1955  00C1                     l2189:	
  1956  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1957  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1958  00C3  1C3F               	btfss	___ftmul@f1,0
  1959  00C4  28E3               	goto	l2193
  1960  00C5  0842               	movf	___ftmul@f2,w
  1961  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1962  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1963  00C8  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
  1964  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1965  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1966  00CB  0843               	movf	___ftmul@f2+1,w
  1967  00CC  1103               	clrz
  1968  00CD  1803               	skipnc
  1969  00CE  0A43               	incf	___ftmul@f2+1,w
  1970  00CF  1903               	skipnz
  1971  00D0  28D4               	goto	u2561
  1972  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1973  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1974  00D3  07A2               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  1975  00D4                     u2561:	
  1976  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1977  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1978  00D6  0844               	movf	___ftmul@f2+2,w
  1979  00D7  1103               	clrz
  1980  00D8  1803               	skipnc
  1981  00D9  0A44               	incf	___ftmul@f2+2,w
  1982  00DA  1903               	skipnz
  1983  00DB  28DF               	goto	u2562
  1984  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  1985  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  1986  00DE  07A3               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  1987  00DF                     u2562:	
  1988  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1989  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1990  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1991  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1992  00E3                     l2193:	
  1993  00E3  3001               	movlw	1
  1994  00E4                     u2575:	
  1995  00E4  1003               	clrc
  1996  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1997  00E6  0CC1               	rrf	___ftmul@f1+2,f
  1998  00E7  0CC0               	rrf	___ftmul@f1+1,f
  1999  00E8  0CBF               	rrf	___ftmul@f1,f
  2000  00E9  3EFF               	addlw	-1
  2001  00EA  1D03               	skipz
  2002  00EB  28E4               	goto	u2575
  2003  00EC  3001               	movlw	1
  2004  00ED                     u2585:	
  2005  00ED  1003               	clrc
  2006  00EE  0DC2               	rlf	___ftmul@f2,f
  2007  00EF  0DC3               	rlf	___ftmul@f2+1,f
  2008  00F0  0DC4               	rlf	___ftmul@f2+2,f
  2009  00F1  3EFF               	addlw	-1
  2010  00F2  1D03               	skipz
  2011  00F3  28ED               	goto	u2585
  2012  00F4  3001               	movlw	1
  2013  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  2014  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  2015  00F7  02A4               	subwf	___ftmul@cntr^(0+128),f
  2016  00F8  1D03               	btfss	3,2
  2017  00F9  28C1               	goto	l2189
  2018  00FA  3009               	movlw	9
  2019  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2020  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2021  00FD  00C5               	movwf	??___ftmul
  2022  00FE  0845               	movf	??___ftmul,w
  2023  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  2024  0100  1303               	bcf	3,6	;RP1=0, select bank1
  2025  0101  00A4               	movwf	___ftmul@cntr^(0+128)
  2026  0102                     l2201:	
  2027  0102  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0103  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0104  1C3F               	btfss	___ftmul@f1,0
  2030  0105  2924               	goto	l2205
  2031  0106  0842               	movf	___ftmul@f2,w
  2032  0107  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0108  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0109  07A1               	addwf	___ftmul@f3_as_product^(0+128),f
  2035  010A  1283               	bcf	3,5	;RP0=0, select bank0
  2036  010B  1303               	bcf	3,6	;RP1=0, select bank0
  2037  010C  0843               	movf	___ftmul@f2+1,w
  2038  010D  1103               	clrz
  2039  010E  1803               	skipnc
  2040  010F  0A43               	incf	___ftmul@f2+1,w
  2041  0110  1903               	skipnz
  2042  0111  2915               	goto	u2611
  2043  0112  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0113  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0114  07A2               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  2046  0115                     u2611:	
  2047  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0116  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0117  0844               	movf	___ftmul@f2+2,w
  2050  0118  1103               	clrz
  2051  0119  1803               	skipnc
  2052  011A  0A44               	incf	___ftmul@f2+2,w
  2053  011B  1903               	skipnz
  2054  011C  2920               	goto	u2612
  2055  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2056  011E  1303               	bcf	3,6	;RP1=0, select bank1
  2057  011F  07A3               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  2058  0120                     u2612:	
  2059  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0122  1683               	bsf	3,5	;RP0=1, select bank1
  2062  0123  1303               	bcf	3,6	;RP1=0, select bank1
  2063  0124                     l2205:	
  2064  0124  3001               	movlw	1
  2065  0125                     u2625:	
  2066  0125  1003               	clrc
  2067  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0127  0CC1               	rrf	___ftmul@f1+2,f
  2069  0128  0CC0               	rrf	___ftmul@f1+1,f
  2070  0129  0CBF               	rrf	___ftmul@f1,f
  2071  012A  3EFF               	addlw	-1
  2072  012B  1D03               	skipz
  2073  012C  2925               	goto	u2625
  2074  012D  3001               	movlw	1
  2075  012E                     u2635:	
  2076  012E  1003               	clrc
  2077  012F  1683               	bsf	3,5	;RP0=1, select bank1
  2078  0130  1303               	bcf	3,6	;RP1=0, select bank1
  2079  0131  0CA3               	rrf	(___ftmul@f3_as_product+2)^(0+128),f
  2080  0132  0CA2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  2081  0133  0CA1               	rrf	___ftmul@f3_as_product^(0+128),f
  2082  0134  3EFF               	addlw	-1
  2083  0135  1D03               	skipz
  2084  0136  292E               	goto	u2635
  2085  0137  3001               	movlw	1
  2086  0138  02A4               	subwf	___ftmul@cntr^(0+128),f
  2087  0139  1D03               	btfss	3,2
  2088  013A  2902               	goto	l2201
  2089  013B  0821               	movf	___ftmul@f3_as_product^(0+128),w
  2090  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2091  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2092  013E  00B3               	movwf	___ftpack@arg
  2093  013F  1683               	bsf	3,5	;RP0=1, select bank1
  2094  0140  1303               	bcf	3,6	;RP1=0, select bank1
  2095  0141  0822               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  2096  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0144  00B4               	movwf	___ftpack@arg+1
  2099  0145  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0146  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0147  0823               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  2102  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2104  014A  00B5               	movwf	___ftpack@arg+2
  2105  014B  1683               	bsf	3,5	;RP0=1, select bank1
  2106  014C  1303               	bcf	3,6	;RP1=0, select bank1
  2107  014D  0820               	movf	___ftmul@exp^(0+128),w
  2108  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2109  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2110  0150  00C5               	movwf	??___ftmul
  2111  0151  0845               	movf	??___ftmul,w
  2112  0152  00B6               	movwf	___ftpack@exp
  2113  0153  1683               	bsf	3,5	;RP0=1, select bank1
  2114  0154  1303               	bcf	3,6	;RP1=0, select bank1
  2115  0155  0825               	movf	___ftmul@sign^(0+128),w
  2116  0156  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0157  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0158  00C6               	movwf	??___ftmul+1
  2119  0159  0846               	movf	??___ftmul+1,w
  2120  015A  00B7               	movwf	___ftpack@sign
  2121  015B  120A  118A  2466   	fcall	___ftpack
  2122  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2123  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0160  0833               	movf	?___ftpack,w
  2125  0161  00BF               	movwf	?___ftmul
  2126  0162  0834               	movf	?___ftpack+1,w
  2127  0163  00C0               	movwf	?___ftmul+1
  2128  0164  0835               	movf	?___ftpack+2,w
  2129  0165  00C1               	movwf	?___ftmul+2
  2130  0166  0008               	return
  2131  0167                     __end_of___ftmul:	
  2132                           
  2133                           	psect	text6
  2134  0466                     __ptext6:	
  2135 ;; *************** function ___ftpack *****************
  2136 ;; Defined at:
  2137 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  arg             3   19[BANK0 ] unsigned um
  2140 ;;  exp             1   22[BANK0 ] unsigned char 
  2141 ;;  sign            1   23[BANK0 ] unsigned char 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  3   19[BANK0 ] float 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       5       0       0       0
  2154 ;;      Locals:         0       0       0       0       0
  2155 ;;      Temps:          0       3       0       0       0
  2156 ;;      Totals:         0       8       0       0       0
  2157 ;;Total ram usage:        8 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    4
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		___ftmul
  2164 ;;		___lwtoft
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           
  2169                           ;psect for function ___ftpack
  2170  0466                     ___ftpack:	
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2174  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0468  0836               	movf	___ftpack@exp,w
  2177  0469  1903               	btfsc	3,2
  2178  046A  2C70               	goto	l2137
  2179  046B  0835               	movf	___ftpack@arg+2,w
  2180  046C  0434               	iorwf	___ftpack@arg+1,w
  2181  046D  0433               	iorwf	___ftpack@arg,w
  2182  046E  1D03               	skipz
  2183  046F  2C83               	goto	l2143
  2184  0470                     l2137:	
  2185  0470  3000               	movlw	0
  2186  0471  00B3               	movwf	?___ftpack
  2187  0472  3000               	movlw	0
  2188  0473  00B4               	movwf	?___ftpack+1
  2189  0474  3000               	movlw	0
  2190  0475  00B5               	movwf	?___ftpack+2
  2191  0476  0008               	return
  2192  0477                     l2141:	
  2193  0477  3001               	movlw	1
  2194  0478  00B8               	movwf	??___ftpack
  2195  0479  0838               	movf	??___ftpack,w
  2196  047A  07B6               	addwf	___ftpack@exp,f
  2197  047B  3001               	movlw	1
  2198  047C                     u2415:	
  2199  047C  1003               	clrc
  2200  047D  0CB5               	rrf	___ftpack@arg+2,f
  2201  047E  0CB4               	rrf	___ftpack@arg+1,f
  2202  047F  0CB3               	rrf	___ftpack@arg,f
  2203  0480  3EFF               	addlw	-1
  2204  0481  1D03               	skipz
  2205  0482  2C7C               	goto	u2415
  2206  0483                     l2143:	
  2207  0483  30FE               	movlw	254
  2208  0484  0535               	andwf	___ftpack@arg+2,w
  2209  0485  1903               	btfsc	3,2
  2210  0486  2C9E               	goto	l398
  2211  0487  2C77               	goto	l2141
  2212  0488                     l2145:	
  2213  0488  3001               	movlw	1
  2214  0489  00B8               	movwf	??___ftpack
  2215  048A  0838               	movf	??___ftpack,w
  2216  048B  07B6               	addwf	___ftpack@exp,f
  2217  048C  3001               	movlw	1
  2218  048D  07B3               	addwf	___ftpack@arg,f
  2219  048E  3000               	movlw	0
  2220  048F  1803               	skipnc
  2221  0490  3001               	movlw	1
  2222  0491  07B4               	addwf	___ftpack@arg+1,f
  2223  0492  3000               	movlw	0
  2224  0493  1803               	skipnc
  2225  0494  3001               	movlw	1
  2226  0495  07B5               	addwf	___ftpack@arg+2,f
  2227  0496  3001               	movlw	1
  2228  0497                     u2435:	
  2229  0497  1003               	clrc
  2230  0498  0CB5               	rrf	___ftpack@arg+2,f
  2231  0499  0CB4               	rrf	___ftpack@arg+1,f
  2232  049A  0CB3               	rrf	___ftpack@arg,f
  2233  049B  3EFF               	addlw	-1
  2234  049C  1D03               	skipz
  2235  049D  2C97               	goto	u2435
  2236  049E                     l398:	
  2237  049E  30FF               	movlw	255
  2238  049F  0535               	andwf	___ftpack@arg+2,w
  2239  04A0  1903               	btfsc	3,2
  2240  04A1  2CAD               	goto	l2153
  2241  04A2  2C88               	goto	l2145
  2242  04A3                     l2151:	
  2243  04A3  3001               	movlw	1
  2244  04A4  02B6               	subwf	___ftpack@exp,f
  2245  04A5  3001               	movlw	1
  2246  04A6                     u2455:	
  2247  04A6  1003               	clrc
  2248  04A7  0DB3               	rlf	___ftpack@arg,f
  2249  04A8  0DB4               	rlf	___ftpack@arg+1,f
  2250  04A9  0DB5               	rlf	___ftpack@arg+2,f
  2251  04AA  3EFF               	addlw	-1
  2252  04AB  1D03               	skipz
  2253  04AC  2CA6               	goto	u2455
  2254  04AD                     l2153:	
  2255  04AD  1BB4               	btfsc	___ftpack@arg+1,7
  2256  04AE  2CB3               	goto	l405
  2257  04AF  3002               	movlw	2
  2258  04B0  0236               	subwf	___ftpack@exp,w
  2259  04B1  1803               	skipnc
  2260  04B2  2CA3               	goto	l2151
  2261  04B3                     l405:	
  2262  04B3  1836               	btfsc	___ftpack@exp,0
  2263  04B4  2CBB               	goto	l406
  2264  04B5  30FF               	movlw	255
  2265  04B6  05B3               	andwf	___ftpack@arg,f
  2266  04B7  307F               	movlw	127
  2267  04B8  05B4               	andwf	___ftpack@arg+1,f
  2268  04B9  30FF               	movlw	255
  2269  04BA  05B5               	andwf	___ftpack@arg+2,f
  2270  04BB                     l406:	
  2271  04BB  1003               	clrc
  2272  04BC  0CB6               	rrf	___ftpack@exp,f
  2273  04BD  0836               	movf	___ftpack@exp,w
  2274  04BE  00B8               	movwf	??___ftpack
  2275  04BF  01B9               	clrf	??___ftpack+1
  2276  04C0  01BA               	clrf	??___ftpack+2
  2277  04C1  3010               	movlw	16
  2278  04C2                     u2495:	
  2279  04C2  1003               	clrc
  2280  04C3  0DB8               	rlf	??___ftpack,f
  2281  04C4  0DB9               	rlf	??___ftpack+1,f
  2282  04C5  0DBA               	rlf	??___ftpack+2,f
  2283  04C6  3EFF               	addlw	-1
  2284  04C7  1D03               	skipz
  2285  04C8  2CC2               	goto	u2495
  2286  04C9  0838               	movf	??___ftpack,w
  2287  04CA  04B3               	iorwf	___ftpack@arg,f
  2288  04CB  0839               	movf	??___ftpack+1,w
  2289  04CC  04B4               	iorwf	___ftpack@arg+1,f
  2290  04CD  083A               	movf	??___ftpack+2,w
  2291  04CE  04B5               	iorwf	___ftpack@arg+2,f
  2292  04CF  0837               	movf	___ftpack@sign,w
  2293  04D0  1903               	btfsc	3,2
  2294  04D1  0008               	return
  2295  04D2  17B5               	bsf	___ftpack@arg+2,7
  2296  04D3  0008               	return
  2297  04D4                     __end_of___ftpack:	
  2298                           
  2299                           	psect	text7
  2300  07DC                     __ptext7:	
  2301 ;; *************** function _ReadADC *****************
  2302 ;; Defined at:
  2303 ;;		line 27 in file "adc_pic16.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  ch              1    wreg     unsigned char 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  ch              1   22[BANK0 ] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  2   19[BANK0 ] unsigned int 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2317 ;;      Params:         0       2       0       0       0
  2318 ;;      Locals:         0       1       0       0       0
  2319 ;;      Temps:          0       1       0       0       0
  2320 ;;      Totals:         0       4       0       0       0
  2321 ;;Total ram usage:        4 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    4
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_LM35ReadTemp
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _ReadADC
  2333  07DC                     _ReadADC:	
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _ReadADC: [wreg+status,2+status,0]
  2337                           ;ReadADC@ch stored from wreg
  2338  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  2339  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  2340  07DE  00B6               	movwf	ReadADC@ch
  2341                           
  2342                           ;adc_pic16.c: 29: ADCON0bits.CHS=ch;
  2343  07DF  0836               	movf	ReadADC@ch,w
  2344  07E0  00B5               	movwf	??_ReadADC
  2345  07E1  0DB5               	rlf	??_ReadADC,f
  2346  07E2  0DB5               	rlf	??_ReadADC,f
  2347  07E3  081F               	movf	31,w	;volatile
  2348  07E4  0635               	xorwf	??_ReadADC,w
  2349  07E5  39C3               	andlw	-61
  2350  07E6  0635               	xorwf	??_ReadADC,w
  2351  07E7  009F               	movwf	31	;volatile
  2352                           
  2353                           ;adc_pic16.c: 32: _delay((unsigned long)((100)*(20000000/4000000.0)));
  2354  07E8  30A6               	movlw	166
  2355  07E9  00B5               	movwf	??_ReadADC
  2356  07EA                     u2817:	
  2357  07EA  0BB5               	decfsz	??_ReadADC,f
  2358  07EB  2FEA               	goto	u2817
  2359  07EC  0000               	nop
  2360                           
  2361                           ;adc_pic16.c: 35: ADCON0bits.GO=1;
  2362  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  2363  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  2364  07EF  149F               	bsf	31,1	;volatile
  2365  07F0                     l20:	
  2366                           ;adc_pic16.c: 38: while(ADCON0bits.GO);
  2367                           
  2368  07F0  189F               	btfsc	31,1	;volatile
  2369  07F1  2FF0               	goto	l20
  2370                           
  2371                           ;adc_pic16.c: 40: return ((ADRESH<<8)|ADRESL);
  2372  07F2  081E               	movf	30,w	;volatile
  2373  07F3  00B4               	movwf	?_ReadADC+1
  2374  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  2375  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  2376  07F6  081E               	movf	30,w	;volatile
  2377  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  2378  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  2379  07F9  00B3               	movwf	?_ReadADC
  2380  07FA  0008               	return
  2381  07FB                     __end_of_ReadADC:	
  2382                           
  2383                           	psect	text8
  2384  0FAE                     __ptext8:	
  2385 ;; *************** function _LCDWriteString *****************
  2386 ;; Defined at:
  2387 ;;		line 279 in file "lcd_hd44780_pic16.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  msg             1    wreg     PTR const unsigned char 
  2390 ;;		 -> STR_6(4), STR_5(13), STR_4(4), STR_3(17), 
  2391 ;;		 -> STR_2(4), STR_1(17), 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  msg             1   33[BANK0 ] PTR const unsigned char 
  2394 ;;		 -> STR_6(4), STR_5(13), STR_4(4), STR_3(17), 
  2395 ;;		 -> STR_2(4), STR_1(17), 
  2396 ;;  cc              1   32[BANK0 ] char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406 ;;      Params:         0       0       0       0       0
  2407 ;;      Locals:         0       2       0       0       0
  2408 ;;      Temps:          0       1       0       0       0
  2409 ;;      Totals:         0       3       0       0       0
  2410 ;;Total ram usage:        3 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    6
  2413 ;; This function calls:
  2414 ;;		_LCDByte
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _LCDWriteString
  2422  0FAE                     _LCDWriteString:	
  2423                           
  2424                           ;incstack = 0
  2425                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2426                           ;LCDWriteString@msg stored from wreg
  2427  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0FB0  00C1               	movwf	LCDWriteString@msg
  2430  0FB1                     l1875:	
  2431                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  2432                           
  2433  0FB1  0841               	movf	LCDWriteString@msg,w
  2434  0FB2  0084               	movwf	4
  2435  0FB3  120A  158A  2000  120A  158A  	fcall	stringdir
  2436  0FB8  3A00               	xorlw	0
  2437  0FB9  1903               	btfsc	3,2
  2438  0FBA  0008               	return
  2439                           
  2440                           ;lcd_hd44780_pic16.c: 282: {
  2441                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  2442  0FBB  0841               	movf	LCDWriteString@msg,w
  2443  0FBC  0084               	movwf	4
  2444  0FBD  120A  158A  2000  120A  158A  	fcall	stringdir
  2445  0FC2  3A25               	xorlw	37
  2446  0FC3  1D03               	skipz
  2447  0FC4  2FE9               	goto	l1871
  2448                           
  2449                           ;lcd_hd44780_pic16.c: 285: {
  2450                           ;lcd_hd44780_pic16.c: 286: msg++;
  2451  0FC5  3001               	movlw	1
  2452  0FC6  00BF               	movwf	??_LCDWriteString
  2453  0FC7  083F               	movf	??_LCDWriteString,w
  2454  0FC8  07C1               	addwf	LCDWriteString@msg,f
  2455                           
  2456                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  2457  0FC9  0841               	movf	LCDWriteString@msg,w
  2458  0FCA  0084               	movwf	4
  2459  0FCB  120A  158A  2000  120A  158A  	fcall	stringdir
  2460  0FD0  3ED0               	addlw	-48
  2461  0FD1  00BF               	movwf	??_LCDWriteString
  2462  0FD2  083F               	movf	??_LCDWriteString,w
  2463  0FD3  00C0               	movwf	LCDWriteString@cc
  2464                           
  2465                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  2466  0FD4  1BC0               	btfsc	LCDWriteString@cc,7
  2467  0FD5  2FDF               	goto	l1867
  2468  0FD6  0840               	movf	LCDWriteString@cc,w
  2469  0FD7  3A80               	xorlw	128
  2470  0FD8  3E78               	addlw	-136
  2471  0FD9  1803               	skipnc
  2472  0FDA  2FDF               	goto	l1867
  2473                           
  2474                           ;lcd_hd44780_pic16.c: 290: {
  2475                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  2476  0FDB  01B8               	clrf	LCDByte@isdata
  2477  0FDC  0AB8               	incf	LCDByte@isdata,f
  2478  0FDD  0840               	movf	LCDWriteString@cc,w
  2479  0FDE  2FF4               	goto	L1
  2480  0FDF                     l1867:	
  2481                           ;lcd_hd44780_pic16.c: 292: }
  2482                           
  2483                           
  2484                           ;lcd_hd44780_pic16.c: 293: else
  2485                           ;lcd_hd44780_pic16.c: 294: {
  2486                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  2487  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0FE1  01B8               	clrf	LCDByte@isdata
  2490  0FE2  0AB8               	incf	LCDByte@isdata,f
  2491  0FE3  3025               	movlw	37
  2492  0FE4  120A  118A  2785  120A  158A  	fcall	_LCDByte
  2493  0FE9                     l1871:	
  2494                           ;lcd_hd44780_pic16.c: 297: }
  2495                           ;lcd_hd44780_pic16.c: 298: }
  2496                           
  2497                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  2498                           
  2499                           
  2500                           ;lcd_hd44780_pic16.c: 299: else
  2501                           ;lcd_hd44780_pic16.c: 300: {
  2502                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  2503  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0FEB  01B8               	clrf	LCDByte@isdata
  2506  0FEC  0AB8               	incf	LCDByte@isdata,f
  2507  0FED  0841               	movf	LCDWriteString@msg,w
  2508  0FEE  0084               	movwf	4
  2509  0FEF  120A  158A  2000  120A  158A  	fcall	stringdir
  2510  0FF4                     L1:	
  2511  0FF4  120A  118A  2785  120A  158A  	fcall	_LCDByte
  2512                           
  2513                           ;lcd_hd44780_pic16.c: 302: }
  2514                           ;lcd_hd44780_pic16.c: 303: msg++;
  2515  0FF9  3001               	movlw	1
  2516  0FFA  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0FFB  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0FFC  00BF               	movwf	??_LCDWriteString
  2519  0FFD  083F               	movf	??_LCDWriteString,w
  2520  0FFE  07C1               	addwf	LCDWriteString@msg,f
  2521  0FFF  2FB1               	goto	l1875
  2522  1000                     __end_of_LCDWriteString:	
  2523                           
  2524                           	psect	text9
  2525  0330                     __ptext9:	
  2526 ;; *************** function _LCDWriteInt *****************
  2527 ;; Defined at:
  2528 ;;		line 317 in file "lcd_hd44780_pic16.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  val             2   31[BANK0 ] int 
  2531 ;;  field_length    1   33[BANK0 ] char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  str             5   36[BANK0 ] unsigned char [5]
  2534 ;;  i               2   43[BANK0 ] int 
  2535 ;;  j               2   41[BANK0 ] int 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       3       0       0       0
  2546 ;;      Locals:         0       9       0       0       0
  2547 ;;      Temps:          0       2       0       0       0
  2548 ;;      Totals:         0      14       0       0       0
  2549 ;;Total ram usage:       14 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    6
  2552 ;; This function calls:
  2553 ;;		_LCDByte
  2554 ;;		___awdiv
  2555 ;;		___awmod
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _LCDWriteInt
  2563  0330                     _LCDWriteInt:	
  2564                           
  2565                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  2566                           
  2567                           ;incstack = 0
  2568                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2569  0330  3044               	movlw	LCDWriteInt@str& (0+255)
  2570  0331  0084               	movwf	4
  2571  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0334  0855               	movf	LCDWriteInt@F1632,w
  2574  0335  1383               	bcf	3,7	;select IRP bank0
  2575  0336  0080               	movwf	0
  2576  0337  0A84               	incf	4,f
  2577  0338  0856               	movf	LCDWriteInt@F1632+1,w
  2578  0339  0080               	movwf	0
  2579  033A  0A84               	incf	4,f
  2580  033B  0857               	movf	LCDWriteInt@F1632+2,w
  2581  033C  0080               	movwf	0
  2582  033D  0A84               	incf	4,f
  2583  033E  0858               	movf	LCDWriteInt@F1632+3,w
  2584  033F  0080               	movwf	0
  2585  0340  0A84               	incf	4,f
  2586  0341  0859               	movf	LCDWriteInt@F1632+4,w
  2587  0342  0080               	movwf	0
  2588                           
  2589                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  2590  0343  3004               	movlw	4
  2591  0344  00CB               	movwf	LCDWriteInt@i
  2592  0345  3000               	movlw	0
  2593  0346  00CC               	movwf	LCDWriteInt@i+1
  2594  0347  01C9               	clrf	LCDWriteInt@j
  2595  0348  01CA               	clrf	LCDWriteInt@j+1
  2596                           
  2597                           ;lcd_hd44780_pic16.c: 323: if(val<0)
  2598  0349  1FC0               	btfss	LCDWriteInt@val+1,7
  2599  034A  2B5A               	goto	l1895
  2600                           
  2601                           ;lcd_hd44780_pic16.c: 324: {
  2602                           ;lcd_hd44780_pic16.c: 325: (LCDByte('-',1));
  2603  034B  01B8               	clrf	LCDByte@isdata
  2604  034C  0AB8               	incf	LCDByte@isdata,f
  2605  034D  302D               	movlw	45
  2606  034E  120A  118A  2785  120A  118A  	fcall	_LCDByte
  2607                           
  2608                           ;lcd_hd44780_pic16.c: 326: val=val*-1;
  2609  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0355  09BF               	comf	LCDWriteInt@val,f
  2612  0356  09C0               	comf	LCDWriteInt@val+1,f
  2613  0357  0ABF               	incf	LCDWriteInt@val,f
  2614  0358  1903               	skipnz
  2615  0359  0AC0               	incf	LCDWriteInt@val+1,f
  2616  035A                     l1895:	
  2617                           ;lcd_hd44780_pic16.c: 327: }
  2618                           ;lcd_hd44780_pic16.c: 329: while(val)
  2619                           
  2620  035A  083F               	movf	LCDWriteInt@val,w
  2621  035B  0440               	iorwf	LCDWriteInt@val+1,w
  2622  035C  1903               	btfsc	3,2
  2623  035D  2B8F               	goto	l1897
  2624                           
  2625                           ;lcd_hd44780_pic16.c: 330: {
  2626                           ;lcd_hd44780_pic16.c: 331: str[i]=val%10;
  2627  035E  300A               	movlw	10
  2628  035F  00B3               	movwf	___awmod@divisor
  2629  0360  3000               	movlw	0
  2630  0361  00B4               	movwf	___awmod@divisor+1
  2631  0362  0840               	movf	LCDWriteInt@val+1,w
  2632  0363  00B6               	movwf	___awmod@dividend+1
  2633  0364  083F               	movf	LCDWriteInt@val,w
  2634  0365  00B5               	movwf	___awmod@dividend
  2635  0366  120A  158A  2711  120A  118A  	fcall	___awmod
  2636  036B  1283               	bcf	3,5	;RP0=0, select bank0
  2637  036C  1303               	bcf	3,6	;RP1=0, select bank0
  2638  036D  0833               	movf	?___awmod,w
  2639  036E  00C2               	movwf	??_LCDWriteInt
  2640  036F  084B               	movf	LCDWriteInt@i,w
  2641  0370  3E44               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2642  0371  0084               	movwf	4
  2643  0372  0842               	movf	??_LCDWriteInt,w
  2644  0373  1383               	bcf	3,7	;select IRP bank0
  2645  0374  0080               	movwf	0
  2646                           
  2647                           ;lcd_hd44780_pic16.c: 332: val=val/10;
  2648  0375  300A               	movlw	10
  2649  0376  00B3               	movwf	___awdiv@divisor
  2650  0377  3000               	movlw	0
  2651  0378  00B4               	movwf	___awdiv@divisor+1
  2652  0379  0840               	movf	LCDWriteInt@val+1,w
  2653  037A  00B6               	movwf	___awdiv@dividend+1
  2654  037B  083F               	movf	LCDWriteInt@val,w
  2655  037C  00B5               	movwf	___awdiv@dividend
  2656  037D  120A  118A  2678  120A  118A  	fcall	___awdiv
  2657  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0384  0834               	movf	?___awdiv+1,w
  2660  0385  00C0               	movwf	LCDWriteInt@val+1
  2661  0386  0833               	movf	?___awdiv,w
  2662  0387  00BF               	movwf	LCDWriteInt@val
  2663                           
  2664                           ;lcd_hd44780_pic16.c: 333: i--;
  2665  0388  30FF               	movlw	255
  2666  0389  07CB               	addwf	LCDWriteInt@i,f
  2667  038A  1803               	skipnc
  2668  038B  0ACC               	incf	LCDWriteInt@i+1,f
  2669  038C  30FF               	movlw	255
  2670  038D  07CC               	addwf	LCDWriteInt@i+1,f
  2671  038E  2B5A               	goto	l1895
  2672  038F                     l1897:	
  2673                           
  2674                           ;lcd_hd44780_pic16.c: 334: }
  2675                           ;lcd_hd44780_pic16.c: 335: if(field_length==-1)
  2676  038F  0A41               	incf	LCDWriteInt@field_length,w
  2677  0390  1903               	btfsc	3,2
  2678  0391  2BA4               	goto	l1905
  2679                           
  2680                           ;lcd_hd44780_pic16.c: 337: else
  2681                           ;lcd_hd44780_pic16.c: 338: j=5-field_length;
  2682                           
  2683                           ;lcd_hd44780_pic16.c: 336: while(str[j]==-16) j++;
  2684  0392  0841               	movf	LCDWriteInt@field_length,w
  2685  0393  00C2               	movwf	??_LCDWriteInt
  2686  0394  01C3               	clrf	??_LCDWriteInt+1
  2687  0395  1BC2               	btfsc	??_LCDWriteInt,7
  2688  0396  03C3               	decf	??_LCDWriteInt+1,f
  2689  0397  09C2               	comf	??_LCDWriteInt,f
  2690  0398  09C3               	comf	??_LCDWriteInt+1,f
  2691  0399  0AC2               	incf	??_LCDWriteInt,f
  2692  039A  1903               	skipnz
  2693  039B  0AC3               	incf	??_LCDWriteInt+1,f
  2694  039C  0842               	movf	??_LCDWriteInt,w
  2695  039D  3E05               	addlw	5
  2696  039E  00C9               	movwf	LCDWriteInt@j
  2697  039F  0843               	movf	??_LCDWriteInt+1,w
  2698  03A0  1803               	skipnc
  2699  03A1  3E01               	addlw	1
  2700  03A2  3E00               	addlw	0
  2701  03A3  00CA               	movwf	LCDWriteInt@j+1
  2702  03A4                     l1905:	
  2703                           
  2704                           ;lcd_hd44780_pic16.c: 341: for(i=j;i<5;i++)
  2705  03A4  084A               	movf	LCDWriteInt@j+1,w
  2706  03A5  00CC               	movwf	LCDWriteInt@i+1
  2707  03A6  0849               	movf	LCDWriteInt@j,w
  2708  03A7  00CB               	movwf	LCDWriteInt@i
  2709  03A8                     L2:	
  2710  03A8  084C               	movf	LCDWriteInt@i+1,w
  2711  03A9  3A80               	xorlw	128
  2712  03AA  00FF               	movwf	127
  2713  03AB  3080               	movlw	128
  2714  03AC  027F               	subwf	127,w
  2715  03AD  1D03               	skipz
  2716  03AE  2BB1               	goto	u2195
  2717  03AF  3005               	movlw	5
  2718  03B0  024B               	subwf	LCDWriteInt@i,w
  2719  03B1                     u2195:	
  2720  03B1  1803               	btfsc	3,0
  2721  03B2  0008               	return
  2722                           
  2723                           ;lcd_hd44780_pic16.c: 342: {
  2724                           ;lcd_hd44780_pic16.c: 343: (LCDByte(48+str[i],1));
  2725  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2726  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2727  03B5  01B8               	clrf	LCDByte@isdata
  2728  03B6  0AB8               	incf	LCDByte@isdata,f
  2729  03B7  084B               	movf	LCDWriteInt@i,w
  2730  03B8  3E44               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  2731  03B9  0084               	movwf	4
  2732  03BA  1383               	bcf	3,7	;select IRP bank0
  2733  03BB  0800               	movf	0,w
  2734  03BC  3E30               	addlw	48
  2735  03BD  120A  118A  2785  120A  118A  	fcall	_LCDByte
  2736  03C2  3001               	movlw	1
  2737  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2738  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2739  03C5  07CB               	addwf	LCDWriteInt@i,f
  2740  03C6  1803               	skipnc
  2741  03C7  0ACC               	incf	LCDWriteInt@i+1,f
  2742  03C8  3000               	movlw	0
  2743  03C9  07CC               	addwf	LCDWriteInt@i+1,f
  2744  03CA  2BA8               	goto	L2
  2745  03CB                     __end_of_LCDWriteInt:	
  2746                           
  2747                           	psect	text10
  2748  0F11                     __ptext10:	
  2749 ;; *************** function ___awmod *****************
  2750 ;; Defined at:
  2751 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  divisor         2   19[BANK0 ] int 
  2754 ;;  dividend        2   21[BANK0 ] int 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  sign            1   25[BANK0 ] unsigned char 
  2757 ;;  counter         1   24[BANK0 ] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  2   19[BANK0 ] int 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2767 ;;      Params:         0       4       0       0       0
  2768 ;;      Locals:         0       2       0       0       0
  2769 ;;      Temps:          0       1       0       0       0
  2770 ;;      Totals:         0       7       0       0       0
  2771 ;;Total ram usage:        7 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    4
  2774 ;; This function calls:
  2775 ;;		Nothing
  2776 ;; This function is called by:
  2777 ;;		_LCDWriteInt
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function ___awmod
  2783  0F11                     ___awmod:	
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2787  0F11  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0F12  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0F13  01B9               	clrf	___awmod@sign
  2790  0F14  1FB6               	btfss	___awmod@dividend+1,7
  2791  0F15  2F1D               	goto	l1591
  2792  0F16  09B5               	comf	___awmod@dividend,f
  2793  0F17  09B6               	comf	___awmod@dividend+1,f
  2794  0F18  0AB5               	incf	___awmod@dividend,f
  2795  0F19  1903               	skipnz
  2796  0F1A  0AB6               	incf	___awmod@dividend+1,f
  2797  0F1B  01B9               	clrf	___awmod@sign
  2798  0F1C  0AB9               	incf	___awmod@sign,f
  2799  0F1D                     l1591:	
  2800  0F1D  1FB4               	btfss	___awmod@divisor+1,7
  2801  0F1E  2F24               	goto	l1595
  2802  0F1F  09B3               	comf	___awmod@divisor,f
  2803  0F20  09B4               	comf	___awmod@divisor+1,f
  2804  0F21  0AB3               	incf	___awmod@divisor,f
  2805  0F22  1903               	skipnz
  2806  0F23  0AB4               	incf	___awmod@divisor+1,f
  2807  0F24                     l1595:	
  2808  0F24  0833               	movf	___awmod@divisor,w
  2809  0F25  0434               	iorwf	___awmod@divisor+1,w
  2810  0F26  1903               	btfsc	3,2
  2811  0F27  2F51               	goto	l1613
  2812  0F28  01B8               	clrf	___awmod@counter
  2813  0F29  0AB8               	incf	___awmod@counter,f
  2814  0F2A                     l1603:	
  2815  0F2A  1BB4               	btfsc	___awmod@divisor+1,7
  2816  0F2B  2F38               	goto	l1605
  2817  0F2C  3001               	movlw	1
  2818  0F2D                     u1585:	
  2819  0F2D  1003               	clrc
  2820  0F2E  0DB3               	rlf	___awmod@divisor,f
  2821  0F2F  0DB4               	rlf	___awmod@divisor+1,f
  2822  0F30  3EFF               	addlw	-1
  2823  0F31  1D03               	skipz
  2824  0F32  2F2D               	goto	u1585
  2825  0F33  3001               	movlw	1
  2826  0F34  00B7               	movwf	??___awmod
  2827  0F35  0837               	movf	??___awmod,w
  2828  0F36  07B8               	addwf	___awmod@counter,f
  2829  0F37  2F2A               	goto	l1603
  2830  0F38                     l1605:	
  2831  0F38  0834               	movf	___awmod@divisor+1,w
  2832  0F39  0236               	subwf	___awmod@dividend+1,w
  2833  0F3A  1D03               	skipz
  2834  0F3B  2F3E               	goto	u1605
  2835  0F3C  0833               	movf	___awmod@divisor,w
  2836  0F3D  0235               	subwf	___awmod@dividend,w
  2837  0F3E                     u1605:	
  2838  0F3E  1C03               	skipc
  2839  0F3F  2F46               	goto	l1609
  2840  0F40  0833               	movf	___awmod@divisor,w
  2841  0F41  02B5               	subwf	___awmod@dividend,f
  2842  0F42  0834               	movf	___awmod@divisor+1,w
  2843  0F43  1C03               	skipc
  2844  0F44  03B6               	decf	___awmod@dividend+1,f
  2845  0F45  02B6               	subwf	___awmod@dividend+1,f
  2846  0F46                     l1609:	
  2847  0F46  3001               	movlw	1
  2848  0F47                     u1615:	
  2849  0F47  1003               	clrc
  2850  0F48  0CB4               	rrf	___awmod@divisor+1,f
  2851  0F49  0CB3               	rrf	___awmod@divisor,f
  2852  0F4A  3EFF               	addlw	-1
  2853  0F4B  1D03               	skipz
  2854  0F4C  2F47               	goto	u1615
  2855  0F4D  3001               	movlw	1
  2856  0F4E  02B8               	subwf	___awmod@counter,f
  2857  0F4F  1D03               	btfss	3,2
  2858  0F50  2F38               	goto	l1605
  2859  0F51                     l1613:	
  2860  0F51  0839               	movf	___awmod@sign,w
  2861  0F52  1903               	btfsc	3,2
  2862  0F53  2F59               	goto	l1617
  2863  0F54  09B5               	comf	___awmod@dividend,f
  2864  0F55  09B6               	comf	___awmod@dividend+1,f
  2865  0F56  0AB5               	incf	___awmod@dividend,f
  2866  0F57  1903               	skipnz
  2867  0F58  0AB6               	incf	___awmod@dividend+1,f
  2868  0F59                     l1617:	
  2869  0F59  0836               	movf	___awmod@dividend+1,w
  2870  0F5A  00B4               	movwf	?___awmod+1
  2871  0F5B  0835               	movf	___awmod@dividend,w
  2872  0F5C  00B3               	movwf	?___awmod
  2873  0F5D  0008               	return
  2874  0F5E                     __end_of___awmod:	
  2875                           
  2876                           	psect	text11
  2877  0678                     __ptext11:	
  2878 ;; *************** function ___awdiv *****************
  2879 ;; Defined at:
  2880 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  divisor         2   19[BANK0 ] int 
  2883 ;;  dividend        2   21[BANK0 ] int 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  quotient        2   26[BANK0 ] int 
  2886 ;;  sign            1   25[BANK0 ] unsigned char 
  2887 ;;  counter         1   24[BANK0 ] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  2   19[BANK0 ] int 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       4       0       0       0
  2898 ;;      Locals:         0       4       0       0       0
  2899 ;;      Temps:          0       1       0       0       0
  2900 ;;      Totals:         0       9       0       0       0
  2901 ;;Total ram usage:        9 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    4
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_LCDWriteInt
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function ___awdiv
  2913  0678                     ___awdiv:	
  2914                           
  2915                           ;incstack = 0
  2916                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2917  0678  1283               	bcf	3,5	;RP0=0, select bank0
  2918  0679  1303               	bcf	3,6	;RP1=0, select bank0
  2919  067A  01B9               	clrf	___awdiv@sign
  2920  067B  1FB4               	btfss	___awdiv@divisor+1,7
  2921  067C  2E84               	goto	l1547
  2922  067D  09B3               	comf	___awdiv@divisor,f
  2923  067E  09B4               	comf	___awdiv@divisor+1,f
  2924  067F  0AB3               	incf	___awdiv@divisor,f
  2925  0680  1903               	skipnz
  2926  0681  0AB4               	incf	___awdiv@divisor+1,f
  2927  0682  01B9               	clrf	___awdiv@sign
  2928  0683  0AB9               	incf	___awdiv@sign,f
  2929  0684                     l1547:	
  2930  0684  1FB6               	btfss	___awdiv@dividend+1,7
  2931  0685  2E8F               	goto	l1553
  2932  0686  09B5               	comf	___awdiv@dividend,f
  2933  0687  09B6               	comf	___awdiv@dividend+1,f
  2934  0688  0AB5               	incf	___awdiv@dividend,f
  2935  0689  1903               	skipnz
  2936  068A  0AB6               	incf	___awdiv@dividend+1,f
  2937  068B  3001               	movlw	1
  2938  068C  00B7               	movwf	??___awdiv
  2939  068D  0837               	movf	??___awdiv,w
  2940  068E  06B9               	xorwf	___awdiv@sign,f
  2941  068F                     l1553:	
  2942  068F  01BA               	clrf	___awdiv@quotient
  2943  0690  01BB               	clrf	___awdiv@quotient+1
  2944  0691  0833               	movf	___awdiv@divisor,w
  2945  0692  0434               	iorwf	___awdiv@divisor+1,w
  2946  0693  1903               	btfsc	3,2
  2947  0694  2EC6               	goto	l1575
  2948  0695  01B8               	clrf	___awdiv@counter
  2949  0696  0AB8               	incf	___awdiv@counter,f
  2950  0697                     l1563:	
  2951  0697  1BB4               	btfsc	___awdiv@divisor+1,7
  2952  0698  2EA5               	goto	l1565
  2953  0699  3001               	movlw	1
  2954  069A                     u1485:	
  2955  069A  1003               	clrc
  2956  069B  0DB3               	rlf	___awdiv@divisor,f
  2957  069C  0DB4               	rlf	___awdiv@divisor+1,f
  2958  069D  3EFF               	addlw	-1
  2959  069E  1D03               	skipz
  2960  069F  2E9A               	goto	u1485
  2961  06A0  3001               	movlw	1
  2962  06A1  00B7               	movwf	??___awdiv
  2963  06A2  0837               	movf	??___awdiv,w
  2964  06A3  07B8               	addwf	___awdiv@counter,f
  2965  06A4  2E97               	goto	l1563
  2966  06A5                     l1565:	
  2967  06A5  3001               	movlw	1
  2968  06A6                     u1505:	
  2969  06A6  1003               	clrc
  2970  06A7  0DBA               	rlf	___awdiv@quotient,f
  2971  06A8  0DBB               	rlf	___awdiv@quotient+1,f
  2972  06A9  3EFF               	addlw	-1
  2973  06AA  1D03               	skipz
  2974  06AB  2EA6               	goto	u1505
  2975  06AC  0834               	movf	___awdiv@divisor+1,w
  2976  06AD  0236               	subwf	___awdiv@dividend+1,w
  2977  06AE  1D03               	skipz
  2978  06AF  2EB2               	goto	u1515
  2979  06B0  0833               	movf	___awdiv@divisor,w
  2980  06B1  0235               	subwf	___awdiv@dividend,w
  2981  06B2                     u1515:	
  2982  06B2  1C03               	skipc
  2983  06B3  2EBB               	goto	l1571
  2984  06B4  0833               	movf	___awdiv@divisor,w
  2985  06B5  02B5               	subwf	___awdiv@dividend,f
  2986  06B6  0834               	movf	___awdiv@divisor+1,w
  2987  06B7  1C03               	skipc
  2988  06B8  03B6               	decf	___awdiv@dividend+1,f
  2989  06B9  02B6               	subwf	___awdiv@dividend+1,f
  2990  06BA  143A               	bsf	___awdiv@quotient,0
  2991  06BB                     l1571:	
  2992  06BB  3001               	movlw	1
  2993  06BC                     u1525:	
  2994  06BC  1003               	clrc
  2995  06BD  0CB4               	rrf	___awdiv@divisor+1,f
  2996  06BE  0CB3               	rrf	___awdiv@divisor,f
  2997  06BF  3EFF               	addlw	-1
  2998  06C0  1D03               	skipz
  2999  06C1  2EBC               	goto	u1525
  3000  06C2  3001               	movlw	1
  3001  06C3  02B8               	subwf	___awdiv@counter,f
  3002  06C4  1D03               	btfss	3,2
  3003  06C5  2EA5               	goto	l1565
  3004  06C6                     l1575:	
  3005  06C6  0839               	movf	___awdiv@sign,w
  3006  06C7  1903               	btfsc	3,2
  3007  06C8  2ECE               	goto	l1579
  3008  06C9  09BA               	comf	___awdiv@quotient,f
  3009  06CA  09BB               	comf	___awdiv@quotient+1,f
  3010  06CB  0ABA               	incf	___awdiv@quotient,f
  3011  06CC  1903               	skipnz
  3012  06CD  0ABB               	incf	___awdiv@quotient+1,f
  3013  06CE                     l1579:	
  3014  06CE  083B               	movf	___awdiv@quotient+1,w
  3015  06CF  00B4               	movwf	?___awdiv+1
  3016  06D0  083A               	movf	___awdiv@quotient,w
  3017  06D1  00B3               	movwf	?___awdiv
  3018  06D2  0008               	return
  3019  06D3                     __end_of___awdiv:	
  3020                           
  3021                           	psect	text12
  3022  0542                     __ptext12:	
  3023 ;; *************** function _LCDInit *****************
  3024 ;; Defined at:
  3025 ;;		line 207 in file "lcd_hd44780_pic16.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  style           1    wreg     unsigned char 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  style           1   33[BANK0 ] unsigned char 
  3030 ;;  __i             1   34[BANK0 ] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         0       0       0       0       0
  3041 ;;      Locals:         0       2       0       0       0
  3042 ;;      Temps:          0       2       0       0       0
  3043 ;;      Totals:         0       4       0       0       0
  3044 ;;Total ram usage:        4 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    6
  3047 ;; This function calls:
  3048 ;;		_LCDBusyLoop
  3049 ;;		_LCDByte
  3050 ;; This function is called by:
  3051 ;;		_main
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           
  3056                           ;psect for function _LCDInit
  3057  0542                     _LCDInit:	
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3061                           ;LCDInit@style stored from wreg
  3062  0542  1283               	bcf	3,5	;RP0=0, select bank0
  3063  0543  1303               	bcf	3,6	;RP1=0, select bank0
  3064  0544  00C1               	movwf	LCDInit@style
  3065                           
  3066                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  3067  0545  30C3               	movlw	195
  3068  0546  00C0               	movwf	??_LCDInit+1
  3069  0547  30CD               	movlw	205
  3070  0548  00BF               	movwf	??_LCDInit
  3071  0549                     u2827:	
  3072  0549  0BBF               	decfsz	??_LCDInit,f
  3073  054A  2D49               	goto	u2827
  3074  054B  0BC0               	decfsz	??_LCDInit+1,f
  3075  054C  2D49               	goto	u2827
  3076                           
  3077                           ;lcd_hd44780_pic16.c: 212: TRISC&=(~(0x0F<<4));
  3078  054D  300F               	movlw	15
  3079  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3080  054F  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0550  00BF               	movwf	??_LCDInit
  3082  0551  083F               	movf	??_LCDInit,w
  3083  0552  1683               	bsf	3,5	;RP0=1, select bank1
  3084  0553  1303               	bcf	3,6	;RP1=0, select bank1
  3085  0554  0587               	andwf	7,f	;volatile
  3086                           
  3087                           ;lcd_hd44780_pic16.c: 214: TRISCbits.TRISC3=0;
  3088  0555  1187               	bcf	7,3	;volatile
  3089                           
  3090                           ;lcd_hd44780_pic16.c: 215: TRISCbits.TRISC1=0;
  3091  0556  1087               	bcf	7,1	;volatile
  3092                           
  3093                           ;lcd_hd44780_pic16.c: 216: TRISCbits.TRISC2=0;
  3094  0557  1107               	bcf	7,2	;volatile
  3095                           
  3096                           ;lcd_hd44780_pic16.c: 218: PORTC&=(~(0x0F<<4));
  3097  0558  300F               	movlw	15
  3098  0559  1283               	bcf	3,5	;RP0=0, select bank0
  3099  055A  1303               	bcf	3,6	;RP1=0, select bank0
  3100  055B  00BF               	movwf	??_LCDInit
  3101  055C  083F               	movf	??_LCDInit,w
  3102  055D  0587               	andwf	7,f	;volatile
  3103                           
  3104                           ;lcd_hd44780_pic16.c: 220: (RC3=0);
  3105  055E  1187               	bcf	7,3	;volatile
  3106                           
  3107                           ;lcd_hd44780_pic16.c: 221: (RC2=0);
  3108  055F  1107               	bcf	7,2	;volatile
  3109                           
  3110                           ;lcd_hd44780_pic16.c: 222: (RC1=0);
  3111  0560  1087               	bcf	7,1	;volatile
  3112                           
  3113                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3114  0561  2D62               	nop2	;2 cycle nop
  3115                           
  3116                           ;lcd_hd44780_pic16.c: 227: (RC3=1);
  3117  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3118  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0564  1587               	bsf	7,3	;volatile
  3120                           
  3121                           ;lcd_hd44780_pic16.c: 228: PORTC|=((0b00000010)<<4);
  3122  0565  1687               	bsf	7,5	;volatile
  3123                           
  3124                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3125  0566  2D67               	nop2	;2 cycle nop
  3126  0567  2D68               	nop2	;2 cycle nop
  3127  0568  0000               	nop
  3128                           
  3129                           ;lcd_hd44780_pic16.c: 230: (RC3=0);
  3130  0569  1283               	bcf	3,5	;RP0=0, select bank0
  3131  056A  1303               	bcf	3,6	;RP1=0, select bank0
  3132  056B  1187               	bcf	7,3	;volatile
  3133                           
  3134                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3135  056C  2D6D               	nop2	;2 cycle nop
  3136  056D  2D6E               	nop2	;2 cycle nop
  3137  056E  0000               	nop
  3138                           
  3139                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  3140  056F  120A  118A  25AA  120A  118A  	fcall	_LCDBusyLoop
  3141                           
  3142                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  3143  0574  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0575  1303               	bcf	3,6	;RP1=0, select bank0
  3145  0576  01B8               	clrf	LCDByte@isdata
  3146  0577  3028               	movlw	40
  3147  0578  120A  118A  2785  120A  118A  	fcall	_LCDByte
  3148                           
  3149                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  3150  057D  1283               	bcf	3,5	;RP0=0, select bank0
  3151  057E  1303               	bcf	3,6	;RP1=0, select bank0
  3152  057F  01B8               	clrf	LCDByte@isdata
  3153  0580  0841               	movf	LCDInit@style,w
  3154  0581  380C               	iorlw	12
  3155  0582  120A  118A  2785  120A  118A  	fcall	_LCDByte
  3156                           
  3157                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  3158  0587  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0588  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0589  01B8               	clrf	LCDByte@isdata
  3161  058A  3040               	movlw	64
  3162  058B  120A  118A  2785  120A  118A  	fcall	_LCDByte
  3163                           
  3164                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  3165                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  3166  0590  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0591  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0592  01C2               	clrf	LCDInit@__i
  3169  0593                     L3:	
  3170  0593  3008               	movlw	8
  3171  0594  0242               	subwf	LCDInit@__i,w
  3172  0595  1803               	btfsc	3,0
  3173  0596  0008               	return
  3174                           
  3175                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  3176  0597  01B8               	clrf	LCDByte@isdata
  3177  0598  0AB8               	incf	LCDByte@isdata,f
  3178  0599  0842               	movf	LCDInit@__i,w
  3179  059A  3E4D               	addlw	(low (___cgram| 0))& (0+255)
  3180  059B  0084               	movwf	4
  3181  059C  1383               	bcf	3,7	;select IRP bank0
  3182  059D  0800               	movf	0,w
  3183  059E  120A  118A  2785  120A  118A  	fcall	_LCDByte
  3184  05A3  3001               	movlw	1
  3185  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  3186  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  3187  05A6  00BF               	movwf	??_LCDInit
  3188  05A7  083F               	movf	??_LCDInit,w
  3189  05A8  07C2               	addwf	LCDInit@__i,f
  3190  05A9  2D93               	goto	L3
  3191  05AA                     __end_of_LCDInit:	
  3192                           
  3193                           	psect	text13
  3194  0E54                     __ptext13:	
  3195 ;; *************** function _LCDGotoXY *****************
  3196 ;; Defined at:
  3197 ;;		line 351 in file "lcd_hd44780_pic16.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  x               1    wreg     unsigned char 
  3200 ;;  y               1   31[BANK0 ] unsigned char 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  x               1   33[BANK0 ] unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3212 ;;      Params:         0       1       0       0       0
  3213 ;;      Locals:         0       1       0       0       0
  3214 ;;      Temps:          0       1       0       0       0
  3215 ;;      Totals:         0       3       0       0       0
  3216 ;;Total ram usage:        3 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    6
  3219 ;; This function calls:
  3220 ;;		_LCDByte
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           
  3227                           ;psect for function _LCDGotoXY
  3228  0E54                     _LCDGotoXY:	
  3229                           
  3230                           ;incstack = 0
  3231                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3232                           ;LCDGotoXY@x stored from wreg
  3233  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3234  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  3235  0E56  00C1               	movwf	LCDGotoXY@x
  3236                           
  3237                           ;lcd_hd44780_pic16.c: 353: if(x>=20) return;
  3238  0E57  3014               	movlw	20
  3239  0E58  0241               	subwf	LCDGotoXY@x,w
  3240  0E59  1803               	btfsc	3,0
  3241  0E5A  0008               	return
  3242  0E5B  2E65               	goto	l1849
  3243  0E5C                     l146:	
  3244                           ;lcd_hd44780_pic16.c: 361: case 1:
  3245                           
  3246                           ;lcd_hd44780_pic16.c: 360: break;
  3247                           
  3248                           ;lcd_hd44780_pic16.c: 358: {
  3249                           ;lcd_hd44780_pic16.c: 359: case 0:
  3250                           
  3251                           ;lcd_hd44780_pic16.c: 357: switch(y)
  3252                           
  3253                           
  3254                           ;lcd_hd44780_pic16.c: 362: x|=0b01000000;
  3255  0E5C  1741               	bsf	LCDGotoXY@x,6
  3256                           
  3257                           ;lcd_hd44780_pic16.c: 363: break;
  3258  0E5D  2E73               	goto	l145
  3259  0E5E                     l1843:	
  3260                           ;lcd_hd44780_pic16.c: 364: case 2:
  3261                           
  3262                           
  3263                           ;lcd_hd44780_pic16.c: 365: x+=0x14;
  3264  0E5E  3014               	movlw	20
  3265  0E5F  2E61               	goto	L4
  3266  0E60                     l1845:	
  3267                           ;lcd_hd44780_pic16.c: 367: case 3:
  3268                           
  3269                           ;lcd_hd44780_pic16.c: 366: break;
  3270                           
  3271                           
  3272                           ;lcd_hd44780_pic16.c: 368: x+=0x54;
  3273  0E60  3054               	movlw	84
  3274  0E61                     L4:	
  3275  0E61  00C0               	movwf	??_LCDGotoXY
  3276  0E62  0840               	movf	??_LCDGotoXY,w
  3277  0E63  07C1               	addwf	LCDGotoXY@x,f
  3278                           
  3279                           ;lcd_hd44780_pic16.c: 370: }
  3280                           
  3281                           ;lcd_hd44780_pic16.c: 369: break;
  3282  0E64  2E73               	goto	l145
  3283  0E65                     l1849:	
  3284  0E65  083F               	movf	LCDGotoXY@y,w
  3285                           
  3286                           ; Switch size 1, requested type "space"
  3287                           ; Number of cases is 4, Range of values is 0 to 3
  3288                           ; switch strategies available:
  3289                           ; Name         Instructions Cycles
  3290                           ; simple_byte           13     7 (average)
  3291                           ; direct_byte           20     8 (fixed)
  3292                           ; jumptable            260     6 (fixed)
  3293                           ;	Chosen strategy is simple_byte
  3294  0E66  3A00               	xorlw	0	; case 0
  3295  0E67  1903               	skipnz
  3296  0E68  2E73               	goto	l145
  3297  0E69  3A01               	xorlw	1	; case 1
  3298  0E6A  1903               	skipnz
  3299  0E6B  2E5C               	goto	l146
  3300  0E6C  3A03               	xorlw	3	; case 2
  3301  0E6D  1903               	skipnz
  3302  0E6E  2E5E               	goto	l1843
  3303  0E6F  3A01               	xorlw	1	; case 3
  3304  0E70  1903               	skipnz
  3305  0E71  2E60               	goto	l1845
  3306  0E72  2E73               	goto	l145
  3307  0E73                     l145:	
  3308                           
  3309                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  3310  0E73  17C1               	bsf	LCDGotoXY@x,7
  3311                           
  3312                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  3313  0E74  01B8               	clrf	LCDByte@isdata
  3314  0E75  0841               	movf	LCDGotoXY@x,w
  3315  0E76  120A  118A  2785   	fcall	_LCDByte
  3316  0E79  0008               	return
  3317  0E7A                     __end_of_LCDGotoXY:	
  3318                           
  3319                           	psect	text14
  3320  0785                     __ptext14:	
  3321 ;; *************** function _LCDByte *****************
  3322 ;; Defined at:
  3323 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  c               1    wreg     unsigned char 
  3326 ;;  isdata          1   24[BANK0 ] unsigned char 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  c               1   29[BANK0 ] unsigned char 
  3329 ;;  temp            1   30[BANK0 ] unsigned char 
  3330 ;;  ln              1   28[BANK0 ] unsigned char 
  3331 ;;  hn              1   27[BANK0 ] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       1       0       0       0
  3342 ;;      Locals:         0       4       0       0       0
  3343 ;;      Temps:          0       2       0       0       0
  3344 ;;      Totals:         0       7       0       0       0
  3345 ;;Total ram usage:        7 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    5
  3348 ;; This function calls:
  3349 ;;		_LCDBusyLoop
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;;		_LCDInit
  3353 ;;		_LCDWriteString
  3354 ;;		_LCDWriteInt
  3355 ;;		_LCDGotoXY
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           
  3360                           ;psect for function _LCDByte
  3361  0785                     _LCDByte:	
  3362                           
  3363                           ;incstack = 0
  3364                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3365                           ;LCDByte@c stored from wreg
  3366  0785  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0786  1303               	bcf	3,6	;RP1=0, select bank0
  3368  0787  00BD               	movwf	LCDByte@c
  3369                           
  3370                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3371                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3372                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3373  0788  083D               	movf	LCDByte@c,w
  3374  0789  00B9               	movwf	??_LCDByte
  3375  078A  3004               	movlw	4
  3376  078B                     u1415:	
  3377  078B  1003               	clrc
  3378  078C  0CB9               	rrf	??_LCDByte,f
  3379  078D  3EFF               	addlw	-1
  3380  078E  1D03               	skipz
  3381  078F  2F8B               	goto	u1415
  3382  0790  0839               	movf	??_LCDByte,w
  3383  0791  00BA               	movwf	??_LCDByte+1
  3384  0792  083A               	movf	??_LCDByte+1,w
  3385  0793  00BB               	movwf	LCDByte@hn
  3386                           
  3387                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3388  0794  083D               	movf	LCDByte@c,w
  3389  0795  390F               	andlw	15
  3390  0796  00B9               	movwf	??_LCDByte
  3391  0797  0839               	movf	??_LCDByte,w
  3392  0798  00BC               	movwf	LCDByte@ln
  3393                           
  3394                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3395  0799  0838               	movf	LCDByte@isdata,w
  3396  079A  1D03               	btfss	3,2
  3397  079B  2F9E               	goto	l100
  3398                           
  3399                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  3400  079C  1087               	bcf	7,1	;volatile
  3401  079D  2F9F               	goto	l101
  3402  079E                     l100:	
  3403                           
  3404                           ;lcd_hd44780_pic16.c: 97: else
  3405                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  3406  079E  1487               	bsf	7,1	;volatile
  3407  079F                     l101:	
  3408                           
  3409                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3410  079F  2FA0               	nop2	;2 cycle nop
  3411                           
  3412                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  3413  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  3414  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  3415  07A2  1587               	bsf	7,3	;volatile
  3416                           
  3417                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  3418  07A3  083B               	movf	LCDByte@hn,w
  3419  07A4  00B9               	movwf	??_LCDByte
  3420  07A5  3004               	movlw	4
  3421  07A6                     u1435:	
  3422  07A6  1003               	clrc
  3423  07A7  0DB9               	rlf	??_LCDByte,f
  3424  07A8  3EFF               	addlw	-1
  3425  07A9  1D03               	skipz
  3426  07AA  2FA6               	goto	u1435
  3427  07AB  0807               	movf	7,w	;volatile
  3428  07AC  390F               	andlw	15
  3429  07AD  0439               	iorwf	??_LCDByte,w
  3430  07AE  00BA               	movwf	??_LCDByte+1
  3431  07AF  083A               	movf	??_LCDByte+1,w
  3432  07B0  00BE               	movwf	LCDByte@temp
  3433                           
  3434                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  3435  07B1  083E               	movf	LCDByte@temp,w
  3436  07B2  0087               	movwf	7	;volatile
  3437                           
  3438                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3439  07B3  2FB4               	nop2	;2 cycle nop
  3440  07B4  2FB5               	nop2	;2 cycle nop
  3441  07B5  0000               	nop
  3442                           
  3443                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  3444  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  3445  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  3446  07B8  1187               	bcf	7,3	;volatile
  3447                           
  3448                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3449  07B9  2FBA               	nop2	;2 cycle nop
  3450  07BA  2FBB               	nop2	;2 cycle nop
  3451  07BB  0000               	nop
  3452                           
  3453                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  3454  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  3455  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  3456  07BE  1587               	bsf	7,3	;volatile
  3457                           
  3458                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  3459  07BF  083C               	movf	LCDByte@ln,w
  3460  07C0  00B9               	movwf	??_LCDByte
  3461  07C1  3004               	movlw	4
  3462  07C2                     u1445:	
  3463  07C2  1003               	clrc
  3464  07C3  0DB9               	rlf	??_LCDByte,f
  3465  07C4  3EFF               	addlw	-1
  3466  07C5  1D03               	skipz
  3467  07C6  2FC2               	goto	u1445
  3468  07C7  0807               	movf	7,w	;volatile
  3469  07C8  390F               	andlw	15
  3470  07C9  0439               	iorwf	??_LCDByte,w
  3471  07CA  00BA               	movwf	??_LCDByte+1
  3472  07CB  083A               	movf	??_LCDByte+1,w
  3473  07CC  00BE               	movwf	LCDByte@temp
  3474                           
  3475                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  3476  07CD  083E               	movf	LCDByte@temp,w
  3477  07CE  0087               	movwf	7	;volatile
  3478                           
  3479                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3480  07CF  2FD0               	nop2	;2 cycle nop
  3481  07D0  2FD1               	nop2	;2 cycle nop
  3482  07D1  0000               	nop
  3483                           
  3484                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  3485  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  3486  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  3487  07D4  1187               	bcf	7,3	;volatile
  3488                           
  3489                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3490  07D5  2FD6               	nop2	;2 cycle nop
  3491  07D6  2FD7               	nop2	;2 cycle nop
  3492  07D7  0000               	nop
  3493                           
  3494                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  3495  07D8  120A  118A  25AA   	fcall	_LCDBusyLoop
  3496  07DB  0008               	return
  3497  07DC                     __end_of_LCDByte:	
  3498                           
  3499                           	psect	text15
  3500  05AA                     __ptext15:	
  3501 ;; *************** function _LCDBusyLoop *****************
  3502 ;; Defined at:
  3503 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  status          1   23[BANK0 ] unsigned char 
  3508 ;;  temp            1   22[BANK0 ] unsigned char 
  3509 ;;  busy            1   21[BANK0 ] unsigned char 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3519 ;;      Params:         0       0       0       0       0
  3520 ;;      Locals:         0       3       0       0       0
  3521 ;;      Temps:          0       2       0       0       0
  3522 ;;      Totals:         0       5       0       0       0
  3523 ;;Total ram usage:        5 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    4
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_LCDByte
  3530 ;;		_LCDInit
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           
  3535                           ;psect for function _LCDBusyLoop
  3536  05AA                     _LCDBusyLoop:	
  3537                           
  3538                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  3539                           
  3540                           ;incstack = 0
  3541                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  3542  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3543  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  3544  05AC  01B7               	clrf	LCDBusyLoop@status
  3545                           
  3546                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  3547  05AD  30F0               	movlw	240
  3548  05AE  00B3               	movwf	??_LCDBusyLoop
  3549  05AF  0833               	movf	??_LCDBusyLoop,w
  3550  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  3551  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  3552  05B2  0487               	iorwf	7,f	;volatile
  3553                           
  3554                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  3555  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  3556  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  3557  05B5  1507               	bsf	7,2	;volatile
  3558                           
  3559                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  3560  05B6  1087               	bcf	7,1	;volatile
  3561                           
  3562                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3563  05B7  2DB8               	nop2	;2 cycle nop
  3564  05B8                     l1385:	
  3565                           ;lcd_hd44780_pic16.c: 153: do
  3566                           
  3567                           
  3568                           ;lcd_hd44780_pic16.c: 154: {
  3569                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  3570  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3571  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3572  05BA  1587               	bsf	7,3	;volatile
  3573                           
  3574                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3575  05BB  2DBC               	nop2	;2 cycle nop
  3576                           
  3577                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  3578  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3579  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3580  05BE  0807               	movf	7,w	;volatile
  3581  05BF  00B3               	movwf	??_LCDBusyLoop
  3582  05C0  3004               	movlw	4
  3583  05C1                     u1205:	
  3584  05C1  1003               	clrc
  3585  05C2  0CB3               	rrf	??_LCDBusyLoop,f
  3586  05C3  3EFF               	addlw	-1
  3587  05C4  1D03               	skipz
  3588  05C5  2DC1               	goto	u1205
  3589  05C6  0833               	movf	??_LCDBusyLoop,w
  3590  05C7  00B4               	movwf	??_LCDBusyLoop+1
  3591  05C8  0834               	movf	??_LCDBusyLoop+1,w
  3592  05C9  00B7               	movwf	LCDBusyLoop@status
  3593                           
  3594                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  3595  05CA  0837               	movf	LCDBusyLoop@status,w
  3596  05CB  00B3               	movwf	??_LCDBusyLoop
  3597  05CC  3003               	movlw	3
  3598  05CD                     u1215:	
  3599  05CD  1003               	clrc
  3600  05CE  0DB3               	rlf	??_LCDBusyLoop,f
  3601  05CF  3EFF               	addlw	-1
  3602  05D0  1D03               	skipz
  3603  05D1  2DCD               	goto	u1215
  3604  05D2  1003               	clrc
  3605  05D3  0D33               	rlf	??_LCDBusyLoop,w
  3606  05D4  00B4               	movwf	??_LCDBusyLoop+1
  3607  05D5  0834               	movf	??_LCDBusyLoop+1,w
  3608  05D6  00B7               	movwf	LCDBusyLoop@status
  3609                           
  3610                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3611  05D7  2DD8               	nop2	;2 cycle nop
  3612                           
  3613                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  3614  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3615  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3616  05DA  1187               	bcf	7,3	;volatile
  3617                           
  3618                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3619  05DB  2DDC               	nop2	;2 cycle nop
  3620  05DC  2DDD               	nop2	;2 cycle nop
  3621  05DD  0000               	nop
  3622                           
  3623                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  3624  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3625  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3626  05E0  1587               	bsf	7,3	;volatile
  3627                           
  3628                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3629  05E1  2DE2               	nop2	;2 cycle nop
  3630                           
  3631                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  3632  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3633  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3634  05E4  0807               	movf	7,w	;volatile
  3635  05E5  00B3               	movwf	??_LCDBusyLoop
  3636  05E6  3004               	movlw	4
  3637  05E7                     u1225:	
  3638  05E7  1003               	clrc
  3639  05E8  0CB3               	rrf	??_LCDBusyLoop,f
  3640  05E9  3EFF               	addlw	-1
  3641  05EA  1D03               	skipz
  3642  05EB  2DE7               	goto	u1225
  3643  05EC  0833               	movf	??_LCDBusyLoop,w
  3644  05ED  00B4               	movwf	??_LCDBusyLoop+1
  3645  05EE  0834               	movf	??_LCDBusyLoop+1,w
  3646  05EF  00B6               	movwf	LCDBusyLoop@temp
  3647                           
  3648                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  3649  05F0  300F               	movlw	15
  3650  05F1  00B3               	movwf	??_LCDBusyLoop
  3651  05F2  0833               	movf	??_LCDBusyLoop,w
  3652  05F3  05B6               	andwf	LCDBusyLoop@temp,f
  3653                           
  3654                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  3655  05F4  0837               	movf	LCDBusyLoop@status,w
  3656  05F5  0436               	iorwf	LCDBusyLoop@temp,w
  3657  05F6  00B3               	movwf	??_LCDBusyLoop
  3658  05F7  0833               	movf	??_LCDBusyLoop,w
  3659  05F8  00B7               	movwf	LCDBusyLoop@status
  3660                           
  3661                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  3662  05F9  0837               	movf	LCDBusyLoop@status,w
  3663  05FA  3980               	andlw	128
  3664  05FB  00B3               	movwf	??_LCDBusyLoop
  3665  05FC  0833               	movf	??_LCDBusyLoop,w
  3666  05FD  00B5               	movwf	LCDBusyLoop@busy
  3667                           
  3668                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  3669  05FE  2DFF               	nop2	;2 cycle nop
  3670                           
  3671                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  3672  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0600  1303               	bcf	3,6	;RP1=0, select bank0
  3674  0601  1187               	bcf	7,3	;volatile
  3675                           
  3676                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3677  0602  2E03               	nop2	;2 cycle nop
  3678  0603  2E04               	nop2	;2 cycle nop
  3679  0604  0000               	nop
  3680                           
  3681                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  3682  0605  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0606  1303               	bcf	3,6	;RP1=0, select bank0
  3684  0607  0835               	movf	LCDBusyLoop@busy,w
  3685  0608  1D03               	btfss	3,2
  3686  0609  2DB8               	goto	l1385
  3687                           
  3688                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  3689  060A  1107               	bcf	7,2	;volatile
  3690                           
  3691                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  3692  060B  300F               	movlw	15
  3693  060C  00B3               	movwf	??_LCDBusyLoop
  3694  060D  0833               	movf	??_LCDBusyLoop,w
  3695  060E  1683               	bsf	3,5	;RP0=1, select bank1
  3696  060F  1303               	bcf	3,6	;RP1=0, select bank1
  3697  0610  0587               	andwf	7,f	;volatile
  3698  0611  0008               	return
  3699  0612                     __end_of_LCDBusyLoop:	
  3700                           
  3701                           	psect	text16
  3702  0E02                     __ptext16:	
  3703 ;; *************** function _ADCInit *****************
  3704 ;; Defined at:
  3705 ;;		line 7 in file "adc_pic16.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3719 ;;      Params:         0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0
  3722 ;;      Totals:         0       0       0       0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    4
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _ADCInit
  3735  0E02                     _ADCInit:	
  3736                           
  3737                           ;adc_pic16.c: 10: TRISBbits.TRISB5 = 1;
  3738                           
  3739                           ;incstack = 0
  3740                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  3741  0E02  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0E03  1303               	bcf	3,6	;RP1=0, select bank1
  3743  0E04  1686               	bsf	6,5	;volatile
  3744                           
  3745                           ;adc_pic16.c: 11: ANSELHbits.ANS13 = 1;
  3746  0E05  1683               	bsf	3,5	;RP0=1, select bank3
  3747  0E06  1703               	bsf	3,6	;RP1=1, select bank3
  3748  0E07  1689               	bsf	9,5	;volatile
  3749                           
  3750                           ;adc_pic16.c: 17: ADCON1bits.VCFG0 = 0;
  3751  0E08  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0E09  1303               	bcf	3,6	;RP1=0, select bank1
  3753  0E0A  121F               	bcf	31,4	;volatile
  3754                           
  3755                           ;adc_pic16.c: 19: ADCON0bits.ADCS = 0b11;
  3756  0E0B  30C0               	movlw	192
  3757  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  3759  0E0E  049F               	iorwf	31,f	;volatile
  3760                           
  3761                           ;adc_pic16.c: 22: ADCON1bits.ADFM = 1;
  3762  0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  3763  0E10  1303               	bcf	3,6	;RP1=0, select bank1
  3764  0E11  179F               	bsf	31,7	;volatile
  3765                           
  3766                           ;adc_pic16.c: 24: ADCON0bits.ADON = 1;
  3767  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  3769  0E14  141F               	bsf	31,0	;volatile
  3770  0E15  0008               	return
  3771  0E16                     __end_of_ADCInit:	
  3772                           
  3773                           	psect	text17
  3774  04D4                     __ptext17:	
  3775 ;; *************** function _ISR *****************
  3776 ;; Defined at:
  3777 ;;		line 99 in file "do_am.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;		None
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         0       0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0
  3793 ;;      Temps:          0       7       0       0       0
  3794 ;;      Totals:         0       7       0       0       0
  3795 ;;Total ram usage:        7 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    3
  3798 ;; This function calls:
  3799 ;;		i1_LCDByte
  3800 ;;		i1_LCDGotoXY
  3801 ;;		i1_LCDWriteInt
  3802 ;;		i1_LCDWriteString
  3803 ;; This function is called by:
  3804 ;;		Interrupt level 1
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           
  3809                           ;psect for function _ISR
  3810  04D4                     _ISR:	
  3811                           
  3812                           ;do_am.c: 101: if(INTCONbits.RBIF == 1)
  3813  04D4  1C0B               	btfss	11,0	;volatile
  3814  04D5  2D32               	goto	i1l2075
  3815                           
  3816                           ;do_am.c: 102: {
  3817                           ;do_am.c: 104: {
  3818                           ;do_am.c: 106: (LCDByte(0b00000001,0));
  3819  04D6  01F5               	clrf	i1LCDByte@isdata
  3820  04D7  3001               	movlw	1
  3821  04D8  120A  118A  272C  120A  118A  	fcall	i1_LCDByte
  3822                           
  3823                           ;do_am.c: 108: { LCDGotoXY(0,0); LCDWriteString("Thermometer set:");};
  3824  04DD  01FC               	clrf	i1LCDGotoXY@y
  3825  04DE  3000               	movlw	0
  3826  04DF  120A  158A  262E  120A  118A  	fcall	i1_LCDGotoXY
  3827  04E4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3828  04E5  120A  158A  275E  120A  118A  	fcall	i1_LCDWriteString
  3829                           
  3830                           ;do_am.c: 110: tuneTemp++;
  3831  04EA  3001               	movlw	1
  3832  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  3833  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  3834  04ED  07DA               	addwf	_tuneTemp,f
  3835  04EE  1803               	skipnc
  3836  04EF  0ADB               	incf	_tuneTemp+1,f
  3837  04F0  3000               	movlw	0
  3838  04F1  07DB               	addwf	_tuneTemp+1,f
  3839                           
  3840                           ;do_am.c: 111: if(tuneTemp > 150)
  3841  04F2  085B               	movf	_tuneTemp+1,w
  3842  04F3  3A80               	xorlw	128
  3843  04F4  00FF               	movwf	127
  3844  04F5  3080               	movlw	128
  3845  04F6  027F               	subwf	127,w
  3846  04F7  1D03               	skipz
  3847  04F8  2CFB               	goto	u234_25
  3848  04F9  3097               	movlw	151
  3849  04FA  025A               	subwf	_tuneTemp,w
  3850  04FB                     u234_25:	
  3851  04FB  1C03               	skipc
  3852  04FC  2D01               	goto	i1l2063
  3853                           
  3854                           ;do_am.c: 112: {
  3855                           ;do_am.c: 113: tuneTemp = 0;
  3856  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  3857  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  3858  04FF  01DA               	clrf	_tuneTemp
  3859  0500  01DB               	clrf	_tuneTemp+1
  3860  0501                     i1l2063:	
  3861                           
  3862                           ;do_am.c: 114: }
  3863                           ;do_am.c: 117: { LCDGotoXY(0,1); LCDWriteInt(tuneTemp,3);};
  3864  0501  01FC               	clrf	i1LCDGotoXY@y
  3865  0502  0AFC               	incf	i1LCDGotoXY@y,f
  3866  0503  3000               	movlw	0
  3867  0504  120A  158A  262E  120A  118A  	fcall	i1_LCDGotoXY
  3868  0509  1283               	bcf	3,5	;RP0=0, select bank0
  3869  050A  1303               	bcf	3,6	;RP1=0, select bank0
  3870  050B  085B               	movf	_tuneTemp+1,w
  3871  050C  00A1               	movwf	i1LCDWriteInt@val+1
  3872  050D  085A               	movf	_tuneTemp,w
  3873  050E  00A0               	movwf	i1LCDWriteInt@val
  3874  050F  3003               	movlw	3
  3875  0510  00AC               	movwf	??_ISR
  3876  0511  082C               	movf	??_ISR,w
  3877  0512  00A2               	movwf	i1LCDWriteInt@field_length
  3878  0513  120A  118A  23CB  120A  118A  	fcall	i1_LCDWriteInt
  3879                           
  3880                           ;do_am.c: 120: LCDWriteString("%0C");
  3881  0518  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3882  0519  120A  158A  275E  120A  118A  	fcall	i1_LCDWriteString
  3883                           
  3884                           ;do_am.c: 122: _delay((unsigned long)((500)*(20000000/4000.0)));
  3885  051E  300D               	movlw	13
  3886  051F  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0520  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0521  00AE               	movwf	??_ISR+2
  3889  0522  30AF               	movlw	175
  3890  0523  00AD               	movwf	??_ISR+1
  3891  0524  30C1               	movlw	193
  3892  0525  00AC               	movwf	??_ISR
  3893  0526                     u283_27:	
  3894  0526  0BAC               	decfsz	??_ISR,f
  3895  0527  2D26               	goto	u283_27
  3896  0528  0BAD               	decfsz	??_ISR+1,f
  3897  0529  2D26               	goto	u283_27
  3898  052A  0BAE               	decfsz	??_ISR+2,f
  3899  052B  2D26               	goto	u283_27
  3900  052C  0000               	nop
  3901                           
  3902                           ;do_am.c: 123: tuneTempDir = 1;
  3903  052D  1683               	bsf	3,5	;RP0=1, select bank1
  3904  052E  1303               	bcf	3,6	;RP1=0, select bank1
  3905  052F  01B9               	clrf	_tuneTempDir^(0+128)
  3906  0530  0AB9               	incf	_tuneTempDir^(0+128),f
  3907                           
  3908                           ;do_am.c: 125: }
  3909                           ;do_am.c: 126: INTCONbits.RBIF = 0;
  3910  0531  100B               	bcf	11,0	;volatile
  3911  0532                     i1l2075:	
  3912                           
  3913                           ;do_am.c: 127: }
  3914                           ;do_am.c: 128: IOCBbits.IOCB4 = 0;
  3915  0532  1683               	bsf	3,5	;RP0=1, select bank1
  3916  0533  1303               	bcf	3,6	;RP1=0, select bank1
  3917  0534  1216               	bcf	22,4	;volatile
  3918  0535  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0536  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0537  0832               	movf	??_ISR+6,w
  3921  0538  00FF               	movwf	127
  3922  0539  0831               	movf	??_ISR+5,w
  3923  053A  008A               	movwf	10
  3924  053B  0830               	movf	??_ISR+4,w
  3925  053C  0084               	movwf	4
  3926  053D  0E2F               	swapf	(??_ISR+3)^0,w
  3927  053E  0083               	movwf	3
  3928  053F  0EFE               	swapf	126,f
  3929  0540  0E7E               	swapf	126,w
  3930  0541  0009               	retfie
  3931  0542                     __end_of_ISR:	
  3932                           
  3933                           	psect	intentry
  3934  0004                     __pintentry:	
  3935                           ;incstack = 0
  3936                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3937                           
  3938  0004                     interrupt_function:	
  3939  007E                     saved_w	set	btemp
  3940  0004  00FE               	movwf	btemp
  3941  0005  0E03               	swapf	3,w
  3942  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3944  0008  00AF               	movwf	??_ISR+3
  3945  0009  0804               	movf	4,w
  3946  000A  00B0               	movwf	??_ISR+4
  3947  000B  080A               	movf	10,w
  3948  000C  00B1               	movwf	??_ISR+5
  3949  000D  087F               	movf	btemp+1,w
  3950  000E  00B2               	movwf	??_ISR+6
  3951  000F  120A  118A  2CD4   	ljmp	_ISR
  3952                           
  3953                           	psect	text18
  3954  0F5E                     __ptext18:	
  3955 ;; *************** function i1_LCDWriteString *****************
  3956 ;; Defined at:
  3957 ;;		line 279 in file "lcd_hd44780_pic16.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  msg             1    wreg     PTR const unsigned char 
  3960 ;;		 -> STR_6(4), STR_5(13), STR_4(4), STR_3(17), 
  3961 ;;		 -> STR_2(4), STR_1(17), 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  msg             1    0[BANK0 ] PTR const unsigned char 
  3964 ;;		 -> STR_6(4), STR_5(13), STR_4(4), STR_3(17), 
  3965 ;;		 -> STR_2(4), STR_1(17), 
  3966 ;;  LCDWriteStri    1    1[BANK0 ] char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         0       2       0       0       0
  3978 ;;      Temps:          1       0       0       0       0
  3979 ;;      Totals:         1       2       0       0       0
  3980 ;;Total ram usage:        3 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    2
  3983 ;; This function calls:
  3984 ;;		i1_LCDByte
  3985 ;; This function is called by:
  3986 ;;		_ISR
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function i1_LCDWriteString
  3992  0F5E                     i1_LCDWriteString:	
  3993                           
  3994                           ;incstack = 0
  3995                           ; Regs used in i1_LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3996                           ;i1LCDWriteString@msg stored from wreg
  3997  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3998  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3999  0F60  00A0               	movwf	i1LCDWriteString@msg
  4000  0F61                     i1l1993:	
  4001                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  4002                           
  4003  0F61  0820               	movf	i1LCDWriteString@msg,w
  4004  0F62  0084               	movwf	4
  4005  0F63  120A  158A  2000  120A  158A  	fcall	stringdir
  4006  0F68  3A00               	xorlw	0
  4007  0F69  1903               	btfsc	3,2
  4008  0F6A  0008               	return
  4009                           
  4010                           ;lcd_hd44780_pic16.c: 282: {
  4011                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  4012  0F6B  0820               	movf	i1LCDWriteString@msg,w
  4013  0F6C  0084               	movwf	4
  4014  0F6D  120A  158A  2000  120A  158A  	fcall	stringdir
  4015  0F72  3A25               	xorlw	37
  4016  0F73  1D03               	skipz
  4017  0F74  2F97               	goto	i1l1989
  4018                           
  4019                           ;lcd_hd44780_pic16.c: 285: {
  4020                           ;lcd_hd44780_pic16.c: 286: msg++;
  4021  0F75  3001               	movlw	1
  4022  0F76  00FC               	movwf	??i1_LCDWriteString
  4023  0F77  087C               	movf	??i1_LCDWriteString,w
  4024  0F78  07A0               	addwf	i1LCDWriteString@msg,f
  4025                           
  4026                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  4027  0F79  0820               	movf	i1LCDWriteString@msg,w
  4028  0F7A  0084               	movwf	4
  4029  0F7B  120A  158A  2000  120A  158A  	fcall	stringdir
  4030  0F80  3ED0               	addlw	-48
  4031  0F81  00FC               	movwf	??i1_LCDWriteString
  4032  0F82  087C               	movf	??i1_LCDWriteString,w
  4033  0F83  00A1               	movwf	i1LCDWriteString@cc
  4034                           
  4035                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  4036  0F84  1BA1               	btfsc	i1LCDWriteString@cc,7
  4037  0F85  2F8F               	goto	i1l1985
  4038  0F86  0821               	movf	i1LCDWriteString@cc,w
  4039  0F87  3A80               	xorlw	128
  4040  0F88  3E78               	addlw	-136
  4041  0F89  1803               	skipnc
  4042  0F8A  2F8F               	goto	i1l1985
  4043                           
  4044                           ;lcd_hd44780_pic16.c: 290: {
  4045                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  4046  0F8B  01F5               	clrf	i1LCDByte@isdata
  4047  0F8C  0AF5               	incf	i1LCDByte@isdata,f
  4048  0F8D  0821               	movf	i1LCDWriteString@cc,w
  4049  0F8E  2FA2               	goto	L5
  4050  0F8F                     i1l1985:	
  4051                           ;lcd_hd44780_pic16.c: 292: }
  4052                           
  4053                           
  4054                           ;lcd_hd44780_pic16.c: 293: else
  4055                           ;lcd_hd44780_pic16.c: 294: {
  4056                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  4057  0F8F  01F5               	clrf	i1LCDByte@isdata
  4058  0F90  0AF5               	incf	i1LCDByte@isdata,f
  4059  0F91  3025               	movlw	37
  4060  0F92  120A  118A  272C  120A  158A  	fcall	i1_LCDByte
  4061  0F97                     i1l1989:	
  4062                           ;lcd_hd44780_pic16.c: 297: }
  4063                           ;lcd_hd44780_pic16.c: 298: }
  4064                           
  4065                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  4066                           
  4067                           
  4068                           ;lcd_hd44780_pic16.c: 299: else
  4069                           ;lcd_hd44780_pic16.c: 300: {
  4070                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  4071  0F97  01F5               	clrf	i1LCDByte@isdata
  4072  0F98  0AF5               	incf	i1LCDByte@isdata,f
  4073  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  4075  0F9B  0820               	movf	i1LCDWriteString@msg,w
  4076  0F9C  0084               	movwf	4
  4077  0F9D  120A  158A  2000  120A  158A  	fcall	stringdir
  4078  0FA2                     L5:	
  4079  0FA2  120A  118A  272C  120A  158A  	fcall	i1_LCDByte
  4080                           
  4081                           ;lcd_hd44780_pic16.c: 302: }
  4082                           ;lcd_hd44780_pic16.c: 303: msg++;
  4083  0FA7  3001               	movlw	1
  4084  0FA8  00FC               	movwf	??i1_LCDWriteString
  4085  0FA9  087C               	movf	??i1_LCDWriteString,w
  4086  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  4087  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  4088  0FAC  07A0               	addwf	i1LCDWriteString@msg,f
  4089  0FAD  2F61               	goto	i1l1993
  4090  0FAE                     __end_ofi1_LCDWriteString:	
  4091                           
  4092                           	psect	text19
  4093  03CB                     __ptext19:	
  4094 ;; *************** function i1_LCDWriteInt *****************
  4095 ;; Defined at:
  4096 ;;		line 317 in file "lcd_hd44780_pic16.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  val             2    0[BANK0 ] int 
  4099 ;;  field_length    1    2[BANK0 ] char 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  LCDWriteInt     5    3[BANK0 ] unsigned char [5]
  4102 ;;  LCDWriteInt     2   10[BANK0 ] int 
  4103 ;;  LCDWriteInt     2    8[BANK0 ] int 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      void 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4113 ;;      Params:         0       3       0       0       0
  4114 ;;      Locals:         0       9       0       0       0
  4115 ;;      Temps:          2       0       0       0       0
  4116 ;;      Totals:         2      12       0       0       0
  4117 ;;Total ram usage:       14 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    2
  4120 ;; This function calls:
  4121 ;;		i1_LCDByte
  4122 ;;		i1___awdiv
  4123 ;;		i1___awmod
  4124 ;; This function is called by:
  4125 ;;		_ISR
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           
  4130                           ;psect for function i1_LCDWriteInt
  4131  03CB                     i1_LCDWriteInt:	
  4132                           
  4133                           ;lcd_hd44780_pic16.c: 319: char str[5]={-16,-16,-16,-16,-16};
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in i1_LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4137  03CB  3023               	movlw	i1LCDWriteInt@str& (0+255)
  4138  03CC  0084               	movwf	4
  4139  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  4140  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  4141  03CF  0855               	movf	LCDWriteInt@F1632,w
  4142  03D0  1383               	bcf	3,7	;select IRP bank0
  4143  03D1  0080               	movwf	0
  4144  03D2  0A84               	incf	4,f
  4145  03D3  0856               	movf	LCDWriteInt@F1632+1,w
  4146  03D4  0080               	movwf	0
  4147  03D5  0A84               	incf	4,f
  4148  03D6  0857               	movf	LCDWriteInt@F1632+2,w
  4149  03D7  0080               	movwf	0
  4150  03D8  0A84               	incf	4,f
  4151  03D9  0858               	movf	LCDWriteInt@F1632+3,w
  4152  03DA  0080               	movwf	0
  4153  03DB  0A84               	incf	4,f
  4154  03DC  0859               	movf	LCDWriteInt@F1632+4,w
  4155  03DD  0080               	movwf	0
  4156                           
  4157                           ;lcd_hd44780_pic16.c: 320: int i=4,j=0;
  4158  03DE  3004               	movlw	4
  4159  03DF  00AA               	movwf	i1LCDWriteInt@i
  4160  03E0  3000               	movlw	0
  4161  03E1  00AB               	movwf	i1LCDWriteInt@i+1
  4162  03E2  01A8               	clrf	i1LCDWriteInt@j
  4163  03E3  01A9               	clrf	i1LCDWriteInt@j+1
  4164                           
  4165                           ;lcd_hd44780_pic16.c: 323: if(val<0)
  4166  03E4  1FA1               	btfss	i1LCDWriteInt@val+1,7
  4167  03E5  2BF5               	goto	i1l2013
  4168                           
  4169                           ;lcd_hd44780_pic16.c: 324: {
  4170                           ;lcd_hd44780_pic16.c: 325: (LCDByte('-',1));
  4171  03E6  01F5               	clrf	i1LCDByte@isdata
  4172  03E7  0AF5               	incf	i1LCDByte@isdata,f
  4173  03E8  302D               	movlw	45
  4174  03E9  120A  118A  272C  120A  118A  	fcall	i1_LCDByte
  4175                           
  4176                           ;lcd_hd44780_pic16.c: 326: val=val*-1;
  4177  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  4178  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  4179  03F0  09A0               	comf	i1LCDWriteInt@val,f
  4180  03F1  09A1               	comf	i1LCDWriteInt@val+1,f
  4181  03F2  0AA0               	incf	i1LCDWriteInt@val,f
  4182  03F3  1903               	skipnz
  4183  03F4  0AA1               	incf	i1LCDWriteInt@val+1,f
  4184  03F5                     i1l2013:	
  4185                           ;lcd_hd44780_pic16.c: 327: }
  4186                           ;lcd_hd44780_pic16.c: 329: while(val)
  4187                           
  4188  03F5  0820               	movf	i1LCDWriteInt@val,w
  4189  03F6  0421               	iorwf	i1LCDWriteInt@val+1,w
  4190  03F7  1903               	btfsc	3,2
  4191  03F8  2C2A               	goto	i1l2015
  4192                           
  4193                           ;lcd_hd44780_pic16.c: 330: {
  4194                           ;lcd_hd44780_pic16.c: 331: str[i]=val%10;
  4195  03F9  300A               	movlw	10
  4196  03FA  00F0               	movwf	i1___awmod@divisor
  4197  03FB  3000               	movlw	0
  4198  03FC  00F1               	movwf	i1___awmod@divisor+1
  4199  03FD  0821               	movf	i1LCDWriteInt@val+1,w
  4200  03FE  00F3               	movwf	i1___awmod@dividend+1
  4201  03FF  0820               	movf	i1LCDWriteInt@val,w
  4202  0400  00F2               	movwf	i1___awmod@dividend
  4203  0401  120A  158A  267A  120A  118A  	fcall	i1___awmod
  4204  0406  0870               	movf	?i1___awmod,w
  4205  0407  00FC               	movwf	??i1_LCDWriteInt
  4206  0408  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0409  1303               	bcf	3,6	;RP1=0, select bank0
  4208  040A  082A               	movf	i1LCDWriteInt@i,w
  4209  040B  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4210  040C  0084               	movwf	4
  4211  040D  087C               	movf	??i1_LCDWriteInt,w
  4212  040E  1383               	bcf	3,7	;select IRP bank0
  4213  040F  0080               	movwf	0
  4214                           
  4215                           ;lcd_hd44780_pic16.c: 332: val=val/10;
  4216  0410  300A               	movlw	10
  4217  0411  00F0               	movwf	i1___awdiv@divisor
  4218  0412  3000               	movlw	0
  4219  0413  00F1               	movwf	i1___awdiv@divisor+1
  4220  0414  0821               	movf	i1LCDWriteInt@val+1,w
  4221  0415  00F3               	movwf	i1___awdiv@dividend+1
  4222  0416  0820               	movf	i1LCDWriteInt@val,w
  4223  0417  00F2               	movwf	i1___awdiv@dividend
  4224  0418  120A  118A  26D3  120A  118A  	fcall	i1___awdiv
  4225  041D  0871               	movf	?i1___awdiv+1,w
  4226  041E  1283               	bcf	3,5	;RP0=0, select bank0
  4227  041F  1303               	bcf	3,6	;RP1=0, select bank0
  4228  0420  00A1               	movwf	i1LCDWriteInt@val+1
  4229  0421  0870               	movf	?i1___awdiv,w
  4230  0422  00A0               	movwf	i1LCDWriteInt@val
  4231                           
  4232                           ;lcd_hd44780_pic16.c: 333: i--;
  4233  0423  30FF               	movlw	255
  4234  0424  07AA               	addwf	i1LCDWriteInt@i,f
  4235  0425  1803               	skipnc
  4236  0426  0AAB               	incf	i1LCDWriteInt@i+1,f
  4237  0427  30FF               	movlw	255
  4238  0428  07AB               	addwf	i1LCDWriteInt@i+1,f
  4239  0429  2BF5               	goto	i1l2013
  4240  042A                     i1l2015:	
  4241                           
  4242                           ;lcd_hd44780_pic16.c: 334: }
  4243                           ;lcd_hd44780_pic16.c: 335: if(field_length==-1)
  4244  042A  0A22               	incf	i1LCDWriteInt@field_length,w
  4245  042B  1903               	btfsc	3,2
  4246  042C  2C3F               	goto	i1l2023
  4247                           
  4248                           ;lcd_hd44780_pic16.c: 337: else
  4249                           ;lcd_hd44780_pic16.c: 338: j=5-field_length;
  4250                           
  4251                           ;lcd_hd44780_pic16.c: 336: while(str[j]==-16) j++;
  4252  042D  0822               	movf	i1LCDWriteInt@field_length,w
  4253  042E  00FC               	movwf	??i1_LCDWriteInt
  4254  042F  01FD               	clrf	??i1_LCDWriteInt+1
  4255  0430  1BFC               	btfsc	??i1_LCDWriteInt,7
  4256  0431  03FD               	decf	??i1_LCDWriteInt+1,f
  4257  0432  09FC               	comf	??i1_LCDWriteInt,f
  4258  0433  09FD               	comf	??i1_LCDWriteInt+1,f
  4259  0434  0AFC               	incf	??i1_LCDWriteInt,f
  4260  0435  1903               	skipnz
  4261  0436  0AFD               	incf	??i1_LCDWriteInt+1,f
  4262  0437  087C               	movf	??i1_LCDWriteInt,w
  4263  0438  3E05               	addlw	5
  4264  0439  00A8               	movwf	i1LCDWriteInt@j
  4265  043A  087D               	movf	??i1_LCDWriteInt+1,w
  4266  043B  1803               	skipnc
  4267  043C  3E01               	addlw	1
  4268  043D  3E00               	addlw	0
  4269  043E  00A9               	movwf	i1LCDWriteInt@j+1
  4270  043F                     i1l2023:	
  4271                           
  4272                           ;lcd_hd44780_pic16.c: 341: for(i=j;i<5;i++)
  4273  043F  0829               	movf	i1LCDWriteInt@j+1,w
  4274  0440  00AB               	movwf	i1LCDWriteInt@i+1
  4275  0441  0828               	movf	i1LCDWriteInt@j,w
  4276  0442  00AA               	movwf	i1LCDWriteInt@i
  4277  0443                     L6:	
  4278  0443  082B               	movf	i1LCDWriteInt@i+1,w
  4279  0444  3A80               	xorlw	128
  4280  0445  00FF               	movwf	127
  4281  0446  3080               	movlw	128
  4282  0447  027F               	subwf	127,w
  4283  0448  1D03               	skipz
  4284  0449  2C4C               	goto	u230_25
  4285  044A  3005               	movlw	5
  4286  044B  022A               	subwf	i1LCDWriteInt@i,w
  4287  044C                     u230_25:	
  4288  044C  1803               	btfsc	3,0
  4289  044D  0008               	return
  4290                           
  4291                           ;lcd_hd44780_pic16.c: 342: {
  4292                           ;lcd_hd44780_pic16.c: 343: (LCDByte(48+str[i],1));
  4293  044E  01F5               	clrf	i1LCDByte@isdata
  4294  044F  0AF5               	incf	i1LCDByte@isdata,f
  4295  0450  1283               	bcf	3,5	;RP0=0, select bank0
  4296  0451  1303               	bcf	3,6	;RP1=0, select bank0
  4297  0452  082A               	movf	i1LCDWriteInt@i,w
  4298  0453  3E23               	addlw	(low (i1LCDWriteInt@str| 0))& (0+255)
  4299  0454  0084               	movwf	4
  4300  0455  1383               	bcf	3,7	;select IRP bank0
  4301  0456  0800               	movf	0,w
  4302  0457  3E30               	addlw	48
  4303  0458  120A  118A  272C  120A  118A  	fcall	i1_LCDByte
  4304  045D  3001               	movlw	1
  4305  045E  1283               	bcf	3,5	;RP0=0, select bank0
  4306  045F  1303               	bcf	3,6	;RP1=0, select bank0
  4307  0460  07AA               	addwf	i1LCDWriteInt@i,f
  4308  0461  1803               	skipnc
  4309  0462  0AAB               	incf	i1LCDWriteInt@i+1,f
  4310  0463  3000               	movlw	0
  4311  0464  07AB               	addwf	i1LCDWriteInt@i+1,f
  4312  0465  2C43               	goto	L6
  4313  0466                     __end_ofi1_LCDWriteInt:	
  4314                           
  4315                           	psect	text20
  4316  0E7A                     __ptext20:	
  4317 ;; *************** function i1___awmod *****************
  4318 ;; Defined at:
  4319 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  divisor         2    0[COMMON] int 
  4322 ;;  dividend        2    2[COMMON] int 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  __awmod         1    6[COMMON] unsigned char 
  4325 ;;  __awmod         1    5[COMMON] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  2    0[COMMON] int 
  4328 ;; Registers used:
  4329 ;;		wreg, status,2, status,0
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4335 ;;      Params:         4       0       0       0       0
  4336 ;;      Locals:         2       0       0       0       0
  4337 ;;      Temps:          1       0       0       0       0
  4338 ;;      Totals:         7       0       0       0       0
  4339 ;;Total ram usage:        7 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; This function calls:
  4342 ;;		Nothing
  4343 ;; This function is called by:
  4344 ;;		i1_LCDWriteInt
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           
  4349                           ;psect for function i1___awmod
  4350  0E7A                     i1___awmod:	
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  4354  0E7A  01F6               	clrf	i1___awmod@sign
  4355  0E7B  1FF3               	btfss	i1___awmod@dividend+1,7
  4356  0E7C  2E84               	goto	i1l1799
  4357  0E7D  09F2               	comf	i1___awmod@dividend,f
  4358  0E7E  09F3               	comf	i1___awmod@dividend+1,f
  4359  0E7F  0AF2               	incf	i1___awmod@dividend,f
  4360  0E80  1903               	skipnz
  4361  0E81  0AF3               	incf	i1___awmod@dividend+1,f
  4362  0E82  01F6               	clrf	i1___awmod@sign
  4363  0E83  0AF6               	incf	i1___awmod@sign,f
  4364  0E84                     i1l1799:	
  4365  0E84  1FF1               	btfss	i1___awmod@divisor+1,7
  4366  0E85  2E8B               	goto	i1l1803
  4367  0E86  09F0               	comf	i1___awmod@divisor,f
  4368  0E87  09F1               	comf	i1___awmod@divisor+1,f
  4369  0E88  0AF0               	incf	i1___awmod@divisor,f
  4370  0E89  1903               	skipnz
  4371  0E8A  0AF1               	incf	i1___awmod@divisor+1,f
  4372  0E8B                     i1l1803:	
  4373  0E8B  0870               	movf	i1___awmod@divisor,w
  4374  0E8C  0471               	iorwf	i1___awmod@divisor+1,w
  4375  0E8D  1903               	btfsc	3,2
  4376  0E8E  2EB8               	goto	i1l1821
  4377  0E8F  01F5               	clrf	i1___awmod@counter
  4378  0E90  0AF5               	incf	i1___awmod@counter,f
  4379  0E91                     i1l1811:	
  4380  0E91  1BF1               	btfsc	i1___awmod@divisor+1,7
  4381  0E92  2E9F               	goto	i1l1813
  4382  0E93  3001               	movlw	1
  4383  0E94                     u205_25:	
  4384  0E94  1003               	clrc
  4385  0E95  0DF0               	rlf	i1___awmod@divisor,f
  4386  0E96  0DF1               	rlf	i1___awmod@divisor+1,f
  4387  0E97  3EFF               	addlw	-1
  4388  0E98  1D03               	skipz
  4389  0E99  2E94               	goto	u205_25
  4390  0E9A  3001               	movlw	1
  4391  0E9B  00F4               	movwf	??i1___awmod
  4392  0E9C  0874               	movf	??i1___awmod,w
  4393  0E9D  07F5               	addwf	i1___awmod@counter,f
  4394  0E9E  2E91               	goto	i1l1811
  4395  0E9F                     i1l1813:	
  4396  0E9F  0871               	movf	i1___awmod@divisor+1,w
  4397  0EA0  0273               	subwf	i1___awmod@dividend+1,w
  4398  0EA1  1D03               	skipz
  4399  0EA2  2EA5               	goto	u207_25
  4400  0EA3  0870               	movf	i1___awmod@divisor,w
  4401  0EA4  0272               	subwf	i1___awmod@dividend,w
  4402  0EA5                     u207_25:	
  4403  0EA5  1C03               	skipc
  4404  0EA6  2EAD               	goto	i1l1817
  4405  0EA7  0870               	movf	i1___awmod@divisor,w
  4406  0EA8  02F2               	subwf	i1___awmod@dividend,f
  4407  0EA9  0871               	movf	i1___awmod@divisor+1,w
  4408  0EAA  1C03               	skipc
  4409  0EAB  03F3               	decf	i1___awmod@dividend+1,f
  4410  0EAC  02F3               	subwf	i1___awmod@dividend+1,f
  4411  0EAD                     i1l1817:	
  4412  0EAD  3001               	movlw	1
  4413  0EAE                     u208_25:	
  4414  0EAE  1003               	clrc
  4415  0EAF  0CF1               	rrf	i1___awmod@divisor+1,f
  4416  0EB0  0CF0               	rrf	i1___awmod@divisor,f
  4417  0EB1  3EFF               	addlw	-1
  4418  0EB2  1D03               	skipz
  4419  0EB3  2EAE               	goto	u208_25
  4420  0EB4  3001               	movlw	1
  4421  0EB5  02F5               	subwf	i1___awmod@counter,f
  4422  0EB6  1D03               	btfss	3,2
  4423  0EB7  2E9F               	goto	i1l1813
  4424  0EB8                     i1l1821:	
  4425  0EB8  0876               	movf	i1___awmod@sign,w
  4426  0EB9  1903               	btfsc	3,2
  4427  0EBA  2EC0               	goto	i1l1825
  4428  0EBB  09F2               	comf	i1___awmod@dividend,f
  4429  0EBC  09F3               	comf	i1___awmod@dividend+1,f
  4430  0EBD  0AF2               	incf	i1___awmod@dividend,f
  4431  0EBE  1903               	skipnz
  4432  0EBF  0AF3               	incf	i1___awmod@dividend+1,f
  4433  0EC0                     i1l1825:	
  4434  0EC0  0873               	movf	i1___awmod@dividend+1,w
  4435  0EC1  00F1               	movwf	?i1___awmod+1
  4436  0EC2  0872               	movf	i1___awmod@dividend,w
  4437  0EC3  00F0               	movwf	?i1___awmod
  4438  0EC4  0008               	return
  4439  0EC5                     __end_ofi1___awmod:	
  4440                           
  4441                           	psect	text21
  4442  06D3                     __ptext21:	
  4443 ;; *************** function i1___awdiv *****************
  4444 ;; Defined at:
  4445 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  divisor         2    0[COMMON] int 
  4448 ;;  dividend        2    2[COMMON] int 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  __awdiv         2    7[COMMON] int 
  4451 ;;  __awdiv         1    6[COMMON] unsigned char 
  4452 ;;  __awdiv         1    5[COMMON] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  2    0[COMMON] int 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4462 ;;      Params:         4       0       0       0       0
  4463 ;;      Locals:         4       0       0       0       0
  4464 ;;      Temps:          1       0       0       0       0
  4465 ;;      Totals:         9       0       0       0       0
  4466 ;;Total ram usage:        9 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		i1_LCDWriteInt
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function i1___awdiv
  4477  06D3                     i1___awdiv:	
  4478                           
  4479                           ;incstack = 0
  4480                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  4481  06D3  01F6               	clrf	i1___awdiv@sign
  4482  06D4  1FF1               	btfss	i1___awdiv@divisor+1,7
  4483  06D5  2EDD               	goto	i1l1755
  4484  06D6  09F0               	comf	i1___awdiv@divisor,f
  4485  06D7  09F1               	comf	i1___awdiv@divisor+1,f
  4486  06D8  0AF0               	incf	i1___awdiv@divisor,f
  4487  06D9  1903               	skipnz
  4488  06DA  0AF1               	incf	i1___awdiv@divisor+1,f
  4489  06DB  01F6               	clrf	i1___awdiv@sign
  4490  06DC  0AF6               	incf	i1___awdiv@sign,f
  4491  06DD                     i1l1755:	
  4492  06DD  1FF3               	btfss	i1___awdiv@dividend+1,7
  4493  06DE  2EE8               	goto	i1l1761
  4494  06DF  09F2               	comf	i1___awdiv@dividend,f
  4495  06E0  09F3               	comf	i1___awdiv@dividend+1,f
  4496  06E1  0AF2               	incf	i1___awdiv@dividend,f
  4497  06E2  1903               	skipnz
  4498  06E3  0AF3               	incf	i1___awdiv@dividend+1,f
  4499  06E4  3001               	movlw	1
  4500  06E5  00F4               	movwf	??i1___awdiv
  4501  06E6  0874               	movf	??i1___awdiv,w
  4502  06E7  06F6               	xorwf	i1___awdiv@sign,f
  4503  06E8                     i1l1761:	
  4504  06E8  01F7               	clrf	i1___awdiv@quotient
  4505  06E9  01F8               	clrf	i1___awdiv@quotient+1
  4506  06EA  0870               	movf	i1___awdiv@divisor,w
  4507  06EB  0471               	iorwf	i1___awdiv@divisor+1,w
  4508  06EC  1903               	btfsc	3,2
  4509  06ED  2F1F               	goto	i1l1783
  4510  06EE  01F5               	clrf	i1___awdiv@counter
  4511  06EF  0AF5               	incf	i1___awdiv@counter,f
  4512  06F0                     i1l1771:	
  4513  06F0  1BF1               	btfsc	i1___awdiv@divisor+1,7
  4514  06F1  2EFE               	goto	i1l1773
  4515  06F2  3001               	movlw	1
  4516  06F3                     u195_25:	
  4517  06F3  1003               	clrc
  4518  06F4  0DF0               	rlf	i1___awdiv@divisor,f
  4519  06F5  0DF1               	rlf	i1___awdiv@divisor+1,f
  4520  06F6  3EFF               	addlw	-1
  4521  06F7  1D03               	skipz
  4522  06F8  2EF3               	goto	u195_25
  4523  06F9  3001               	movlw	1
  4524  06FA  00F4               	movwf	??i1___awdiv
  4525  06FB  0874               	movf	??i1___awdiv,w
  4526  06FC  07F5               	addwf	i1___awdiv@counter,f
  4527  06FD  2EF0               	goto	i1l1771
  4528  06FE                     i1l1773:	
  4529  06FE  3001               	movlw	1
  4530  06FF                     u197_25:	
  4531  06FF  1003               	clrc
  4532  0700  0DF7               	rlf	i1___awdiv@quotient,f
  4533  0701  0DF8               	rlf	i1___awdiv@quotient+1,f
  4534  0702  3EFF               	addlw	-1
  4535  0703  1D03               	skipz
  4536  0704  2EFF               	goto	u197_25
  4537  0705  0871               	movf	i1___awdiv@divisor+1,w
  4538  0706  0273               	subwf	i1___awdiv@dividend+1,w
  4539  0707  1D03               	skipz
  4540  0708  2F0B               	goto	u198_25
  4541  0709  0870               	movf	i1___awdiv@divisor,w
  4542  070A  0272               	subwf	i1___awdiv@dividend,w
  4543  070B                     u198_25:	
  4544  070B  1C03               	skipc
  4545  070C  2F14               	goto	i1l1779
  4546  070D  0870               	movf	i1___awdiv@divisor,w
  4547  070E  02F2               	subwf	i1___awdiv@dividend,f
  4548  070F  0871               	movf	i1___awdiv@divisor+1,w
  4549  0710  1C03               	skipc
  4550  0711  03F3               	decf	i1___awdiv@dividend+1,f
  4551  0712  02F3               	subwf	i1___awdiv@dividend+1,f
  4552  0713  1477               	bsf	i1___awdiv@quotient,0
  4553  0714                     i1l1779:	
  4554  0714  3001               	movlw	1
  4555  0715                     u199_25:	
  4556  0715  1003               	clrc
  4557  0716  0CF1               	rrf	i1___awdiv@divisor+1,f
  4558  0717  0CF0               	rrf	i1___awdiv@divisor,f
  4559  0718  3EFF               	addlw	-1
  4560  0719  1D03               	skipz
  4561  071A  2F15               	goto	u199_25
  4562  071B  3001               	movlw	1
  4563  071C  02F5               	subwf	i1___awdiv@counter,f
  4564  071D  1D03               	btfss	3,2
  4565  071E  2EFE               	goto	i1l1773
  4566  071F                     i1l1783:	
  4567  071F  0876               	movf	i1___awdiv@sign,w
  4568  0720  1903               	btfsc	3,2
  4569  0721  2F27               	goto	i1l1787
  4570  0722  09F7               	comf	i1___awdiv@quotient,f
  4571  0723  09F8               	comf	i1___awdiv@quotient+1,f
  4572  0724  0AF7               	incf	i1___awdiv@quotient,f
  4573  0725  1903               	skipnz
  4574  0726  0AF8               	incf	i1___awdiv@quotient+1,f
  4575  0727                     i1l1787:	
  4576  0727  0878               	movf	i1___awdiv@quotient+1,w
  4577  0728  00F1               	movwf	?i1___awdiv+1
  4578  0729  0877               	movf	i1___awdiv@quotient,w
  4579  072A  00F0               	movwf	?i1___awdiv
  4580  072B  0008               	return
  4581  072C                     __end_ofi1___awdiv:	
  4582                           
  4583                           	psect	text22
  4584  0E2E                     __ptext22:	
  4585 ;; *************** function i1_LCDGotoXY *****************
  4586 ;; Defined at:
  4587 ;;		line 351 in file "lcd_hd44780_pic16.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  x               1    wreg     unsigned char 
  4590 ;;  y               1   12[COMMON] unsigned char 
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  x               1    0[BANK0 ] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4602 ;;      Params:         1       0       0       0       0
  4603 ;;      Locals:         0       1       0       0       0
  4604 ;;      Temps:          1       0       0       0       0
  4605 ;;      Totals:         2       1       0       0       0
  4606 ;;Total ram usage:        3 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    2
  4609 ;; This function calls:
  4610 ;;		i1_LCDByte
  4611 ;; This function is called by:
  4612 ;;		_ISR
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           
  4617                           ;psect for function i1_LCDGotoXY
  4618  0E2E                     i1_LCDGotoXY:	
  4619                           
  4620                           ;incstack = 0
  4621                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4622                           ;i1LCDGotoXY@x stored from wreg
  4623  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  4624  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  4625  0E30  00A0               	movwf	i1LCDGotoXY@x
  4626                           
  4627                           ;lcd_hd44780_pic16.c: 353: if(x>=20) return;
  4628  0E31  3014               	movlw	20
  4629  0E32  0220               	subwf	i1LCDGotoXY@x,w
  4630  0E33  1803               	btfsc	3,0
  4631  0E34  0008               	return
  4632  0E35  2E3F               	goto	i1l2045
  4633  0E36                     i1l146:	
  4634                           ;lcd_hd44780_pic16.c: 361: case 1:
  4635                           
  4636                           ;lcd_hd44780_pic16.c: 360: break;
  4637                           
  4638                           ;lcd_hd44780_pic16.c: 358: {
  4639                           ;lcd_hd44780_pic16.c: 359: case 0:
  4640                           
  4641                           ;lcd_hd44780_pic16.c: 357: switch(y)
  4642                           
  4643                           
  4644                           ;lcd_hd44780_pic16.c: 362: x|=0b01000000;
  4645  0E36  1720               	bsf	i1LCDGotoXY@x,6
  4646                           
  4647                           ;lcd_hd44780_pic16.c: 363: break;
  4648  0E37  2E4D               	goto	i1l145
  4649  0E38                     i1l2039:	
  4650                           ;lcd_hd44780_pic16.c: 364: case 2:
  4651                           
  4652                           
  4653                           ;lcd_hd44780_pic16.c: 365: x+=0x14;
  4654  0E38  3014               	movlw	20
  4655  0E39  2E3B               	goto	L7
  4656  0E3A                     i1l2041:	
  4657                           ;lcd_hd44780_pic16.c: 367: case 3:
  4658                           
  4659                           ;lcd_hd44780_pic16.c: 366: break;
  4660                           
  4661                           
  4662                           ;lcd_hd44780_pic16.c: 368: x+=0x54;
  4663  0E3A  3054               	movlw	84
  4664  0E3B                     L7:	
  4665  0E3B  00FD               	movwf	??i1_LCDGotoXY
  4666  0E3C  087D               	movf	??i1_LCDGotoXY,w
  4667  0E3D  07A0               	addwf	i1LCDGotoXY@x,f
  4668                           
  4669                           ;lcd_hd44780_pic16.c: 370: }
  4670                           
  4671                           ;lcd_hd44780_pic16.c: 369: break;
  4672  0E3E  2E4D               	goto	i1l145
  4673  0E3F                     i1l2045:	
  4674  0E3F  087C               	movf	i1LCDGotoXY@y,w
  4675                           
  4676                           ; Switch size 1, requested type "space"
  4677                           ; Number of cases is 4, Range of values is 0 to 3
  4678                           ; switch strategies available:
  4679                           ; Name         Instructions Cycles
  4680                           ; simple_byte           13     7 (average)
  4681                           ; direct_byte           20     8 (fixed)
  4682                           ; jumptable            260     6 (fixed)
  4683                           ;	Chosen strategy is simple_byte
  4684  0E40  3A00               	xorlw	0	; case 0
  4685  0E41  1903               	skipnz
  4686  0E42  2E4D               	goto	i1l145
  4687  0E43  3A01               	xorlw	1	; case 1
  4688  0E44  1903               	skipnz
  4689  0E45  2E36               	goto	i1l146
  4690  0E46  3A03               	xorlw	3	; case 2
  4691  0E47  1903               	skipnz
  4692  0E48  2E38               	goto	i1l2039
  4693  0E49  3A01               	xorlw	1	; case 3
  4694  0E4A  1903               	skipnz
  4695  0E4B  2E3A               	goto	i1l2041
  4696  0E4C  2E4D               	goto	i1l145
  4697  0E4D                     i1l145:	
  4698                           
  4699                           ;lcd_hd44780_pic16.c: 392: x|=0b10000000;
  4700  0E4D  17A0               	bsf	i1LCDGotoXY@x,7
  4701                           
  4702                           ;lcd_hd44780_pic16.c: 393: (LCDByte(x,0));
  4703  0E4E  01F5               	clrf	i1LCDByte@isdata
  4704  0E4F  0820               	movf	i1LCDGotoXY@x,w
  4705  0E50  120A  118A  272C   	fcall	i1_LCDByte
  4706  0E53  0008               	return
  4707  0E54                     __end_ofi1_LCDGotoXY:	
  4708                           
  4709                           	psect	text23
  4710  072C                     __ptext23:	
  4711 ;; *************** function i1_LCDByte *****************
  4712 ;; Defined at:
  4713 ;;		line 80 in file "lcd_hd44780_pic16.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  c               1    wreg     unsigned char 
  4716 ;;  isdata          1    5[COMMON] unsigned char 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  c               1    8[COMMON] unsigned char 
  4719 ;;  LCDByte         1   11[COMMON] unsigned char 
  4720 ;;  LCDByte         1   10[COMMON] unsigned char 
  4721 ;;  LCDByte         1    9[COMMON] unsigned char 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      void 
  4724 ;; Registers used:
  4725 ;;		wreg, status,2, status,0, pclath, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4731 ;;      Params:         1       0       0       0       0
  4732 ;;      Locals:         4       0       0       0       0
  4733 ;;      Temps:          2       0       0       0       0
  4734 ;;      Totals:         7       0       0       0       0
  4735 ;;Total ram usage:        7 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    1
  4738 ;; This function calls:
  4739 ;;		i1_LCDBusyLoop
  4740 ;; This function is called by:
  4741 ;;		_ISR
  4742 ;;		i1_LCDWriteString
  4743 ;;		i1_LCDWriteInt
  4744 ;;		i1_LCDGotoXY
  4745 ;; This function uses a non-reentrant model
  4746 ;;
  4747                           
  4748                           
  4749                           ;psect for function i1_LCDByte
  4750  072C                     i1_LCDByte:	
  4751                           
  4752                           ;incstack = 0
  4753                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  4754                           ;i1LCDByte@c stored from wreg
  4755  072C  00F8               	movwf	i1LCDByte@c
  4756                           
  4757                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  4758                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  4759                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  4760  072D  0878               	movf	i1LCDByte@c,w
  4761  072E  00F6               	movwf	??i1_LCDByte
  4762  072F  3004               	movlw	4
  4763  0730                     u188_25:	
  4764  0730  1003               	clrc
  4765  0731  0CF6               	rrf	??i1_LCDByte,f
  4766  0732  3EFF               	addlw	-1
  4767  0733  1D03               	skipz
  4768  0734  2F30               	goto	u188_25
  4769  0735  0876               	movf	??i1_LCDByte,w
  4770  0736  00F7               	movwf	??i1_LCDByte+1
  4771  0737  0877               	movf	??i1_LCDByte+1,w
  4772  0738  00F9               	movwf	i1LCDByte@hn
  4773                           
  4774                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  4775  0739  0878               	movf	i1LCDByte@c,w
  4776  073A  390F               	andlw	15
  4777  073B  00F6               	movwf	??i1_LCDByte
  4778  073C  0876               	movf	??i1_LCDByte,w
  4779  073D  00FA               	movwf	i1LCDByte@ln
  4780                           
  4781                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  4782  073E  0875               	movf	i1LCDByte@isdata,w
  4783  073F  1D03               	btfss	3,2
  4784  0740  2F45               	goto	i1l100
  4785                           
  4786                           ;lcd_hd44780_pic16.c: 96: (RC1=0);
  4787  0741  1283               	bcf	3,5	;RP0=0, select bank0
  4788  0742  1303               	bcf	3,6	;RP1=0, select bank0
  4789  0743  1087               	bcf	7,1	;volatile
  4790  0744  2F48               	goto	i1l101
  4791  0745                     i1l100:	
  4792                           
  4793                           ;lcd_hd44780_pic16.c: 97: else
  4794                           ;lcd_hd44780_pic16.c: 98: (RC1=1);
  4795  0745  1283               	bcf	3,5	;RP0=0, select bank0
  4796  0746  1303               	bcf	3,6	;RP1=0, select bank0
  4797  0747  1487               	bsf	7,1	;volatile
  4798  0748                     i1l101:	
  4799                           
  4800                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4801  0748  2F49               	nop2	;2 cycle nop
  4802                           
  4803                           ;lcd_hd44780_pic16.c: 102: (RC3=1);
  4804  0749  1283               	bcf	3,5	;RP0=0, select bank0
  4805  074A  1303               	bcf	3,6	;RP1=0, select bank0
  4806  074B  1587               	bsf	7,3	;volatile
  4807                           
  4808                           ;lcd_hd44780_pic16.c: 106: temp=(PORTC & (~(0X0F<<4)))|((hn<<4));
  4809  074C  0879               	movf	i1LCDByte@hn,w
  4810  074D  00F6               	movwf	??i1_LCDByte
  4811  074E  3004               	movlw	4
  4812  074F                     u190_25:	
  4813  074F  1003               	clrc
  4814  0750  0DF6               	rlf	??i1_LCDByte,f
  4815  0751  3EFF               	addlw	-1
  4816  0752  1D03               	skipz
  4817  0753  2F4F               	goto	u190_25
  4818  0754  0807               	movf	7,w	;volatile
  4819  0755  390F               	andlw	15
  4820  0756  0476               	iorwf	??i1_LCDByte,w
  4821  0757  00F7               	movwf	??i1_LCDByte+1
  4822  0758  0877               	movf	??i1_LCDByte+1,w
  4823  0759  00FB               	movwf	i1LCDByte@temp
  4824                           
  4825                           ;lcd_hd44780_pic16.c: 107: PORTC=temp;
  4826  075A  087B               	movf	i1LCDByte@temp,w
  4827  075B  0087               	movwf	7	;volatile
  4828                           
  4829                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4830  075C  2F5D               	nop2	;2 cycle nop
  4831  075D  2F5E               	nop2	;2 cycle nop
  4832  075E  0000               	nop
  4833                           
  4834                           ;lcd_hd44780_pic16.c: 113: (RC3=0);
  4835  075F  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0760  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0761  1187               	bcf	7,3	;volatile
  4838                           
  4839                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4840  0762  2F63               	nop2	;2 cycle nop
  4841  0763  2F64               	nop2	;2 cycle nop
  4842  0764  0000               	nop
  4843                           
  4844                           ;lcd_hd44780_pic16.c: 118: (RC3=1);
  4845  0765  1283               	bcf	3,5	;RP0=0, select bank0
  4846  0766  1303               	bcf	3,6	;RP1=0, select bank0
  4847  0767  1587               	bsf	7,3	;volatile
  4848                           
  4849                           ;lcd_hd44780_pic16.c: 120: temp=(PORTC & (~(0X0F<<4)))|((ln<<4));
  4850  0768  087A               	movf	i1LCDByte@ln,w
  4851  0769  00F6               	movwf	??i1_LCDByte
  4852  076A  3004               	movlw	4
  4853  076B                     u191_25:	
  4854  076B  1003               	clrc
  4855  076C  0DF6               	rlf	??i1_LCDByte,f
  4856  076D  3EFF               	addlw	-1
  4857  076E  1D03               	skipz
  4858  076F  2F6B               	goto	u191_25
  4859  0770  0807               	movf	7,w	;volatile
  4860  0771  390F               	andlw	15
  4861  0772  0476               	iorwf	??i1_LCDByte,w
  4862  0773  00F7               	movwf	??i1_LCDByte+1
  4863  0774  0877               	movf	??i1_LCDByte+1,w
  4864  0775  00FB               	movwf	i1LCDByte@temp
  4865                           
  4866                           ;lcd_hd44780_pic16.c: 122: PORTC=temp;
  4867  0776  087B               	movf	i1LCDByte@temp,w
  4868  0777  0087               	movwf	7	;volatile
  4869                           
  4870                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4871  0778  2F79               	nop2	;2 cycle nop
  4872  0779  2F7A               	nop2	;2 cycle nop
  4873  077A  0000               	nop
  4874                           
  4875                           ;lcd_hd44780_pic16.c: 128: (RC3=0);
  4876  077B  1283               	bcf	3,5	;RP0=0, select bank0
  4877  077C  1303               	bcf	3,6	;RP1=0, select bank0
  4878  077D  1187               	bcf	7,3	;volatile
  4879                           
  4880                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4881  077E  2F7F               	nop2	;2 cycle nop
  4882  077F  2F80               	nop2	;2 cycle nop
  4883  0780  0000               	nop
  4884                           
  4885                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  4886  0781  120A  118A  2612   	fcall	i1_LCDBusyLoop
  4887  0784  0008               	return
  4888  0785                     __end_ofi1_LCDByte:	
  4889                           
  4890                           	psect	text24
  4891  0612                     __ptext24:	
  4892 ;; *************** function i1_LCDBusyLoop *****************
  4893 ;; Defined at:
  4894 ;;		line 135 in file "lcd_hd44780_pic16.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  LCDBusyLoop     1    4[COMMON] unsigned char 
  4899 ;;  LCDBusyLoop     1    3[COMMON] unsigned char 
  4900 ;;  LCDBusyLoop     1    2[COMMON] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4910 ;;      Params:         0       0       0       0       0
  4911 ;;      Locals:         3       0       0       0       0
  4912 ;;      Temps:          2       0       0       0       0
  4913 ;;      Totals:         5       0       0       0       0
  4914 ;;Total ram usage:        5 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		i1_LCDByte
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           
  4924                           ;psect for function i1_LCDBusyLoop
  4925  0612                     i1_LCDBusyLoop:	
  4926                           
  4927                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  4928                           
  4929                           ;incstack = 0
  4930                           ; Regs used in i1_LCDBusyLoop: [wreg+status,2+status,0]
  4931  0612  01F4               	clrf	i1LCDBusyLoop@status
  4932                           
  4933                           ;lcd_hd44780_pic16.c: 142: TRISC|=(0x0f<<4);
  4934  0613  30F0               	movlw	240
  4935  0614  00F0               	movwf	??i1_LCDBusyLoop
  4936  0615  0870               	movf	??i1_LCDBusyLoop,w
  4937  0616  1683               	bsf	3,5	;RP0=1, select bank1
  4938  0617  1303               	bcf	3,6	;RP1=0, select bank1
  4939  0618  0487               	iorwf	7,f	;volatile
  4940                           
  4941                           ;lcd_hd44780_pic16.c: 145: (RC2=1);
  4942  0619  1283               	bcf	3,5	;RP0=0, select bank0
  4943  061A  1303               	bcf	3,6	;RP1=0, select bank0
  4944  061B  1507               	bsf	7,2	;volatile
  4945                           
  4946                           ;lcd_hd44780_pic16.c: 146: (RC1=0);
  4947  061C  1087               	bcf	7,1	;volatile
  4948                           
  4949                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4950  061D  2E1E               	nop2	;2 cycle nop
  4951  061E                     i1l1463:	
  4952                           ;lcd_hd44780_pic16.c: 153: do
  4953                           
  4954                           
  4955                           ;lcd_hd44780_pic16.c: 154: {
  4956                           ;lcd_hd44780_pic16.c: 156: (RC3=1);
  4957  061E  1283               	bcf	3,5	;RP0=0, select bank0
  4958  061F  1303               	bcf	3,6	;RP1=0, select bank0
  4959  0620  1587               	bsf	7,3	;volatile
  4960                           
  4961                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4962  0621  2E22               	nop2	;2 cycle nop
  4963                           
  4964                           ;lcd_hd44780_pic16.c: 161: status=(PORTC>>4);
  4965  0622  1283               	bcf	3,5	;RP0=0, select bank0
  4966  0623  1303               	bcf	3,6	;RP1=0, select bank0
  4967  0624  0807               	movf	7,w	;volatile
  4968  0625  00F0               	movwf	??i1_LCDBusyLoop
  4969  0626  3004               	movlw	4
  4970  0627                     u136_25:	
  4971  0627  1003               	clrc
  4972  0628  0CF0               	rrf	??i1_LCDBusyLoop,f
  4973  0629  3EFF               	addlw	-1
  4974  062A  1D03               	skipz
  4975  062B  2E27               	goto	u136_25
  4976  062C  0870               	movf	??i1_LCDBusyLoop,w
  4977  062D  00F1               	movwf	??i1_LCDBusyLoop+1
  4978  062E  0871               	movf	??i1_LCDBusyLoop+1,w
  4979  062F  00F4               	movwf	i1LCDBusyLoop@status
  4980                           
  4981                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  4982  0630  0874               	movf	i1LCDBusyLoop@status,w
  4983  0631  00F0               	movwf	??i1_LCDBusyLoop
  4984  0632  3003               	movlw	3
  4985  0633                     u137_25:	
  4986  0633  1003               	clrc
  4987  0634  0DF0               	rlf	??i1_LCDBusyLoop,f
  4988  0635  3EFF               	addlw	-1
  4989  0636  1D03               	skipz
  4990  0637  2E33               	goto	u137_25
  4991  0638  1003               	clrc
  4992  0639  0D70               	rlf	??i1_LCDBusyLoop,w
  4993  063A  00F1               	movwf	??i1_LCDBusyLoop+1
  4994  063B  0871               	movf	??i1_LCDBusyLoop+1,w
  4995  063C  00F4               	movwf	i1LCDBusyLoop@status
  4996                           
  4997                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  4998  063D  2E3E               	nop2	;2 cycle nop
  4999                           
  5000                           ;lcd_hd44780_pic16.c: 167: (RC3=0);
  5001  063E  1283               	bcf	3,5	;RP0=0, select bank0
  5002  063F  1303               	bcf	3,6	;RP1=0, select bank0
  5003  0640  1187               	bcf	7,3	;volatile
  5004                           
  5005                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5006  0641  2E42               	nop2	;2 cycle nop
  5007  0642  2E43               	nop2	;2 cycle nop
  5008  0643  0000               	nop
  5009                           
  5010                           ;lcd_hd44780_pic16.c: 170: (RC3=1);
  5011  0644  1283               	bcf	3,5	;RP0=0, select bank0
  5012  0645  1303               	bcf	3,6	;RP1=0, select bank0
  5013  0646  1587               	bsf	7,3	;volatile
  5014                           
  5015                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5016  0647  2E48               	nop2	;2 cycle nop
  5017                           
  5018                           ;lcd_hd44780_pic16.c: 173: temp=(PORTC>>4);
  5019  0648  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0649  1303               	bcf	3,6	;RP1=0, select bank0
  5021  064A  0807               	movf	7,w	;volatile
  5022  064B  00F0               	movwf	??i1_LCDBusyLoop
  5023  064C  3004               	movlw	4
  5024  064D                     u138_25:	
  5025  064D  1003               	clrc
  5026  064E  0CF0               	rrf	??i1_LCDBusyLoop,f
  5027  064F  3EFF               	addlw	-1
  5028  0650  1D03               	skipz
  5029  0651  2E4D               	goto	u138_25
  5030  0652  0870               	movf	??i1_LCDBusyLoop,w
  5031  0653  00F1               	movwf	??i1_LCDBusyLoop+1
  5032  0654  0871               	movf	??i1_LCDBusyLoop+1,w
  5033  0655  00F3               	movwf	i1LCDBusyLoop@temp
  5034                           
  5035                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  5036  0656  300F               	movlw	15
  5037  0657  00F0               	movwf	??i1_LCDBusyLoop
  5038  0658  0870               	movf	??i1_LCDBusyLoop,w
  5039  0659  05F3               	andwf	i1LCDBusyLoop@temp,f
  5040                           
  5041                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  5042  065A  0874               	movf	i1LCDBusyLoop@status,w
  5043  065B  0473               	iorwf	i1LCDBusyLoop@temp,w
  5044  065C  00F0               	movwf	??i1_LCDBusyLoop
  5045  065D  0870               	movf	??i1_LCDBusyLoop,w
  5046  065E  00F4               	movwf	i1LCDBusyLoop@status
  5047                           
  5048                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  5049  065F  0874               	movf	i1LCDBusyLoop@status,w
  5050  0660  3980               	andlw	128
  5051  0661  00F0               	movwf	??i1_LCDBusyLoop
  5052  0662  0870               	movf	??i1_LCDBusyLoop,w
  5053  0663  00F2               	movwf	i1LCDBusyLoop@busy
  5054                           
  5055                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  5056  0664  2E65               	nop2	;2 cycle nop
  5057                           
  5058                           ;lcd_hd44780_pic16.c: 182: (RC3=0);
  5059  0665  1283               	bcf	3,5	;RP0=0, select bank0
  5060  0666  1303               	bcf	3,6	;RP1=0, select bank0
  5061  0667  1187               	bcf	7,3	;volatile
  5062                           
  5063                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  5064  0668  2E69               	nop2	;2 cycle nop
  5065  0669  2E6A               	nop2	;2 cycle nop
  5066  066A  0000               	nop
  5067                           
  5068                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  5069  066B  0872               	movf	i1LCDBusyLoop@busy,w
  5070  066C  1D03               	btfss	3,2
  5071  066D  2E1E               	goto	i1l1463
  5072                           
  5073                           ;lcd_hd44780_pic16.c: 186: (RC2=0);
  5074  066E  1283               	bcf	3,5	;RP0=0, select bank0
  5075  066F  1303               	bcf	3,6	;RP1=0, select bank0
  5076  0670  1107               	bcf	7,2	;volatile
  5077                           
  5078                           ;lcd_hd44780_pic16.c: 189: TRISC&=(~(0x0F<<4));
  5079  0671  300F               	movlw	15
  5080  0672  00F0               	movwf	??i1_LCDBusyLoop
  5081  0673  0870               	movf	??i1_LCDBusyLoop,w
  5082  0674  1683               	bsf	3,5	;RP0=1, select bank1
  5083  0675  1303               	bcf	3,6	;RP1=0, select bank1
  5084  0676  0587               	andwf	7,f	;volatile
  5085  0677  0008               	return
  5086  0678                     __end_ofi1_LCDBusyLoop:	
  5087  007E                     btemp	set	126	;btemp
  5088  007E                     wtemp	set	126
  5089  007E                     wtemp0	set	126
  5090  0080                     wtemp1	set	128
  5091  0082                     wtemp2	set	130
  5092  0084                     wtemp3	set	132
  5093  0086                     wtemp4	set	134
  5094  0088                     wtemp5	set	136
  5095  007F                     wtemp6	set	127
  5096  007E                     ttemp	set	126
  5097  007E                     ttemp0	set	126
  5098  0081                     ttemp1	set	129
  5099  0084                     ttemp2	set	132
  5100  0087                     ttemp3	set	135
  5101  007F                     ttemp4	set	127
  5102  007E                     ltemp	set	126
  5103  007E                     ltemp0	set	126
  5104  0082                     ltemp1	set	130
  5105  0086                     ltemp2	set	134
  5106  0080                     ltemp3	set	128


Data Sizes:
    Strings     34
    Constant    0
    Data        14
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      60
    BANK1            80     23      26
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[4]), STR_5(CODE[13]), STR_4(CODE[4]), STR_3(CODE[17]), 
		 -> STR_2(CODE[4]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LCDGotoXY
    _ISR->i1_LCDWriteInt
    i1_LCDWriteString->i1_LCDByte
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_LCDWriteInt
    _LM35ReadTemp->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    _ISR->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _main->_LM35ReadTemp
    _LM35ReadTemp->___fttol
    ___fttol->___ftmul

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14463
                                             20 BANK1      3     3      0
                            _ADCInit
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                       _LM35ReadTemp
                     _TuneButtonInit
 ---------------------------------------------------------------------------------
 (1) _TuneButtonInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM35ReadTemp                                         7     5      2    5942
                                             16 BANK1      4     2      2
                            _ReadADC
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2452
                                             27 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             41 BANK0      4     0      4
                                              6 BANK1     10    10      0
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2986
                                             31 BANK0     10     4      6
                                              0 BANK1      6     6      0
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2344
                                             19 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ReadADC                                              4     2      2      22
                                             19 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       3     3      0    1568
                                             31 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDWriteInt                                         14    11      3    2717
                                             31 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     424
                                             19 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                             19 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    1416
                                             31 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDGotoXY                                            3     2      1    1611
                                             31 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1209
                                             24 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (3) _LCDBusyLoop                                          5     5      0     117
                                             19 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    3303
                                             12 BANK0      7     7      0
                          i1_LCDByte
                        i1_LCDGotoXY
                      i1_LCDWriteInt
                   i1_LCDWriteString
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteString                                     3     3      0     662
                                             12 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (5) i1_LCDWriteInt                                       14    11      3    1553
                                             12 COMMON     2     2      0
                                              0 BANK0     12     9      3
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) i1_LCDGotoXY                                          3     2      1     605
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (6) i1_LCDByte                                            7     6      1     483
                                              5 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (7) i1_LCDBusyLoop                                        5     5      0     117
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _LM35ReadTemp
     _ReadADC
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _TuneButtonInit

 _ISR (ROOT)
   i1_LCDByte
     i1_LCDBusyLoop
   i1_LCDGotoXY
     i1_LCDByte
       i1_LCDBusyLoop
   i1_LCDWriteInt
     i1_LCDByte
       i1_LCDBusyLoop
     i1___awdiv
     i1___awmod
   i1_LCDWriteString
     i1_LCDByte
       i1_LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     17      1A       7       32.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2D      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      64      12        0.0%
ABS                  0      0      64       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Jun 14 20:58:11 2016

             ?_LCDBusyLoop 0070                 __CFG_CP$ON 0000         ??i1_LCDWriteString 007C  
                        pc 0002                         l20 07F0                         l74 020B  
              __CFG_CPD$ON 0000               ___awdiv@sign 0039                         fsr 0004  
              __CFG_LVP$ON 0000                        l100 079E                        l101 079F  
                      l145 0E73                        l146 0E5C                        l405 04B3  
                      l406 04BB                        l398 049E                        l489 0306  
                      _RA1 0029                        _RC1 0039                        _RC2 003A  
                      _RB4 0034                        _RC3 003B                        _ISR 04D4  
                      fsr0 0004            __end_of_ADCInit 0E16                        indf 0000  
             ___awmod@sign 0039               __CFG_IESO$ON 0000      LM35ReadTemp@adc_value 00B2  
  LCDWriteInt@field_length 0041            __end_of_LCDByte 07DC            __end_of_LCDInit 05AA  
             ?_LCDWriteInt 003F                       ?_ISR 0070                LCDByte@temp 003E  
                     l2201 0102                       l2141 0477                       l2205 0124  
                     l2221 028D                       l2151 04A3                       l2143 0483  
                     l2303 020E                       l2153 04AD                       l2145 0488  
                     l2137 0470                       l2241 02EA                       l2313 022E  
                     l1603 0F2A                       l2171 004D                       l1605 0F38  
                     l1613 0F51                       l2253 0319                       l2247 02F9  
                     l2239 02D8                       l1385 05B8                       l1553 068F  
                     l1617 0F59                       l1609 0F46                       l2193 00E3  
                     l2177 0068                       l2249 030B                       l2273 01E4  
                     l1571 06BB                       l1563 0697                       l1547 0684  
                     l2275 0181                       l1565 06A5                       l2189 00C1  
                     l1575 06C6                       l1591 0F1D                       l2287 01AE  
                     l1905 03A4                       l1843 0E5E                       l1579 06CE  
                     l1595 0F24                       l1845 0E60                       l1871 0FE9  
                     l1849 0E65                       l1867 0FDF                       l1875 0FB1  
                     l1895 035A                       l1897 038F                       STR_1 0806  
             __CFG_WDTE$ON 0000                       STR_2 0824                       STR_3 0806  
                     STR_4 0824                       STR_5 0817                       STR_6 0824  
                     u1205 05C1                       u1215 05CD                       u1225 05E7  
                     u1415 078B                       u1505 06A6                       u1435 07A6  
                     u1515 06B2                       u1445 07C2                       u1525 06BC  
                     u1605 0F3E                       u1615 0F47                       u2415 047C  
                     u2195 03B1                       u2435 0497                       u2611 0115  
                     u2612 0120                       u1485 069A                       u2455 04A6  
                     u2535 007C                       u1585 0F2D                       u2625 0125  
                     u2561 00D4                       u2545 0092                       u2562 00DF  
                     u2635 012E                       u2725 02FD                       u2495 04C2  
                     u2575 00E4                       u2807 025F                       u2817 07EA  
                     u2585 00ED                       u2665 029F                       u2827 0549  
                     u2765 01A8                       u2695 02D9                       u2775 0205  
                     u2797 01D9                _tuneTempDir 00B9               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _main 0167               ___ftpack@arg 0033  
   __end_of_TuneButtonInit 0DF1         __size_of_LCDGotoXY 0026               ___ftpack@exp 0036  
                     btemp 007E              __CFG_BOREN$ON 0000                       ltemp 007E  
                     start 0012                       ttemp 007E                       wtemp 007E  
i1LCDWriteInt@field_length 0022              __CFG_MCLRE$ON 0000               ___ftmul@cntr 00A4  
             ___ftmul@sign 00A5            __end_of_ReadADC 07FB                      ??_ISR 002C  
       __size_ofi1_LCDByte 0059               ___fttol@exp1 00AF               ___fttol@lval 00AB  
             ?i1_LCDGotoXY 007C                      ?_main 0070             i1___awdiv@sign 0076  
          __end_of___awdiv 06D3            __end_of___awmod 0F5E               LCDInit@style 0041  
          __end_of___ftmul 0167            ___awdiv@divisor 0033            __end_of___fttol 0330  
                    i1l100 0745                      i1l101 0748                      i1l145 0E4D  
                    i1l146 0E36            ___awdiv@counter 0038                      _PORTC 0007  
                    _TRISC 0087             i1___awmod@sign 0076              ___ftpack@sign 0037  
     __end_of_LM35ReadTemp 0F11                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            ?_TuneButtonInit 0070         __size_ofi1___awdiv 0059  
       __size_ofi1___awmod 004B            __initialization 0015               __end_of_main 0267  
                ??_ADCInit 0033                     ??_main 00B4              ___fttol@sign1 00AA  
        __end_of_LCDGotoXY 0E7A              LCDByte@isdata 0038                  ??_LCDByte 0039  
                ??_LCDInit 003F                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0035          __end_ofi1_LCDByte 0785           __end_of___ftpack 04D4  
   __size_ofi1_LCDBusyLoop 0066                     i1l2013 03F5                     i1l2023 043F  
                   i1l2015 042A                     i1l2041 0E3A                     i1l2045 0E3F  
                   i1l2039 0E38                     i1l2063 0501                     i1l2075 0532  
                   i1l1463 061E                     i1l1811 0E91                     i1l1803 0E8B  
                   i1l1813 0E9F                     i1l1821 0EB8                     i1l1761 06E8  
                   i1l1825 0EC0                     i1l1817 0EAD                     i1l1771 06F0  
                   i1l1755 06DD                     i1l1773 06FE                     i1l1783 071F  
                   i1l1787 0727                     i1l1779 0714                     i1l1799 0E84  
                   i1l1985 0F8F                     i1l1993 0F61        i1LCDBusyLoop@status 0074  
                   i1l1989 0F97                     u205_25 0E94                     u230_25 044C  
                   u207_25 0EA5                     u136_25 0627                     u208_25 0EAE  
                   u137_25 0633                     u138_25 064D                     u234_25 04FB  
                   u190_25 074F                     u191_25 076B           __end_of___lwtoft 0E2E  
                   u195_25 06F3                     u283_27 0526                     u188_25 0730  
                   u197_25 06FF                     u198_25 070B                     u199_25 0715  
                ??_ReadADC 0035             __CFG_PWRTE$OFF 0000             _LCDWriteString 0FAE  
                ??___awdiv 0037                  ??___awmod 0037                  ??___ftmul 0045  
                ??___fttol 00A6     __size_ofi1_LCDWriteInt 009B       __size_of_LCDBusyLoop 0068  
         i1LCDWriteInt@val 0020           i1LCDWriteInt@str 0023           ___awdiv@quotient 003A  
          ___awmod@divisor 0033            ___awmod@counter 0038      ___ftmul@f3_as_product 00A1  
        __end_ofi1___awdiv 072C          __end_ofi1___awmod 0EC5               LCDWriteInt@i 004B  
             LCDWriteInt@j 0049                     saved_w 007E       __size_of_LCDWriteInt 009B  
  __end_of__initialization 002D     __end_of_LCDWriteString 1000                  LCDByte@hn 003B  
                LCDByte@ln 003C                 ___ftmul@f1 003F                 ___ftmul@f2 0042  
               ___fttol@f1 0049             __pcstackCOMMON 0070               __pidataBANK0 0DD4  
             __pidataBANK1 07FB              i1_LCDBusyLoop 0612                 ___lwtoft@c 003B  
             i1LCDGotoXY@x 0020               i1LCDGotoXY@y 007C          i1LCDBusyLoop@busy 0072  
           _OPTION_REGbits 0081          i1LCDBusyLoop@temp 0073       __size_ofi1_LCDGotoXY 0026  
__size_ofi1_LCDWriteString 0050      __size_of_LM35ReadTemp 004C             i1LCDWriteInt@i 002A  
           i1LCDWriteInt@j 0028            i1LCDByte@isdata 0075              i1_LCDWriteInt 03CB  
               __pbssBANK0 005A                 __pbssBANK1 00B7            ?_LCDWriteString 0070  
               __pmaintext 0167             ?i1_LCDBusyLoop 0070                 __pintentry 0004  
                  _ADCInit 0E02               _LM35ReadTemp 0EC5                  ?___ftpack 0033  
                ?___lwtoft 003B         i1___awdiv@dividend 0072                    _LCDByte 0785  
                  _LCDInit 0542           ??_TuneButtonInit 0033             ?i1_LCDWriteInt 0020  
               __stringtab 0800                    _ReadADC 07DC         i1___awdiv@quotient 0077  
                  ___cgram 004D                    ___awdiv 0678                    ___awmod 0F11  
                  ___ftmul 0031                    ___fttol 0267                 ??___ftpack 0038  
                  __ptext1 0DE1                    __ptext2 0EC5                    __ptext3 0E16  
                  __ptext4 0267                    __ptext5 0031                    __ptext6 0466  
                  __ptext7 07DC                    __ptext8 0FAE                    __ptext9 0330  
               ??___lwtoft 003E                    _curTemp 00B7               __size_of_ISR 006E  
         ___awmod@dividend 0035                  _LCDGotoXY 0E54       end_of_initialization 002D  
                i1_LCDByte 072C            ??i1_LCDBusyLoop 0070          LCDWriteString@msg 0041  
         i1_LCDWriteString 0F5E                  _TRISBbits 0086                  _TRISCbits 0087  
          ??i1_LCDWriteInt 007C                 ?_LCDGotoXY 003F                  i1___awdiv 06D3  
                i1___awmod 0E7A                  ReadADC@ch 0036                 LCDInit@__i 0042  
               ?i1_LCDByte 0075                 LCDGotoXY@x 0041                 LCDGotoXY@y 003F  
              ___ftmul@exp 00A0              ??_LCDBusyLoop 0033        start_initialization 0015  
              __end_of_ISR 0542                 ?i1___awdiv 0070                 ?i1___awmod 0070  
            ??_LCDWriteInt 0042           ??_LCDWriteString 003F              i1LCDByte@temp 007B  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                 init_fetch0 0DF1                __pdataBANK0 004D  
              __pdataBANK1 00B9         i1___awmod@dividend 0072                   ?_ADCInit 0070  
            ??i1_LCDGotoXY 007D        __end_of_LCDBusyLoop 0612                   ?_LCDByte 0038  
                 ?_LCDInit 0070          __size_of___ftpack 006E                   LCDByte@c 003D  
                ___latbits 0002          __size_of___lwtoft 0018              __pcstackBANK0 0020  
            __pcstackBANK1 00A0                ??_LCDGotoXY 0040                i1LCDByte@hn 0079  
              i1LCDByte@ln 007A           LCDWriteInt@F1632 0055                ??i1_LCDByte 0076  
                 ?_ReadADC 0033        __end_of_LCDWriteInt 03CB                   ?___awdiv 0033  
                 ?___awmod 0033                   ?___ftmul 003F                   ?___fttol 0049  
        i1___awdiv@divisor 0070          i1___awdiv@counter 0075                  __pstrings 0800  
      __end_ofi1_LCDGotoXY 0E54            LCDBusyLoop@busy 0035                ??i1___awdiv 0074  
              ??i1___awmod 0074            LCDBusyLoop@temp 0036          interrupt_function 0004  
                 _IOCBbits 0096   __end_ofi1_LCDWriteString 0FAE                _LCDBusyLoop 05AA  
         LCDWriteString@cc 0040           __size_of_ADCInit 0014                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F           __size_of_LCDByte 0057  
         __size_of_LCDInit 0068                _LCDWriteInt 0330           __size_of_ReadADC 001F  
  __size_of_TuneButtonInit 0010      __end_ofi1_LCDBusyLoop 0678          i1___awmod@divisor 0070  
        i1___awmod@counter 0075           __size_of___awdiv 005B           __size_of___awmod 004D  
         __size_of___ftmul 0136           __size_of___fttol 00C9          LCDBusyLoop@status 0037  
                 ___ftpack 0466         __end_of__stringtab 0806                i1_LCDGotoXY 0E2E  
                 ___lwtoft 0E16                 i1LCDByte@c 0078                 _ANSELHbits 0189  
                 __ptext10 0F11                   __ptext11 0678                   __ptext20 0E7A  
                 __ptext12 0542                   __ptext21 06D3                   __ptext13 0E54  
                 __ptext22 0E2E                   __ptext14 0785                   __ptext23 072C  
                 __ptext15 05AA                   __ptext24 0612                   __ptext16 0E02  
                 __ptext17 04D4                   __ptext18 0F5E                   __ptext19 03CB  
        __CFG_BOR4V$BOR21V 0000      __end_ofi1_LCDWriteInt 0466              __size_of_main 0100  
      i1LCDWriteString@msg 0020              ?_LM35ReadTemp 00B0                   _tuneTemp 005A  
               _INTCONbits 000B                   init_ram0 0DF5                   intlevel1 0000  
           LCDWriteInt@val 003F             LCDWriteInt@str 0044         i1LCDWriteString@cc 0021  
                stringcode 0800             ??_LM35ReadTemp 004D                   stringdir 0800  
                 stringtab 0800             _TuneButtonInit 0DE1          ?i1_LCDWriteString 0070  
  __size_of_LCDWriteString 0052  
